<?xml version="1.0" ?><!DOCTYPE article PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Archiving and Interchange DTD v1.3 20210610//EN"  "JATS-archivearticle1-mathml3.dtd"><article xmlns:ali="http://www.niso.org/schemas/ali/1.0/" xmlns:xlink="http://www.w3.org/1999/xlink" article-type="research-article" dtd-version="1.3" xml:lang="en">
<front>
<journal-meta>
<journal-id journal-id-type="nlm-ta">elife</journal-id>
<journal-id journal-id-type="publisher-id">eLife</journal-id>
<journal-title-group>
<journal-title>eLife</journal-title>
</journal-title-group>
<issn publication-format="electronic" pub-type="epub">2050-084X</issn>
<publisher>
<publisher-name>eLife Sciences Publications, Ltd</publisher-name>
</publisher>
</journal-meta>
<article-meta>
<article-id pub-id-type="publisher-id">106497</article-id>
<article-id pub-id-type="doi">10.7554/eLife.106497</article-id>
<article-id pub-id-type="doi" specific-use="version">10.7554/eLife.106497.1</article-id>
<article-version-alternatives>
<article-version article-version-type="publication-state">reviewed preprint</article-version>
<article-version article-version-type="preprint-version">1.1</article-version>
</article-version-alternatives>
<article-categories><subj-group subj-group-type="heading">
<subject>Computational and Systems Biology</subject>
</subj-group>
<subj-group subj-group-type="heading">
<subject>Physics of Living Systems</subject>
</subj-group>
</article-categories><title-group>
<article-title>Designing biochemical circuits with tree search</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author" corresp="yes">
<contrib-id contrib-id-type="orcid">http://orcid.org/0000-0002-6199-6505</contrib-id>
<name>
<surname>Bhamidipati</surname>
<given-names>Pranav S</given-names>
</name>
<xref ref-type="aff" rid="a1">1</xref>
<xref ref-type="aff" rid="a2">2</xref>
<email>pbhamidi@usc.edu</email>
</contrib>
<contrib contrib-type="author" corresp="yes">
<contrib-id contrib-id-type="orcid">http://orcid.org/0000-0003-1021-1234</contrib-id>
<name>
<surname>Thomson</surname>
<given-names>Matthew</given-names>
</name>
<xref ref-type="aff" rid="a1">1</xref>
<xref ref-type="aff" rid="a3">3</xref>
<xref ref-type="aff" rid="a4">4</xref>
<email>mthomson@caltech.edu</email>
</contrib>
<aff id="a1"><label>1</label><institution-wrap><institution-id institution-id-type="ror">https://ror.org/05dxps055</institution-id><institution>Division of Biology and Biological Engineering, California Institute of Technology</institution></institution-wrap>, <city>Pasadena</city>, <country country="US">United States</country></aff>
<aff id="a2"><label>2</label><institution-wrap><institution-id institution-id-type="ror">https://ror.org/03taz7m60</institution-id><institution>Keck School of Medicine, University of Southern California</institution></institution-wrap>, <city>Los Angeles</city>, <country country="US">United States</country></aff>
<aff id="a3"><label>3</label><institution-wrap><institution-id institution-id-type="ror">https://ror.org/05dxps055</institution-id><institution>Department of Computing and Mathematical Sciences, California Institute of Technology</institution></institution-wrap>, <city>Pasadena</city>, <country country="US">United States</country></aff>
<aff id="a4"><label>4</label><institution>Beckman Center for Single-cell Profiling and Engineering</institution>, <city>Pasadena</city>, <country country="US">United States</country></aff>
</contrib-group>
<contrib-group content-type="section">
<contrib contrib-type="editor">
<name>
<surname>Gómez-Schiavon</surname>
<given-names>Mariana</given-names>
</name>
<role>Reviewing Editor</role>
<aff>
<institution-wrap>
<institution>Universidad Nacional Autónoma de México</institution>
</institution-wrap>
<city>Querétaro</city>
<country country="MX">Mexico</country>
</aff>
</contrib>
<contrib contrib-type="senior_editor">
<name>
<surname>Walczak</surname>
<given-names>Aleksandra M</given-names>
</name>
<role>Senior Editor</role>
<aff>
<institution-wrap>
<institution>CNRS</institution>
</institution-wrap>
<city>Paris</city>
<country country="FR">France</country>
</aff>
</contrib>
</contrib-group>
<author-notes>
<fn fn-type="coi-statement"><p>Competing interests: No competing interests declared</p></fn>
</author-notes>
<pub-date date-type="original-publication" iso-8601-date="2025-06-24">
<day>24</day>
<month>06</month>
<year>2025</year>
</pub-date>
<volume>14</volume>
<elocation-id>RP106497</elocation-id>
<history>
<date date-type="sent-for-review" iso-8601-date="2025-03-10">
<day>10</day>
<month>03</month>
<year>2025</year>
</date>
</history>
<pub-history>
<event>
<event-desc>Preprint posted</event-desc>
<date date-type="preprint" iso-8601-date="2025-01-29">
<day>29</day>
<month>01</month>
<year>2025</year>
</date>
<self-uri content-type="preprint" xlink:href="https://doi.org/10.1101/2025.01.27.635147"/>
</event>
</pub-history>
<permissions>
<copyright-statement>© 2025, Bhamidipati &amp; Thomson</copyright-statement>
<copyright-year>2025</copyright-year>
<copyright-holder>Bhamidipati &amp; Thomson</copyright-holder>
<ali:free_to_read/>
<license xlink:href="https://creativecommons.org/licenses/by/4.0/">
<ali:license_ref>https://creativecommons.org/licenses/by/4.0/</ali:license_ref>
<license-p>This article is distributed under the terms of the <ext-link ext-link-type="uri" xlink:href="https://creativecommons.org/licenses/by/4.0/">Creative Commons Attribution License</ext-link>, which permits unrestricted use and redistribution provided that the original author and source are credited.</license-p>
</license>
</permissions>
<self-uri content-type="pdf" xlink:href="elife-preprint-106497-v1.pdf"/>
<abstract>
<title>Abstract</title>
<p>Discovering biochemical circuits that exhibit a desired behavior is an outstanding problem in biological engineering. The traditional approach of enumerating every possible circuit topology becomes intractable for circuits with more than four components due to combinatorial scaling of the search space. Here, we use Monte Carlo Tree Search (MCTS), a reinforcement learning (RL) algorithm, to optimize circuit topology for a target phenotype by approaching circuit design as a sequence of assembly decisions. Our RL-based design framework, which we call CircuiTree, efficiently and comprehensively finds robust designs for three-component oscillators by prioritizing sparsity. CircuiTree can also infer candidate network motifs from its search results, producing similar results to enumeration. Using parallel MCTS, we scale this workflow up to five components and find that highly fault-tolerant designs use a novel strategy, which we call motif multiplexing. Multiplexed circuits contain many overlapping network motifs that each activate in different mutational scenarios. The evolutionary robustness of multiplexing may explain the ubiquity of multiple sub-oscillators in circadian clock circuits. Overall, CircuiTree provides the first scalable computational platform for designing biochemical circuits.</p>
</abstract>
<custom-meta-group>
<custom-meta specific-use="meta-only">
<meta-name>publishing-route</meta-name>
<meta-value>prc</meta-value>
</custom-meta>
</custom-meta-group>
</article-meta>
</front>
<body>
<sec id="s1">
<title>Introduction</title>
<p>Understanding how biochemical networks produce biological behavior is one of the central goals of systems and synthetic biology. Studying the design principles of these networks, or circuits, provides fundamental insights into their computational capabilities and enables the application of synthetic biology to problems such as cell-based therapeutics (<xref ref-type="bibr" rid="c33">Lim et al. (2013)</xref>; <xref ref-type="bibr" rid="c55">Williams et al. (2020</xref>)) and engineered microbial communities (<xref ref-type="bibr" rid="c30">Jones et al. (2024)</xref>; <xref ref-type="bibr" rid="c40">Purnick and Weiss (2009</xref>)). The topology, or qualitative architecture, of a synthetic gene circuit is a critical determinant of its behavior, and choosing a topology is the first step in engineering circuits with novel functions such as switching in response to an input (<xref ref-type="bibr" rid="c23">Gardner et al. (2000</xref>)), spontaneous oscillations (<xref ref-type="bibr" rid="c15">Elowitz and Leibler (2000</xref>)), or multistability (<xref ref-type="bibr" rid="c57">Zhu et al. (2022</xref>)). Circuit topologies with a particular desired phenotype have traditionally been discovered <italic>de novo</italic> using a method we call computational enumeration. Enumeration involves listing every topology in a predefined space of possibilities and simulating its behavior with an exhaustive set of random perturbations of the modeling parameters (<xref ref-type="bibr" rid="c34">Ma et al. (2009)</xref>; <xref ref-type="bibr" rid="c11">Cotterell and Sharpe (2010)</xref>; <xref ref-type="bibr" rid="c9">Chau et al. (2012)</xref>; <xref ref-type="bibr" rid="c43">Schaerli et al. (2014)</xref>; <xref ref-type="bibr" rid="c24">Gerardin et al. (2019</xref>)). This method identifies the topologies that are the most robust to parameter choice, as well as the network motifs of the phenotype, which are topological patterns overrepresented among highly robust circuits (<xref ref-type="bibr" rid="c1">Alon (2007</xref>, 2019)).</p>
<p>Currently, computational complexity has limited the role of automation in circuit design. Assuming 3 possible types of interactions (activation, inhibition, or no interaction), the number of distinct topologies that can be made with <italic>N</italic> circuit components scales as <inline-formula><inline-graphic xlink:href="635147v1_inline1.gif" mimetype="image" mime-subtype="gif"/></inline-formula>, not accounting for symmetries. Because the enumeration method requires simulating each topology in this potential space with many parameter perturbations (typically ≥ 10<sup>4</sup>), designing a five-component circuit with this approach would require on the order of 10<sup>15</sup>-10<sup>16</sup> simulations, a computationally intractable number. This “curse of dimensionality” constitutes the main barrier to understanding the structure-function relationship for large circuits. The search space can be narrowed by only considering combinations of smaller motifs (<xref ref-type="bibr" rid="c42">Qiao et al. (2019</xref>)), but this approach risks excluding novel, non-modular designs that appear at higher complexity (<xref ref-type="bibr" rid="c29">Jiménez et al. (2017</xref>)). For large circuits, a functional topology may be found with evolutionary optimization (<xref ref-type="bibr" rid="c20">François et al. (2007)</xref>; <xref ref-type="bibr" rid="c22">François and Siggia (2010</xref>)) or recurrent neural network-guided inference (<xref ref-type="bibr" rid="c46">Shen et al. (2021</xref>)), but these methods can be sensitive to the optimization parameters and the nature of the fitness land-scape, a fact that complicates inference of network motifs and other general design principles. The ideal design framework for circuit topologies would be: (i) <italic>E</italic>ffi<italic>cient</italic>: Using relatively few samples, it returns a set of reasonably robust solutions. (ii) <italic>Generalizable</italic>: It generates solutions that are representative of the ground truth, enabling inference of motifs and design principles. (iii) <italic>Scalable:</italic> It maintains features (i) and (ii) when searching large spaces of potential designs.</p>
<p>Our inspiration for a circuit design approach with these features comes from algorithms developed in modern artificial intelligence to solve decision problems, which share core computational similarities with genetic circuit design. In a decision problem, or game, one starts from an initial position (the root state) and makes a sequence of decisions ending in success or failure. Algorithms for optimal game playing sample the branching tree of possible decisions in search of the best decision sequences, or paths. Large game trees, characteristic of long, complex games like chess (∼ 10<sup>43</sup> states) and Go (10<sup>170</sup> states), can overwhelm classical exhaustive search methods (e.g., flat search, <italic>A</italic>∗, and minimax) and branch-and-bound methods (e.g., <italic>α</italic>-<italic>β</italic> pruning) (<xref ref-type="bibr" rid="c45">Shannon (1950)</xref><bold><italic>; Tromp and Farneb</italic></bold>ä<italic>ck (2007</italic>)). In contrast, most modern probabilistic search algorithms use reinforcement learning (RL) to sample decision paths; for example, Monte Carlo tree search (MCTS) uses an RL decision rule that optimistically estimates the success of each possible decision (<xref ref-type="bibr" rid="c31">Kocsis and Szepesvári (2006</xref>)). MCTS has proven to be instrumental in solving large games (<xref ref-type="bibr" rid="c47">Silver et al. (2016</xref>, 2018)) due to its low memory footprint, ability to be parallelized (<xref ref-type="bibr" rid="c16">Enzenberger and Müller (2010</xref>)), balance of exploitation and exploration (<xref ref-type="bibr" rid="c4">Auer et al. (2002</xref>)), and myriad variations (<xref ref-type="bibr" rid="c6">Świechowski. (2022</xref>); <xref ref-type="bibr" rid="c6">Browne et al. (2012</xref>)).</p>
<p>In this work, we present a circuit design platform based on tree search. This platform, which we call CircuiTree, approaches circuit design as a sequence of assembly decisions and optimizes the circuit topology for a given phenotype by using MCTS to search the tree of possible circuit assemblies. We first used CircuiTree to search a trial space – all 3,325 connected circuits with three transcription factors – for topologies that exhibit spontaneous, sustained oscillations. As it dynamically explores the search space, CircuiTree discovers sparse oscillators before complex ones and reliably identifies the most robust topologies. Next, we demonstrate that CircuiTree accurately identifies assembly motifs, which are overrepresented search states analogous to network motifs found by enumeration. The best assembly motifs for 3-component oscillators also contain the activator-inhibitor (AI) and/or repressor (Rep) motifs, a result consistent with previous studies of 2- and 3-component oscillators. Finally, we use a parallelized implementation of CircuiTree to study mutational tolerance in large circuits. We discover that highly fault-tolerant five-component oscillator circuits are “multiplexed” in that they contain multiple AI and Rep motifs that are syner-gistically interleaved such that the oscillations are robust to complete and partial knockdowns of single genes. Our results demonstrate that CircuiTree’s RL-based framework enables the efficient, generalizable, and scalable design of biochemical circuits, which could be used to engineer and understand complex intracellular and multicellular biological systems.</p>
</sec>
<sec id="s2">
<title>Results</title>
<sec id="s2a">
<title>Circuit design as an assembly game</title>
<p>We define a circuit as a system of <italic>k</italic> dynamically interacting biochemical species <bold>x</bold> = [<italic>x</italic><sub>0</sub>, …, <italic>x</italic><sub><italic>k</italic></sub>] characterized by its qualitative topology <italic>s</italic>, a member of the set of possible topologies 𝒮, and its parameters <italic>θ</italic> ∈ ℝ<sup><italic>n</italic>(<italic>s</italic>)</sup>, which describe the rates of biochemical reactions. We also assume the existence of a phenotype function <italic>f</italic> (<bold>x</bold>(<italic>t</italic>)) = <italic>q</italic> ∈ {0, 1} that returns a yes-or-no verdict as to whether a given simulation <bold>x</bold>(<italic>t</italic>) exhibits the desired phenotype. This function, which we conceptualize quite generally, may represent the presence of a dynamical phenotype such as adaptation or oscillation or a more general property such as multistability. Like many prior computational studies of design principles (<xref ref-type="bibr" rid="c34">Ma et al. (2009)</xref>; <xref ref-type="bibr" rid="c9">Chau et al. (2012)</xref>; <xref ref-type="bibr" rid="c11">Cotterell and Sharpe (2010)</xref>; <xref ref-type="bibr" rid="c43">Schaerli et al. (2014</xref>)), each simulation of the system is performed with a set of randomly chosen parameters, and we define robustness <italic>Q</italic>(<italic>s</italic>) as the mean phenotype score from these samples <italic>Q</italic>(<italic>s</italic>) = 𝔼<sub><italic>θ</italic></sub>[<italic>q</italic>(<italic>s</italic>)] = 𝔼<sub><italic>θ</italic></sub> [<italic>f</italic> (<bold>x</bold>(<italic>t</italic>; <italic>s, θ</italic>))]. The most robust topology <italic>s</italic>∗ is therefore the solution to a combinatorial optimization problem. (Note that <italic>Q</italic> in this context should not be confused with the value function used in RL.)
<disp-formula id="eqn1">
<graphic xlink:href="635147v1_eqn1.gif" mimetype="image" mime-subtype="gif"/>
</disp-formula>
</p>
<p>In this work, for convenience, we consider models where all topologies are governed by the same reaction parameters (i.e. <italic>n</italic>(<italic>s</italic><sub><italic>i</italic></sub>) = <italic>n</italic>(<italic>s</italic><sub><italic>j</italic></sub>)∀<italic>s</italic><sub><italic>i</italic></sub>, <italic>s</italic><sub><italic>j</italic></sub> ∈ 𝒮), but CircuiTree does not require this assumption.</p>
<p>To solve <xref ref-type="disp-formula" rid="eqn1">Equation 1</xref>, we approach circuit topology design as a multi-step decision problem, or game (<xref rid="fig1" ref-type="fig">Figure 1A</xref>). Beginning with an “empty” circuit <italic>s</italic><sub>0</sub> with a given set of components and without interactions, each step of the game can add an activating or inhibitory (auto-)regulatory interaction. The game ends when the builder chooses to “terminate” the assembly at some topology <italic>s</italic><sub><italic>i</italic></sub>, at which point the outcome is decided by a simulation with a win probability <italic>Q</italic>(<italic>s</italic><sub><italic>i</italic></sub>). In the language of Markov decision processes (MDPs), each topology <italic>s</italic> represents a state of the game, and the addition of an interaction or the termination of assembly represents an action <italic>a</italic> that converts a state <italic>s</italic><sub><italic>i</italic></sub> to a different state <italic>s</italic><sub><italic>j</italic></sub>. Each playout of the game traces a path on the tree of possible decisions <italic>T</italic> rooted at <italic>s</italic><sub>0</sub>. The nodes in the tree are circuit topologies 𝒮, and each directed edge (<italic>s</italic><sub><italic>i</italic></sub>, <italic>s</italic><sub><italic>j</italic></sub>) ∈ <italic>ε</italic> represents the assembly of <italic>s</italic><sub><italic>j</italic></sub> from <italic>s</italic><sub><italic>i</italic></sub> by an action. Note that because multiple decision paths can converge on the same <italic>s</italic><sub><italic>j</italic></sub>, <italic>T</italic> is technically a directed acyclic graph (DAG), but we will call it a tree for simplicity.</p>
<fig id="fig1" position="float" fig-type="figure">
<label>Figure 1.</label>
<caption>
<title>A stepwise assembly framework enables circuit topology optimization with tree search.</title>
<p>(A) Circuit topologies are built step-by-step by adding interactions until the game is ended by taking the “terminate” action (the STOP sign). (B) Each MCTS iteration undergoes four phases: (1) Selection: The UCT criterion is used to recursively select the most promising action <inline-formula><inline-graphic xlink:href="635147v1_inline21.gif" mimetype="image" mime-subtype="gif"/></inline-formula> from the current state <italic>s</italic><sub><italic>i</italic></sub>. (2) Expansion: If the edge <inline-formula><inline-graphic xlink:href="635147v1_inline22.gif" mimetype="image" mime-subtype="gif"/></inline-formula> has not been sampled yet, it is added to the tree. (3) Simulation: If the circuit has not been completed yet, take random assembly moves until “terminate” is chosen. Simulate the resulting topology with random parameters and evaluate the reward <italic>q</italic> based on a target phenotype. (4) Backpropagation: update the history of rewards <italic>r</italic><sub><italic>ij</italic></sub> over past visits <italic>υ</italic><sub><italic>ij</italic></sub> for the visited edges <inline-formula><inline-graphic xlink:href="635147v1_inline23.gif" mimetype="image" mime-subtype="gif"/></inline-formula>. (C) The UCT policy for selecting <inline-formula><inline-graphic xlink:href="635147v1_inline24.gif" mimetype="image" mime-subtype="gif"/></inline-formula> balances exploitation and exploration based on past trials. The exploration term, tuned by a hyperparameter <italic>c</italic>, favors actions that are under-sampled relative to the alternatives. (D) Once assembled, a motif creates an enriched subgraph in the search graph.</p></caption>
<graphic xlink:href="635147v1_fig1.tif" mimetype="image" mime-subtype="tiff"/>
</fig>
<p>For large design spaces, it is computationally infeasible to estimate <italic>Q</italic>(<italic>s</italic>) for every <italic>s</italic> ∈ <italic>T</italic>. Instead, we iteratively sample from <italic>T</italic> using Monte Carlo tree search (MCTS), an RL algorithm commonly used in MDPs and game-playing artificial intelligences (<xref ref-type="bibr" rid="c47">Silver et al. (2016</xref>, 2017, 2018)) to bound the complexity of searching large decision trees. In these applications, tree search is used during game play (and sometimes also during training) to find the best move by simulating many hypothetical scenarios forward in time.</p>
<p>Each MCTS iteration starts at the root state <italic>s</italic><sub>0</sub> and undergoes four phases, shown in <xref rid="fig1" ref-type="fig">Figure 1B</xref> and described in Algorithm 1. The key innovation of MCTS occurs during the first phase (selection), when it uses the UCT criterion from RL to choose moves while balancing (i) exploitation of moves that have yielded high rewards in the past and (ii) exploration of new moves that may yield higher rewards. At each branch (<xref rid="fig1" ref-type="fig">Figure 1C</xref>, left), from a state <italic>s</italic><sub><italic>i</italic></sub>, multiple actions <italic>a</italic><sub><italic>j</italic></sub> are available that have yielded cumulative rewards <italic>r</italic><sub><italic>ij</italic></sub> over <italic>υ</italic><sub><italic>ij</italic></sub> previous visits. MCTS decides the optimal action using the decision policy <inline-formula><inline-graphic xlink:href="635147v1_inline2.gif" mimetype="image" mime-subtype="gif"/></inline-formula> UCT(<italic>i, j</italic>) (<xref rid="fig1" ref-type="fig">Figure 1C</xref>, right), originally developed to solve the classic multi-armed bandit problem <xref ref-type="bibr" rid="c4">Auer et al. (2002</xref>).
<disp-formula id="eqn2">
<graphic xlink:href="635147v1_eqn2.gif" mimetype="image" mime-subtype="gif"/>
</disp-formula>
</p>
<p>The first term of the UCT criterion estimates the mean reward of the move <italic>s</italic><sub><italic>i</italic></sub> → <italic>s</italic><sub><italic>j</italic></sub>, while the second term, derived from Hoeffding’s inequality (<xref ref-type="bibr" rid="c31">Kocsis and Szepesvári (2006</xref>)), is an estimated upper bound on the sampling error. The second term ensures that a move with a historically low reward but relatively few samples (<italic>υ</italic><sub><italic>j</italic></sub> &lt;&lt; ∑<sub><italic>j</italic></sub> <italic>υ</italic><sub><italic>ij</italic></sub>) will still be tried occasionally to account for insufficient sample size. Thus, UCT is an optimistic predictor of a move’s true mean reward. Note that the two terms encourage exploitation and exploration, respectively. (By definition, UCT(<italic>i, j</italic>) = +∞ if <italic>s</italic><sub><italic>i</italic></sub> → <italic>s</italic><sub><italic>j</italic></sub> has not been visited before).</p>
<p>Using the UCT criterion, actions are selected recursively, breaking any ties randomly, until the new state <italic>s</italic><sub><italic>j</italic></sub> is terminal (i.e. the assembly is finished) or has not been visited before during sampling. An unvisited <italic>s</italic><sub><italic>j</italic></sub> is added to <italic>T</italic>. Then, during the simulation phase, the outcome <italic>q</italic> of the trial is determined by taking random actions until the “terminate” action is chosen and simulating the resulting topology with randomly chosen reaction parameters and initial conditions. Finally, the history of rewards and visits is updated for each selected edge in <italic>T</italic> (backpropagation).</p>
<p>In addition to finding individual circuit topologies, an important goal of circuit design is to identify specific structural features, or network motifs, that lead to successful designs (<xref ref-type="bibr" rid="c35">Milo et al. (2002)</xref>; <xref ref-type="bibr" rid="c1">Alon (2007)</xref>; <xref ref-type="bibr" rid="c34">Ma et al. (2009)</xref>; <xref ref-type="bibr" rid="c11">Cotterell and Sharpe (2010)</xref>; <xref ref-type="bibr" rid="c44">Shah and Sarkar (2011)</xref>; <xref ref-type="bibr" rid="c9">Chau et al. (2012)</xref>; <xref ref-type="bibr" rid="c33">Lim et al. (2013)</xref>; <xref ref-type="bibr" rid="c43">Schaerli et al. (2014</xref>)). Similarly, in our game-playing paradigm, a motif of the assembly game is a series of moves (an assembly <italic>strategy</italic>) that leads to topologies with a high rate of phenotypic success, on average. Thus, when a motif is present in the space of possible designs, it creates an enriched region in <italic>T</italic>, which can be exploited during the tree search to rapidly discover successful designs (<xref rid="fig1" ref-type="fig">Figure 1D</xref>).</p>
</sec>
<sec id="s2b">
<title>Establishing a ground-truth for three-node stochastic oscillators with enumeration</title>
<p>Oscillations appear in diverse cellular contexts such as metabolism (<xref ref-type="bibr" rid="c8">Chandra et al. (2011</xref>)), DNA damage (<xref ref-type="bibr" rid="c26">Geva-Zatorsky et al. (2006</xref>, 2010)), the cell cycle (<xref ref-type="bibr" rid="c17">Ferrell et al. (2011</xref>)), and circadian rhythms (<xref ref-type="bibr" rid="c53">Tyson et al. (1999</xref>)), and consequently, many of their design principles have been elucidated (<xref ref-type="bibr" rid="c37">Novák and Tyson (2008</xref>)). We first benchmark CircuiTree on the well-studied problem of designing an oscillator circuit with three nodes (<xref rid="fig2" ref-type="fig">Figure 2A</xref>, part i). Specifically, we consider a system of symmetric transcription factors (TFs) modeled as a stochastic birth-and-death process of individual mRNAs, TFs, and TF-response element (TF-RE) complexes, with elementary reactions of transcription, translation, degradation, binding, and unbinding (Figure S1A; reactions and their rate parameters are summarized in <xref rid="tbl1" ref-type="table">Table 1</xref>). TFs regulate transcription by binding to one of two REs in the regulatory region of each promoter, and cooperativity is introduced by assuming that TF-RE binding is stronger when both sites are occupied by the same TF. This assumption reduces the computational cost associated with modeling every homo- and heterodimer and their dimer-RE complexes. For each stochastic simulation, the system was randomly initialized and stochastically simulated using the Gillespie method for <italic>t</italic><sub>max</sub> = 4 × 10<sup>4</sup> sec = 11.1 hrs (see Methods for details of initialization). Oscillations were quantified by computing the normalized autocorrelation function (ACF) and identifying its lowest minimum value across all TFs ACF<sub>min</sub>, excluding the bounds, and a Boolean reward value was assigned based on a cutoff value (<xref rid="fig2" ref-type="fig">Figure 2A</xref>, part ii).</p>
<table-wrap id="tbl1" orientation="portrait" position="float">
<label>Table 1.</label>
<caption><title>Model rate parameters</title></caption>
<graphic xlink:href="635147v1_tbl1.tif" mimetype="image" mime-subtype="tiff"/>
</table-wrap>
<fig id="fig2" position="float" fig-type="figure">
<label>Figure 2.</label>
<caption><title>CircuiTree efficiently identifies simple and robust 3-component oscillators.</title>
<p>(A) All three-component transcription factor (TF) circuits (3,325 up to symmetry) were enumerated with 10<sup>4</sup> random parameter sets (i) and evaluated for oscillations (ii) using an autocorrelation-based reward function. (B) A representative MCTS run. With more iterations (<italic>N</italic>), the search graph <italic>T</italic> (represented by a spanning tree for simplicity) expands to encounter more oscillators (orange circles) and improve its best predicted oscillator topology (shown in black). (C) A heatmap showing the average rate of discovery, or recall, for each oscillator (proportion of <italic>n</italic> = 50 replicates. Rows (oscillators) are sorted in order of complexity, or the number of interactions, and oscillators with the same complexity are sorted by descending robustness <italic>Q</italic>. Sparse oscillators are found before more complex ones, with a preference for the most robust candidates. (D) Precision (blue) and recall (orange) of oscillator classification (mean ± 95% CI, <italic>n</italic> = 50). CircuiTree’s recall is particularly high for the 10% most robust oscillators (red), reaching 94.7% after 10<sup>5</sup> iterations. See also Figures S1, S2, S3, and S4.</p></caption>
<graphic xlink:href="635147v1_fig2.tif" mimetype="image" mime-subtype="tiff"/>
</fig>
<p>
<disp-formula id="eqn3">
<graphic xlink:href="635147v1_eqn3.gif" mimetype="image" mime-subtype="gif"/>
</disp-formula>
</p>
<p>To compare with enumeration, all 3,325 unique, fully connected topologies were simulated with 10<sup>4</sup> randomly sampled parameter sets and initial conditions. The 10 rate parameters of the model were reduced to 8 dimensionless variables, which were sampled uniformly from a range of values determined based on experimentally measured rates (<xref ref-type="bibr" rid="c36">Milo et al. (2010</xref>)) and known requirements for oscillations (<xref ref-type="bibr" rid="c15">Elowitz and Leibler (2000)</xref>; <xref ref-type="bibr" rid="c37">Novák and Tyson (2008</xref>)). (See <xref rid="tbl2" ref-type="table">Table 2</xref> for variable definitions and sampling ranges and Methods for details of parameter sampling). The robustness to parameter perturbation <italic>Q</italic> was calculated as the fraction of parameter sets that produced oscillation, and topologies with <italic>Q</italic> &gt; 0.01 were considered oscillators. This procedure uncovered 221 oscillator topologies (6.65% of the search space) (see Figures S1B and S1C for a summary of the best topologies). These results generally agree with prior studies of two- and three-node oscillators (<xref ref-type="bibr" rid="c41">Qiao et al. (2022)</xref>; <xref ref-type="bibr" rid="c15">Elowitz and Leibler (2000)</xref>; <xref ref-type="bibr" rid="c37">Novák and Tyson (2008)</xref>; <xref ref-type="bibr" rid="c56">Woods et al. (2016)</xref>; <xref ref-type="bibr" rid="c50">Stricker et al. (2008</xref>)). For instance, almost all oscillators contain a repressilator (Rep) loop, activator-inhibitor (A-I) loop, or a combination thereof. Positive autoregulation (PAR), which has been shown to buffer extrinsic and intrinsic noise (<xref ref-type="bibr" rid="c41">Qiao et al. (2022</xref>)), is also ubiquitous among these oscillators and is required for robust A-I loop oscillations (<xref ref-type="bibr" rid="c37">Novák and Tyson (2008)</xref>; <xref ref-type="bibr" rid="c50">Stricker et al. (2008</xref>)). Further discussion of these motifs can be found in the section below. Interestingly, stochastic switching between stable states was occasionally mistaken for low-frequency oscillations (Figure S2), causing some toggle switch circuits to be classified as oscillators (highest <italic>Q</italic> = 0.024, ranked #139).</p>
<table-wrap id="tbl2" orientation="portrait" position="float">
<label>Table 2.</label>
<caption><title>Dimensionless variables and limits imposed on random parameter sampling</title></caption>
<graphic xlink:href="635147v1_tbl2.tif" mimetype="image" mime-subtype="tiff"/>
</table-wrap>
<statement id="alg1">
<label>Algorithm 1</label>
<title>Circuit topology search using MCTS</title>
<p><fig id="alg1a" position="float" fig-type="figure">
<graphic xlink:href="635147v1_alg1.tif" mimetype="image" mime-subtype="tiff"/>
</fig></p>
</statement>
<p>Across all oscillators, oscillation was favored by tight TF-RE binding (<italic>K</italic><sub><italic>D</italic>,1</sub> &lt; 10<sup>3</sup>), low basal transcription (<italic>k</italic><sub><italic>m</italic>,unbound</sub> &lt; 0.3 sec<sup>−1</sup>), strong repression (<italic>k</italic><sub><italic>m</italic>,rep</sub>/<italic>k</italic><sub><italic>m</italic>,unbound</sub> &lt; 10<sup>−1</sup>), and a high activated transcription rate (<italic>k</italic><sub><italic>m</italic>,act</sub>, monotonic effect) (Figure S3A). Protein and mRNA degradation rates had a non-monotonic effect with a peak at γ<sub><italic>m</italic></sub> ≈ γ<sub><italic>p</italic></sub> ≈ 0.2 molec<sup>−1</sup> sec<sup>−1</sup> (Figure S3A), and oscillation period depended strongly on these rates and their ratio (Figures S3B and S3C). However, the best oscillators were exceptionally robust to the choice of parameters. For example, the most robust oscillator (the repressilator with PAR) has a <italic>Q</italic> of 0.767, meaning that for each of the 8 sampled variables, on average, 96.7% of the possible values would permit oscillations (0.967<sup>8</sup> ≈ 0.767).</p>
</sec>
<sec id="s2c">
<title>CircuiTree efficiently and systematically discovers three-node oscillators</title>
<p>MCTS masters a game with a limited number of trials by balancing deep sampling of promising regions with broad sampling of under-explored regions. To understand how this strategy performs for circuit topology design, we use CircuiTree to search for 3-node oscillators given <italic>N</italic> = 10<sup>5</sup> iterations of MCTS (<italic>n</italic> = 50 replicates; see Methods for MCTS implementation specifics). In the average run, the first putative result is discovered after just 0.69 samples/topology (2,280 iterations), and by 19.6 samples/topology (65,360 iterations), a top-5 oscillator has been sampled &gt;100 times. A topology is discovered as a “successful” oscillator if its estimated robustness <inline-formula><inline-graphic xlink:href="635147v1_inline3.gif" mimetype="image" mime-subtype="gif"/></inline-formula> exceeds the threshold value <italic>Q</italic><sub>thresh</sub> = 0.01, which was chosen heuristically prior to the search. <xref rid="fig2" ref-type="fig">Figure 2B</xref> shows a representative example of how, over sampling time, CircuiTree incrementally builds the search tree from the root state (top to bottom), encounters more oscillators (shown in orange), and improves its prediction for the most robust design (shown as a black circuit diagram). By the end of sampling time, the average run saturates the tree, sampling 99.97% of topologies at least once.</p>
<p>CircuiTree balances efficiency and comprehensiveness by first finding sparse solutions before exploring deeper areas of the tree. In <xref rid="fig2" ref-type="fig">Figure 2C</xref>, each row of the heatmap is one of the 221 oscillators, and the rows are sorted first by the circuit’s complexity, or the number of interactions, then by decreasing robustness (<italic>Q</italic>). The color scale indicates the likelihood of discovery, or recall, of each oscillator measured as the proportion of replicates that discovered it. Because sparse topologies require fewer assembly steps, MCTS encounters the sparsest oscillators (such as the repressilator) first, and it discovers increasingly complex solutions over time until oscillators with 9 interactions (the maximum) are found at <italic>N</italic> ≈ 5 × 10<sup>4</sup>. As shown by the line plot in <xref rid="fig2" ref-type="fig">Figure 2D</xref>, CircuiTree has a very high recall of 94.7% for the top 10% of oscillators (95% CI: 86.4% − 100.0%) and has a recall of 35.9% (95% CI: 30.8% − 41.5%) for oscillators in general. This is fairly high, considering that it gets an average of <inline-formula><inline-graphic xlink:href="635147v1_inline4.gif" mimetype="image" mime-subtype="gif"/></inline-formula> samples/topology, and a majority of oscillators have a <italic>Q</italic> of less than 1/30. Additionally, CircuiTree has a precision of 81.5% (95% CI: 74.1% − 88.3%), indicating a low rate of false positives.</p>
<p>The competing goals of breadth and depth manifest during tree search as distinct temporal phases in which MCTS first explores a broad set of topologies before focusing on a narrow, enriched subset. Among topologies containing a combination of AI and Rep feedback loops, 27.2% (47/173) are oscillators, a very high proportion compared to 6.7% (221/3,325) for the entire design space and 9.3% (146/1,575) and 8.0% (6/75) for the AI or Rep loops alone (Figure S4A). Figure S4B shows how MCTS allocates samples to each of these categories over a total sampling time of 10<sup>5</sup> and 10<sup>6</sup> iterations (mean of <italic>n</italic> = 50 and <italic>n</italic> = 12 replicates, respectively). During an initial exploratory phase, samples are taken broadly across categories; however, at <italic>N</italic> ≈ 6 × 10<sup>4</sup>, the AI-Rep combination becomes heavily favored, followed by Rep alone, for the rest of sampling time. This transition can be observed directly from the search history by measuring regret. Defined as
<disp-formula id="eqn4">
<graphic xlink:href="635147v1_eqn4.gif" mimetype="image" mime-subtype="gif"/>
</disp-formula>
regret is the difference between the expected reward from sampling the best topology (with robustness <italic>Q</italic>∗) and the actual reward over <italic>N</italic> iterations. As MCTS moves from exploration into exploitation, the reward rate becomes higher and regret accumulates more slowly (Figures S4C and S4D). Thus, the discovery of an enriched region during search triggers a shift to more focused sampling that can be identified in real-time without <italic>a priori</italic> knowledge about design principles or motifs.</p>
</sec>
<sec id="s2d">
<title>CircuiTree infers oscillator motifs from search results</title>
<p>In addition to finding individual circuit topologies, an important goal of circuit design is to identify specific structural features, or network motifs, that lead to successful designs (<xref ref-type="bibr" rid="c35">Milo et al. (2002)</xref>; <xref ref-type="bibr" rid="c1">Alon (2007)</xref>; <xref ref-type="bibr" rid="c34">Ma et al. (2009)</xref>; <xref ref-type="bibr" rid="c11">Cotterell and Sharpe (2010)</xref>; <xref ref-type="bibr" rid="c44">Shah and Sarkar (2011)</xref>; <xref ref-type="bibr" rid="c9">Chau et al. (2012)</xref>; <xref ref-type="bibr" rid="c33">Lim et al. (2013)</xref>; <xref ref-type="bibr" rid="c43">Schaerli et al. (2014</xref>)). Similarly, in our game-playing paradigm, a motif of the assembly game is a series of moves (an assembly strategy) that leads to a subset of <italic>T</italic> highly enriched with successful design results. Specifically, we define an assembly motif as any successful topology (<italic>Q</italic> &gt; <italic>Q</italic><sub>thresh</sub>) that is also overrepresented as a sub-pattern within other successful topologies, compared to a set of randomly assembled designs. Using a statistical test for overrepresentation (described in detail in the Methods section and shown schematically in Figure S5A), CircuiTree can mine the results of a tree search for putative assembly motifs.</p>
<p>Looking for 3-node oscillator motifs with ≤ 3 interactions, CircuiTree identifies the same four motifs as enumeration, shown at the top of <xref rid="fig3" ref-type="fig">Figure 3</xref>: the repressilator motif (Rep) and the activator-inhibitor (AI) loop with either PAR of the activator (AIPAR), constitutive inhibition of the inhibitor (AICI), or constitutive activation of the activator (AICA). CircuiTree finds these minimal motifs in 100% (Rep), 86% (AIPAR), 94% (AICI), and 62% (AICA) of replicates. To see how these motifs are situated in the overall design space, we plot all 221 oscillators in <xref rid="fig3" ref-type="fig">Figure 3</xref> as a “complexity atlas” (<xref ref-type="bibr" rid="c11">Cotterell and Sharpe (2010)</xref>; <xref ref-type="bibr" rid="c43">Schaerli et al. (2014</xref>)), a graph-of-circuits where every oscillator is a node and nodes are organized in layers according to their complexity. Edges connect nodes in adjacent layers if they differ by the addition of a single circuit interaction, analogous to a move in the assembly game. Notably, 216/221 oscillators constitute a large connected component of the graph originating from the four minimal motifs, indicating that almost all 3-node oscillators live in a subset of design space defined by Rep and/or AI motifs. The size of each node in <xref rid="fig3" ref-type="fig">Figure 3</xref> denotes its motif robustness <italic>Q</italic><sub>motif</sub>, the overall oscillation probability for all circuits containing this motif (in other words, the mean reward once reaching this state in the game). The color of each node reflects its motif discovery rate, measured as the percentage of <italic>n</italic> = 50 replicates that labeled it as a motif.</p>
<fig id="fig3" position="float" fig-type="figure">
<label>Figure 3.</label>
<caption><title>Motifs identified from search results form a cluster of optimal 3-node oscillators.</title>
<p>A complexity atlas of oscillators with ≤3 components. Circles are oscillator topologies identified by enumeration, and edges link oscillators that differ by the addition/removal of one interaction. 97.7% of oscillators (216/221) are topologically related to one of the four motifs for 3-node oscillation, shown above the atlas in red boxes. Bold circle borders indicate oscillators found to be motifs based on enumeration. Circle color indicates the rate with which CircuiTree labels each oscillator as an assembly motif. Circle size indicates <italic>Q</italic><sub>motif</sub>, the average robustness for a circuit completed randomly starting from this state of the assembly game. The correlation between discovery rate and <italic>Q</italic><sub><italic>m</italic></sub><italic>otif</italic> (plotted in Figure S5B) suggests that motifs found by CircuiTree correspond to beneficial game states. The bolded edges, which connect oscillators with a discovery rate &gt; 80%, form a contiguous cluster representing optimal assembly strategies. The most robust oscillator, the repressilator with PAR of all components, is shown on the bottom-left and indicated on the atlas by a green arrow. See also Figures S4 and S5.</p></caption>
<graphic xlink:href="635147v1_fig3.tif" mimetype="image" mime-subtype="tiff"/>
</fig>
<p>Note that these features correlate visually (large circles tend to be red and <italic>vice versa</italic>) and quan-titatively, as shown by the scatterplot in Figure S5B, indicating that higher quality motifs are more likely to be found. Additionally, the motifs that are discovered most reliably (discovery rate &lt;80%, indicated by bold edges) form an optimal subset corresponding to the best motifs (the largest nodes). Surprisingly, the most robust oscillator, the repressilator with PAR on all three TFs (Rep+3xPAR, <italic>Q</italic> = 0.767), is discovered at a rate of 98%. Because Rep+2xPAR is a poor oscillator (ranked #187) and Rep+1xPAR does not oscillate at all, Rep+3xPAR cannot be assembled from Rep (or any other intermediate) without breaking oscillations. Nonetheless, its high motif discovery rate suggests that CircuiTree is capable of identifying special design strategies that require a specific combination of moves. Overall, we find that CircuiTree reliably infers the most robust motifs for a given phenotype, even finding obscure but optimal solutions, and the resulting motifs for 3-node oscillation form a single cluster of optimal designs. Note that, in contrast to classic network motifs which compare the frequency of a pattern in successful topologies against the entire set of topologies (or a comparable null model), we compare frequencies between circuit assemblies that were successful during search and random circuit assemblies. Therefore our method returns motifs that are overrepresented <italic>among search results</italic> and thereby accounts for the bias inherent to sampling the space of topologies by assembly rather than by flat enumeration.</p>
</sec>
<sec id="s2e">
<title>Motif multiplexing allows five-node oscillators to compensate for deletions and single-gene knockdowns</title>
<p>While synthetic circuits generally rely on a single, minimal circuit module, naturally occurring circuits often use many functional modules. For instance, circadian oscillators across divergent taxa contain two or more oscillatory feedback loops (<xref ref-type="bibr" rid="c32">Lee et al. (2000)</xref>; <xref ref-type="bibr" rid="c10">Cheng et al. (2001)</xref>; <xref ref-type="bibr" rid="c5">Bell-Pedersen et al. (2005)</xref>; <xref ref-type="bibr" rid="c39">Pokhilko et al. (2012</xref>)). Could these additional modules make circadian oscillators more resistant to deletions during evolution (<xref ref-type="bibr" rid="c54">Wagner (2005</xref>))? To explore this possibility, we implemented a parallelized version of CircuiTree with pruning (described in details in the Methods and illustrated in Figure S6) and used it to design 5-node circuit topologies that oscillate despite a 50% chance of deletion of a random TF (<xref rid="fig4" ref-type="fig">Figure 4A</xref>). Please see Methods for a description of the parallel implementation and Figure S6 for a schematic of the pruning.</p>
<fig id="fig4" position="float" fig-type="figure">
<label>Figure 4.</label>
<caption><title>Parallelized CircuiTree scales to large design spaces.</title>
<p>(A) A parallelized version of CircuiTree was used to search for five-node oscillators with ≤ 15 interactions (left) that oscillate despite a 50% chance of a single random deletion (right). (B) Search results after 5 · 10<sup>6</sup> iterations. Circles are putative oscillators <inline-formula><inline-graphic xlink:href="635147v1_inline25.gif" mimetype="image" mime-subtype="gif"/></inline-formula>, plotted on axes of robustness based on samples with <inline-formula><inline-graphic xlink:href="635147v1_inline26.gif" mimetype="image" mime-subtype="gif"/></inline-formula> or without a deletion <inline-formula><inline-graphic xlink:href="635147v1_inline27.gif" mimetype="image" mime-subtype="gif"/></inline-formula>. Error bars indicate standard error of the mean. Circle size and color indicate the number of samples <italic>υ</italic><sub><italic>i</italic></sub> and the overall robustness <inline-formula><inline-graphic xlink:href="635147v1_inline28.gif" mimetype="image" mime-subtype="gif"/></inline-formula>, respectively. Dashed lines show different theoretical values of fault-tolerance (FT), or the average number of deletions a circuit can sustain. Examples of circuits with different FT (labeled i-iii) are shown in (C). (D) Box plots of <inline-formula><inline-graphic xlink:href="635147v1_inline29.gif" mimetype="image" mime-subtype="gif"/></inline-formula>, grouped by the number of motifs in each putative oscillator. Multiple motifs, particularly Rep, increase robustness to deletions. (E) Simulated trajectories for the topologies in (C) for all single deletions. The 3AI+3Rep oscillator (FT ≈ 4/5) contains 6 interleaved oscillator motifs. See also Figures S6 and S7.</p></caption>
<graphic xlink:href="635147v1_fig4.tif" mimetype="image" mime-subtype="tiff"/>
</fig>
<p>After 5 million search iterations (less than four days of real time using 1,000 parallel search threads and 300 CPUs), CircuiTree finds 1,386 putative oscillators with <inline-formula><inline-graphic xlink:href="635147v1_inline5.gif" mimetype="image" mime-subtype="gif"/></inline-formula> and &gt; 100 samples, the first result arriving in just 1.3 hours. Due to the computational cost of exact simulations of large stochastic systems, only topologies with up to 15 interactions were included. As shown by the heatmap in Figure S7A, when clustered based on their structural similarity (measured as the pairwise graph edit distance between topologies), these topologies separate into sparse and dense clusters (Figure S7B). In <xref rid="fig4" ref-type="fig">Figure 4B</xref>, each of these topologies is plotted as a circle based on their observed robustness with or without a random deletion (<inline-formula><inline-graphic xlink:href="635147v1_inline6.gif" mimetype="image" mime-subtype="gif"/></inline-formula> and <inline-formula><inline-graphic xlink:href="635147v1_inline7.gif" mimetype="image" mime-subtype="gif"/></inline-formula>, respectively). The overall robustness <inline-formula><inline-graphic xlink:href="635147v1_inline8.gif" mimetype="image" mime-subtype="gif"/></inline-formula> is indicated by the color gradient, and the circle size represents the number of samples. The circuit’s fault-tolerance (FT), the proportion of components that can be deleted without losing oscillation, is estimated as <inline-formula><inline-graphic xlink:href="635147v1_inline9.gif" mimetype="image" mime-subtype="gif"/></inline-formula>, and contour lines for <inline-formula><inline-graphic xlink:href="635147v1_inline10.gif" mimetype="image" mime-subtype="gif"/></inline-formula>, and <inline-formula><inline-graphic xlink:href="635147v1_inline11.gif" mimetype="image" mime-subtype="gif"/></inline-formula> are shown as dashed lines. The putative oscillators included 42 topologies with 2 or 3 nodes, all of which had low robustness to deletions <inline-formula><inline-graphic xlink:href="635147v1_inline12.gif" mimetype="image" mime-subtype="gif"/></inline-formula>. For instance, the second-best oscillator in the 3-node search, the AI+Rep circuit (labeled (i) in <xref rid="fig4" ref-type="fig">Figure 4B</xref> and <xref rid="fig4" ref-type="fig">Figure 4C</xref>), was found to have a fault tolerance of <inline-formula><inline-graphic xlink:href="635147v1_inline13.gif" mimetype="image" mime-subtype="gif"/></inline-formula>, consistent with oscillations that persist after deletion of the two unused TFs (D and E) but attenuating with deletion of any of the active components (A, B, or C).</p>
<p>In contrast, fault-tolerant oscillators <inline-formula><inline-graphic xlink:href="635147v1_inline14.gif" mimetype="image" mime-subtype="gif"/></inline-formula> contain many interleaved oscillatory motifs that activate under different deletion scenarios, a design feature we call motif multiplexing. As shown in <xref rid="fig4" ref-type="fig">Figure 4D</xref>, the number of repressilator (Rep) and activator-inhibitor (AI) motifs is a strong predictor of robustness in the presence of deletion, measured as <inline-formula><inline-graphic xlink:href="635147v1_inline15.gif" mimetype="image" mime-subtype="gif"/></inline-formula>, and higher complexity in general is associated with higher <inline-formula><inline-graphic xlink:href="635147v1_inline16.gif" mimetype="image" mime-subtype="gif"/></inline-formula> (Figure S7C). To see this design principle, consider the AI+3Rep circuit (labeled (ii) in <xref rid="fig4" ref-type="fig">Figures 4B</xref> and <xref rid="fig4" ref-type="fig">4C</xref>), which is an extension of the AI+Rep topology with two additional backup repressilator loops (A-C-D and A-C-E, highlighted in yellow). This circuit has a higher fault tolerance of <inline-formula><inline-graphic xlink:href="635147v1_inline17.gif" mimetype="image" mime-subtype="gif"/></inline-formula> because, while deletion of gene B is fatal for oscillations in the AI+Rep circuit, the A-C-D motif takes over to rescue oscillations in the AI+3Rep circuit (representative simulated trajectories shown in <xref rid="fig4" ref-type="fig">Figure 4E</xref>, upper and middle row; see <xref rid="tbl1" ref-type="table">Table 1</xref> for parameter values). The pattern extends to the 3AI+3PAR circuit (labeled (iii) in <xref rid="fig4" ref-type="fig">Figures 4B</xref> and <xref rid="fig4" ref-type="fig">4C</xref>, right diagram) which is similar to the AI+3Rep except for the addition of two activator-inhibitor motifs (B-D and D-C, highlighted in yellow). This circuit similarly activates a repressilator motif (A-C-E) upon deletion of gene B. Now, however, oscillations are rescued after deletion of gene C by activating the B-D motif. Consequently, the 3AI+3PAR circuit has a high fault tolerance of <inline-formula><inline-graphic xlink:href="635147v1_inline18.gif" mimetype="image" mime-subtype="gif"/></inline-formula> (<xref rid="fig4" ref-type="fig">Figure 4E</xref>, bottom row).</p>
<p>During evolution, genomic mutation may lead to a partial reduction in transcription rate rather than a complete knockout. Do multiplexed oscillators maintain their mutational robustness in these conditions? To explore this question, we simulated the 3AI+3Rep circuit under conditions where a single gene is partially knocked down by multiplying its transcription rate by a factor (100 − KD)/100, KD being the percent of knockdown. In <xref rid="fig5" ref-type="fig">Figure 5A</xref>, we visualize a representative stochastic simulation of the wild-type (WT) 3AI+3Rep circuit by reducing the system of five TFs (a five-dimensional phase space) to two composite dimensions using principal components analysis and plotting a simulated trajectory on the first and second principal component axes. At each time point, the dominantly expressed TF is indicated by a transparent marker of the same color, and the inset diagram shows the order of TFs activated in the limit cycle (A-B-D-C). As gene A is knocked down from KD=0% to KD=100% (<xref rid="fig5" ref-type="fig">Figure 5B</xref>, upper middle panel), the limit cycle gradual drifts in phase space until the trajectory eventually flattens, consistent with the lack of oscillations after deletion of gene A (<xref rid="fig4" ref-type="fig">Figure 4E</xref>). During knockdown of gene B (<xref rid="fig5" ref-type="fig">Figure 5B</xref>, top right panel), in contrast, the limit cycle drifts before discontinuously jumping to a new limit cycle (the A-E-C repressilator motif) between 75% and 100% KD, as shown in the inset diagram. Similarly, knockdown of gene C induces a gradual drift followed by a jump between 75% and 100% KD to a limit cycle driven by the B-D activator-inhibitor motif. Unlike genes B and C, knockdown of gene D produces no obvious discontinuities as the limit cycle gradually adapts from A-B-D-C to the A-B-C repressilator. Knockdown of gene E produces no appreciable changes in the limit cycle. Overall, the multiplexed oscillator 3AI+3Rep maintains oscillatory behavior during partial knockdown of genes B, C, D, or E and transitions between disparate limit cycles in qualitatively unique ways.</p>
<fig id="fig5" position="float" fig-type="figure">
<label>Figure 5.</label>
<caption><title>Motif multiplexing makes oscillators resistant to the failure of components.</title>
<p>The 3AI+3Rep circuit (A, top) oscillates with different limit cycles after partial knockdowns of different genes. (A, bottom) An exemplary trajectory of 3AI+3Rep is shown on axes of the first two principal components (PCs) of phase space. Transparent circles indicate the dominant species at each time-point. (B) Trajectories under scenarios where transcription rate is reduced by a factor KD. The ordering of species in the limit cycle at KD = 100% is shown by the inset diagram. (C) Oscillation quality and frequency in single-gene knockdowns. Oscillations persist (ACF<sub>min</sub> &lt; ACF<sub>thresh</sub>) for most knockdowns of genes B, C, D, and E (middle). Oscillation frequency (bottom) is pulled from its WT value in knockdowns of A, B, C, and D. (E) Robustness to parameter variation between TFs. The power spectral density of the trajectory of TF A (bottom, mean) and the overall oscillation rate (top, mean ± SEM) are shown for simulations in which parameters were perturbed by a Gaussian kernel of width σ<sub>param</sub> (<italic>n</italic> = 50 replicates). A dissipation of fundamental and harmonic frequencies and corresponding loss of oscillations occurs for σ<sub>param</sub> &gt; 5 · 10<sup>−2</sup>.</p></caption>
<graphic xlink:href="635147v1_fig5.tif" mimetype="image" mime-subtype="tiff"/>
</fig>
<p>To quantitatively understand how the system responds to knockdowns, single-gene knock-downs were simulated with a range of values of KD with <italic>n</italic> = 50 replicates with different random seeds. The quality and frequency of oscillations were then assessed by computing the ACF<sub>min</sub> and, if oscillations were detected, the frequency of oscillation. In <xref rid="fig5" ref-type="fig">Figure 5C</xref> (upper panel), the ACF<sub>min</sub> (mean ± 95% confidence interval) is plotted as a function of KD, and the dashed line indicates the value ACF<sub>min</sub> = −0.4 used as a threshold between oscillatory and non-oscillatory dynamics (below and above the line, respectively. Knockdown of gene A leads to a rise in ACF<sub>min</sub> and bomes lethal for oscillations above KD = 60%. For gene B, ACF<sub>min</sub> increases before suddenly crossing the threshold to indicate loss of oscillations between <italic>KD</italic> = 85% and 95%, and for gene C, oscillations disappear in the range KD = 65%<italic>to</italic>90%. For genes D and E, no detrimental effects are observed during knockdown. Thus, oscillations persist in almost all cases (91.9% of samples) when partially knocking down genes B, C, D, or E (<xref rid="fig5" ref-type="fig">Figure 5C</xref>, middle panel). Partial knockdowns of A, B, C, and D each have distinct effects on oscillation frequency, a phenomenon called frequency pulling (<xref ref-type="bibr" rid="c28">Heltberg et al. (2021</xref>)). The bottom panel of <xref rid="fig5" ref-type="fig">Figure 5C</xref> shows how, for KD &lt; 60%, the WT resonant frequency of 6.0hr<sup>−1</sup> is pulled higher when knocking down A or B and lower when knocking down C or D (no change for E). At higher values of KD, knockdowns of B and C discontinuously jump from the drifted frequency to a new resonant frequency (2.6hr<sup>−1</sup> and 6.6hr<sup>−1</sup>, respectively), while the D knockdown transitions smoothly to its new frequency of 3.8hr<sup>−1</sup>. Thus, the 3AI+3Rep oscillator accommodates most partial knockdowns of genes B, C, D, or E by modulating, yet retaining, oscillatory dynamics.</p>
<p>Up to this point, our modeling has assumed that the rates of reactions such as binding, transcription, translation, and degradation are identical between circuit components. To investigate whether the oscillators we discover are fine-tuned for this symmetry, we perturbed the rate parameters for each TF individually. A Gaussian perturbation kernel with standard deviation σ<sub>param</sub> was applied to each parameter, scaled to the pre-defined ranges of those parameters (see <xref rid="tbl2" ref-type="table">Table 2</xref> for parameter ranges and Methods for details of the perturbation kernel). Stochastic simulations were performed for a range of values of σ<sub>param</sub> between 1 · 10<sup>−3</sup> and 3 · 10<sup>−2</sup>. To assess the effects of parameter perturbation on oscillation, the power spectral density (PSD) of the dynamics of TF A (mean of <italic>n</italic> = 50 replicates with different random seeds) was calculated for each value of σ<sub>param</sub> and plotted as a heatmap (<xref rid="fig5" ref-type="fig">Figure 5D</xref>). For σ<sub>param</sub> &lt; 10<sup>−2</sup>, the PSD shows peaks at the oscillator’s fundamental frequency of 6hr<sup>−1</sup> and first and second harmonics (12hr<sup>−1</sup> and 18hr<sup>−1</sup>, respectively). As σ<sub>param</sub> increases further to 5 · 10<sup>−2</sup>, the fundamental frequency peak gradually diffuses, and the oscillation rate drops from 1.0 to ∼ 0.5, as shown in the line plot in <xref rid="fig5" ref-type="fig">Figure 5D</xref> (envelope indicates 95% confidence interval). above σ<sub>param</sub> = 5 · 10<sup>−2</sup>, the oscillation rate drops to near-zero, and the mean PSD shows no visible peaks. Therefore, this oscillator can tolerate a minimal amount of heterogeneity between TFs, above which it appears somewhat sensitive to asymmetry in at least one parameter of the model.</p>
</sec>
</sec>
<sec id="s3">
<title>Discussion</title>
<p>Natural biological networks contain a number of biochemical components that exceeds our current capabilities of engineering by orders of magnitude, underscoring the importance of scalable computational methods for synthetic circuit design and analysis of biological design principles. Inspired by state-of-the-art artificial intelligence, we approach circuit design as a game of step-by-step topology assembly where success is determined by the achievement of a target phenotype in simulation. Similar to game-playing platforms that have achieved superhuman mastery of complex games (<xref ref-type="bibr" rid="c49">Silver et al. (2017</xref>)), CircuiTree searches the space of possible circuit topologies using Monte Carlo tree search (MCTS), which balances exploitation of promising circuit assembly moves with exploration of other possibilities (<xref rid="fig1" ref-type="fig">Figure 1</xref>). This search strategy is comprehensive enough to infer motifs for a given phenotype (<xref rid="fig3" ref-type="fig">Figure 3</xref>) and efficient enough to search large spaces of designs fruitfully with limited samples (<xref rid="fig4" ref-type="fig">Figures 4A</xref> and <xref rid="fig4" ref-type="fig">4B</xref>). Finally, we demonstrate CircuiTree’s scalability by characterizing a novel class of five-gene oscillators that use a strategy we call motif multiplexing to resist deletion and single-gene knockdown mutations by densely interleaving multiple sub-oscillators (<xref rid="fig4" ref-type="fig">Figures 4C-4E</xref> and <xref rid="fig5" ref-type="fig">5A-5C</xref>). This design principle may grant evolutionary robustness to eukaryotic circadian clocks, which have been observed across many phyla to contain multiple oscillatory loops (<xref ref-type="bibr" rid="c10">Cheng et al. (2001)</xref>; <xref ref-type="bibr" rid="c5">Bell-Pedersen et al. (2005)</xref>; <xref ref-type="bibr" rid="c39">Pokhilko et al. (2012</xref>)), and it leaves open the question of how multiple sub-oscillators can be coupled without triggering chaos (<xref ref-type="bibr" rid="c28">Heltberg et al. (2021</xref>)).</p>
<p>CircuiTree is distinguished by its general framework. Developed for general game-playing and planning problems, MCTS can query very large spaces in search of robust topologies and assembly motifs for any measurable phenotype, without restrictions on the modeling or simulation frame-work, and without needing to enumerate all possible topologies. This property bridges a gap in computational circuit design where generally, methods for finding single topologies (such as evolution (<xref ref-type="bibr" rid="c19">François and Hakim (2004)</xref>; <xref ref-type="bibr" rid="c21">François and Siggia (2008</xref>)), mixed-integer optimization (<xref ref-type="bibr" rid="c38">Otero-Muras and Banga (2016</xref>)), and recurrent neural networks (<xref ref-type="bibr" rid="c46">Shen et al. (2021</xref>))) do not generalize easily to design principles and/or require a specific mathematical form, while more comprehensive methods (such as enumeration (<xref ref-type="bibr" rid="c9">Chau et al. (2012)</xref>; <xref ref-type="bibr" rid="c43">Schaerli et al. (2014</xref>)) and Bayesian sampling (<xref ref-type="bibr" rid="c56">Woods et al. (2016</xref>))) require an explicit list of topologies. Notably, while CircuiTree currently implements a “vanilla” version of the algorithm, MCTS can be modified in many ways to suit different problems (<xref ref-type="bibr" rid="c6">Browne et al. (2012)</xref>; (<xref ref-type="bibr" rid="c6">Świechowski. (2022)</xref>.</p>
<p>This work also highlights the possibilities of using reinforcement learning to address difficult combinatorial design and inference problems in biology. In future work, CircuiTree could be applied to combinatorial design of therapeutics, both in the sense of optimizing chimeric receptor design (<xref ref-type="bibr" rid="c12">Daniels et al. (2022</xref>)) or combinatorial antigen recognition (<xref ref-type="bibr" rid="c13">Dannenfelser et al. (2020)</xref>; <xref ref-type="bibr" rid="c55">Williams et al. (2020</xref>)), and in the sense of generating novel multicellular therapies consisting of multiple engineered cell types that collaborate <italic>in situ</italic>, analogous to a natural immune system. Our work could also be used to generate synthetic morphogenesis circuits, which are difficult to design due to the many possible combinations of chemical and physical components (<xref ref-type="bibr" rid="c14">Davies (2017)</xref>; <xref ref-type="bibr" rid="c51">Toda et al. (2018)</xref>; <xref ref-type="bibr" rid="c18">Fleischer and Barr (1997</xref>)) and a high computational cost per simulation. Given a reward function that measures goodness-of-fit, CircuiTree could also be extended as an inference tool — for instance, for inferring transcriptional regulatory networks from data. More generally, this computational platform extends the study of design principles (<xref ref-type="bibr" rid="c33">Lim et al. (2013</xref>)), which has been limited to small motifs of 2 or 3 components, to a larger space of biological networks, presenting an opportunity to dissect the algorithms and strategies used by biology to assemble complex networks at scale.</p>
</sec>
<sec id="s4">
<title>Methods</title>
<sec id="s4a">
<title>Modeling and simulation</title>
<p>Transcription factor (TF) cooperativity was modeled as a slower unbinding rate when both response elements (REs) for the a promoter are bound by the same TF. For <italic>K</italic> genes (each with mRNA and protein species) with cumulative <italic>A</italic> activation reactions and <italic>R</italic> repression reactions, the elimination of explicit dimerization reduces the number of species from 2<italic>K</italic> + <italic>K</italic><sup>2</sup> + <italic>K</italic><sup>3</sup> (mRNAs, TFs, TF-TF complexes, and TF-TF-RE complexes) to 2<italic>K</italic> +<italic>A</italic>+<italic>R</italic> (mRNAs, TFs, and TF-RE complexes) and the number of reactions accordingly from 4<italic>K</italic> + 2<italic>K</italic><sup>2</sup> + 3<italic>K</italic><sup>3</sup> to 4<italic>K</italic> + 3<italic>A</italic> + 3<italic>R</italic>.</p>
<p>Stochastic trajectories were simulated using Gillespie’s exact method (<xref ref-type="bibr" rid="c27">Gillespie (1977</xref>)) and saved at <italic>n</italic><sub><italic>t</italic></sub> = 2000 time points at intervals of d<italic>t</italic> = 20 sec. The separation of time-scales between fast binding-unbinding kinetics and the other reactions creates a long simulation time (&gt;2 mins) that cannot be alleviated with, for example, traditional <italic>τ</italic>-leaping (<xref ref-type="bibr" rid="c7">Cao et al. (2004</xref>)). Thus, instead of using realistic but impractical binding and unbinding rates, these rates were set to virtual values determined from the equilibrium constant for first-binding <italic>K</italic><sub><italic>D</italic>,1</sub> by the solving the equations
<disp-formula id="ueqn1">
<graphic xlink:href="635147v1_ueqn1.gif" mimetype="image" mime-subtype="gif"/>
</disp-formula>
where the value <italic>Z</italic> = 100 was chosen heuristically to be large enough to maintain a separation of time-scales at low quantities. For each protein species, high-frequency noise was filtered from the stochastic signal using a 9-point binomial filter (<xref ref-type="bibr" rid="c3">Aubury and Luk (1996</xref>)), and the quality of oscillations overall was determined by computing the normalized autocorrelation function for each TF and finding the lowest minimum among TFs (ACF<sub>min</sub>), excluding the bounds. Oscillations are considered present if this quantity, related to the dissipation constant for oscillations (<xref ref-type="bibr" rid="c38">Otero-Muras and Banga (2016</xref>)), is below a cutoff ACF<sub>thresh</sub> = −0.4.</p>
<p>For simulations with partial knockdown of a gene, all transcriptional rate parameters for that gene were multiplied by a coefficient on [0, 1] (for example, KD=80% was achieved using a coefficient of 0.2.), and all species were initialized with zero quantity. For all other simulations, the initial quantity of each TF was selected from a Poisson distribution with a mean of 10 proteins, and all other species were initialized with zero quantity.</p>
<p>For perturbation studies, the eight sampled dimensionless variables were converted to values on [0, 1] by normalization to the upper and lower values in <xref rid="tbl2" ref-type="table">Table 2</xref>. These values were stored in a <italic>K</italic> × 8 matrix, where each row represented one of the <italic>K</italic> = 5 TFs, and each value was perturbed independently with a Gaussian kernel of standard deviation σ<sub>param</sub>, truncated to the range [0, 1] to prevent values outside the reasonable range. The perturbed values were then converted to rate parameters for each TF as outlined above.</p>
</sec>
<sec id="s4b">
<title>Random sampling</title>
<p>Random sets of the 10 rate parameters listed in <xref rid="tbl1" ref-type="table">Table 1</xref> were generated by drawing samples of the 8 dimensionless variables described in <xref rid="tbl2" ref-type="table">Table 2</xref>. Latin Hypercube sampling was used to draw 10<sup>4</sup> samples from a multivariate uniform distribution, with bounds shown in <xref rid="tbl2" ref-type="table">Table 2</xref>. For the 3-node and 5-node cases, every possible initialization (with a unique set of random generator seed, initial protein quantity, and parameters) was stored in a table of 10<sup>4</sup> rows, and each simulation was initialized with a random row of this table.</p>
</sec>
<sec id="s4c">
<title>Monte Carlo tree search</title>
<p>For all MCTS runs, the hyperparameter in <xref ref-type="disp-formula" rid="eqn2">Equation 2</xref> was set to <italic>c</italic> = 2.00 to encourage exploration (the default value is <inline-formula><inline-graphic xlink:href="635147v1_inline19.gif" mimetype="image" mime-subtype="gif"/></inline-formula>). Replicate runs for an experiment were performed using different random seeds, which are used to break ties during the selection phase and draw a random parameter set during the simulation step. For the 3-node search, each reward value <italic>q</italic> was drawn as a Bernoulli trial with a success probability equal to the <italic>Q</italic> value found using enumeration rather than running fresh simulations.</p>
<p>MCTS was parallelized using the lock-free method <xref ref-type="bibr" rid="c16">Enzenberger and Müller (2010</xref>) and implemented with the Python utility ‘celery’ (<ext-link ext-link-type="uri" xlink:href="https://docs.celeryq.dev/en/stable/index.html">https://docs.celeryq.dev/en/stable/index.html</ext-link>). Tree search was parallelized over 1,000 green threads which dispatched simulation jobs to run in parallel on multiple cloud computing instances totaling 300 CPUs. Reward values for each topology-parameter set pair were stored in an in-memory cache to speed up subsequent training runs (epochs). Back-propagation was executed asynchronously with virtual loss, assuming a reward of 0 until the actual reward is returned. To prevent excessive sampling of local optima during the 5-node search, we introduced a form of decision tree pruning we term “node exhaustion.” Once a terminal node (a completed topology) is visited &gt; 10<sup>4</sup> times, it is considered exhaustively sampled and pruned from the search graph, and a non-terminal node is pruned once all its successors have been pruned. As illustrated in Figure S5, the visits and reward for each in-edge to an exhausted node are subtracted from the parent node. Thus, once a node is marked exhausted, its history is “forgotten” by its predecessors.</p>
<p>Please see the documentation at <ext-link ext-link-type="uri" xlink:href="https://pranav-bhamidipati.github.io/circuitree/index.html">https://pranav-bhamidipati.github.io/circuitree/index.html</ext-link> for all additional details of implementation, as well as code tutorials and descriptions of the API.</p>
</sec>
<sec id="s4d">
<title>Motif identification</title>
<p>Before testing for motifs based on a tree search, we first determine whether each terminated topology <italic>s</italic><sub><italic>j</italic></sub> discovered during the search is a successful oscillator by comparing its empirical robustness <inline-formula><inline-graphic xlink:href="635147v1_inline20.gif" mimetype="image" mime-subtype="gif"/></inline-formula> to the predefined threshold <italic>Q</italic><sub>thresh</sub> = 0.01. This segregates all topologies into disjoint successful and unsuccessful sets (<italic>X</italic> and <italic>Y</italic>, respectively). We then take samples from the null distribution, drawing <italic>n</italic><sub>sample</sub> = 10<sup>5</sup> samples from the tree of topologies using random assembly, each time starting at the root of the design tree and choosing random actions until a terminal topology is reached (Figure S5A). The procedure is then repeated, this time rejecting the result unless it is a member of the successful set <italic>X</italic> (note that this can be computationally expensive if solutions are sparse). Next, a contingency table is constructed for each successful oscillator <italic>x</italic><sub><italic>i</italic></sub> ∈ <italic>X</italic> to compare the frequency of observing <italic>x</italic><sub><italic>i</italic></sub> within samples of the successful subspace against the frequency of observation in the overall space. (see Figure S5A for an illustration of this process). Finally, statistically significant overrepresentation is determined by the <italic>χ</italic><sup>2</sup> independence test with a significance threshold of <italic>p</italic> &lt; <italic>α</italic> = 0.05 after Bonferroni correction. To identify motifs based on the results of enumeration, we conduct the same hypothesis test on each oscillator, except using ground-truth frequencies found by enumeration.</p>
</sec>
<sec id="s5">
<title>Code availability</title>
<p>CircuiTree, written in Python 3.10, is available on GitHub (<ext-link ext-link-type="uri" xlink:href="https://doi.org/10.5281/zenodo.11285522">https://doi.org/10.5281/zenodo.11285522</ext-link>). The code used to run computational experiments, perform analyses, and plot results is available separately at <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.5281/zenodo.11285550">https://doi.org/10.5281/zenodo.11285550</ext-link>.</p>
</sec>
</sec>
</body>
<back>
<ack>
<title>Acknowledgments</title>
<p>We thank M. Elowitz, J. Bois, A. Barr, L. Morsut, J. Courte, and J. Paulsson for scientific discussions. We thank J. Bois and G. Manela for advice and assistance on scientific software development. We thank J. Gornet for assistance with distributed computing. We are grateful to I.-M. Strazhnik for assistance with figures and illustrations.</p>
</ack>
<sec id="suppd1e1929" sec-type="supplementary-material">
<title>Additional files</title>
<supplementary-material id="d1e1920">
<label>Supplementary Figures</label>
<media xlink:href="supplements/635147_file02.pdf"/>
</supplementary-material>
</sec>
<ref-list>
<title>References</title>
<ref id="c1"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Alon</surname> <given-names>U.</given-names></string-name></person-group> <article-title>Network motifs: theory and experimental approaches</article-title>. <source>Nature Reviews Genetics</source>. <year>2007</year> <month>Jun</month>; <volume>8</volume>(<issue>6</issue>):<fpage>450</fpage>–<lpage>461</lpage>, doi: <pub-id pub-id-type="doi">10.1038/nrg2102</pub-id>, <publisher-name>Nature Publishing Group</publisher-name>.</mixed-citation></ref>
<ref id="c2"><mixed-citation publication-type="book"><person-group person-group-type="author"><string-name><surname>Alon</surname> <given-names>U.</given-names></string-name></person-group> <source>An Introduction to Systems Biology: Design Principles of Biological Circuits</source>. 2 ed. <publisher-loc>Boca Raton</publisher-loc>: <publisher-name>Chapman and Hall/CRC</publisher-name>; <year>2019</year>. doi: <pub-id pub-id-type="doi">10.1201/9780429283321</pub-id>.</mixed-citation></ref>
<ref id="c3"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Aubury</surname> <given-names>M</given-names></string-name>, <string-name><surname>Luk</surname> <given-names>W.</given-names></string-name></person-group> <article-title>Binomial filters</article-title>. <source>Journal of VLSI signal processing systems for signal, image and video technology</source>. <year>1996</year> <month>Jan</month>; <volume>12</volume>(<issue>1</issue>):<fpage>35</fpage>–<lpage>50</lpage>, doi: <pub-id pub-id-type="doi">10.1007/BF00936945</pub-id>.</mixed-citation></ref>
<ref id="c4"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Auer</surname> <given-names>P</given-names></string-name>, <string-name><surname>Cesa-Bianchi</surname> <given-names>N</given-names></string-name>, <string-name><surname>Fischer</surname> <given-names>P.</given-names></string-name></person-group> <article-title>Finite-time Analysis of the Multiarmed Bandit Problem</article-title>. <source>Machine Learning</source>. <year>2002</year> <month>May</month>; <volume>47</volume>(<issue>2</issue>):<fpage>235</fpage>–<lpage>256</lpage>. doi: <pub-id pub-id-type="doi">10.1023/A:1013689704352</pub-id>.</mixed-citation></ref>
<ref id="c5"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Bell-Pedersen</surname> <given-names>D</given-names></string-name>, <string-name><surname>Cassone</surname> <given-names>VM</given-names></string-name>, <string-name><surname>Earnest</surname> <given-names>DJ</given-names></string-name>, <string-name><surname>Golden</surname> <given-names>SS</given-names></string-name>, <string-name><surname>Hardin</surname> <given-names>PE</given-names></string-name>, <string-name><surname>Thomas</surname> <given-names>TL</given-names></string-name>, <string-name><surname>Zoran</surname> <given-names>MJ</given-names></string-name></person-group>. <article-title>Circadian rhythms from multiple oscillators: lessons from diverse organisms</article-title>. <source>Nature Reviews Genetics</source>. <year>2005</year> <month>Jul</month>; <volume>6</volume>(<issue>7</issue>):<fpage>544</fpage>–<lpage>556</lpage>, doi: <pub-id pub-id-type="doi">10.1038/nrg1633</pub-id>, <publisher-name>Nature Publishing Group</publisher-name>.</mixed-citation></ref>
<ref id="c6"><mixed-citation publication-type="confproc"><person-group person-group-type="author"><string-name><surname>Browne</surname> <given-names>CB</given-names></string-name>, <string-name><surname>Powley</surname> <given-names>E</given-names></string-name>, <string-name><surname>Whitehouse</surname> <given-names>D</given-names></string-name>, <string-name><surname>Lucas</surname> <given-names>SM</given-names></string-name>, <string-name><surname>Cowling</surname> <given-names>PI</given-names></string-name>, <string-name><surname>Rohlfshagen</surname> <given-names>P</given-names></string-name>, <string-name><surname>Tavener</surname> <given-names>S</given-names></string-name>, <string-name><surname>Perez</surname> <given-names>D</given-names></string-name>, <string-name><surname>Samothrakis</surname> <given-names>S</given-names></string-name>, <string-name><surname>Colton</surname> <given-names>S.</given-names></string-name></person-group> <article-title>A Survey of Monte Carlo Tree Search Methods</article-title>. <conf-name>IEEE Transactions on Computational Intelligence and AI in Games</conf-name>. <year>2012</year> <month>Mar</month>; <volume>4</volume>(<issue>1</issue>):<fpage>1</fpage>–<lpage>43</lpage>. doi: <pub-id pub-id-type="doi">10.1109/TCIAIG.2012.2186810</pub-id>.</mixed-citation></ref>
<ref id="c7"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Cao</surname> <given-names>Y</given-names></string-name>, <string-name><surname>Gillespie</surname> <given-names>DT</given-names></string-name>, <string-name><surname>Petzold</surname> <given-names>LR</given-names></string-name></person-group>. <article-title>The slow-scale stochastic simulation algorithm</article-title>. <source>The Journal of Chemical Physics</source>. <year>2004</year> <month>Dec</month>; <volume>122</volume>(<issue>1</issue>):<fpage>014116</fpage>. doi: <pub-id pub-id-type="doi">10.1063/1.1824902</pub-id>.</mixed-citation></ref>
<ref id="c8"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Chandra</surname> <given-names>FA</given-names></string-name>, <string-name><surname>Buzi</surname> <given-names>G</given-names></string-name>, <string-name><surname>Doyle</surname> <given-names>JC</given-names></string-name></person-group>. <article-title>Glycolytic Oscillations and Limits on Robust Efficiency</article-title>. <source>Science</source>. <year>2011</year> <month>Jul</month>; <volume>333</volume>(<issue>6039</issue>):<fpage>187</fpage>–<lpage>192</lpage>. doi: <pub-id pub-id-type="doi">10.1126/science.1200705</pub-id>.</mixed-citation></ref>
<ref id="c9"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Chau</surname> <given-names>AH</given-names></string-name>, <string-name><surname>Walter</surname> <given-names>JM</given-names></string-name>, <string-name><surname>Gerardin</surname> <given-names>J</given-names></string-name>, <string-name><surname>Tang</surname> <given-names>C</given-names></string-name>, <string-name><surname>Lim</surname> <given-names>WA</given-names></string-name></person-group>. <article-title>Designing Synthetic Regulatory Networks Capable of Self-Organizing Cell Polarization</article-title>. <source>Cell</source>. <year>2012</year> <month>Oct</month>; <volume>151</volume>(<issue>2</issue>):<fpage>320</fpage>–<lpage>332</lpage>. <ext-link ext-link-type="uri" xlink:href="https://www.sciencedirect.com/science/article/pii/S009286741201121X">https://www.sciencedirect.com/science/article/pii/S009286741201121X</ext-link>, doi: <pub-id pub-id-type="doi">10.1016/j.cell.2012.08.040</pub-id>.</mixed-citation></ref>
<ref id="c10"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Cheng</surname> <given-names>P</given-names></string-name>, <string-name><surname>Yang</surname> <given-names>Y</given-names></string-name>, <string-name><surname>Liu</surname> <given-names>Y.</given-names></string-name></person-group> <article-title>Interlocked feedback loops contribute to the robustness of the Neurospora circadian clock</article-title>. <source>Proceedings of the National Academy of Sciences</source>. <year>2001</year> <month>Jun</month>; <volume>98</volume>(<issue>13</issue>):<fpage>7408</fpage>–<lpage>7413</lpage>. <ext-link ext-link-type="uri" xlink:href="https://www.pnas.org/doi/10.1073/pnas.121170298">https://www.pnas.org/doi/10.1073/pnas.121170298</ext-link>, doi: <pub-id pub-id-type="doi">10.1073/pnas.121170298</pub-id>, publisher: <publisher-name>Proceedings of the National Academy of Sciences</publisher-name>.</mixed-citation></ref>
<ref id="c11"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Cotterell</surname> <given-names>J</given-names></string-name>, <string-name><surname>Sharpe</surname> <given-names>J.</given-names></string-name></person-group> <article-title>An atlas of gene regulatory networks reveals multiple three-gene mechanisms for interpreting morphogen gradients</article-title>. <source>Molecular Systems Biology</source>. <year>2010</year> <month>Jan</month>; <volume>6</volume>(<issue>1</issue>):<fpage>425</fpage>. doi: <pub-id pub-id-type="doi">10.1038/msb.2010.74</pub-id>.</mixed-citation></ref>
<ref id="c12"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Daniels</surname> <given-names>KG</given-names></string-name>, <string-name><surname>Wang</surname> <given-names>S</given-names></string-name>, <string-name><surname>Simic</surname> <given-names>MS</given-names></string-name>, <string-name><surname>Bhargava</surname> <given-names>HK</given-names></string-name>, <string-name><surname>Capponi</surname> <given-names>S</given-names></string-name>, <string-name><surname>Tonai</surname> <given-names>Y</given-names></string-name>, <string-name><surname>Yu</surname> <given-names>W</given-names></string-name>, <string-name><surname>Bianco</surname> <given-names>S</given-names></string-name>, <string-name><surname>Lim</surname> <given-names>WA</given-names></string-name></person-group>. <article-title>Decoding CAR T cell phenotype using combinatorial signaling motif libraries and machine learning</article-title>. <source>Science</source>. <year>2022</year> <month>Dec</month>; <volume>378</volume>(<issue>6625</issue>):<fpage>1194</fpage>–<lpage>1200</lpage>. doi: <pub-id pub-id-type="doi">10.1126/science.abq0225</pub-id>.</mixed-citation></ref>
<ref id="c13"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Dannenfelser</surname> <given-names>R</given-names></string-name>, <string-name><surname>Allen</surname> <given-names>GM</given-names></string-name>, <string-name><surname>VanderSluis</surname> <given-names>B</given-names></string-name>, <string-name><surname>Koegel</surname> <given-names>AK</given-names></string-name>, <string-name><surname>Levinson</surname> <given-names>S</given-names></string-name>, <string-name><surname>Stark</surname> <given-names>SR</given-names></string-name>, <string-name><surname>Yao</surname> <given-names>V</given-names></string-name>, <string-name><surname>Tadych</surname> <given-names>A</given-names></string-name>, <string-name><surname>Troyanskaya</surname> <given-names>OG</given-names></string-name>, <string-name><surname>Lim</surname> <given-names>WA</given-names></string-name></person-group>. <article-title>Discriminatory Power of Combinatorial Antigen Recognition in Cancer T Cell Therapies</article-title>. <source>Cell Systems</source>. <year>2020</year> <month>Sep</month>; <volume>11</volume>(<issue>3</issue>):<fpage>215</fpage>–<lpage>228.e5.</lpage> doi: <pub-id pub-id-type="doi">10.1016/j.cels.2020.08.002</pub-id>.</mixed-citation></ref>
<ref id="c14"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Davies</surname> <given-names>J.</given-names></string-name></person-group> <article-title>Using synthetic biology to explore principles of development</article-title>. <source>Development</source>. <year>2017</year> <month>Apr</month>; <volume>144</volume>(<issue>7</issue>):<fpage>1146</fpage>–<lpage>1158</lpage>. doi: <pub-id pub-id-type="doi">10.1242/dev.144196</pub-id>.</mixed-citation></ref>
<ref id="c15"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Elowitz</surname> <given-names>MB</given-names></string-name>, <string-name><surname>Leibler</surname> <given-names>S.</given-names></string-name></person-group> <article-title>A synthetic oscillatory network of transcriptional regulators</article-title>. <source>Nature</source>. <year>2000</year> <month>Jan</month>; <volume>403</volume>(<issue>6767</issue>):<fpage>335</fpage>–<lpage>338</lpage>. doi: <pub-id pub-id-type="doi">10.1038/35002125</pub-id>.</mixed-citation></ref>
<ref id="c16"><mixed-citation publication-type="book"><person-group person-group-type="author"><string-name><surname>Enzenberger</surname> <given-names>M</given-names></string-name>, <string-name><surname>Müller</surname> <given-names>M.</given-names></string-name></person-group> <chapter-title>A Lock-Free Multithreaded Monte-Carlo Tree Search Algorithm</chapter-title>. In: <person-group person-group-type="editor"><string-name><surname>van den Herik</surname> <given-names>HJ</given-names></string-name>, <string-name><surname>Spronck</surname> <given-names>P</given-names></string-name></person-group>, editors. <source>Advances in Computer Games Lecture Notes in Computer Science</source>, <publisher-loc>Berlin, Heidelberg</publisher-loc>: <publisher-name>Springer</publisher-name>; <year>2010</year>. p. <fpage>14</fpage>–<lpage>20</lpage>. doi: <pub-id pub-id-type="doi">10.1007/978-3-642-12993-3_2</pub-id>.</mixed-citation></ref>
<ref id="c17"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Ferrell</surname> <given-names>JE</given-names></string-name>, <string-name><surname>Tsai</surname> <given-names>TYC</given-names></string-name>, <string-name><surname>Yang</surname> <given-names>Q.</given-names></string-name></person-group> <article-title>Modeling the Cell Cycle: Why Do Certain Circuits Oscillate?</article-title> <source>Cell</source>. <year>2011</year> <month>Mar</month>; <volume>144</volume>(<issue>6</issue>):<fpage>874</fpage>–<lpage>885</lpage>. doi: <pub-id pub-id-type="doi">10.1016/j.cell.2011.03.006</pub-id>.</mixed-citation></ref>
<ref id="c18"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Fleischer</surname> <given-names>K</given-names></string-name>, <string-name><surname>Barr</surname> <given-names>A.</given-names></string-name></person-group> <article-title>A Simulation Testbed for the Study of Multicellular Development: The Multiple Mechanisms of Morphogenesis</article-title>. <source>Artificial Life III</source>. <year>1997</year> <month>Feb</month>;.</mixed-citation></ref>
<ref id="c19"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>François</surname> <given-names>P</given-names></string-name>, <string-name><surname>Hakim</surname> <given-names>V.</given-names></string-name></person-group> <article-title>Design of genetic networks with specified functions by evolution in silico</article-title>. <source>Proceedings of the National Academy of Sciences</source>. <year>2004</year> <month>Jan</month>; <volume>101</volume>(<issue>2</issue>):<fpage>580</fpage>–<lpage>585</lpage>. doi: <pub-id pub-id-type="doi">10.1073/pnas.0304532101</pub-id>.</mixed-citation></ref>
<ref id="c20"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>François</surname> <given-names>P</given-names></string-name>, <string-name><surname>Hakim</surname> <given-names>V</given-names></string-name>, <string-name><surname>Siggia</surname> <given-names>ED.</given-names></string-name></person-group> <article-title>Deriving structure from evolution: metazoan segmentation</article-title>. <source>Molecular Systems Biology</source>. <year>2007</year> <month>Jan</month>; <volume>3</volume>(<issue>1</issue>):<fpage>154</fpage>. doi: <pub-id pub-id-type="doi">10.1038/msb4100192</pub-id>.</mixed-citation></ref>
<ref id="c21"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>François</surname> <given-names>P</given-names></string-name>, <string-name><surname>Siggia</surname> <given-names>ED.</given-names></string-name></person-group> <article-title>A case study of evolutionary computation of biochemical adaptation</article-title>. <source>Physical Biology</source>. <year>2008</year> <month>Jun</month>; <volume>5</volume>(<issue>2</issue>):<fpage>026009</fpage>. <pub-id pub-id-type="doi">10.1088/1478-3975/5/2/026009</pub-id>, doi: <pub-id pub-id-type="doi">10.1088/1478-3975/5/2/026009</pub-id>.</mixed-citation></ref>
<ref id="c22"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>François</surname> <given-names>P</given-names></string-name>, <string-name><surname>Siggia</surname> <given-names>ED.</given-names></string-name></person-group> <article-title>Predicting embryonic patterning using mutual entropy fitness and in silico evolution</article-title>. <source>Development</source>. <year>2010</year> <month>Jul</month>; <volume>137</volume>(<issue>14</issue>):<fpage>2385</fpage>–<lpage>2395</lpage>. doi: <pub-id pub-id-type="doi">10.1242/dev.048033</pub-id>.</mixed-citation></ref>
<ref id="c23"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Gardner</surname> <given-names>TS</given-names></string-name>, <string-name><surname>Cantor</surname> <given-names>CR</given-names></string-name>, <string-name><surname>Collins</surname> <given-names>JJ</given-names></string-name></person-group>. <article-title>Construction of a genetic toggle switch in Escherichia coli</article-title>. <source>Nature</source>. <year>2000</year> <month>Jan</month>; <volume>403</volume>(<issue>6767</issue>):<fpage>339</fpage>–<lpage>342</lpage>. doi: <pub-id pub-id-type="doi">10.1038/35002131</pub-id>.</mixed-citation></ref>
<ref id="c24"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Gerardin</surname> <given-names>J</given-names></string-name>, <string-name><surname>Reddy</surname> <given-names>NR</given-names></string-name>, <string-name><surname>Lim</surname> <given-names>WA</given-names></string-name></person-group>. <article-title>The Design Principles of Biochemical Timers: Circuits that Discriminate between Transient and Sustained Stimulation</article-title>. <source>Cell Systems</source>. <year>2019</year> <month>Sep</month>; <volume>9</volume>(<issue>3</issue>):<fpage>297</fpage>–<lpage>308.e2.</lpage> <ext-link ext-link-type="uri" xlink:href="https://www.sciencedirect.com/science/article/pii/S2405471219302650">https://www.sciencedirect.com/science/article/pii/S2405471219302650</ext-link>, doi: <pub-id pub-id-type="doi">10.1016/j.cels.2019.07.008</pub-id>.</mixed-citation></ref>
<ref id="c25"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Geva-Zatorsky</surname> <given-names>N</given-names></string-name>, <string-name><surname>Dekel</surname> <given-names>E</given-names></string-name>, <string-name><surname>Batchelor</surname> <given-names>E</given-names></string-name>, <string-name><surname>Lahav</surname> <given-names>G</given-names></string-name>, <string-name><surname>Alon</surname> <given-names>U.</given-names></string-name></person-group> <article-title>Fourier analysis and systems identification of the p53 feedback loop</article-title>. <source>Proceedings of the National Academy of Sciences</source>. <year>2010</year> <month>Jul</month>; <volume>107</volume>(<issue>30</issue>):<fpage>13550</fpage>–<lpage>13555</lpage>, doi: <pub-id pub-id-type="doi">10.1073/pnas.1001107107</pub-id>.</mixed-citation></ref>
<ref id="c26"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Geva-Zatorsky</surname> <given-names>N</given-names></string-name>, <string-name><surname>Rosenfeld</surname> <given-names>N</given-names></string-name>, <string-name><surname>Itzkovitz</surname> <given-names>S</given-names></string-name>, <string-name><surname>Milo</surname> <given-names>R</given-names></string-name>, <string-name><surname>Sigal</surname> <given-names>A</given-names></string-name>, <string-name><surname>Dekel</surname> <given-names>E</given-names></string-name>, <string-name><surname>Yarnitzky</surname> <given-names>T</given-names></string-name>, <string-name><surname>Liron</surname> <given-names>Y</given-names></string-name>, <string-name><surname>Polak</surname> <given-names>P</given-names></string-name>, <string-name><surname>Lahav</surname> <given-names>G</given-names></string-name>, <string-name><surname>Alon</surname> <given-names>U.</given-names></string-name></person-group> <article-title>Oscillations and variability in the p53 system</article-title>. <source>Molecular Systems Biology</source>. <year>2006</year> <month>Jun</month>; <volume>2</volume>:2006.0033. <ext-link ext-link-type="uri" xlink:href="https://www.ncbi.nlm.nih.gov/pmc/articles/PMC1681500/">https://www.ncbi.nlm.nih.gov/pmc/articles/PMC1681500/</ext-link>, doi: <pub-id pub-id-type="doi">10.1038/msb4100068</pub-id>.</mixed-citation></ref>
<ref id="c27"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Gillespie</surname> <given-names>DT</given-names></string-name></person-group>. <article-title>Exact stochastic simulation of coupled chemical reactions</article-title>. <source>The Journal of Physical Chemistry</source>. <year>1977</year> <month>Dec</month>; <volume>81</volume>(<issue>25</issue>):<fpage>2340</fpage>–<lpage>2361</lpage>. doi: <pub-id pub-id-type="doi">10.1021/j100540a008</pub-id>.</mixed-citation></ref>
<ref id="c28"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Heltberg</surname> <given-names>ML</given-names></string-name>, <string-name><surname>Krishna</surname> <given-names>S</given-names></string-name>, <string-name><surname>Kadanoff</surname> <given-names>LP</given-names></string-name>, <string-name><surname>Jensen</surname> <given-names>MH</given-names></string-name></person-group>. <article-title>A tale of two rhythms: Locked clocks and chaos in biology</article-title>. <source>Cell Systems</source>. <year>2021</year> <month>Apr</month>; <volume>12</volume>(<issue>4</issue>):<fpage>291</fpage>–<lpage>303</lpage>. doi: <pub-id pub-id-type="doi">10.1016/j.cels.2021.03.003</pub-id>.</mixed-citation></ref>
<ref id="c29"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Jiménez</surname> <given-names>A</given-names></string-name>, <string-name><surname>Cotterell</surname> <given-names>J</given-names></string-name>, <string-name><surname>Munteanu</surname> <given-names>A</given-names></string-name>, <string-name><surname>Sharpe</surname> <given-names>J.</given-names></string-name></person-group> <article-title>A spectrum of modularity in multi-functional gene circuits</article-title>. <source>Molecular Systems Biology</source>. <year>2017</year>; <volume>13</volume>(<issue>4</issue>):<fpage>925</fpage>. doi: <pub-id pub-id-type="doi">10.15252/msb.20167347</pub-id>.</mixed-citation></ref>
<ref id="c30"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Jones</surname> <given-names>EM</given-names></string-name>, <string-name><surname>Marken</surname> <given-names>JP</given-names></string-name>, <string-name><surname>Silver</surname> <given-names>PA</given-names></string-name></person-group>. <article-title>Synthetic microbiology in sustainability applications</article-title>. <source>Nature Reviews Microbiology</source>. <year>2024</year> <month>Jan</month>; p. <fpage>1</fpage>–<lpage>15</lpage>. doi: <pub-id pub-id-type="doi">10.1038/s41579-023-01007-9</pub-id>.</mixed-citation></ref>
<ref id="c31"><mixed-citation publication-type="book"><person-group person-group-type="author"><string-name><surname>Kocsis</surname> <given-names>L</given-names></string-name>, <string-name><surname>Szepesvári</surname> <given-names>C.</given-names></string-name></person-group> <chapter-title>Bandit Based Monte-Carlo Planning</chapter-title>. In: <person-group person-group-type="editor"><string-name><surname>Fürnkranz</surname> <given-names>J</given-names></string-name>, <string-name><surname>Scheffer</surname> <given-names>T</given-names></string-name>, <string-name><surname>Spiliopoulou</surname> <given-names>M</given-names></string-name></person-group>, editors. <source>Machine Learning: ECML 2006 Lecture Notes in Computer Science</source>, <publisher-loc>Berlin, Heidelberg</publisher-loc>: <publisher-name>Springer</publisher-name>; <year>2006</year>. p. <fpage>282</fpage>–<lpage>293</lpage>. doi: <pub-id pub-id-type="doi">10.1007/11871842_29</pub-id>.</mixed-citation></ref>
<ref id="c32"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Lee</surname> <given-names>K</given-names></string-name>, <string-name><surname>Loros</surname> <given-names>JJ</given-names></string-name>, <string-name><surname>Dunlap</surname> <given-names>JC</given-names></string-name></person-group>. <article-title>Interconnected Feedback Loops in the Neurospora Circadian System</article-title>. <source>Science</source>. <year>2000</year> <month>Jul</month>; <volume>289</volume>(<issue>5476</issue>):<fpage>107</fpage>–<lpage>110</lpage>. doi: <pub-id pub-id-type="doi">10.1126/science.289.5476.107</pub-id>.</mixed-citation></ref>
<ref id="c33"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Lim</surname> <given-names>WA</given-names></string-name>, <string-name><surname>Lee</surname> <given-names>CM</given-names></string-name>, <string-name><surname>Tang</surname> <given-names>C.</given-names></string-name></person-group> <article-title>Design Principles of Regulatory Networks: Searching for the Molecular Algorithms of the Cell</article-title>. <source>Molecular Cell</source>. <year>2013</year> <month>Jan</month>; <volume>49</volume>(<issue>2</issue>):<fpage>202</fpage>–<lpage>212</lpage>. doi: <pub-id pub-id-type="doi">10.1016/j.molcel.2012.12.020</pub-id>.</mixed-citation></ref>
<ref id="c34"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Ma</surname> <given-names>W</given-names></string-name>, <string-name><surname>Trusina</surname> <given-names>A</given-names></string-name>, <string-name><surname>El-Samad</surname> <given-names>H</given-names></string-name>, <string-name><surname>Lim</surname> <given-names>WA</given-names></string-name>, <string-name><surname>Tang</surname> <given-names>C.</given-names></string-name></person-group> <article-title>Defining Network Topologies that Can Achieve Biochemical Adaptation</article-title>. <source>Cell</source>. <year>2009</year> <month>Aug</month>; <volume>138</volume>(<issue>4</issue>):<fpage>760</fpage>–<lpage>773</lpage>. <ext-link ext-link-type="uri" xlink:href="https://www.sciencedirect.com/science/article/pii/S0092867409007120">https://www.sciencedirect.com/science/article/pii/S0092867409007120</ext-link>, doi: <pub-id pub-id-type="doi">10.1016/j.cell.2009.06.013</pub-id>.</mixed-citation></ref>
<ref id="c35"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Milo</surname> <given-names>R</given-names></string-name>, <string-name><surname>Shen-Orr</surname> <given-names>S</given-names></string-name>, <string-name><surname>Itzkovitz</surname> <given-names>S</given-names></string-name>, <string-name><surname>Kashtan</surname> <given-names>N</given-names></string-name>, <string-name><surname>Chklovskii</surname> <given-names>D</given-names></string-name>, <string-name><surname>Alon</surname> <given-names>U.</given-names></string-name></person-group> <article-title>Network Motifs: Simple Building Blocks of Complex Networks</article-title>. <source>Science</source>. <year>2002</year> <month>Oct</month>; <volume>298</volume>(<issue>5594</issue>):<fpage>824</fpage>–<lpage>827</lpage>. doi: <pub-id pub-id-type="doi">10.1126/science.298.5594.824</pub-id>.</mixed-citation></ref>
<ref id="c36"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Milo</surname> <given-names>R</given-names></string-name>, <string-name><surname>Jorgensen</surname> <given-names>P</given-names></string-name>, <string-name><surname>Moran</surname> <given-names>U</given-names></string-name>, <string-name><surname>Weber</surname> <given-names>G</given-names></string-name>, <string-name><surname>Springer</surname> <given-names>M.</given-names></string-name></person-group> <article-title>BioNumbers—the database of key numbers in molecular and cell biology</article-title>. <source>Nucleic Acids Research</source>. <year>2010</year> <month>Jan</month>; <volume>38</volume>(<issue>suppl_1</issue>):<fpage>D750</fpage>–<lpage>D753</lpage>. doi: <pub-id pub-id-type="doi">10.1093/nar/gkp889</pub-id>.</mixed-citation></ref>
<ref id="c37"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Novák</surname> <given-names>B</given-names></string-name>, <string-name><surname>Tyson</surname> <given-names>JJ</given-names></string-name></person-group>. <article-title>Design principles of biochemical oscillators</article-title>. <source>Nature Reviews Molecular Cell Biology</source>. <year>2008</year> <month>Dec</month>; <volume>9</volume>(<issue>12</issue>):<fpage>981</fpage>–<lpage>991</lpage>, doi: <pub-id pub-id-type="doi">10.1038/nrm2530</pub-id>.</mixed-citation></ref>
<ref id="c38"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Otero-Muras</surname> <given-names>I</given-names></string-name>, <string-name><surname>Banga</surname> <given-names>JR</given-names></string-name></person-group>. <article-title>Design Principles of Biological Oscillators through Optimization: Forward and Reverse Analysis</article-title>. <source>PLOS ONE</source>. <year>2016</year> <month>Dec</month>; <volume>11</volume>(<issue>12</issue>):<fpage>e0166867</fpage>. doi: <pub-id pub-id-type="doi">10.1371/journal.pone.0166867</pub-id>.</mixed-citation></ref>
<ref id="c39"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Pokhilko</surname> <given-names>A</given-names></string-name>, <string-name><surname>Fernández</surname> <given-names>AP</given-names></string-name>, <string-name><surname>Edwards</surname> <given-names>KD</given-names></string-name>, <string-name><surname>Southern</surname> <given-names>MM</given-names></string-name>, <string-name><surname>Halliday</surname> <given-names>KJ</given-names></string-name>, <string-name><surname>Millar</surname> <given-names>AJ</given-names></string-name></person-group>. <article-title>The clock gene circuit in Arabidopsis includes a repressilator with additional feedback loops</article-title>. <source>Molecular Systems Biology</source>. <year>2012</year> <month>Jan</month>; <volume>8</volume>(<issue>1</issue>):<fpage>574</fpage>, doi: <pub-id pub-id-type="doi">10.1038/msb.2012.6</pub-id>.</mixed-citation></ref>
<ref id="c40"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Purnick</surname> <given-names>PEM</given-names></string-name>, <string-name><surname>Weiss</surname> <given-names>R.</given-names></string-name></person-group> <article-title>The second wave of synthetic biology: from modules to systems</article-title>. <source>Nature Reviews Molecular Cell Biology</source>. <year>2009</year> <month>Jun</month>; <volume>10</volume>(<issue>6</issue>):<fpage>410</fpage>–<lpage>422</lpage>, doi: <pub-id pub-id-type="doi">10.1038/nrm2698</pub-id>.</mixed-citation></ref>
<ref id="c41"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Qiao</surname> <given-names>L</given-names></string-name>, <string-name><surname>Zhang</surname> <given-names>ZB</given-names></string-name>, <string-name><surname>Zhao</surname> <given-names>W</given-names></string-name>, <string-name><surname>Wei</surname> <given-names>P</given-names></string-name>, <string-name><surname>Zhang</surname> <given-names>L.</given-names></string-name></person-group> <article-title>Network design principle for robust oscillatory behaviors with respect to biological noise</article-title>. <source>eLife</source>. <year>2022</year> <month>Sep</month>; <volume>11</volume>:<fpage>e76188</fpage>. doi: <pub-id pub-id-type="doi">10.7554/eLife.76188</pub-id>.</mixed-citation></ref>
<ref id="c42"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Qiao</surname> <given-names>L</given-names></string-name>, <string-name><surname>Zhao</surname> <given-names>W</given-names></string-name>, <string-name><surname>Tang</surname> <given-names>C</given-names></string-name>, <string-name><surname>Nie</surname> <given-names>Q</given-names></string-name>, <string-name><surname>Zhang</surname> <given-names>L.</given-names></string-name></person-group> <article-title>Network Topologies That Can Achieve Dual Function of Adaptation and Noise Attenuation</article-title>. <source>Cell Systems</source>. <year>2019</year> <month>Sep</month>; <volume>9</volume>(<issue>3</issue>):<fpage>271</fpage>–<lpage>285.e7.</lpage> <ext-link ext-link-type="uri" xlink:href="https://www.sciencedirect.com/science/article/pii/S2405471219302753">https://www.sciencedirect.com/science/article/pii/S2405471219302753</ext-link>, doi: <pub-id pub-id-type="doi">10.1016/j.cels.2019.08.006</pub-id>.</mixed-citation></ref>
<ref id="c43"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Schaerli</surname> <given-names>Y</given-names></string-name>, <string-name><surname>Munteanu</surname> <given-names>A</given-names></string-name>, <string-name><surname>Gili</surname> <given-names>M</given-names></string-name>, <string-name><surname>Cotterell</surname> <given-names>J</given-names></string-name>, <string-name><surname>Sharpe</surname> <given-names>J</given-names></string-name>, <string-name><surname>Isalan</surname> <given-names>M.</given-names></string-name></person-group> <article-title>A unified design space of synthetic stripe-forming networks</article-title>. <source>Nature Communications</source>. <year>2014</year> <month>Sep</month>; <volume>5</volume>:<fpage>4905</fpage>. doi: <pub-id pub-id-type="doi">10.1038/ncomms5905</pub-id>.</mixed-citation></ref>
<ref id="c44"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Shah</surname> <given-names>NA</given-names></string-name>, <string-name><surname>Sarkar</surname> <given-names>CA</given-names></string-name></person-group>. <article-title>Robust Network Topologies for Generating Switch-Like Cellular Responses</article-title>. <source>PLOS Computational Biology</source>. <year>2011</year> <month>Jun</month>; <volume>7</volume>(<issue>6</issue>):<fpage>e1002085</fpage>. doi: <pub-id pub-id-type="doi">10.1371/journal.pcbi.1002085</pub-id>.</mixed-citation></ref>
<ref id="c45"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Shannon</surname> <given-names>C.</given-names></string-name></person-group> <article-title>Programming a Computer for Playing Chess</article-title>. <source>Philosophical Magazine</source>. <year>1950</year> <month>Mar</month>; <volume>41</volume>(<issue>314</issue>). <ext-link ext-link-type="uri" xlink:href="https://www.computerhistory.org/chess/doc-431614f453dde/">https://www.computerhistory.org/chess/doc-431614f453dde/</ext-link>.</mixed-citation></ref>
<ref id="c46"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Shen</surname> <given-names>J</given-names></string-name>, <string-name><surname>Liu</surname> <given-names>F</given-names></string-name>, <string-name><surname>Tu</surname> <given-names>Y</given-names></string-name>, <string-name><surname>Tang</surname> <given-names>C.</given-names></string-name></person-group> <article-title>Finding gene network topologies for given biological function with recurrent neural network</article-title>. <source>Nature Communications</source>. <year>2021</year> <month>May</month>; <volume>12</volume>(<issue>1</issue>):<fpage>3125</fpage>. doi: <pub-id pub-id-type="doi">10.1038/s41467-021-23420-5</pub-id>.</mixed-citation></ref>
<ref id="c47"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Silver</surname> <given-names>D</given-names></string-name>, <string-name><surname>Huang</surname> <given-names>A</given-names></string-name>, <string-name><surname>Maddison</surname> <given-names>CJ</given-names></string-name>, <string-name><surname>Guez</surname> <given-names>A</given-names></string-name>, <string-name><surname>Sifre</surname> <given-names>L</given-names></string-name>, <string-name><surname>van den Driessche</surname> <given-names>G</given-names></string-name>, <string-name><surname>Schrittwieser</surname> <given-names>J</given-names></string-name>, <string-name><surname>Antonoglou</surname> <given-names>I</given-names></string-name>, <string-name><surname>Panneershelvam</surname> <given-names>V</given-names></string-name>, <string-name><surname>Lanctot</surname> <given-names>M</given-names></string-name>, <string-name><surname>Dieleman</surname> <given-names>S</given-names></string-name>, <string-name><surname>Grewe</surname> <given-names>D</given-names></string-name>, <string-name><surname>Nham</surname> <given-names>J</given-names></string-name>, <string-name><surname>Kalchbrenner</surname> <given-names>N</given-names></string-name>, <string-name><surname>Sutskever</surname> <given-names>I</given-names></string-name>, <string-name><surname>Lillicrap</surname> <given-names>T</given-names></string-name>, <string-name><surname>Leach</surname> <given-names>M</given-names></string-name>, <string-name><surname>Kavukcuoglu</surname> <given-names>K</given-names></string-name>, <string-name><surname>Graepel</surname> <given-names>T</given-names></string-name>, <string-name><surname>Hassabis</surname> <given-names>D.</given-names></string-name></person-group> <article-title>Mastering the game of Go with deep neural networks and tree search</article-title>. <source>Nature</source>. <year>2016</year> <month>Jan</month>; <volume>529</volume>(<issue>7587</issue>):<fpage>484</fpage>–<lpage>489</lpage>. doi: <pub-id pub-id-type="doi">10.1038/nature16961</pub-id>.</mixed-citation></ref>
<ref id="c48"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Silver</surname> <given-names>D</given-names></string-name>, <string-name><surname>Hubert</surname> <given-names>T</given-names></string-name>, <string-name><surname>Schrittwieser</surname> <given-names>J</given-names></string-name>, <string-name><surname>Antonoglou</surname> <given-names>I</given-names></string-name>, <string-name><surname>Lai</surname> <given-names>M</given-names></string-name>, <string-name><surname>Guez</surname> <given-names>A</given-names></string-name>, <string-name><surname>Lanctot</surname> <given-names>M</given-names></string-name>, <string-name><surname>Sifre</surname> <given-names>L</given-names></string-name>, <string-name><surname>Kumaran</surname> <given-names>D</given-names></string-name>, <string-name><surname>Graepel</surname> <given-names>T</given-names></string-name>, <string-name><surname>Lillicrap</surname> <given-names>T</given-names></string-name>, <string-name><surname>Simonyan</surname> <given-names>K</given-names></string-name>, <string-name><surname>Hassabis</surname> <given-names>D.</given-names></string-name></person-group> <article-title>A general reinforcement learning algorithm that masters chess, shogi, and Go through self-play</article-title>. <source>Science</source>. <year>2018</year> <month>Dec</month>; <volume>362</volume>(<issue>6419</issue>):<fpage>1140</fpage>–<lpage>1144</lpage>. doi: <pub-id pub-id-type="doi">10.1126/science.aar6404</pub-id>.</mixed-citation></ref>
<ref id="c49"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Silver</surname> <given-names>D</given-names></string-name>, <string-name><surname>Schrittwieser</surname> <given-names>J</given-names></string-name>, <string-name><surname>Simonyan</surname> <given-names>K</given-names></string-name>, <string-name><surname>Antonoglou</surname> <given-names>I</given-names></string-name>, <string-name><surname>Huang</surname> <given-names>A</given-names></string-name>, <string-name><surname>Guez</surname> <given-names>A</given-names></string-name>, <string-name><surname>Hubert</surname> <given-names>T</given-names></string-name>, <string-name><surname>Baker</surname> <given-names>L</given-names></string-name>, <string-name><surname>Lai</surname> <given-names>M</given-names></string-name>, <string-name><surname>Bolton</surname> <given-names>A</given-names></string-name>, <string-name><surname>Chen</surname> <given-names>Y</given-names></string-name>, <string-name><surname>Lillicrap</surname> <given-names>T</given-names></string-name>, <string-name><surname>Hui</surname> <given-names>F</given-names></string-name>, <string-name><surname>Sifre</surname> <given-names>L</given-names></string-name>, <string-name><surname>van den Driessche</surname> <given-names>G</given-names></string-name>, <string-name><surname>Graepel</surname> <given-names>T</given-names></string-name>, <string-name><surname>Hassabis</surname> <given-names>D.</given-names></string-name></person-group> <article-title>Mastering the game of Go without human knowledge</article-title>. <source>Nature</source>. <year>2017</year> <month>Oct</month>; <volume>550</volume>(<issue>7676</issue>):<fpage>354</fpage>–<lpage>359</lpage>. doi: <pub-id pub-id-type="doi">10.1038/nature24270</pub-id>.</mixed-citation></ref>
<ref id="c50"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Stricker</surname> <given-names>J</given-names></string-name>, <string-name><surname>Cookson</surname> <given-names>S</given-names></string-name>, <string-name><surname>Bennett</surname> <given-names>MR</given-names></string-name>, <string-name><surname>Mather</surname> <given-names>WH</given-names></string-name>, <string-name><surname>Tsimring</surname> <given-names>LS</given-names></string-name>, <string-name><surname>Hasty</surname> <given-names>J.</given-names></string-name></person-group> <article-title>A fast, robust and tunable synthetic gene oscillator</article-title>. <source>Nature</source>. <year>2008</year> <month>Nov</month>; <volume>456</volume>(<issue>7221</issue>):<fpage>516</fpage>–<lpage>519</lpage>. doi: <pub-id pub-id-type="doi">10.1038/nature07389</pub-id>.</mixed-citation></ref>
<ref id="c51"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Toda</surname> <given-names>S</given-names></string-name>, <string-name><surname>Blauch</surname> <given-names>LR</given-names></string-name>, <string-name><surname>Tang</surname> <given-names>SKY</given-names></string-name>, <string-name><surname>Morsut</surname> <given-names>L</given-names></string-name>, <string-name><surname>Lim</surname> <given-names>WA</given-names></string-name></person-group>. <article-title>Programming self-organizing multicellular structures with synthetic cell-cell signaling</article-title>. <source>Science</source>. <year>2018</year> <month>Jul</month>; <volume>361</volume>(<issue>6398</issue>):<fpage>156</fpage>–<lpage>162</lpage>. doi: <pub-id pub-id-type="doi">10.1126/science.aat0271</pub-id>.</mixed-citation></ref>
<ref id="c52"><mixed-citation publication-type="confproc"><person-group person-group-type="author"><string-name><surname>Tromp</surname> <given-names>J</given-names></string-name>, <string-name><surname>Farnebäck</surname> <given-names>G.</given-names></string-name></person-group> <article-title>Combinatorics of Go</article-title>. <conf-name>Computers and Games Lecture Notes in Computer Science</conf-name>, <conf-loc>Berlin, Heidelberg</conf-loc>; <year>2007</year>. p. <fpage>84</fpage>–<lpage>99</lpage>. doi: <pub-id pub-id-type="doi">10.1007/978-3-540-75538-8_8</pub-id>.</mixed-citation></ref>
<ref id="c53"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Tyson</surname> <given-names>JJ</given-names></string-name>, <string-name><surname>Hong</surname> <given-names>CI</given-names></string-name>, <string-name><surname>Dennis Thron</surname> <given-names>C</given-names></string-name>, <string-name><surname>Novak</surname> <given-names>B.</given-names></string-name></person-group> <article-title>A Simple Model of Circadian Rhythms Based on Dimerization and Proteolysis of PER and TIM</article-title>. <source>Biophysical Journal</source>. <year>1999</year> <month>Nov</month>; <volume>77</volume>(<issue>5</issue>):<fpage>2411</fpage>–<lpage>2417</lpage>. <ext-link ext-link-type="uri" xlink:href="https://www.sciencedirect.com/science/article/pii/S0006349599770785">https://www.sciencedirect.com/science/article/pii/S0006349599770785</ext-link>, doi: <pub-id pub-id-type="doi">10.1016/S0006-3495(99)77078-5</pub-id>.</mixed-citation></ref>
<ref id="c54"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Wagner</surname> <given-names>A.</given-names></string-name></person-group> <article-title>Circuit topology and the evolution of robustness in two-gene circadian oscillators</article-title>. <source>Proceedings of the National Academy of Sciences</source>. <year>2005</year> <month>Aug</month>; <volume>102</volume>(<issue>33</issue>):<fpage>11775</fpage>–<lpage>11780</lpage>. doi: <pub-id pub-id-type="doi">10.1073/pnas.0501094102</pub-id>.</mixed-citation></ref>
<ref id="c55"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Williams</surname> <given-names>JZ</given-names></string-name>, <string-name><surname>Allen</surname> <given-names>GM</given-names></string-name>, <string-name><surname>Shah</surname> <given-names>D</given-names></string-name>, <string-name><surname>Sterin</surname> <given-names>IS</given-names></string-name>, <string-name><surname>Kim</surname> <given-names>KH</given-names></string-name>, <string-name><surname>Garcia</surname> <given-names>VP</given-names></string-name>, <string-name><surname>Shavey</surname> <given-names>GE</given-names></string-name>, <string-name><surname>Yu</surname> <given-names>W</given-names></string-name>, <string-name><surname>Puig-Saus</surname> <given-names>C</given-names></string-name>, <string-name><surname>Tsoi</surname> <given-names>J</given-names></string-name>, <string-name><surname>Ribas</surname> <given-names>A</given-names></string-name>, <string-name><surname>Roybal</surname> <given-names>KT</given-names></string-name>, <string-name><surname>Lim</surname> <given-names>WA</given-names></string-name></person-group>. <article-title>Precise T cell recognition programs designed by transcriptionally linking multiple receptors</article-title>. <source>Science</source>. <year>2020</year> <month>Nov</month>; <volume>370</volume>(<issue>6520</issue>):<fpage>1099</fpage>–<lpage>1104</lpage>. doi: <pub-id pub-id-type="doi">10.1126/science.abc6270</pub-id>.</mixed-citation></ref>
<ref id="c56"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Woods</surname> <given-names>ML</given-names></string-name>, <string-name><surname>Leon</surname> <given-names>M</given-names></string-name>, <string-name><surname>Perez-Carrasco</surname> <given-names>R</given-names></string-name>, <string-name><surname>Barnes</surname> <given-names>CP</given-names></string-name></person-group>. <article-title>A Statistical Approach Reveals Designs for the Most Robust Stochastic Gene Oscillators</article-title>. <source>ACS Synthetic Biology</source>. <year>2016</year> <month>Jun</month>; <volume>5</volume>(<issue>6</issue>):<fpage>459</fpage>–<lpage>470</lpage>. doi: <pub-id pub-id-type="doi">10.1021/acssynbio.5b00179</pub-id>.</mixed-citation></ref>
<ref id="c57"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Zhu</surname> <given-names>R</given-names></string-name>, <string-name><surname>del Rio-Salgado</surname> <given-names>JM</given-names></string-name>, <string-name><surname>Garcia-Ojalvo</surname> <given-names>J</given-names></string-name>, <string-name><surname>Elowitz</surname> <given-names>MB</given-names></string-name></person-group>. <article-title>Synthetic multistability in mammalian cells</article-title>. <source>Science</source>. <year>2022</year> <month>Jan</month>; <volume>375</volume>(<issue>6578</issue>):<fpage>eabg9765</fpage>. doi: <pub-id pub-id-type="doi">10.1126/science.abg9765</pub-id>.</mixed-citation></ref>
<ref id="c58"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>świechowski</surname> <given-names>M</given-names></string-name>, <string-name><surname>Godlewski</surname> <given-names>K</given-names></string-name>, <string-name><surname>Sawicki</surname> <given-names>B</given-names></string-name>, <string-name><surname>Mańdziuk</surname> <given-names>J.</given-names></string-name></person-group> <article-title>Monte Carlo Tree Search: a review of recent modifications and applications</article-title>. <source>Artificial Intelligence Review</source>. <year>2022</year> <month>Jul</month>, doi: <pub-id pub-id-type="doi">10.1007/s10462-022-10228-y</pub-id>.</mixed-citation></ref>
</ref-list>
</back>
<sub-article id="sa0" article-type="editor-report">
<front-stub>
<article-id pub-id-type="doi">10.7554/eLife.106497.1.sa1</article-id>
<title-group>
<article-title>eLife Assessment</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author">
<name>
<surname>Gómez-Schiavon</surname>
<given-names>Mariana</given-names>
</name>
<role specific-use="editor">Reviewing Editor</role>
<aff>
<institution-wrap>
<institution>Universidad Nacional Autónoma de México</institution>
</institution-wrap>
<city>Querétaro</city>
<country>Mexico</country>
</aff>
</contrib>
</contrib-group>
<kwd-group kwd-group-type="evidence-strength">
<kwd>Convincing</kwd>
</kwd-group>
<kwd-group kwd-group-type="claim-importance">
<kwd>Valuable</kwd>
</kwd-group>
</front-stub>
<body>
<p>This manuscript presents a <bold>valuable</bold> computational tool for identifying 3-5 gene regulatory network topologies capable of generating oscillatory dynamics. The application of Monte Carlo Tree Search to circuit design is novel and effectively expands the scale at which non-linear behaviours can be explored in silico. The efficiency of the proposed algorithm is <bold>convincing</bold>, and the work will be of interest to the systems and synthetic biology communities. While the evolutionary implications remain unclear, the methodological contribution represents a significant advance in the field.</p>
</body>
</sub-article>
<sub-article id="sa1" article-type="referee-report">
<front-stub>
<article-id pub-id-type="doi">10.7554/eLife.106497.1.sa0</article-id>
<title-group>
<article-title>Joint Public Review:</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author">
<anonymous/>
<role specific-use="referee">Reviewer</role>
</contrib>
</contrib-group>
</front-stub>
<body>
<p>This manuscript presents an algorithm for identifying network topologies that exhibit a desired qualitative behaviour, with a particular focus on oscillations. The approach is first demonstrated on 3-node networks, where results can be validated through exhaustive search, and then extended to 5-node networks, where the search space becomes intractable. Network topologies are represented as directed graphs, and their dynamical behaviour is classified using stochastic simulations based on the Gillespie algorithm. To efficiently explore the large design space, the authors employ reinforcement learning via Monte Carlo Tree Search (MCTS), framing circuit design as a sequential decision-making process.</p>
<p>This work meaningfully extends the range of systems that can be explored in silico to uncover non-linear dynamics and represents a valuable methodological advance for the fields of systems and synthetic biology.</p>
<p>Strengths</p>
<p>The evidence presented is strong and compelling. The authors validate their results for 3-node networks through exhaustive search, and the findings for 5-node networks are consistent with previously reported motifs, lending credibility to the approach. The use of reinforcement learning to navigate the vast space of possible topologies is both original and effective, and represents a novel contribution to the field. The algorithm demonstrates convincing efficiency, and the ability to identify robust oscillatory topologies is particularly valuable. Expanding the scale of systems that can be systematically explored in silico marks a significant advance for the study of complex gene regulatory networks.</p>
<p>Weaknesses</p>
<p>The principal weakness of the manuscript lies in the interpretation of biological robustness. The authors identify network topologies that sustain oscillatory behaviour despite perturbations to the system or parameters. However, in many cases, this persistence is due to the presence of partially redundant oscillatory motifs within the network. While this observation is interesting and of clear value for circuit design, framing it as evidence of evolutionary robustness may be misleading. The &quot;mutant&quot; systems frequently exhibit altered oscillatory properties, such as changes in frequency or amplitude. From a functional cellular perspective, mere oscillation is insufficient - preservation of specific oscillation characteristics is often essential. This is particularly true in systems like circadian clocks, where misalignment with environmental cycles can have deleterious effects. Robustness, from an evolutionary standpoint, should therefore be framed as the capacity to maintain the functional phenotype, not merely the qualitative behaviour.</p>
<p>A secondary limitation is that, despite the methodological advances, the scale of the systems explored remains modest. While moving from 3- to 5-node systems is non-trivial, five elements still represent a relatively small network. It is somewhat surprising that the algorithm does not scale further, particularly when considering the performance of MCTS in other domains - for instance, modern chess engines routinely explore far larger decision trees. A discussion on current performance bottlenecks and potential avenues for improving scalability would be valuable.</p>
<p>Finally, it is worth noting that the emergence of oscillations in a model often depends not only on the topology but also critically on parameter choices and the nature of the nonlinearities. The use of Hill functions and high Hill coefficients is a common strategy to induce oscillatory dynamics. Thus, the reported results should be interpreted within the context of the modelling assumptions and parameter regimes employed in the simulations.</p>
</body>
</sub-article>
<sub-article id="sa2" article-type="author-comment">
<front-stub>
<article-id pub-id-type="doi">10.7554/eLife.106497.1.sa2</article-id>
<title-group>
<article-title>Author response:</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author">
<name>
<surname>Bhamidipati</surname>
<given-names>Pranav S</given-names>
</name>
<role specific-use="author">Author</role>
<contrib-id contrib-id-type="orcid">http://orcid.org/0000-0002-6199-6505</contrib-id></contrib>
<contrib contrib-type="author">
<name>
<surname>Thomson</surname>
<given-names>Matthew</given-names>
</name>
<role specific-use="author">Author</role>
<contrib-id contrib-id-type="orcid">http://orcid.org/0000-0003-1021-1234</contrib-id></contrib>
</contrib-group>
</front-stub>
<body>
<disp-quote content-type="editor-comment">
<p><bold>Public Review</bold></p>
<p><bold>Joint Public Review:</bold></p>
<p>This manuscript presents an algorithm for identifying network topologies that exhibit a desired qualitative behaviour, with a particular focus on oscillations. The approach is first demonstrated on 3-node networks, where results can be validated through exhaustive search, and then extended to 5-node networks, where the search space becomes intractable. Network topologies are represented as directed graphs, and their dynamical behaviour is classified using stochastic simulations based on the Gillespie algorithm. To efficiently explore the large design space, the authors employ reinforcement learning via Monte Carlo Tree Search (MCTS), framing circuit design as a sequential decision-making process.</p>
<p>This work meaningfully extends the range of systems that can be explored in silico to uncover non-linear dynamics and represents a valuable methodological advance for the fields of systems and synthetic biology.</p>
<p>Strengths</p>
<p>The evidence presented is strong and compelling. The authors validate their results for 3-node networks through exhaustive search, and the findings for 5-node networks are consistent with previously reported motifs, lending credibility to the approach. The use of reinforcement learning to navigate the vast space of possible topologies is both original and effective, and represents a novel contribution to the field. The algorithm demonstrates convincing efficiency, and the ability to identify robust oscillatory topologies is particularly valuable. Expanding the scale of systems that can be systematically explored in silico marks a significant advance for the study of complex gene regulatory networks.</p>
<p>Weaknesses</p>
<p>The principal weakness of the manuscript lies in the interpretation of biological robustness. The authors identify network topologies that sustain oscillatory behaviour despite perturbations to the system or parameters. However, in many cases, this persistence is due to the presence of partially redundant oscillatory motifs within the network. While this observation is interesting and of clear value for circuit design, framing it as evidence of evolutionary robustness may be misleading. The &quot;mutant&quot; systems frequently exhibit altered oscillatory properties, such as changes in frequency or amplitude. From a functional cellular perspective, mere oscillation is insufficient - preservation of specific oscillation characteristics is often essential. This is particularly true in systems like circadian clocks, where misalignment with environmental cycles can have deleterious effects. Robustness, from an evolutionary standpoint, should therefore be framed as the capacity to maintain the functional phenotype, not merely the qualitative behaviour.</p>
<p>A secondary limitation is that, despite the methodological advances, the scale of the systems explored remains modest. While moving from 3- to 5-node systems is non-trivial, five elements still represent a relatively small network. It is somewhat surprising that the algorithm does not scale further, particularly when considering the performance of MCTS in other domains - for instance, modern chess engines routinely explore far larger decision trees. A discussion on current performance bottlenecks and potential avenues for improving scalability would be valuable.</p>
<p>Finally, it is worth noting that the emergence of oscillations in a model often depends not only on the topology but also critically on parameter choices and the nature of the nonlinearities. The use of Hill functions and high Hill coefficients is a common strategy to induce oscillatory dynamics. Thus, the reported results should be interpreted within the context of the modelling assumptions and parameter regimes employed in the simulations.</p>
</disp-quote>
<p>We thank the reviewers for their careful consideration of our work and for the interesting feedback and scientific discussion. We are working on a revised text based on their recommendations, which will include some of the discussion below.</p>
<disp-quote content-type="editor-comment">
<p>This work meaningfully extends the range of systems that can be explored in silico to uncover non-linear dynamics and represents a valuable methodological advance for the fields of systems and synthetic biology.</p>
</disp-quote>
<p>We thank the reviewers for their positive assessment of our work’s impact!</p>
<disp-quote content-type="editor-comment">
<p>The use of reinforcement learning to navigate the vast space of possible topologies is both original and effective, and represents a novel contribution to the field. The algorithm demonstrates convincing efficiency, and the ability to identify robust oscillatory topologies is particularly valuable. Expanding the scale of systems that can be systematically explored in silico marks a significant advance for the study of complex gene regulatory networks.</p>
</disp-quote>
<p>We appreciate these kind comments about our work’s merits. We are excited to share our reinforcement learning (RL) based method with the fields of systems and synthetic biology, and we consider it a valuable tool for the systematic analysis and design of larger-scale regulatory networks!</p>
<disp-quote content-type="editor-comment">
<p>The principal weakness of the manuscript lies in the interpretation of biological robustness. The authors identify network topologies that sustain oscillatory behaviour despite perturbations to the system or parameters… [However, these] &quot;mutant&quot; systems frequently exhibit altered oscillatory properties, such as changes in frequency or amplitude. From a functional cellular perspective, mere oscillation is insufficient - preservation of specific oscillation characteristics is often essential. This is particularly true in systems like circadian clocks, where misalignment with environmental cycles can have deleterious effects. Robustness, from an evolutionary standpoint, should therefore be framed as the capacity to maintain the functional phenotype, not merely the qualitative behaviour.</p>
</disp-quote>
<p>We thank the reviewers for their attention to this point. In the large-scale circuit search, summarized in Figures 4A and 4B, we ran a search for 5-component oscillators that can spontaneously oscillate even when subjected to the deletion of a random gene. Some of the best performing circuits under these conditions exhibited a design feature we call “motif multiplexing,” in which multiple smaller motifs are interleaved in a way that makes oscillation possible under many different mutational scenarios. Interestingly, despite not selecting for preservation of frequency, the 3Ai+3Rep circuit (a 5-gene circuit highlighted in Figure 5) anecdotally appears to have a natural frequency that is robust to partial gene knockdowns, although not to complete gene deletions. As shown in Figure 5C, this circuit has a natural frequency of 6 cycles/hr (with one particular parameterization), and it can sustain a knockdown of any of its 5 genes to 50% of the wild-type transcription rate without altering the natural frequency by more than 20%.</p>
<p>However, we agree that there are salient differences between this training scenario and natural evolution. The revised text will clarify that these differences limit what conclusions can be drawn about biological evolution by analogy.  As the reviewers point out, we use the presence of spontaneous oscillations (with or without the deletion) as a measure of fitness, regardless of frequency, so as to screen for designs with promising behavior. Also, the deletion mutations introduced during training likely represent larger perturbations to the system than a typical mutation encountered during genome replication (for example, a point mutation in a response element leading to a moderate change in binding affinity). Finally, we do not introduce any entrainment. Real circadian oscillators are aligned to a 24-hour period (“entrained”) by environmental inputs such as light and temperature. For this reason, natural circadian clocks may have natural frequencies that are slightly shorter or longer than 24 hours, although a close proximity to the 24-hour period does seem to be an important selective factor [1].</p>
<disp-quote content-type="editor-comment">
<p>...despite the methodological advances, the scale of the systems explored remains modest. While moving from 3- to 5-node systems is non-trivial, five elements still represent a relatively small network. It is somewhat surprising that the algorithm does not scale further, particularly when considering the performance of MCTS in other domains - for instance, modern chess engines routinely explore far larger decision trees. A discussion on current performance bottlenecks and potential avenues for improving scalability would be valuable.</p>
</disp-quote>
<p>We thank the reviewers for their attention to this point. The main limitation we encountered to exploring circuits with more than 5 nodes in this work was the poor computational scaling of the Gillespie stochastic simulation algorithm, rather than a limitation of MCTS itself. While the average runtime of a 3-node circuit simulation was roughly 7 seconds, this number increased to 18-20 seconds with 5-node circuits. For this reason, we limited the search to topologies with ≤15 interaction arrows (15 sec/simulation). In general, the simulation time was proportional to the square of the number of transcription factors (TFs). We will revise the text to include the reason for stopping at 5 nodes, which is significant for understanding CircuiTree’s scaling properties.</p>
<p>With regards to scaling, an important advantage of CircuiTree is its ability to generate useful candidate designs after exploring only a portion of the search space. Like exhaustive search, given enough time, MCTS will comprehensively explore the search space and find all possible solutions. However, for large search spaces, RL-based agents are generally given a finite number of simulations (or time) to learn as much as possible.</p>
<p>Across machine learning (ML) applications [2] and particularly with RL models [3], this training time tends to obey a power law with respect to the underlying complexity of the problem. Thus we can use the complexity of the 3-node and 5-node searches to infer the current scaling limits of CircuiTree. The first oscillator topology was discovered after 2,280 simulations for the 3-node search, and in the 5-node search, the first oscillator using 5 nodes appeared at ~8e5 simulations, resulting in a power law of Y ~ 84.4 X<sup>0.333</sup>. Thus, useful candidate designs may be found for 6-node and 7-node searches after 4.5e7 and 5.26e9 simulations, respectively, even though these spaces contain 1.5e17 and 2.5e23 topologies, respectively. Thus, running a 7-node search with the current implementation of CircuiTree would require resources close to the current boundaries of computation, requiring roughly 1.8 million CPU-hours, or 2 weeks on 5,000 CPUs, assuming a 1-second simulation. These points will be incorporated into both the results and discussion sections in our revised text.</p>
<p>However, we are optimistic about CircuiTree’s potential to scale to much larger circuits with modifications to its algorithm. CircuiTree uses the original (so-called “vanilla”) implementation of MCTS, which has not been used in professional game-playing AIs in over a decade. Contemporary RL-based game-playing engines leverage deep neural networks to dramatically reduce the training time, using value networks to identify game-winning positions and policy networks to find game-winning moves. AlphaZero, developed by Google DeepMind to learn games by self-play and without domain knowledge, outperformed all other chess AIs after 44 million training games, much smaller than the 10^43 possible chess states [4]. Similarly, the game of go has 10<sup>170</sup> possible states, but AlphaZero outperformed other AIs after only 140 million games [4]. Large circuits live in similarly large search spaces; for example, 19-node and 20-node circuits represent spaces of 10<sup>172</sup> and 10<sup>190</sup> possible topologies. The revised text will include this discussion and identify value and policy networks, as well as more scalable simulation paradigms such as ODEs and neural ODEs, as our future directions for improving CircuiTree’s scalability.</p>
<p>Finally, our revised discussion will note some important differences between game-playing and biological circuit design. Unlike deterministic games like chess, the final value of a circuit topology is determined stochastically, by running a simulation whose fitness depends on the parameter set and initial conditions. Thus, state-for-state, it is possible that training an agent for circuit design may inherently require more simulations to achieve the same level of certainty compared to classical games. Additionally, while we often possess a priori knowledge about a game such as its overall difficulty or certain known strategies, we lack this frame of reference when searching for circuit designs. Thus, it remains challenging to know if and when a large space of designs has been “satisfactorily” or “comprehensively” searched, since the answer depends on data that are unknown, namely the quantity, quality, and location of solutions residing in the search space.</p>
<p>Not accounting for redundancy due to structural symmetries</p>
<disp-quote content-type="editor-comment">
<p>Finally, it is worth noting that the emergence of oscillations in a model often depends not only on the topology but also critically on parameter choices and the nature of the nonlinearities. The use of Hill functions and high Hill coefficients is a common strategy to induce oscillatory dynamics. Thus, the reported results should be interpreted within the context of the modelling assumptions and parameter regimes employed in the simulations.</p>
</disp-quote>
<p>In our dynamical modeling of transcription factor (TF) networks, we do not rely on continuum assumptions about promoter occupancy such as Hill functions. Rather, we model each reaction - transcription, translation, TF binding/unbinding, and degradation - explicitly, and individual molecules appear and disappear via stochastic birth and death events. Many natural TFs are homodimers that bind cooperatively to regulate transcription; similarly, we assume that pairs of TFs bind more stably to their response element than individual TFs. Thus, our model has similar cooperativity to a Hill function, and it can be shown that in the continuum limit, the effective Hill coefficient is always ≤2. Our revision will clarify this aspect of the modeling and include a derivation of this property. Currently, the parameter values used in the figures are shown in Table 2. In the revised text, these will be displayed in the body of the text as well for clarity.</p>
<p>Bibliography
(1) Spoelstra, K., Wikelski, M., Daan, S., Loudon, A. S. I., &amp; Hau, M. (2015). Natural selection against a circadian clock gene mutation in mice. PNAS, 113(3), 686–691. <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.1073/pnas.1516442113">https://doi.org/10.1073/pnas.1516442113</ext-link><ext-link ext-link-type="uri" xlink:href="http://arxiv.org/abs/2104.03113">http://arxiv.org/abs/2104.03113</ext-link>
(4) Silver, D., Hubert, T., Schrittwieser, J., Antonoglou, I., Lai, M., Guez, A., Lanctot, M., Sifre, L., Kumaran, D., Graepel, T., Lillicrap, T., Simonyan, K., &amp; Hassabis, D. (2018). A general reinforcement learning algorithm that Masters Chess, Shogi, and go through self-play. Science, 362(6419), 1140–1144. </p>
<p>
(2) Neumann, O., &amp; Gros, C. (2023). Scaling Laws for a Multi-Agent Reinforcement Learning Model. The Eleventh International Conference on Learning Representations. Retrieved from <ext-link ext-link-type="uri" xlink:href="https://openreview.net/forum?id=ZrEbzL9eQ3W">https://openreview.net/forum?id=ZrEbzL9eQ3W</ext-link>
(3) Jones, A. L. (2021). Scaling Scaling Laws with Board Games. arXiv [Cs.LG]. Retrieved from <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.1126/science.aar6404">https://doi.org/10.1126/science.aar6404</ext-link></p>
</body>
</sub-article>
</article>