<?xml version="1.0" ?><!DOCTYPE article PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Archiving and Interchange DTD v1.3 20210610//EN"  "JATS-archivearticle1-mathml3.dtd"><article xmlns:ali="http://www.niso.org/schemas/ali/1.0/" xmlns:xlink="http://www.w3.org/1999/xlink" article-type="research-article" dtd-version="1.3" xml:lang="en">
<front>
<journal-meta>
<journal-id journal-id-type="nlm-ta">elife</journal-id>
<journal-id journal-id-type="publisher-id">eLife</journal-id>
<journal-title-group>
<journal-title>eLife</journal-title>
</journal-title-group>
<issn publication-format="electronic" pub-type="epub">2050-084X</issn>
<publisher>
<publisher-name>eLife Sciences Publications, Ltd</publisher-name>
</publisher>
</journal-meta>
<article-meta>
<article-id pub-id-type="publisher-id">90627</article-id>
<article-id pub-id-type="doi">10.7554/eLife.90627</article-id>
<article-id pub-id-type="doi" specific-use="version">10.7554/eLife.90627.1</article-id>
<article-version-alternatives>
<article-version article-version-type="publication-state">reviewed preprint</article-version>
<article-version article-version-type="preprint-version">1.2</article-version>
</article-version-alternatives>
<article-categories>
<subj-group subj-group-type="heading">
<subject>Structural Biology and Molecular Biophysics</subject>
</subj-group>
</article-categories>
<title-group>
<article-title>Martinize2 and Vermouth: Unified Framework for Topology Generation</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author">
<name>
<surname>Kroon</surname>
<given-names>P C</given-names>
</name>
<xref ref-type="aff" rid="a1">1</xref>
</contrib>
<contrib contrib-type="author" corresp="yes">
<name>
<surname>Grunewald</surname>
<given-names>F</given-names>
</name>
<xref ref-type="aff" rid="a1">1</xref>
<xref ref-type="corresp" rid="cor1">*</xref>
</contrib>
<contrib contrib-type="author">
<name>
<surname>Barnoud</surname>
<given-names>J</given-names>
</name>
<xref ref-type="aff" rid="a1">1</xref>
<xref ref-type="aff" rid="a3">3</xref>
</contrib>
<contrib contrib-type="author">
<name>
<surname>van Tilburg</surname>
<given-names>M</given-names>
</name>
<xref ref-type="aff" rid="a1">1</xref>
</contrib>
<contrib contrib-type="author">
<name>
<surname>Souza</surname>
<given-names>P C T</given-names>
</name>
<xref ref-type="aff" rid="a1">1</xref>
<xref ref-type="aff" rid="a2">2</xref>
</contrib>
<contrib contrib-type="author">
<name>
<surname>Wassenaar</surname>
<given-names>T A</given-names>
</name>
<xref ref-type="aff" rid="a1">1</xref>
</contrib>
<contrib contrib-type="author" corresp="yes">
<name>
<surname>Marrink</surname>
<given-names>S J</given-names>
</name>
<xref ref-type="aff" rid="a1">1</xref>
<xref ref-type="corresp" rid="cor1">*</xref>
</contrib>
<aff id="a1"><label>1</label><institution>Groningen Biomolecular Sciences and Biotechnology Institute and Zernike Institute for advanced Material, University of Groningen</institution>, <addr-line>Groningen</addr-line>, <country>the Netherlands</country>.</aff>
<aff id="a2"><label>2</label><institution>Molecular Microbiology and Structural Biochemistry, UMR 5086 CNRS and University of Lyon</institution>, <addr-line>Lyon</addr-line>, <country>France</country>.</aff>
<aff id="a3"><label>3</label><institution><sup>5</sup>CiTIUS Intelligent Technologies Research Centre, Rúa de Jenaro de la Fuente</institution>, <addr-line>s/n, 15705 Santiago de Compostela, A Coruña</addr-line>, <country>Spain</country>.</aff>
</contrib-group>
<contrib-group content-type="section">
<contrib contrib-type="editor">
<name>
<surname>Cui</surname>
<given-names>Qiang</given-names>
</name>
<role>Reviewing Editor</role>
<aff>
<institution-wrap>
<institution>Boston University</institution>
</institution-wrap>
<city>Boston</city>
<country>United States of America</country>
</aff>
</contrib>
<contrib contrib-type="senior_editor">
<name>
<surname>Cui</surname>
<given-names>Qiang</given-names>
</name>
<role>Senior Editor</role>
<aff>
<institution-wrap>
<institution>Boston University</institution>
</institution-wrap>
<city>Boston</city>
<country>United States of America</country>
</aff>
</contrib>
</contrib-group>
<author-notes>
<corresp id="cor1"><label>*</label>Corresponding authors. <email>s.j.marrink@rug.nl</email>, <email>f.grunewald@rug.nl</email></corresp>
</author-notes>
<pub-date pub-type="epub">
<day>30</day>
<month>06</month>
<year>2023</year>
</pub-date>
<pub-date date-type="original-publication" iso-8601-date="2023-08-25">
<day>25</day>
<month>08</month>
<year>2023</year>
</pub-date>
<volume>12</volume>
<elocation-id>RP90627</elocation-id>
<history><date date-type="sent-for-review" iso-8601-date="2023-07-07">
<day>07</day>
<month>07</month>
<year>2023</year>
</date>
</history>
<pub-history>
<event>
<event-desc>Preprint posted</event-desc>
<date date-type="preprint" iso-8601-date="2023-06-30">
<day>30</day>
<month>06</month>
<year>2023</year>
</date>
<self-uri content-type="preprint" xlink:href="https://doi.org/10.48550/arXiv.2212.01191"/>
</event>
</pub-history>
<permissions>
<copyright-statement>© 2023, Kroon et al</copyright-statement>
<copyright-year>2023</copyright-year>
<copyright-holder>Kroon et al</copyright-holder>
<ali:free_to_read/>
<license xlink:href="https://creativecommons.org/licenses/by/4.0/">
<ali:license_ref>https://creativecommons.org/licenses/by/4.0/</ali:license_ref>
<license-p>This article is distributed under the terms of the <ext-link ext-link-type="uri" xlink:href="https://creativecommons.org/licenses/by/4.0/">Creative Commons Attribution License</ext-link>, which permits unrestricted use and redistribution provided that the original author and source are credited.</license-p>
</license>
</permissions>
<self-uri content-type="pdf" xlink:href="elife-preprint-90627-v1.pdf"/>
<abstract>
<title>Abstract</title>
<p>Ongoing advances in force field and computer hardware development enable the use of molecular dynamics (MD) to simulate increasingly complex systems with the ultimate goal of reaching cellular complexity. At the same time, rational design by high-throughput (HT) simulations is another forefront of MD. In these areas, the Martini coarse-grained force field, especially the latest version (<italic>i.e.</italic> v3), is being actively explored because it offers enhanced spatial-temporal resolution. However, the automation tools for preparing simulations with the Martini force field, accompanying the previous version, were not designed for HT simulations or studies of complex cellular systems. Therefore, they become a major limiting factor. To address these shortcomings, we present the open-source <italic>Vermouth</italic> python library. <italic>Vermouth</italic> is designed to become the unified framework for developing programs, which prepare, run, and analyze Martini simulations of complex systems. To demonstrate the power of the <italic>Vermouth</italic> library, the <italic>Martinize2</italic> program is showcased as a generalization of the <italic>martinize</italic> script, originally aimed to set up simulations of proteins. In contrast to the previous version, <italic>Martinize2</italic> automatically handles protonation states in proteins and post-translation modifications, offers more options to fine-tune structural biases such as the elastic network, and can convert non-protein molecules such as ligands. Finally, <italic>Martinize2</italic> is used in two high-complexity benchmarks. The entire I-TASSER protein template database as well as a subset of 200,000 structures from the AlphaFold Protein Structure Database are converted to CG resolution and we illustrate how the checks on input structure quality can safeguard high-throughput applications.</p>
</abstract>

</article-meta>
<notes>
<notes notes-type="competing-interest-statement">
<title>Competing interests</title>
<p>The authors declare no competing interests.</p>
</notes>
</notes>
</front>
<body>
<sec id="s1" sec-type="intro">
<title>Introduction</title>
<p>Molecular dynamics (MD) has grown to be a valuable and powerful tool in studying a variety of systems in molecular detail. Advances in force fields and computer hardware have enabled the use of MD in increasingly complex systems, exemplified by recent simulations of, <italic>e.g.</italic> realistic cell membranes<sup><xref ref-type="bibr" rid="c1">1</xref>,<xref ref-type="bibr" rid="c2">2</xref></sup>, virus particles<sup><xref ref-type="bibr" rid="c2">2</xref>,<xref ref-type="bibr" rid="c3">3</xref></sup>, and even complete aerosol droplets<sup><xref ref-type="bibr" rid="c4">4</xref></sup>. However, there is a growing interest to study systems of even greater complexity, culminating in molecularly detailed simulations of whole organelles<sup><xref ref-type="bibr" rid="c5">5</xref>,<xref ref-type="bibr" rid="c6">6</xref></sup> and the set goal of simulating entire cells<sup><xref ref-type="bibr" rid="c7">7</xref>,<xref ref-type="bibr" rid="c8">8</xref></sup>. Moreover, the growing demand for computer aided rational design relies on high-throughput simulations with millions of systems simulated in parallel.<sup><xref ref-type="bibr" rid="c9">9</xref>–<xref ref-type="bibr" rid="c11">11</xref></sup> Currently, the computational demand of MD methods representing all-atoms explicitly severely limits the access to spatial-temporal resolution needed to simulate the aforementioned systems. Coarse-grained (CG) MD methods overcome this challenge by grouping several atoms into one effective interaction site called bead and thus reducing the number of degrees of freedom that have to be simulated.</p>
<p>Among the most popular coarse-grained methods is the Martini force field.<sup><xref ref-type="bibr" rid="c12">12</xref>,<xref ref-type="bibr" rid="c13">13</xref></sup> Within the scope of the Martini force field about 2-5 non-hydrogen atoms are grouped into one bead. Nonbonded interactions between beads are defined in a discrete interaction table calibrated to reproduce thermodynamic data, whereas bonded interactions are matched to underlying atomistic reference simulations. Molecule parameters created following this approach are transferable between different systems and chemical contexts.<sup><xref ref-type="bibr" rid="c12">12</xref>,<xref ref-type="bibr" rid="c13">13</xref></sup> This transferability-based approach allows Martini simulations to easily reach the aforementioned complexity scale. However, to really prepare Martini for the high-throughput and whole cell scale simulation era, automated workflows that enable fast and efficient setup of complex systems are of fundamental importance.</p>
<p>The Martini community has a long-standing history of easy-to-use and freely accessible scripts and programs, which helped researchers to setup, run, analyze, and backmap simulations. A non-exhaustive overview can be found in our recent review on the 20-year history of Martini.<sup><xref ref-type="bibr" rid="c14">14</xref></sup> However, the codes and scripts developed so far present a collection of separate scripts which share no common framework or backend even though they share many common operations such as resolution transformation or mapping of coordinates. In addition, input files which define molecule parameters or fragments thereof, are not transferable between the tools, with each one of them often defining their own input file formats. We consider that unifying the operations as well as input streams into a single framework will speed up program development and also robustness of code design to bugs. In addition, it will allow implementation of modern software techniques such as code review, continuous integration (CI) testing and version control which generally improve code quality and resilience.<sup><xref ref-type="bibr" rid="c15">15</xref></sup></p>
<p>Designing and coding a unified framework to support general Martini software development is a massive undertaking with many facets as the original scripts and programs deal with different stages of MD simulations. To start the development, we focused the design of the framework on topology generation. A topology lies at the heart of each simulation and defines the starting coordinates as well as input parameters for the simulation. For example, in order to run protein simulations within martini, a script called <italic>martinize</italic><sup><xref ref-type="bibr" rid="c16">16</xref></sup> takes atomistic protein coordinates, maps them to the coarse-grained resolution and generates the protein molecule definitions from building blocks. This workflow is quite classic and underlies many scripts and programs for topology generation both at the coarse-grained but also at the all-atom level.<sup><xref ref-type="bibr" rid="c16">16</xref>–<xref ref-type="bibr" rid="c35">35</xref></sup> With the latest release of version 3 of Martini (M3), proteins have been thoroughly reparametrized.<sup><xref ref-type="bibr" rid="c12">12</xref></sup> The new capabilities of M3 proteins are exemplified by their use high-throughput drug binding assays<sup><xref ref-type="bibr" rid="c10">10</xref>,<xref ref-type="bibr" rid="c36">36</xref></sup>, which are an essential step in computer aided drug design (CADD). Part of the improved protein properties come from the redefined Martini interaction table. However, another part of the improvement is the result of protein specific methods such as the use of structure biased dihedrals<sup><xref ref-type="bibr" rid="c37">37</xref></sup> (often referred to as side-chain corrections), specific elastic networks<sup><xref ref-type="bibr" rid="c38">38</xref></sup>, or integration of Gō-like models.<sup><xref ref-type="bibr" rid="c39">39</xref></sup> All features are additional specific biasing steps applied after generation of the original topology file for the protein and are not part of the capabilities of the previous <italic>martinize</italic> script. Hence, we choose to co-develop a unified framework for topology generation together with a new <italic>martinize</italic> version, <italic>martinize2</italic>.</p>
<p>In this paper we present the VERsatile MOdular Universal Transformation Helper (<italic>vermouth</italic>) library, a general python framework aiding in the design of programs which can create topologies for complex systems at all-atom (AA), united-atom (UA), and coarse-grain (CG) resolution. On top of <italic>vermouth,</italic> we built the <italic>martinize2</italic> program, as the successor of the <italic>martinize</italic> script<sup><xref ref-type="bibr" rid="c16">16</xref>,<xref ref-type="bibr" rid="c33">33</xref></sup>. The goal of <italic>martinize2</italic> is to encompass all functionality required to generate Martini protein parameters (supporting the older versions Martini 2<sup><xref ref-type="bibr" rid="c16">16</xref>,<xref ref-type="bibr" rid="c38">38</xref>,<xref ref-type="bibr" rid="c40">40</xref></sup> as well as the latest Martini 3) and be compatible with high-throughput workflows as needed in CADD approaches based on Martini. In addition, both <italic>vermouth</italic> and <italic>martinize2</italic> are designed to have sufficient flexibility and robustness to ready Martini for the era of high-throughput high complexity simulations.</p>
<p>Finally, we note that much of the progress of Martini has resulted from an active community of researchers contributing scripts, programs, and parameters. However, as is the case for most research software in the field they often fail to adhere to the principles of FAIR: findability, accessibility, interoperability, and reusability.<sup><xref ref-type="bibr" rid="c41">41</xref>–<xref ref-type="bibr" rid="c43">43</xref></sup> The FAIR principles<sup><xref ref-type="bibr" rid="c42">42</xref></sup>, originally designed to improve data management and reproducibility in science, have recently been extended to research software in a more general sense. This extension is aimed to foster more sustainable software development in science.<sup><xref ref-type="bibr" rid="c41">41</xref></sup> To meet these standards the software tools we present here are distributed under the permissive open-source Apache 2.0 license on GitHub, and are developed using contemporary software development practices, such as continuous integration testing. To make adoption as easy as possible, they have few dependencies, are distributed through the Python Package Index and can be installed using the Python package manager <italic>pip</italic>. Other researchers are encouraged and welcome to contribute parameters and code as outlined in our contribution workflow.</p>
</sec>
<sec id="s2" sec-type="results">
<title>Results</title>
<p>In this section we first outline the design and API of the <italic>vermouth</italic> library. Then we discuss how the <italic>vermouth</italic> library is used to construct a pipeline for generating protein input parameters for the Martini force field. This pipeline constitutes the new <italic>martinize2</italic> program. Finally, we present some benchmarks and selected test-cases to demonstrate the capabilities of <italic>martinize2</italic> and assess its fitness for generating complex system topologies and high-throughput workflows, surpassing the capabilities of the previous <italic>martinize</italic> script.</p>
</sec>
<sec id="s3">
<title>The <italic>Vermouth</italic> Library</title>
<p>In the literature, many scripts and programs have been described which can create topologies for linear molecules and some specific software exists that also handle branched molecules such as carbohydrates<sup><xref ref-type="bibr" rid="c23">23</xref></sup>, or dendritic polymers<sup><xref ref-type="bibr" rid="c24">24</xref></sup> . However, to the best of our knowledge, there is at present not a general program that can create topologies from atomistic structures for any type of system, and at any resolution, presenting an extendable and stable API. Based on the existing software, we can, however, define a number of required and desirable features for such a general program and library to have: 1) it must be force field and resolution agnostic; 2) it must be MD engine agnostic; 3) it must use data files that can be checked, made and modified by users, and 4) it must be able to process any type of molecule or polymer, be it linear, cyclic, branched, or dendrimeric, and mixtures thereof.</p>
<p>To start designing a library that can fulfill the above requirements we note that most workflows used for topology generation can be decomposed into six fundamental stages (<xref ref-type="fig" rid="fig1">Figure 1</xref>): First, reading input data, usually an atomistic coordinate file (e.g. from the protein data bank); second, identifying the parsed atoms, to find how they correspond to the atoms in the data files describing the building blocks; third, optionally a resolution transformation step; fourth, the generation of the actual topology and assigning particle types and bonded interactions; fifth, any type of post-processing; and finally, sixth, writing the required output files. Even though these stages are generally shared for topology generation pipelines, they also apply to other workflows commonly encountered in Martini programs. Especially, stages 1, 3, 5, 6 can be found in almost all Martini programs, which generate simulation input files in the broader sense.<sup>16,44–46</sup> Separating these stages, therefore, helps to define an API with data structures and independent processes, which optimally support such workflows. In addition, the clear distinction in stages helps to externalize any data files, which can be edited by the user or force field developers. <italic>Vermouth</italic> is built on the idea and definition of processors, which are tasks arranged in a pipeline. This design was inspired by the ubiquitous workflow managers available to the field.<sup><xref ref-type="bibr" rid="c47">47</xref></sup> We formalize the idea of processors by introducing an abstract base class the <italic><bold>Processor</bold></italic>. New pipeline stages can be created as subclasses of this base class. All <italic><bold>Processors</bold></italic> operate on the central data structure class <italic><bold>System</bold></italic>, which contains any number of <italic><bold>Molecule</bold></italic> data structures (see <xref ref-type="fig" rid="fig2">Figure 2</xref>). A <italic><bold>Molecule</bold></italic> is defined as the graph of a molecule or assembly of molecules, which are connected by bonded interactions. The nodes of a <italic><bold>Molecule</bold></italic> usually correspond to atoms or coarse-grain beads, but can be any form of particle as defined by the force field.</p>
<fig id="fig1" position="float" fig-type="figure">
<label>Figure 1</label>
<caption><title>Fundamental stages in topology generation from atomistic structures.</title><p>First the provided input is parsed (step 1). Second, for every parsed residue its atoms are identified and, if needed, atom names are corrected and missing atoms are added (step 2). Third, mappings are taken from the library and a resolution transformation to the required output resolution is performed (step 3). Fourth, intra-residue interactions are added from blocks taken from the library, and inter-residue interactions are added from links taken from the library (step 4). Fifth, optionally, post-processing is performed to add <italic>e.g.</italic> an elastic network (step 5). Finally, the produced topology is written to output files (step 6).</p></caption>
<graphic xlink:href="2212.01191v2_fig1.jpg" mimetype="image" mime-subtype="jpeg"/>
</fig>
<fig id="fig2" position="float" fig-type="figure">
<label>Figure 2</label>
<caption><title>Organization of the Vermouth library.</title><p>The vermouth library defines 5 types of data structures (blue) to store molecular information and force field information. For convenience it also defines two collection classes (orange) composed of several data-structure instances. Data structures are initiated or get input from parsers, which read 6 types of data-files (see <xref ref-type="table" rid="tabS1">Table S1</xref> for more detaisl on file types). The central data structure(s) are <bold>Molecule</bold> and <bold>System</bold>. These are changed, updated, or transformed by so-called <bold>Processor</bold> classes, which take force field data as input. Parsers, data structures and <bold>Processors</bold> only depend on three libraries as shown. At the moment vermouth also exposes four types of writers (not shown here) to go along with the parsers (see <xref ref-type="table" rid="tabS2">Table S2</xref>).</p></caption>
<graphic xlink:href="2212.01191v2_fig2.jpg" mimetype="image" mime-subtype="jpeg"/>
</fig>
<p>Nodes can have attributes that describe additional information such as a residue name or charge. However, only the atom name, residue name, and residue number are required as attributes. In addition, the edges of the <italic><bold>Molecule</bold></italic> follow the connectivity as defined by bonds, angles, or other bonded interactions. For example, two protein chains connected by a disulfide bridge would be considered a single <italic><bold>Molecule</bold></italic>. In contrast a cofactor, which is only interacting via non-bonded interactions, would be a separate <italic><bold>Molecule</bold></italic>. Operations on <italic><bold>Molecules</bold></italic> usually add or remove bonded interactions or change node attributes. For convenience <italic><bold>Processors</bold></italic> can also operate on a collection of molecules, which are defined by the <italic><bold>System</bold></italic> class (see <xref ref-type="fig" rid="fig2">Figure 2</xref>). A list of all available processors is given in the documentation.</p>
<p><italic><bold>Processors</bold></italic> operate on <italic><bold>Molecules</bold></italic>. However, often additional data is required to perform the pipeline as defined by the <italic><bold>Processor</bold></italic>. The additional data can be provided in form of one of the four other main data structures (<italic><bold>Blocks, Links, Modifications, Mappings</bold></italic>) or arguments of the processors that can be set in a script or via the command line interface. These four other data structures contain all molecular level information required to fully define and/or modify a topology for any type of MD code (e.g., atom types, bonded-interactions, and positions) as well as enable transformations between topologies. For example, a <italic><bold>Mapping</bold></italic> consists of two molecular fragments at different resolutions, and a correspondence between their particles. In contrast, <italic><bold>Blocks, Links, and Modifications</bold></italic> are graphs, which describe these molecular fragments, the links between those, and possible changes to fragments respectively. They are all subclasses of a <italic><bold>Molecule</bold></italic> and an extension of the graph class from the networkx library<sup><xref ref-type="bibr" rid="c48">48</xref></sup> (see <xref ref-type="fig" rid="fig2">Figure 2</xref>).</p>
<p>As shown in <xref ref-type="fig" rid="fig2">Figure 2</xref>, to make the data structures that are force field specific (<italic><bold>Blocks, Links, Modifications</bold></italic>) easier to use, <italic>vermouth</italic> offers a second collection class called a <italic><bold>ForceField</bold></italic>. Every molecule must have a <italic><bold>ForceField</bold></italic> associated with it. Additional information on the data structures is given in the documentation.</p>
<p>Finally, the <italic>vermouth</italic> library also contains a number of parsers that return instances of the data structures from common input file formats. For example, the in-house ff format defines <italic><bold>Blocks, Links</bold></italic>, and <italic><bold>Modifications</bold></italic>, while the backwards style mapping format can be read to return an instance of the <italic><bold>Mapping</bold></italic> class. <xref ref-type="table" rid="tabS1">Table S1</xref> in the Supporting Information summarizes all input parsers as well as the format and data structure they return. We note that <italic>vermouth</italic> is also able to read content associated with the ‘[molecules]’ directive of the GROMACS topology file, which is colloquially referred to as itp file. This allows to directly manipulate GROMACS molecule files within <italic>vermouth</italic>. We note that as neither parsing nor the <italic><bold>Molecule</bold></italic> itself depends on GROMACS code, the library can easily be extended to other MD engines.</p>
</sec>
<sec id="s4">
<title>Martinize2</title>
<p><italic>Martinize2</italic> is a pipeline constructed of vermouth <italic><bold>Processors</bold></italic> with a command line interface (CLI), with the purpose to transform atomistic structure data to a coarse-grained Martini topology including both coordinates and simulation parameters. <italic>Martinize2</italic> is the successor of the <italic>Martinize</italic> script, which was used for generating input parameters for Martini version 2 proteins, DNA, or RNA. However, different branches had to be used for proteins and DNA (martinize.py<sup><xref ref-type="bibr" rid="c16">16</xref></sup>, martinize-dna.py<sup><xref ref-type="bibr" rid="c33">33</xref></sup>) or RNA<sup><xref ref-type="bibr" rid="c35">35</xref></sup>. In contrast <italic>martinize2</italic> is designed to generate topologies for the Martini force field for proteins, DNA, and in principle any other arbitrarily complex molecule.</p>
<p><italic>Martinize2</italic> consists of different <italic><bold>Processors</bold></italic> which fulfill the basic stages of topology generation as shown in <xref ref-type="fig" rid="fig1">Figure 1</xref>. We note that the design of <italic>martinize2</italic> is general and applies to arbitrarily complex polymers consisting of arbitrary monomeric repeat units (MRUs). However, to increase the readability of the following sections the layout of the program is described in terms of residues in proteins.</p>
<p>The <italic>martinize2</italic> pipeline starts by reading an atomistic structure, which describes a single molecule (<italic>e.g.</italic>, protein) or assembly of any size. Subsequently, bonds between the atoms are inferred either by distance calculation, atom names within residues, or using CONECT records of the PDB file. All atoms that are connected by bonds form a <italic><bold>Molecule</bold></italic>. Thus, <italic>martinize2</italic> creates a <italic><bold>System</bold></italic> of <italic><bold>Molecules</bold></italic> at the atomistic resolution at the end of the input reading stage. In stage 2, <italic>Identify and Repair</italic>, each residue of each molecule is compared against its canonical definition. Canonical definitions are selected by residue name from the library files. This comparison identifies missing or additional atoms on a residue and fixes all atom-names. To efficiently do these comparison operations, <italic>Martinize2</italic> relies on a number of algorithms coming from graph-theory (<italic>e.g.</italic> subgraph isomorphism), which reduces the dependance on accurate atom names, since these occasionally differ based on the source of the input structure. Which algorithms are used in the code is described in more detail in the Supporting Information. Once the residues have their canonical atom-names, <italic>martinize2</italic> checks if the missing or additional atoms are described by any of the modification files. Modifications describe changes in residues from their canonical form, <italic>e.g.</italic> different protonation states, termini, or post-translational modifications (PTMs), and the effect these have on the topology.</p>
<p>After completing the repair stage everything is in place to perform the mapping to coarse-grained resolution. The mapping descriptions are read from the mapping input files in the library and tie together residue definitions at the all-atom and CG level and the correspondence between them. Mapping to CG level in <italic>martinize2</italic> is done with a multistep subgraph isomorphism procedure, which is general enough to cover edge cases such as when mappings span multiple atomistic residues. A detailed description is provided in the Supporting Information. The mapping provides a <italic><bold>System</bold></italic> of <italic><bold>Molecules</bold></italic> at the CG level. These molecules already define all bonded interactions within the residues as well as coordinates of the CG system. In order to generate the interactions that link the residues, a simple graph matching with library link definitions is done in the create-topology stage. Finally, after that we end up with the full CG topology, which is ready for post-processing steps. Post-processing summarizes all biases and modifications that have to be done on the CG molecule and its CG coordinates. For example, an elastic network is needed to keep the tertiary structure of the protein and is applied in the post-processing stage. Finally, <italic>martinize2</italic> writes out the CG coordinates and the CG topology file that are production ready.</p>
</sec>
<sec id="s5">
<title>Custom Protonation States and PTMs</title>
<p>Of the 20 common amino acids there are four (GLU, ASP, LYS, HIS), which can readily change their protonation state as function of pH or environment. Whereas commonly those amino acids are still considered to be in their pH7 protonation state, it is more appropriate to determine their local pKa from for example continuum electrostatics.<sup><xref ref-type="bibr" rid="c49">49</xref></sup> Subsequently the appropriate charge of the amino-acid can be determined from that pKa and set for the simulation. Even though recently more advanced methods became available for dynamically treating protonation states<sup><xref ref-type="bibr" rid="c50">50</xref>–<xref ref-type="bibr" rid="c52">52</xref></sup> – also at the Martini level<sup><xref ref-type="bibr" rid="c53">53</xref>,<xref ref-type="bibr" rid="c54">54</xref></sup> – the fixed charge approach is still the most common and for Martini most computationally efficient. However, the previous <italic>martinize</italic> version lacked the functionality to treat protonation states for all amino-acids. Only histidine protonation states could be set interactively but only for two of three possible protonation states.</p>
<p>Other protonation states as defined by the atomistic structure coordinates or residue names were ignored without warning. In addition, the interactive setting of protonation states becomes very cumbersome for large protein complexes.</p>
<p>To overcome this problem and make protonation state handling easier and more robust, we utilize a dual strategy in <italic>martinize2</italic> to identify and correctly set the protonation states (see <xref ref-type="fig" rid="fig3">Figure 3</xref>). In route a) the user provides atomistic structure coordinates with AA residue names including those of non-default protonation states corresponding to the naming conventions used in CHARMM<sup><xref ref-type="bibr" rid="c55">55</xref></sup> or AMBER<sup><xref ref-type="bibr" rid="c56">56</xref></sup>. Protonation states can be obtained from online servers such as H++<sup><xref ref-type="bibr" rid="c57">57</xref></sup> or propKa<sup><xref ref-type="bibr" rid="c58">58</xref></sup>, for example. If the residue names are correctly given, they can be matched against the parameters in the library and the CG residue obtains the correct protonation state. In the alternative route b), the residue name is simply that of the default pH 7 amino-acid, however, the structure file contains an additional hydrogen. In the repair and identify step the chemical graph of the amino-acid is compared to the building blocks in the library and any unexpected atoms are flagged. For example, in the case of protonated histidine the additional hydrogen is labeled (see <xref ref-type="fig" rid="fig3">Figure 3</xref>). Subsequently, <italic>martinize2</italic> checks if there are any modifications which would match the complete input graph, if added to the original block. In the Histidine example, the modification contains the additional hydrogen which together with the original histidine block make up a protonated histidine. The modification also changes the mapping such that the correct protonation state is set at the CG level. This route is more appropriate for example when processing crystal structure files, which are not necessarily named according to any force field convention. We have tested this feature on two protein structures taken from the PDB (1MJ5, 3LZT) and processed as described in the Methods section. In 1MJ5 there are six Histidine residues of which one is predicted to be charged at pH 7. The others are neutral. However, they are divided between the ε-tautomer (3 residues) and the δ-tautomer (2 residues). Martini 3 parameters are different for the two tautomers in contrast to Martini2, which is accordingly recognized by <italic>Martinize2</italic>. In addition, for lysozyme we have considered residue GLU35 protonated, which would be appropriate at a pH of 6 or less. For both examples the appropriate protonation states and tautomers are generated at the CG level.</p>
<fig id="fig3" position="float" fig-type="figure">
<label>Figure 3</label>
<caption><title>Workflows for identifying protonation states or PTMs exemplified on protonated histidine.</title><p>In route a) the residue name of the protonated histidine extracted from the atomistic coordinates matches the residue name in the library and matches the fragment. Hence the protonation state is correctly picked up. In route b) the residue name matches that of neutral Histidine in the library. A mismatch of the fragments is recognized and the extra hydrogen labelled. Subsequently by matching the extra hydrogen to a modification of the histidine block the protonated Histidine is recognized as neutral Histidine plus protonation modification and the correct parameters are generated.</p></caption>
<graphic xlink:href="2212.01191v2_fig3.jpg" mimetype="image" mime-subtype="jpeg"/>
</fig>
<p>The same procedure used for setting protonation states also applies to identifying any other common post-translational modification (PTMs). Using this procedure, lipidation, phosphorylation, amination or acetylation can be taken into account automatically. To demonstrate that <italic>martinize2</italic> can handle PTMs, we have implemented dummy parameters for testing of Tyrosine phosphorylations in the M2 force field and generated a Martini topology for the EGFR kinase as example (PDB 2GS2). Residue TYR845 (see <xref ref-type="fig" rid="fig4">Figure 4</xref>), which is located in the activation loop of the EGFR kinase, is phosphorylated when the kinase is activated.<sup><xref ref-type="bibr" rid="c56">56</xref></sup> <italic>Martinize2</italic> was able to convert the structure in one go to M2 resolution. We note that at the time of writing the M3 force field is lacking parameters for these PTMs and they are therefore not implemented in <italic>martinize2</italic> yet. In this case a warning is issued by the program.</p>
<fig id="fig4" position="float" fig-type="figure">
<label>Figure 4</label>
<caption><title>Example of automated identification of PTMs.</title><p>CG Martini model of phosphorylated Tyrosine found in the EGFR kinase activation loop. The mapped structure of the phosphorylated residue is shown as beads overlying the atomistic structure.</p></caption>
<graphic xlink:href="2212.01191v2_fig4.jpg" mimetype="image" mime-subtype="jpeg"/>
</fig>
</sec>
<sec id="s6">
<title>Expanding the options of Elastic Network Fine-Tuning</title>
<p>Due to the limitations in most coarse-grained protein models (e.g. lack of explicit hydrogen bonding directionality), the tertiary structure has to be enforced with a structural bias called elastic network (EN).<sup><xref ref-type="bibr" rid="c59">59</xref></sup> An EN for Martini proteins consists of weak harmonic bonds between backbone beads of residues (within a chosen cut-off distance) and is generated after the resolution transformation as postprocessing step.<sup><xref ref-type="bibr" rid="c38">38</xref>,<xref ref-type="bibr" rid="c40">40</xref></sup> <italic>Martinize</italic> offered only two types of EN options, the regular model and the Elnedyn<sup><xref ref-type="bibr" rid="c38">38</xref></sup> approach, both of which are also implemented in <italic>martinize2</italic>. However, as the EN fixes the tertiary structure, changes in the structure upon, e.g., ligand binding are not captured. To improve protein models in this aspect recently Go-like models have been applied to Martini.<sup><xref ref-type="bibr" rid="c39">39</xref></sup> In a Go-like model the harmonic bonds are substituted by custom Lennard-Jones (LJ) interactions that can dissociate, thereby allowing for some tertiary structure changes. Within the scope of Martini, a workflow is available to replace the elastic network with a Go model that is generated from a contact map.</p>
<p>Even though Go models offer better flexibility, they are currently limited to single monomeric protein units and require some fine-tuning to get the optimal performance.<sup><xref ref-type="bibr" rid="c39">39</xref></sup> Especially, for high-throughput workflows the EN approach is therefore the preferred option. To further improve upon the elastic networks generated by the old <italic>martinize, martinize2</italic> offers several options to fine-tune the EN and get better behavior within the constraints of the EN approach. Besides the cut-off and force-constant, <italic>martinize2</italic> now implements a residue minimum distance (RMD). The RMD is defined as a graph distance and dictates how far residues need to be apart in order to participate in elastic bonds. Defining the RMD as a graph distance means that no bonds are generated between residues that are for example bound by a disulfide bridge. It thus presents a more rigorous implementation than in the previous version. Usually, the residue minimum distance is 3 in order to avoid the EN competing with the bonds, angles, and dihedrals between the backbone beads.</p>
<p>We note that this is part of the Martini protein model and should not be changed. Additionally, <italic>martinize2</italic> allows to select which beads to generate the EN between. This option is needed for Martini2 DNA<sup><xref ref-type="bibr" rid="c33">33</xref></sup>, for example. Martini2 DNA offers a stiff EN version, where also sidechain beads are included. Furthermore, <italic>martinize2</italic> allows to define where in the protein to apply the elastic network. This is done with the EN unit option. The EN unit can be molecule, chain, all, or ranges of residue indices. The most trivial option is <italic>all</italic> in which case an EN is applied between all protein molecules in the system. The option molecule and chain yield the same network, if distinct molecules are also distinct chains. However, when two chains are connected by a disulfide bridge for example, they would be one <italic><bold>Molecule</bold></italic> in the martinize sense. On the other hand, if the interface is not very well defined or more flexible, biasing the two chains separately could improve the EN. In that case the <italic>chain</italic> option can be used. This use-case is shown for the human insulin dimer in <xref ref-type="fig" rid="fig5">Figure 5a</xref> and <xref ref-type="fig" rid="fig5">Figure 5b</xref>. The human insulin dimer consists of two chains, which are connected by two disulfide bridges. If the molecule or all option is used an EN is generated within the chains and between the chains (<xref ref-type="fig" rid="fig5">Figure 5b</xref>). However, to avoid generating the EN between the two chains the chain option can be supplied in which case the EN is only generated within chains. As the zoom in on the tail part shows there are no more bonds between the two chains in <xref ref-type="fig" rid="fig5">Figure 5b</xref> whereas there are in <xref ref-type="fig" rid="fig5">Figure 5a</xref>.</p>
<fig id="fig5" position="float" fig-type="figure">
<label>Figure 5</label>
<caption><title>Fine tuning options for the elastic network.</title><p>a) Elastic networks and backbone bonds within the human insulin dimer when generated with the molecule or all-option. The dimer consists of two chains colored in red and orange, which are connected by two disulfide bridge shown in purple. EN bonds are generated between the two chains and within the chains. b) Elastic network and backbone bonds within the insulin dimer when generated with the chain option. In this case no elastic bonds are generated between the two chains. They are only connected by the disulfide bridge and non-bonded interactions. c) Elastic network within the Ftsz protein, when generated for both the intrinsically disordered tail domains (orange) and structural domain (red) d) Elastic network within the Ftsz protein when the EN is only generated within the structural domain by defining the EN unit as going from resid 12 to 320.</p></caption>
<graphic xlink:href="2212.01191v2_fig5.jpg" mimetype="image" mime-subtype="jpeg"/>
</fig>
<p>Furthermore, <italic>martinize2</italic> allows to define regions of residue IDs where an EN should be generated. This feature gives maximum flexibility and allows to bias structural regions of proteins whereas an EN in intrinsically disordered regions (IDRs) can be avoided. For example, <xref ref-type="fig" rid="fig5">Figure 5c</xref> and <xref ref-type="fig" rid="fig5">Figure 5d</xref> show the FtsZ protein of E-coli as predicted by alpha-fold.<sup><xref ref-type="bibr" rid="c60">60</xref>,<xref ref-type="bibr" rid="c61">61</xref></sup> FtsZ possesses a structural unit and two disordered tail domains. With the region option <italic>martinize2</italic> allows to generate an EN only for the structural domain. Within the old <italic>martinize</italic> superfluous bonds needed to be removed manually.</p>
<p>Finally, we note that <italic>martinize2</italic> is now implemented in the Martini Data Base (MAD), which offers a further utility to remove certain elastic bonds selectively.<sup><xref ref-type="bibr" rid="c62">62</xref></sup> We note that elastic networks can only be applied within protein molecules at the moment.</p>
</sec>
<sec id="s7">
<title>Incorporating a Ligand small-molecule Database</title>
<p><italic>Legacy martinize</italic> is only applicable to one category of molecule (i.e. proteins or DNA), which is one of its biggest drawbacks even for setting up simple protein simulations. Proteins frequently have other molecular units associated such as ligands, cofactors, metal ions, or lipids. The general workflow of <italic>martinize2</italic> allows us to convert these molecules in one go provided that the library files are present. In this way no post-hoc step is needed, which maps and parameterizes the system. Having a single step for topology generation greatly facilitates high-throughput workflows such as protein-ligand binding, one of the cornerstones of CADD.</p>
<p>We test this on two protein complexes. The first test case concerns Flavin Reductase (see <xref ref-type="fig" rid="fig6">Figure 6a</xref>), which consists of two chains that have flavinmononucleotide ligands (FMN) and one NAD cofactor bound (2BKJ). M2 parameters and mappings from the GROMOS force field were previously published.<sup><xref ref-type="bibr" rid="c63">63</xref></sup> Parameters and mappings have been added to the <italic>vermouth</italic> data-base. Subsequently the system could be converted in one step. During a short simulation the cofactors remain well bound, indicating that no inappropriate parameters or faulty geometries were generated. Next, we created topologies and starting structures for Lysozyme with a benzene molecule bound (1L84), using the M3 force field (<xref ref-type="fig" rid="fig6">Figure 6b</xref>). The protein and ligand were again converted in one step and then simulated for a short period. As previously the ligand stays bound, showing that the protocol generates reasonable starting structures and correct parameters.</p>
<fig id="fig6" position="float" fig-type="figure">
<label>Figure 6</label>
<caption><title>Ligands and cofactors transformed to CG Martini level.</title><p>a) Flavin Reductase with two FMNs and one NDP cofactors bound in the reference all-atom state and mapped to Martini CG as indicated by the spheres. The inset shows a zoom onto FMN; b) Lysozyme with benzene ligand bound in the reference all-atom structure and mapped to Martini CG resolution.</p></caption>
<graphic xlink:href="2212.01191v2_fig6.jpg" mimetype="image" mime-subtype="jpeg"/>
</fig>
<p>To fully leverage this new feature, ligand data files are required to be present. Thus, we implemented mappings and parameters from a previously published small molecule data-base for the M3 force field.<sup><xref ref-type="bibr" rid="c64">64</xref></sup> The set comprises 43 small molecules, which are often part of drugs or drug precursors. All small molecules have corresponding parameters in the CHARMM ligand data-base, which allows users to directly convert atomistic CHARMM simulations to Martini. Mapping directly from crystal structures as present for example in the PDB or other force fields is also possible. In these cases, the residue names may have to be adjusted to be the same as in the CHARMM naming convention. Finally, we have set up instructions on how researchers can submit parameters to the database allowing it to grow and support other researchers. In addition, <italic>martinize2</italic> facilitates dynamic linking of citations to parameters. With this mechanism citations are printed at the end of the run that dynamically include citations to all parameters used in the final topology. Such a system also allows researchers to easily receive credit for contributed parameters.</p>
</sec>
<sec id="s8">
<title>Complexity Benchmark</title>
<p>To assess the robustness of <italic>martinize2</italic> in a high-throughput use case, we processed the template library used by the I-TASSER<sup><xref ref-type="bibr" rid="c65">65</xref></sup> protein prediction software (<xref ref-type="fig" rid="fig7">Figure 7</xref>). At the time of download (26 March 2021), the dataset contained 87084 protein structures. We processed each of these structures with <italic>martinize2</italic> to get M2.2 models with elastic networks. We then minimized the energy of the coarse-grained protein in vacuum to validate that the generated structures and topology could be processed by GROMACS 2022.3.</p>
<fig id="fig7" position="float" fig-type="figure">
<label>Figure 7</label>
<caption><title>Summary of the successes and failures of the high-throughput pipeline.</title><p>We ran the pipeline on the 87084 structures from the template library used by the I-TASSER<sup><xref ref-type="bibr" rid="c65">65</xref></sup> protein prediction software of which 73% could be converted with martinize2. The other 26.4% failed mostly due to missing coordinates, and unrecognized residues. For 100% of the converted structures, a GROMACS run input file (i.e. tpr-file) could be generated, and on all but 13 of the converted structures an energy minimization could be performed.</p></caption>
<graphic xlink:href="2212.01191v2_fig7.jpg" mimetype="image" mime-subtype="jpeg"/>
</fig>
<p>Of the 87084 structures in the dataset, 63680 (73%) could be processed through the whole workflow without error. The main cause of failure (25% of the structures) was missing coordinates in the input structures. When all the atoms that compose a bead are missing from the input, <italic>martinize2</italic> can generate a topology but it cannot generate coordinates for the bead. Note that if only some atoms are missing, then <italic>vermouth</italic> does estimate the position of the bead. 876 structures (1%) had missing coordinates in the backbone that prevented the use of DSSP<sup><xref ref-type="bibr" rid="c66">66</xref>,<xref ref-type="bibr" rid="c67">67</xref></sup>. Finally, 802 input structures (1%) had at least one residue that was inconsistent with the library. Upon further inspection, most of these structures contain malformed glycine residues with an unexpected Cβ atom. <italic>Martinize2</italic> detected these inconsistencies and emitted a warning for each of them; warnings can be explicitly and selectively ignored, if they are not no output is written to avoid subsequent workflow steps working with corrupted files.</p>
<p>All the 63680 input structures that were successfully processed by <italic>Martinize</italic>2 could be processed by the GROMACS pre-processor (<italic>grompp</italic>). However, 13 structures failed the energy minimization. A visual inspection of some of these failing inputs shows the input atomistic structures can be problematic. Erroneous interatomic distances (steric clashed or extended bonds) lead to high energies in the coarse-grained systems, which causes a failure in the energy minimization routine. Likely these starting structures are also not numerically stable in a coarse-grained simulation.</p>
<p>As a second test case to assess the robustness of <italic>martinize2</italic> we processed a subset of the AlphaFold Protein Structure Database.<sup><xref ref-type="bibr" rid="c60">60</xref>,<xref ref-type="bibr" rid="c61">61</xref></sup> 200,000 randomly chosen unique protein structures (see Supporting Information) were given to <italic>martinize2</italic> and subsequently an energy minimization was performed, if the structure could successfully be converted to coarse-grained representation. Of the 200.000 structures in the dataset, 7 structures (see Supporting Information) raised an error during the conversion step. Upon further (visual) inspection of the problematic structures, we concluded that all errors were caused by inaccurate initial atomistic coordinates. These inaccurate atomic positions caused bonds to not be identified or additional superfluous bonds to be detected (<xref ref-type="fig" rid="fig8">Figure 8</xref>). In these cases, the unrecognizable residues were detected and caused <italic>martinize2</italic> to emit a warning. The remaining 199,993 successfully converted structures could be processed by the GROMACS pre-processor (grompp) and it was possible to perform an energy minimization.</p>
<fig id="fig8" position="float" fig-type="figure">
<label>Figure 8</label>
<caption><title>Two examples of problematic atomistic protein structures flagged by martinize2.</title><p>a) the cysteine residue with too small O-O and O-C distances leads to superfluous bonds being recognized. b) the incorrect interatomic distances in the histidine ring led to missing bonds (transparent), an erroneous O-N bond connecting the histidine to a neighboring asparagine. Additionally, a nitrogen atom is switched for an oxygen atom in asparagine.</p></caption>
<graphic xlink:href="2212.01191v2_fig8.jpg" mimetype="image" mime-subtype="jpeg"/>
</fig>
</sec>
<sec id="s9" sec-type="discussion">
<title>Discussion</title>
<p>In the previous section we have presented the <italic>vermouth</italic> python library for facilitating topology generation and manipulation. In order for researchers to use <italic>vermouth</italic> as a framework for software development it presents a clear API separated into data structures, parsers, and processors. In addition, the library relies on only three permissibly licensed open-software projects namely numpy<sup><xref ref-type="bibr" rid="c68">68</xref></sup>, scipy<sup><xref ref-type="bibr" rid="c69">69</xref></sup>, and networkx<sup><xref ref-type="bibr" rid="c48">48</xref></sup>. This allows researchers more freedom in licensing their code and reduces the potential for bugs introduced by dependency changes. Furthermore, the central data structure represents molecules as graphs. Representing molecules as graphs allows to leverage algorithms from graph theory. Using graph theory for many of the workflows underlying the <italic><bold>Processors</bold></italic> makes them faster and more robust towards edge cases. Even though applying graph theory to molecules is not a new idea<sup><xref ref-type="bibr" rid="c70">70</xref>–<xref ref-type="bibr" rid="c72">72</xref></sup>, <italic>vermouth</italic> is specifically designed to also handle coarse-grained level molecule transformation focusing on the Martini force field. Therefore, <italic>vermouth</italic> presents additional functionality often lacking form other packages. For example, the handling of virtual-sites, which are ubiquitous in many M3 molecules, is rigorously handled in all <italic><bold>Processors</bold></italic>. As another more general example the <italic><bold>Processor</bold></italic> applying interactions between residues can automatically compute structural biases from the mapped coordinates. Finally, the <italic>vermouth</italic> library adheres to the FAIR principles<sup><xref ref-type="bibr" rid="c41">41</xref>,<xref ref-type="bibr" rid="c42">42</xref></sup> to allow adoption by non-experts and ensure quality control. In particular, for both the <italic>vermouth</italic> library and <italic>martinize2</italic>, continuous integration testing is implemented and code review required. The software is also semantically versioned, and it is distributed through established channels, most notably the Python Package Index, and hosted openly on GitHub.</p>
<p>We have shown how <italic>vermouth</italic> was used to shape the <italic>martinize2</italic> program. However, <italic>martinize2</italic> is not the only program leveraging the power of the <italic>vermouth</italic> library. The <italic>polyply</italic> python suite is another library and collection of command line programs build upon <italic>vermouth</italic>. <italic>Polyply</italic> enables users to generate both atomistic and coarse-grained simulation input data, <italic>i.e.</italic> structures and topologies, from sequence information. As such, it allows building system coordinates for arbitrarily complex macromolecular systems and nanomaterials.<sup><xref ref-type="bibr" rid="c44">44</xref></sup> Furthermore, the <italic>martini-sour</italic> package<sup><xref ref-type="bibr" rid="c53">53</xref></sup>, which is currently under development, utilizes <italic>vermouth</italic> to convert topology files from regular Martini to titratable Martini simulations. These examples already illustrate that <italic>vermouth</italic> has the potential to indeed become the central framework for Martini software development and possibly for other scientific software developments.</p>
<p><italic>Martinize2</italic> enables researchers to prepare simulation input files for arbitrary (bio)polymers, starting from atomistic structure. Furthermore, the user has complete control over the data files used. The abstraction of force field data into Blocks, Modifications, and Links allows researchers to reason about model intricacies in a structured manner. This helps development of optimized models and parameters for complex (polymeric) molecules, as well as clearly defining in which combinations these are validated. The new program uses algorithms from graph theory to identify atoms and assign the appropriate interactions. This makes the program more tolerant towards its input so that the users have to worry less over details such as atom names, or ensuring that all residues are in order and appropriately numbered. Especially, <italic>martinize2</italic> is capable of detecting and using protonation states and PTMs, and capping groups automatically. In addition, <italic>martinize2</italic> allows to fine-tune the elastic-network and as it is not limited to proteins can also generate parameters for ligands, cofactors, or lipids.</p>
<p>In practice, there are decisions a user needs to make when using <italic>vermouth</italic> and <italic>martinize2</italic>, especially for high-throughput pipelines. <italic>Martinize2</italic> detects but does not reconstruct atoms that are missing from the input structures; these missing atoms can have adverse effects on the result. In the most harmless cases, they only shift the position of a particle in the output structure. When all the atoms for a particle are missing, then the program cannot compute a position for that particle leading to an incomplete output where a particle does not have coordinates. Also, some workflows depend on DSSP<sup><xref ref-type="bibr" rid="c66">66</xref>,<xref ref-type="bibr" rid="c67">67</xref></sup> to assign secondary structures and some specific missing atoms can prevent DSSP to work properly. In those cases, <italic>martinize2</italic> issues a warning whenever it cannot automatically take care of pitfalls. Handling of these cases is a central difference between the new and old version. The old version either terminates with an undefined error or, probably worse, runs and gives output that is not corresponding to the atomistic structure given as input. To illustrate the robustness of <italic>martinize2</italic> towards problematic input, we applied the program to the complete I-TASSER data base (~87k structures) as well as a subset of the AlphaFold Protein Structure Database (~200k structures). For the two benchmark cases <italic>martinize2</italic> was able to issue a warning or error for all structures, which contained seriously malformed residues. Of the first data-base only 13 structures failed in the energy minimization due to problematic starting coordinates but not obviously malformed residues. In the second benchmark set only 7 seriously malformed residues were identified, and all other structures were successfully energy minimized. Thus, we consider <italic>martinize2</italic> more robust and fit for high-throughput and high complexity tasks.</p>
<p>Ultimately, the robustness comes at a price. <italic>Martinize2</italic> uses a subgraph isomorphism in order to identify atoms based on their connectivity, and then issue a warning or repair the input. However, subgraph isomorphism is an NP-complete problem<sup><xref ref-type="bibr" rid="c73">73</xref></sup>. As a result, <italic>martinize2</italic> is significantly slower than <italic>martinize</italic>. Nevertheless, considering the flexibility the new program offers, in addition to the fact that it is still fast enough to process all entries in the I-TASSER data bank <sup><xref ref-type="bibr" rid="c65">65</xref></sup>, this is deemed to be acceptable. Even though <italic>martinize2</italic> will most likely never be as fast as <italic>martinize</italic> we note that many of the processes can still be optimized to yield further performance increases. Aside from the performance limitations, <italic>vermouth</italic> and <italic>martinize2</italic> present some other limitations as well. Both <italic>martinize2</italic> and <italic>vermouth</italic> are currently only capable of writing topologies in GROMACS format. However, our library does not use the MD parameters of the produced topologies or call GROMACS functions, so support for other MD engines can be added in future. In addition, since <italic>vermouth</italic> defines an API, it could even be integrated with existing software such as OpenMM.<sup><xref ref-type="bibr" rid="c74">74</xref></sup> Furthermore, the processor pipeline underlying <italic>martinize2</italic> is currently hardcoded. Future improvements will focus on making the workflow defined by <italic>martinize2</italic> more flexible, in order to include the processor pipeline as part of the force field definitions. This would enable the use of different pipelines for different force fields, allowing for easier force field specific post-processing.</p>
</sec>
<sec id="s10" sec-type="methods">
<title>Methods</title>
<p><bold>Preparation of protein input files.</bold> Crystal structures were obtained from the RCSB for the following proteins (3LZT; 2GS2; 2BKJ; 1L84; 3I40; 3IGM, 1MJ5) or the Alpha Fold Data Bank<sup><xref ref-type="bibr" rid="c60">60</xref></sup> for FtsZ with the ID A0A7Y6D765. Hydrogens and missing heavy atoms were reconstructed using the PRAS package, if appropriate.<sup><xref ref-type="bibr" rid="c75">75</xref></sup> For 3LST and 1MJ5, the pKa and half-way titration point were estimated using the propka package.<sup><xref ref-type="bibr" rid="c58">58</xref></sup> For 3LST the GLU35 was protonated using the CHARMM-GUI solution builder.<sup><xref ref-type="bibr" rid="c34">34</xref>,<xref ref-type="bibr" rid="c76">76</xref></sup> The HIS-tag of 1MJ5 was removed.</p>
<p><bold>All-atom simulations</bold>. For 2GS2 and 1L84 CHARMM all-atom parameters<sup><xref ref-type="bibr" rid="c55">55</xref></sup> were created using the CHARMM-GUI solution builder<sup><xref ref-type="bibr" rid="c34">34</xref>,<xref ref-type="bibr" rid="c76">76</xref></sup> and a small equilibration simulation (20ns) was run before the structures were converted with martinize2. The all-atom simulation used the recommended non-bonded force settings as for CHARMM with GROMACS.<sup><xref ref-type="bibr" rid="c77">77</xref></sup> The temperature was maintained using the v-rescale thermostat by Bussi <italic>et al.</italic><sup><xref ref-type="bibr" rid="c78">78</xref></sup> at 310K and pressure was maintained at 1 bar using the Parrinello-Rahman<sup><xref ref-type="bibr" rid="c79">79</xref></sup> barostat (τ = 12 ps) after initial equilibration with the Berendsen<sup><xref ref-type="bibr" rid="c80">80</xref></sup> barostat.</p>
<p><bold>Coarse-grained simulations.</bold> All coarse-grained MD simulations were run using GROMACS 2021.5<sup><xref ref-type="bibr" rid="c81">81</xref></sup> and the recommended mdp parameters for Martini 2<sup><xref ref-type="bibr" rid="c82">82</xref></sup> and Martini 3<sup><xref ref-type="bibr" rid="c12">12</xref></sup> respectively. In particular the Lennard-Jones interactions were cut-off at 1.1 nm and electrostatics were treated with reaction-field (cut-off 1.1 nm, dielectric constant 15). The time-step was 20 fs in all cases and the production trajectories were run with the standard leap-frog integrator. Temperature was maintained using the v-rescale thermostat by Bussi <italic>et al.</italic><sup><xref ref-type="bibr" rid="c78">78</xref></sup> at 310K with (τ = 6 ps) and separate coupling groups for solvent and proteins. Pressure was maintained at 1 bar using the Berendsen barostat for equilibrations (τ=6ps). The initial systems were solvated using the polyply<sup><xref ref-type="bibr" rid="c44">44</xref></sup> package or gmx solvate utility.</p>
<p><bold>Complexity benchmark.</bold> The (Swiss-Prot) subset of the AlphaFold protein structure database used for the complexity benchmark contained 542.378 pdb structure files at the time of download (22 December 2022). The testing pipeline we used was written in Python and randomly picked 200.000 structures which were given to martinize2. Possible errors during conversion or the subsequent grompp and energy minimization steps were captured.</p>
</sec>
</body>
<back>
<ack>
<title>Acknowledgments</title>
<p>We would like to thank all users that tested the development versions and provided valuable feedback, in particular the members of the SJM group and the participants of the Martini Workshop 2021. We also thank Melanie König for feedback on the manuscript and figures. Work is supported by an ERC Advanced Grant (“COMP-O-CELLMIC-CROW-MEM”) to SJM. PCTS acknowledges the support by French National Center for Scientific Research (CNRS) and the research collaboration with PharmCADD. JB acknowledges financial support from the Agencia Estatal de Investigación (Spain), the Xunta de Galicia - Consellería de Cultura, Educación e Universidade (Centro de investigación de Galicia accreditation 2019-2022 ED431G-2019/04 and Reference Competitive Group accreditation 2021-2024, CÓDIGO AXUDA). The European Union (European Regional Development Fund – ERDF) and the European Research Council through consolidator grant NANOVR 866559.</p>
</ack>
<sec id="s11">
<title>Code availability</title>
<p>All code can be found online at <ext-link ext-link-type="uri" xlink:href="https://www.github.com/marrink-lab/vermouth-martinize">https://www.github.com/marrink-lab/vermouth-martinize</ext-link>. In addition, all released versions are also published on the Python Package Index at <ext-link ext-link-type="uri" xlink:href="https://www.pypi.org/project/vermouth">https://www.pypi.org/project/vermouth</ext-link>.</p>
</sec>
<sec id="s12">
<title>Data availability</title>
<p>Input files and commands required to reproduce the example test cases from this paper are available on GitHub at <ext-link ext-link-type="uri" xlink:href="https://www.github.com/marrink-lab/vermouth-martinize-examples">https://www.github.com/marrink-lab/vermouth-martinize-examples</ext-link>. MD trajectories and benchmark data are available upon reasonable request from the corresponding authors.</p>
</sec>
<sec id="s13">
<title>Author contributions</title>
<p>PCK and SJM conceived the project; PCK, JB, FG implemented the described software; PCK, JB, TAW designed the program structure; PCTS &amp; FG designed the benchmark tests used along the development of the code to guarantee accuracy of the models; PCTS helped to implement the force field files, and managed feedback from beta testers; PCK and FG wrote the manuscript, with contributions from all authors. SJM provided guidance and supervision in the project.</p>
</sec>
<ref-list>
<title>References</title>
<ref id="c1"><label>1</label><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Marrink</surname>, <given-names>S. J.</given-names></string-name>; <string-name><surname>Corradi</surname>, <given-names>V.</given-names></string-name>; <string-name><surname>Souza</surname>, <given-names>P. C. T.</given-names></string-name>; <string-name><surname>Ingólfsson</surname>, <given-names>H. I.</given-names></string-name>; <string-name><surname>Tieleman</surname>, <given-names>D. P.</given-names></string-name>; <string-name><surname>Sansom</surname>, <given-names>M. S. P.</given-names></string-name></person-group> <article-title>Computational Modeling of Realistic Cell Membranes</article-title>. <source>Chem Rev</source> <year>2019</year>.</mixed-citation></ref>
<ref id="c2"><label>2</label><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Yu</surname>, <given-names>A.</given-names></string-name>; <string-name><surname>Pak</surname>, <given-names>A. J.</given-names></string-name>; <string-name><surname>He</surname>, <given-names>P.</given-names></string-name>; <string-name><surname>Monje-Galvan</surname>, <given-names>V.</given-names></string-name>; <string-name><surname>Casalino</surname>, <given-names>L.</given-names></string-name>; <string-name><surname>Gaieb</surname>, <given-names>Z.</given-names></string-name>; <string-name><surname>Dommer</surname>, <given-names>A. C.</given-names></string-name>; <string-name><surname>Amaro</surname>, <given-names>R. E.</given-names></string-name>; <string-name><surname>Voth</surname>, <given-names>G. A.</given-names></string-name></person-group> <article-title>A Multiscale Coarse-Grained Model of the SARS-CoV-2 Virion</article-title>. <source>Biophys J</source> <year>2021</year>, <volume>120</volume> (<issue>6</issue>), <fpage>1097</fpage>–<lpage>1104</lpage>.</mixed-citation></ref>
<ref id="c3"><label>3</label><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Pezeshkian</surname>, <given-names>W.</given-names></string-name>; <string-name><surname>Grünewald</surname>, <given-names>F.</given-names></string-name>; <string-name><surname>Narykov</surname>, <given-names>O.</given-names></string-name>; <string-name><surname>Lu</surname>, <given-names>S.</given-names></string-name>; <string-name><surname>Arkhipova</surname>, <given-names>V.</given-names></string-name>; <string-name><surname>Solodovnikov</surname>, <given-names>A.</given-names></string-name>; <string-name><surname>Wassenaar</surname>, <given-names>T. A.</given-names></string-name>; <string-name><surname>Marrink</surname>, <given-names>S. J.</given-names></string-name>; <string-name><surname>Korkin</surname>, <given-names>D.</given-names></string-name></person-group> <article-title>Molecular Architecture and Dynamics of SARS-CoV-2 Envelope by Integrative Modeling</article-title>. <source>Structure</source> <year>2023</year>, <volume>31</volume> (<issue>4</issue>), <fpage>492</fpage>-<lpage>503.e7</lpage>.</mixed-citation></ref>
<ref id="c4"><label>4</label><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Dommer</surname>, <given-names>A.</given-names></string-name>; <string-name><surname>Casalino</surname>, <given-names>L.</given-names></string-name>; <string-name><surname>Kearns</surname>, <given-names>F.</given-names></string-name>; <string-name><surname>Rosenfeld</surname>, <given-names>M.</given-names></string-name>; <string-name><surname>Wauer</surname>, <given-names>N.</given-names></string-name>; <string-name><surname>Ahn</surname>, <given-names>S.-H.</given-names></string-name>; <string-name><surname>Russo</surname>, <given-names>J.</given-names></string-name>; <string-name><surname>Oliveira</surname>, <given-names>S.</given-names></string-name>; <string-name><surname>Morris</surname>, <given-names>C.</given-names></string-name>; <string-name><surname>Bogetti</surname>, <given-names>A.</given-names></string-name>; <string-name><surname>Trifan</surname>, <given-names>A.</given-names></string-name>; <string-name><surname>Brace</surname>, <given-names>A.</given-names></string-name>; <string-name><surname>Sztain</surname>, <given-names>T.</given-names></string-name>; <string-name><surname>Clyde</surname>, <given-names>A.</given-names></string-name>; <string-name><surname>Ma</surname>, <given-names>H.</given-names></string-name>; <string-name><surname>Chennubhotla</surname>, <given-names>C.</given-names></string-name>; <string-name><surname>Lee</surname>, <given-names>H.</given-names></string-name>; <string-name><surname>Turilli</surname>, <given-names>M.</given-names></string-name>; <string-name><surname>Khalid</surname>, <given-names>S.</given-names></string-name>; <string-name><surname>Tamayo-Mendoza</surname>, <given-names>T.</given-names></string-name>; <string-name><surname>Welborn</surname>, <given-names>M.</given-names></string-name>; <string-name><surname>Christensen</surname>, <given-names>A.</given-names></string-name>; <string-name><surname>Smith</surname>, <given-names>D. G.</given-names></string-name>; <string-name><surname>Qiao</surname>, <given-names>Z.</given-names></string-name>; <string-name><surname>Sirumalla</surname>, <given-names>S. K.</given-names></string-name>; <string-name><surname>O’Connor</surname>, <given-names>M.</given-names></string-name>; <string-name><surname>Manby</surname>, <given-names>F.</given-names></string-name>; <string-name><surname>Anandkumar</surname>, <given-names>A.</given-names></string-name>; <string-name><surname>Hardy</surname>, <given-names>D.</given-names></string-name>; <string-name><surname>Phillips</surname>, <given-names>J.</given-names></string-name>; <string-name><surname>Stern</surname>, <given-names>A.</given-names></string-name>; <string-name><surname>Romero</surname>, <given-names>J.</given-names></string-name>; <string-name><surname>Clark</surname>, <given-names>D.</given-names></string-name>; <string-name><surname>Dorrell</surname>, <given-names>M.</given-names></string-name>; <string-name><surname>Maiden</surname>, <given-names>T.</given-names></string-name>; <string-name><surname>Huang</surname>, <given-names>L.</given-names></string-name>; <string-name><surname>McCalpin</surname>, <given-names>J.</given-names></string-name>; <string-name><surname>Woods</surname>, <given-names>C.</given-names></string-name>; <string-name><surname>Gray</surname>, <given-names>A.</given-names></string-name>; <string-name><surname>Williams</surname>, <given-names>M.</given-names></string-name>; <string-name><surname>Barker</surname>, <given-names>B.</given-names></string-name>; <string-name><surname>Rajapaksha</surname>, <given-names>H.</given-names></string-name>; <string-name><surname>Pitts</surname>, <given-names>R.</given-names></string-name>; <string-name><surname>Gibbs</surname>, <given-names>T.</given-names></string-name>; <string-name><surname>Stone</surname>, <given-names>J.</given-names></string-name>; <string-name><surname>Zuckerman</surname>, <given-names>D. M.</given-names></string-name>; <string-name><surname>Mulholland</surname>, <given-names>A. J.</given-names></string-name>; <string-name><surname>Miller</surname>, <given-names>T.</given-names></string-name>; <string-name><surname>Jha</surname>, <given-names>S.</given-names></string-name>; <string-name><surname>Ramanathan</surname>, <given-names>A.</given-names></string-name>; <string-name><surname>Chong</surname>, <given-names>L.</given-names></string-name>; <string-name><surname>Amaro</surname>, <given-names>R. E.</given-names></string-name></person-group> <article-title>#COVIDisAirborne: AI-Enabled Multiscale Computational Microscopy of Delta SARS-CoV-2 in a Respiratory Aerosol</article-title>. <source>Int J High Perform Comput Appl</source> <year>2023</year>, <volume>37</volume> (<issue>1</issue>), <fpage>28</fpage>–<lpage>44</lpage>.</mixed-citation></ref>
<ref id="c5"><label>5</label><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Pezeshkian</surname>, <given-names>W.</given-names></string-name>; <string-name><surname>König</surname>, <given-names>M.</given-names></string-name>; <string-name><surname>Wassenaar</surname>, <given-names>T. A.</given-names></string-name>; <string-name><surname>Marrink</surname>, <given-names>S. J.</given-names></string-name></person-group> <article-title>Backmapping Triangulated Surfaces to Coarse-Grained Membrane Models</article-title>. <source>Nat Commun</source> <year>2020</year>, <volume>11</volume> (<issue>1</issue>), <fpage>1</fpage>–<lpage>9</lpage>.</mixed-citation></ref>
<ref id="c6"><label>6</label><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Autin</surname>, <given-names>L.</given-names></string-name>; <string-name><surname>Barbaro</surname>, <given-names>B. A.</given-names></string-name>; <string-name><surname>Jewett</surname>, <given-names>A. I.</given-names></string-name>; <string-name><surname>Ekman</surname>, <given-names>A.</given-names></string-name>; <string-name><surname>Verma</surname>, <given-names>S.</given-names></string-name>; <string-name><surname>Olson</surname>, <given-names>A. J.</given-names></string-name>; <string-name><surname>Goodsell</surname>, <given-names>D. S.</given-names></string-name></person-group> <article-title>Integrative Structural Modelling and Visualisation of a Cellular Organelle</article-title>. <source>QRB Discov</source> <year>2022</year>, <volume>3</volume>, <fpage>e11</fpage>.</mixed-citation></ref>
<ref id="c7"><label>7</label><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Feig</surname>, <given-names>M.</given-names></string-name>; <string-name><surname>Sugita</surname>, <given-names>Y.</given-names></string-name></person-group> <article-title>Whole-Cell Models and Simulations in Molecular Detail</article-title>. <source>Annu Rev Cell Dev Biol</source> <year>2019</year>, <volume>35</volume> (<issue>1</issue>), <fpage>191</fpage>–<lpage>211</lpage>.</mixed-citation></ref>
<ref id="c8"><label>8</label><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Im</surname>, <given-names>W.</given-names></string-name>; <string-name><surname>Liang</surname>, <given-names>J.</given-names></string-name>; <string-name><surname>Olson</surname>, <given-names>A.</given-names></string-name>; <string-name><surname>Zhou</surname>, <given-names>H.-X.</given-names></string-name>; <string-name><surname>Vajda</surname>, <given-names>S.</given-names></string-name>; <string-name><surname>Vakser</surname>, <given-names>I. A.</given-names></string-name></person-group> <article-title>Challenges in Structural Approaches to Cell Modeling</article-title>. <source>J Mol Biol</source> <year>2016</year>, <volume>428</volume> (<issue>15</issue>), <fpage>2943</fpage>–<lpage>2964</lpage>.</mixed-citation></ref>
<ref id="c9"><label>9</label><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Buch</surname>, <given-names>I.</given-names></string-name>; <string-name><surname>Harvey</surname>, <given-names>M. J.</given-names></string-name>; <string-name><surname>Giorgino</surname>, <given-names>T.</given-names></string-name>; <string-name><surname>Anderson</surname>, <given-names>D. P.</given-names></string-name>; <string-name><surname>De Fabritiis</surname>, <given-names>G.</given-names></string-name></person-group> <article-title>High-Throughput All-Atom Molecular Dynamics Simulations Using Distributed Computing</article-title>. <source>J Chem Inf Model</source> <year>2010</year>, <volume>50</volume> (<issue>3</issue>), <fpage>397</fpage>–<lpage>403</lpage>.</mixed-citation></ref>
<ref id="c10"><label>10</label><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Souza</surname>, <given-names>P. C. T.</given-names></string-name>; <string-name><surname>Limongelli</surname>, <given-names>V.</given-names></string-name>; <string-name><surname>Wu</surname>, <given-names>S.</given-names></string-name>; <string-name><surname>Marrink</surname>, <given-names>S. J.</given-names></string-name>; <string-name><surname>Monticelli</surname>, <given-names>L.</given-names></string-name></person-group> <article-title>Perspectives on High-Throughput Ligand/Protein Docking With Martini MD Simulations</article-title>. <source>Front Mol Biosci</source> <year>2021</year>, <volume>8</volume>.</mixed-citation></ref>
<ref id="c11"><label>11</label><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Kutzner</surname>, <given-names>C.</given-names></string-name>; <string-name><surname>Kniep</surname>, <given-names>C.</given-names></string-name>; <string-name><surname>Cherian</surname>, <given-names>A.</given-names></string-name>; <string-name><surname>Nordstrom</surname>, <given-names>L.</given-names></string-name>; <string-name><surname>Grubmüller</surname>, <given-names>H.</given-names></string-name>; <string-name><surname>de Groot</surname>, <given-names>B. L.</given-names></string-name>; <string-name><surname>Gapsys</surname>, <given-names>V.</given-names></string-name></person-group> <article-title>GROMACS in the Cloud: A Global Supercomputer to Speed Up Alchemical Drug Design</article-title>. <source>J Chem Inf Model</source> <year>2022</year>, <volume>62</volume> (<issue>7</issue>), <fpage>1691</fpage>–<lpage>1711</lpage>.</mixed-citation></ref>
<ref id="c12"><label>12</label><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Souza</surname>, <given-names>P. C. T.</given-names></string-name>; <string-name><surname>Alessandri</surname>, <given-names>R.</given-names></string-name>; <string-name><surname>Barnoud</surname>, <given-names>J.</given-names></string-name>; <string-name><surname>Thallmair</surname>, <given-names>S.</given-names></string-name>; <string-name><surname>Faustino</surname>, <given-names>I.</given-names></string-name>; <string-name><surname>Grünewald</surname>, <given-names>F.</given-names></string-name>; <string-name><surname>Patmanidis</surname>, <given-names>I.</given-names></string-name>; <string-name><surname>Abdizadeh</surname>, <given-names>H.</given-names></string-name>; <string-name><surname>Bruininks</surname>, <given-names>B. M. H.</given-names></string-name>; <string-name><surname>Wassenaar</surname>, <given-names>T. A.</given-names></string-name>; <string-name><surname>Kroon</surname>, <given-names>P. C.</given-names></string-name>; <string-name><surname>Melcr</surname>, <given-names>J.</given-names></string-name>; <string-name><surname>Nieto</surname>, <given-names>V.</given-names></string-name>; <string-name><surname>Corradi</surname>, <given-names>V.</given-names></string-name>; <string-name><surname>Khan</surname>, <given-names>H. M.</given-names></string-name>; <string-name><surname>Domański</surname>, <given-names>J.</given-names></string-name>; <string-name><surname>Javanainen</surname>, <given-names>M.</given-names></string-name>; <string-name><surname>Martinez-Seara</surname>, <given-names>H.</given-names></string-name>; <string-name><surname>Reuter</surname>, <given-names>N.</given-names></string-name>; <string-name><surname>Best</surname>, <given-names>R. B.</given-names></string-name>; <string-name><surname>Vattulainen</surname>, <given-names>I.</given-names></string-name>; <string-name><surname>Monticelli</surname>, <given-names>L.</given-names></string-name>; <string-name><surname>Periole</surname>, <given-names>X.</given-names></string-name>; <string-name><surname>Tieleman</surname>, <given-names>D. P.</given-names></string-name>; <string-name><surname>de Vries</surname>, <given-names>A. H.</given-names></string-name>; <string-name><surname>Marrink</surname>, <given-names>S. J.</given-names></string-name></person-group> <article-title>Martini 3: A General Purpose Force Field for Coarse-Grained Molecular Dynamics</article-title>. <source>Nat Methods</source> <year>2021</year>, <volume>18</volume> (<issue>4</issue>), <fpage>382</fpage>–<lpage>388</lpage>.</mixed-citation></ref>
<ref id="c13"><label>13</label><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Marrink</surname>, <given-names>S. J.</given-names></string-name>; <string-name><surname>Risselada</surname>, <given-names>H. J.</given-names></string-name>; <string-name><surname>Yefimov</surname>, <given-names>S.</given-names></string-name>; <string-name><surname>Tieleman</surname>, <given-names>D. P.</given-names></string-name>; <string-name><surname>De Vries</surname>, <given-names>A. H.</given-names></string-name></person-group> <article-title>The MARTINI Force Field: Coarse Grained Model for Biomolecular Simulations</article-title>. <source>Journal of Physical Chemistry B</source> <year>2007</year>, <volume>111</volume> (<issue>27</issue>), <fpage>7812</fpage>–<lpage>7824</lpage>.</mixed-citation></ref>
<ref id="c14"><label>14</label><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Marrink</surname>, <given-names>S. J.</given-names></string-name>; <string-name><surname>Monticelli</surname>, <given-names>L.</given-names></string-name>; <string-name><surname>Melo</surname>, <given-names>M. N.</given-names></string-name>; <string-name><surname>Alessandri</surname>, <given-names>R.</given-names></string-name>; <string-name><surname>Tieleman</surname>, <given-names>D. P.</given-names></string-name>; <string-name><surname>Souza</surname>, <given-names>P. C. T.</given-names></string-name></person-group> <article-title>Two Decades of Martini: Better Beads, Broader Scope</article-title>. <source>WIREs Computational Molecular Science</source> <year>2022</year>.</mixed-citation></ref>
<ref id="c15"><label>15</label><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Abraham</surname>, <given-names>M. J.</given-names></string-name>; <string-name><surname>Melquiond</surname>, <given-names>A. S. J.</given-names></string-name>; <string-name><surname>Ippoliti</surname>, <given-names>E.</given-names></string-name>; <string-name><surname>Gapsys</surname>, <given-names>V.</given-names></string-name>; <string-name><surname>Hess</surname>, <given-names>B.</given-names></string-name>; <string-name><surname>Trellet</surname>, <given-names>M.</given-names></string-name>; <string-name><surname>Rodrigues</surname>, <given-names>J. P. G. L. M.</given-names></string-name>; <string-name><surname>Laure</surname>, <given-names>E.</given-names></string-name>; <string-name><surname>Apostolov</surname>, <given-names>R.</given-names></string-name>; <string-name><surname>de Groot</surname>, <given-names>B. L.</given-names></string-name>; <string-name><surname>Bonvin</surname>, <given-names>A. M. J. J.</given-names></string-name>; <string-name><surname>Lindahl</surname>, <given-names>E.</given-names></string-name></person-group> <article-title>BioExcel Whitepaper on Scientific Software Development</article-title>. <source>Zenodo</source> <year>2018</year>.</mixed-citation></ref>
<ref id="c16"><label>16</label><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>de Jong</surname>, <given-names>D. H.</given-names></string-name>; <string-name><surname>Singh</surname>, <given-names>G.</given-names></string-name>; <string-name><surname>Bennett</surname>, <given-names>W. F. D.</given-names></string-name>; <string-name><surname>Arnarez</surname>, <given-names>C.</given-names></string-name>; <string-name><surname>Wassenaar</surname>, <given-names>T. A.</given-names></string-name>; <string-name><surname>Schäfer</surname>, <given-names>L. v.</given-names></string-name>; <string-name><surname>Periole</surname>, <given-names>X.</given-names></string-name>; <string-name><surname>Tieleman</surname>, <given-names>D. P.</given-names></string-name>; <string-name><surname>Marrink</surname>, <given-names>S. J.</given-names></string-name></person-group> <article-title>Improved Parameters for the Martini Coarse-Grained Protein Force Field</article-title>. <source>J Chem Theory Comput</source> <year>2013</year>, <volume>9</volume> (<issue>1</issue>), <fpage>687</fpage>–<lpage>697</lpage>.</mixed-citation></ref>
<ref id="c17"><label>17</label><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Abraham</surname>, <given-names>M. J.</given-names></string-name>; <string-name><surname>Murtola</surname>, <given-names>T.</given-names></string-name>; <string-name><surname>Schulz</surname>, <given-names>R.</given-names></string-name>; <string-name><surname>Páll</surname>, <given-names>S.</given-names></string-name>; <string-name><surname>Smith</surname>, <given-names>J. C.</given-names></string-name>; <string-name><surname>Hess</surname>, <given-names>B.</given-names></string-name>; <string-name><surname>Lindahl</surname>, <given-names>E.</given-names></string-name></person-group> <article-title>GROMACS: High Performance Molecular Simulations through Multi-Level Parallelism from Laptops to Supercomputers</article-title>. <source>SoftwareX</source> <year>2015</year>, <fpage>1</fpage>–<lpage>2</lpage>, <fpage>19</fpage>–<lpage>25</lpage>.</mixed-citation></ref>
<ref id="c18"><label>18</label><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Páll</surname>, <given-names>S.</given-names></string-name>; <string-name><surname>Abraham</surname>, <given-names>M. J.</given-names></string-name>; <string-name><surname>Kutzner</surname>, <given-names>C.</given-names></string-name>; <string-name><surname>Hess</surname>, <given-names>B.</given-names></string-name>; <string-name><surname>Lindahl</surname>, <given-names>E.</given-names></string-name></person-group> <source>Tackling Exascale Software Challenges in Molecular Dynamics Simulations with GROMACS</source>; <year>2015</year>; pp <fpage>3</fpage>–<lpage>27</lpage>.</mixed-citation></ref>
<ref id="c19"><label>19</label><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Case</surname>, <given-names>D. A.</given-names></string-name>; <string-name><surname>Cheatham</surname>, <given-names>T. E.</given-names></string-name>; <string-name><surname>Darden</surname>, <given-names>T.</given-names></string-name>; <string-name><surname>Gohlke</surname>, <given-names>H.</given-names></string-name>; <string-name><surname>Luo</surname>, <given-names>R.</given-names></string-name>; <string-name><surname>Merz</surname>, <given-names>K. M.</given-names></string-name>; <string-name><surname>Onufriev</surname>, <given-names>A.</given-names></string-name>; <string-name><surname>Simmerling</surname>, <given-names>C.</given-names></string-name>; <string-name><surname>Wang</surname>, <given-names>B.</given-names></string-name>; <string-name><surname>Woods</surname>, <given-names>R. J.</given-names></string-name></person-group> <article-title>The Amber Biomolecular Simulation Programs</article-title>. <source>J Comput Chem</source> <year>2005</year>, <volume>26</volume> (<issue>16</issue>), <fpage>1668</fpage>–<lpage>1688</lpage>.</mixed-citation></ref>
<ref id="c20"><label>20</label><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Brooks</surname>, <given-names>B. R.</given-names></string-name>; <string-name><surname>Brooks III</surname>, <given-names>C. L.</given-names></string-name>; <string-name><surname>Mackerell</surname> <suffix>Jr.</suffix>, <given-names>A. D.</given-names></string-name>; <string-name><surname>Nilsson</surname>, <given-names>L.</given-names></string-name>; <string-name><surname>Petrella</surname>, <given-names>R. J.</given-names></string-name>; <string-name><surname>Roux</surname>, <given-names>B.</given-names></string-name>; <string-name><surname>Won</surname>, <given-names>Y.</given-names></string-name>; <string-name><surname>Archontis</surname>, <given-names>G.</given-names></string-name>; <string-name><surname>Bartels</surname>, <given-names>C.</given-names></string-name>; <string-name><surname>Boresch</surname>, <given-names>S.</given-names></string-name>; <string-name><surname>Caflisch</surname>, <given-names>A.</given-names></string-name>; <string-name><surname>Caves</surname>, <given-names>L.</given-names></string-name>; <string-name><surname>Cui</surname>, <given-names>Q.</given-names></string-name>; <string-name><surname>Dinner</surname>, <given-names>A. R.</given-names></string-name>; <string-name><surname>Feig</surname>, <given-names>M.</given-names></string-name>; <string-name><surname>Fischer</surname>, <given-names>S.</given-names></string-name>; <string-name><surname>Gao</surname>, <given-names>J.</given-names></string-name>; <string-name><surname>Hodoscek</surname>, <given-names>M.</given-names></string-name>; <string-name><surname>Im</surname>, <given-names>W.</given-names></string-name>; <string-name><surname>Kuczera</surname>, <given-names>K.</given-names></string-name>; <string-name><surname>Lazaridis</surname>, <given-names>T.</given-names></string-name>; <string-name><surname>Ma</surname>, <given-names>J.</given-names></string-name>; <string-name><surname>Ovchinnikov</surname>, <given-names>V.</given-names></string-name>; <string-name><surname>Paci</surname>, <given-names>E.</given-names></string-name>; <string-name><surname>Pastor</surname>, <given-names>R. W.</given-names></string-name>; <string-name><surname>Post</surname>, <given-names>C. B.</given-names></string-name>; <string-name><surname>Pu</surname>, <given-names>J. Z.</given-names></string-name>; <string-name><surname>Schaefer</surname>, <given-names>M.</given-names></string-name>; <string-name><surname>Tidor</surname>, <given-names>B.</given-names></string-name>; <string-name><surname>Venable</surname>, <given-names>R. M.</given-names></string-name>; <string-name><surname>Woodcock</surname>, <given-names>H. L.</given-names></string-name>; <string-name><surname>Wu</surname>, <given-names>X.</given-names></string-name>; <string-name><surname>Yang</surname>, <given-names>W.</given-names></string-name>; <string-name><surname>York</surname>, <given-names>D. M.</given-names></string-name>; <string-name><surname>Karplus</surname>, <given-names>M.</given-names></string-name></person-group> <article-title>CHARMM: The Biomolecular Simulation Program</article-title>. <source>J Comput Chem</source> <year>2009</year>, <volume>30</volume> (<issue>10</issue>, <supplement>Sp. Iss. SI</supplement>), <fpage>1545</fpage>–<lpage>1614</lpage>.</mixed-citation></ref>
<ref id="c21"><label>21</label><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Phillips</surname>, <given-names>J. C.</given-names></string-name>; <string-name><surname>Braun</surname>, <given-names>R.</given-names></string-name>; <string-name><surname>Wang</surname>, <given-names>W.</given-names></string-name>; <string-name><surname>Gumbart</surname>, <given-names>J.</given-names></string-name>; <string-name><surname>Tajkhorshid</surname>, <given-names>E.</given-names></string-name>; <string-name><surname>Villa</surname>, <given-names>E.</given-names></string-name>; <string-name><surname>Chipot</surname>, <given-names>C.</given-names></string-name>; <string-name><surname>Skeel</surname>, <given-names>R. D.</given-names></string-name>; <string-name><surname>Kalé</surname>, <given-names>L.</given-names></string-name>; <string-name><surname>Schulten</surname>, <given-names>K.</given-names></string-name></person-group> <article-title>Scalable Molecular Dynamics with NAMD</article-title>. <source>J Comput Chem</source> <year>2005</year>, <volume>26</volume> (<issue>16</issue>), <fpage>1781</fpage>–<lpage>1802</lpage>.</mixed-citation></ref>
<ref id="c22"><label>22</label><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Machado</surname>, <given-names>M. R.</given-names></string-name>; <string-name><surname>Pantano</surname>, <given-names>S.</given-names></string-name></person-group> <article-title>SIRAH Tools: Mapping, Backmapping and Visualization of Coarse-Grained Models</article-title>. <source>Bioinformatics</source> <year>2016</year>, <volume>32</volume> (<issue>10</issue>), <fpage>1568</fpage>–<lpage>1570</lpage>.</mixed-citation></ref>
<ref id="c23"><label>23</label><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Danne</surname>, <given-names>R.</given-names></string-name>; <string-name><surname>Poojari</surname>, <given-names>C.</given-names></string-name>; <string-name><surname>Martinez-Seara</surname>, <given-names>H.</given-names></string-name>; <string-name><surname>Rissanen</surname>, <given-names>S.</given-names></string-name>; <string-name><surname>Lolicato</surname>, <given-names>F.</given-names></string-name>; <string-name><surname>Róg</surname>, <given-names>T.</given-names></string-name>; <string-name><surname>Vattulainen</surname>, <given-names>I.</given-names></string-name></person-group> <article-title>DoGlycans –Tools for Preparing Carbohydrate Structures for Atomistic Simulations of Glycoproteins, Glycolipids, and Carbohydrate Polymers for GROMACS</article-title>. <source>J Chem Inf Model</source> <year>2017</year>, <volume>57</volume> (<issue>10</issue>), <fpage>2401</fpage>–<lpage>2406</lpage>.</mixed-citation></ref>
<ref id="c24"><label>24</label><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Girard</surname>, <given-names>M.</given-names></string-name>; <string-name><surname>Ehlen</surname>, <given-names>A.</given-names></string-name>; <string-name><surname>Shakya</surname>, <given-names>A.</given-names></string-name>; <string-name><surname>Bereau</surname>, <given-names>T.</given-names></string-name>; <string-name><surname>de la Cruz</surname>, <given-names>M. O.</given-names></string-name></person-group> <article-title>Hoobas: A Highly Object-Oriented Builder for Molecular Dynamics</article-title>. <source>Comput Mater Sci</source> <year>2019</year>, <volume>167</volume>, <fpage>25</fpage>–<lpage>33</lpage>.</mixed-citation></ref>
<ref id="c25"><label>25</label><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Jo</surname>, <given-names>S.</given-names></string-name>; <string-name><surname>Cheng</surname>, <given-names>X.</given-names></string-name>; <string-name><surname>Lee</surname>, <given-names>J.</given-names></string-name>; <string-name><surname>Kim</surname>, <given-names>S.</given-names></string-name>; <string-name><surname>Park</surname>, <given-names>S.-J.</given-names></string-name>; <string-name><surname>Patel</surname>, <given-names>D. S.</given-names></string-name>; <string-name><surname>Beaven</surname>, <given-names>A. H.</given-names></string-name>; <string-name><surname>Lee</surname>, <given-names>K. Il</given-names></string-name>; <string-name><surname>Rui</surname>, <given-names>H.</given-names></string-name>; <string-name><surname>Park</surname>, <given-names>S.</given-names></string-name>; <string-name><surname>Lee</surname>, <given-names>H. S.</given-names></string-name>; <string-name><surname>Roux</surname>, <given-names>B.</given-names></string-name>; <string-name><surname>MacKerell</surname>, <given-names>A. D.</given-names></string-name>; <string-name><surname>Klauda</surname>, <given-names>J. B.</given-names></string-name>; <string-name><surname>Qi</surname>, <given-names>Y.</given-names></string-name>; <string-name><surname>Im</surname>, <given-names>W.</given-names></string-name></person-group> <article-title>CHARMM-GUI 10 Years for Biomolecular Modeling and Simulation</article-title>. <source>J Comput Chem</source> <year>2017</year>, <volume>38</volume> (<issue>15</issue>), <fpage>1114</fpage>–<lpage>1124</lpage>.</mixed-citation></ref>
<ref id="c26"><label>26</label><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Qi</surname>, <given-names>Y.</given-names></string-name>; <string-name><surname>Ingólfsson</surname>, <given-names>H. I.</given-names></string-name>; <string-name><surname>Cheng</surname>, <given-names>X.</given-names></string-name>; <string-name><surname>Lee</surname>, <given-names>J.</given-names></string-name>; <string-name><surname>Marrink</surname>, <given-names>S. J.</given-names></string-name>; <string-name><surname>Im</surname>, <given-names>W.</given-names></string-name></person-group> <article-title>CHARMM-GUI Martini Maker for Coarse-Grained Simulations with the Martini Force Field</article-title>. <source>J Chem Theory Comput</source> <year>2015</year>, <volume>11</volume> (<issue>9</issue>), <fpage>4486</fpage>–<lpage>4494</lpage>.</mixed-citation></ref>
<ref id="c27"><label>27</label><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Malde</surname>, <given-names>A. K.</given-names></string-name>; <string-name><surname>Zuo</surname>, <given-names>L.</given-names></string-name>; <string-name><surname>Breeze</surname>, <given-names>M.</given-names></string-name>; <string-name><surname>Stroet</surname>, <given-names>M.</given-names></string-name>; <string-name><surname>Poger</surname>, <given-names>D.</given-names></string-name>; <string-name><surname>Nair</surname>, <given-names>P. C.</given-names></string-name>; <string-name><surname>Oostenbrink</surname>, <given-names>C.</given-names></string-name>; <string-name><surname>Mark</surname>, <given-names>A. E.</given-names></string-name></person-group> <article-title>An Automated Force Field Topology Builder (ATB) and Repository: Version 1.0</article-title>. <source>J Chem Theory Comput</source> <year>2011</year>, <volume>7</volume> (<issue>12</issue>), <fpage>4026</fpage>–<lpage>4037</lpage>.</mixed-citation></ref>
<ref id="c28"><label>28</label><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Canzar</surname>, <given-names>S.</given-names></string-name>; <string-name><surname>El-Kebir</surname>, <given-names>M.</given-names></string-name>; <string-name><surname>Pool</surname>, <given-names>R.</given-names></string-name>; <string-name><surname>Elbassioni</surname>, <given-names>K.</given-names></string-name>; <string-name><surname>Malde</surname>, <given-names>A. K.</given-names></string-name>; <string-name><surname>Mark</surname>, <given-names>A. E.</given-names></string-name>; <string-name><surname>Geerke</surname>, <given-names>D. P.</given-names></string-name>; <string-name><surname>Stougie</surname>, <given-names>L.</given-names></string-name>; <string-name><surname>Klau</surname>, <given-names>G. W.</given-names></string-name></person-group> <article-title>Charge Group Partitioning in Biomolecular Simulation</article-title>. <source>Journal of Computational Biology</source> <year>2013</year>, <volume>20</volume> (<issue>3</issue>), <fpage>188</fpage>–<lpage>198</lpage>.</mixed-citation></ref>
<ref id="c29"><label>29</label><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Jorgensen</surname>, <given-names>W. L.</given-names></string-name>; <string-name><surname>Tirado-Rives</surname>, <given-names>J.</given-names></string-name></person-group> <article-title>Potential Energy Functions for Atomic-Level Simulations of Water and Organic and Biomolecular Systems</article-title>. <source>Proceedings of the National Academy of Sciences</source> <year>2005</year>, <volume>102</volume> (<issue>19</issue>), <fpage>6665</fpage>–<lpage>6670</lpage>.</mixed-citation></ref>
<ref id="c30"><label>30</label><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Dodda</surname>, <given-names>L. S.</given-names></string-name>; <string-name><surname>Vilseck</surname>, <given-names>J. Z.</given-names></string-name>; <string-name><surname>Tirado-Rives</surname>, <given-names>J.</given-names></string-name>; <string-name><surname>Jorgensen</surname>, <given-names>W. L.</given-names></string-name></person-group> <article-title>1.14*CM1A-LBCC: Localized Bond-Charge Corrected CM1A Charges for Condensed-Phase Simulations</article-title>. <source>J Phys Chem B</source> <year>2017</year>, <volume>121</volume> (<issue>15</issue>), <fpage>3864</fpage>–<lpage>3870</lpage>.</mixed-citation></ref>
<ref id="c31"><label>31</label><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Dodda</surname>, <given-names>L. S.</given-names></string-name>; <string-name><surname>Cabeza de Vaca</surname>, <given-names>I.</given-names></string-name>; <string-name><surname>Tirado-Rives</surname>, <given-names>J.</given-names></string-name>; <string-name><surname>Jorgensen</surname>, <given-names>W. L.</given-names></string-name></person-group> <article-title>LigParGen Web Server: An Automatic OPLS-AA Parameter Generator for Organic Ligands</article-title>. <source>Nucleic Acids Res</source> <year>2017</year>, <volume>45</volume> (<issue>W1</issue>), <fpage>W331</fpage>–<lpage>W336</lpage>.</mixed-citation></ref>
<ref id="c32"><label>32</label><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Vanommeslaeghe</surname>, <given-names>K.</given-names></string-name>; <string-name><surname>MacKerell</surname>, <given-names>A. D.</given-names></string-name></person-group> <article-title>Automation of the CHARMM General Force Field (CGenFF) I: Bond Perception and Atom Typing</article-title>. <source>J Chem Inf Model</source> <year>2012</year>, <volume>52</volume> (<issue>12</issue>), <fpage>3144</fpage>–<lpage>3154</lpage>.</mixed-citation></ref>
<ref id="c33"><label>33</label><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Uusitalo</surname>, <given-names>J. J.</given-names></string-name>; <string-name><surname>Ingólfsson</surname>, <given-names>H. I.</given-names></string-name>; <string-name><surname>Akhshi</surname>, <given-names>P.</given-names></string-name>; <string-name><surname>Tieleman</surname>, <given-names>D. P.</given-names></string-name>; <string-name><surname>Marrink</surname>, <given-names>S. J.</given-names></string-name></person-group> <article-title>Martini Coarse-Grained Force Field: Extension to DNA</article-title>. <source>J Chem Theory Comput</source> <year>2015</year>, <volume>11</volume> (<issue>8</issue>), <fpage>3932</fpage>–<lpage>3945</lpage>.</mixed-citation></ref>
<ref id="c34"><label>34</label><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Jo</surname>, <given-names>S.</given-names></string-name>; <string-name><surname>Kim</surname>, <given-names>T.</given-names></string-name>; <string-name><surname>Iyer</surname>, <given-names>V. G.</given-names></string-name>; <string-name><surname>Im</surname>, <given-names>W.</given-names></string-name></person-group> <article-title>CHARMM-GUI: A Web-Based Graphical User Interface for CHARMM</article-title>. <source>J. Comput. Chem</source>. <volume>2008</volume>, 29 (11), <fpage>1859</fpage>–<lpage>1865</lpage>.</mixed-citation></ref>
<ref id="c35"><label>35</label><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Uusitalo</surname>, <given-names>J. J.</given-names></string-name>; <string-name><surname>Ingólfsson</surname>, <given-names>H. I.</given-names></string-name>; <string-name><surname>Marrink</surname>, <given-names>S. J.</given-names></string-name>; <string-name><surname>Faustino</surname>, <given-names>I.</given-names></string-name></person-group> <article-title>Martini Coarse-Grained Force Field: Extension to RNA</article-title>. <source>Biophys J</source> <year>2017</year>, <volume>113</volume> (<issue>2</issue>), <fpage>246</fpage>–<lpage>256</lpage>.</mixed-citation></ref>
<ref id="c36"><label>36</label><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Souza</surname>, <given-names>P. C. T.</given-names></string-name>; <string-name><surname>Thallmair</surname>, <given-names>S.</given-names></string-name>; <string-name><surname>Conflitti</surname>, <given-names>P.</given-names></string-name>; <string-name><surname>Ramírez-Palacios</surname>, <given-names>C.</given-names></string-name>; <string-name><surname>Alessandri</surname>, <given-names>R.</given-names></string-name>; <string-name><surname>Raniolo</surname>, <given-names>S.</given-names></string-name>; <string-name><surname>Limongelli</surname>, <given-names>V.</given-names></string-name>; <string-name><surname>Marrink</surname>, <given-names>S. J.</given-names></string-name></person-group> <article-title>Protein–Ligand Binding with the Coarse-Grained Martini Model</article-title>. <source>Nat Commun</source> <year>2020</year>, <volume>11</volume> (<issue>1</issue>), <fpage>3714</fpage>.</mixed-citation></ref>
<ref id="c37"><label>37</label><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Herzog</surname>, <given-names>F. A.</given-names></string-name>; <string-name><surname>Braun</surname>, <given-names>L.</given-names></string-name>; <string-name><surname>Schoen</surname>, <given-names>I.</given-names></string-name>; <string-name><surname>Vogel</surname>, <given-names>V.</given-names></string-name></person-group> <article-title>Improved Side Chain Dynamics in MARTINI Simulations of Protein–Lipid Interfaces</article-title>. <source>J Chem Theory Comput</source> <year>2016</year>, <volume>12</volume> (<issue>5</issue>), <fpage>2446</fpage>–<lpage>2458</lpage>.</mixed-citation></ref>
<ref id="c38"><label>38</label><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Periole</surname>, <given-names>X.</given-names></string-name>; <string-name><surname>Cavalli</surname>, <given-names>M.</given-names></string-name>; <string-name><surname>Marrink</surname>, <given-names>S.-J.</given-names></string-name>; <string-name><surname>Ceruso</surname>, <given-names>M. A.</given-names></string-name></person-group> <article-title>Combining an Elastic Network With a Coarse-Grained Molecular Force Field: Structure, Dynamics, and Intermolecular Recognition</article-title>. <source>J Chem Theory Comput</source> <year>2009</year>, <volume>5</volume> (<issue>9</issue>), <fpage>2531</fpage>–<lpage>2543</lpage>.</mixed-citation></ref>
<ref id="c39"><label>39</label><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Poma</surname>, <given-names>A. B.</given-names></string-name>; <string-name><surname>Cieplak</surname>, <given-names>M.</given-names></string-name>; <string-name><surname>Theodorakis</surname>, <given-names>P. E.</given-names></string-name></person-group> <article-title>Combining the MARTINI and Structure-Based Coarse-Grained Approaches for the Molecular Dynamics Studies of Conformational Transitions in Proteins</article-title>. <source>J Chem Theory Comput</source> <year>2017</year>, <volume>13</volume> (<issue>3</issue>), <fpage>1366</fpage>–<lpage>1374</lpage>.</mixed-citation></ref>
<ref id="c40"><label>40</label><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Monticelli</surname>, <given-names>L.</given-names></string-name>; <string-name><surname>Kandasamy</surname>, <given-names>S. K.</given-names></string-name>; <string-name><surname>Periole</surname>, <given-names>X.</given-names></string-name>; <string-name><surname>Larson</surname>, <given-names>R. G.</given-names></string-name>; <string-name><surname>Tieleman</surname>, <given-names>D. P.</given-names></string-name>; <string-name><surname>Marrink</surname>, <given-names>S.-J.</given-names></string-name></person-group> <article-title>The MARTINI Coarse-Grained Force Field: Extension to Proteins</article-title>. <source>J Chem Theory Comput</source> <year>2008</year>, <volume>4</volume> (<issue>5</issue>), <fpage>819</fpage>–<lpage>834</lpage>.</mixed-citation></ref>
<ref id="c41"><label>41</label><mixed-citation publication-type="other"><person-group person-group-type="author"><string-name><surname>Chue Hong</surname>, <given-names>N. P.</given-names></string-name>; <string-name><surname>Katz</surname>, <given-names>D. S.</given-names></string-name>; <string-name><surname>Barker</surname>, <given-names>M.</given-names></string-name>; <string-name><surname>Lamprecht</surname>, <given-names>A.-L.</given-names></string-name>; <string-name><surname>Martinez</surname>, <given-names>C.</given-names></string-name>; <string-name><surname>Psomopoulos</surname>, <given-names>F. E.</given-names></string-name>; <string-name><surname>Harrow</surname>, <given-names>J.</given-names></string-name>; <string-name><surname>Castro</surname>, <given-names>L. J.</given-names></string-name>; <string-name><surname>Gruenpeter</surname>, <given-names>M.</given-names></string-name>; <string-name><surname>Martinez</surname>, <given-names>P. A.</given-names></string-name>; <string-name><surname>Honeyman</surname>, <given-names>T.</given-names></string-name>; <string-name><surname>Struck</surname>, <given-names>A.</given-names></string-name>; <string-name><surname>Lee</surname>, <given-names>A.</given-names></string-name>; <string-name><surname>Loewe</surname>, <given-names>A.</given-names></string-name>; <string-name><surname>van Werkhoven</surname>, <given-names>B.</given-names></string-name>; <string-name><surname>Jones</surname>, <given-names>C.</given-names></string-name>; <string-name><surname>Garijo</surname>, <given-names>D.</given-names></string-name>; <string-name><surname>Plomp</surname>, <given-names>E.</given-names></string-name>; <string-name><surname>Genova</surname>, <given-names>F.</given-names></string-name>; <string-name><surname>Shanahan</surname>, <given-names>H.</given-names></string-name>; <string-name><surname>Leng</surname>, <given-names>J.</given-names></string-name>; <string-name><surname>Hellström</surname>, <given-names>M.</given-names></string-name>; <string-name><surname>Sandström</surname>, <given-names>M.</given-names></string-name>; <string-name><surname>Sinha</surname>, <given-names>M.</given-names></string-name>; <string-name><surname>Kuzak</surname>, <given-names>M.</given-names></string-name>; <string-name><surname>Herterich</surname>, <given-names>P.</given-names></string-name>; <string-name><surname>Zhang</surname>, <given-names>Q.</given-names></string-name>; <string-name><surname>Islam</surname>, <given-names>S.</given-names></string-name>; <string-name><surname>Sansone</surname>, <given-names>S.-A.</given-names></string-name>; <string-name><surname>Pollard</surname>, <given-names>T.</given-names></string-name>; <string-name><surname>Atmojo</surname>, <given-names>U. D.</given-names></string-name>; <string-name><surname>Williams</surname>, <given-names>A.</given-names></string-name>; <string-name><surname>Czerniak</surname>, <given-names>A.</given-names></string-name>; <string-name><surname>Niehues</surname>, <given-names>A.</given-names></string-name>; <string-name><surname>Fouilloux</surname>, <given-names>A. C.</given-names></string-name>; <string-name><surname>Desinghu</surname>, <given-names>B.</given-names></string-name>; <string-name><surname>Goble</surname>, <given-names>C.</given-names></string-name>; <string-name><surname>Richard</surname>, <given-names>C.</given-names></string-name>; <string-name><surname>Gray</surname>, <given-names>C.</given-names></string-name>; <string-name><surname>Erdmann</surname>, <given-names>C.</given-names></string-name>; <string-name><surname>Nüst</surname>, <given-names>D.</given-names></string-name>; <string-name><surname>Tartarini</surname>, <given-names>D.</given-names></string-name>; <string-name><surname>Ranguelova</surname>, <given-names>E.</given-names></string-name>; <string-name><surname>Anzt</surname>, <given-names>H.</given-names></string-name>; <string-name><surname>Todorov</surname>, <given-names>I.</given-names></string-name>; <string-name><surname>McNally</surname>, <given-names>J.</given-names></string-name>; <string-name><surname>Moldon</surname>, <given-names>J.</given-names></string-name>; <string-name><surname>Burnett</surname>, <given-names>J.</given-names></string-name>; <string-name><surname>Garrido-Sánchez</surname>, <given-names>J.</given-names></string-name>; <string-name><surname>Belhajjame</surname>, <given-names>K.</given-names></string-name>; <string-name><surname>Sesink</surname>, <given-names>L.</given-names></string-name>; <string-name><surname>Hwang</surname>, <given-names>L.</given-names></string-name>; <string-name><surname>Tovani-Palone</surname>, <given-names>M. R.</given-names></string-name>; <string-name><surname>Wilkinson</surname>, <given-names>M. D.</given-names></string-name>; <string-name><surname>Servillat</surname>, <given-names>M.</given-names></string-name>; <string-name><surname>Liffers</surname>, <given-names>M.</given-names></string-name>; <string-name><surname>Fox</surname>, <given-names>M.</given-names></string-name>; <string-name><surname>Miljković</surname>, <given-names>N.</given-names></string-name>; <string-name><surname>Lynch</surname>, <given-names>N.</given-names></string-name>; <string-name><surname>Martinez Lavanchy</surname>, <given-names>P.</given-names></string-name>; <string-name><surname>Gesing</surname>, <given-names>S.</given-names></string-name>; <string-name><surname>Stevens</surname>, <given-names>S.</given-names></string-name>; <string-name><surname>Martinez Cuesta</surname>, <given-names>S.</given-names></string-name>; <string-name><surname>Peroni</surname>, <given-names>S.</given-names></string-name>; <string-name><surname>Soiland-Reyes</surname>, <given-names>S.</given-names></string-name>; <string-name><surname>Bakker</surname>, <given-names>T.</given-names></string-name>; <string-name><surname>Rabemanantsoa</surname>, <given-names>T.</given-names></string-name>; <string-name><surname>Sochat</surname>, <given-names>V.</given-names></string-name>; <string-name><surname>Yehudi</surname>, <given-names>Y.</given-names></string-name>; <string-name><surname>WG</surname>, <given-names>R. F.</given-names></string-name></person-group> <source>FAIR Principles for Research Software (FAIR4RS Principles)</source>. <year>2022</year>.</mixed-citation></ref>
<ref id="c42"><label>42</label><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Wilkinson</surname>, <given-names>M. D.</given-names></string-name>; <string-name><surname>Dumontier</surname>, <given-names>M.</given-names></string-name>; <string-name><surname>Aalbersberg</surname>, <given-names>Ij. J.</given-names></string-name>; <string-name><surname>Appleton</surname>, <given-names>G.</given-names></string-name>; <string-name><surname>Axton</surname>, <given-names>M.</given-names></string-name>; <string-name><surname>Baak</surname>, <given-names>A.</given-names></string-name>; <string-name><surname>Blomberg</surname>, <given-names>N.</given-names></string-name>; <string-name><surname>Boiten</surname>, <given-names>J.-W.</given-names></string-name>; <string-name><surname>da Silva Santos</surname>, <given-names>L. B.</given-names></string-name>; <string-name><surname>Bourne</surname>, <given-names>P. E.</given-names></string-name>; <string-name><surname>Bouwman</surname>, <given-names>J.</given-names></string-name>; <string-name><surname>Brookes</surname>, <given-names>A. J.</given-names></string-name>; <string-name><surname>Clark</surname>, <given-names>T.</given-names></string-name>; <string-name><surname>Crosas</surname>, <given-names>M.</given-names></string-name>; <string-name><surname>Dillo</surname>, <given-names>I.</given-names></string-name>; <string-name><surname>Dumon</surname>, <given-names>O.</given-names></string-name>; <string-name><surname>Edmunds</surname>, <given-names>S.</given-names></string-name>; <string-name><surname>Evelo</surname>, <given-names>C. T.</given-names></string-name>; <string-name><surname>Finkers</surname>, <given-names>R.</given-names></string-name>; <string-name><surname>Gonzalez-Beltran</surname>, <given-names>A.</given-names></string-name>; <string-name><surname>Gray</surname>, <given-names>A. J. G.</given-names></string-name>; <string-name><surname>Groth</surname>, <given-names>P.</given-names></string-name>; <string-name><surname>Goble</surname>, <given-names>C.</given-names></string-name>; <string-name><surname>Grethe</surname>, <given-names>J. S.</given-names></string-name>; <string-name><surname>Heringa</surname>, <given-names>J.</given-names></string-name>; <string-name><surname>’t Hoen</surname>, <given-names>P. A. C.</given-names></string-name>; <string-name><surname>Hooft</surname>, <given-names>R.</given-names></string-name>; <string-name><surname>Kuhn</surname>, <given-names>T.</given-names></string-name>; <string-name><surname>Kok</surname>, <given-names>R.</given-names></string-name>; <string-name><surname>Kok</surname>, <given-names>J.</given-names></string-name>; <string-name><surname>Lusher</surname>, <given-names>S. J.</given-names></string-name>; <string-name><surname>Martone</surname>, <given-names>M. E.</given-names></string-name>; <string-name><surname>Mons</surname>, <given-names>A.</given-names></string-name>; <string-name><surname>Packer</surname>, <given-names>A. L.</given-names></string-name>; <string-name><surname>Persson</surname>, <given-names>B.</given-names></string-name>; <string-name><surname>Rocca-Serra</surname>, <given-names>P.</given-names></string-name>; <string-name><surname>Roos</surname>, <given-names>M.</given-names></string-name>; <string-name><surname>van Schaik</surname>, <given-names>R.</given-names></string-name>; <string-name><surname>Sansone</surname>, <given-names>S.-A.</given-names></string-name>; <string-name><surname>Schultes</surname>, <given-names>E.</given-names></string-name>; <string-name><surname>Sengstag</surname>, <given-names>T.</given-names></string-name>; <string-name><surname>Slater</surname>, <given-names>T.</given-names></string-name>; <string-name><surname>Strawn</surname>, <given-names>G.</given-names></string-name>; <string-name><surname>Swertz</surname>, <given-names>M. A.</given-names></string-name>; <string-name><surname>Thompson</surname>, <given-names>M.</given-names></string-name>; <string-name><surname>van der Lei</surname>, <given-names>J.</given-names></string-name>; <string-name><surname>van Mulligen</surname>, <given-names>E.</given-names></string-name>; <string-name><surname>Velterop</surname>, <given-names>J.</given-names></string-name>; <string-name><surname>Waagmeester</surname>, <given-names>A.</given-names></string-name>; <string-name><surname>Wittenburg</surname>, <given-names>P.</given-names></string-name>; <string-name><surname>Wolstencroft</surname>, <given-names>K.</given-names></string-name>; <string-name><surname>Zhao</surname>, <given-names>J.</given-names></string-name>; <string-name><surname>Mons</surname>, <given-names>B.</given-names></string-name></person-group> <article-title>The FAIR Guiding Principles for Scientific Data Management and Stewardship</article-title>. <source>Sci Data</source> <year>2016</year>, <volume>3</volume> (<issue>1</issue>), <fpage>160018</fpage>.</mixed-citation></ref>
<ref id="c43"><label>43</label><mixed-citation publication-type="other"><person-group person-group-type="author"><string-name><surname>Alibay</surname>, <given-names>I.</given-names></string-name>; <string-name><surname>Barnoud</surname>, <given-names>J.</given-names></string-name>; <string-name><surname>Beckstein</surname>, <given-names>O.</given-names></string-name>; <string-name><surname>Gowers</surname>, <given-names>R. J.</given-names></string-name>; <string-name><surname>Naughton</surname>, <given-names>F.</given-names></string-name>; <string-name><surname>Wang</surname>, <given-names>L.</given-names></string-name></person-group> <source>MDAKits: Supporting and Promoting the Development of Community Packages Leveraging the MDAnalysis Library</source>. <year>2022</year>.</mixed-citation></ref>
<ref id="c44"><label>44</label><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Grünewald</surname>, <given-names>F.</given-names></string-name>; <string-name><surname>Alessandri</surname>, <given-names>R.</given-names></string-name>; <string-name><surname>Kroon</surname>, <given-names>P. C.</given-names></string-name>; <string-name><surname>Monticelli</surname>, <given-names>L.</given-names></string-name>; <string-name><surname>Souza</surname>, <given-names>P. C. T.</given-names></string-name>; <string-name><surname>Marrink</surname>, <given-names>S. J.</given-names></string-name></person-group> <article-title>Polyply; a Python Suite for Facilitating Simulations of Macromolecules and Nanomaterials</article-title>. <source>Nat Commun</source> <year>2022</year>, <volume>13</volume> (<issue>1</issue>), <fpage>68</fpage>.</mixed-citation></ref>
<ref id="c45"><label>45</label><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Empereur-Mot</surname>, <given-names>C.</given-names></string-name>; <string-name><surname>Pesce</surname>, <given-names>L.</given-names></string-name>; <string-name><surname>Doni</surname>, <given-names>G.</given-names></string-name>; <string-name><surname>Bochicchio</surname>, <given-names>D.</given-names></string-name>; <string-name><surname>Capelli</surname>, <given-names>R.</given-names></string-name>; <string-name><surname>Perego</surname>, <given-names>C.</given-names></string-name>; <string-name><surname>Pavan</surname>, <given-names>G. M.</given-names></string-name></person-group> <article-title><italic>Swarm-CG</italic> : Automatic Parametrization of Bonded Terms in MARTINI-Based Coarse-Grained Models of Simple to Complex Molecules <italic>via</italic> Fuzzy Self-Tuning Particle Swarm Optimization</article-title>. <source>ACS Omega</source> <year>2020</year>, <volume>5</volume> (<issue>50</issue>), <fpage>32823</fpage>–<lpage>32843</lpage>.</mixed-citation></ref>
<ref id="c46"><label>46</label><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Wassenaar</surname>, <given-names>T. A.</given-names></string-name>; <string-name><surname>Pluhackova</surname>, <given-names>K.</given-names></string-name>; <string-name><surname>Böckmann</surname>, <given-names>R. A.</given-names></string-name>; <string-name><surname>Marrink</surname>, <given-names>S. J.</given-names></string-name>; <string-name><surname>Tieleman</surname>, <given-names>D. P.</given-names></string-name></person-group> <article-title>Going Backward: A Flexible Geometric Approach to Reverse Transformation from Coarse Grained to Atomistic Models</article-title>. <source>J Chem Theory Comput</source> <year>2014</year>, <volume>10</volume> (<issue>2</issue>), <fpage>676</fpage>–<lpage>690</lpage>.</mixed-citation></ref>
<ref id="c47"><label>47</label><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Marx</surname>, <given-names>V.</given-names></string-name></person-group> <article-title>When Computational Pipelines Go ‘Clank.’</article-title> <source>Nat Methods</source> <year>2020</year>, <volume>17</volume> (<issue>7</issue>), <fpage>659</fpage>–<lpage>662</lpage>.</mixed-citation></ref>
<ref id="c48"><label>48</label><mixed-citation publication-type="confproc"><person-group person-group-type="author"><string-name><surname>Hagberg</surname>, <given-names>A. A.</given-names></string-name>; <string-name><surname>Schult</surname>, <given-names>D. A.</given-names></string-name>; <string-name><surname>Swart</surname>, <given-names>P. J.</given-names></string-name></person-group> <article-title>Exploring Network Structure, Dynamics, and Function Using NetworkX</article-title>. In <conf-name><italic>Proceedings of the 7th Python in Science Conference</italic></conf-name>; <person-group person-group-type="editor"><string-name><surname>Varoquaux</surname>, <given-names>G.</given-names></string-name>, <string-name><surname>Vaught</surname>, <given-names>T.</given-names></string-name>, <string-name><surname>Millman</surname>, <given-names>J.</given-names></string-name></person-group>, Eds.; <conf-loc>Pasadena, CA USA</conf-loc>, <year>2008</year>; pp <fpage>11</fpage>–<lpage>15</lpage>.</mixed-citation></ref>
<ref id="c49"><label>49</label><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Bashford</surname>, <given-names>D.</given-names></string-name>; <string-name><surname>Karplus</surname>, <given-names>M.</given-names></string-name></person-group> <article-title>PKa’s of Ionizable Groups in Proteins: Atomic Detail from a Continuum Electrostatic Model</article-title>. <source>Biochemistry</source> <year>1990</year>, <volume>29</volume> (<issue>44</issue>), <fpage>10219</fpage>–<lpage>10225</lpage>.</mixed-citation></ref>
<ref id="c50"><label>50</label><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Huang</surname>, <given-names>Y.</given-names></string-name>; <string-name><surname>Chen</surname>, <given-names>W.</given-names></string-name>; <string-name><surname>Wallace</surname>, <given-names>J. A.</given-names></string-name>; <string-name><surname>Shen</surname>, <given-names>J.</given-names></string-name></person-group> <article-title>All-Atom Continuous Constant PH Molecular Dynamics with Particle Mesh Ewald and Titratable Water</article-title>. <source>J Chem Theory Comput</source> <year>2016</year>, <volume>12</volume> (<issue>11</issue>), <fpage>5411</fpage>–<lpage>5421</lpage>.</mixed-citation></ref>
<ref id="c51"><label>51</label><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Donnini</surname>, <given-names>S.</given-names></string-name>; <string-name><surname>Tegeler</surname>, <given-names>F.</given-names></string-name>; <string-name><surname>Groenhof</surname>, <given-names>G.</given-names></string-name>; <string-name><surname>Grubmüller</surname>, <given-names>H.</given-names></string-name></person-group> <article-title>Constant PH Molecular Dynamics in Explicit Solvent with λ-Dynamics</article-title>. <source>J Chem Theory Comput</source> <year>2011</year>, <volume>7</volume> (<issue>6</issue>), <fpage>1962</fpage>–<lpage>1978</lpage>.</mixed-citation></ref>
<ref id="c52"><label>52</label><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Bennett</surname>, <given-names>W. F. D.</given-names></string-name>; <string-name><surname>Chen</surname>, <given-names>A. W.</given-names></string-name>; <string-name><surname>Donnini</surname>, <given-names>S.</given-names></string-name>; <string-name><surname>Groenhof</surname>, <given-names>G.</given-names></string-name>; <string-name><surname>Tieleman</surname>, <given-names>D. P.</given-names></string-name></person-group> <article-title>Constant PH Simulations with the Coarse-Grained MARTINI Model — Application to Oleic Acid Aggregates</article-title>. <source>Can J Chem</source> <year>2013</year>, <volume>91</volume> (<issue>9</issue>), <fpage>839</fpage>–<lpage>846</lpage>.</mixed-citation></ref>
<ref id="c53"><label>53</label><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Grünewald</surname>, <given-names>F.</given-names></string-name>; <string-name><surname>Souza</surname>, <given-names>P. C. T.</given-names></string-name>; <string-name><surname>Abdizadeh</surname>, <given-names>H.</given-names></string-name>; <string-name><surname>Barnoud</surname>, <given-names>J.</given-names></string-name>; <string-name><surname>de Vries</surname>, <given-names>A. H.</given-names></string-name>; <string-name><surname>Marrink</surname>, <given-names>S. J.</given-names></string-name></person-group> <article-title>Titratable Martini Model for Constant PH Simulations</article-title>. <source>J Chem Phys</source> <year>2020</year>, <volume>153</volume> (<issue>2</issue>), <fpage>024118</fpage>.</mixed-citation></ref>
<ref id="c54"><label>54</label><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Aho</surname>, <given-names>N.</given-names></string-name>; <string-name><surname>Buslaev</surname>, <given-names>P.</given-names></string-name>; <string-name><surname>Jansen</surname>, <given-names>A.</given-names></string-name>; <string-name><surname>Bauer</surname>, <given-names>P.</given-names></string-name>; <string-name><surname>Groenhof</surname>, <given-names>G.</given-names></string-name>; <string-name><surname>Hess</surname>, <given-names>B.</given-names></string-name></person-group> <article-title>Scalable Constant PH Molecular Dynamics in GROMACS</article-title>. <source>J Chem Theory Comput</source> <year>2022</year>, <volume>18</volume> (<issue>10</issue>), <fpage>6148</fpage>–<lpage>6160</lpage>.</mixed-citation></ref>
<ref id="c55"><label>55</label><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Huang</surname>, <given-names>J.</given-names></string-name>; <string-name><surname>Rauscher</surname>, <given-names>S.</given-names></string-name>; <string-name><surname>Nawrocki</surname>, <given-names>G.</given-names></string-name>; <string-name><surname>Ran</surname>, <given-names>T.</given-names></string-name>; <string-name><surname>Feig</surname>, <given-names>M.</given-names></string-name>; <string-name><surname>de Groot</surname>, <given-names>B. L.</given-names></string-name>; <string-name><surname>Grubmüller</surname>, <given-names>H.</given-names></string-name>; <string-name><surname>MacKerell</surname>, <given-names>A. D.</given-names></string-name></person-group> <article-title>CHARMM36m: An Improved Force Field for Folded and Intrinsically Disordered Proteins</article-title>. <source>Nat Methods</source> <year>2017</year>, <volume>14</volume> (<issue>1</issue>), <fpage>71</fpage>–<lpage>73</lpage>.</mixed-citation></ref>
<ref id="c56"><label>56</label><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Lindorff-Larsen</surname>, <given-names>K.</given-names></string-name>; <string-name><surname>Piana</surname>, <given-names>S.</given-names></string-name>; <string-name><surname>Palmo</surname>, <given-names>K.</given-names></string-name>; <string-name><surname>Maragakis</surname>, <given-names>P.</given-names></string-name>; <string-name><surname>Klepeis</surname>, <given-names>J. L.</given-names></string-name>; <string-name><surname>Dror</surname>, <given-names>R. O.</given-names></string-name>; <string-name><surname>Shaw</surname>, <given-names>D. E.</given-names></string-name></person-group> <article-title>Improved Side-Chain Torsion Potentials for the Amber Ff99SB Protein Force Field</article-title>. <source>Proteins: Structure, Function, and Bioinformatics</source> <year>2010</year>, <volume>78</volume> (<issue>8</issue>), <fpage>1950</fpage>–<lpage>1958</lpage>.</mixed-citation></ref>
<ref id="c57"><label>57</label><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Anandakrishnan</surname>, <given-names>R.</given-names></string-name>; <string-name><surname>Aguilar</surname>, <given-names>B.</given-names></string-name>; <string-name><surname>Onufriev</surname>, <given-names>A. v.</given-names></string-name></person-group> <article-title>H++ 3.0: Automating PK Prediction and the Preparation of Biomolecular Structures for Atomistic Molecular Modeling and Simulations</article-title>. <source>Nucleic Acids Res</source> <year>2012</year>, <volume>40</volume> (<issue>W1</issue>), <fpage>W537</fpage>–<lpage>W541</lpage>.</mixed-citation></ref>
<ref id="c58"><label>58</label><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Olsson</surname>, <given-names>M. H. M.</given-names></string-name>; <string-name><surname>Søndergaard</surname>, <given-names>C. R.</given-names></string-name>; <string-name><surname>Rostkowski</surname>, <given-names>M.</given-names></string-name>; <string-name><surname>Jensen</surname>, <given-names>J. H.</given-names></string-name></person-group> <article-title>PROPKA3: Consistent Treatment of Internal and Surface Residues in Empirical p <italic>K</italic> a Predictions</article-title>. <source>J Chem Theory Comput</source> <year>2011</year>, <volume>7</volume> (<issue>2</issue>), <fpage>525</fpage>–<lpage>537</lpage>.</mixed-citation></ref>
<ref id="c59"><label>59</label><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Kmiecik</surname>, <given-names>S.</given-names></string-name>; <string-name><surname>Gront</surname>, <given-names>D.</given-names></string-name>; <string-name><surname>Kolinski</surname>, <given-names>M.</given-names></string-name>; <string-name><surname>Wieteska</surname>, <given-names>L.</given-names></string-name>; <string-name><surname>Dawid</surname>, <given-names>A. E.</given-names></string-name>; <string-name><surname>Kolinski</surname>, <given-names>A.</given-names></string-name></person-group> <article-title>Coarse-Grained Protein Models and Their Applications</article-title>. <source>Chem Rev</source> <year>2016</year>, <volume>116</volume> (<issue>14</issue>), <fpage>7898</fpage>–<lpage>7936</lpage>.</mixed-citation></ref>
<ref id="c60"><label>60</label><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Varadi</surname>, <given-names>M.</given-names></string-name>; <string-name><surname>Anyango</surname>, <given-names>S.</given-names></string-name>; <string-name><surname>Deshpande</surname>, <given-names>M.</given-names></string-name>; <string-name><surname>Nair</surname>, <given-names>S.</given-names></string-name>; <string-name><surname>Natassia</surname>, <given-names>C.</given-names></string-name>; <string-name><surname>Yordanova</surname>, <given-names>G.</given-names></string-name>; <string-name><surname>Yuan</surname>, <given-names>D.</given-names></string-name>; <string-name><surname>Stroe</surname>, <given-names>O.</given-names></string-name>; <string-name><surname>Wood</surname>, <given-names>G.</given-names></string-name>; <string-name><surname>Laydon</surname>, <given-names>A.</given-names></string-name>; <string-name><surname>Žídek</surname>, <given-names>A.</given-names></string-name>; <string-name><surname>Green</surname>, <given-names>T.</given-names></string-name>; <string-name><surname>Tunyasuvunakool</surname>, <given-names>K.</given-names></string-name>; <string-name><surname>Petersen</surname>, <given-names>S.</given-names></string-name>; <string-name><surname>Jumper</surname>, <given-names>J.</given-names></string-name>; <string-name><surname>Clancy</surname>, <given-names>E.</given-names></string-name>; <string-name><surname>Green</surname>, <given-names>R.</given-names></string-name>; <string-name><surname>Vora</surname>, <given-names>A.</given-names></string-name>; <string-name><surname>Lutfi</surname>, <given-names>M.</given-names></string-name>; <string-name><surname>Figurnov</surname>, <given-names>M.</given-names></string-name>; <string-name><surname>Cowie</surname>, <given-names>A.</given-names></string-name>; <string-name><surname>Hobbs</surname>, <given-names>N.</given-names></string-name>; <string-name><surname>Kohli</surname>, <given-names>P.</given-names></string-name>; <string-name><surname>Kleywegt</surname>, <given-names>G.</given-names></string-name>; <string-name><surname>Birney</surname>, <given-names>E.</given-names></string-name>; <string-name><surname>Hassabis</surname>, <given-names>D.</given-names></string-name>; <string-name><surname>Velankar</surname>, <given-names>S.</given-names></string-name></person-group> <article-title>AlphaFold Protein Structure Database: Massively Expanding the Structural Coverage of Protein-Sequence Space with High-Accuracy Models</article-title>. <source>Nucleic Acids Res</source> <year>2022</year>, <volume>50</volume> (<issue>D1</issue>), <fpage>D439</fpage>–<lpage>D444</lpage>.</mixed-citation></ref>
<ref id="c61"><label>61</label><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Jumper</surname>, <given-names>J.</given-names></string-name>; <string-name><surname>Evans</surname>, <given-names>R.</given-names></string-name>; <string-name><surname>Pritzel</surname>, <given-names>A.</given-names></string-name>; <string-name><surname>Green</surname>, <given-names>T.</given-names></string-name>; <string-name><surname>Figurnov</surname>, <given-names>M.</given-names></string-name>; <string-name><surname>Ronneberger</surname>, <given-names>O.</given-names></string-name>; <string-name><surname>Tunyasuvunakool</surname>, <given-names>K.</given-names></string-name>; <string-name><surname>Bates</surname>, <given-names>R.</given-names></string-name>; <string-name><surname>Žídek</surname>, <given-names>A.</given-names></string-name>; <string-name><surname>Potapenko</surname>, <given-names>A.</given-names></string-name>; <string-name><surname>Bridgland</surname>, <given-names>A.</given-names></string-name>; <string-name><surname>Meyer</surname>, <given-names>C.</given-names></string-name>; <string-name><surname>Kohl</surname>, <given-names>S. A. A.</given-names></string-name>; <string-name><surname>Ballard</surname>, <given-names>A. J.</given-names></string-name>; <string-name><surname>Cowie</surname>, <given-names>A.</given-names></string-name>; <string-name><surname>Romera-Paredes</surname>, <given-names>B.</given-names></string-name>; <string-name><surname>Nikolov</surname>, <given-names>S.</given-names></string-name>; <string-name><surname>Jain</surname>, <given-names>R.</given-names></string-name>; <string-name><surname>Adler</surname>, <given-names>J.</given-names></string-name>; <string-name><surname>Back</surname>, <given-names>T.</given-names></string-name>; <string-name><surname>Petersen</surname>, <given-names>S.</given-names></string-name>; <string-name><surname>Reiman</surname>, <given-names>D.</given-names></string-name>; <string-name><surname>Clancy</surname>, <given-names>E.</given-names></string-name>; <string-name><surname>Zielinski</surname>, <given-names>M.</given-names></string-name>; <string-name><surname>Steinegger</surname>, <given-names>M.</given-names></string-name>; <string-name><surname>Pacholska</surname>, <given-names>M.</given-names></string-name>; <string-name><surname>Berghammer</surname>, <given-names>T.</given-names></string-name>; <string-name><surname>Bodenstein</surname>, <given-names>S.</given-names></string-name>; <string-name><surname>Silver</surname>, <given-names>D.</given-names></string-name>; <string-name><surname>Vinyals</surname>, <given-names>O.</given-names></string-name>; <string-name><surname>Senior</surname>, <given-names>A. W.</given-names></string-name>; <string-name><surname>Kavukcuoglu</surname>, <given-names>K.</given-names></string-name>; <string-name><surname>Kohli</surname>, <given-names>P.</given-names></string-name>; <string-name><surname>Hassabis</surname>, <given-names>D.</given-names></string-name></person-group> <article-title>Highly Accurate Protein Structure Prediction with AlphaFold</article-title>. <source>Nature</source> <year>2021</year>, <volume>596</volume> (<year>7873</year>), <fpage>583</fpage>–<lpage>589</lpage>.</mixed-citation></ref>
<ref id="c62"><label>62</label><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Hilpert</surname>, <given-names>C.</given-names></string-name>; <string-name><surname>Beranger</surname>, <given-names>L.</given-names></string-name>; <string-name><surname>Souza</surname>, <given-names>P. C. T.</given-names></string-name>; <string-name><surname>Vainikka</surname>, <given-names>P. A.</given-names></string-name>; <string-name><surname>Nieto</surname>, <given-names>V.</given-names></string-name>; <string-name><surname>Marrink</surname>, <given-names>S. J.</given-names></string-name>; <string-name><surname>Monticelli</surname>, <given-names>L.</given-names></string-name>; <string-name><surname>Launay</surname>, <given-names>G.</given-names></string-name></person-group> <article-title>Facilitating CG Simulations with MAD: The MArtini Database Server</article-title>. <source>J Chem Inf Model</source> <year>2023</year>, <volume>63</volume> (<issue>3</issue>), <fpage>702</fpage>–<lpage>710</lpage>.</mixed-citation></ref>
<ref id="c63"><label>63</label><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Sousa</surname>, <given-names>F. M.</given-names></string-name>; <string-name><surname>Lima</surname>, <given-names>L. M. P.</given-names></string-name>; <string-name><surname>Arnarez</surname>, <given-names>C.</given-names></string-name>; <string-name><surname>Pereira</surname>, <given-names>M. M.</given-names></string-name>; <string-name><surname>Melo</surname>, <given-names>M. N.</given-names></string-name></person-group> <article-title>Coarse-Grained Parameterization of Nucleotide Cofactors and Metabolites: Protonation Constants, Partition Coefficients, and Model Topologies</article-title>. <source>J Chem Inf Model</source> <year>2021</year>, <volume>61</volume> (<issue>1</issue>), <fpage>335</fpage>–<lpage>346</lpage>.</mixed-citation></ref>
<ref id="c64"><label>64</label><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Alessandri</surname>, <given-names>R.</given-names></string-name>; <string-name><surname>Barnoud</surname>, <given-names>J.</given-names></string-name>; <string-name><surname>Gertsen</surname>, <given-names>A. S.</given-names></string-name>; <string-name><surname>Patmanidis</surname>, <given-names>I.</given-names></string-name>; <string-name><surname>de Vries</surname>, <given-names>A. H.</given-names></string-name>; <string-name><surname>Souza</surname>, <given-names>P. C. T.</given-names></string-name>; <string-name><surname>Marrink</surname>, <given-names>S. J.</given-names></string-name></person-group> <article-title>Martini 3 Coarse-Grained Force Field: Small Molecules</article-title>. <source>Adv Theory Simul</source> <year>2022</year>, <volume>5</volume> (<issue>1</issue>), <fpage>2100391</fpage>.</mixed-citation></ref>
<ref id="c65"><label>65</label><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Yang</surname>, <given-names>J.</given-names></string-name>; <string-name><surname>Yan</surname>, <given-names>R.</given-names></string-name>; <string-name><surname>Roy</surname>, <given-names>A.</given-names></string-name>; <string-name><surname>Xu</surname>, <given-names>D.</given-names></string-name>; <string-name><surname>Poisson</surname>, <given-names>J.</given-names></string-name>; <string-name><surname>Zhang</surname>, <given-names>Y.</given-names></string-name></person-group> <article-title>The I-TASSER Suite: Protein Structure and Function Prediction</article-title>. <source>Nat Methods</source> <year>2015</year>, <volume>12</volume> (<issue>1</issue>), <fpage>7</fpage>–<lpage>8</lpage>.</mixed-citation></ref>
<ref id="c66"><label>66</label><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Kabsch</surname>, <given-names>W.</given-names></string-name>; <string-name><surname>Sander</surname>, <given-names>C.</given-names></string-name></person-group> <article-title>Dictionary of Protein Secondary Structure: Pattern Recognition of Hydrogen-Bonded and Geometrical Features</article-title>. <source>Biopolymers</source> <year>1983</year>, <volume>22</volume> (<issue>12</issue>), <fpage>2577</fpage>–<lpage>2637</lpage>.</mixed-citation></ref>
<ref id="c67"><label>67</label><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Touw</surname>, <given-names>W. G.</given-names></string-name>; <string-name><surname>Baakman</surname>, <given-names>C.</given-names></string-name>; <string-name><surname>Black</surname>, <given-names>J.</given-names></string-name>; <string-name><surname>te Beek</surname>, <given-names>T. A. H.</given-names></string-name>; <string-name><surname>Krieger</surname>, <given-names>E.</given-names></string-name>; <string-name><surname>Joosten</surname>, <given-names>R. P.</given-names></string-name>; <string-name><surname>Vriend</surname>, <given-names>G.</given-names></string-name></person-group> <article-title>A Series of PDB-Related Databanks for Everyday Needs</article-title>. <source>Nucleic Acids Res</source> <year>2015</year>, <volume>43</volume> (<issue>D1</issue>), <fpage>D364</fpage>–<lpage>D368</lpage>.</mixed-citation></ref>
<ref id="c68"><label>68</label><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Harris</surname>, <given-names>C. R.</given-names></string-name>; <string-name><surname>Millman</surname>, <given-names>K. J.</given-names></string-name>; <string-name><surname>van der Walt</surname>, <given-names>S. J.</given-names></string-name>; <string-name><surname>Gommers</surname>, <given-names>R.</given-names></string-name>; <string-name><surname>Virtanen</surname>, <given-names>P.</given-names></string-name>; <string-name><surname>Cournapeau</surname>, <given-names>D.</given-names></string-name>; <string-name><surname>Wieser</surname>, <given-names>E.</given-names></string-name>; <string-name><surname>Taylor</surname>, <given-names>J.</given-names></string-name>; <string-name><surname>Berg</surname>, <given-names>S.</given-names></string-name>; <string-name><surname>Smith</surname>, <given-names>N. J.</given-names></string-name>; <string-name><surname>Kern</surname>, <given-names>R.</given-names></string-name>; <string-name><surname>Picus</surname>, <given-names>M.</given-names></string-name>; <string-name><surname>Hoyer</surname>, <given-names>S.</given-names></string-name>; <string-name><surname>van Kerkwijk</surname>, <given-names>M. H.</given-names></string-name>; <string-name><surname>Brett</surname>, <given-names>M.</given-names></string-name>; <string-name><surname>Haldane</surname>, <given-names>A.</given-names></string-name>; <string-name><surname>del Río</surname>, <given-names>J. F.</given-names></string-name>; <string-name><surname>Wiebe</surname>, <given-names>M.</given-names></string-name>; <string-name><surname>Peterson</surname>, <given-names>P.</given-names></string-name>; <string-name><surname>Gérard-Marchant</surname>, <given-names>P.</given-names></string-name>; <string-name><surname>Sheppard</surname>, <given-names>K.</given-names></string-name>; <string-name><surname>Reddy</surname>, <given-names>T.</given-names></string-name>; <string-name><surname>Weckesser</surname>, <given-names>W.</given-names></string-name>; <string-name><surname>Abbasi</surname>, <given-names>H.</given-names></string-name>; <string-name><surname>Gohlke</surname>, <given-names>C.</given-names></string-name>; <string-name><surname>Oliphant</surname>, <given-names>T. E.</given-names></string-name></person-group> <article-title>Array Programming with NumPy</article-title>. <source>Nature</source> <year>2020</year>, <volume>585</volume> (<year>7825</year>), <fpage>357</fpage>–<lpage>362</lpage>.</mixed-citation></ref>
<ref id="c69"><label>69</label><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Virtanen</surname>, <given-names>P.</given-names></string-name>; <string-name><surname>Gommers</surname>, <given-names>R.</given-names></string-name>; <string-name><surname>Oliphant</surname>, <given-names>T. E.</given-names></string-name>; <string-name><surname>Haberland</surname>, <given-names>M.</given-names></string-name>; <string-name><surname>Reddy</surname>, <given-names>T.</given-names></string-name>; <string-name><surname>Cournapeau</surname>, <given-names>D.</given-names></string-name>; <string-name><surname>Burovski</surname>, <given-names>E.</given-names></string-name>; <string-name><surname>Peterson</surname>, <given-names>P.</given-names></string-name>; <string-name><surname>Weckesser</surname>, <given-names>W.</given-names></string-name>; <string-name><surname>Bright</surname>, <given-names>J.</given-names></string-name>; <string-name><surname>van der Walt</surname>, <given-names>S. J.</given-names></string-name>; <string-name><surname>Brett</surname>, <given-names>M.</given-names></string-name>; <string-name><surname>Wilson</surname>, <given-names>J.</given-names></string-name>; <string-name><surname>Millman</surname>, <given-names>K. J.</given-names></string-name>; <string-name><surname>Mayorov</surname>, <given-names>N.</given-names></string-name>; <string-name><surname>Nelson</surname>, <given-names>A. R. J.</given-names></string-name>; <string-name><surname>Jones</surname>, <given-names>E.</given-names></string-name>; <string-name><surname>Kern</surname>, <given-names>R.</given-names></string-name>; <string-name><surname>Larson</surname>, <given-names>E.</given-names></string-name>; <string-name><surname>Carey</surname>, <given-names>C. J.</given-names></string-name>; <string-name><surname>Polat, \.Ilhan; Feng</surname>, <given-names>Y.</given-names></string-name>; <string-name><surname>Moore</surname>, <given-names>E. W.</given-names></string-name>; <string-name><surname>VanderPlas</surname>, <given-names>J.</given-names></string-name>; <string-name><surname>Laxalde</surname>, <given-names>D.</given-names></string-name>; <string-name><surname>Perktold</surname>, <given-names>J.</given-names></string-name>; <string-name><surname>Cimrman</surname>, <given-names>R.</given-names></string-name>; <string-name><surname>Henriksen</surname>, <given-names>I.</given-names></string-name>; <string-name><surname>Quintero</surname>, <given-names>E. A.</given-names></string-name>; <string-name><surname>Harris</surname>, <given-names>C. R.</given-names></string-name>; <string-name><surname>Archibald</surname>, <given-names>A. M.</given-names></string-name>; <string-name><surname>Ribeiro</surname>, <given-names>A. H.</given-names></string-name>; <string-name><surname>Pedregosa</surname>, <given-names>F.</given-names></string-name>; <string-name><surname>van Mulbregt</surname>, <given-names>P.</given-names></string-name></person-group>; <article-title>SciPy 1.0 Contributors. SciPy 1.0: Fundamental Algorithms for Scientific Computing in Python</article-title>. <source>Nat Methods</source> <year>2020</year>, <volume>17</volume>, <fpage>261</fpage>–<lpage>272</lpage>.</mixed-citation></ref>
<ref id="c70"><label>70</label><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Engler</surname>, <given-names>M. S.</given-names></string-name>; <string-name><surname>Caron</surname>, <given-names>B.</given-names></string-name>; <string-name><surname>Mark</surname>, <given-names>A. E.</given-names></string-name></person-group> <article-title>Multiple-Choice Knapsack for Assigning Partial Atomic Charges in Drug-Like Molecules</article-title>. No. <issue>16</issue>, <fpage>1</fpage>–<lpage>13</lpage>.</mixed-citation></ref>
<ref id="c71"><label>71</label><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Engler</surname>, <given-names>M. S.</given-names></string-name>; <string-name><surname>El-kebir</surname>, <given-names>M.</given-names></string-name>; <string-name><surname>Mulder</surname>, <given-names>J.</given-names></string-name>; <string-name><surname>Mark</surname>, <given-names>A. E.</given-names></string-name>; <string-name><surname>Geerke</surname>, <given-names>D. P.</given-names></string-name>; <string-name><surname>Klau</surname>, <given-names>G. W.</given-names></string-name></person-group> <article-title>Enumerating Common Molecular Substructures</article-title>. <source>PeerJ Prepr</source> <year>2017</year>, <fpage>1</fpage>–<lpage>10</lpage>.</mixed-citation></ref>
<ref id="c72"><label>72</label><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Cao</surname>, <given-names>Y.</given-names></string-name>; <string-name><surname>Jiang</surname>, <given-names>T.</given-names></string-name>; <string-name><surname>Girke</surname>, <given-names>T.</given-names></string-name></person-group> <article-title>A Maximum Common Substructure-Based Algorithm for Searching and Predicting Drug-like Compounds</article-title>. <source>Bioinformatics</source> <year>2008</year>, <volume>24</volume> (<issue>13</issue>), <fpage>i366</fpage>–<lpage>i374</lpage>.</mixed-citation></ref>
<ref id="c73"><label>73</label><mixed-citation publication-type="confproc"><person-group person-group-type="author"><string-name><surname>Cook</surname>, <given-names>S. A.</given-names></string-name></person-group> <article-title>The Complexity of Theorem-Proving Procedures</article-title>. In <conf-name><italic>Proceedings of the third annual ACM symposium on Theory of computing - STOC ’71</italic></conf-name>; <conf-loc>ACM Press: New York, New York, USA</conf-loc>, <year>1971</year>; pp <fpage>151</fpage>–<lpage>158</lpage>.</mixed-citation></ref>
<ref id="c74"><label>74</label><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Eastman</surname>, <given-names>P.</given-names></string-name>; <string-name><surname>Swails</surname>, <given-names>J.</given-names></string-name>; <string-name><surname>Chodera</surname>, <given-names>J. D.</given-names></string-name>; <string-name><surname>McGibbon</surname>, <given-names>R. T.</given-names></string-name>; <string-name><surname>Zhao</surname>, <given-names>Y.</given-names></string-name>; <string-name><surname>Beauchamp</surname>, <given-names>K. A.</given-names></string-name>; <string-name><surname>Wang</surname>, <given-names>L.-P.</given-names></string-name>; <string-name><surname>Simmonett</surname>, <given-names>A. C.</given-names></string-name>; <string-name><surname>Harrigan</surname>, <given-names>M. P.</given-names></string-name>; <string-name><surname>Stern</surname>, <given-names>C. D.</given-names></string-name>; <string-name><surname>Wiewiora</surname>, <given-names>R. P.</given-names></string-name>; <string-name><surname>Brooks</surname>, <given-names>B. R.</given-names></string-name>; <string-name><surname>Pande</surname>, <given-names>V. S.</given-names></string-name></person-group> <article-title>OpenMM 7: Rapid Development of High Performance Algorithms for Molecular Dynamics</article-title>. <source>PLoS Comput Biol</source> <year>2017</year>, <volume>13</volume> (<issue>7</issue>), <fpage>e1005659</fpage>.</mixed-citation></ref>
<ref id="c75"><label>75</label><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Nnyigide</surname>, <given-names>O. S.</given-names></string-name>; <string-name><surname>Nnyigide</surname>, <given-names>T. O.</given-names></string-name>; <string-name><surname>Lee</surname>, <given-names>S.-G.</given-names></string-name>; <string-name><surname>Hyun</surname>, <given-names>K.</given-names></string-name></person-group> <article-title>Protein Repair and Analysis Server: A Web Server to Repair PDB Structures, Add Missing Heavy Atoms and Hydrogen Atoms, and Assign Secondary Structures by Amide Interactions</article-title>. <source>J Chem Inf Model</source> <year>2022</year>, <volume>62</volume> (<issue>17</issue>), <fpage>4232</fpage>–<lpage>4246</lpage>.</mixed-citation></ref>
<ref id="c76"><label>76</label><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Lee</surname>, <given-names>J.</given-names></string-name>; <string-name><surname>Cheng</surname>, <given-names>X.</given-names></string-name>; <string-name><surname>Swails</surname>, <given-names>J. M.</given-names></string-name>; <string-name><surname>Yeom</surname>, <given-names>M. S.</given-names></string-name>; <string-name><surname>Eastman</surname>, <given-names>P. K.</given-names></string-name>; <string-name><surname>Lemkul</surname>, <given-names>J. A.</given-names></string-name>; <string-name><surname>Wei</surname>, <given-names>S.</given-names></string-name>; <string-name><surname>Buckner</surname>, <given-names>J.</given-names></string-name>; <string-name><surname>Jeong</surname>, <given-names>J. C.</given-names></string-name>; <string-name><surname>Qi</surname>, <given-names>Y.</given-names></string-name>; <string-name><surname>Jo</surname>, <given-names>S.</given-names></string-name>; <string-name><surname>Pande</surname>, <given-names>V. S.</given-names></string-name>; <string-name><surname>Case</surname>, <given-names>D. A.</given-names></string-name>; <string-name><surname>Brooks</surname>, <given-names>C. L.</given-names></string-name>; <string-name><surname>MacKerell</surname>, <given-names>A. D.</given-names></string-name>; <string-name><surname>Klauda</surname>, <given-names>J. B.</given-names></string-name>; <string-name><surname>Im</surname>, <given-names>W.</given-names></string-name></person-group> <article-title>CHARMM-GUI Input Generator for NAMD, GROMACS, AMBER, OpenMM, and CHARMM/OpenMM Simulations Using the CHARMM36 Additive Force Field</article-title>. <source>J Chem Theory Comput</source> <year>2016</year>, <volume>12</volume> (<issue>1</issue>), <fpage>405</fpage>–<lpage>413</lpage>.</mixed-citation></ref>
<ref id="c77"><label>77</label><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Bjelkmar</surname>, <given-names>P.</given-names></string-name>; <string-name><surname>Larsson</surname>, <given-names>P.</given-names></string-name>; <string-name><surname>Cuendet</surname>, <given-names>M. A.</given-names></string-name>; <string-name><surname>Hess</surname>, <given-names>B.</given-names></string-name>; <string-name><surname>Lindahl</surname>, <given-names>E.</given-names></string-name></person-group> <article-title>Implementation of the CHARMM Force Field in GROMACS: Analysis of Protein Stability Effects from Correction Maps, Virtual Interaction Sites, and Water Models</article-title>. <source>J Chem Theory Comput</source> <year>2010</year>, <volume>6</volume> (<issue>2</issue>), <fpage>459</fpage>–<lpage>466</lpage>.</mixed-citation></ref>
<ref id="c78"><label>78</label><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Bussi</surname>, <given-names>G.</given-names></string-name>; <string-name><surname>Donadio</surname>, <given-names>D.</given-names></string-name>; <string-name><surname>Parrinello</surname>, <given-names>M.</given-names></string-name></person-group> <article-title>Canonical Sampling through Velocity Rescaling</article-title>. <source>J Chem Phys</source> <year>2007</year>, <volume>126</volume> (<issue>1</issue>), <fpage>14101</fpage>.</mixed-citation></ref>
<ref id="c79"><label>79</label><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Parrinello</surname>, <given-names>M.</given-names></string-name>; <string-name><surname>Rahman</surname>, <given-names>A.</given-names></string-name></person-group> <article-title>Polymorphic Transitions in Single Crystals: A New Molecular Dynamics Method</article-title>. <source>J Appl Phys</source> <year>1981</year>, <volume>52</volume> (<issue>12</issue>), <fpage>7182</fpage>–<lpage>7190</lpage>.</mixed-citation></ref>
<ref id="c80"><label>80</label><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Berendsen</surname>, <given-names>H. J. C.</given-names></string-name>; <string-name><surname>Postma</surname>, <given-names>J. P. M.</given-names></string-name>; <string-name><surname>van Gunsteren</surname>, <given-names>W. F.</given-names></string-name>; <string-name><surname>DiNola</surname>, <given-names>A.</given-names></string-name>; <string-name><surname>Haak</surname>, <given-names>J. R.</given-names></string-name></person-group> <article-title>Molecular Dynamics with Coupling to an External Bath</article-title>. <source>J Chem Phys</source> <year>1984</year>, <volume>81</volume> (<issue>8</issue>), <fpage>3684</fpage>–<lpage>3690</lpage>.</mixed-citation></ref>
<ref id="c81"><label>81</label><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Abraham</surname>, <given-names>M. J.</given-names></string-name>; <string-name><surname>Murtola</surname>, <given-names>T.</given-names></string-name>; <string-name><surname>Schulz</surname>, <given-names>R.</given-names></string-name>; <string-name><surname>Páll</surname>, <given-names>S.</given-names></string-name>; <string-name><surname>Smith</surname>, <given-names>J. C.</given-names></string-name>; <string-name><surname>Hess</surname>, <given-names>B.</given-names></string-name>; <string-name><surname>Lindahl</surname>, <given-names>E.</given-names></string-name></person-group> <article-title>GROMACS: High Performance Molecular Simulations through Multi-Level Parallelism from Laptops to Supercomputers</article-title>. <source>SoftwareX</source> <year>2015</year>, <fpage>1</fpage>–<lpage>2</lpage>, <fpage>19</fpage>–<lpage>25</lpage>.</mixed-citation></ref>
<ref id="c82"><label>82</label><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>de Jong</surname>, <given-names>D. H.</given-names></string-name>; <string-name><surname>Baoukina</surname>, <given-names>S.</given-names></string-name>; <string-name><surname>Ingólfsson</surname>, <given-names>H. I.</given-names></string-name>; <string-name><surname>Marrink</surname>, <given-names>S. J.</given-names></string-name></person-group> <article-title>Martini Straight: Boosting Performance Using a Shorter Cutoff and GPUs</article-title>. <source>Comput Phys Commun</source> <year>2016</year>, <volume>199</volume>, <fpage>1</fpage>–<lpage>7</lpage>.</mixed-citation></ref>
</ref-list>
<sec id="s14">
<title>Supplementary Information</title>
<sec id="s15">
<title>1 – Input Parsers &amp; Output Writers</title>
<table-wrap id="tabS1" orientation="portrait" position="float">
<label>Table 1</label>
<caption><p>Data Parsers object returned as well as format definition and extension</p></caption>
<alternatives>
<graphic xlink:href="2212.01191v2_tblS1.tif" mimetype="image" mime-subtype="tiff"/>
<table frame="hsides" rules="all">
<thead>
<tr>
<th align="left">Extension</th>
<th align="left">Data Class</th>
<th align="left">Parser Name</th>
<th align="left">Input Format</th>
</tr>
</thead>
<tbody>
<tr>
<td align="left">.ff</td>
<td align="left">Links<break/><break/>Block<break/><break/>Modifications</td>
<td align="left">read_ff</td>
<td align="left">in house force-field format</td>
</tr>
<tr>
<td align="left">.itp</td>
<td align="left">Block</td>
<td align="left">read_itp</td>
<td align="left">GROMACS topology file; all [molecule] directive content</td>
</tr>
<tr>
<td align="left">.map</td>
<td align="left">Mapping</td>
<td align="left">read_mapping</td>
<td align="left">mapping file as defined using backwards style</td>
</tr>
<tr>
<td align="left">.pdb</td>
<td align="left">System</td>
<td align="left">read_pdb</td>
<td align="left">canonical PDB format</td>
</tr>
<tr>
<td align="left">.gro</td>
<td align="left">Molecule</td>
<td align="left">read_gro</td>
<td align="left">Gromacs .gro filg</td>
</tr>
</tbody>
</table>
</alternatives>
</table-wrap>
<table-wrap id="tabS2" orientation="portrait" position="float">
<label>Table 2</label>
<caption><p>Data Writers and the object returned as well as format definition and extension</p></caption>
<alternatives>
<graphic xlink:href="2212.01191v2_tblS2.tif" mimetype="image" mime-subtype="tiff"/>
<table frame="hsides" rules="all">
<thead>
<tr>
<th align="left">Input Format</th>
<th align="left">Data Class</th>
<th align="left">Parser Name</th>
<th align="left">Output Format</th>
</tr>
</thead>
<tbody>
<tr>
<td align="left">.gro</td>
<td align="left">System</td>
<td align="left">write_gro</td>
<td align="left">G96 gro file</td>
</tr>
<tr>
<td align="left">.pdb</td>
<td align="left">System</td>
<td align="left">write_pdb</td>
<td align="left">PDB file</td>
</tr>
<tr>
<td align="left">.top</td>
<td align="left">System</td>
<td align="left">write_top</td>
<td align="left">Pseudo topology file</td>
</tr>
<tr>
<td align="left">.itp</td>
<td align="left">System</td>
<td align="left">write_itp</td>
<td align="left">GROMACS topology file; all [molecule] directive content</td>
</tr>
</tbody>
</table>
</alternatives>
</table-wrap>
</sec>
<sec id="s16">
<title>2 – Related Tools</title>
<table-wrap id="tabS3" orientation="portrait" position="float">
<label>Table 1:</label>
<caption><p>Limited overview of selected competing tools capable of generating MD topologies. “Force Field” lists the force fields for which this tool can generate topologies without changing the source code. “Type of system” describes the type of system this tool can generate topologies for. “External data files” means whether the force field parameters used are included in separate data files, making it possible to easily change them. “Notes” lists additional remarks and comments, “builds coordinates” means it is capable of constructing coordinates for complete systems, rather than only for <italic>e.g.</italic> missing sidechains.</p></caption>
<alternatives>
<graphic xlink:href="2212.01191v2_tblS3.tif" mimetype="image" mime-subtype="tiff"/>
<table frame="hsides" rules="all">
<thead>
<tr>
<th align="left">Name</th>
<th align="left">Force field</th>
<th align="left">Type of system</th>
<th align="left">External data files</th>
<th align="left">Notes</th>
</tr>
</thead>
<tbody>
<tr>
<td align="left">pdb2gmx<sup><xref ref-type="bibr" rid="cs20">20</xref>,<xref ref-type="bibr" rid="cs21">21</xref></sup></td>
<td align="left">Any AA/UA</td>
<td align="left">Linear polymers</td>
<td align="left">Yes</td>
<td align="left"/>
</tr>
<tr>
<td align="left">LEaP<sup><xref ref-type="bibr" rid="cs22">22</xref></sup></td>
<td align="left">Any AA/UA</td>
<td align="left">Linear polymers</td>
<td align="left">Yes</td>
<td align="left"/>
</tr>
<tr>
<td align="left">CHARMM<sup><xref ref-type="bibr" rid="cs23">23</xref></sup></td>
<td align="left">Any AA/UA</td>
<td align="left">Linear polymers</td>
<td align="left">Yes</td>
<td align="left"/>
</tr>
<tr>
<td align="left">psfgen<sup><xref ref-type="bibr" rid="cs24">24</xref></sup></td>
<td align="left">Any AA/UA</td>
<td align="left">Linear polymers</td>
<td align="left">Yes</td>
<td align="left"/>
</tr>
<tr>
<td align="left">Martinize 1<sup><xref ref-type="bibr" rid="cs25">25</xref>,<xref ref-type="bibr" rid="cs26">26</xref></sup></td>
<td align="left">Martini</td>
<td align="left">Proteins, DNA</td>
<td align="left">No</td>
<td align="left"/>
</tr>
<tr>
<td align="left">Sirah Tools<sup><xref ref-type="bibr" rid="cs27">27</xref></sup></td>
<td align="left">Any CG</td>
<td align="left">Linear polymers</td>
<td align="left">Yes</td>
<td align="left">Performs mapping only</td>
</tr>
<tr>
<td align="left">DoGlycans<sup><xref ref-type="bibr" rid="cs28">28</xref></sup></td>
<td align="left">AMBER, OPLS</td>
<td align="left">Sugars</td>
<td align="left">Yes</td>
<td align="left">Builds coordinates</td>
</tr>
<tr>
<td align="left">HOOBAS<sup><xref ref-type="bibr" rid="cs29">29</xref></sup></td>
<td align="left">Multiple</td>
<td align="left">Multiple</td>
<td align="left">Yes</td>
<td align="left">No user interface, builds coordinates</td>
</tr>
<tr>
<td align="left">CHARMM-GUI<sup><xref ref-type="bibr" rid="cs30">30</xref>–<xref ref-type="bibr" rid="cs32">32</xref></sup></td>
<td align="left">Multiple</td>
<td align="left">Multiple</td>
<td align="left">No</td>
<td align="left">Web server, builds coordinates</td>
</tr>
<tr>
<td align="left">VerMoUTH/Marti nize2</td>
<td align="left">Multiple</td>
<td align="left">Multiple</td>
<td align="left">Yes</td>
<td align="left">This work</td>
</tr>
<tr>
<td align="left">ATB33,34</td>
<td align="left">GROMOS54a7<break/>GROMOS54a8</td>
<td align="left">Small molecules</td>
<td align="left">N/A</td>
<td align="left">Automatic <italic>de novo</italic> parametrization</td>
</tr>
<tr>
<td align="left">LigParGen<sup><xref ref-type="bibr" rid="cs35">35</xref>–<xref ref-type="bibr" rid="cs37">37</xref></sup></td>
<td align="left">OPLS-AA</td>
<td align="left">Small molecules</td>
<td align="left">N/A</td>
<td align="left">Automatic <italic>de novo</italic> parametrization</td>
</tr>
<tr>
<td align="left">CGenFF<sup><xref ref-type="bibr" rid="cs38">38</xref></sup></td>
<td align="left">CHARMM<break/>General Force Field</td>
<td align="left">Small molecules</td>
<td align="left">N/A</td>
<td align="left">Automatic <italic>de novo</italic> parametrization</td>
</tr>
</tbody>
</table>
</alternatives>
</table-wrap>
</sec>
<sec id="s17">
<title>3 – Martinize2 Pipeline</title>
<p>In this section, we describe the pipeline underlying the martinize2 program in more depth highlighting the algorithms used.</p>
<p><bold>Step 1 Parse input.</bold> Reading different input file formats is trivial, and all that is needed is to select the correct parser based on the file name provided. At time of writing parsers are available for <italic>pdb</italic> and <italic>gro</italic> files (coordinate files in Gromacs format). The input is commonly a list of atoms with associated properties such as atom names, coordinates and MRU (monomeric repeat unit) names. Sometimes the input also provides information about bonds in the system, such as PDB ‘CONECT’ records. These will be used if available. Otherwise, bonds will be added between the atoms based on simple geometric criteria. At the very least we require MRU names and numbers, elements, and either coordinates or bonds. In the end, the input has been parsed and transformed into an undirected graph with atoms as nodes and bonds as edges.</p>
<p><bold>Step 2 Identify and Repair.</bold> To identify the parsed atoms the current generation of tools takes the combination of atom name and MRU name as leading, even though this is the most variable between models. For instance, the atom names assigned in the experimental data often do not match the atom names expected by the force field causing existing tools to either throw an error, or even produce incorrect output. We identify atoms based on their MRU names, connectivity, and their elements by overlaying the MRU with its canonical form (<xref ref-type="supplementary-material" rid="data1">Figure 1a</xref>).</p>
<fig id="data1" position="float" fig-type="figure">
<label>Figure 1:</label>
<caption><title>Illustration of atom recognition, mapping, and linking in topology generation.</title><p>a) In order to identify all atoms in the input molecule (black and orange) every MRU in the molecule is overlaid with its canonical reference (blue and green). Atoms are recognized when they overlap with atoms in the reference (green). Atoms not present in the molecule are also identified (blue), and will be added later. Finally, atoms in the molecule not described by the canonical references are also labelled (orange) so that they may be identified later. b) Identifying the terminal atoms that are not part of the canonical MRUs. The modification templates are depicted in blue, and the atoms they match in orange. The cysteine does not participate since it does not carry any unexpected atoms, and is depicted in grey for clarity. c) Mappings (blue, red and green) describe a molecular fragment at two different resolutions and a correspondence between their particles. The correspondence is depicted approximately here. The mappings are applied to the molecule (black). d) Example of applying a Link. The link depicted (dark blue) adds an angle potential over CG backbone beads.</p></caption>
<graphic xlink:href="2212.01191-data1.jpg" mimetype="image" mime-subtype="jpeg"/>
</fig>
<p>Doing so allows us to identify deviations from the canonical structure such as PTMs, different protonation states and capping groups. In addition, this method reveals which atoms are missing in the input data, allowing us to reconstruct them. We rely on graph theory to perform the overlaying of input and reference structures (see the dedicated section on graph algorithms below).</p>
<p>In order to do this, every MRU in the input molecule is overlaid with its canonical reference structure with the constraint that the elements of corresponding atoms must be the same. To get the relevant canonical structure it is assumed the MRU names in the input molecule are correct and that for each MRU a corresponding block can be found in the library. If the corresponding block cannot be found an error is raised and execution is terminated. Since the library files are designed to be human readable and writable, users can add any data to the library they need.</p>
<p>In the best case finding the overlay is an induced subgraph isomorphism problem where M<sub>r</sub> ⫇ R<sub>r</sub> with M<sub>r</sub> an MRU of the input molecule and R<sub>r</sub> the corresponding canonical form. However, this is treated as a largest common induced subgraph problem (see below) since M<sub>r</sub> can contain “unexpected” atoms not described by R<sub>r</sub> such as PTMs or capping groups. If there are multiple solutions, the solution where most atom names correspond is taken. Either way, a correspondence between the input molecule and its canonical form is obtained. This correspondence is used to a) identify and add missing atoms, b) correct the atom names for the atoms that are there, and c) find which atoms are not described by the canonical MRUs. It should be noted that in this paradigm PTMs, non-standard protonation states, termini, and capping groups are all considered unexpected atoms and treated the same way.</p>
<p>Next, we try to identify all these unexpected atoms by overlaying them with modification template graphs from the library (<xref ref-type="supplementary-material" rid="data1">Figure 1b</xref>). This is a graph covering problem where we aim to find a minimal combination of templates that covers all unexpected atoms (see below). This does mean that unless there is clear additional metadata there can be no missing atoms in the found modifications since it is not known what they should look like beforehand. The found correspondences are then used to correct the atom names. The MRUs these atoms are part of are labelled so that the correct mappings and interactions can be applied later on. In the end, the input molecule is complete, has correct atom names, and MRUs that deviate from the reference are labelled. At this point all information contained in the atom definitions in the input file and their connectivity has been used. Any atoms that could not be recognized will be removed. A warning is issued to the user if this is the case.</p>
<p><bold>Step 3 Resolution Transformation.</bold> The resolution transformation step maps the input molecule to the desired output resolution (<xref ref-type="supplementary-material" rid="data1">Figure 1c</xref>). We must assume that these mappings are many-to-many correspondences, and that in a mapping from <italic>e.g.</italic> AA to CG a single AA atom can be mapped to multiple CG beads. Unfortunately, this generalization prevents the use of methods developed in graph theory for this problem so far<sup><xref ref-type="bibr" rid="cs1">1</xref>,<xref ref-type="bibr" rid="cs2">2</xref></sup>. Instead, we perform the transformation using the same type of overlay we used to identify atoms in the input molecule. This requires a ‘Mapping’ object, which consists of two molecular fragments at different resolutions, and a correspondence between their particles. These Mapping objects are taken from a library. Including this resolution transformation step in the pipeline makes VerMoUTH resolution agnostic, capable of also generating CG topologies.</p>
<p>Mappings from the input force field to the required output force field are taken from the library. However, since these mappings can cross MRU boundaries this is a graph covering problem. This is a variant of the exact cover problem and therefore an NP-hard problem<sup><xref ref-type="bibr" rid="cs3">3</xref>,<xref ref-type="bibr" rid="cs4">4</xref></sup>. Because in this case it applies to the full polymer, this is intractable. We sidestep this problem by approaching it as if it were an induced subgraph isomorphism problem where all possible places a mapping fits on the input graph are found, respecting the constraints that atom and MRU names must match. In addition, the mapping may only cross MRU boundaries where it is explicitly allowed by the mapping. If mappings overlap an error is raised. For every mapping that is applied interactions from the corresponding Block are added to the output graph.</p>
<p>Once done, the found modifications can be mapped. First, the modifications are grouped together by connectivity with their MRUs. This is done because with multiple modifications for a single MRU their interactions may influence each other, <italic>e.g.</italic> (partial) charges in zwitterionic amino acids. Based on these groups the modification mappings that apply to most of those modifications at once are found by solving the exact set covering problem. The found modifications are then applied by finding the corresponding subgraph isomorphisms. Warnings are issued if multiple modification mappings affect the same particle or interaction.</p>
<p><bold>Step 4 Create Topology.</bold> Left then is generating the topology. Generating the inter-MRU interactions by applying the appropriate Links is a series of induced subgraph isomorphism problems where all possible ways a link fits on the produced output graph are found. A link can be applied multiple times, and can overlap with other links. Whenever a link is applied the interactions it defines are added to the output graph. In addition to adding interactions, links can also change interactions already set by blocks. For example, the particle type or partial charge may depend on neighboring MRUs. Because of this, links are non-commutative and the order in which they are applied matters. To resolve this, we solve the subgraph isomorphism problems in the order the links are defined in the library (<xref ref-type="supplementary-material" rid="data1">Figure 1d</xref>). At this point the output graph represents a molecule at the desired resolution with most interactions defined and coordinates can be generated. Usually these can be trivially taken from the input coordinates. However, in case atoms were missing in the input this might not be possible. In those cases, we generate coordinates based on the coordinates of the neighboring atoms.</p>
<p><bold>Step 5 Post-Processing.</bold> Post-processing can consist of any number of steps, and can perform all sorts of force field specific dress-up. For example, it can create an elastic network<sup><xref ref-type="bibr" rid="cs5">5</xref></sup>, or generate the parameters required for Gō interactions<sup><xref ref-type="bibr" rid="cs6">6</xref>,<xref ref-type="bibr" rid="cs7">7</xref></sup>. These steps have access to the complete molecule with coordinates and canonical atom names, even if they were missing in the input, and they have access to the full topology with all associated interactions. Separating these steps out into separate Processors helps to keep them independent of each other, and allowing for any type of post-processing helps in making the program force field agnostic. There can be any number of this kind of processors depending on what was requested by the user.</p>
<p><bold>Step 6 Write Output.</bold> Lastly, the output topology and coordinate files have to be written. Since this is just a matter of file formatting, this is trivial. Separating it out from the rest of the pipeline makes the program agnostic of the MD engine used. At the time of writing VerMoUTH is capable of writing Gromacs compatible topologies.</p>
</sec>
<sec id="s18">
<title>4 – Graph algorithms</title>
<p>Steps 2-4, which form the core of VerMoUTH rely heavily on graph algorithms, because molecules and polymers can be very naturally described as undirected graphs<sup><xref ref-type="bibr" rid="cs8">8</xref>–<xref ref-type="bibr" rid="cs11">11</xref></sup>. In our case nodes correspond to atoms, and edges to bonds between atoms. In addition, polymers can also be described as a coarser graph, where nodes correspond to MRUs and edges to bonds between MRUs. Graph theory is a subfield of mathematics that deals with graphs, making it a particularly powerful tool in the context of this work. We primarily use methods from graph theory to identify atoms. First when curating the provided input data (Step 2), but also when performing the resolution transformation (Step 3) and when applying links (Step 4). Our primary tools for this are algorithms for finding induced subgraph isomorphisms<sup><xref ref-type="bibr" rid="cs12">12</xref>–<xref ref-type="bibr" rid="cs15">15</xref></sup>, and for finding largest common induced subgraphs<sup><xref ref-type="bibr" rid="cs16">16</xref>,<xref ref-type="bibr" rid="cs17">17</xref></sup>.</p>
<p><bold>Largest Common Induced Subgraph.</bold> When repairing the provided molecule correspondences between the MRUs in the input molecule (M<sub>r</sub>) and their canonical forms (R<sub>r</sub>) are needed. In the case where M<sub>r</sub> is not a subgraph of R<sub>r</sub> and contains atoms that are not described by R<sub>r</sub>, this is a largest common induced subgraph (LCIS) problem. The solution to this problem is the largest graph G that is an induced subgraph of both M<sub>r</sub> and R<sub>r</sub>, and the correspondences between the nodes in G and M<sub>r</sub>; and between the nodes in G and R<sub>r</sub>. This problem belongs to the class of NP hard problems<sup><xref ref-type="bibr" rid="cs3">3</xref>,<xref ref-type="bibr" rid="cs4">4</xref></sup>. A possible solution to the LCIS problem is to approach it as a repeating subgraph isomorphism problem where initially G = M<sub>r</sub>, and nodes are removed from G in a breadth-first manner until an induced subgraph isomorphism G ⫇ R<sub>r</sub> is found<sup><xref ref-type="bibr" rid="cs16">16</xref></sup>. Once a subgraph isomorphism between G and R<sub>r</sub> is found the subgraph is not shrunk further since that would always result in a smaller common subgraph. We have based our implementation on the ISMAGS subgraph isomorphism algorithm<sup><xref ref-type="bibr" rid="cs13">13</xref>,<xref ref-type="bibr" rid="cs18">18</xref></sup> since, generally, molecules can be described as very sparse and (locally) symmetric graphs. The ISMAGS algorithm exploits these properties and produces only symmetrically distinct answers which reduces the runtime significantly compared to both other subgraph isomorphism algorithms, such as VF2<sup><xref ref-type="bibr" rid="cs13">13</xref></sup> and other LCIS algorithms, such as Koch’s<sup><xref ref-type="bibr" rid="cs17">17</xref></sup>. Since our implementation of the ISMAGS is more generally applicable than just in the context of VerMoUTH we have collaborated with the authors of the popular Python graph library NetworkX<sup><xref ref-type="bibr" rid="cs19">19</xref></sup> to include our implementation.</p>
<p>We extended our implementation of the ISMAGS algorithm to also solve the LCIS problem in order to further exploit the symmetry breaking constraints used in the subgraph isomorphism problem. The symmetry breaking constraints are used when finding subgraph isomorphisms (see <sup><xref ref-type="bibr" rid="cs13">13</xref></sup>) and when shrinking the subgraph: when nodes are equivalent the node with the highest index is removed from G preferentially. In addition, to ensure common subgraphs are preferentially found using nodes with a lower index (analogous to the ISMAGS algorithm), the candidate subgraphs are sorted by their node indices. In this way we obtain good performance because in our case it is generally true that: a) there are only a few nodes not part of the reference, and b) those nodes have the highest node index. Because of this we can terminate the algorithm after the first common subgraph is found.</p>
<p>To demonstrate how this works we consider an example where we will try to find all LCISs between graph X and subgraph Y. The example is illustrated in <xref ref-type="supplementary-material" rid="data2">Figure 2</xref>. Note that at this point the distinction between “graph” and “subgraph” is arbitrary, except for symmetry detection and performance. Nodes are represented by a letter that reflects their underlying attributes (e.g. atom type). We will consider nodes compatible if they have the same letter, and we distinguish nodes with the same letter by subscripts. First all symmetries in subgraph Y are found. This reveals A<sub>1</sub> to be equivalent to A<sub>2</sub>. In the first iteration we try to find a subgraph isomorphism between X and Y (Iteration 1). Since none can be found, subgraph Y is shrunk. This yields the subgraphs in box “Iteration 2”. Since the subgraph made from the nodes {A<sub>1</sub>, B, E, F} is symmetry equivalent to the subgraph made from nodes {A<sub>2</sub>, B, E, F}, only the first is taken into consideration. Because no subgraph isomorphism can be found between X and any of these four subgraphs for this iteration, they are shrunk further, resulting in seven subgraphs with unique symmetries consisting of three nodes each. These are depicted in box “Iteration 3”. Of these seven subgraphs, at least one is isomorphic to a subgraph of X ({A<sub>1</sub>, A<sub>2</sub>, B}), therefore all subgraph isomorphisms between X and these seven subgraphs are exported in order and the algorithm is terminated.</p>
<fig id="data2" position="float" fig-type="figure">
<label>Figure 2:</label>
<caption><title>Example of finding all LCISs between graphs X and Y.</title><p>Greyed out nodes are not used (they are excluded from the comparison by the shrinking step), but are depicted for clarity. Since nodes A<sub>1</sub> and A<sub>2</sub> in Y are symmetry equivalent not all subgraphs are taken into account. Those that are excluded due to symmetry reasons are depicted in the box Symmetry pruned. Iteration 1: we try to find a subgraph isomorphism between X and Y. None is found. Iteration 2: Y is shrunk to produce the graphs depicted. We try to find subgraph isomorphisms between these and X. None are found. Iteration 3: all graphs from iteration 2 are shrunk further. Since a subgraph isomorphism can be found between at least one of these ({A<sub>1</sub>, A<sub>2</sub>, B}) and X, the algorithm terminates afterwards. To highlight how often the algorithm discovers that {A<sub>1</sub>, B} is subgraph isomorphic to X, it is shown in bold.</p></caption>
<graphic xlink:href="2212.01191-data2.jpg" mimetype="image" mime-subtype="jpeg"/>
</fig>
<p>The algorithm presented is not without faults however: symmetry of X is not taken into consideration, which could reduce the search space dramatically depending on the graphs in question. In addition, some operations are performed multiple times. As an example, many of the subgraphs in <xref ref-type="supplementary-material" rid="data2">Figure 2</xref> contain the motif {A<sub>1</sub>, B} (in bold). This results in the subgraph isomorphism algorithm reaching the conclusion that {A<sub>1</sub>, B} is isomorphic to {A<sub>1</sub>, B} and {A<sub>2</sub>, B} multiple times. This can be avoided by starting the algorithm using small subgraphs, and growing them as the algorithm progresses. The results of the smaller isomorphism problems can be used to restrict the search space of the larger ones. Since in most of our cases M<sub>r</sub> contains only a few nodes that are not isomorphic to nodes in the R<sub>r</sub> we do not expect a (large) performance gain. It may be worthwhile to implement an adaptive algorithm that switches strategy after a few iterations of either strategy however.</p>
<p><bold>Graph Covering.</bold> To identify unexpected atoms, we need to cover all those atoms with known fragments describing <italic>e.g.</italic> PTMs. We aim to find the solution where all unexpected atoms are covered exactly once, preferentially using fragments with a lower index. In VerMoUTH we sort the fragments by size so that larger fragments are used preferentially. This is a variant of the exact cover problem, making it NP hard<sup><xref ref-type="bibr" rid="cs3">3</xref>,<xref ref-type="bibr" rid="cs4">4</xref></sup>. We solve this problem by a recursive backtracking algorithm: in order, we try to fit the fragments on the unexpected atoms until all are covered. If applying a fragment result in atoms that can no longer be covered, the solution is rejected, and the next fit is tried.</p>
</sec>
<sec id="s19">
<title>4 – AlphaFold Benchmark</title>
<p>The following 7 structures from the AlphaFold benchmarks produced an error, which lead martinzie2 to abort the input file generation:</p>
<p>AF-O80995-F1-model_v3.pdb</p>
<p>AF-Q58295-F1-model_v3.pdb</p>
<p>AF-B1GZ76-F1-model_v3.pdb</p>
<p>AF-A1ZA47-F1-model_v3.pdb</p>
<p>AF-J9VQ06-F1-model_v3.pdb</p>
<p>AF-F1QWK4-F1-model_v3.pdb</p>
<p>AF-P64653-F1-model_v3.pdb</p>
<p>A list of all surveyed models is available at <ext-link ext-link-type="uri" xlink:href="https://github.com/marrink-lab/martinize-examples/blob/master/AlphaFoldBenchmark/surveyed_models.txt">https://github.com/marrink-lab/martinize-examples/blob/master/AlphaFoldBenchmark/surveyed_models.txt</ext-link>.</p>
</sec>
<ref-list>
<title>References</title>
<ref id="cs1"><label>1.</label><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Webb</surname>, <given-names>M. A.</given-names></string-name>, <string-name><surname>Delannoy</surname>, <given-names>J.-Y.</given-names></string-name> &amp; <string-name><surname>de Pablo</surname>, <given-names>J. J.</given-names></string-name></person-group> <article-title>Graph-Based Approach to Systematic Molecular Coarse-Graining</article-title>. <source>Journal of Chemical Theory and Computation</source> <fpage>acs.jctc.8b00920</fpage> (<year>2018</year>) doi:<pub-id pub-id-type="doi">10.1021/acs.jctc.8b00920</pub-id>.</mixed-citation></ref>
<ref id="cs2"><label>2.</label><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Chakraborty</surname>, <given-names>M.</given-names></string-name>, <string-name><surname>Xu</surname>, <given-names>C.</given-names></string-name> &amp; <string-name><surname>White</surname>, <given-names>A. D.</given-names></string-name></person-group> <article-title>Encoding and selecting coarse-grain mapping operators with hierarchical graphs</article-title>. <source>The Journal of Chemical Physics</source> <volume>149</volume>, <fpage>134106</fpage> (<year>2018</year>).</mixed-citation></ref>
<ref id="cs3"><label>3.</label><mixed-citation publication-type="book"><person-group person-group-type="author"><string-name><surname>Cook</surname>, <given-names>S. A.</given-names></string-name></person-group> <chapter-title>The complexity of theorem-proving procedures</chapter-title>. in <source>Proceedings of the third annual ACM symposium on Theory of computing - STOC ’71</source> <fpage>151</fpage>–<lpage>158</lpage> (<publisher-name>ACM Press</publisher-name>, <year>1971</year>). doi:<pub-id pub-id-type="doi">10.1145/800157.805047</pub-id>.</mixed-citation></ref>
<ref id="cs4"><label>4.</label><mixed-citation publication-type="book"><person-group person-group-type="author"><string-name><surname>Karp</surname>, <given-names>R. M.</given-names></string-name></person-group> <chapter-title>Reducibility among Combinatorial Problems</chapter-title>. in <source>Complexity of Computer Computations</source> <fpage>85</fpage>–<lpage>103</lpage> (<publisher-name>Springer</publisher-name> <publisher-loc>US</publisher-loc>, <year>1972</year>). doi:<pub-id pub-id-type="doi">10.1007/978-1-4684-2001-2_9</pub-id>.</mixed-citation></ref>
<ref id="cs5"><label>5.</label><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Periole</surname>, <given-names>X.</given-names></string-name>, <string-name><surname>Cavalli</surname>, <given-names>M.</given-names></string-name>, <string-name><surname>Marrink</surname>, <given-names>S.-J.</given-names></string-name> &amp; <string-name><surname>Ceruso</surname>, <given-names>M. A.</given-names></string-name></person-group> <article-title>Combining an Elastic Network With a Coarse-Grained Molecular Force Field: Structure, Dynamics, and Intermolecular Recognition</article-title>. <source>Journal of Chemical Theory and Computation</source> <volume>5</volume>, <fpage>2531</fpage>–<lpage>2543</lpage> (<year>2009</year>).</mixed-citation></ref>
<ref id="cs6"><label>6.</label><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Poma</surname>, <given-names>A. B.</given-names></string-name>, <string-name><surname>Cieplak</surname>, <given-names>M.</given-names></string-name> &amp; <string-name><surname>Theodorakis</surname>, <given-names>P. E.</given-names></string-name></person-group> <article-title>Combining the MARTINI and Structure-Based Coarse-Grained Approaches for the Molecular Dynamics Studies of Conformational Transitions in Proteins</article-title>. <source>Journal of Chemical Theory and Computation</source> <volume>13</volume>, <fpage>1366</fpage>–<lpage>1374</lpage> (<year>2017</year>).</mixed-citation></ref>
<ref id="cs7"><label>7.</label><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Taketomi</surname>, <given-names>H.</given-names></string-name>, <string-name><surname>Ueda</surname>, <given-names>Y.</given-names></string-name> &amp; <string-name><surname>Gō</surname>, <given-names>N.</given-names></string-name></person-group> <article-title>Studies on protein folding, unfolding and fluctuations by computer simulation. I. The effect of specific amino acid sequence represented by specific inter-unit interactions</article-title>. <source>International journal of peptide and protein research</source> <volume>7</volume>, <fpage>445</fpage>–<lpage>459</lpage> (<year>1975</year>).</mixed-citation></ref>
<ref id="cs8"><label>8.</label><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Chung</surname>, <given-names>F.</given-names></string-name></person-group> <article-title>Graph Theory in the Information Age</article-title>. <source>Notices of the AMS</source> <volume>57</volume>, <fpage>726</fpage>–<lpage>732</lpage> (<year>2010</year>).</mixed-citation></ref>
<ref id="cs9"><label>9.</label><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Engler</surname>, <given-names>M. S.</given-names></string-name> <etal>et al.</etal></person-group> <article-title>Enumerating common molecular substructures</article-title>. <source>PeerJ Prepr</source> <fpage>1</fpage>–<lpage>10</lpage> (<year>2017</year>) doi:<pub-id pub-id-type="doi">10.7287/peerj.preprints.3250v1</pub-id>.</mixed-citation></ref>
<ref id="cs10"><label>10.</label><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Engler</surname>, <given-names>M. S.</given-names></string-name>, <string-name><surname>Caron</surname>, <given-names>B.</given-names></string-name> &amp; <string-name><surname>Mark</surname>, <given-names>A. E.</given-names></string-name></person-group> <article-title>Multiple-Choice Knapsack for Assigning Partial Atomic Charges in Drug-Like Molecules</article-title>. <fpage>1</fpage>–<lpage>13</lpage> doi:<pub-id pub-id-type="doi">10.4230/LIPIcs.WABI.2018.16</pub-id>.</mixed-citation></ref>
<ref id="cs11"><label>11.</label><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Cao</surname>, <given-names>Y.</given-names></string-name>, <string-name><surname>Jiang</surname>, <given-names>T.</given-names></string-name> &amp; <string-name><surname>Girke</surname>, <given-names>T.</given-names></string-name></person-group> <article-title>A maximum common substructure-based algorithm for searching and predicting drug-like compounds</article-title>. <source>Bioinformatics</source> <volume>24</volume>, <fpage>i366</fpage>–<lpage>i374</lpage> (<year>2008</year>).</mixed-citation></ref>
<ref id="cs12"><label>12.</label><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Bonnici</surname>, <given-names>V.</given-names></string-name>, <string-name><surname>Giugno</surname>, <given-names>R.</given-names></string-name>, <string-name><surname>Pulvirenti</surname>, <given-names>A.</given-names></string-name>, <string-name><surname>Shasha</surname>, <given-names>D.</given-names></string-name> &amp; <string-name><surname>Ferro</surname>, <given-names>A.</given-names></string-name></person-group> <article-title>A subgraph isomorphism algorithm and its application to biochemical data</article-title>. <source>BMC Bioinformatics</source> <volume>14</volume>, <fpage>S13</fpage> (<year>2013</year>).</mixed-citation></ref>
<ref id="cs13"><label>13.</label><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Houbraken</surname>, <given-names>M.</given-names></string-name> <etal>et al.</etal></person-group> <article-title>The Index-Based Subgraph Matching Algorithm with General Symmetries (ISMAGS): Exploiting Symmetry for Faster Subgraph Enumeration</article-title>. <source>PLoS ONE</source> <volume>9</volume>, <fpage>e97896</fpage> (<year>2014</year>).</mixed-citation></ref>
<ref id="cs14"><label>14.</label><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Cordella</surname>, <given-names>L. P.</given-names></string-name>, <string-name><surname>Foggia</surname>, <given-names>P.</given-names></string-name>, <string-name><surname>Sansone</surname>, <given-names>C.</given-names></string-name> &amp; <string-name><surname>Vento</surname>, <given-names>M.</given-names></string-name></person-group> <article-title>An improved algorithm for matching large graphs</article-title>. <source>Proceedings of the 3rd IAPR Workshop on Graph-Based Representations in Pattern Recognition</source> <volume>219</volume>, <fpage>149</fpage>–<lpage>159</lpage> (<year>2001</year>).</mixed-citation></ref>
<ref id="cs15"><label>15.</label><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Cordella</surname>, <given-names>L. P.</given-names></string-name>, <string-name><surname>Foggia</surname>, <given-names>P.</given-names></string-name>, <string-name><surname>Sansone</surname>, <given-names>C.</given-names></string-name> &amp; <string-name><surname>Vento</surname>, <given-names>M.</given-names></string-name></person-group> <article-title>A (sub)graph isomorphism algorithm for matching large graphs</article-title>. <source>IEEE Transactions on Pattern Analysis and Machine Intelligence</source> <volume>26</volume>, <fpage>1367</fpage>–<lpage>1372</lpage> (<year>2004</year>).</mixed-citation></ref>
<ref id="cs16"><label>16.</label><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Krissinel</surname>, <given-names>E. B.</given-names></string-name> &amp; <string-name><surname>Henrick</surname>, <given-names>K.</given-names></string-name></person-group> <article-title>Common subgraph isomorphism detection by backtracking search</article-title>. <source>Software: Practice and Experience</source> <volume>34</volume>, <fpage>591</fpage>–<lpage>607</lpage> (<year>2004</year>).</mixed-citation></ref>
<ref id="cs17"><label>17.</label><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Koch</surname>, <given-names>I.</given-names></string-name></person-group> <article-title>Enumerating all connected maximal common subgraphs in two graphs</article-title>. <source>Theoretical Computer Science</source> <volume>250</volume>, <fpage>1</fpage>–<lpage>30</lpage> (<year>2001</year>).</mixed-citation></ref>
<ref id="cs18"><label>18.</label><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Demeyer</surname>, <given-names>S.</given-names></string-name> <etal>et al.</etal></person-group> <article-title>The Index-Based Subgraph Matching Algorithm (ISMA): Fast Subgraph Enumeration in Large Networks Using Optimized Search Trees</article-title>. <source>PLoS ONE</source> <volume>8</volume>, <fpage>e61183</fpage> (<year>2013</year>).</mixed-citation></ref>
<ref id="cs19"><label>19.</label><mixed-citation publication-type="confproc"><person-group person-group-type="author"><string-name><surname>Hagberg</surname>, <given-names>A.</given-names></string-name>, <string-name><surname>Swart</surname>, <given-names>P.</given-names></string-name> &amp; <string-name><surname>S Chult</surname>, <given-names>D.</given-names></string-name></person-group> <article-title>Exploring network structure, dynamics, and function using networkx</article-title>. in <conf-name><italic>Proceedings of the 7th Python in Science Conference (SciPy2008)</italic></conf-name> (eds. <person-group person-group-type="editor"><string-name><surname>Varoquaux</surname>, <given-names>G.</given-names></string-name>, <string-name><surname>Vaught</surname>, <given-names>T.</given-names></string-name> &amp; <string-name><surname>Millman</surname>, <given-names>J.</given-names></string-name></person-group>) <fpage>11</fpage>–<lpage>15</lpage> (<year>2008</year>).</mixed-citation></ref>
<ref id="cs20"><label>20.</label><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Abraham</surname>, <given-names>M. J.</given-names></string-name> <etal>et al.</etal></person-group> <article-title>GROMACS: High performance molecular simulations through multi-level parallelism from laptops to supercomputers</article-title>. <source>SoftwareX</source> <fpage>1</fpage>–<lpage>2</lpage>, <fpage>19</fpage>–<lpage>25</lpage> (<year>2015</year>).</mixed-citation></ref>
<ref id="cs21"><label>21.</label><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Páll</surname>, <given-names>S.</given-names></string-name>, <string-name><surname>Abraham</surname>, <given-names>M. J.</given-names></string-name>, <string-name><surname>Kutzner</surname>, <given-names>C.</given-names></string-name>, <string-name><surname>Hess</surname>, <given-names>B.</given-names></string-name> &amp; <string-name><surname>Lindahl</surname>, <given-names>E.</given-names></string-name></person-group> <article-title>Tackling Exascale Software Challenges in Molecular Dynamics Simulations with GROMACS</article-title>. in <fpage>3</fpage>–<lpage>27</lpage> (<year>2015</year>). doi:<pub-id pub-id-type="doi">10.1007/978-3-319-15976-8_1</pub-id>.</mixed-citation></ref>
<ref id="cs22"><label>22.</label><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Case</surname>, <given-names>D. A.</given-names></string-name> <etal>et al.</etal></person-group> <article-title>The Amber biomolecular simulation programs</article-title>. <source>J Comput Chem</source> <volume>26</volume>, <fpage>1668</fpage>–<lpage>1688</lpage> (<year>2005</year>).</mixed-citation></ref>
<ref id="cs23"><label>23.</label><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Brooks</surname>, <given-names>B. R.</given-names></string-name> <etal>et al.</etal></person-group> <article-title>CHARMM: A program for macromolecular energy, minimization, and dynamics calculations</article-title>. <source>Journal of Computational Chemistry</source> <volume>4</volume>, <fpage>187</fpage>–<lpage>217</lpage> (<year>1983</year>).</mixed-citation></ref>
<ref id="cs24"><label>24.</label><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Phillips</surname>, <given-names>J. C.</given-names></string-name> <etal>et al.</etal></person-group> <article-title>Scalable molecular dynamics with NAMD</article-title>. <source>Journal of computational chemistry</source> <volume>26</volume>, <fpage>1781</fpage>–<lpage>802</lpage> (<year>2005</year>).</mixed-citation></ref>
<ref id="cs25"><label>25.</label><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>de Jong</surname>, <given-names>D. H.</given-names></string-name> <etal>et al.</etal></person-group> <article-title>Improved Parameters for the Martini Coarse-Grained Protein Force Field</article-title>. <source>J Chem Theory Comput</source> <volume>9</volume>, <fpage>687</fpage>–<lpage>697</lpage> (<year>2013</year>).</mixed-citation></ref>
<ref id="cs26"><label>26.</label><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Uusitalo</surname>, <given-names>J. J.</given-names></string-name>, <string-name><surname>Ingólfsson</surname>, <given-names>H. I.</given-names></string-name>, <string-name><surname>Akhshi</surname>, <given-names>P.</given-names></string-name>, <string-name><surname>Tieleman</surname>, <given-names>D. P.</given-names></string-name> &amp; <string-name><surname>Marrink</surname>, <given-names>S. J.</given-names></string-name></person-group> <article-title>Martini Coarse-Grained Force Field: Extension to DNA</article-title>. <source>J Chem Theory Comput</source> <volume>11</volume>, <fpage>3932</fpage>–<lpage>45</lpage> (<year>2015</year>).</mixed-citation></ref>
<ref id="cs27"><label>27.</label><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Machado</surname>, <given-names>M. R.</given-names></string-name> &amp; <string-name><surname>Pantano</surname>, <given-names>S.</given-names></string-name></person-group> <article-title>SIRAH tools: mapping, backmapping and visualization of coarse-grained models</article-title>. <source>Bioinformatics</source> <volume>32</volume>, <fpage>1568</fpage>–<lpage>1570</lpage> (<year>2016</year>).</mixed-citation></ref>
<ref id="cs28"><label>28.</label><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Danne</surname>, <given-names>R.</given-names></string-name> <etal>et al.</etal></person-group> <article-title>doGlycans –Tools for Preparing Carbohydrate Structures for Atomistic Simulations of Glycoproteins, Glycolipids, and Carbohydrate Polymers for GROMACS</article-title>. <source>J Chem Inf Model</source> <volume>57</volume>, <fpage>2401</fpage>–<lpage>2406</lpage> (<year>2017</year>).</mixed-citation></ref>
<ref id="cs29"><label>29.</label><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Girard</surname>, <given-names>M.</given-names></string-name>, <string-name><surname>Ehlen</surname>, <given-names>A.</given-names></string-name>, <string-name><surname>Shakya</surname>, <given-names>A.</given-names></string-name>, <string-name><surname>Bereau</surname>, <given-names>T.</given-names></string-name> &amp; <string-name><surname>de la Cruz</surname>, <given-names>M. O.</given-names></string-name></person-group> <article-title>Hoobas: A highly object-oriented builder for molecular dynamics</article-title>. <source>Comput Mater Sci</source> <volume>167</volume>, <fpage>25</fpage>–<lpage>33</lpage> (<year>2019</year>).</mixed-citation></ref>
<ref id="cs30"><label>30.</label><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Jo</surname>, <given-names>S.</given-names></string-name>, <string-name><surname>Kim</surname>, <given-names>T.</given-names></string-name>, <string-name><surname>Iyer</surname>, <given-names>V. G.</given-names></string-name> &amp; <string-name><surname>Im</surname>, <given-names>W.</given-names></string-name></person-group> <article-title>CHARMM-GUI: A web-based graphical user interface for CHARMM</article-title>. <source>J Comput Chem</source> <volume>29</volume>, <fpage>1859</fpage>–<lpage>1865</lpage> (<year>2008</year>).</mixed-citation></ref>
<ref id="cs31"><label>31.</label><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Jo</surname>, <given-names>S.</given-names></string-name> <etal>et al.</etal></person-group> <article-title>CHARMM-GUI 10 years for biomolecular modeling and simulation</article-title>. <source>J Comput Chem</source> <volume>38</volume>, <fpage>1114</fpage>–<lpage>1124</lpage> (<year>2017</year>).</mixed-citation></ref>
<ref id="cs32"><label>32.</label><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Qi</surname>, <given-names>Y.</given-names></string-name> <etal>et al.</etal></person-group> <article-title>CHARMM-GUI Martini Maker for Coarse-Grained Simulations with the Martini Force Field</article-title>. <source>J Chem Theory Comput</source> <volume>11</volume>, <fpage>4486</fpage>–<lpage>4494</lpage> (<year>2015</year>).</mixed-citation></ref>
<ref id="cs33"><label>33.</label><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Malde</surname>, <given-names>A. K.</given-names></string-name> <etal>et al.</etal></person-group> <article-title>An Automated Force Field Topology Builder (ATB) and Repository: Version 1.0</article-title>. <source>Journal of Chemical Theory and Computation</source> <volume>7</volume>, <fpage>4026</fpage>–<lpage>4037</lpage> (<year>2011</year>).</mixed-citation></ref>
<ref id="cs34"><label>34.</label><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Canzar</surname>, <given-names>S.</given-names></string-name> <etal>et al.</etal></person-group> <article-title>Charge Group Partitioning in Biomolecular Simulation</article-title>. <source>Journal of Computational Biology</source> <volume>20</volume>, <fpage>188</fpage>–<lpage>198</lpage> (<year>2013</year>).</mixed-citation></ref>
<ref id="cs35"><label>35.</label><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Dodda</surname>, <given-names>L. S.</given-names></string-name>, <string-name><surname>Vilseck</surname>, <given-names>J. Z.</given-names></string-name>, <string-name><surname>Tirado-Rives</surname>, <given-names>J.</given-names></string-name> &amp; <string-name><surname>Jorgensen</surname>, <given-names>W. L.</given-names></string-name></person-group> <article-title>1.14*CM1A-LBCC: Localized Bond-Charge Corrected CM1A Charges for Condensed-Phase Simulations</article-title>. <source>J Phys Chem B</source> <volume>121</volume>, <fpage>3864</fpage>–<lpage>3870</lpage> (<year>2017</year>).</mixed-citation></ref>
<ref id="cs36"><label>36.</label><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Jorgensen</surname>, <given-names>W. L.</given-names></string-name> &amp; <string-name><surname>Tirado-Rives</surname>, <given-names>J.</given-names></string-name></person-group> <article-title>Potential energy functions for atomic-level simulations of water and organic and biomolecular systems</article-title>. <source>Proceedings of the National Academy of Sciences</source> <volume>102</volume>, <fpage>6665</fpage>–<lpage>6670</lpage> (<year>2005</year>).</mixed-citation></ref>
<ref id="cs37"><label>37.</label><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Dodda</surname>, <given-names>L. S.</given-names></string-name>, <string-name><surname>Cabeza de Vaca</surname>, <given-names>I.</given-names></string-name>, <string-name><surname>Tirado-Rives</surname>, <given-names>J.</given-names></string-name> &amp; <string-name><surname>Jorgensen</surname>, <given-names>W. L.</given-names></string-name></person-group> <article-title>LigParGen web server: an automatic OPLS-AA parameter generator for organic ligands</article-title>. <source>Nucleic Acids Res</source> <volume>45</volume>, <fpage>W331</fpage>–<lpage>W336</lpage> (<year>2017</year>).</mixed-citation></ref>
<ref id="cs38"><label>38.</label><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Vanommeslaeghe</surname>, <given-names>K.</given-names></string-name> &amp; <string-name><surname>MacKerell</surname>, <given-names>A. D.</given-names></string-name></person-group> <article-title>Automation of the CHARMM General Force Field (CGenFF) I: Bond Perception and Atom Typing</article-title>. <source>J Chem Inf Model</source> <volume>52</volume>, <fpage>3144</fpage>–<lpage>3154</lpage> (<year>2012</year>).</mixed-citation></ref>
</ref-list>
</sec>
</back>
<sub-article id="sa0" article-type="editor-report">
<front-stub>
<article-id pub-id-type="doi">10.7554/eLife.90627.1.sa3</article-id>
<title-group>
<article-title>eLife Assessment</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author">
<name>
<surname>Cui</surname>
<given-names>Qiang</given-names>
</name>
<role specific-use="editor">Reviewing Editor</role>
<aff>
<institution-wrap>
<institution>Boston University</institution>
</institution-wrap>
<city>Boston</city>
<country>United States of America</country>
</aff>
</contrib>
</contrib-group>
<kwd-group kwd-group-type="evidence-strength">
<kwd>Incomplete</kwd>
</kwd-group>
<kwd-group kwd-group-type="claim-importance">
<kwd>Useful</kwd>
</kwd-group>
</front-stub>
<body>
<p>In this potentially <bold>useful</bold> study, the authors employ concepts and algorithms associated with induced subgraph in graph theory to automate several key but non-trivial steps in the development of coarse-grained models. These developments can help to model complex biomolecular systems at the coarse-grained level., but given the limited number of examples explicitly discussed, the demonstration of the general applicability of the approach to biomolecular systems is considered <bold>incomplete</bold>.</p>
</body>
</sub-article>
<sub-article id="sa1" article-type="referee-report">
<front-stub>
<article-id pub-id-type="doi">10.7554/eLife.90627.1.sa2</article-id>
<title-group>
<article-title>Reviewer #1 (Public Review):</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author">
<anonymous/>
<role specific-use="referee">Reviewer</role>
</contrib>
</contrib-group>
</front-stub>
<body>
<p>Summary:</p>
<p>
In this study, the authors provide a new computational platform called Vermouth to automate topology generation, a crucial step that any biomolecular simulation starts with. Given a wide arrange of chemical structures that need to be simulated, varying qualities of structural models as inputs obtained from various sources, and diverse force fields and molecular dynamics engines employed for simulations, automation of this fundamental step is challenging, especially for complex systems and in case that there is a need to conduct high-throughput simulations in the application of computer-aided drug design (CADD). To overcome this challenge, the authors develop a programming library composed of components that carry out various types of fundamental functionalities that are commonly encountered in topological generation. These components are intended to be general for any type of molecules and not to depend on any specific force field and MD engines. To demonstrate the applicability of this library, the authors employ those components to re-assemble a pipeline called Martinize2 used in topology generation for simulations with a widely used coarse-grained model (CG) MARTINI. This pipeline can fully recapitulate the functionality of its original version Martinize but exhibit greatly enhanced generality, as confirmed by the ability of the pipeline to faithfully generate topologies for two high-complexity benchmarking sets of proteins.</p>
<p>Strengths:</p>
<p>
The main strength of this work is the use of concepts and algorithms associated with induced subgraph in graph theory to automate several key but non-trivial steps of topology generation such as the identification of monomer residue units (MRU), the repair of input structures with missing atoms, the mapping of topologies between different resolutions, and the generation of parameters needed for describing interactions between MRUs.</p>
<p>Weaknesses:</p>
<p>
Although the Vermouth library appears promising as a general tool for topology generation, there is insufficient information in the current manuscript and a lack of documentation that may allow users to easily apply this library. More detailed explanation of various classes such as Processor, Molecule, Mapping, ForceField etc. that are mentioned is still needed, including inputs, output and associated operations of these classes. Some simple demonstration of application of these classes would be of great help to users. The formats of internal databases used to describe reference structures and force fields may also need to be clarified. This is particularly important when the Vermouth needs to be adapted for other AA/CG force fields and other MD engines.</p>
<p>The successful automation of the Vermouth relies on the reference structures that need to be pre-determined. In case of the study of 43 small ligands, the reference structures and corresponding mapping to MARTINI-compatible representations for all these ligands have been already defined in the M3 force field and added into the Vermouth library. However, the authors need to comment on the scenario where significantly more ligands need to be considered and other force fields need to be used as CG representations with a lack of reference structures and mapping schemes.</p>
</body>
</sub-article>
<sub-article id="sa2" article-type="referee-report">
<front-stub>
<article-id pub-id-type="doi">10.7554/eLife.90627.1.sa1</article-id>
<title-group>
<article-title>Reviewer #2 (Public Review):</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author">
<anonymous/>
<role specific-use="referee">Reviewer</role>
</contrib>
</contrib-group>
</front-stub>
<body>
<p>Summary:</p>
<p>This manuscript by Kroon, Grunewald, Marrink and coworkers present the development of Vermouth library for coarse grain assignment and parameterization and an updated version of python script, the Martinize2 program, to build Martini coarse grained (CG) models, primarily for protein systems.</p>
<p>Strengths:</p>
<p>In contrast to many mature and widely used tools to build all-atom (AA) models, there are few well-accepted programs for CG model constructions and parameterization. The research reported in this manuscript is among the ongoing efforts to build such tools for Martini CG modeling, with a clear goal of high-throughput simulations of complex biomolecular systems and, ultimately, whole-cell simulations. Thus, this manuscript targets a practical problem in computational biophysics. The authors see such an effort to unify operations like CG mapping, parameterization, etc. as a vital step from the software engineering perspective.</p>
<p>Weaknesses:</p>
<p>However, the manuscript in this shape is unclear in the scientific novelty and appears incremental upon existing methods and tools. The only &quot;validation&quot; (more like an example application) is to create Martini models with two protein structure sets (I-TASSER and AlphaFold). The success rate in building the models was only 73%, while the significant failure is due to incomplete AA coordinates. This suggests a dependence on the input AA models, which makes the results less attractive for high-throughput applications (for example, preparation/creation of the AA models can become the bottleneck). There seems to be an improvement in considering the protonation state and chemical modification, but convincing validation is still needed. Besides, limitations in the existing Martini models remain (like the restricted dynamics due to the elastic network, the electrostatic interactions or polarizability).</p>
</body>
</sub-article>
<sub-article id="sa3" article-type="referee-report">
<front-stub>
<article-id pub-id-type="doi">10.7554/eLife.90627.1.sa0</article-id>
<title-group>
<article-title>Reviewer #3 (Public Review):</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author">
<anonymous/>
<role specific-use="referee">Reviewer</role>
</contrib>
</contrib-group>
</front-stub>
<body>
<p>Summary:</p>
<p>
The manuscript Kroon et al. described two algorithms, which when combined achieve high throughput automation of &quot;martinizing&quot; protein structures with selected protonation states and post-translational modifications.</p>
<p>Strengths:</p>
<p>
A large scale protein simulation was attempted, showing strong evidence that authors' algorithms work smoothly.</p>
<p>The authors described the algorithms in detail and shared the open-source code under Apache 2.0 license on GitHub. This allows both reproducibility of extended usefulness within the field. These algorithms are potentially impactful if the authors can address some of the issues listed below.</p>
<p>Weaknesses:</p>
<p>
One major caveat of the manuscript is that the authors claim their algorithms aim to &quot;process any type of molecule or polymer, be it linear, cyclic,</p>
<p>
branched, or dendrimeric, and mixtures thereof&quot; and &quot;enable researchers to prepare simulation input files for arbitrary (bio)polymers&quot;. However, the examples provided by the manuscript only support one type of biopolymer, i.e. proteins. Despite the authors' recommendation of using polyply along with martinize2/vermouth, no concrete evidence has been provided to support the authors' claim. Therefore, the manuscript must be modified to either remove these claims or include new evidence.</p>
<p>Method descriptions on Martinize2 and graph algorithms in SI should be core content of the manuscript. I argue that Figure S1 and Figure S2 are more important than Figure 3 (protonation state). I recommend the authors can make a workflow chart combining Figure S1 and S2 to explain Martinize2 and graph algorithms in main text.</p>
<p>In Figure 3 (protonation state), the figure itself and the captions are ambiguous about whether at the end the residue is simply renamed from HIS to HIP, or if hydrogen is removed from HIP to recover HIS.</p>
<p>In &quot;Incorporating a Ligand small-molecule Database&quot;, the authors are calling for a community effort to build a small-molecule database. Some guidance on when the current database/algorithm combination does or does not work will help the community in contributing.</p>
<p>A speed comparison is needed to compare Martinize2 and Martinize.</p>
</body>
</sub-article>
</article>