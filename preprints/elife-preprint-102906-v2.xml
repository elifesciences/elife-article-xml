<?xml version="1.0" ?><!DOCTYPE article PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Archiving and Interchange DTD v1.3 20210610//EN"  "JATS-archivearticle1-mathml3.dtd"><article xmlns:ali="http://www.niso.org/schemas/ali/1.0/" xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" article-type="research-article" dtd-version="1.3" xml:lang="en">
<front>
<journal-meta>
<journal-id journal-id-type="nlm-ta">elife</journal-id>
<journal-id journal-id-type="publisher-id">eLife</journal-id>
<journal-title-group>
<journal-title>eLife</journal-title>
</journal-title-group>
<issn publication-format="electronic" pub-type="epub">2050-084X</issn>
<publisher>
<publisher-name>eLife Sciences Publications, Ltd</publisher-name>
</publisher>
</journal-meta>
<article-meta>
<article-id pub-id-type="publisher-id">102906</article-id>
<article-id pub-id-type="doi">10.7554/eLife.102906</article-id>
<article-id pub-id-type="doi" specific-use="version">10.7554/eLife.102906.2</article-id>
<article-version-alternatives>
<article-version article-version-type="publication-state">reviewed preprint</article-version>
<article-version article-version-type="preprint-version">1.2</article-version>
</article-version-alternatives>
<article-categories><subj-group subj-group-type="heading">
<subject>Physics of Living Systems</subject>
</subj-group>
</article-categories>
<title-group>
<article-title>Q-learning with temporal memory to navigate turbulence</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author" corresp="yes">
<name>
<surname>Rando</surname>
<given-names>Marco</given-names>
</name>
<xref ref-type="aff" rid="A1">1</xref>
<email>rando@edu.unige.it</email>
</contrib>
<contrib contrib-type="author">
<name>
<surname>James</surname>
<given-names>Martin</given-names>
</name>
<xref ref-type="aff" rid="A2">2</xref>
</contrib>
<contrib contrib-type="author">
<name>
<surname>Verri</surname>
<given-names>Alessandro</given-names>
</name>
<xref ref-type="aff" rid="A1">1</xref>
</contrib>
<contrib contrib-type="author">
<name>
<surname>Rosasco</surname>
<given-names>Lorenzo</given-names>
</name>
<xref ref-type="aff" rid="A1">1</xref>
</contrib>
<contrib contrib-type="author" corresp="yes">
<name>
<surname>Seminara</surname>
<given-names>Agnese</given-names>
</name>
<xref ref-type="aff" rid="A2">2</xref>
<email>agnese.seminara@unige.it</email>
</contrib>
<aff id="A1"><label>1</label><institution-wrap><institution-id institution-id-type="ror">https://ror.org/0107c5v14</institution-id><institution>MaLGa, Department of Computer Science, Bioengineering, Robotics and Systems Engineering, University of Genova</institution></institution-wrap>, <city>Genova</city>, <country country="IT">Italy</country></aff>
<aff id="A2"><label>2</label><institution-wrap><institution-id institution-id-type="ror">https://ror.org/0107c5v14</institution-id><institution>MalGa, Department of Civil, Chemical and Environmental Engineering, University of Genoa</institution></institution-wrap>, <city>Genoa</city>, <country country="IT">Italy</country></aff>
</contrib-group>
<contrib-group content-type="section">
<contrib contrib-type="editor">
<name>
<surname>Berman</surname>
<given-names>Gordon J</given-names>
</name>
<role>Reviewing Editor</role>
<aff>
<institution-wrap>
<institution>Emory University</institution>
</institution-wrap>
<city>Atlanta</city>
<country>United States of America</country>
</aff>
</contrib>
<contrib contrib-type="senior_editor">
<name>
<surname>Walczak</surname>
<given-names>Aleksandra M</given-names>
</name>
<role>Senior Editor</role>
<aff>
<institution-wrap>
<institution>CNRS</institution>
</institution-wrap>
<city>Paris</city>
<country>France</country>
</aff>
</contrib>
</contrib-group>
<pub-date pub-type="epub">
<day>28</day>
<month>01</month>
<year>2025</year>
</pub-date>
<pub-date date-type="original-publication" iso-8601-date="2024-12-16">
<day>16</day>
<month>12</month>
<year>2024</year>
</pub-date>
<pub-date date-type="update" iso-8601-date="2025-03-05">
<day>05</day>
<month>03</month>
<year>2025</year>
</pub-date>
<volume>13</volume>
<elocation-id>RP102906</elocation-id>
<history><date date-type="sent-for-review" iso-8601-date="2024-09-12">
<day>12</day>
<month>09</month>
<year>2024</year>
</date>
</history>
<pub-history>
<event>
<event-desc>Preprint posted</event-desc>
<date date-type="preprint" iso-8601-date="2024-04-26">
<day>26</day>
<month>04</month>
<year>2024</year>
</date>
<self-uri content-type="preprint" xlink:href="https://doi.org/10.48550/arXiv.2404.17495"/>
</event>
<event>
<event-desc>Reviewed preprint v1</event-desc>
<date date-type="reviewed-preprint" iso-8601-date="2024-12-16">
<day>16</day>
<month>12</month>
<year>2024</year>
</date>
<self-uri content-type="reviewed-preprint" xlink:href="https://doi.org/10.7554/eLife.102906.1"/>
<self-uri content-type="editor-report" xlink:href="https://doi.org/10.7554/eLife.102906.1.sa2">eLife Assessment</self-uri>
<self-uri content-type="referee-report" xlink:href="https://doi.org/10.7554/eLife.102906.1.sa1">Reviewer #1 (Public review):</self-uri>
<self-uri content-type="referee-report" xlink:href="https://doi.org/10.7554/eLife.102906.1.sa0">Reviewer #2 (Public review):</self-uri>
<self-uri content-type="author-comment" xlink:href="https://doi.org/10.7554/eLife.102906.1.sa3">Author response:</self-uri>
</event>
</pub-history>
<permissions>
<copyright-statement>© 2024, Rando et al</copyright-statement>
<copyright-year>2024</copyright-year>
<copyright-holder>Rando et al</copyright-holder>
<ali:free_to_read/>
<license xlink:href="https://creativecommons.org/licenses/by/4.0/">
<ali:license_ref>https://creativecommons.org/licenses/by/4.0/</ali:license_ref>
<license-p>This article is distributed under the terms of the <ext-link ext-link-type="uri" xlink:href="https://creativecommons.org/licenses/by/4.0/">Creative Commons Attribution License</ext-link>, which permits unrestricted use and redistribution provided that the original author and source are credited.</license-p>
</license>
</permissions>
<self-uri content-type="pdf" xlink:href="elife-preprint-102906-v2.pdf"/>
<abstract>
<title>Abstract</title>
<p>We consider the problem of olfactory searches in a turbulent environment. We focus on agents that respond solely to odor stimuli, with no access to spatial perception nor prior information about the odor. We ask whether navigation to a target can be learned robustly within a sequential decision making framework. We develop a reinforcement learning algorithm using a small set of interpretable olfactory states and train it with realistic turbulent odor cues. By introducing a temporal memory, we demonstrate that two salient features of odor traces, discretized in few olfactory states, are sufficient to learn navigation in a realistic odor plume. Performance is dictated by the sparse nature of turbulent odors. An optimal memory exists which ignores blanks within the plume and activates a recovery strategy outside the plume. We obtain the best performance by letting agents learn their recovery strategy and show that it is mostly casting cross wind, similar to behavior observed in flying insects. The optimal strategy is robust to substantial changes in the odor plumes, suggesting minor parameter tuning may be sufficient to adapt to different environments.</p>
</abstract>
<custom-meta-group>
<custom-meta specific-use="meta-only">
<meta-name>publishing-route</meta-name>
<meta-value>prc</meta-value>
</custom-meta>
</custom-meta-group>
</article-meta>
</front>
<body>
<sec id="s1" sec-type="intro">
<title>Introduction</title>
<p>Bacterial cells localize the source of an attractive chemical even if they hold no spatial perception. They respond solely to temporal changes in chemical concentration and the result of their response is that they move toward attractive stimuli by climbing concentration gradients <xref ref-type="bibr" rid="c11">Berg (1975)</xref>. Larger organisms also routinely sense chemicals in their environment to localize or escape targets, but cannot follow chemical gradients since turbulence breaks odors into sparse pockets and gradients lose information <xref ref-type="bibr" rid="c48">Murlis et al. (1992)</xref>; <xref ref-type="bibr" rid="c67">Vergassola et al. (2007)</xref>; <xref ref-type="bibr" rid="c61">Shraiman and Siggia (2000)</xref>; <xref ref-type="bibr" rid="c9">Balkovsky and I. (2002)</xref>; <xref ref-type="bibr" rid="c53">Reddy et al. (2022)</xref>. The question of which features of turbulent odor traces are used by animals for navigation is natural, but not well understood. Beyond olfaction, some animals could use also prior spatial information to navigate <xref ref-type="bibr" rid="c15">Cardé (2021)</xref>; <xref ref-type="bibr" rid="c59">Schal (1982)</xref>; <xref ref-type="bibr" rid="c30">Gire et al. (2016)</xref>; <xref ref-type="bibr" rid="c7">Baker et al. (2018)</xref>, but if and how chemosensation and spatial perception are coupled is still not clear.</p>
<p>An algorithmic perspective to olfactory navigation in turbulence can shed light on some of these questions. Without aiming at an exhaustive taxonomy, see e.g. <xref ref-type="bibr" rid="c18">Celani and Panizon (2024)</xref> for a recent review, we recall some approaches relevant to put our contribution in context. One class of methods are biomimetic algorithms, where explicit navigation rules are crafted taking inspiration from animal behavior. An advantage of these methods is interpretability, in the sense that they provide insights into features that effectively achieve turbulent navigation, for example: odor presence/absence <xref ref-type="bibr" rid="c8">Baker (1990)</xref>; <xref ref-type="bibr" rid="c38">Kramer (1997)</xref>; <xref ref-type="bibr" rid="c10">Belanger and Willis (1988)</xref>; <xref ref-type="bibr" rid="c9">Balkovsky and I. (2002)</xref>; odor slope at onset of detection <xref ref-type="bibr" rid="c6">Atema (1996)</xref>; number of detections in a given interval of time <xref ref-type="bibr" rid="c47">Michaelis et al. (2020)</xref> and the time of odor onset <xref ref-type="bibr" rid="c22">Demir et al. (2020a)</xref>. On the flip side, in biomimetic algorithms behaviors are hardwired and typically reactive, not relying on any optimality criterion.</p>
<p>Awayto tackle this shortcoming is to cast olfactory navigation within a sequential decision making framework <xref ref-type="bibr" rid="c64">Sutton and Barto (1998)</xref>. In this context, navigation is formalized as a task with a reward for success; by maximizing reward, optimal strategies can be sought to efficiently reach the target. A byproduct is that most algorithmic choices can often be done in a principled way. Within this framework, some approaches make explicit use of spatial information. Bayesian algorithms use a spatial map to guess the target location and use odor to refine this guess or “belief”. A prominent algorithm for olfactory navigation based on the concept of belief is the information-seeking algorithm <xref ref-type="bibr" rid="c67">Vergassola et al. (2007)</xref> akin to exploration heuristics widely used in robotics <xref ref-type="bibr" rid="c17">Cassandra et al. (1996)</xref>; <xref ref-type="bibr" rid="c41">LaValle (2006)</xref> (see e.g. <xref ref-type="bibr" rid="c43">Loisy and Eloy (2022)</xref>; <xref ref-type="bibr" rid="c36">Ishida (2020)</xref>). Using Bayesian sequential decision making and the notion of beliefs, navigation can be formalized as a Partially Observable Markov Decision Process (POMDP) <xref ref-type="bibr" rid="c39">Krishnamurthy (2016)</xref>; <xref ref-type="bibr" rid="c32">Hauskrecht (2000)</xref>; <xref ref-type="bibr" rid="c60">Shani et al. (2013)</xref>, that colorblackcan be approximatively solved <xref ref-type="bibr" rid="c56">Rigolli et al. (2022b)</xref>; <xref ref-type="bibr" rid="c33">Heinonen et al. (2023)</xref>; <xref ref-type="bibr" rid="c45">Loisy and Heinonen (2023b)</xref>. POMDP approaches are appealing since beliefs are a sufficient statistics for the entire history of odor detections. However, they are computationally cumbersome. Further, they leave the question open of whether navigation as sequential decision making can be performed using solely olfactory information.</p>
<p>Recently, two algorithms studied navigation as a response to olfactory input alone <xref ref-type="bibr" rid="c62">Singh et al. (2023)</xref>; <xref ref-type="bibr" rid="c66">Verano et al. (2023)</xref>. In <xref ref-type="bibr" rid="c62">Singh et al. (2023)</xref> artificial neural networks were shown to learn near optimal strategies as a response to odor and instantaneous flow direction, although they were trained on odor cues with limited sparsity, and training with sparse odor cues typical of turbulence remains to be tested. In <xref ref-type="bibr" rid="c66">Verano et al. (2023)</xref> an approach based on finite state controllers was proposed. Here, optimization was done assuming fixed known mean flow direction, and using a model-based technique, relying on prior knowledge of the likelihood to detect the odor in space, hence still using spatial information. A different model free optimization could also be considered avoiding spatial information but this latter approach also remains to be tested. More generally, all the above approaches manipulate internally the previous history (memory) of odor detections. In this sense they are less interpretable, since the features of odor traces that drive navigation do not emerge explicitly.</p>
<p>In this paper, we propose a reinforcement learning (RL) approach to navigation in turbulence based on a set of interpretable olfactory features, with no spatial information other than the ability to orient relative to the mean flow, and highlight the role played by memory within this context. More precisely, we learn optimal strategies from data by training tabular Q learning <xref ref-type="bibr" rid="c64">Sutton and Barto (1998)</xref> with realistic odor cues obtained from state-of-the-art Direct Numerical Simulations of turbulence. From the odor cues, we define features as moving averages of odor intensity and sparsity: the moving window is the temporal memory and naturally connects to the physics of turbulent odors. States are then obtained discretizing such features. Due to sparsity, agents may detect no odor within the moving window. We show there is an optimal memory minimizing the occurrence of this “void state”. The optimal memory scales with the blank time dictated by turbulence as it emerges from a trade off requiring that: <italic>(i)</italic> short blanks-typical of turbulent plumesare ignored by responding to detections further in the past, and <italic>(ii)</italic> long blanks promptly trigger a recovery strategy to make contact with the plume again. We leverage these observations to tune the memory adaptively, by setting it equal to the previous blank experienced along an agent’s path. With this choice, the algorithm tests successfully in distinct environments, suggesting that tuning can be made robustly to enable generalization. The agent learns to surge upwind in most non-void states and to recover by casting crosswind in the absence of detections. Optimal agents limit encounters with the void state to a narrow band right at the edge of the plume. This suggests that the temporal odor features we considered effectively predict when the agent is exiting the plume and point to an intimate connection between temporal predictions and spatial navigation.</p>
<fig id="fig1" position="float" fig-type="figure">
<label>Figure 1.</label>
<caption><title>Learning a stimulus-response strategy for turbulent navigation.</title>
<p>(A) Representation of the search problem with turbulent odor cues obtained from Direct Numerical Simulations of fluid turbulence (grey scale, odor snapshot from the simulations). The discrete position <italic>s</italic> is hidden;the odor concentration <italic>z<sub>T</sub> = z(s(t<sup>′</sup>), t<sup>′</sup>)|t − T ≤ t<sup>′</sup> ≤ t</italic> is observed along the trajectory <italic>s(t<sup>′</sup>)</italic>, where <italic>T</italic> is the sensing memory. (B) Odor traces from direct numerical simulations at different (fixed) points within the plume. Odor is noisy and sparse, information about the source is hidden in the temporal dynamics. (C) Contour maps of olfactory states with nearly infinite memory (<italic>T</italic> = 2598): on average olfactory states map to different locations within the plume and the void state is outside the plume. Intermittency is discretized in three bins defined by two thresholds 66% (red line) and 33% (blue line). Intensity is discretized in 5 bins (dark red shade to white shade) defined by four thresholds (percentiles 99%, 80%, 50%, 25%). (D) Performance of stimulus-response strategies obtained during training, averaged over 500 episodes. We train using realistic turbulent data with memory <italic>T</italic> = 20 and backtracking recovery.</p></caption>
<graphic xlink:href="2404.17495v2_fig1.tif" mime-subtype="tif" mimetype="image"/>
</fig>
</sec>
<sec id="s2" sec-type="results">
<title>Results</title>
<sec id="s2-1">
<title>Background</title>
<p>Given a source of odor placed in an unknown position of a two-dimensional space, we consider the problem of learning to reach the source, <xref ref-type="fig" rid="fig1">Figure 1A</xref>. We formulate the problem as a discrete Markov Decision Process by discretizing space in tiles, also called “gridworld” in the reinforcement learning literature <xref ref-type="bibr" rid="c64">Sutton and Barto (1998)</xref>. In this problem, an agent is in a given state <italic>s</italic> which is one of a discrete set of <italic>n</italic> tiles: <italic>s</italic> ∈ <italic>S</italic> : = {<italic>S</italic><sub>1</sub>,…, <italic>s<sub>n</sub></italic>}. At each time step it chooses an action <italic>a</italic> which is a step in any of the coordinate directions <italic>a</italic> ∈ {upwind,downwind,crosswing-left,crosswind-right}. Directions are labeled relative to the mean wind, which is assumed known. In our figures the flow always goes from left to right, hence the actions upwind, downwind, crosswind-right and crosswind-left correspond in the figures to a step left, right, up and down respectively. The goal is to find sequences of actions that lead to the source as fast as possible and is formalized with the notion of policy and reward which we will introduce later. If agents have perfect knowledge of their own location and of the location of the source in space, the problem reduces to finding the shortest path.</p>
</sec>
<sec id="s2-2">
<title>Using time <italic>vs</italic> space to address partial observability</title>
<p>In our problem however, the agent does not know where the source is, hence its position <italic>5</italic> relative to the source, is unknown or “partially observed”. Instead, it can sense odor released by the target. In the language of RL, odor is an “observation” - but does it hold information about the position <italic>s</italic>? The answer is yes: several properties of odor stimuli depend on the distance from the source <xref ref-type="bibr" rid="c13">Boie et al. (2018)</xref>; <xref ref-type="bibr" rid="c3">Ackels et al. (2021b)</xref>; <xref ref-type="bibr" rid="c50">Nag and van Breugel (2024)</xref>. However in the presence of turbulence, information lies in the statistics of the odor stimulus. Indeed, when odor is carried by a turbulent flow, it develops into a dramatically stochastic plume, i.e. a complex and convoluted region of space where the fluid is rich in odor molecules. Turbulent plumes break into structures that distort and expand while they travel away from their source and become more and more diluted <xref ref-type="bibr" rid="c27">Falkovich et al. (2001)</xref>; <xref ref-type="bibr" rid="c61">Shraiman and Siggia (2000)</xref>; <xref ref-type="bibr" rid="c19">Celani et al. (2014)</xref>; <xref ref-type="bibr" rid="c53">Reddy et al. (2022)</xref>, see <xref ref-type="fig" rid="fig1">Figure 1A</xref>. As a consequence, an agent within the plume experiences intermittent odor traces that endlessly switch on (whiff) and off (blank) <xref ref-type="fig" rid="fig1">Figure 1B</xref>. The intensity of odor whiffs and how they are interleaved with blanks depends on distance from release, as dictated by physics <xref ref-type="bibr" rid="c19">Celani et al. (2014)</xref>. Thus the upshot of turbulent transport is that the statistical properties of odor traces depend intricately on the position of the agent relative to the source. In other words, information about the state <italic>s</italic> is hidden within the observed odor traces.</p>
<p>This positional information can be leveraged with a Bayesian approach that relies on guessing <italic>s</italic>, i.e. defining the probability distribution of the position, also called belief. This is the approach that has been more commonly adopted in the literature until now <xref ref-type="bibr" rid="c56">Rigolli et al. (2022b)</xref>; <xref ref-type="bibr" rid="c33">Heinonen et al. (2023)</xref>; <xref ref-type="bibr" rid="c45">Loisy and Heinonen (2023b)</xref>. Note that because of the complexity of these algorithms, only relatively simple measures of the odor are computationally feasible, e.g. instantaneous presence/absence. Here we take a different model-free and map-free approach. Instead of guessing the current state <italic>s</italic> , we ignore the spatial position and respond directly to the temporal traces of the odor cues. Two other algorithms have been proposed to solve partial observability by responding solely to odor traces with recurrent neural networks <xref ref-type="bibr" rid="c62">Singh et al. (2023)</xref> and finite state controllers <xref ref-type="bibr" rid="c66">Verano et al. (2023)</xref> that manipulate implicitly the odor traces. Here instead we manipulate odor traces explicitly, by defining memory as a moving window and by crafting a small number of features of odor traces.</p>
</sec>
<sec id="s2-3">
<title>Features of odor cues: definition of discrete olfactory states and sensing memory</title>
<p>To learn a response to odor traces, we set out to craft a finite set of <italic>olfactory states</italic>, <italic>o</italic> ∈ <italic>O</italic>, so that they bear information about the location <italic>s</italic>. Defining the olfactory states is a challenge due to the dramatic fluctuations and irregularity of turbulent odor traces. To construct a fully interpretable low dimensional state space, we aim at a small number of olfactory states that bear robust information about <italic>s</italic>, i.e. for all values of <italic>s</italic>. We previously found that pairing features of sparsity as well as intensity of turbulent odor traces predicts robustly the location of the source for all <italic>s</italic> <xref ref-type="bibr" rid="c55">Rigolli et al. (2022a)</xref>. Guided by these results, we use these two features extracted from the temporal history of odor detections to define a small set of olfactory states.</p>
<p>We proceed to define a function that takes as input the history of odor detections along an agent’s path and returns its current olfactory state. We indicate with <italic>s</italic>(<italic>t</italic>) the (unknown) path of an agent, and with <italic>z(s(t),t)</italic> the observations i.e. odor concentration along its path. First, we define a sensing memory <italic>T</italic> and we consider a short excerpt of the history of odor detections <italic>z<sub>T</sub></italic> of duration <italic>T</italic> prior to the current time <italic>t</italic>. Formally, <italic>z<sub>T</sub></italic>(<italic>t</italic>) := {<italic>z</italic>(<italic>s</italic>(<italic>t<sup>′</sup>), t<sup>′</sup></italic>)| <italic>t − T ≤ t<sup>′</sup> ≤ t</italic>}. Second, we measure the average intensity <italic>c</italic> (moving average of odor intensity over the time window <italic>T</italic>, conditioned to times when odor is above threshold), and intermittency <italic>i</italic> (the fraction of time the odor is above threshold during the sensing window <italic>T</italic>). Both features <italic>c</italic> and <italic>i</italic> are described by continuous, positive real numbers. Third, we define 15 olfactory states by discretizing <italic>i</italic> and <italic>c</italic> in 3 and 5 bins respectively. Intermittency <italic>i</italic> is bounded between 0 and 1 and we discretize it in 3 bins by defining two thresholds (33% and 66%). The average concentration, <italic>c</italic> , is bounded between 0 and the odor concentration at the source, hence prior information on the source is needed to discretize <italic>c</italic> using set thresholds. To avoid relying on prior information, we define thresholds of intensity as percentiles, based on a histogram that is populated online, along each agent’s path (see Materials and Methods). The special case where no odor is detected over <italic>T</italic> deserves attention, hence we include it as an additional state named “void state” and indicate it with <italic>o</italic> ≡ ϕ. When <italic>T</italic> is sufficiently long, the resulting olfactory states map to different spatial locations (<xref ref-type="fig" rid="fig1">Figure 1C</xref>, with <italic>T</italic> equal to the simulation time). Hence this definition of olfactory states can potentially mitigate the problem of partial observability using temporal traces, rather than spatial maps. But will these olfactory states with finite memory <italic>T</italic> guide agents to the source?</p>
</sec>
<sec id="s2-4">
<title>Q learning: a map-less and model-free navigation to odor sources</title>
<p>To answer this question, we trained tabular episodic Q learning <xref ref-type="bibr" rid="c64">Sutton and Barto (1998)</xref>. In a nutshell, we use a simulator to place an agent at a random location in space at the beginning of each episode. The agent is not aware of its location in space, but it senses odor provided by the fluid dynamics simulator and thus can compute its olfactory state <italic>o</italic>, based on odor detected along its path in the previous <italic>T</italic> sensing window. It then makes a move according to a set policy of actions <italic>a</italic> ~ <italic>π</italic><sub>0</sub>(<italic>a|o</italic>). After the move, the simulator displaces the agent to its new location and relays the agent a penalty <italic>R</italic> = −<italic>π</italic> with <italic>π</italic> = 0.001 if it is not at the source and a reward <italic>R</italic> = 1 if it reaches the source. The goal of RL is to find a policy of actions that maximizes the expected cumulative future reward <inline-formula id="ID1">
<alternatives>
<mml:math display="inline" id="I1"><mml:mi>G</mml:mi><mml:mo>=</mml:mo><mml:msub><mml:mi>E</mml:mi><mml:mi>π</mml:mi></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mstyle displaystyle="true"><mml:msubsup><mml:mo>∑</mml:mo><mml:mrow><mml:mi>t</mml:mi><mml:mo>=</mml:mo><mml:mn>0</mml:mn></mml:mrow><mml:mi>∞</mml:mi></mml:msubsup><mml:mrow><mml:msup><mml:mi>γ</mml:mi><mml:mi>t</mml:mi></mml:msup><mml:msub><mml:mi>R</mml:mi><mml:mrow><mml:mi>t</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub></mml:mrow></mml:mstyle></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:math>
<inline-graphic xlink:href="2404.17495v2_ieq1.tif" mime-subtype="tif" mimetype="image"/></alternatives>
</inline-formula> where the expectation is over the ensemble of trajectories and rewards generated by the policy from any initial condition. Because reward is only positive at the source, the optimal policy is the one that reaches the source as fast as possible. To further encourage the agent to reach the source quickly, we introduce a discount factor <italic>γ</italic> &lt; 1.</p>
<p>Episodes where the agent does not reach the source are ended after <italic>H</italic><sub>max</sub> = 5000 with no positive reward. As it tries actions and receives rewards, the agent learns how good the actions are. This is accomplished by estimating the quality matrix <italic>Q</italic>(<italic>o, a</italic>), i.e. the maximum expected cumulative reward conditioned to being in <italic>o</italic> and choosing action <italic>a</italic> at the present time: <italic>Q</italic>(<italic>o, a</italic>) = <inline-formula id="ID2">
<alternatives>
<mml:math display="inline" id="I2"><mml:msub><mml:mi>max</mml:mi><mml:mi>π</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mi>E</mml:mi><mml:mi>π</mml:mi></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mstyle displaystyle="true"><mml:msubsup><mml:mo>∑</mml:mo><mml:mrow><mml:mi>t</mml:mi><mml:mo>=</mml:mo><mml:mn>0</mml:mn></mml:mrow><mml:mi>∞</mml:mi></mml:msubsup><mml:mrow><mml:msup><mml:mi>γ</mml:mi><mml:mi>t</mml:mi></mml:msup><mml:msub><mml:mi>R</mml:mi><mml:mrow><mml:mi>t</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>|</mml:mo><mml:msub><mml:mi>o</mml:mi><mml:mi>t</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mn>0</mml:mn><mml:mo>,</mml:mo><mml:mtext> </mml:mtext><mml:msub><mml:mi>a</mml:mi><mml:mi>t</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mi>a</mml:mi></mml:mrow></mml:mstyle></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:math>
<inline-graphic xlink:href="2404.17495v2_ieq2.tif" mime-subtype="tif" mimetype="image"/></alternatives>
</inline-formula>. At each step, the agent improves its policy by choosing more frequently putatively good actions. Once the agent has a good approximation of the quality matrix, the optimal policy corresponds to the simple readout: <italic>n</italic><sup>*</sup>(<italic>a|o</italic>) = <italic>δ</italic>(<italic>a</italic> − <italic>a</italic><sup>*</sup>(<italic>o</italic>)) where <italic>a</italic><sup>*</sup>(<italic>o</italic>) = arg max<sub><italic>a</italic></sub> <italic>Q(o, a)</italic>, for non-void states <italic>o</italic> ≠ ∅.</p>
<sec id="s2-4-1">
<title>Recovery strategy</title>
<p>To fully describe the behavior of our Q-learning agents, we have to prescribe their policy from the void state <italic>o</italic> ≡ ∅. This is problematic because turbulent plumes are full of holes thus the void state can occur anywhere both within and outside the plume, <xref ref-type="fig" rid="fig1">Figure 1A</xref>. As a consequence, the optimal action <italic>a</italic><sup>*</sup>(∅) from the void state is ill defined. We address this issue by using a separate policy called “recovery strategy”. Inspired by path integration as defined in biology <xref ref-type="bibr" rid="c25">Etienne and Jeffery (2004)</xref>; <xref ref-type="bibr" rid="c26">Etienne et al. (1996)</xref>; <xref ref-type="bibr" rid="c34">Heinze et al. (2018)</xref>, we propose the backtracking strategy consisting in retracing the last <italic>T<sub>a</sub></italic> steps after the agent lost track of the odor. If at the end of backtracking the agent is still in the void state, it activates Brownian motion. Backtracking requires that we introduce memory of the past <italic>T<sub>a</sub></italic> actions. This timescale <italic>T<sub>a</sub></italic> for activating recovery is conceptually distinct from the duration of the sensing memory - however here we set <italic>T<sub>a</sub></italic> = <italic>T</italic> for simplicity. Backtracking was observed in ants displaced in unfamiliar environments <xref ref-type="bibr" rid="c71">Wystrach et al. (2013)</xref>, tsetse flies executing reverse turns bringing them back towards the location where they last detected odor <xref ref-type="bibr" rid="c65">Torr (1988)</xref>; <xref ref-type="bibr" rid="c29">Gibson and Brady (1985)</xref> and cockroaches retracing their steps downwind, sometimes walking all the way back to the release point upon plume loss <xref ref-type="bibr" rid="c69">Willis et al. (2008)</xref>; it was also previously used in computational models <xref ref-type="bibr" rid="c51">Park et al. (2016)</xref>.</p>
<p>We find that Q-learning agents successfully learn to navigate to the odor source by responding solely to their olfactory state, with no sense of space nor models of the odor cues. Learning can be quantified by monitoring the cumulative reward which continuously improves with further training episodes (<xref ref-type="fig" rid="fig1">Figure 1D</xref>, left). Improved reward corresponds to agents learning how to reach the source more quickly and reliably with training. Indeed, it is easy to show that the expected cumulative reward <italic>G</italic> = 〈<italic>e</italic><sup><italic>−λτ</italic></sup> − <italic>σ</italic>(1 − <italic>e<sup>−λτ</sup></italic>)/(1 − <italic>y</italic>)〉, where <italic>τ</italic> is a random variable corresponding to time to reach the source and <italic>γ</italic> = <italic>e</italic><sup><italic>−λ</italic>Δ<italic>t</italic></sup> is the discount factor, with the time step Δ<italic>t</italic> = 1 (see Materials and Methods). Large rewards arise when <italic>(i)</italic> a large fraction <italic>f</italic><sup>+</sup> of agents successfully reaches the source and <italic>(ii)</italic> the agents reach the source quickly, which maximizes <italic>g</italic><sup>+</sup> = (<italic>e</italic><sup><italic>−λτ</italic></sup>|success). Indeed <italic>G</italic> = <italic>f</italic><sup>+</sup><italic>G</italic><sup>+</sup> + (1 − <italic>f</italic><sup>+</sup>)<italic>G</italic><sup>−</sup>, where <italic>G</italic><sup>+</sup> = <italic>g</italic><sup>+</sup> − <italic>o</italic>(1 − <italic>g</italic><sup>+</sup>)/(1 − <italic>y</italic>) and <italic>G</italic><sup>−</sup> = −<italic>σ</italic>(1 − <italic>e</italic><sup>-λH<sub>max</sub></sup>)/(1 − <italic>y</italic>). <italic>H</italic><sub>max</sub> is the horizon of the agent i.e. the maximum time the agent is allowed to search, and after which the search is considered failed. Note that agents starting closer to the target receive larger rewards purely because of their initial position. To monitor performance independently on the starting location, we introduce the inverse time to reach the source relative to the shortest-path time from the same initial location, which goes from 0 for failing agents to 1 for ideal agents 〈<italic>τ</italic><sub>min</sub>/<italic>τ</italic>〉, independently on their starting location. Note that this is not the quantity that is optimized for. One may specifically target this perfomance metrics, which is agnostic on the duration ofan agent’s path, by discounting proportionally to <italic>t/τ</italic><sub>min</sub>.</p>
<p>All four measures of performance plateau to a maximum, suggesting learning has achieved a nearly optimal policy (<xref ref-type="fig" rid="fig1">Figure 1D</xref>). Once training is completed, we simulate the trajectory of test-agents starting from any of the about 43 000 admissible locations within the plume and moving according to the optimal policy. Admissible locations are defined as any location where the odor is non-zero at least once within the entire simulation. We will recapitulate performance with the cumulative reward <italic>G</italic> averaged over the test-agents and dissect it into speed <italic>g</italic><sup>+</sup>, convergence <italic>f</italic><sup>+</sup> and relative time 〈<italic>t</italic><sub>min</sub>/<italic>τ</italic>〉.</p>
</sec>
</sec>
<sec id="s2-5">
<title>Optimal memory</title>
<fig id="fig2" position="float" fig-type="figure">
<label>Figure 2.</label>
<caption><title>The optimal memory <italic>T</italic><sup>*</sup>.</title>
<p>(A) Four measures of performance as a function of memory with backtracking recovery (solid line) show that the optimal memory <italic>T</italic><sup>*</sup> = 20 maximizes average performance and minimizes standard deviation, except for the normalized time. Top: Averages computed over 10 realizations of test trajectories starting from 43000 initial positions (dash: results with adaptive memory). Bottom: standard deviation of the mean performance metrics for each initial condition (see Materials and Methods). (B) Average number of times agents encounter the void state along their path, 〈<italic>N</italic><sub>∅</sub>〉, as a function of memory (top);cumulative average reward 〈<italic>G</italic>〉 is inversely correlated to 〈<italic>N<sub>∅</sub></italic>〉 (bottom), hence the optimal memory minimizes encounters with the void. (C) Colormaps: Probability that agents at different spatial locations are in the void state at any point in time, starting the search form anywhere in the plume and representative trajectory of a successful searcher (green solid line) with memory <italic>T</italic> =1, <italic>T</italic> = 20, <italic>T</italic> = 50 (left to right). At the optimal memory agents in the void state are concentrated near the edge of the plume. Agents with shorter memories encounter voids throughout the plume;agents with longer memories encounter more voids outside of the plume as they delay recovery. In all panels, shades are ± standard deviation.</p></caption>
<graphic xlink:href="2404.17495v2_fig2.tif" mime-subtype="tif" mimetype="image"/>
</fig>
<fig id="fig2s1" position="float" fig-type="figure">
<label>Figure 2—figure supplement 1.</label>
<caption><title>The role of temporal memory with Brownian recovery strategy (same as main <xref ref-type="fig" rid="fig2">Figure 2A</xref>).</title>
<p>(A)Total cumulative reward (top left) and standard deviation (top right) as a function of memory showing an optimal memory <italic>T</italic><sup>*</sup> = 3 for the Brownian agent. Other measures of performance with their standard deviations show the same optimal memory (bottom). The trade-off between long and short memories discussed in the main text holds, but here exiting the plume is much more detrimental because regaining position within the plume by Brownian motion is much lengthier. (B) As for the Backtracking agent, the optimal memory corresponds minimizes the number of times the agent encounters the void state.</p></caption>
<graphic xlink:href="2404.17495v2_fig6.tif" mime-subtype="tif" mimetype="image"/>
</fig>
<p>By repeating training using different values of <italic>T</italic> we find that performance depends on memory and an optimal memory <italic>T</italic><sup>*</sup> exists (<xref ref-type="fig" rid="fig2">Figure 2A</xref>). Why is there an optimal memory? The shortest memory <italic>T</italic> = 1 corresponds to instantaneous olfactory states: the instantaneous contour maps of the olfactory states are convoluted and the void state is pervasive (<xref ref-type="fig" rid="fig2">Figure 2C</xref>, top). As a consequence, agents often activate recovery even when they are within the plume, the policy almost always leads to the source (<italic>f</italic><sup>+</sup> = 79% ± 13%) but follows lengthy convoluted paths (<italic>τ</italic><sub>min</sub>/<italic>τ</italic> = 0.14±0.05, <xref ref-type="fig" rid="fig2">Figure 2C</xref>, bottom). As memory increases, the olfactory states become smoother and agents encounter less voids (<xref ref-type="fig" rid="fig2">Figure 2C</xref>, center), perform straighter trajectories (<italic>τ</italic><sub>min</sub>/<italic>τ</italic> = 0.5±0.3) and reach the source reliably (<italic>τ</italic><sup>+</sup> = 95%±8%), <xref ref-type="fig" rid="fig2">Figure 2A</xref>, bottom. Further increasing memory leads to even less voids within the plume and even smoother olfactory states. However - perhaps surprisingly - performance does not further improve but slightly decreases (at <italic>T</italic> = 50, <italic>f</italic><sup>+</sup> = 94% ± 8% and <italic>τ</italic><sub>min</sub>/<italic>τ</italic> = 0.38 ± 0.36). A long memory is deleterious because it delays recovery from accidentally exiting the plume, thus increases the number of voids <italic>outside</italic> of the plume (<xref ref-type="fig" rid="fig2">Figure 2C</xref>, bottom). Indeed, agents often leave the plume accidentally as they measure their olfactory state <italic>while they move</italic>. They receive no warning, but realize their mistake after <italic>T</italic> steps, when they enter the void state and activate recovery to re-enter the plume. The delay is linear with memory when agents recover by backtracking, but it depends on the recovery strategy (see Materials and Methods and <xref ref-type="fig" rid="fig2s1">Figure 2-figure supplement 1</xref>). Thus short memories increase time in void <italic>within</italic> the plume, whereas long memories increase time in void <italic>outside</italic> the plume: the optimal memory minimizes the overall chances to experience the void (<xref ref-type="fig" rid="fig2">Figure 2B</xref>). Intuitively, <italic>T<sup>*</sup></italic> should match the typical duration <italic>τ<sub>b</sub></italic> of blanks encountered within the plume, so that voids within the plume are effectively ignored without delaying recovery unnecessarily. Consistently, 〈<italic>τ<sub>b</sub></italic>〉 averaged across all locations and times within the plume is 〈<italic>τ<sub>b</sub></italic>〉 = 9.97 ± 41.16, comparable with the optimal memory <italic>T<sup>*</sup></italic> (<xref ref-type="fig" rid="fig2">Figure 2A</xref>).</p>
</sec>
<sec id="s2-6">
<title>Adaptive memory</title>
<p>There is no way to select the optimal memory <italic>T</italic><sup>*</sup> without comparing several agents or relying on prior information on the blank durations. In order to avoid prior information, we venture to define memory adaptively along each agent’s path, using the intuition outlined above. We define a buffer memory <italic>T<sub>b</sub></italic>, and let the agent respond to a sensing window <italic>T &lt; T<sub>b</sub></italic>. Ideally we would like to set <italic>T</italic> ~ 〈<italic>τ<sub>b</sub></italic>〉. With this choice, blanks shorter than the average blank are ignored, as they are expected within the plume, whereas blanks longer than average initiate recovery, as they signal that the agent exited the plume. However, agents do not have access to 〈<italic>r<sub>b</sub></italic>〉 hence we set <inline-formula id="ID3">
<alternatives>
<mml:math display="inline" id="I3"><mml:mi>T</mml:mi><mml:mo>=</mml:mo><mml:msubsup><mml:mi>τ</mml:mi><mml:mi>b</mml:mi><mml:mo>−</mml:mo></mml:msubsup></mml:math>
<inline-graphic xlink:href="2404.17495v2_ieq3.tif" mime-subtype="tif" mimetype="image"/></alternatives>
</inline-formula>, where <inline-formula id="ID4">
<alternatives>
<mml:math display="inline" id="I4"><mml:mi>T</mml:mi><mml:mo>=</mml:mo><mml:msubsup><mml:mi>τ</mml:mi><mml:mi>b</mml:mi><mml:mo>−</mml:mo></mml:msubsup></mml:math>
<inline-graphic xlink:href="2404.17495v2_ieq4.tif" mime-subtype="tif" mimetype="image"/></alternatives>
</inline-formula> is the most recent blank experienced by the agent. With this choice, the sensing memory <italic>T</italic> fluctuates considerably along an agent’s path, due to turbulence (<xref ref-type="bibr" rid="c19">Celani et al. (2014)</xref> and <xref ref-type="fig" rid="fig3">Figure 3A-B</xref>). Note that blanks are estimated along paths, thus the statistics of <italic>T</italic> only qualitatively matches the Eulerian statistics of <italic>τ<sub>b</sub></italic>. Despite the fluctuations, performance using the adaptive memory nears performance with the optimal memory (<xref ref-type="fig" rid="fig3">Figure 3C</xref>). This result confirms our intuition that memory should match the blank time. The advantage of the adaptive memory is that it relies solely on experience, with no prior information whatsoever. This is unlike <italic>T</italic><sup>*</sup> which can only be selected using prior information, with no guarantee of generalization to other plumes.</p>
</sec>
<sec id="s2-7">
<title>Learning to recover</title>
<p>So far, our agents combine a learned policy from non-void states to a heuristics from the void state, which we called the recovery strategy. We have considered a biologically-inspired heuristics where searchers make it back to locations within the plume by retracing their path backward. To further strip the algorithm of heuristics, we ask whether the recovery strategy may be learned, rather than fixed a priori. To this end, we split the void state in many states, labeled with the time elapsed since first entering the void. We pick 50 void states, as less than 50 void states results in no convergence, and states above 50 are useless because rarely visited. The counter is reset to 0 whenever the searcher detects the odor. The definition of the 15 non-void states <italic>o</italic><sub>1</sub>,…, <italic>o</italic><sub>15</sub> remains unaltered. Interestingly, with this added degree of freedom, the agent learns an even better recovery strategy as reflected by all our measures of performance <xref ref-type="fig" rid="fig3">Figure 3D</xref>. Note that the learned recovery strategy resembles the casting behavior observed in flying insects <xref ref-type="bibr" rid="c20">David et al. (1983)</xref>, as discussed below. In fact, insects deploy a range of recovery strategies depending on locomotor mode and environment. To corroborate these results, we compare performance using two additional biologically-inspired recovery strategies, i.e. circling (observed in windless environments <xref ref-type="bibr" rid="c63">Stupski and van Breugel (2024)</xref>), and cast &amp; surge <xref ref-type="bibr" rid="c20">David et al. (1983)</xref> as well as a Brownian recovery which does not have a direct biological relevance but represents a simple computational benchmark. The learned recovery outperforms all heuristic recoveries, as seen by the cumulative reward <italic>G</italic> (<xref ref-type="fig" rid="fig3">Figure 3D</xref>). Circling is the second best recovery and shortly follows the learned recovery. Circling achieves nearly optimal performance by further decreasing failures (metrics <italic>f</italic><sup>+</sup>), but slowing down (metrics <italic>g</italic><sup>+</sup> and <italic>τ<sub>min</sub>/τ</italic>).</p>
<fig id="fig3" position="float" fig-type="figure">
<label>Figure 3.</label>
<caption><title>The adaptive memory approximates the duration of the blank dictated by physics and it is an efficient heuristics, especially when coupled with a learned recovery strategy.</title>
<p>(A) Top to bottom: Colormaps of the Eulerian average blank time <italic>τ<sub>b</sub></italic>; average sensing memory <italic>T</italic>; standard deviation of Eulerian blank time and of sensing memory. The sensing memory statistics is computed over all agents that are located at each discrete cell, at any point in time. (B) Probability distribution of <italic>τ<sub>b</sub></italic> across all spatial locations and times (black) and of <italic>T</italic> across all agents at all times (gray). (C) Performance with the adaptive memory nears performance of the optimal fixed memory, here shown for backtracking; similar results apply to the Brownian recovery (<xref ref-type="fig" rid="fig3s2">Figure 3-figure supplement 2</xref>). (D) Comparison of five recovery strategies with adaptive memory: The learned recovery with adaptive memory outperforms all fixed and adaptive memory agents. In (C) and (D) dark squares mark the mean, and light rectangles mark ± standard deviation. <italic>f</italic><sup>+</sup> is defined as the fraction of agents that reach the target at test, hence has no standard deviation.</p></caption>
<graphic xlink:href="2404.17495v2_fig3.tif" mime-subtype="tif" mimetype="image"/>
</fig>
<fig id="fig3s2" position="float" fig-type="figure">
<label>Figure 3—figure supplement 2.</label>
<caption><p>All four measures of performance across agents with fixed memory and Backtracking vs Brownian recovery (green and red respectively, unframed boxes) and with adaptive memory for Backtracking, Brownian and Learned recovery (green, red and blue respectively, framed boxes)</p></caption>
<graphic xlink:href="2404.17495v2_fig7.tif" mime-subtype="tif" mimetype="image"/>
</fig>
<sec id="s2-7-1">
<title>Characterization of the optimal policies</title>
<fig id="fig4" position="float" fig-type="figure">
<label>Figure 4.</label>
<caption><title>Optimal policies with adaptive memory for different recovery strategies: backtracking (green), Brownian (red) and learned (blue).</title>
<p>For each recovery, we show the spatial distribution of the olfactory states (top); the policy (center) and the state occupancy (bottom) for non-void states (left) <italic>us</italic> the void state <italic>π</italic><sup>*</sup>(<italic>a</italic>|∅)(right). Spatial distribution: probability that an agent at a given position is in any non-void olfactory state (left) or in the void state (right), color-coded from yellow to blue. Policy: actions learned in the non-void states ∑<sub><italic>o≠∅</italic></sub> <italic>n</italic><sub>0</sub>π<sub>*</sub>(<italic>a|0</italic>), weighted on their occupancy <italic>n<sub>0</sub></italic> (left, arrows proportional to the frequency of the corresponding action) and schematic view of recovery policy in the void state (right). State occupancy: fraction of agents that is in any of the 15 non-void states (left) or in the void state (right) at any point in space and time. Occupancy is proportional to the radius of the corresponding circle. The position of the circle identifies the olfactory state (rows and columns indicate the discrete intensity and intermittency respectively). All statistics is computed over 43000 trajectories, starting from any location within the plume.</p></caption>
<graphic xlink:href="2404.17495v2_fig4.tif" mime-subtype="tif" mimetype="image"/>
</fig>
<fig id="fig4s3" position="float" fig-type="figure">
<label>Figure 4—figure supplement 3.</label>
<caption><p>Optimal policies for different recovery strategies and adaptive memory. From left to right: results for backtracking (green), Brownian (red) and learned (blue) recovery strategies. Top: probability that an agent in a given olfactory state is at a specific spatial location color-coded from yellow to blue. Rows and columns indicate the olfactory state;the void state is in the lower right corner. Arrows indicate the optimal action from that state. Bottom: Circles represent occupancy of each state, olfactory states are arranged as in the top panel. All statistics is computed over 43000 trajectories, starting from any location within the plume.</p></caption>
<graphic xlink:href="2404.17495v2_fig8.tif" mime-subtype="tif" mimetype="image"/>
</fig>
<fig id="fig4s4" position="float" fig-type="figure">
<label>Figure 4—figure supplement 4.</label>
<caption><p>The learned recovery resembles the cast and surge observed in animals, with an initial surge of 5±2 steps and a subsequent motion crosswind starting from either side of the centerline and overshooting to the other side.</p></caption>
<graphic xlink:href="2404.17495v2_fig9.tif" mime-subtype="tif" mimetype="image"/>
</fig>
<p>To understand how different recoveries affect the agent’s behavior, we characterize the optimal policies obtained using the three recovery strategies. We visualize the probability to encounter each of the 16 olfactory states, or occupancy (circles in <xref ref-type="fig" rid="fig4">Figure 4</xref>), and the spatial distribution of the olfactory states. In the void state, the agent activates the recovery strategy. Recovery from the void state affects non-void olfactory states as well: their occupancy, their spatial distribution, and the action they elicit (<xref ref-type="fig" rid="fig4">Figure 4</xref> and <xref ref-type="fig" rid="fig4s3">Figure 4-figure supplement 3</xref>). This is because the agent computes its olfactory state online, according to its prior history which is affected by encounters with the void state. However, for all recoveries, non-void states are mostly encountered within the plume and largely elicit upwind motion (<xref ref-type="fig" rid="fig4">Figure 4</xref>, top, center). Thus macroscopically, all agents learn to surge upwind when they detect any odor within their memory, and to recover when their memory is empty. This suggests a considerable level of redundancy which may be leveraged to reduce the number of olfactory states, thus the computational cost. Reducing the number of non-empty olfactory states drastically to just 1 does indeed show degraded performance (see <xref ref-type="fig" rid="fig5s5">Figure 5 - figure supplement 5</xref>). A systematic optimization of odor representation requires a considerable reformulation of the algorithm which is beyond the scope of the current work. Note that, exclusively for the learned recovery, the optimal policy is enriched in actions downwind to avoid overshooting the source. Indeed, from positions beyond the source, the learned strategy is unable to recover the plume as it mostly casts sideways, with little to no downwind action. Intuitively, the precise locations where agents move downwind may be crucial to efficiently avoid overshooting. Thus the policy may depend on specific details of the odor plume, consistent with poorer generalization of the learned recovery (discussed next). We expect that in conditions where overshooting the source is more prominent, downwind motion may emerge as an effective component of the recovery strategy, similar to observations in insects (e.g. <xref ref-type="bibr" rid="c70">Wolf and Wehner (2000)</xref>; <xref ref-type="bibr" rid="c5">Alvarez-Salvado et al. (2018)</xref>.</p>
<table-wrap id="tbl1" position="float" orientation="portrait">
<label>Table 1.</label>
<caption><p>Parameters of the learned recovery, statistics over 20 independent trainings.</p></caption>
<alternatives>
<graphic xlink:href="2404.17495v2_tbl1.tif" mime-subtype="tif" mimetype="image"/>
<table frame="below" rules="none">
<tbody>
<tr>
<td align="left" valign="top">Initial surge upwind</td>
<td align="left" valign="top">6±2</td>
</tr>
<tr>
<td align="left" valign="top">Total steps upwind</td>
<td align="left" valign="top">15±2</td>
</tr>
<tr>
<td align="left" valign="top">Total steps downwind</td>
<td align="left" valign="top">1.3 ± 1.4</td>
</tr>
<tr>
<td align="left" valign="top">Total steps to the right</td>
<td align="left" valign="top">15±3</td>
</tr>
<tr>
<td align="left" valign="top">Total steps to the left</td>
<td align="left" valign="top">18±6</td>
</tr>
</tbody>
</table>
</alternatives>
</table-wrap>
<p>The void state shows the most relevant differences: for both heuristic recoveries, 40% or more of the agents are in the void state and they are spatially spread out. In contrast, in the case of learned recovery, the optimal policy limits occurrence of the void state to 26% of the agents, confined to a narrow band near the edge of the plume. From these locations, the agents quickly recover the plume, explaining the boost in performance discussed above. In all distinct trainings of the agents with learned-recovery, we observed that the trajectories in the void start with an initial surge of 6±2 steps; continue with either crosswind direction and then switch to the other side, with little to no downwind actions (see <xref ref-type="fig" rid="fig4s4">Figure 4 - Figure Supplement 4</xref> and <xref ref-type="table" rid="tbl1">Table 1</xref>). This recovery thus mixes aspects of exploitation (surge) to aspects of exploration (cast): we defer a more in-depth analysis that disentangles these two aspects elsewhere.</p>
</sec>
</sec>
<sec id="s2-8">
<title>Tuning for adaptation to different environments</title>
<p>Finally, we test performance of the trained agents on six environments, characterized by distinct fluid flows and odor plumes (<xref ref-type="fig" rid="fig5">Figure 5</xref> and Materials and Methods). Environment 1 is the native environment, where the agents were originally trained; Environment 2 is obtained by increasing the threshold of detection, which makes the signals considerably more sparse with longer blanks. Environments 3 and 4 are closer to the lower surface of the simulated domain, where the plume is smaller and fluctuates less. Environment 5 is a similar geometry, but obtained for a smaller Reynolds number and a different way to generate turbulence. Finally Environment 6 has an even larger Reynolds number, a longer domain and a smaller source, which creates an even more dramatically sparse signal. Environments 1, 2, 5 and 6 are representative of conditions encountered far from a substrate, e.g. by flying or swimming organisms. Environments 3 and 4 represent odor near surfaces relevant to terrestrial or benthic navigation (but not directly applicable to trail tracking, where odor traces <italic>on</italic> the substrate is tracked). Note that we consider a Schmidt number Sc = 1 appropriate for odors in air but not in water. However, we expect a weak dependence on the Schmidt number as the Batchelor and Kolmogorov scales are below the size of the source and we are interested in the large scale statistics <xref ref-type="bibr" rid="c27">Falkovich et al. (2001)</xref>; <xref ref-type="bibr" rid="c19">Celani et al. (2014)</xref>; <xref ref-type="bibr" rid="c24">Duplat et al. (2010)</xref>.</p>
<p>We consider agents with adaptive memory and compare the five recovery strategies discussed above - backtracking, learned, circling, cast &amp; surge and Brownian, see <xref ref-type="fig" rid="fig5">Figure 5B</xref>. Comparing performance across environments we find that: <italic>(i)</italic> although performance is degraded when testing in non native environments, backtracking, learned and circling recoveries with adaptive memory are still extremely likely to find the source. The upshot of generalization is that agents may navigate distinct turbulent plumes using a baseline strategy learned in a specific plume. Importantly, as most of these agents still do reach the source, fine-tuning may enable efficient adaptation to different environments. Further work is needed to establish how much fine-tuning is needed to fully adapt to different environments. <italic>(ii)</italic> Brownian and cast&amp; surge recoveries have lowest performance and generalization across all environments. Cast &amp; surge is often used as a comparison <xref ref-type="bibr" rid="c66">Verano et al. (2023)</xref> and can be extremely effective: our results do not contradict the literature, but simply showcase that cast width and surge length need to be carefully defined. <italic>(iii)</italic> The cumulative reward <italic>G</italic> shows that the learned recovery is the best at generalizing to environments 2, 5 and 6. Particularly, in the most intermittent Environment 6 a striking 91% of agents succeeds in finding the source, with trajectories less the twice as long as the shortest path to the source. <italic>(iv)</italic> Circling is the best at generalizing to environments 3 and 4, representative of less intermittent regions near the substrate. As observed for the native environment, circling favors success rate (metrics <italic>f</italic><sup>+</sup>) against speed (metrics <italic>g</italic><sup>+</sup> and <italic>τ</italic><sub>min</sub>/<italic>τ</italic>).</p>
<fig id="fig5" position="float" fig-type="figure">
<label>Figure 5.</label>
<caption><title>Generalization to statistically different environments.</title>
<p>(A) Snapshots of odor concentration normalized with concentration at the source, colorcoded from blue (0) to yellow (1) for environment 1 to 6 as labeled. Environment 1<sup>*</sup> is the native environment where all agents are trained. (B) Performance for the five recovery strategies brownian (red), backtracking (green), learned (blue), circling (orange) and zigzag (purple) with adaptive memory, trained on the native environment and tested across all environments 1 to 6. Four measures of performance defined in the main text are shown. Dark squares mark the mean, and empty rectangles ± standard deviation. No standard deviation is shown for the <italic>f</italic><sup>+</sup> measure for the learned, circling and zigzag recoveries as these strategies are deterministic (see Materials and Methods).</p></caption>
<graphic xlink:href="2404.17495v2_fig5.tif" mime-subtype="tif" mimetype="image"/>
</fig>
<fig id="fig5s5" position="float" fig-type="figure">
<label>Figure 5—figure supplement 5.</label>
<caption><p>The learned recovery with adaptive memory and a single nonempty olfactory state (empty circles) displays degraded performance with respect to the full model (full circles).</p></caption>
<graphic xlink:href="2404.17495v2_fig10.tif" mime-subtype="tif" mimetype="image"/>
</fig>
</sec>
</sec>
<sec id="s3" sec-type="discussion">
<title>Discussion</title>
<p>In this work, we showed that agents exposed to a turbulent plume learn to associate salient features of the odor time trace - the olfactory state - to an optimal move that guides them to the odor source. The upshot of responding solely to odor is that the agent does not navigate based on <italic>where</italic> it believes the target is and thus needs no map of space nor prior information about the odor plume, which avoids considerable computational burden. The only spatial awareness needed to implement this algorithm is the ability to orient motion relative to the mean flow which is assumed known. In reality animals cannot measure the mean flow but rely on local measures of flow speed, using e.g. antennas for insects <xref ref-type="bibr" rid="c54">Reynolds et al. (2010)</xref>, whiskers for rodents <xref ref-type="bibr" rid="c72">Yu et al. (2016)</xref> or the lateral line for marine organisms <xref ref-type="bibr" rid="c42">Liao (2006)</xref>. Further work is needed to bridge the gap with our simplified setting. On the flip side, in our stimulus-response algorithm, agents need to start from within the plume, however sparse and fragmented. Indeed, far enough from the source, Q-learning agents are mostly in the void state and they can only recover the plume if they have previously detected the odor or are right outside the plume. In contrast, agents using a map of space can navigate from larger distances than are reachable by responding directly to odor cues. Indeed, in the map-based POMDP setting, absence of odor detection is still informative and it enables agents to first find the plume, and then refine the search to localize the target within the plume <xref ref-type="bibr" rid="c56">Rigolli et al. (2022b)</xref>; <xref ref-type="bibr" rid="c44">Loisy and Heinonen (2023a)</xref>.</p>
<p>We show that because the odor signal within a turbulent plume constantly switches on and off, navigation must handle both absence and presence of odor stimuli. We address this fundamental issue by alternating between two distinct strategies: <italic>(i)</italic> Prolonged absence of odor prompts entry in the void state and triggers a recovery strategy to make contact with the plume again. We explored four heuristic recoveries and found that spiralling around the location where the agent last detected odor is the most efficient heuristics, which privileges reliable success rather than speed. An even more efficient recovery can be learned that resembles cross-wind casting and limits the void state to a narrow region right outside of the plume. Casting is a well-studied computational strategy <xref ref-type="bibr" rid="c8">Baker (1990)</xref>; <xref ref-type="bibr" rid="c9">Balkovsky and I. (2002)</xref> also observed in animal behavior, most famously in flying insects <xref ref-type="bibr" rid="c20">David et al. (1983)</xref>. Intriguingly, cast and surge also emerges in algorithms making use of a model of the odor, whether for Bayesian updates or for policy optimization <xref ref-type="bibr" rid="c67">Vergassola et al. (2007)</xref>; <xref ref-type="bibr" rid="c56">Rigolli et al. (2022b)</xref>; <xref ref-type="bibr" rid="c66">Verano et al. (2023)</xref>. Whether natural casting behavior is learned, as in Q-learning, or is hard-wired in a model of the odor plume remains a fascinating question for further research. Clearly, the width of the casts and length of the surges are of crucial importance: a hard-wired cast and surge recovery with arbitrary parameters shows poor performance. <italic>(ii)</italic> Odor detections prompt entry in non-void olfactory states, which predominantly elicit upwind surge. Blanks shorter than the sensing memory are ignored, i.e. agents do not enact recovery but respond to stimuli experienced prior to the short blank. The non-void olfactory states are crafted based on biologically-plausible features which have been shown to harness positional information. Further work may optimize these non-void olfactory states by feature engineering, e.g. testing different discretizations to reduce redundancy. A drastic reduction to a single non-void olfactory state degrades performance, suggesting screening a large library of features using supervised learning as in <xref ref-type="bibr" rid="c55">Rigolli et al. (2022a)</xref> may be used to potentially improve performance. This approach will provide a systematic ranking of the most efficient temporal features of odor time traces for navigation; however it will have to test different memories, discretizations and regression algorithms as well, making it cumbersome. Alternatively, feature engineering may be bypassed altogether by the use of recurrent neural networks (RNNs) <xref ref-type="bibr" rid="c62">Singh et al. (2023)</xref> or finite state controllers <xref ref-type="bibr" rid="c66">Verano et al. (2023)</xref>. These algorithms are appealing in that they bypass entirely the need to hand-craft explicit features of odor time traces. On the flip side, they provide no explicit handle at the odor features that drive behavior nor at the specific duration of the temporal memory and how it is related to the physics of the odor cues. Thus to extract these information extra work is needed to interrogate these algorithms. For example, principal component analysis in <xref ref-type="bibr" rid="c62">Singh et al. (2023)</xref> suggests the hidden state of trained agents correlates with biologically relevant variables, including head direction, odor concentration and time since last detection. Finally, a systematic comparison using a common dataset is needed to elucidate how other heuristic and normative model-free algorithms handle odor presence <italic>vs</italic> odor absence.</p>
<p>To switch between the odor-driven strategy and the recovery strategy, we introduce a timescale <italic>T</italic>, which is an explicit form of temporal memory. <italic>T</italic> delimits a sensing window extending in the recent past, prior to the present time. All odor stimuli experienced within the sensing window affect the current response. By using fixed memories of different duration, we demonstrate that an optimal memory exists and that the optimal memory minimizes the occurrence of the void state. On the one hand, long memories are detrimental because they delay recovery from accidentally exiting the plume. On the other hand, short memories are detrimental because they trigger recovery unnecessarily, i.e. even for blanks typically experienced within the turbulent plume. The optimal memory thus matches the typical duration of the blanks. To avoid using prior information on the statistics of the odor, we propose a simple heuristics setting memory adaptively equal to the most recent blank experienced along the path. The adaptive memory nears optimal performance despite dramatic fluctuations dictated by turbulence. Success of the heuristics suggests that a more accurate estimate of the future blank time may enable an even better adaptive memory; further work is needed to corroborate this idea.</p>
<p>Thus in Q-learning, memory is a temporal window matching odor blanks and distinguishing whether agents are in or out of the plume. The role of memory for olfactory search has been recently discussed in ref. <xref ref-type="bibr" rid="c66">Verano et al. (2023)</xref>. In POMDPs, memory is stored in a detailed belief of agent position relative to the source. In finite state controllers, memory denotes an internal state of the agent and was linked to a coarse grained belief of the searcher being within or outside of the plume, similar to our findings. In recurrent neural networks memory is stored in the learned weights. A quantitative relationship between these different forms of memory and their connection to spatial perception remains to be understood.</p>
<p>We conclude by listing a series of experiments to test these ideas in living systems. First, olfactory search in living systems displays memory (<xref ref-type="bibr" rid="c66">Verano et al. (2023)</xref>; <xref ref-type="bibr" rid="c7">Baker et al. (2018)</xref> and refs. therein). In insects, temporal scales can be measured associated to memory. Indeed, for flying insects loss of contact with a pheromone plume triggers crosswind casting and sometimes even downwind displacement <xref ref-type="bibr" rid="c15">Cardé (2021)</xref>; <xref ref-type="bibr" rid="c40">Kuenen and Cardé (1994)</xref>. Interestingly, the onset of casting is delayed with respect to loss of contact with the plume <xref ref-type="bibr" rid="c40">Kuenen and Cardé (1994)</xref>; <xref ref-type="bibr" rid="c14">van Breugel F and MH (2014)</xref>, but this delay is not understood. Similarly, an odor detection elicits upwind surges that can last several seconds <xref ref-type="bibr" rid="c37">Kathman et al. (2024)</xref>; <xref ref-type="bibr" rid="c5">Alvarez-Salvado et al. (2018)</xref>. In walking flies, the timing of previous odor encounters biases navigation <xref ref-type="bibr" rid="c23">Demir et al. (2020b)</xref>. (How) do these temporal timescales depend on the waiting times between previous detections? Using optogenetics <xref ref-type="bibr" rid="c28">Gepner et al. (2015)</xref>; <xref ref-type="bibr" rid="c35">Hernandez-Nunez et al. (2015)</xref>; <xref ref-type="bibr" rid="c46">Matheson et al. (2022)</xref>; <xref ref-type="bibr" rid="c21">David Stupski and van Breugel (2024)</xref> or olfactory virtual reality with controlled odor delivery <xref ref-type="bibr" rid="c52">Radvansky and Dombeck (2018)</xref> experiments may measure memory as a function of the full history of odor traces. For insects, one may monitor memory by tracking the onset of cross wind casting with respect to the loss of the plume. More in general, a temporal memory may be defined by monitoring how far back in the past should two odor traces be identical in order to elicit the same repertoire of motor controls. Second, our algorithm learns a stimulus-response strategy that relies solely on odor cues. The price to pay is that the agent must follow the ups and downs of the odor trace in order to compute averages and recognize blanks. A systematic study may use our algorithm to test the requirements of fidelity of this temporal representation, and how it depends on turbulence. How does turbulence affect the fidelity of odor temporal representation in living systems? Crustaceans provide excellent model system to ask this question, as they are known to use bursting olfactory receptor neurons to encode temporal information from olfactory scenes <xref ref-type="bibr" rid="c12">Bobkov and Ache (2007)</xref>; <xref ref-type="bibr" rid="c1">Ache et al. (2016)</xref>. Temporal information is also encoded in the olfactory bulb of mammals <xref ref-type="bibr" rid="c16">Carey et al. (2009)</xref>; <xref ref-type="bibr" rid="c2">Ackels et al. (2021a)</xref>. Organisms with chemo-tactile systems like the octopus <xref ref-type="bibr" rid="c4">Allard et al. (2023)</xref> may serve as a comparative model, to ask whether touch-chemosensation displays a sloppier temporal response, reflecting that surface-bound stimuli are not intermittent.</p>
<p>Third, our Q-learning algorithm requires the agent to receive olfactory information, thus start near or within the odor plume. In contrast, algorithms making use of a spatial map and prior information on the odor plume may first search for the plume (in conditions of near zero information) and then search the target within the plume <xref ref-type="bibr" rid="c56">Rigolli et al. (2022b)</xref>; <xref ref-type="bibr" rid="c44">Loisy and Heinonen (2023a)</xref>; <xref ref-type="bibr" rid="c67">Vergassola et al. (2007)</xref>. Animals are known to use prior information to home into regions of space where the target is more likely to be found; but they can switch to navigation in response to odor (see e.g. <xref ref-type="bibr" rid="c15">Cardé (2021)</xref>; <xref ref-type="bibr" rid="c59">Schal (1982)</xref>; <xref ref-type="bibr" rid="c30">Gire et al. (2016)</xref>; <xref ref-type="bibr" rid="c7">Baker et al. (2018)</xref>). What triggers the switch from navigation driven by spatial perception to navigation driven by odor? For mice, the need for spatial perception may be tested indirectly by comparing paths in light <italic>vs</italic> dark, noting that neuronal place fields, that mediate spatial perception, are better stabilized by vision than olfaction <xref ref-type="bibr" rid="c58">Save et al. (2000)</xref>; <xref ref-type="bibr" rid="c73">Zhang and D (2015)</xref>. Thus in the light, animals have the ability to implement both map-less and map-based algorithms, whereas in the dark they are expected to more heavily rely on mapless algorithms. To make sure animals start searching for the odor target even before sensing odor, operant conditioning can be deployed so that animals associate an external cue (e.g. a sound) to the beginning of the task. Note that distinct species control locomotion differently and as a result trajectories are usually far more complex than a sequence of discrete steps on a checker board. Thus to compare algorithms to animal behavior a more detailed model of the specific motor controls is to be developed.</p>
<table-wrap id="tbl2" position="float" orientation="portrait">
<label>Table 2.</label>
<caption><p>Gridworld geometry. From Top: 2D size of the simulation, agents that leave the simulation box continue to receive negative reward and no odor; number of time stamps in the simulation, beyond which simulations are looped; number of actions per time stamp; speed of the agent; noise level below which odor is not detected; location of the source on the grid. See <xref ref-type="table" rid="tbl3">Table 3</xref> for the values of the grid size Δ<italic>x</italic> and time stamps at which odor snapshots are saved.</p></caption>
<alternatives>
<graphic xlink:href="2404.17495v2_tbl2.tif" mime-subtype="tif" mimetype="image"/>
<table frame="below" rules="groups">
<thead>
<tr>
<th align="left" valign="top"/>
<th align="left" valign="top">Simulation 1</th>
<th align="left" valign="top">Simulation 2</th>
<th align="left" valign="top">Simulation 3</th>
</tr>
</thead>
<tbody>
<tr>
<td align="left" valign="top">2D simulation grid</td>
<td align="left" valign="top">1225 × 280</td>
<td align="left" valign="top">1024 × 256</td>
<td align="left" valign="top">2000 × 500</td>
</tr>
<tr>
<td align="left" valign="top"># time stamps</td>
<td align="left" valign="top">2598</td>
<td align="left" valign="top">5000</td>
<td align="left" valign="top">5000</td>
</tr>
<tr>
<td align="left" valign="top"># decisions per time stamp</td>
<td align="left" valign="top">1</td>
<td align="left" valign="top">1</td>
<td align="left" valign="top">1</td>
</tr>
<tr>
<td align="left" valign="top">Speed (grid points / time stamp)</td>
<td align="left" valign="top">10</td>
<td align="left" valign="top">10</td>
<td align="left" valign="top">10</td>
</tr>
<tr>
<td align="left" valign="top"><italic>n</italic><sub>|v|</sub></td>
<td align="left" valign="top">3 × 10<sup>−6</sup></td>
<td align="left" valign="top">3 × 10<sup>−6</sup></td>
<td align="left" valign="top">10<sup>−4</sup></td>
</tr>
<tr>
<td align="left" valign="top">Source location</td>
<td align="left" valign="top">(20, 142)</td>
<td align="left" valign="top">(128, 128)</td>
<td align="left" valign="top">(150, 250)</td>
</tr>
</tbody>
</table>
</alternatives>
</table-wrap>
<p>The reinforcement learning view of olfactory navigation offers an exciting opportunity to probe how living systems interact with the environment to accomplish complex real-world tasks affected by uncertainty. Coupling time varying odor stimuli with spatial perception is an instance of the broader question asking how animals combine prior knowledge regarding the environment with reaction to sensory stimuli. We hope that our work will spark further progress into connecting these broader questions to the physics of fluids.</p>
</sec>
<sec id="s4" sec-type="methods|materials">
<title>Methods and materials</title>
<sec id="s4-1">
<title>Data description</title>
<p>The data we used to train the agents (Environment 1) is a set of 2598 matrices <inline-formula id="ID5">
<alternatives>
<mml:math display="inline" id="I5"><mml:msubsup><mml:mrow><mml:mo>{</mml:mo> <mml:mrow><mml:msub><mml:mi>D</mml:mi><mml:mi>t</mml:mi></mml:msub></mml:mrow> <mml:mo>}</mml:mo></mml:mrow><mml:mrow><mml:mi>t</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mn>2598</mml:mn></mml:mrow></mml:msubsup></mml:math>
<inline-graphic xlink:href="2404.17495v2_ieq5.tif" mime-subtype="tif" mimetype="image"/></alternatives>
</inline-formula>. Every matrix <italic>D<sub>t</sub></italic> ∈ ℝ<sup>1225×280</sup> contains the odor intensity in every position (<italic>i,j</italic>) i.e. (<italic>D<sub>t</sub></italic>)<sub><italic>i,j</italic></sub> represents the odor intensity in position (<italic>i, j</italic>) at time <italic>t</italic>. The source of odor is in position (20, 142) and, in order to simplify the training, we considered as terminal states every position in a circle centered in the source position and with radius 10 called <italic>source region</italic>. Data are obtained from a direct numerical simulation of the Navier-Stokes equations and the equations of transport of the odor. Environments 1 to 4 are derived from Simulation 1, a direct numerical simulation of a channel flow described in <xref ref-type="bibr" rid="c55">Rigolli et al. (2022a)</xref> and used to develop a POMDP algorithm in <xref ref-type="bibr" rid="c56">Rigolli et al. (2022b)</xref>, dataset available from <xref ref-type="bibr" rid="c57">Rigolli et al. (2022c)</xref>. The simulation represents a boundary layer matching the lowest ~1m of the atmosphere and with horizontal dimensions ~1.9×9.5 m and Reynolds number <italic>Re<sub>»</sub></italic> ~ 1400 (on the low side of atmospheric Reynolds typically ranging from 1000 to 10000 <xref ref-type="bibr" rid="c31">Gulitski et al. (2007)</xref>). Odor snapshots are extracted at a height ~ .5 <italic>m</italic> from the ground for Environments 1 and 2 and ~ .01 <italic>m</italic> for Environments 3 and 4 respectively. We preprocess the data to zero every entry of these matrices when they are smaller than a <italic>noise level</italic> <italic>n</italic><sub>|v|</sub> := 3×10<sup>−6</sup> (or 0.13 % relative to concentration at the source). The noise level is increased to 0.22% in Environments 2 and 4. Data information are summarized in <xref ref-type="table" rid="tbl2">Table 2</xref> and <xref ref-type="table" rid="tbl3">3</xref>. Levels of intermittency in <xref ref-type="fig" rid="fig1">Figure 1</xref> show that only a thin core region has intermittency larger than 66%, whereas the most challenging regions at the edge of the plume have intermittency under 33%. For reference, experimental values of 25% to 20% were reported for a surrogate odor in the atmospheric boundary layer, along the centerline at 2 to 15 m from the source <xref ref-type="bibr" rid="c49">Murlis and Jones (1981)</xref>.</p>
<p>Environments 5 and 6 correspond to horizontal slices at mid height extracted from two additional simulations we performed to corroborate the results (Simulation 2 and 3). In Simulation 2, the odor is advected by a turbulent open channel flow, with three hemispherical obstacles placed on the ground close to the inlet to generate turbulence. The Navier-Stokes <xref ref-type="disp-formula" rid="FD1">equations (1)</xref> and advectiondiffusion equation for odor transport (2) are solved using a central second order finite difference scheme. The convective terms are discretized in time using an explicit Adams - Bashforth method; and the viscous and diffusion terms using an implicit Crank-Nicolson method <xref ref-type="bibr" rid="c68">Viola et al. (2020)</xref>. The code is written in Fortran and is GPU parallelized. The channel is divided into 1024 × 256 × 128 grid points along streamwise, spanwise and wall-normal directions respectively. The corresponding average spatial resolutions are A<italic>x</italic> = 5<italic>η</italic>, Δ<italic>y</italic> = 5<italic>η</italic>, Δ<italic>z</italic> = 4<italic>η</italic>, where <italic>η</italic> is the Kolmogorov length scale. Three hemispheres of radius 100<italic>η</italic> are placed at a distance of 250<italic>η</italic> from the inlet on the ground, equally spaced along the spanwise direction. The channel is forced using a constant pressure gradient. For the velocity field, we impose a no-slip boundary condition at the ground and on the obstacles (<italic><bold>u</bold></italic> = 0) and a free-slip boundary on top (<italic>u<sub>z</sub></italic> = 0, ∂<italic><sub>z</sub>u<sub>x</sub></italic> = <italic>∂<sub>z</sub>u<sub>y</sub></italic> = 0). The velocity field is periodic along the streamwise and spanwise directions. The bulk Reynolds number is 7800. For the odor field, we impose Dirichlet condition (<italic>c</italic> = 0) at the ground, on the obstacles and inlet, no-flux (<italic>∂<sub>z</sub>c</italic> = 0) on top, and outflow along other directions. Similar to the native environment, we choose the Schmidt number to be 1. The odor source is located downstream of the obstacle and centered at [640<italic>㦷</italic>, 640<italic>㦷</italic>, 256<italic>㦷</italic>] along streamwise, spanwise and wall-normal directions respectively. The odor source has a Gaussian profile with a standard deviation of 8 <italic>㦷</italic>.</p>
<p>Simulation 3 is similar to Simulation 2, albeit with a higher bulk Reynolds number of 17500. Here, the channel is divided into 2000 × 500 × 200 grid points and has an average spatial resolution of Δ<italic>x</italic> = Δ<italic>y</italic> = Δ<italic>z</italic> = 5.5<italic>η</italic>. The odor source has a Gaussian profile centered at [825<italic>η</italic>, 1375<italic>η</italic>, 550<italic>η</italic>] with a standard deviation of 3<italic>η</italic>. For Environments 5 and 6, noise level is 0.01% relative to concentration at the source. See Table fora summary of parameters and how they match the physical dimensions of the domain.</p>
<table-wrap id="tbl3" position="float" orientation="portrait">
<label>Table 3.</label>
<caption><p>Parameters of the simulations. From Left to Right: Simulation ID (1,2, 3);Length <italic>L</italic>, width <italic>W</italic>, height <italic>H</italic> of the computational domain;mean horizontal speed <italic>U<sub>b</sub></italic> = 〈<italic>u</italic>〉; Kolmogorov length scale <italic>η</italic> = (<italic>v</italic><sup>3</sup>/<italic>∊</italic>)<sup>1/4</sup> where <italic>v</italic> is the kinematic viscosity and <italic>∊</italic> is the energy dissipation rate;mean size of gridcell Δ<italic>x</italic>; Kolmogorov timescale <italic>τ</italic><sub><italic>η</italic></sub> = <italic>η</italic><sup>2</sup>/<italic>v</italic>; energy dissipation rate <italic>∊</italic> = <italic>v</italic>/2〈(<italic>∂u</italic><sub><italic>i</italic></sub>/<italic>∂x</italic><sub><italic>j</italic></sub> + <italic>∂u</italic><sub><italic>j</italic></sub>/<italic>dx</italic><sub><italic>i</italic></sub>)<sup>2</sup>〉; wall unit <italic>y</italic><sup>+</sup> = <italic>v</italic>/<italic>u</italic><sub><italic>τ</italic></sub> where <italic>u</italic><sub><italic>τ</italic></sub> is the friction velocity;bulk Reynolds number <italic>Re</italic><sub><italic>b</italic></sub> = <italic>U<sub>b</sub></italic>(<italic>H</italic>/2)/<italic>v</italic> based on the bulk speed <italic>U<sub>b</sub></italic> and half height;magnitude of velocity fluctuations <italic>u</italic><sup>′</sup> relative to the bulk speed;large eddy turnover time <italic>T</italic> = <italic>H</italic>/2<italic>u</italic><sup>′</sup>; <italic>ω</italic><sub>save</sub> frequency at which odor snapshots are saved ×<italic>τ</italic><sub><italic>η</italic></sub>. For each simulation, first row reports results in non dimensional units. Second and third rows provide an idea of how non-dimensional parameters match dimensional parameters in real flows in air and water, assuming the Kolmogorov length is 1.5 mm in air and 0.4 mm in water.</p></caption>
<alternatives>
<graphic xlink:href="2404.17495v2_tbl3.tif" mime-subtype="tif" mimetype="image"/>
<table frame="hsides" rules="groups">
<thead>
<tr>
<th align="left" valign="top">Sim ID</th>
<th align="center" valign="top"><italic>L</italic></th>
<th align="center" valign="top"><italic>W</italic></th>
<th align="center" valign="top"><italic>H</italic></th>
<th align="center" valign="top"><italic>U<sub>b</sub></italic></th>
<th align="center" valign="top"><italic>η</italic></th>
<th align="center" valign="top">Δ<italic>x</italic></th>
<th align="center" valign="top"><italic>τ<sub>η</sub></italic></th>
<th align="center" valign="top"><italic>∊</italic></th>
<th align="center" valign="top"><italic>y</italic><sup>+</sup></th>
<th align="center" valign="top">Re<sub><italic>b</italic></sub></th>
<th align="center" valign="top"><inline-formula id="ID6">
<alternatives>
<mml:math display="inline" id="I6"><mml:mfrac><mml:msup><mml:mi>u</mml:mi><mml:mo>′</mml:mo></mml:msup><mml:mrow><mml:msub><mml:mi>U</mml:mi><mml:mi>b</mml:mi></mml:msub></mml:mrow></mml:mfrac></mml:math>
<inline-graphic xlink:href="2404.17495v2_ieq6.tif" mime-subtype="tif" mimetype="image"/></alternatives>
</inline-formula></th>
<th align="center" valign="top"><italic>T</italic></th>
<th align="center" valign="top"><italic>ω</italic><sub>save</sub> × <italic>τ<sub>η</sub></italic></th>
</tr>
</thead>
<tbody>
<tr style="border-bottom: solid thin">
<td align="left" valign="top">1</td>
<td align="center" valign="top">40</td>
<td align="center" valign="top">8</td>
<td align="center" valign="top">4</td>
<td align="center" valign="top">23</td>
<td align="center" valign="top">0.006</td>
<td align="center" valign="top">0.025</td>
<td align="center" valign="top">0.01</td>
<td align="center" valign="top">39</td>
<td align="center" valign="top">0.0035</td>
<td align="center" valign="top">11500</td>
<td align="center" valign="top">15%</td>
<td align="center" valign="top">64<italic>τ<sub>η</sub></italic></td>
<td align="center" valign="top">1</td>
</tr>
<tr>
<td align="left" valign="top">air</td>
<td align="center" valign="top">9.50 m</td>
<td align="center" valign="top">1.90 m</td>
<td align="center" valign="top">0.96 m</td>
<td align="center" valign="top">36 <inline-formula id="ID7">
<alternatives>
<mml:math display="inline" id="I7"><mml:mstyle scriptlevel="+1"><mml:mfrac><mml:mrow><mml:mtext>cm</mml:mtext></mml:mrow><mml:mtext>s</mml:mtext></mml:mfrac></mml:mstyle></mml:math>
<inline-graphic xlink:href="2404.17495v2_ieq7.tif" mime-subtype="tif" mimetype="image"/></alternatives>
</inline-formula></td>
<td align="center" valign="top">0.15 cm</td>
<td align="center" valign="top">0.6 cm</td>
<td align="center" valign="top">0.15 s</td>
<td align="center" valign="top">6.3e-4 <inline-formula id="ID8">
<alternatives>
<mml:math display="inline" id="I8"><mml:mstyle scriptlevel="+1"><mml:mfrac><mml:mrow><mml:msup><mml:mtext>m</mml:mtext><mml:mn>2</mml:mn></mml:msup></mml:mrow><mml:mrow><mml:msup><mml:mtext>s</mml:mtext><mml:mn>3</mml:mn></mml:msup></mml:mrow></mml:mfrac></mml:mstyle></mml:math>
<inline-graphic xlink:href="2404.17495v2_ieq8.tif" mime-subtype="tif" mimetype="image"/></alternatives>
</inline-formula></td>
<td align="center" valign="top">0.09 cm</td>
<td align="center" valign="top"/>
<td align="center" valign="top"/>
<td align="center" valign="top"/>
<td align="center" valign="top"/>
</tr>
<tr style="border-bottom: solid thin">
<td align="left" valign="top">water</td>
<td align="center" valign="top">2.66 m</td>
<td align="center" valign="top">0.53 m</td>
<td align="center" valign="top">0.27 m</td>
<td align="center" valign="top">8.6 <inline-formula id="ID9">
<alternatives>
<mml:math display="inline" id="I9"><mml:mstyle scriptlevel="+1"><mml:mfrac><mml:mrow><mml:mtext>cm</mml:mtext></mml:mrow><mml:mtext>s</mml:mtext></mml:mfrac></mml:mstyle></mml:math>
<inline-graphic xlink:href="2404.17495v2_ieq9.tif" mime-subtype="tif" mimetype="image"/></alternatives>
</inline-formula></td>
<td align="center" valign="top">0.04 cm</td>
<td align="center" valign="top">0.2 cm</td>
<td align="center" valign="top">0.18 s</td>
<td align="center" valign="top">3e-5 <inline-formula id="ID10">
<alternatives>
<mml:math display="inline" id="I10"><mml:mstyle scriptlevel="+1"><mml:mfrac><mml:mrow><mml:msup><mml:mtext>m</mml:mtext><mml:mn>2</mml:mn></mml:msup></mml:mrow><mml:mrow><mml:msup><mml:mtext>s</mml:mtext><mml:mn>3</mml:mn></mml:msup></mml:mrow></mml:mfrac></mml:mstyle></mml:math>
<inline-graphic xlink:href="2404.17495v2_ieq10.tif" mime-subtype="tif" mimetype="image"/></alternatives>
</inline-formula></td>
<td align="center" valign="top">0.02 cm</td>
<td align="center" valign="top"/>
<td align="center" valign="top"/>
<td align="center" valign="top"/>
<td align="center" valign="top"/>
</tr>
<tr style="border-bottom: solid thin">
<td align="left" valign="top">2</td>
<td align="center" valign="top">20</td>
<td align="center" valign="top">5</td>
<td align="center" valign="top">2</td>
<td align="center" valign="top">14</td>
<td align="center" valign="top">0.004</td>
<td align="center" valign="top">0.02</td>
<td align="center" valign="top">0.005</td>
<td align="center" valign="top">163</td>
<td align="center" valign="top">0.0038</td>
<td align="center" valign="top">7830</td>
<td align="center" valign="top">15%</td>
<td align="center" valign="top">95 <italic>τ<sub>03B7</sub></italic></td>
<td align="center" valign="top">5</td>
</tr>
<tr>
<td align="left" valign="top">air</td>
<td align="center" valign="top">7.50 m</td>
<td align="center" valign="top">1.875 m</td>
<td align="center" valign="top">0.75 m</td>
<td align="center" valign="top">17.5 <inline-formula id="ID11">
<alternatives>
<mml:math display="inline" id="I11"><mml:mstyle scriptlevel="+1"><mml:mfrac><mml:mrow><mml:mtext>cm</mml:mtext></mml:mrow><mml:mtext>s</mml:mtext></mml:mfrac></mml:mstyle></mml:math>
<inline-graphic xlink:href="2404.17495v2_ieq11.tif" mime-subtype="tif" mimetype="image"/></alternatives>
</inline-formula></td>
<td align="center" valign="top">0.15 cm</td>
<td align="center" valign="top">0.75 cm</td>
<td align="center" valign="top">0.15 s</td>
<td align="center" valign="top">6.3e-4 <inline-formula id="ID12">
<alternatives>
<mml:math display="inline" id="I12"><mml:mstyle scriptlevel="+1"><mml:mfrac><mml:mrow><mml:msup><mml:mtext>m</mml:mtext><mml:mn>2</mml:mn></mml:msup></mml:mrow><mml:mrow><mml:msup><mml:mtext>s</mml:mtext><mml:mn>3</mml:mn></mml:msup></mml:mrow></mml:mfrac></mml:mstyle></mml:math>
<inline-graphic xlink:href="2404.17495v2_ieq12.tif" mime-subtype="tif" mimetype="image"/></alternatives>
</inline-formula></td>
<td align="center" valign="top">0.142 cm</td>
<td align="center" valign="top"/>
<td align="center" valign="top"/>
<td align="center" valign="top"/>
<td align="center" valign="top"/>
</tr>
<tr style="border-bottom: solid thin">
<td align="left" valign="top">water</td>
<td align="center" valign="top">2.00 m</td>
<td align="center" valign="top">0.50 m</td>
<td align="center" valign="top">0.20 m</td>
<td align="center" valign="top">3.9 <inline-formula id="ID13">
<alternatives>
<mml:math display="inline" id="I13"><mml:mstyle scriptlevel="+1"><mml:mfrac><mml:mrow><mml:mtext>cm</mml:mtext></mml:mrow><mml:mtext>s</mml:mtext></mml:mfrac></mml:mstyle></mml:math>
<inline-graphic xlink:href="2404.17495v2_ieq13.tif" mime-subtype="tif" mimetype="image"/></alternatives>
</inline-formula></td>
<td align="center" valign="top">0.04 cm</td>
<td align="center" valign="top">0.2 cm</td>
<td align="center" valign="top">0.18 s</td>
<td align="center" valign="top">3e-5 <inline-formula id="ID14">
<alternatives>
<mml:math display="inline" id="I14"><mml:mstyle scriptlevel="+1"><mml:mfrac><mml:mrow><mml:msup><mml:mtext>m</mml:mtext><mml:mn>2</mml:mn></mml:msup></mml:mrow><mml:mrow><mml:msup><mml:mtext>s</mml:mtext><mml:mn>3</mml:mn></mml:msup></mml:mrow></mml:mfrac></mml:mstyle></mml:math>
<inline-graphic xlink:href="2404.17495v2_ieq14.tif" mime-subtype="tif" mimetype="image"/></alternatives>
</inline-formula></td>
<td align="center" valign="top">0.038 cm</td>
<td align="center" valign="top"/>
<td align="center" valign="top"/>
<td align="center" valign="top"/>
<td align="center" valign="top"/>
</tr>
<tr style="border-bottom: solid thin">
<td align="left" valign="top">3</td>
<td align="center" valign="top">20</td>
<td align="center" valign="top">5</td>
<td align="center" valign="top">2</td>
<td align="center" valign="top">22</td>
<td align="center" valign="top">0.0018</td>
<td align="center" valign="top">0.01</td>
<td align="center" valign="top">0.0025</td>
<td align="center" valign="top">204</td>
<td align="center" valign="top">0.0012</td>
<td align="center" valign="top">17500</td>
<td align="center" valign="top">13%</td>
<td align="center" valign="top">141<italic>τ<sub>η</sub></italic></td>
<td align="center" valign="top">2.5</td>
</tr>
<tr>
<td align="left" valign="top">air</td>
<td align="center" valign="top">16.7 m</td>
<td align="center" valign="top">4.18 m</td>
<td align="center" valign="top">1.67 m</td>
<td align="center" valign="top">30.6 <inline-formula id="ID15">
<alternatives>
<mml:math display="inline" id="I15"><mml:mstyle scriptlevel="+1"><mml:mfrac><mml:mrow><mml:mtext>cm</mml:mtext></mml:mrow><mml:mtext>s</mml:mtext></mml:mfrac></mml:mstyle></mml:math>
<inline-graphic xlink:href="2404.17495v2_ieq15.tif" mime-subtype="tif" mimetype="image"/></alternatives>
</inline-formula></td>
<td align="center" valign="top">0.15 cm</td>
<td align="center" valign="top">0.83 cm</td>
<td align="center" valign="top">0.15 s</td>
<td align="center" valign="top">6.3e-4 <inline-formula id="ID16">
<alternatives>
<mml:math display="inline" id="I16"><mml:mstyle scriptlevel="+1"><mml:mfrac><mml:mrow><mml:msup><mml:mtext>m</mml:mtext><mml:mn>2</mml:mn></mml:msup></mml:mrow><mml:mrow><mml:msup><mml:mtext>s</mml:mtext><mml:mn>3</mml:mn></mml:msup></mml:mrow></mml:mfrac></mml:mstyle></mml:math>
<inline-graphic xlink:href="2404.17495v2_ieq16.tif" mime-subtype="tif" mimetype="image"/></alternatives>
</inline-formula></td>
<td align="center" valign="top">0.1 cm</td>
<td align="center" valign="top"/>
<td align="center" valign="top"/>
<td align="center" valign="top"/>
<td align="center" valign="top"/>
</tr>
<tr>
<td align="left" valign="top">water</td>
<td align="center" valign="top">4.44 m</td>
<td align="center" valign="top">1.11 m</td>
<td align="center" valign="top">0.44 m</td>
<td align="center" valign="top">6.8 <inline-formula id="ID17">
<alternatives>
<mml:math display="inline" id="I17"><mml:mstyle scriptlevel="+1"><mml:mfrac><mml:mrow><mml:mtext>cm</mml:mtext></mml:mrow><mml:mtext>s</mml:mtext></mml:mfrac></mml:mstyle></mml:math>
<inline-graphic xlink:href="2404.17495v2_ieq17.tif" mime-subtype="tif" mimetype="image"/></alternatives>
</inline-formula></td>
<td align="center" valign="top">0.04 cm</td>
<td align="center" valign="top">0.22 cm</td>
<td align="center" valign="top">0.18 s</td>
<td align="center" valign="top">3e-5 <inline-formula id="ID18">
<alternatives>
<mml:math display="inline" id="I18"><mml:mstyle scriptlevel="+1"><mml:mfrac><mml:mrow><mml:msup><mml:mtext>m</mml:mtext><mml:mn>2</mml:mn></mml:msup></mml:mrow><mml:mrow><mml:msup><mml:mtext>s</mml:mtext><mml:mn>3</mml:mn></mml:msup></mml:mrow></mml:mfrac></mml:mstyle></mml:math>
<inline-graphic xlink:href="2404.17495v2_ieq18.tif" mime-subtype="tif" mimetype="image"/></alternatives>
</inline-formula></td>
<td align="center" valign="top">0.03 cm</td>
<td align="center" valign="top"/>
<td align="center" valign="top"/>
<td align="center" valign="top"/>
<td align="center" valign="top"/>
</tr>
</tbody>
</table>
</alternatives>
</table-wrap>
<disp-formula id="FD1">
<alternatives>
<mml:math display="block" id="M1"><mml:mtable columnalign="left"><mml:mtr><mml:mtd><mml:mi>ρ</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mfrac><mml:mrow><mml:mo>∂</mml:mo><mml:mi>u</mml:mi></mml:mrow><mml:mrow><mml:mo>∂</mml:mo><mml:mi>t</mml:mi></mml:mrow></mml:mfrac><mml:mo>+</mml:mo><mml:mi>u</mml:mi><mml:mo>⋅</mml:mo><mml:mo>∇</mml:mo><mml:mi>u</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mo>−</mml:mo><mml:mo>∇</mml:mo><mml:mi>P</mml:mi><mml:mo>+</mml:mo><mml:mi>μ</mml:mi><mml:msup><mml:mo>∇</mml:mo><mml:mn>2</mml:mn></mml:msup><mml:mi>u</mml:mi><mml:mo>+</mml:mo><mml:mi>f</mml:mi><mml:mo>;</mml:mo></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mo>∇</mml:mo><mml:mo>⋅</mml:mo><mml:mi>u</mml:mi><mml:mo>=</mml:mo><mml:mn>0.</mml:mn></mml:mtd></mml:mtr></mml:mtable></mml:math>
<graphic xlink:href="2404.17495v2_eqn1.tif" mime-subtype="tif" mimetype="image"/></alternatives>
<label>(1)</label>
</disp-formula>
<disp-formula id="FD2">
<alternatives>
<mml:math display="block" id="M2"><mml:mfrac><mml:mrow><mml:mo>∂</mml:mo><mml:mi>z</mml:mi></mml:mrow><mml:mrow><mml:mo>∂</mml:mo><mml:mi>t</mml:mi></mml:mrow></mml:mfrac><mml:mo>+</mml:mo><mml:mi>u</mml:mi><mml:mo>⋅</mml:mo><mml:mo>∇</mml:mo><mml:mi>z</mml:mi><mml:mo>=</mml:mo><mml:mi>D</mml:mi><mml:msup><mml:mo>∇</mml:mo><mml:mn>2</mml:mn></mml:msup><mml:mi>z</mml:mi><mml:mo>+</mml:mo><mml:mi>s</mml:mi><mml:mo>.</mml:mo></mml:math>
<graphic xlink:href="2404.17495v2_eqn2.tif" mime-subtype="tif" mimetype="image"/></alternatives>
<label>(2)</label>
</disp-formula>
</sec>
<sec id="s4-2">
<title>Olfactory states, Features &amp; Discretization</title>
<p>Each agent stores the odor concentrations detected in the previous <italic>T</italic> time steps in a vector <bold>M</bold> = (<italic>z</italic>(<italic>s</italic>(<italic>t</italic> − <italic>T</italic>), <italic>t</italic> − <italic>T</italic>),…, <italic>z</italic>(<italic>s</italic>(<italic>t</italic>), <italic>t</italic>)). We introduce an adaptive sensitivity threshold function <italic>s</italic><sub>thr</sub>(·) defined
<disp-formula id="FD3">
<alternatives>
<mml:math display="block" id="M3"><mml:msub><mml:mi>s</mml:mi><mml:mrow><mml:mtext>thr</mml:mtext></mml:mrow></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mi>T</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:mo>:</mml:mo><mml:mo>=</mml:mo><mml:mi>max</mml:mi><mml:mrow><mml:mo>{</mml:mo> <mml:mrow><mml:mfrac><mml:mrow><mml:msub><mml:mi>C</mml:mi><mml:mrow><mml:mtext>thr</mml:mtext></mml:mrow></mml:msub></mml:mrow><mml:mi>T</mml:mi></mml:mfrac><mml:mstyle displaystyle="true"><mml:munderover><mml:mo>∑</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>T</mml:mi></mml:munderover><mml:mrow><mml:msub><mml:mi>M</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>n</mml:mi><mml:mrow><mml:mtext>thr</mml:mtext></mml:mrow></mml:msub></mml:mrow></mml:mstyle></mml:mrow> <mml:mo>}</mml:mo></mml:mrow><mml:mo>,</mml:mo></mml:math>
<graphic xlink:href="2404.17495v2_eqn3.tif" mime-subtype="tif" mimetype="image"/></alternatives>
<label>(3)</label>
</disp-formula>
</p>
<p>where <italic>M<sub>i</sub></italic> denotes the <italic>i</italic>-th element of <italic>M</italic> and <italic>C</italic><sub>thr</sub> &gt; 0 is a scaling constant (in our experiments we set it as 0.5). <italic>T</italic> denotes the cardinality of <italic>M</italic>. Given a memory <italic>M</italic>, we can define the filtered memory Δ<sup><italic>M</italic></sup> as the set which contains every element of the memory <italic>M</italic> that is higher than the sensitivity threshold <italic>s</italic><sub>thr</sub>(<italic>M</italic>) i.e.
<disp-formula id="FD4">
<alternatives>
<mml:math display="block" id="M4"><mml:msup><mml:mi>Δ</mml:mi><mml:mi>M</mml:mi></mml:msup><mml:mo>:</mml:mo><mml:mo>=</mml:mo><mml:mrow><mml:mo>{</mml:mo> <mml:mrow><mml:mi>z</mml:mi><mml:mo>∈</mml:mo><mml:mi>M</mml:mi><mml:mo>|</mml:mo><mml:mi>z</mml:mi><mml:mo>&gt;</mml:mo><mml:msub><mml:mi>s</mml:mi><mml:mrow><mml:mtext>thr</mml:mtext></mml:mrow></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mi>M</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:mrow> <mml:mo>}</mml:mo></mml:mrow><mml:mo>.</mml:mo></mml:math>
<graphic xlink:href="2404.17495v2_eqn4.tif" mime-subtype="tif" mimetype="image"/></alternatives>
<label>(4)</label>
</disp-formula>
</p>
<p>Then at timestep <italic>t</italic>, given the agent memory <italic>M<sub>t</sub></italic>, we define the average intensity <italic>c</italic>(<italic>M<sub>t</sub></italic>) and the intermittency <italic>i</italic>(<italic>M<sub>t</sub></italic>) as:
<disp-formula id="FD5">
<alternatives>
<mml:math display="block" id="M5"><mml:mtable columnalign="left"><mml:mtr><mml:mtd><mml:mi>c</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msub><mml:mi>M</mml:mi><mml:mi>t</mml:mi></mml:msub></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>:</mml:mo><mml:mo>=</mml:mo><mml:mrow><mml:mo>{</mml:mo> <mml:mtable columnalign="left"><mml:mtr><mml:mtd><mml:mstyle scriptlevel="+1"><mml:mfrac><mml:mn>1</mml:mn><mml:mrow><mml:mrow><mml:mo>|</mml:mo> <mml:mrow><mml:msup><mml:mi>Δ</mml:mi><mml:mrow><mml:msub><mml:mi>M</mml:mi><mml:mi>t</mml:mi></mml:msub></mml:mrow></mml:msup></mml:mrow> <mml:mo>|</mml:mo></mml:mrow></mml:mrow></mml:mfrac></mml:mstyle><mml:mstyle displaystyle="true"><mml:munderover><mml:mo>∑</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mrow><mml:mo>|</mml:mo> <mml:mrow><mml:msup><mml:mi>Δ</mml:mi><mml:mrow><mml:msub><mml:mi>M</mml:mi><mml:mi>t</mml:mi></mml:msub></mml:mrow></mml:msup></mml:mrow> <mml:mo>|</mml:mo></mml:mrow></mml:mrow></mml:munderover><mml:mrow><mml:msub><mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msup><mml:mi>Δ</mml:mi><mml:mrow><mml:msub><mml:mi>M</mml:mi><mml:mi>t</mml:mi></mml:msub></mml:mrow></mml:msup></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:mstyle><mml:mo>,</mml:mo><mml:mtext> </mml:mtext><mml:mrow><mml:mo>|</mml:mo> <mml:mrow><mml:msup><mml:mi>Δ</mml:mi><mml:mrow><mml:msub><mml:mi>M</mml:mi><mml:mi>t</mml:mi></mml:msub></mml:mrow></mml:msup></mml:mrow> <mml:mo>|</mml:mo></mml:mrow><mml:mo>&gt;</mml:mo><mml:mn>0</mml:mn></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mtext>           </mml:mtext><mml:mo>,</mml:mo></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mn>0</mml:mn></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mi>i</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msub><mml:mi>M</mml:mi><mml:mi>t</mml:mi></mml:msub></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>:</mml:mo><mml:mo>=</mml:mo><mml:mstyle scriptlevel="+1"><mml:mfrac><mml:mrow><mml:mrow><mml:mo>|</mml:mo> <mml:mrow><mml:msup><mml:mi>Δ</mml:mi><mml:mrow><mml:msub><mml:mi>M</mml:mi><mml:mi>t</mml:mi></mml:msub></mml:mrow></mml:msup></mml:mrow> <mml:mo>|</mml:mo></mml:mrow></mml:mrow><mml:mrow><mml:mrow><mml:mo>|</mml:mo> <mml:mrow><mml:msub><mml:mi>M</mml:mi><mml:mi>t</mml:mi></mml:msub></mml:mrow> <mml:mo>|</mml:mo></mml:mrow></mml:mrow></mml:mfrac></mml:mstyle><mml:mo>.</mml:mo></mml:mtd></mml:mtr></mml:mtable></mml:math>
<graphic xlink:href="2404.17495v2_eqn5.tif" mime-subtype="tif" mimetype="image"/></alternatives>
<label>(5)</label>
</disp-formula>
</p>
<p>Note that the average intensity is defined on the filtered memory Δ<sup><italic>M</italic></sup>, i.e. conditioned to detecting odors above threshold. Since the features defined in (5) returns real numbers, in order to use (tabular) q-learning, we need to discretize them. We denote with <inline-formula id="ID19">
<alternatives>
<mml:math display="inline" id="I19"><mml:mrow><mml:mover accent="true"><mml:mi>i</mml:mi><mml:mo>¯</mml:mo></mml:mover><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msub><mml:mi>M</mml:mi><mml:mi>t</mml:mi></mml:msub></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:math>
<inline-graphic xlink:href="2404.17495v2_ieq19.tif" mime-subtype="tif" mimetype="image"/></alternatives>
</inline-formula> the discretized intermittency. This is defined as follow
<disp-formula id="FD6">
<alternatives>
<mml:math display="block" id="M6"><mml:mrow><mml:mover accent="true"><mml:mi>i</mml:mi><mml:mo>¯</mml:mo></mml:mover><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msub><mml:mi>M</mml:mi><mml:mi>t</mml:mi></mml:msub></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>:</mml:mo><mml:mo>=</mml:mo><mml:mrow><mml:mo>{</mml:mo> <mml:mrow><mml:mtable columnalign="left"><mml:mtr columnalign="left"><mml:mtd columnalign="left"><mml:mrow><mml:mn>0</mml:mn><mml:mo>,</mml:mo></mml:mrow></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mtext>if</mml:mtext></mml:mrow></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mi>i</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msub><mml:mi>M</mml:mi><mml:mi>t</mml:mi></mml:msub></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>≤</mml:mo><mml:mn>0.33</mml:mn></mml:mrow></mml:mtd></mml:mtr><mml:mtr columnalign="left"><mml:mtd columnalign="left"><mml:mrow><mml:mn>1</mml:mn><mml:mo>,</mml:mo></mml:mrow></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mtext>if</mml:mtext></mml:mrow></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mn>0.33</mml:mn><mml:mo>&lt;</mml:mo><mml:mi>i</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msub><mml:mi>M</mml:mi><mml:mi>t</mml:mi></mml:msub></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>≤</mml:mo><mml:mn>0.66.</mml:mn></mml:mrow></mml:mtd></mml:mtr><mml:mtr columnalign="left"><mml:mtd columnalign="left"><mml:mrow><mml:mn>2</mml:mn><mml:mo>,</mml:mo></mml:mrow></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mtext>if</mml:mtext></mml:mrow></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mi>i</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msub><mml:mi>M</mml:mi><mml:mi>t</mml:mi></mml:msub></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>&gt;</mml:mo><mml:mn>0.66</mml:mn></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:mrow></mml:mrow></mml:math>
<graphic xlink:href="2404.17495v2_eqn6.tif" mime-subtype="tif" mimetype="image"/></alternatives>
<label>(6)</label>
</disp-formula>
</p>
<p>The average intensity is bounded between zero and the maximum concentration of odor at the source. To avoid prior information on the source, we use a more structured procedure to discretize the average intensity online, based on the agent’s experience only. At every timestep <italic>t</italic>, the average intensity <italic>c</italic>(<italic>M<sub>t</sub></italic>) is computed and collected in a dataset <italic>X<sub>t</sub></italic> i.e.</p>
<disp-formula id="FD7">
<alternatives>
<mml:math display="block" id="M7"><mml:msub><mml:mi>X</mml:mi><mml:mi>t</mml:mi></mml:msub><mml:mo>:</mml:mo><mml:mo>=</mml:mo><mml:mrow><mml:mo>{</mml:mo> <mml:mrow><mml:mi>c</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msub><mml:mi>M</mml:mi><mml:mn>0</mml:mn></mml:msub></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>,</mml:mo><mml:mn>…</mml:mn><mml:mo>,</mml:mo><mml:mi>c</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msub><mml:mi>M</mml:mi><mml:mi>t</mml:mi></mml:msub></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow> <mml:mo>}</mml:mo></mml:mrow><mml:mo>.</mml:mo></mml:math>
<graphic xlink:href="2404.17495v2_eqn7.tif" mime-subtype="tif" mimetype="image"/></alternatives>
</disp-formula>
<p>Then, its discretized value is obtained by the following rule:
<disp-formula id="FD8">
<alternatives>
<mml:math display="block" id="M8"><mml:mover accent="true"><mml:mi>c</mml:mi><mml:mo>¯</mml:mo></mml:mover><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msub><mml:mi>M</mml:mi><mml:mi>t</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mi>t</mml:mi></mml:msub></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>:</mml:mo><mml:mo>=</mml:mo><mml:mrow><mml:mo>{</mml:mo> <mml:mrow><mml:mtable columnalign="left"><mml:mtr columnalign="left"><mml:mtd columnalign="left"><mml:mrow><mml:mn>0</mml:mn><mml:mo>,</mml:mo></mml:mrow></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mi>c</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msub><mml:mi>M</mml:mi><mml:mi>t</mml:mi></mml:msub></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>≤</mml:mo><mml:mi>p</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msub><mml:mi>X</mml:mi><mml:mi>t</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:mn>25</mml:mn></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mtd></mml:mtr><mml:mtr columnalign="left"><mml:mtd columnalign="left"><mml:mrow><mml:mn>1</mml:mn><mml:mo>,</mml:mo></mml:mrow></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mi>p</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msub><mml:mi>X</mml:mi><mml:mi>t</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:mn>25</mml:mn></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>&lt;</mml:mo><mml:mi>c</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msub><mml:mi>M</mml:mi><mml:mi>t</mml:mi></mml:msub></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>≤</mml:mo><mml:mi>p</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msub><mml:mi>X</mml:mi><mml:mi>t</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:mn>50</mml:mn></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mtd></mml:mtr><mml:mtr columnalign="left"><mml:mtd columnalign="left"><mml:mrow><mml:mn>2</mml:mn><mml:mo>,</mml:mo></mml:mrow></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mi>p</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msub><mml:mi>X</mml:mi><mml:mi>t</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:mn>50</mml:mn></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>&lt;</mml:mo><mml:mi>c</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msub><mml:mi>M</mml:mi><mml:mi>t</mml:mi></mml:msub></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>≤</mml:mo><mml:mi>p</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msub><mml:mi>X</mml:mi><mml:mi>t</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:mn>80</mml:mn></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mtd></mml:mtr><mml:mtr columnalign="left"><mml:mtd columnalign="left"><mml:mrow><mml:mn>3</mml:mn><mml:mo>,</mml:mo></mml:mrow></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mi>p</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msub><mml:mi>X</mml:mi><mml:mi>t</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:mn>80</mml:mn></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>&lt;</mml:mo><mml:mi>c</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msub><mml:mi>M</mml:mi><mml:mi>t</mml:mi></mml:msub></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>≤</mml:mo><mml:mi>p</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msub><mml:mi>X</mml:mi><mml:mi>t</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:mn>99</mml:mn></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mtd></mml:mtr><mml:mtr columnalign="left"><mml:mtd columnalign="left"><mml:mrow><mml:mn>4</mml:mn><mml:mo>,</mml:mo></mml:mrow></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mi>c</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msub><mml:mi>M</mml:mi><mml:mi>t</mml:mi></mml:msub></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>&gt;</mml:mo><mml:mi>p</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msub><mml:mi>X</mml:mi><mml:mi>t</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:mn>99</mml:mn></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:mrow><mml:mo>,</mml:mo></mml:math>
<graphic xlink:href="2404.17495v2_eqn8.tif" mime-subtype="tif" mimetype="image"/></alternatives>
<label>(7)</label>
</disp-formula>
</p>
<p>where <italic>p</italic>(<italic>X<sub>t</sub>, n</italic>) denotes the <italic>n</italic>-th percentile of <italic>X<sub>t</sub></italic>. Finally, we can define the feature map <italic>ϕ<sub>t</sub></italic> as a function of the memory <italic>M<sub>t</sub></italic> and the dataset of average intensities <italic>X<sub>t</sub></italic> at timestep <italic>t</italic>
<disp-formula id="FD9">
<alternatives>
<mml:math display="block" id="M9"><mml:msub><mml:mi>ϕ</mml:mi><mml:mi>t</mml:mi></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msub><mml:mi>M</mml:mi><mml:mi>t</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mi>t</mml:mi></mml:msub></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>:</mml:mo><mml:mo>=</mml:mo><mml:mrow><mml:mo>[</mml:mo> <mml:mrow><mml:mover accent="true"><mml:mi>i</mml:mi><mml:mo>¯</mml:mo></mml:mover><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msub><mml:mi>M</mml:mi><mml:mi>t</mml:mi></mml:msub></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>,</mml:mo><mml:mover accent="true"><mml:mi>c</mml:mi><mml:mo>¯</mml:mo></mml:mover><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msub><mml:mi>M</mml:mi><mml:mi>t</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mi>t</mml:mi></mml:msub></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow> <mml:mo>]</mml:mo></mml:mrow><mml:mo>.</mml:mo></mml:math>
<graphic xlink:href="2404.17495v2_eqn9.tif" mime-subtype="tif" mimetype="image"/></alternatives>
</disp-formula>
</p>
<p>This defines the current olfactory state <italic>s<sub>t</sub></italic> i.e. at timestep <italic>t</italic>, the agent is in the olfactory state <italic>o<sub>t</sub></italic> : = <italic>ϕ<sub>t</sub></italic>(<italic>M<sub>t</sub>, X<sub>t</sub></italic>). The case where the agent has no odor detections above threshold in its current memory, i.e. |Δ(<italic>M<sub>t</sub></italic>)| = 0 corresponds to an additional state called void state (∅) in the main text.</p>
</sec>
<sec id="s4-3">
<title>Agent Behavior and Policies</title>
<p>Now, we describe how the agent interacts with the environment to solve the navigation problem. At every time step <italic>t</italic> ∈ <bold>N</bold>, the agent observes an odor point <italic>z<sub>t</sub></italic> and updates its memory including the new observation and removing the oldest i.e. it defines a memory <italic>M<sub>t</sub></italic> with the following rule
<disp-formula id="FD10">
<alternatives>
<mml:math display="block" id="M10"><mml:msub><mml:mi>M</mml:mi><mml:mi>t</mml:mi></mml:msub><mml:mo>:</mml:mo><mml:mo>=</mml:mo><mml:mrow><mml:mo>[</mml:mo> <mml:mrow><mml:msub><mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msub><mml:mi>M</mml:mi><mml:mrow><mml:mi>t</mml:mi><mml:mo>−</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow><mml:mn>2</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msub><mml:mi>M</mml:mi><mml:mrow><mml:mi>t</mml:mi><mml:mo>−</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow><mml:mrow><mml:mrow><mml:mo>|</mml:mo> <mml:mrow><mml:msub><mml:mi>M</mml:mi><mml:mrow><mml:mi>t</mml:mi><mml:mo>−</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub></mml:mrow> <mml:mo>|</mml:mo></mml:mrow></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>o</mml:mi><mml:mi>t</mml:mi></mml:msub></mml:mrow> <mml:mo>]</mml:mo></mml:mrow><mml:mo>.</mml:mo></mml:math>
<graphic xlink:href="2404.17495v2_eqn10.tif" mime-subtype="tif" mimetype="image"/></alternatives>
<label>(8)</label>
</disp-formula>
</p>
<p>Then, it updates the dataset of average intensities i.e. <italic>X<sub>t</sub></italic> := <italic>X<sub>t-1</sub></italic> ∪ {<italic>c</italic>(<italic>M<sub>t</sub></italic>)} and it computes the olfactory state <italic>o<sub>t</sub></italic>. According to <italic>o<sub>t</sub></italic>, the agent chooses an action <italic>a<sub>t</sub></italic>, using a policy. As indicated in the main text, actions are the coordinate directions i.e. we define an action set <bold>A</bold> as follow
<disp-formula id="FD11">
<alternatives>
<mml:math display="block" id="M11"><mml:mi>A</mml:mi><mml:mo>:</mml:mo><mml:mo>=</mml:mo><mml:mrow><mml:mo>{</mml:mo> <mml:mrow><mml:msub><mml:mi>e</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>e</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:mo>−</mml:mo><mml:msub><mml:mi>e</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:mo>−</mml:mo><mml:msub><mml:mi>e</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:mrow> <mml:mo>}</mml:mo></mml:mrow><mml:mo>,</mml:mo></mml:math>
<graphic xlink:href="2404.17495v2_eqn11.tif" mime-subtype="tif" mimetype="image"/></alternatives>
</disp-formula>
</p>
<p>where <italic>e<sub>i</sub></italic> denotes the <italic>i</italic>-th canonical base. Actions are steps in any of the 4 directions, labeled relative to the mean flow which assumed fixed and known. The gridworld is infinite, in that agents can leave indefinitely. If they exit the simulation box, they continue to receive zero signal and negative reward -0.001. As explained in the main text, actions are selected using one of two policies according to the current olfactory state <italic>o<sub>t</sub></italic>. More precisely, if the olfactory state <italic>o<sub>t</sub></italic> is not the void state, then the (<italic>∊</italic>-greedy) Q-learning policy is used. Formally, let <italic>Q</italic> be the Q matrix of the agent and let <italic>o<sub>t</sub></italic> ≠ ∅, then the agent plays the action <italic>a<sub>t</sub></italic> such that
<disp-formula id="FD12">
<alternatives>
<mml:math display="block" id="M12"><mml:msub><mml:mi>a</mml:mi><mml:mi>t</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:mo>{</mml:mo> <mml:mrow><mml:mtable columnalign="left"><mml:mtr columnalign="left"><mml:mtd columnalign="left"><mml:mrow><mml:mi>a</mml:mi><mml:mo>∈</mml:mo><mml:mi>arg</mml:mi><mml:munder><mml:mrow><mml:mi>max</mml:mi></mml:mrow><mml:mrow><mml:mi>a</mml:mi><mml:mo>∈</mml:mo><mml:mi>A</mml:mi></mml:mrow></mml:munder><mml:mi>Q</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msub><mml:mi>o</mml:mi><mml:mi>t</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:mi>a</mml:mi></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mtext>with probability </mml:mtext><mml:mn>1</mml:mn><mml:mo>−</mml:mo><mml:mi>ε</mml:mi></mml:mrow></mml:mtd></mml:mtr><mml:mtr columnalign="left"><mml:mtd columnalign="left"><mml:mrow><mml:mi>a</mml:mi><mml:mo>~</mml:mo><mml:mi>ν</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mi>A</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mtext>with probability </mml:mtext><mml:mi>ε</mml:mi></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:mrow><mml:mo>,</mml:mo></mml:math>
<graphic xlink:href="2404.17495v2_eqn12.tif" mime-subtype="tif" mimetype="image"/></alternatives>
<label>(9)</label>
</disp-formula>
</p>
<p>where, with <italic>a</italic> ~ <bold>V</bold>(<bold>A</bold>), we indicate an action <italic>a</italic> uniformly sampled from <bold>A</bold>. At test phase, the exploration-exploitation parameter <italic>∊</italic> is set to 0 and, thus, in an olfactory state <italic>o<sub>t</sub></italic> ≠ ∅ the policy is deterministic. While training phase behavior is described in next paragraphs. In the void state <italic>o<sub>t</sub></italic> = ∅, the agent chooses the action <italic>a<sub>t</sub></italic> ∈ <bold>A</bold> according to a separated policy called <italic>recovery strategy</italic>. In our experiments, we defined and compared three different recovery strategies: Brownian, Backtracking and Learned.</p>
</sec>
<sec id="s4-4">
<title>Brownian recovery</title>
<p>It is the simplest strategy we consider, consisting of playing random actions in the void state. Suppose that at time step <italic>t</italic>, the agent is in the void olfactory state, i.e., <italic>o<sub>t</sub></italic> = ∅, then <italic>a<sub>t</sub></italic> is sampled uniformly from the action set <bold>A</bold>. However, it is important to note for long memories agents start to recover when they are already far from the plume, and hitting the plume by random walk is prohibitively long. To avoid wandering away from the plume, the memory is constrained to be shorter, consistent with the observation that the optimal memory is <italic>T</italic><sup>*</sup> = 3 to 5, much shorter than for backtracking. At this memory, several blanks within the plume will cause the agent to recover, hence the lower performance of the Brownian recovery.</p>
</sec>
<sec id="s4-5">
<title>Backtracking Recovery</title>
<p>In order to accelerate recovery from accidentally exiting the plume, we let the agents backtrack to the position where they last detected the odor. To this end, we first enumerate the actions with numbers from one to four. Then we introduce a new memory called <italic>action memory A</italic>. For simplicity, we consider the setting in which |<italic>A</italic>| = |<italic>M</italic>|. At time-step <italic>t</italic> = 0, this memory is initialized as a vector of zeros indicating that the action memory is empty i.e. we define <italic>A</italic><sub>0</sub> ∈ ℕ<sup>|<italic>M</italic>|</sup> such that for every <italic>i</italic> = 1, —, |<italic>A</italic>|
<disp-formula id="FD13">
<alternatives>
<mml:math display="block" id="M13"><mml:msub><mml:mi>A</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mn>0.</mml:mn></mml:math>
<graphic xlink:href="2404.17495v2_eqn13.tif" mime-subtype="tif" mimetype="image"/></alternatives>
</disp-formula>
</p>
<p>For every timestep <italic>t</italic> &gt; 0, the agent observes an odor point <italic>z<sub>t</sub></italic> and updates the memory through (8). Moreover, the action memory is updated according to the status of the memory. If the last observation is smaller than the sensitivity threshold i.e. <italic>z<sub>t</sub> &lt; s</italic><sub>thr</sub>(<italic>M<sub>t</sub></italic>), the action previously played <italic>a</italic><sub><italic>t</italic>−1</sub> (represented by a natural number in [1,4]) is stored in the action memory i.e. for some Δ <italic>&gt;</italic> 0, let
<disp-formula id="FD14">
<alternatives>
<mml:math display="block" id="M14"><mml:msub><mml:mi>A</mml:mi><mml:mrow><mml:mi>t</mml:mi><mml:mo>−</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:mo>[</mml:mo> <mml:mrow><mml:msub><mml:mi>a</mml:mi><mml:mrow><mml:mi>t</mml:mi><mml:mo>−</mml:mo><mml:mi>Δ</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:mn>…</mml:mn><mml:mo>,</mml:mo><mml:msub><mml:mi>a</mml:mi><mml:mrow><mml:mi>t</mml:mi><mml:mo>−</mml:mo><mml:mn>2</mml:mn></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:mn>0</mml:mn><mml:mo>,</mml:mo><mml:mn>…</mml:mn><mml:mo>,</mml:mo><mml:mn>0</mml:mn></mml:mrow> <mml:mo>]</mml:mo></mml:mrow><mml:mo>.</mml:mo></mml:math>
<graphic xlink:href="2404.17495v2_eqn14.tif" mime-subtype="tif" mimetype="image"/></alternatives>
</disp-formula>
</p>
<p>Then
<disp-formula id="FD15">
<alternatives>
<mml:math display="block" id="M15"><mml:msub><mml:mi>A</mml:mi><mml:mi>t</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:mo>[</mml:mo> <mml:mrow><mml:msub><mml:mi>a</mml:mi><mml:mrow><mml:mi>t</mml:mi><mml:mo>−</mml:mo><mml:mi>Δ</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:mn>…</mml:mn><mml:mo>,</mml:mo><mml:msub><mml:mi>a</mml:mi><mml:mrow><mml:mi>t</mml:mi><mml:mo>−</mml:mo><mml:mn>2</mml:mn></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>a</mml:mi><mml:mrow><mml:mi>t</mml:mi><mml:mo>−</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:mn>…</mml:mn><mml:mo>,</mml:mo><mml:mn>0</mml:mn></mml:mrow> <mml:mo>]</mml:mo></mml:mrow><mml:mo>.</mml:mo></mml:math>
<graphic xlink:href="2404.17495v2_eqn15.tif" mime-subtype="tif" mimetype="image"/></alternatives>
</disp-formula>
</p>
<p>If at time-step <italic>t</italic>, the observation <italic>z<sub>t</sub></italic> is larger than the sensitivity threshold then the action memory is reset i.e. <italic>A<sub>t</sub></italic> ∈ ℕ<sup><italic>|M|</italic></sup> with (<italic>A<sub>t</sub></italic>)<sub><italic>i</italic></sub> = 0 for every <italic>i</italic>. If at timestep <italic>t</italic>, the memory is empty i.e. <italic>c</italic>(<italic>M<sub>t</sub></italic>) = 0, then the backtracking procedure is executed: the last non-zero element of the action memory is extracted and the inverse action is played i.e. For some Δ &gt; 0, let
<disp-formula id="FD16">
<alternatives>
<mml:math display="block" id="M16"><mml:msub><mml:mi>A</mml:mi><mml:mrow><mml:mi>t</mml:mi><mml:mo>−</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:mo>[</mml:mo> <mml:mrow><mml:msub><mml:mi>a</mml:mi><mml:mrow><mml:mi>t</mml:mi><mml:mo>−</mml:mo><mml:mi>Δ</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:mn>…</mml:mn><mml:mo>,</mml:mo><mml:msub><mml:mi>a</mml:mi><mml:mrow><mml:mi>t</mml:mi><mml:mo>−</mml:mo><mml:mn>2</mml:mn></mml:mrow></mml:msub></mml:mrow> <mml:mo>]</mml:mo></mml:mrow><mml:mo>.</mml:mo></mml:math>
<graphic xlink:href="2404.17495v2_eqn16.tif" mime-subtype="tif" mimetype="image"/></alternatives>
</disp-formula>
</p>
<p>Then, it plays the action <italic>a</italic><sub><italic>t</italic>−2</sub> and updates the action memory as follow
<disp-formula id="FD17">
<alternatives>
<mml:math display="block" id="M17"><mml:msub><mml:mi>A</mml:mi><mml:mi>t</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:mo>[</mml:mo> <mml:mrow><mml:msub><mml:mi>a</mml:mi><mml:mrow><mml:mi>t</mml:mi><mml:mo>−</mml:mo><mml:mi>Δ</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:mn>…</mml:mn><mml:mo>,</mml:mo><mml:msub><mml:mi>a</mml:mi><mml:mrow><mml:mi>t</mml:mi><mml:mo>−</mml:mo><mml:mn>3</mml:mn></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:mn>0</mml:mn></mml:mrow> <mml:mo>]</mml:mo></mml:mrow><mml:mo>.</mml:mo></mml:math>
<graphic xlink:href="2404.17495v2_eqn17.tif" mime-subtype="tif" mimetype="image"/></alternatives>
</disp-formula>
</p>
<p>This procedure is repeated until either an observation larger than the sensitivity threshold is obtained or the action memory becomes empty. In the former case, the action memory is cleared and the action is chosen according to the Q-learning policy ((9)). In the latter case, a random action is played.</p>
<p>Note that this strategy only provides exploration after the backtracking fails to recover detections. Also, if agents start with no detection at time 0, the procedure is equivalent to Brownian motion.</p>
</sec>
<sec id="s4-6">
<title>Circling recovery</title>
<p>In this case, the recovery strategy consists of adopting a circling behavior <xref ref-type="bibr" rid="c63">Stupski and van Breugel (2024)</xref> when the agent is in a void state. The agent keeps in memory two counters, <italic>t</italic><sub>void</sub> and <italic>T</italic><sub>change</sub>, as well as an action <italic>a</italic><sub>void</sub> ∈ <bold>A</bold>, initialized to 0, 1, and <italic>e</italic><sub>1</sub>, respectively. The first counter represents the consecutive number of void observations, <italic>a</italic><sub>void</sub> is the action to play when the void state is reached, and <italic>T</italic><sub>change</sub> is a time threshold that indicates when to switch the action <italic>a</italic><sub>void</sub>. When the agent reaches a void state, it plays the action <italic>a</italic> <sub>void</sub> and increments the counter <italic>t</italic><sub>void</sub> by one. If <italic>t</italic><sub>void</sub> = <italic>T</italic><sub>change</sub>, then the agent resets <italic>t</italic><sub>void</sub> to zero, increases <italic>T</italic><sub>change</sub> by one, and updates the action <italic>a</italic><sub>void</sub> as follows
<disp-formula id="FD18">
<alternatives>
<mml:math display="block" id="M18"><mml:msub><mml:mi>a</mml:mi><mml:mrow><mml:mtext>void</mml:mtext></mml:mrow></mml:msub><mml:mo>←</mml:mo><mml:mrow><mml:mo>{</mml:mo> <mml:mrow><mml:mtable columnalign="left"><mml:mtr columnalign="left"><mml:mtd columnalign="left"><mml:mrow><mml:msub><mml:mi>e</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:mrow></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mtext>if </mml:mtext><mml:msub><mml:mi>a</mml:mi><mml:mrow><mml:mtext>void</mml:mtext></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mi>e</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:mtd></mml:mtr><mml:mtr columnalign="left"><mml:mtd columnalign="left"><mml:mrow><mml:mo>−</mml:mo><mml:msub><mml:mi>e</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mtext>if </mml:mtext><mml:msub><mml:mi>a</mml:mi><mml:mrow><mml:mtext>void</mml:mtext></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mi>e</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:mrow></mml:mtd></mml:mtr><mml:mtr columnalign="left"><mml:mtd columnalign="left"><mml:mrow><mml:mo>−</mml:mo><mml:msub><mml:mi>e</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:mrow></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mtext>if </mml:mtext><mml:msub><mml:mi>a</mml:mi><mml:mrow><mml:mtext>void</mml:mtext></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mo>−</mml:mo><mml:msub><mml:mi>e</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:mtd></mml:mtr><mml:mtr columnalign="left"><mml:mtd columnalign="left"><mml:mrow><mml:msub><mml:mi>e</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mtext>if </mml:mtext><mml:msub><mml:mi>a</mml:mi><mml:mrow><mml:mtext>void</mml:mtext></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mo>−</mml:mo><mml:msub><mml:mi>e</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:mrow></mml:math>
<graphic xlink:href="2404.17495v2_eqn18.tif" mime-subtype="tif" mimetype="image"/></alternatives>
</disp-formula>
</p>
<p>When the agent receives a non-void observation, it resets <italic>t</italic><sub>void</sub> to 0, <italic>T</italic><sub>change</sub> to 1, and <italic>a</italic><sub>void</sub> to <italic>e</italic><sub>1</sub>.</p>
</sec>
<sec id="s4-7">
<title>Cast-Surge recovery</title>
<p>In this case, the agent plays a cast-surge behavior <xref ref-type="bibr" rid="c8">Baker (1990)</xref> when reaching the void state. As in the circling recovery strategy, the agent keeps two counters, <italic>t</italic><sub>void</sub> and <italic>T</italic><sub>change</sub>, as well as an action <italic>a</italic><sub>void</sub> ∈ <bold>A</bold>, initialized to 0, 1, and <italic>e</italic><sub>2</sub>, respectively. At every step in the void state, the agent plays the action <italic>a</italic><sub>void</sub> and increments the void counter <italic>t</italic><sub>void</sub> by one. If <italic>t</italic><sub>void</sub> = <italic>T</italic><sub>change</sub>, the agent takes an upwind step, doubles the value of <italic>T</italic><sub>change</sub>, updates <italic>a</italic><sub>void</sub> by setting it to −<italic>a</italic><sub>void</sub>, and resets <italic>t</italic><sub>void</sub> to zero. When the agent receives a non-void observation, it resets <italic>t</italic><sub>void</sub> to 0, <italic>T</italic><sub>change</sub> to 1, and <italic>a</italic><sub>void</sub> to <italic>e</italic><sub>2</sub>.</p>
</sec>
<sec id="s4-8">
<title>Learned recovery</title>
<p>In this case recovery policy is learned by splitting the void state in several states labeled by the time since entry in the void state. In our experiments, we split the void state in 30 states. Actions are then learned as in all other non-void states and the optimal action is always chosen with (9).</p>
</sec>
<sec id="s4-9">
<title>Training</title>
<p>An agent start at a random location within the odor plume at time 0. Its memory is initialized with the prior |<italic>M</italic><sub>0</sub>| odor detections at its initial location <italic>M</italic><sub>0</sub> = [<italic>z</italic><sub>−|<italic>M</italic>|</sub>, …, <italic>z</italic><sub>0</sub>], obtained from the fluid dynamics simulation. The Q-function <italic>Q</italic><sub>0</sub> is initialized with 0.6 for all actions and olfactory states. The first dataset of average intensities contains the first value <italic>X</italic><sub>0</sub> = {<italic>c</italic>(<italic>M</italic><sub>0</sub>)}. At every times step <italic>t</italic> &gt; 0, the agent gets an odor observation <italic>z<sub>t</sub></italic> from its new position and updates its memory including the new observation and removing the oldest and the olfactory state <italic>o<sub>t</sub></italic> is computed (as described in previous paragraphs). The dataset of average intensities is updated: <italic>X<sub>t</sub></italic> = <italic>X</italic><sub><italic>t</italic>−1</sub> ∪ {<italic>c</italic>(<italic>M<sub>t</sub></italic>)}. Exploration-exploitation parameter <italic>∊<sub>k</sub></italic> is scheduled as follow
<disp-formula id="FD19">
<alternatives>
<mml:math display="block" id="M19"><mml:mrow><mml:msub><mml:mi>ε</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mi>η</mml:mi><mml:mrow><mml:mtext>init</mml:mtext></mml:mrow></mml:msub><mml:mi>exp</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mo>−</mml:mo><mml:msub><mml:mi>η</mml:mi><mml:mrow><mml:mi>d</mml:mi><mml:mi>e</mml:mi><mml:mi>c</mml:mi><mml:mi>a</mml:mi><mml:mi>y</mml:mi></mml:mrow></mml:msub><mml:mi>k</mml:mi></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>,</mml:mo></mml:mrow></mml:math>
<graphic xlink:href="2404.17495v2_eqn19.tif" mime-subtype="tif" mimetype="image"/></alternatives>
</disp-formula>
</p>
<p>where, in our experiments, <italic>η</italic><sub>init</sub> = 0.99 and <italic>η</italic><sub>decay</sub> = 0.0001. At every episode <italic>k</italic>, the Q-function is updated at every time step <italic>t</italic> as
<disp-formula id="FD20">
<alternatives>
<mml:math display="block" id="M20"><mml:msub><mml:mi>Q</mml:mi><mml:mrow><mml:mi>k</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msub><mml:mi>s</mml:mi><mml:mi>t</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>a</mml:mi><mml:mi>t</mml:mi></mml:msub></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>:</mml:mo><mml:mo>=</mml:mo><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mn>1</mml:mn><mml:mo>−</mml:mo><mml:msub><mml:mi>a</mml:mi><mml:mi>k</mml:mi></mml:msub></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:msub><mml:mi>Q</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msub><mml:mi>s</mml:mi><mml:mi>t</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>a</mml:mi><mml:mi>t</mml:mi></mml:msub></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>+</mml:mo><mml:msub><mml:mi>a</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msub><mml:mi>r</mml:mi><mml:mi>t</mml:mi></mml:msub><mml:mo>+</mml:mo><mml:mi>γ</mml:mi><mml:munder><mml:mrow><mml:mi>max</mml:mi></mml:mrow><mml:msup><mml:mi>d</mml:mi><mml:mo>′</mml:mo></mml:msup></mml:munder><mml:msub><mml:mi>Q</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msub><mml:mi>s</mml:mi><mml:mrow><mml:mi>t</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msup><mml:mi>a</mml:mi><mml:mo>′</mml:mo></mml:msup></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>,</mml:mo></mml:math>
<graphic xlink:href="2404.17495v2_eqn20.tif" mime-subtype="tif" mimetype="image"/></alternatives>
</disp-formula>
</p>
<p>where <italic>R<sub>t</sub></italic> is the immediate reward received playing the action <italic>a<sub>t</sub></italic>. <italic>o<sub>t</sub></italic> and <italic>o</italic><sub><italic>t</italic>+1</sub> are the current and the next olfactory states and <italic>a<sub>k</sub></italic> is the learning rate at episode <italic>k</italic>. This is scheduled as
<disp-formula id="FD21">
<alternatives>
<mml:math display="block" id="M21"><mml:msub><mml:mi>a</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mi>α</mml:mi><mml:mrow><mml:mtext>init</mml:mtext></mml:mrow></mml:msub><mml:mi>exp</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mo>−</mml:mo><mml:msub><mml:mi>α</mml:mi><mml:mrow><mml:mi>d</mml:mi><mml:mi>e</mml:mi><mml:mi>c</mml:mi><mml:mi>a</mml:mi><mml:mi>y</mml:mi></mml:mrow></mml:msub><mml:mi>k</mml:mi></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>,</mml:mo></mml:math>
<graphic xlink:href="2404.17495v2_eqn21.tif" mime-subtype="tif" mimetype="image"/></alternatives>
</disp-formula>
</p>
<p>where, in our experiments, <italic>a</italic><sub>init</sub> = 0.25 and <italic>α</italic><sub>decay</sub> = 0.001. For the experiments, agents are trained in 100000 episodes and an horizon of 5000 steps. The agent velocity is set to 10 and the discount factor is <italic>γ</italic> = 0.9999.</p>
</sec>
<sec id="s4-10">
<title>Agents Evaluation</title>
<p>To evaluate the performance of the different agents, we consider four metrics: the cumulative reward <italic>G</italic> (which is the actual quantity that the algorithm optimizes for); normalized time (defined below); the fraction of success <italic>f</italic><sup>+</sup> and the value conditioned on success <italic>g</italic><sup>+</sup>. For a fixed position (<italic>i,j</italic>), we denote with <italic>τ</italic><sub>min</sub>(<italic>i,j</italic>) the minimum number of steps required to reach the source region from (<italic>i, j</italic>) i.e. the length of the shortest path.</p>
<p>We define <italic>D</italic><sub>init</sub> the set of points in which the first observation is above the sensitivity threshold (valid points). For each initial position (<italic>i, j</italic>) ∈ <italic>D</italic><sub>init</sub>, let <italic>τ</italic>(<italic>i, j</italic>) be the duration of the path obtained by an agent to reach the source. Note that <italic>τ</italic>(<italic>i, j</italic>) is a random variable for the stochastic backtracking and Brownian recoveries, but it is deterministic for the learned strategy that has no random components. For each admissible location (<italic>i, j</italic>), we define four performance metrics:
<disp-formula id="FD22">
<alternatives>
<mml:math display="block" id="M22"><mml:mtable><mml:mtr><mml:mtd><mml:mi>G</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:mrow><mml:mo>〈</mml:mo> <mml:mrow><mml:msup><mml:mi>e</mml:mi><mml:mrow><mml:mo>−</mml:mo><mml:mi>λ</mml:mi><mml:mi>τ</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:msup><mml:mo>−</mml:mo><mml:mstyle scriptlevel="+1"><mml:mfrac><mml:mi>σ</mml:mi><mml:mrow><mml:mn>1</mml:mn><mml:mo>−</mml:mo><mml:mi>γ</mml:mi></mml:mrow></mml:mfrac></mml:mstyle><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mn>1</mml:mn><mml:mo>−</mml:mo><mml:msup><mml:mi>e</mml:mi><mml:mrow><mml:mo>−</mml:mo><mml:mi>λ</mml:mi><mml:mi>τ</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:msup></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow> <mml:mo>〉</mml:mo></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:msup><mml:mi>f</mml:mi><mml:mo>+</mml:mo></mml:msup><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:mstyle scriptlevel="+1"><mml:mfrac><mml:mrow><mml:msub><mml:mi>n</mml:mi><mml:mrow><mml:mi>s</mml:mi><mml:mi>u</mml:mi><mml:mi>c</mml:mi><mml:mi>c</mml:mi><mml:mi>e</mml:mi><mml:mi>s</mml:mi><mml:mi>s</mml:mi></mml:mrow></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow><mml:mrow><mml:msub><mml:mi>η</mml:mi><mml:mrow><mml:mi>r</mml:mi><mml:mi>e</mml:mi><mml:mi>p</mml:mi><mml:mi>s</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mfrac></mml:mstyle></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:msup><mml:mi>g</mml:mi><mml:mo>+</mml:mo></mml:msup><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:mrow><mml:mo>〈</mml:mo> <mml:mrow><mml:msup><mml:mi>e</mml:mi><mml:mrow><mml:mo>−</mml:mo><mml:mi>λ</mml:mi><mml:mi>τ</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:msup><mml:mo>|</mml:mo><mml:mtext>success</mml:mtext></mml:mrow> <mml:mo>〉</mml:mo></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mstyle scriptlevel="+1"><mml:mfrac><mml:mrow><mml:msub><mml:mi>τ</mml:mi><mml:mrow><mml:mi>min</mml:mi></mml:mrow></mml:msub></mml:mrow><mml:mi>τ</mml:mi></mml:mfrac></mml:mstyle><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:mrow><mml:mo>〈</mml:mo> <mml:mrow><mml:mstyle scriptlevel="+1"><mml:mfrac><mml:mrow><mml:msub><mml:mi>τ</mml:mi><mml:mrow><mml:mi>min</mml:mi></mml:mrow></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow><mml:mrow><mml:mi>τ</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mfrac></mml:mstyle></mml:mrow> <mml:mo>〉</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:math>
<graphic xlink:href="2404.17495v2_eqn22.tif" mime-subtype="tif" mimetype="image"/></alternatives>
</disp-formula>
</p>
<p>where <italic>n</italic><sub>reps</sub> is the number of test trajectories from each admissible location, and we use <italic>n</italic><sub>reps</sub> = 10. We then compute statistics of the perfomance metrics over the <italic>D</italic><sub>init</sub> initial positions and report the average (〈·〉) and standard deviation (std). Note that for the learned strategy, <italic>τ</italic>(<italic>i, j</italic>) is deterministic, hence <italic>f</italic><sup>+</sup>(<italic>i, j</italic>) is 0 or 1 and therefore we omit its standard deviation.</p>
</sec>
</sec>
</body>
<back>
<sec id="s5" sec-type="data-availability">
<title>Data availability</title>
<p>The datasets and code used to perform the experiments are available at the following links
<list list-type="bullet">
<list-item><p>code: <ext-link ext-link-type="uri" xlink:href="https://github.com/Akatsuki96/qNav">https://github.com/Akatsuki96/qNav</ext-link></p></list-item>
<list-item><p>datasets: <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.5281/zenodo.14655992">https://doi.org/10.5281/zenodo.14655992</ext-link></p></list-item>
</list>
</p>
</sec>
<ack>
<title>Acknowledgements</title>
<p>This research was supported by grants to AS from the European Research Council (ERC) under the European Union’s Horizon 2020 research and innovation programme (grant agreement No 101002724 RIDING), the Air Force Office of Scientific Research under award number FA8655-20-1- 7028, and the National Institutes of Health (NIH) under award number R01DC018789. L. R. and M.R. acknowledge the financial support of the European Research Council (grant SLING 819789), the European Commission (Horizon Europe grant ELIAS 101120237), the US Air Force Office of Scientific Research (FA8655-22-1-7034), the Ministry of Education, University and Research (FARE grant ML4IP R205T7J2KP; grant BAC FAIR PE00000013 funded by the EU - NGEU) and the Center for Brains, Minds and Machines (CBMM), funded by NSF STC award CCF-1231216. M.R. is a member of the Gruppo Nazionale per l’Analisi Matematica, la Probabilità e le loro Applicazioni (GNAMPA) of the Istituto Nazionale di Alta Matematica (INdAM). This work represents only the view of the authors. The European Commission and the other organizations are not responsible for any use that may be made of the information it contains. We thank Francesco Viola for support and discussions regarding computational fluid dynamics as well as Antonio Celani, Venkatesh Murthy, Yujia Qi, Francesco Boccardo, Luca Gagliardi, Francesco Marcolli and Arnaud Ruymaekers for comments on the manuscript.</p>
</ack>
<ref-list>
<title>References</title>
<ref id="c1"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Ache</surname> <given-names>BW</given-names></string-name>, <string-name><surname>Hein</surname> <given-names>AM</given-names></string-name>, <string-name><surname>Bobkov</surname> <given-names>YV</given-names></string-name>, <string-name><surname>Principe</surname> <given-names>JC</given-names></string-name></person-group>. <article-title>Smelling Time: A Neural Basis for Olfactory Scene Analysis</article-title>. <source>Trends Neurosci</source>. <year>2016</year>; <volume>39</volume>:<fpage>649</fpage>–<lpage>655</lpage>.</mixed-citation></ref>
<ref id="c2"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Ackels</surname> <given-names>T</given-names></string-name>, <string-name><surname>Erskine</surname> <given-names>A</given-names></string-name>, <string-name><surname>Dasgupta</surname> <given-names>Dea</given-names></string-name></person-group>. <article-title>Fast odour dynamics are encoded in the olfactory system and guide behaviour</article-title>. <source>Nature</source>. <year>2021a</year>; <volume>593</volume>:<fpage>558</fpage>.</mixed-citation></ref>
<ref id="c3"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Ackels</surname> <given-names>T</given-names></string-name>, <string-name><surname>Erskine</surname> <given-names>A</given-names></string-name>, <string-name><surname>Dasgupta</surname> <given-names>D</given-names></string-name>, <string-name><surname>Marin</surname> <given-names>AC</given-names></string-name>, <string-name><surname>Warner</surname> <given-names>TPA</given-names></string-name>, <string-name><surname>Tootoonian</surname> <given-names>S</given-names></string-name>, <string-name><surname>Fukunaga</surname> <given-names>I</given-names></string-name>, <string-name><surname>Harris</surname> <given-names>JJ</given-names></string-name>, <string-name><surname>Schaefer</surname> <given-names>AT</given-names></string-name></person-group>. <article-title>Fast odour dynamics are encoded in the olfactory system and guide behaviour</article-title>. <source>Nature</source>. <year>2021b</year>; <volume>593</volume>:<fpage>558</fpage>–<lpage>563</lpage>.</mixed-citation></ref>
<ref id="c4"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Allard</surname> <given-names>C</given-names></string-name>, <string-name><surname>Kang</surname> <given-names>G</given-names></string-name>, <string-name><surname>Kim</surname> <given-names>J</given-names></string-name>, <string-name><surname>Valencia-Montoya</surname> <given-names>W</given-names></string-name>, <string-name><surname>Hibbs</surname> <given-names>R</given-names></string-name>, <string-name><surname>Bellono</surname> <given-names>N</given-names></string-name></person-group>. <article-title>Structural basis of sensory receptor evolution in octopus</article-title>. <source>Nature</source>. <year>2023</year>; <volume>616</volume>:<fpage>373</fpage>.</mixed-citation></ref>
<ref id="c5"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Alvarez-Salvado</surname> <given-names>E</given-names></string-name>, <string-name><surname>Licata</surname> <given-names>AM</given-names></string-name>, <string-name><surname>Connor</surname> <given-names>EG</given-names></string-name>, <string-name><surname>McHugh</surname> <given-names>MK</given-names></string-name>, <string-name><surname>King</surname> <given-names>BM</given-names></string-name>, <string-name><surname>Stavropoulos</surname> <given-names>N</given-names></string-name>, <string-name><surname>Victor</surname> <given-names>JD</given-names></string-name>, <string-name><surname>Crimaldi</surname> <given-names>JP</given-names></string-name>, <string-name><surname>Nagel</surname> <given-names>KI</given-names></string-name></person-group>. <article-title>Elementary sensory-motor transformations underlying olfactory navigation in walking fruit-flies</article-title>. <source>eLife</source>. <year>2018</year> <month>aug</month>; <volume>7</volume>:<elocation-id>e37815</elocation-id>. <pub-id pub-id-type="doi">10.7554/eLife.37815</pub-id>, doi: <pub-id pub-id-type="doi">10.7554/eLife.37815</pub-id>.</mixed-citation></ref>
<ref id="c6"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Atema</surname> <given-names>J</given-names></string-name></person-group>. <article-title>Eddy chemotaxis and odor landscapes: exploration of nature with animal sensors</article-title>. <source>Biol Bull</source>. <year>1996</year>; <volume>191</volume>:<fpage>129</fpage>.</mixed-citation></ref>
<ref id="c7"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Baker</surname> <given-names>KL</given-names></string-name>, <string-name><surname>Dickinson</surname> <given-names>M</given-names></string-name>, <string-name><surname>Findley</surname> <given-names>TM</given-names></string-name>, <string-name><surname>Gire</surname> <given-names>DH</given-names></string-name>, <string-name><surname>Louis</surname> <given-names>M</given-names></string-name>, <string-name><surname>Suver</surname> <given-names>MP</given-names></string-name>, <string-name><surname>Verhagen</surname> <given-names>JV</given-names></string-name>, <string-name><surname>Nagel</surname> <given-names>KI</given-names></string-name>, <string-name><surname>Smear</surname> <given-names>MC</given-names></string-name></person-group>. <article-title>Algorithms for Olfactory Search across Species</article-title>. <source>Journal of Neuroscience</source>. <year>2018</year>; <volume>38</volume>:<fpage>9383</fpage>.</mixed-citation></ref>
<ref id="c8"><mixed-citation publication-type="confproc"><person-group person-group-type="author"><string-name><surname>Baker</surname> <given-names>TC</given-names></string-name></person-group>. <article-title>Upwind flight and casting flight: complementary and tonic systems used for location of sex pheromone sources by male moths</article-title>. <conf-name>Proc 10<sup><italic>th</italic></sup> Intl Symposium on Olfaction and Taste</conf-name>. <year>1990</year>; <volume>13</volume>:<fpage>18</fpage>.</mixed-citation></ref>
<ref id="c9"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Balkovsky</surname> <given-names>E</given-names></string-name>, <string-name><surname>Shraiman</surname> <given-names>BI</given-names></string-name></person-group>. <article-title>Olfactory search at high Reynolds number</article-title>. <source>Proc Nat Acad Sci</source>. <year>2002</year>; <volume>99</volume>(<issue>20</issue>):<fpage>12589</fpage>–<lpage>93</lpage>.</mixed-citation></ref>
<ref id="c10"><mixed-citation publication-type="confproc"><person-group person-group-type="author"><string-name><surname>Belanger</surname> <given-names>JH</given-names></string-name>, <string-name><surname>Willis</surname> <given-names>MA</given-names></string-name></person-group>. <article-title>Biologically-inspired search algorithms for locating unseen odor sources</article-title>. In, <conf-name>Proc IEEE Symp Intell Control (ISIC ‘98) and IEEE Symp Comp Intell Robot Autom (CIRA ‘98)</conf-name>. <year>1988</year>;.:<fpage>265</fpage>.</mixed-citation></ref>
<ref id="c11"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Berg</surname> <given-names>HC</given-names></string-name></person-group>. <article-title>Chemotaxis in Bacteria</article-title>. <source>Annual Review of Biophysics and Bioengineering</source>. <year>1975</year>; <volume>4</volume>(<issue>1</issue>):<fpage>119</fpage>–<lpage>136</lpage>.</mixed-citation></ref>
<ref id="c12"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Bobkov</surname> <given-names>YV</given-names></string-name>, <string-name><surname>Ache</surname> <given-names>B</given-names></string-name></person-group>. <article-title>Intrinsically bursting olfactory receptor neurons</article-title>. <source>J Neurophysiol</source>. <year>2007</year>; <volume>97</volume>:<fpage>1052</fpage>.</mixed-citation></ref>
<ref id="c13"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Boie</surname> <given-names>SD</given-names></string-name>, <string-name><surname>Connor</surname> <given-names>EG</given-names></string-name>, <string-name><surname>McHugh</surname> <given-names>M</given-names></string-name>, <string-name><surname>Nagel</surname> <given-names>KI</given-names></string-name>, <string-name><surname>Ermentrout</surname> <given-names>GB</given-names></string-name>, <string-name><surname>Crimaldi</surname> <given-names>JP</given-names></string-name>, <string-name><surname>Victor</surname> <given-names>JD</given-names></string-name></person-group>. <article-title>Information-theoretic analysis of realistic odor plumes: What cues are useful for determining location?</article-title> <source>PLoS Comp Bio</source>. <year>2018</year>; <volume>14</volume>:<elocation-id>e1006275</elocation-id>.</mixed-citation></ref>
<ref id="c14"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>van Breugel</surname> <given-names>F</given-names></string-name>, <string-name><surname>Dickinson</surname> <given-names>MH</given-names></string-name></person-group>. <article-title>Plume-tracking behavior of flying Drosophila emerges from a set of distinct sensorymotor reflexes</article-title>. <source>Curr Biol</source>. <year>2014</year>; <volume>24</volume>:<fpage>274</fpage>.</mixed-citation></ref>
<ref id="c15"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Cardé</surname> <given-names>RT</given-names></string-name></person-group>. <article-title>Navigation along windborne lpumes of pheromone and resource-linked odors</article-title>. <source>Annual Review of Entomology</source>. <year>2021</year>; <volume>66</volume>:<fpage>317</fpage>.</mixed-citation></ref>
<ref id="c16"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Carey</surname> <given-names>RM</given-names></string-name>, <string-name><surname>Verhagen</surname> <given-names>JV</given-names></string-name>, <string-name><surname>Wesson</surname> <given-names>DW</given-names></string-name>, <string-name><surname>Pirez</surname> <given-names>N</given-names></string-name>, <string-name><surname>Wachowiak</surname> <given-names>M</given-names></string-name></person-group>. <article-title>Temporal Structure of Receptor Neuron Input to the Olfactory Bulb Imaged in Behaving Rats</article-title>. <source>Journal of Neurophysiology</source>. <year>2009</year>; <volume>101</volume>(<issue>2</issue>):<fpage>1073</fpage>–<lpage>1088</lpage>.</mixed-citation></ref>
<ref id="c17"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Cassandra</surname> <given-names>AR</given-names></string-name>, <string-name><surname>Kaelbling</surname> <given-names>LP</given-names></string-name>, <string-name><surname>Kurien</surname> <given-names>JA</given-names></string-name></person-group>. <article-title>Acting under uncertainty: Discrete Bayesian models for mobile-robot navigation</article-title>. <source>Proc IEEE/RSJ Internl Conf Intelligent Robots and Systems IROS ‘96</source>. <year>1996</year>; <volume>2</volume>:<fpage>963</fpage>.</mixed-citation></ref>
<ref id="c18"><mixed-citation publication-type="book"><person-group person-group-type="author"><string-name><surname>Celani</surname> <given-names>A</given-names></string-name>, <string-name><surname>Panizon</surname> <given-names>E</given-names></string-name></person-group>. <source>Olfactory search. in review</source>. <year>2024</year>;.:.</mixed-citation></ref>
<ref id="c19"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Celani</surname> <given-names>A</given-names></string-name>, <string-name><surname>Villermaux</surname> <given-names>E</given-names></string-name>, <string-name><surname>Vergassola</surname> <given-names>M</given-names></string-name></person-group>. <article-title>Odor Landscapes in Turbulent Environments</article-title>. <source>Phys Rev X</source>. <year>2014</year>; <volume>4</volume>:<fpage>041015</fpage>.</mixed-citation></ref>
<ref id="c20"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>David</surname> <given-names>CT</given-names></string-name>, <string-name><surname>Kennedy</surname> <given-names>JS</given-names></string-name>, <string-name><surname>Ludlow</surname> <given-names>AR</given-names></string-name></person-group>. <article-title>Finding of a sex pheromone source by gypsy moths released in the field</article-title>. <source>Nature</source>. <year>1983</year>; <volume>303</volume>:<fpage>804</fpage>–<lpage>806</lpage>.</mixed-citation></ref>
<ref id="c21"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>David Stupski</surname> <given-names>SD</given-names></string-name>, <string-name><surname>van Breugel</surname> <given-names>F</given-names></string-name></person-group>. <article-title>Wind Gates Search States in Free Flight</article-title>. <source>bioArx</source>. <year>2024</year>; doi.org/<pub-id pub-id-type="doi">10.1101/2023.11.30.569086:1</pub-id>.</mixed-citation></ref>
<ref id="c22"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Demir</surname> <given-names>M</given-names></string-name>, <string-name><surname>Kadakia</surname> <given-names>N</given-names></string-name>, <string-name><surname>Anderson</surname> <given-names>HD</given-names></string-name>, <string-name><surname>Clark</surname> <given-names>DA</given-names></string-name>, <string-name><surname>Emonet</surname> <given-names>T</given-names></string-name></person-group>. <article-title>Walking <italic>Drosophila</italic> navigate complex plumes using stochastic decisions biased by the timing of odor encounters</article-title>. <source>eLife</source>. <year>2020a</year>; <volume>9</volume>:<elocation-id>e57524</elocation-id>.</mixed-citation></ref>
<ref id="c23"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Demir</surname> <given-names>M</given-names></string-name>, <string-name><surname>Kadakia</surname> <given-names>N</given-names></string-name>, <string-name><surname>Anderson</surname> <given-names>HD</given-names></string-name>, <string-name><surname>Clark</surname> <given-names>DA</given-names></string-name>, <string-name><surname>Emonet</surname> <given-names>T</given-names></string-name></person-group>. <article-title>Walking <italic>Drosophila</italic> navigate complex plumes using stochastic decisions biased by the timing of odor encounters</article-title>. <source>eLife</source>. <year>2020b</year> <month>nov</month>; <volume>9</volume>:<elocation-id>e57524</elocation-id>. <pub-id pub-id-type="doi">10.7554/eLife.57524</pub-id>, doi: <pub-id pub-id-type="doi">10.7554/eLife.57524</pub-id>.</mixed-citation></ref>
<ref id="c24"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Duplat</surname> <given-names>J</given-names></string-name>, <string-name><surname>Jouary</surname> <given-names>A</given-names></string-name>, <string-name><surname>Villermaux</surname> <given-names>E</given-names></string-name></person-group>. <article-title>Entanglement rules for random mixtures</article-title>. <source>Phys Rev Lett</source>. <year>2010</year>; <volume>105</volume>:<fpage>034504</fpage>.</mixed-citation></ref>
<ref id="c25"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Etienne</surname> <given-names>AS</given-names></string-name>, <string-name><surname>Jeffery</surname> <given-names>KJ</given-names></string-name></person-group>. <article-title>Path integration in mammals</article-title>. <source>Hippocampus</source>. <year>2004</year>; <volume>14</volume>(<issue>2</issue>):<fpage>180</fpage>–<lpage>192</lpage>. <ext-link ext-link-type="uri" xlink:href="https://onlinelibrary.wiley.com/doi/abs/10.1002/hipo.10173">https://onlinelibrary.wiley.com/doi/abs/10.1002/hipo.10173</ext-link>, doi: <pub-id pub-id-type="doi">10.1002/hipo.10173</pub-id>.</mixed-citation></ref>
<ref id="c26"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Etienne</surname> <given-names>AS</given-names></string-name>, <string-name><surname>Maurer</surname> <given-names>R</given-names></string-name>, <string-name><surname>Seguinot</surname> <given-names>V</given-names></string-name></person-group>. <article-title>Path Integration in Mammals and its Interaction With Visual Landmarks</article-title>. <source>Journal of Experimental Biology</source>. <year>1996</year> <day>01</day>; <volume>199</volume>(<issue>1</issue>):<fpage>201</fpage>–<lpage>209</lpage>. <pub-id pub-id-type="doi">10.1242/jeb.199.1.201</pub-id>, doi: <pub-id pub-id-type="doi">10.1242/jeb.199.1.201</pub-id>.</mixed-citation></ref>
<ref id="c27"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Falkovich</surname> <given-names>G</given-names></string-name>, <string-name><surname>Gawedzki</surname> <given-names>K</given-names></string-name>, <string-name><surname>Vergassola</surname> <given-names>M</given-names></string-name></person-group>. <article-title>Particles and Fields in Fluid Turbulence</article-title>. <source>Rev Mod Phys</source>. <year>2001</year>; <volume>73</volume>:<fpage>913</fpage>.</mixed-citation></ref>
<ref id="c28"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Gepner</surname> <given-names>R</given-names></string-name>, <string-name><surname>Mihovilovic Skanata</surname> <given-names>M</given-names></string-name>, <string-name><surname>Bernat</surname> <given-names>NM</given-names></string-name>, <string-name><surname>Kaplow</surname> <given-names>M</given-names></string-name>, <string-name><surname>Gershow</surname> <given-names>M</given-names></string-name></person-group>. <article-title>Computations underlying <italic>Drosophila</italic> photo-taxis, odor-taxis, and multi-sensory integration</article-title>. <source>eLife</source>. <year>2015</year> <month>may</month>; <volume>4</volume>:<elocation-id>e06229</elocation-id>. <pub-id pub-id-type="doi">10.7554/eLife.06229</pub-id>, doi: <pub-id pub-id-type="doi">10.7554/eLife.06229</pub-id>.</mixed-citation></ref>
<ref id="c29"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Gibson</surname> <given-names>G</given-names></string-name>, <string-name><surname>Brady</surname> <given-names>J</given-names></string-name></person-group>. <article-title>‘Anemotactic’ flight paths of tsetse flies in relation to host odour: a preliminary video study in nature of the response to loss of odour</article-title>. <source>PhysiologicalEntomology</source>. <year>1985</year>; <volume>10</volume>:<fpage>395</fpage>–<lpage>406</lpage>.</mixed-citation></ref>
<ref id="c30"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Gire</surname> <given-names>D</given-names></string-name>, <string-name><surname>Kapoor</surname> <given-names>V</given-names></string-name>, <string-name><surname>Arrighi-Allisan</surname> <given-names>A</given-names></string-name>, <string-name><surname>Seminara</surname> <given-names>A</given-names></string-name>, <string-name><surname>Murthy</surname> <given-names>V</given-names></string-name></person-group>. <article-title>Mice develop efficient strategies for foraging and navigation using complex natural stimuli</article-title>. <source>Curr Biol</source>. <year>2016</year>; <volume>26</volume>:<fpage>1261</fpage>.</mixed-citation></ref>
<ref id="c31"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Gulitski</surname> <given-names>G</given-names></string-name>, <string-name><surname>Kholmyansky</surname> <given-names>M</given-names></string-name>, <string-name><surname>Kinzelbach</surname> <given-names>W</given-names></string-name>, <string-name><surname>Luthi</surname> <given-names>B</given-names></string-name>, <string-name><surname>Tsinober</surname> <given-names>A</given-names></string-name>, <string-name><surname>Yorish</surname> <given-names>S</given-names></string-name></person-group>. <article-title>Velocity and temperature derivatives in high-Reynolds-number turbulent flows in the atmospheric surface layer. Part 1. Facilities, methods and some general results</article-title>. <source>Journal of Fluid Mechanics</source>. <year>2007</year>; <volume>589</volume>:<fpage>57</fpage>–<lpage>81</lpage>.</mixed-citation></ref>
<ref id="c32"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Hauskrecht</surname> <given-names>M</given-names></string-name></person-group>. <article-title>Value-function approximations for partially observable Markov decision processes</article-title>. <source>J Artif Intell Res</source>. <year>2000</year>; <volume>13</volume>:<fpage>33</fpage>.</mixed-citation></ref>
<ref id="c33"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Heinonen</surname> <given-names>RA</given-names></string-name>, <string-name><surname>Biferale</surname> <given-names>L</given-names></string-name>, <string-name><surname>Celani</surname> <given-names>A</given-names></string-name>, <string-name><surname>Vergassola</surname> <given-names>M</given-names></string-name></person-group>. <article-title>Optimal policies for Bayesian olfactory search in turbulent flows</article-title>. <source>Phys Rev E</source>. <year>2023</year> <month>May</month>; <volume>107</volume>:<fpage>055105</fpage>. <ext-link ext-link-type="uri" xlink:href="https://link.aps.org/doi/10.1103/PhysRevE.107.055105">https://link.aps.org/doi/10.1103/PhysRevE.107.055105</ext-link>, doi: <pub-id pub-id-type="doi">10.1103/PhysRevE.107.055105</pub-id>.</mixed-citation></ref>
<ref id="c34"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Heinze</surname> <given-names>S</given-names></string-name>, <string-name><surname>Narendra</surname> <given-names>A</given-names></string-name>, <string-name><surname>Cheung</surname> <given-names>A</given-names></string-name></person-group>. <article-title>Principles of Insect Path Integration</article-title>. <source>Current Biology</source>. <year>2018</year>; <volume>28</volume>:<fpage>R1043</fpage>.</mixed-citation></ref>
<ref id="c35"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Hernandez-Nunez</surname> <given-names>L</given-names></string-name>, <string-name><surname>Belina</surname> <given-names>J</given-names></string-name>, <string-name><surname>Klein</surname> <given-names>M</given-names></string-name>, <string-name><surname>Si</surname> <given-names>G</given-names></string-name>, <string-name><surname>Claus</surname> <given-names>L</given-names></string-name>, <string-name><surname>Carlson</surname> <given-names>JR</given-names></string-name>, <string-name><surname>Samuel</surname> <given-names>AD</given-names></string-name></person-group>. <article-title>Reverse-correlation analysis of navigation dynamics in <italic>Drosophila</italic> larva using optogenetics</article-title>. <source>eLife</source>. <year>2015</year> <month>may</month>; <volume>4</volume>:<elocation-id>e06225</elocation-id>. <pub-id pub-id-type="doi">10.7554/eLife.06225</pub-id>, doi: <pub-id pub-id-type="doi">10.7554/eLife.06225</pub-id>.</mixed-citation></ref>
<ref id="c36"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Ishida</surname> <given-names>H</given-names></string-name></person-group>. <article-title>Chemical sensing in robotic applications: a review</article-title>. <source>IEEE Sensors, J</source>. <year>2020</year>; <volume>12</volume>:<fpage>3163</fpage>.</mixed-citation></ref>
<ref id="c37"><mixed-citation publication-type="preprint"><person-group person-group-type="author"><string-name><surname>Kathman</surname> <given-names>ND</given-names></string-name>, <string-name><surname>Lanz</surname> <given-names>AJ</given-names></string-name>, <string-name><surname>Freed</surname> <given-names>JD</given-names></string-name>, <string-name><surname>Nagel</surname> <given-names>KI</given-names></string-name></person-group>. <article-title>Neural dynamics for working memory and evidence integration during olfactory navigation in Drosophila</article-title>. <source>biorXiv</source>. <year>2024</year>;.</mixed-citation></ref>
<ref id="c38"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Kramer</surname> <given-names>E</given-names></string-name></person-group>. <article-title>A tentative intercausal nexus and its computer model on insect orientation in windborne pheromone plumes</article-title>. in <source>Insect Pher Res, New Dir</source>. <year>1997</year>;.:<fpage>232</fpage>.</mixed-citation></ref>
<ref id="c39"><mixed-citation publication-type="book"><person-group person-group-type="author"><string-name><surname>Krishnamurthy</surname> <given-names>V</given-names></string-name></person-group>. <source>Partially Observed Markov Decision Processes</source>. <publisher-name>Cambridge University Press</publisher-name>; <year>2016</year>.</mixed-citation></ref>
<ref id="c40"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Kuenen</surname> <given-names>LPS</given-names></string-name>, <string-name><surname>Cardé</surname> <given-names>RT</given-names></string-name></person-group>. <article-title>Strategies for recontacting a los pheromone plume: casting and upwind flight in the male gypsy moth</article-title>. <source>Physiological Entomology</source>. <year>1994</year>; <volume>15</volume>:<fpage>317</fpage>.</mixed-citation></ref>
<ref id="c41"><mixed-citation publication-type="book"><person-group person-group-type="author"><string-name><surname>LaValle</surname> <given-names>SM</given-names></string-name></person-group>. <source>Planning algorithms</source>. <publisher-name>Cambridge University Press</publisher-name>; <year>2006</year>.</mixed-citation></ref>
<ref id="c42"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Liao</surname> <given-names>JC</given-names></string-name></person-group>. <article-title>The role of the lateral line and vision on body kinematics and hydrodynamic preference of rainbow trout in turbulent flow</article-title>. <source>Journal of Experimental Biology</source>. <year>2006</year> <day>10</day>; <volume>209</volume>(<issue>20</issue>):<fpage>4077</fpage>–<lpage>4090</lpage>. <pub-id pub-id-type="doi">10.1242/jeb.02487</pub-id>, doi: <pub-id pub-id-type="doi">10.1242/jeb.02487</pub-id>.</mixed-citation></ref>
<ref id="c43"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Loisy</surname> <given-names>A</given-names></string-name>, <string-name><surname>Eloy</surname> <given-names>C</given-names></string-name></person-group>. <article-title>Searching for a source without gradients, how good is infotaxis and how to beat it</article-title>. <source>Proc R Soc A</source>. <year>2022</year>; <volume>478</volume>:<fpage>20220118</fpage>.</mixed-citation></ref>
<ref id="c44"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Loisy</surname> <given-names>A</given-names></string-name>, <string-name><surname>Heinonen</surname> <given-names>RA</given-names></string-name></person-group>. <article-title>Deep reinforcement learning for the olfactory search POMDP: a quantitative benchmark</article-title>. <source>European Physical Journal E</source>. <year>2023a</year>; <volume>46</volume>:<fpage>17</fpage>.</mixed-citation></ref>
<ref id="c45"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Loisy</surname> <given-names>A</given-names></string-name>, <string-name><surname>Heinonen</surname> <given-names>RA</given-names></string-name></person-group>. <article-title>Deep reinforcement learning for the olfactory search POMDP: a quantitative benchmark</article-title>. <source>Cereb CortexThe European Physical Journal E</source>. <year>2023b</year>; <volume>46</volume>:<fpage>17</fpage>.</mixed-citation></ref>
<ref id="c46"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Matheson</surname> <given-names>AMM</given-names></string-name>, <string-name><surname>Lanz</surname> <given-names>AJ</given-names></string-name>, <string-name><surname>Medina</surname> <given-names>AM</given-names></string-name>, <string-name><surname>Licata</surname> <given-names>AM</given-names></string-name>, <string-name><surname>Currier</surname> <given-names>TA</given-names></string-name>, <string-name><surname>Syed</surname> <given-names>MH</given-names></string-name>, <string-name><surname>Nagel</surname> <given-names>KI</given-names></string-name></person-group>. <article-title>A neural circuit for wind-guided olfactory navigation</article-title>. <source>Nature Communications</source>. <year>2022</year>; <volume>13</volume>:<fpage>4613</fpage>.</mixed-citation></ref>
<ref id="c47"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Michaelis</surname> <given-names>B</given-names></string-name>, <string-name><surname>Leathers</surname> <given-names>K</given-names></string-name>, <string-name><surname>Bobkov</surname> <given-names>Y</given-names></string-name>, <string-name><surname>Ache</surname> <given-names>B</given-names></string-name>, <string-name><surname>Principe</surname> <given-names>J</given-names></string-name>, <string-name><surname>Baharloo</surname> <given-names>R</given-names></string-name>, <string-name><surname>Park</surname> <given-names>I</given-names></string-name>, <string-name><surname>Reidenbach</surname> <given-names>M</given-names></string-name></person-group>. <article-title>Odor tracking in aquatic organisms: the importance of temporal and spatial intermittency of the turbulent plume</article-title>. <source>Sci Rep</source>. <year>2020</year>; <volume>10</volume>:<fpage>7961</fpage>.</mixed-citation></ref>
<ref id="c48"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Murlis</surname> <given-names>J</given-names></string-name>, <string-name><surname>Elkinton</surname> <given-names>JS</given-names></string-name>, <string-name><surname>Cardé</surname> <given-names>RT</given-names></string-name></person-group>. <article-title>Odor plumes and how insects use them</article-title>. <source>Annual Review of Entomology</source>. <year>1992</year>; <volume>37</volume>:<fpage>505</fpage>.</mixed-citation></ref>
<ref id="c49"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Murlis</surname> <given-names>J</given-names></string-name>, <string-name><surname>Jones</surname> <given-names>CD</given-names></string-name></person-group>. <article-title>Fine-scale structure of odour plumes in relation to insect orientation to distant pheromone and other attractant sources</article-title>. <source>Physiological Entomology</source>. <year>1981</year>; <volume>6</volume>:<fpage>71</fpage>–<lpage>86</lpage>.</mixed-citation></ref>
<ref id="c50"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Nag</surname> <given-names>A</given-names></string-name>, <string-name><surname>van Breugel</surname> <given-names>F</given-names></string-name></person-group>. <article-title>Odour source distance is predictable from a time history of odour statistics for large scale outdoor plumes</article-title>. <source>J R Soc Interface</source>. <year>2024</year>; <volume>21</volume>:<fpage>2120240169</fpage>.</mixed-citation></ref>
<ref id="c51"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Park</surname> <given-names>IJ</given-names></string-name>, <string-name><surname>Hein</surname> <given-names>AM</given-names></string-name>, <string-name><surname>Bobkov</surname> <given-names>YV</given-names></string-name>, <string-name><surname>Reidenbach</surname> <given-names>MA</given-names></string-name>, <string-name><surname>Ache</surname> <given-names>BW</given-names></string-name>, <string-name><surname>Principe</surname> <given-names>JC</given-names></string-name></person-group>. <article-title>Neurally Encoding Time for Olfactory Navigation</article-title>. <source>Plos Comput Biol</source>. <year>2016</year>; <volume>12</volume>:<elocation-id>e1004682</elocation-id>.</mixed-citation></ref>
<ref id="c52"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Radvansky</surname> <given-names>BA</given-names></string-name>, <string-name><surname>Dombeck</surname> <given-names>DA</given-names></string-name></person-group>. <article-title>An olfactory virtual reality system for mice</article-title>. <source>Nature Communications</source>. <year>2018</year>; <volume>9</volume>:<fpage>839</fpage>.</mixed-citation></ref>
<ref id="c53"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Reddy</surname> <given-names>G</given-names></string-name>, <string-name><surname>Murthy</surname> <given-names>VN</given-names></string-name>, <string-name><surname>Vergassola</surname> <given-names>M</given-names></string-name></person-group>. <article-title>Olfactory Sensing and Navigation in Turbulent Environments</article-title>. <source>Annual Review of Condensed Matter Physics</source>. <year>2022</year>; <volume>13</volume>(<issue>1</issue>):<fpage>191</fpage>–<lpage>213</lpage>. doi: <pub-id pub-id-type="doi">10.1146/annurev-conmatphys-031720-032754</pub-id>.</mixed-citation></ref>
<ref id="c54"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Reynolds</surname> <given-names>AM</given-names></string-name>, <string-name><surname>Reynolds</surname> <given-names>DR</given-names></string-name>, <string-name><surname>Smith</surname> <given-names>AD</given-names></string-name>, <string-name><surname>Chapman</surname> <given-names>JW</given-names></string-name></person-group>. <article-title>Orientation Cues for High-Flying Nocturnal Insect Migrants: Do Turbulence-Induced Temperature and Velocity Fluctuations Indicate the Mean Wind Flow?</article-title> <source>Plos ONE</source>. <year>2010</year>; <volume>5</volume>:<elocation-id>e15758</elocation-id>.</mixed-citation></ref>
<ref id="c55"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Rigolli</surname> <given-names>N</given-names></string-name>, <string-name><surname>Magnoli</surname> <given-names>N</given-names></string-name>, <string-name><surname>Rosasco</surname> <given-names>L</given-names></string-name>, <string-name><surname>Seminara</surname> <given-names>A</given-names></string-name></person-group>. <article-title>Learning to predict target location with turbulent odor plumes</article-title>. <source>eLife</source>. <year>2022a</year> <month>aug</month>; <volume>11</volume>:<elocation-id>e72196</elocation-id>. doi: <pub-id pub-id-type="doi">10.7554/eLife.72196</pub-id>.</mixed-citation></ref>
<ref id="c56"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Rigolli</surname> <given-names>N</given-names></string-name>, <string-name><surname>Reddy</surname> <given-names>G</given-names></string-name>, <string-name><surname>Seminara</surname> <given-names>A</given-names></string-name>, <string-name><surname>Vergassola</surname> <given-names>M</given-names></string-name></person-group>. <article-title>Alternation emerges as a multi-modal strategy for turbulent odor navigation</article-title>. <source>eLife</source>. <year>2022b</year> <month>aug</month>; <volume>11</volume>:<elocation-id>e76989</elocation-id>.</mixed-citation></ref>
<ref id="c57"><mixed-citation publication-type="data"><person-group person-group-type="author"><string-name><surname>Rigolli</surname> <given-names>N</given-names></string-name>, <string-name><surname>Reddy</surname> <given-names>G</given-names></string-name>, <string-name><surname>Seminara</surname> <given-names>A</given-names></string-name>, <string-name><surname>Vergassola</surname> <given-names>M</given-names></string-name></person-group>, <article-title>Alternation emerges as a multi-modal strategy for turbulent odor navigation - Dataset</article-title>. <source>Zenodo</source>; <year>2022c</year>. <pub-id pub-id-type="doi">10.5281/zenodo.6538177</pub-id>.</mixed-citation></ref>
<ref id="c58"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Save</surname> <given-names>E</given-names></string-name>, <string-name><surname>Nerad</surname> <given-names>L</given-names></string-name>, <string-name><surname>Poucet</surname> <given-names>B</given-names></string-name></person-group>. <article-title>Contribution of multiple sensory information to place field stability in hippocampal place cells</article-title>. <source>Hippocampus</source>. <year>2000</year>; <volume>10</volume>:<fpage>64</fpage>.</mixed-citation></ref>
<ref id="c59"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Schal</surname> <given-names>C</given-names></string-name></person-group>. <article-title>Intraspecific vertical stratification as a mate-finding mechanism in tropical cockroaches</article-title>. <source>Science</source>. <year>1982</year>; <volume>215</volume>:<fpage>1505</fpage>.</mixed-citation></ref>
<ref id="c60"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Shani</surname> <given-names>G</given-names></string-name>, <string-name><surname>Pineau</surname> <given-names>J</given-names></string-name>, <string-name><surname>Kaplow</surname> <given-names>R</given-names></string-name></person-group>. <article-title>A survey of point-based pomdp solvers</article-title>. <source>Autonomous Agents and MultiAgent Systems</source>. <year>2013</year>; <volume>27</volume>:<fpage>1</fpage>–<lpage>51</lpage>.</mixed-citation></ref>
<ref id="c61"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Shraiman</surname> <given-names>B</given-names></string-name>, <string-name><surname>Siggia</surname> <given-names>E</given-names></string-name></person-group>. <article-title>Scalar Turbulence</article-title>. <source>Nature</source>. <year>2000</year>; <volume>405</volume>:<fpage>639</fpage>.</mixed-citation></ref>
<ref id="c62"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Singh</surname> <given-names>SH</given-names></string-name>, <string-name><surname>van Breugel</surname> <given-names>F</given-names></string-name>, <string-name><surname>Rao</surname> <given-names>RPN</given-names></string-name>, <string-name><surname>Brunton</surname> <given-names>BW</given-names></string-name></person-group>. <article-title>Emergent behaviour and neural dynamics in artificial agents tracking odour plumes</article-title>. <source>Nature Machine Intelligence</source>. <year>2023</year>; <volume>5</volume>:<fpage>58</fpage>–<lpage>70</lpage>.</mixed-citation></ref>
<ref id="c63"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Stupski</surname> <given-names>SD</given-names></string-name>, <string-name><surname>van Breugel</surname> <given-names>F</given-names></string-name></person-group>. <article-title>Wind gates olfaction-driven search states in free flight</article-title>. <source>Current Biology</source>. <year>2024</year>; <volume>34</volume>:<fpage>4397</fpage>–<lpage>4411</lpage>.</mixed-citation></ref>
<ref id="c64"><mixed-citation publication-type="book"><person-group person-group-type="author"><string-name><surname>Sutton</surname> <given-names>R</given-names></string-name>, <string-name><surname>Barto</surname> <given-names>A</given-names></string-name></person-group>. <source>Reinforcement Learning: An Introduction</source>. <publisher-name>MIT Press</publisher-name>; <year>1998</year>.</mixed-citation></ref>
<ref id="c65"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Torr</surname> <given-names>SJ</given-names></string-name></person-group>. <article-title>Behaviour of tsetse flies (Glossina) in host odour plumes in the field</article-title>. <source>Physiological Entomology</source>. <year>1988</year>; <volume>13</volume>:<fpage>467</fpage>–<lpage>478</lpage>.</mixed-citation></ref>
<ref id="c66"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Verano</surname> <given-names>KVB</given-names></string-name>, <string-name><surname>Panizon</surname> <given-names>E</given-names></string-name>, <string-name><surname>Celani</surname> <given-names>A</given-names></string-name></person-group>. <article-title>Olfactory search with finite-state controllers</article-title>. <source>Proc Nat Acad Sci</source>. <year>2023</year>; <volume>120</volume>(<issue>34</issue>):<elocation-id>e2304230120</elocation-id>.</mixed-citation></ref>
<ref id="c67"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Vergassola</surname> <given-names>M</given-names></string-name>, <string-name><surname>Villermaux</surname> <given-names>E</given-names></string-name>, <string-name><surname>Shraiman</surname> <given-names>BI</given-names></string-name></person-group>. <article-title>‘Infotaxis’ as a strategy for searching without gradients</article-title>. <source>Nature</source>. <year>2007</year>; <volume>445</volume>:<fpage>406</fpage>.</mixed-citation></ref>
<ref id="c68"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Viola</surname> <given-names>F</given-names></string-name>, <string-name><surname>Meschini</surname> <given-names>V</given-names></string-name>, <string-name><surname>Verzicco</surname> <given-names>R</given-names></string-name></person-group>. <article-title>Fluid-structure-electrophysiology interaction (FSEI) in the left-heart: a multi-way coupled computational model</article-title>. <source>European Journal of Mechanics-B/Fluids</source>. <year>2020</year>; <volume>79</volume>:<fpage>212</fpage>–<lpage>232</lpage>.</mixed-citation></ref>
<ref id="c69"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Willis</surname> <given-names>MA</given-names></string-name>, <string-name><surname>Avondet</surname> <given-names>JL</given-names></string-name>, <string-name><surname>Finnell</surname> <given-names>AS</given-names></string-name></person-group>. <article-title>Effects of altering flow and odor information on plume tracking behavior in walking cockroaches, Periplaneta americana (L.)</article-title>. <source>The Journal of Experimental Biology</source>. <year>2008</year>; <volume>211</volume>:<fpage>2317</fpage>.</mixed-citation></ref>
<ref id="c70"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Wolf</surname> <given-names>H</given-names></string-name>, <string-name><surname>Wehner</surname> <given-names>R</given-names></string-name></person-group>. <article-title>Pinpointing Food Sources: Olfactory and Anemotactic Orientation in Desert Ants, Cataglyphis Fortis</article-title>. <source>Journal of Experimental Biology</source>. <year>2000</year>; <volume>203</volume>(<issue>5</issue>):<fpage>857</fpage>–<lpage>868</lpage>.</mixed-citation></ref>
<ref id="c71"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Wystrach</surname> <given-names>A</given-names></string-name>, <string-name><surname>Schwarz</surname> <given-names>S</given-names></string-name>, <string-name><surname>Baniel</surname> <given-names>A</given-names></string-name>, <string-name><surname>Cheng</surname> <given-names>K</given-names></string-name></person-group>. <article-title>Backtracking behaviour in lost ants: an additional strategy in their navigational toolkit</article-title>. <source>Proc Roy Soc B</source>. <year>2013</year>; <volume>280</volume>:<fpage>20131677</fpage>.</mixed-citation></ref>
<ref id="c72"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Yu</surname> <given-names>YSW</given-names></string-name>, <string-name><surname>Graff</surname> <given-names>MM</given-names></string-name>, <string-name><surname>Bresee</surname> <given-names>CS</given-names></string-name>, <string-name><surname>Man</surname> <given-names>YB</given-names></string-name>, <string-name><surname>Hartmann</surname> <given-names>MJZ</given-names></string-name></person-group>. <article-title>Whiskers aid anemotaxis in rats</article-title>. <source>Science Advances</source>. <year>2016</year>; <volume>2</volume>(<issue>8</issue>):<elocation-id>e1600716</elocation-id>. <ext-link ext-link-type="uri" xlink:href="https://www.science.org/doi/abs/10.1126/sciadv.1600716">https://www.science.org/doi/abs/10.1126/sciadv.1600716</ext-link>, doi: <pub-id pub-id-type="doi">10.1126/sciadv.1600716</pub-id>.</mixed-citation></ref>
<ref id="c73"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Zhang</surname> <given-names>S</given-names></string-name>, <string-name><surname>Manahan-Vaughan</surname> <given-names>D</given-names></string-name></person-group>. <article-title>Spatial olfactory learning contributes to place field formation in the hippocampus</article-title>. <source>Cereb Cortex</source>. <year>2015</year>; <volume>25</volume>:<fpage>423</fpage>–<lpage>32</lpage>.</mixed-citation></ref>
<ref id="c74"><mixed-citation publication-type="data" specific-use="generated"><person-group person-group-type="author"><string-name><surname>Rando</surname>, <given-names>M.</given-names></string-name>, <string-name><surname>James</surname>, <given-names>M.</given-names></string-name>, <string-name><surname>Verri</surname>, <given-names>A.</given-names></string-name>, <string-name><surname>Rosasco</surname>, <given-names>L.</given-names></string-name>, <string-name><surname>Seminara</surname>, <given-names>A</given-names></string-name></person-group>. <article-title>Q-learning with temporal memory to navigate turbulence</article-title>. <source>Zenodo</source>. <year>2025</year>; <pub-id pub-id-type="doi">10.5281/zenodo.14655992</pub-id>.</mixed-citation></ref>
</ref-list>
</back>
<sub-article id="sa0" article-type="editor-report">
<front-stub>
<article-id pub-id-type="doi">10.7554/eLife.102906.2.sa3</article-id>
<title-group>
<article-title>eLife Assessment</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author">
<name>
<surname>Berman</surname>
<given-names>Gordon J</given-names>
</name>
<role specific-use="editor">Reviewing Editor</role>
<aff>
<institution-wrap>
<institution>Emory University</institution>
</institution-wrap>
<city>Atlanta</city>
<country>United States of America</country>
</aff>
</contrib>
</contrib-group>
<kwd-group kwd-group-type="evidence-strength">
<kwd>Compelling</kwd>
</kwd-group>
<kwd-group kwd-group-type="claim-importance">
<kwd>Important</kwd>
</kwd-group>
</front-stub>
<body>
<p>This <bold>important</bold> study uses reinforcement learning to study how turbulent odor stimuli should be processed to yield successful navigation. The authors find that there is an optimal memory length over which an agent should ignore blanks in the odor to discriminate whether the agent is still inside the plume or outside of it, complementing recent studies using recurrent neural networks and finite state controllers to identify optimal strategies for navigating a turbulent plume. The strength of evidence is <bold>compelling</bold>, presenting a novel approach to understanding optimal representations for navigation in stochastic sensory environments.</p>
</body>
</sub-article>
<sub-article id="sa1" article-type="referee-report">
<front-stub>
<article-id pub-id-type="doi">10.7554/eLife.102906.2.sa2</article-id>
<title-group>
<article-title>Reviewer #1 (Public review):</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author">
<anonymous/>
<role specific-use="referee">Reviewer</role>
</contrib>
</contrib-group>
</front-stub>
<body>
<p>Overall I found the approach taken by the authors to be clear and convincing. It is striking that the conclusions are similar to those obtained in a recent study using a different computational approach (finite state controllers), and lends confidence to the conclusions about the existence of an optimal memory duration. There are a few questions that could be expanded on in future studies:</p>
<p>(1) Spatial encoding requirements</p>
<p>The manuscript contrasts the approach taken here (reinforcement learning in a gridworld) with strategies that involve a &quot;spatial map&quot; such as infotaxis. However, the gridworld navigation algorithm has an implicit allocentric representation, since movement can be in one of four allocentric directions (up, down, left, right), and wind direction is defined in these coordinates. Future studies might ask if an agent can learn the strategy without a known wind direction if it can only go left/right/forward/back/turn (in egocentric coordinates). In discussing possible algorithms, and the features of this one, it might be helpful to distinguish (1) those that rely only on egocentric computations (run and tumble), (2) those that rely on a single direction cue such as wind direction, (3) those that rely on allocentric representations of direction, and (4) those that rely on a full spatial map of the environment.</p>
<p>(2) Recovery strategy on losing the plume</p>
<p>The authors explore several recovery strategies upon losing the plume, including backtracking, circling, and learned strategies, finding that a learned strategy is optimal. As insects show a variety of recovery strategies that can depend on the model of locomotion, it would be interesting in the future to explore under which conditions various recovery strategies are optimal and whether they can predict the strategies of real animals in different environments.</p>
<p>(3) Is there a minimal representation of odor for efficient navigation?</p>
<p>The authors suggest that the number of olfactory states could potentially be reduced to reduce computational cost. They show that reducing the number of olfactory states to 1 dramatically reduces performance. In the future it would be interesting to identify optimal internal representations of odor for navigation and to compare these to those found in real olfactory systems. Does the optimal number of odor and void states depend on the spatial structure of the turbulence as explored in Figure 5?</p>
</body>
</sub-article>
<sub-article id="sa2" article-type="referee-report">
<front-stub>
<article-id pub-id-type="doi">10.7554/eLife.102906.2.sa1</article-id>
<title-group>
<article-title>Reviewer #2 (Public review):</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author">
<anonymous/>
<role specific-use="referee">Reviewer</role>
</contrib>
</contrib-group>
</front-stub>
<body>
<p>Summary:</p>
<p>The authors investigate the problem of olfactory search in turbulent environments using artificial agents trained using tabular Q-learning, a simple and interpretable reinforcement learning (RL) algorithm. The agents are trained solely on odor stimuli, without access to spatial information or prior knowledge about the odor plume's shape. This approach makes the emergent control strategy more biologically plausible for animals navigating exclusively using olfactory signals. The learned strategies show parallels to observed animal behaviors, such as upwind surging and crosswind casting. The approach generalizes well to different environments and effectively handles the intermittency of turbulent odors.</p>
<p>Strengths:</p>
<p>* The use of numerical simulations to generate realistic turbulent fluid dynamics sets this paper apart from studies that rely on idealized or static plumes.</p>
<p>
* A key innovation is the introduction of a small set of interpretable olfactory states based on moving averages of odor intensity and sparsity, coupled with an adaptive temporal memory.</p>
<p>
* The paper provides a thorough analysis of different recovery strategies when an agent loses the odor trail, offering insights into the trade-offs between various approaches.</p>
<p>
* The authors provide a comprehensive performance analysis of their algorithm across a range of environments and recovery strategies, demonstrating the versatility of the approach.</p>
<p>
* Finally, the authors list an interesting set of real-world experiments based on their findings, that might invite interest from experimentalists across multiple species.</p>
<p>Weaknesses:</p>
<p>* Using tabular Q-learning is both a strength and a limitation. It's simple and interpretable, making it easier to analyze the learned strategies, but the discrete action space seems somewhat unnatural. In real-world biological systems, actions (like movement) are continuous rather than discrete. Additionally, the ground-frame actions may not map naturally to how animals navigate odor plumes (e.g. insects often navigate based on their own egocentric frame).</p>
</body>
</sub-article>
<sub-article id="sa3" article-type="author-comment">
<front-stub>
<article-id pub-id-type="doi">10.7554/eLife.102906.2.sa0</article-id>
<title-group>
<article-title>Author response:</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author">
<name>
<surname>Rando</surname>
<given-names>Marco</given-names>
</name>
<role specific-use="author">Author</role>
</contrib>
<contrib contrib-type="author">
<name>
<surname>James</surname>
<given-names>Martin</given-names>
</name>
<role specific-use="author">Author</role>
</contrib>
<contrib contrib-type="author">
<name>
<surname>Verri</surname>
<given-names>Alessandro</given-names>
</name>
<role specific-use="author">Author</role>
</contrib>
<contrib contrib-type="author">
<name>
<surname>Rosasco</surname>
<given-names>Lorenzo</given-names>
</name>
<role specific-use="author">Author</role>
</contrib>
<contrib contrib-type="author">
<name>
<surname>Seminara</surname>
<given-names>Agnese</given-names>
</name>
<role specific-use="author">Author</role>
</contrib>
</contrib-group>
</front-stub>
<body>
<p>The following is the authors’ response to the current reviews.</p>
<disp-quote content-type="editor-comment">
<p><bold>Public Reviews:</bold></p>
<p><bold>Reviewer #1 (Public review):</bold></p>
<p>Overall I found the approach taken by the authors to be clear and convincing. It is striking that the conclusions are similar to those obtained in a recent study using a different computational approach (finite state controllers), and lends confidence to the conclusions about the existence of an optimal memory duration. There are a few questions that could be expanded on in future studies:</p>
<p>(1) Spatial encoding requirements</p>
<p>The manuscript contrasts the approach taken here (reinforcement learning in a gridworld) with strategies that involve a &quot;spatial map&quot; such as infotaxis. However, the gridworld navigation algorithm has an implicit allocentric representation, since movement can be in one of four allocentric directions (up, down, left, right), and wind direction is defined in these coordinates. Future studies might ask if an agent can learn the strategy without a known wind direction if it can only go left/right/forward/back/turn (in egocentric coordinates). In discussing possible algorithms, and the features of this one, it might be helpful to distinguish (1) those that rely only on egocentric computations (run and tumble), (2) those that rely on a single direction cue such as wind direction, (3) those that rely on allocentric representations of direction, and (4) those that rely on a full spatial map of the environment.</p>
</disp-quote>
<p>We agree that the question of what orientation skills are needed to implement an algorithm is interesting. We remark that our agents do not use allocentric directions in the sense of north, east, west and east relative to e.g. fixed landmarks in the environment. Instead, directions are defined <italic>relative to the mean wind</italic>, which is assumed fixed and known. (In our first answer to reviewers we used “north east south west relative to mean wind”, which may have caused confusion – but in the manuscript we only use upwind downwind and crosswind).</p>
<disp-quote content-type="editor-comment">
<p>(2) Recovery strategy on losing the plume</p>
<p>The authors explore several recovery strategies upon losing the plume, including backtracking, circling, and learned strategies, finding that a learned strategy is optimal. As insects show a variety of recovery strategies that can depend on the model of locomotion, it would be interesting in the future to explore under which conditions various recovery strategies are optimal and whether they can predict the strategies of real animals in different environments.</p>
</disp-quote>
<p>Agreed, it will be interesting to study systematically the emergence of distinct recovery strategies and compare to living organisms.</p>
<disp-quote content-type="editor-comment">
<p>(3) Is there a minimal representation of odor for efficient navigation?</p>
<p>The authors suggest that the number of olfactory states could potentially be reduced to reduce computational cost. They show that reducing the number of olfactory states to 1 dramatically reduces performance. In the future it would be interesting to identify optimal internal representations of odor for navigation and to compare these to those found in real olfactory systems. Does the optimal number of odor and void states depend on the spatial structure of the turbulence as explored in Figure 5?</p>
</disp-quote>
<p>We agree that minimal odor representations are an intriguing question. While tabular Q learning cannot derive optimal odor representations systematically, one could expand on the approach we have taken here and provide more comparisons. It will be interesting to follow this approach in a future study.</p>
<disp-quote content-type="editor-comment">
<p><bold>Reviewer #2 (Public review):</bold></p>
<p>Summary:</p>
<p>The authors investigate the problem of olfactory search in turbulent environments using artificial agents trained using tabular Q-learning, a simple and interpretable reinforcement learning (RL) algorithm. The agents are trained solely on odor stimuli, without access to spatial information or prior knowledge about the odor plume's shape. This approach makes the emergent control strategy more biologically plausible for animals navigating exclusively using olfactory signals. The learned strategies show parallels to observed animal behaviors, such as upwind surging and crosswind casting. The approach generalizes well to different environments and effectively handles the intermittency of turbulent odors.</p>
<p>Strengths:</p>
<p>* The use of numerical simulations to generate realistic turbulent fluid dynamics sets this paper apart from studies that rely on idealized or static plumes.</p>
<p>* A key innovation is the introduction of a small set of interpretable olfactory states based on moving averages of odor intensity and sparsity, coupled with an adaptive temporal memory.</p>
<p>* The paper provides a thorough analysis of different recovery strategies when an agent loses the odor trail, offering insights into the trade-offs between various approaches.</p>
<p>* The authors provide a comprehensive performance analysis of their algorithm across a range of environments and recovery strategies, demonstrating the versatility of the approach.</p>
<p>* Finally, the authors list an interesting set of real-world experiments based on their findings, that might invite interest from experimentalists across multiple species.</p>
<p>Weaknesses:</p>
<p>* Using tabular Q-learning is both a strength and a limitation. It's simple and interpretable, making it easier to analyze the learned strategies, but the discrete action space seems somewhat unnatural. In real-world biological systems, actions (like movement) are continuous rather than discrete. Additionally, the ground-frame actions may not map naturally to how animals navigate odor plumes (e.g. insects often navigate based on their own egocentric frame).</p>
</disp-quote>
<p>We agree with the reviewer, and will look forward to study this problem further to make it suitable for meaningful comparisons with animal behavior.</p>
<disp-quote content-type="editor-comment">
<p><bold>Recommendations for the authors:</bold></p>
<p><bold>Reviewer #1 (Recommendations for the authors):</bold></p>
<p>The authors have addressed my major concerns and I support publication of this interesting manuscript. A couple of small suggestions:</p>
<p>(1) In discussing performance in different environments (line 328-362) it might be easier to read if you referred to the environments by descriptive names rather than numbers.</p>
</disp-quote>
<p>Thank you for the suggestion, which we implemented</p>
<disp-quote content-type="editor-comment">
<p>(2) Line 371: measurements of flow speed depend on antennae in insects. Insects can measure local speed and direct of flow using antennae, e.g. Bell and Kramer, 1979, Suver et al. 2019. Okubo et al. 2020,</p>
</disp-quote>
<p>Thank you for the references</p>
<disp-quote content-type="editor-comment">
<p>(3) line 448: &quot;Similarly, an odor detection elicits upwind surges that can last several seconds&quot; maybe &quot;Similarly, an odor detection elicits upwind surges that can outlast the odor by several seconds&quot;?</p>
</disp-quote>
<p>Thank you for the suggestion</p>
<disp-quote content-type="editor-comment">
<p><bold>Reviewer #2 (Recommendations for the authors):</bold></p>
<p>I commend the authors for their revisions in response to reviewer feedback.</p>
<p>While I appreciate that the manuscript is now accompanied by code and data, I must note that the accompanying code-repository lacks proper instructions for use and is likely incomplete (e.g. where is the main function one should run to run your simulations? How should one train? How should one recreate the results? Which data files go where?).</p>
<p>For examples of high-quality code-release, please see the documentation for these RL-for-neuroscience code repositories (from previously published papers):</p>
<p><ext-link ext-link-type="uri" xlink:href="https://github.com/ryzhang1/Inductive_bias">https://github.com/ryzhang1/Inductive_bias</ext-link></p>
<p><ext-link ext-link-type="uri" xlink:href="https://github.com/BruntonUWBio/plumetracknets">https://github.com/BruntonUWBio/plumetracknets</ext-link></p>
<p>The accompanying data does provide snapshots from their turbulent plume simulations, which should be valuable for future research.</p>
</disp-quote>
<p>Thank you for the suggestions for how to improve clarity of the code. The way we designed the repository is to serve both the purpose of developing the code as well as sharing. This is because we are going to build up on this work to proceed further. Nothing is missing in the repository (we know it because it is what we actually use).</p>
<p>We do plan to create a more user-friendly version of the code, hopefully this will be ready in the next few months, but it wont be immediate as we are aiming to also integrate other aspects of the work we are currently doing in the Lab. The Brunton repository is very well organized, thanks for the pointer.</p>
<p>The following is the authors’ response to the original reviews.</p>
<disp-quote content-type="editor-comment">
<p><bold>Reviewer #1 (Public review):</bold></p>
<p>Overall I found the approach taken by the authors to be clear and convincing. It is striking that the conclusions are similar to those obtained in a recent study using a different computational approach (finite state controllers), and lend confidence to the conclusions about the existence of an optimal memory duration. There are a few points or questions that could be addressed in greater detail in a revision:</p>
<p>(1) Discussion of spatial encoding</p>
<p>The manuscript contrasts the approach taken here (reinforcement learning in a grid world) with strategies that involve a &quot;spatial map&quot; such as infotaxis. The authors note that their algorithm contains &quot;no spatial information.&quot; However, I wonder if further degrees of spatial encoding might be delineated to better facilitate comparisons with biological navigation algorithms. For example, the gridworld navigation algorithm seems to have an implicit allocentric representation, since movement can be in one of four allocentric directions (up, down, left, right). I assume this is how the agent learns to move upwind in the absence of an explicit wind direction signal. However, not all biological organisms likely have this allocentric representation. Can the agent learn the strategy without wind direction if it can only go left/right/forward/back/turn (in egocentric coordinates)? In discussing possible algorithms, and the features of this one, it might be helpful to distinguish</p>
<p>
(1) those that rely only on egocentric computations (run and tumble),</p>
<p>
(2) those that rely on a single direction cue such as wind direction,</p>
<p>
(3) those that rely on allocentric representations of direction, and</p>
<p>
(4) those that rely on a full spatial map of the environment.</p>
</disp-quote>
<p>As Referee 1 points out, even if the algorithm does not require a map of space, the agent is still required to tell apart directions relative to the wind direction which is assumed known. Indeed, although in the manuscript we labeled actions allocentrically as “ up down left and right”, the source is always placed in the same location, hence “left” corresponds to upwind; “right” to downwind and “up” and “down” to crosswind right and left. Thus in fact directions are relative to the mean wind, which is therefore assumed known. We have better clarified the spatial encoding required to implement these strategies, and re-labeled the directions as upwind, downwind, crosswind-right and crosswind-left.</p>
<p>In reality, animals cannot measure the mean flow, but rather the local flow speed e.g. with antennas for insects, with whiskers for rodents and with the lateral line for marine organisms. Further work is needed to address how local flow measures enable navigation using Q learning.</p>
<disp-quote content-type="editor-comment">
<p>(2) Recovery strategy on losing the plume</p>
<p>While the approach to encoding odor dynamics seems highly principled and reaches appealingly intuitive conclusions, the approach to modeling the recovery strategy seems to be more ad hoc. Early in the paper, the recovery strategy is defined to be path integration back to the point at which odor was lost, while later in the paper, the authors explore Brownian motion and a learned recovery based on multiple &quot;void&quot; states. Since the learned strategy works best, why not first consider learned strategies, and explore how lack of odor must be encoded or whether there is an optimal division of void states that leads to the best recovery strategies? Also, although the authors state that the learned recovery strategies resemble casting, only minimal data are shown to support this. A deeper statistical analysis of the learned recovery strategies would facilitate comparison to those observed in biology.</p>
</disp-quote>
<p>We thank Referee 1 for their remarks and suggestion to give the learned recovery a more prominent role and better characterize it. We agree that what is done in the void state is definitely key to turbulent navigation. In the revised manuscript, we have further substantiated the statistics of the learned recovery by repeating training 20 times and comparing the trajectories in the void (Figure 3 figure supplement 3, new Table 1). We believe however that starting with the heuristic recovery is clearer because it allows to introduce the concept of recovery more clearly. Indeed, the learned “recovery” is so flexible that it ends up mixing recovery (crosswind motion) to aspects of exploitation (surge): we defer a more in-depth analysis that disentangles these two aspects elsewhere. Also, we added a whole new comparison with other biologically inspired recoveries both in the native environment and for generalization (Figure 3 and 5).</p>
<disp-quote content-type="editor-comment">
<p>(3) Is there a minimal representation of odor for efficient navigation?</p>
<p>The authors suggest (line 280) that the number of olfactory states could potentially be reduced to reduce computational cost. This raises the question of whether there is a maximally efficient representation of odors and blanks sufficient for effective navigation. The authors choose to represent odor by 15 states that allow the agent to discriminate different spatial regimes of the stimulus, and later introduce additional void states that allow the agent to learn a recovery strategy. Can the number of states be reduced or does this lead to loss of performance? Does the optimal number of odor and void states depend on the spatial structure of the turbulence as explored in Figure 5?</p>
</disp-quote>
<p>We thank the referee for their comment. Q learning defines the olfactory states prior to training and does not allow a systematic optimization of odor representation for the task. We can however compare different definitions of the olfactory states, for example based on the same features but different discretizations. We added a comparison with a drastically reduced number of non-empty olfactory states to just 1, i.e. if the odor is above threshold at any time within the memory, the agent is in the non-void olfactory state, otherwise it is in the void state. This drastic reduction in the number of olfactory states results in less positional information and degrades performance (Figure 5 figure supplement 5).</p>
<p>The number of void states is already minimal: we chose 50 void states because this matches the time agents typically remain in the void (less than 50 void states results in no convergence and more than 50 introduces states that are rarely visited).</p>
<p>One may instead resort to deep Q-learning or to recurrent neural networks, which however do not provide answers as for what are the features or olfactory states that drive behavior (see discussion in manuscript and questions below).</p>
<disp-quote content-type="editor-comment">
<p><bold>Reviewer #2 (Public review):</bold></p>
<p>Summary:</p>
<p>The authors investigate the problem of olfactory search in turbulent environments using artificial agents trained using tabular Q-learning, a simple and interpretable reinforcement learning (RL) algorithm. The agents are trained solely on odor stimuli, without access to spatial information or prior knowledge about the odor plume's shape. This approach makes the emergent control strategy more biologically plausible for animals navigating exclusively using olfactory signals. The learned strategies show parallels to observed animal behaviors, such as upwind surging and crosswind casting. The approach generalizes well to different environments and effectively handles the intermittency of turbulent odors.</p>
<p>Strengths:</p>
<p>(1) The use of numerical simulations to generate realistic turbulent fluid dynamics sets this paper apart from studies that rely on idealized or static plumes.</p>
<p>(2) A key innovation is the introduction of a small set of interpretable olfactory states based on moving averages of odor intensity and sparsity, coupled with an adaptive temporal memory.</p>
<p>(3) The paper provides a thorough analysis of different recovery strategies when an agent loses the odor trail, offering insights into the trade-offs between various approaches.</p>
<p>(4) The authors provide a comprehensive performance analysis of their algorithm across a range of environments and recovery strategies, demonstrating the versatility of the approach.</p>
<p>(5) Finally, the authors list an interesting set of real-world experiments based on their findings, that might invite interest from experimentalists across multiple species.</p>
<p>Weaknesses:</p>
<p>(1) The inclusion of Brownian motion as a recovery strategy, seems odd since it doesn't closely match natural animal behavior, where circling (e.g. flies) or zigzagging (ants' &quot;sector search&quot;) could have been more realistic.</p>
</disp-quote>
<p>We agree that Brownian motion may not be biologically plausible -- we used it as a simple benchmark. We clarified this point, and re-trained our algorithm with adaptive memory using circling and zigzaging (cast and surge) recoveries. The learned recovery outperforms all heuristic recoveries (Figure 3D, metrics G). Circling ranks second, and achieves these good results by further decreasing the probability of failure and paying slightly in speed. When tested in the non-native environments 2 to 6, the learned recovery performs best in environments 2, 5 and 6 i.e. from long range more relevant to flying insects; whereas circling generalizes best in odor rich environments 3 and 4, representative of closer range and close to the substrate (Figure 5B, metrics G). In the new environments, similar to the native environment, circling favors convergence (Figure 5B, metrics f<sup>+</sup>) over speed (Figure 5B, metrics g<sup>+</sup> and τ<sub>min</sub>/τ), which is particularly deleterious at large distance.</p>
<disp-quote content-type="editor-comment">
<p>(2) Using tabular Q-learning is both a strength and a limitation. It's simple and interpretable, making it easier to analyze the learned strategies, but the discrete action space seems somewhat unnatural. In real-world biological systems, actions (like movement) are continuous rather than discrete. Additionally, the ground-frame actions may not map naturally to how animals navigate odor plumes (e.g. insects often navigate based on their own egocentric frame).</p>
</disp-quote>
<p>We agree with the reviewer that animal locomotion does not look like a series of discrete displacements on a checkerboard. However, to overcome this limitation, one has to first focus on a specific system to define actions in a way that best adheres to a species’ motor controls. Moreover, these actions are likely continuous, which makes reinforcement learning notoriously more complex. While we agree that more realistic models are definitely needed for a comparison with real systems, this remains outside the scope of the current work. We have added a remark to clarify this limitation.</p>
<disp-quote content-type="editor-comment">
<p>(3) The lack of accompanying code is a major drawback since nowadays open access to data and code is becoming a standard in computational research. Given that the turbulent fluid simulation is a key element that differentiates this paper, the absence of simulation and analysis code limits the study's reproducibility.</p>
</disp-quote>
<p>We have published the code and the datasets at</p>
<p>- code: <ext-link ext-link-type="uri" xlink:href="https://github.com/Akatsuki96/qNav">https://github.com/Akatsuki96/qNav</ext-link></p>
<p>- datasets: <ext-link ext-link-type="uri" xlink:href="https://zenodo.org/records/14655992">https://zenodo.org/records/14655992</ext-link></p>
<disp-quote content-type="editor-comment">
<p><bold>Recommendations for the authors:</bold></p>
<p><bold>Reviewer #1 (Recommendations for the authors):</bold></p>
<p>(1) Line 59-69: In comparing the results here to other approaches (especially the Verano and Singh papers), it would also be helpful to clarify which of these include an explicit representation of the wind direction. My understanding is that both the Singh and Verano approaches include an explicit representation of wind direction. In Singh wind direction is one of the observations that inputs to the agent, while in Verano, the actions are defined relative to the wind direction. In the current paper, my understanding is that there is no explicitly defined wind direction, but because movement directions are encoded allocentrically, the agent is able to learn the upwind direction from the structure of the plume- is this correct? I think this information would be helpful to spell out and also to address whether an agent without any allocentric direction sense can learn the task.</p>
</disp-quote>
<p>Thank you for the comment. In our algorithm the directions are defined relative to the mean wind, which is assumed known, as in Verano et al. As far as we understand, Singh et al provide the instantaneous, egocentric wind velocities as part of the input.</p>
<disp-quote content-type="editor-comment">
<p>(1) Line 105: &quot;several properties of odor stimuli depend on the distance from the source&quot; might cite Boie...Victor 2018, Ackles...Schaefer, 2021, Nag...van Breugel 2024.</p>
</disp-quote>
<p>Thank you for the suggestions - we have added these references</p>
<disp-quote content-type="editor-comment">
<p>(2) Line 130: &quot;we first define a finite set of olfactory states&quot; might be helpful to the reader to state what you chose in this paragraph rather than further down.</p>
</disp-quote>
<p>We have slightly modified the incipit of the paragraph. We first declare we are setting out to craft the olfactory states, then define the challenges, finally we define the olfactory states.</p>
<disp-quote content-type="editor-comment">
<p>(3) Line 267: &quot;Note that the learned recovery strategy resembles casting behavior observed in flying insects&quot; Might note that insects seem to deploy a range of recovery strategies depending on locomotor mode and environment. For example, flying flies circle and sink when odor is lost in windless environments (Stupski and van Breugel 2024).</p>
</disp-quote>
<p>Thank you for your comment. We have included the reference and we now added comparisons to results using circling and cast &amp; surge recovery strategies.</p>
<disp-quote content-type="editor-comment">
<p>(4) Line 289: &quot;from positions beyond the source, the learned strategy is unable to recover the plume as it mostly casts sideways, with little to no downwind action&quot; This is curious as many insects show a downwind bias in the absence of odor that helps them locate the plumes in the first place (e.g. Wolf and Wehner, 2000, Alvarez-Salvado et al. 2018). Is it possible that the agent could learn a downwind bias in the absence of odor if given larger environments or a longer time to learn?</p>
</disp-quote>
<p>The reviewer is absolutely correct – Downwind motion is not observed in the recovery simply because the agent rarely overshoots the source. Hence overall optimization for that condition is washed out by the statistics. We believe downwind motion will emerge if an agent needs to avoid overshooting the source – we do not have conclusive results yet but are planning to introduce such flexibility in a further work. We added this remark and refs.</p>
<disp-quote content-type="editor-comment">
<p>(5) Line 377-391: testing these ideas in living systems. Interestingly, Kathman..Nagel 2024 (bioRxiv) shows exactly the property predicted here and in Verano in fruit flies- an odor memory that outlasts the stimulus by a duration of several seconds, appropriate for filling in &quot;blanks.&quot; Relatedly, Alvarez-Salvado et al. 2018 showed that fly upwind running reflected a temporal integration of odor information over ~10s, sufficient to avoid responding to blanks as loss of odor.</p>
</disp-quote>
<p>Indeed, we believe this is the most direct connection between algorithms and experiments. We are excited to discuss with our colleagues and pursue a more direct comparison with animal behavior. We were aware of the references and forgot to cite them, thank you for your careful reading of our work !</p>
<disp-quote content-type="editor-comment">
<p><bold>Reviewer #2 (Recommendations for the authors):</bold></p>
<p>Suggestions</p>
<p>(1) The paper does not clearly specify which type of animals (e.g., flying insects, terrestrial mammals) the model is meant to approximate or not approximate. The authors should consider clarifying how these simulations are suited to be a general model across varied olfactory navigators. Further, it isn't clear how low/high the intermittency studied in this model is compared to what different animals actually encounter. (Minor: The Figure 4 occupancy circles visualization could be simplified).</p>
</disp-quote>
<p>Environment 1 represents the lower layers of a moderately turbulent boundary layer. Search occurs on a horizontal plane ~half meter from the ground. The agent is trained at distances of about 10 meters and also tested on longer distances  ~ 17 meters (environment 6), lower heights ~1cm from the ground (environments 3-4), lower Reynolds number (environment 5) and higher threshold of detection (environment 2 and 4). Thus Environments 1,2,5 and 6 are representative of conditions encountered by flying organisms (or pelagic in water), and Environments 3 and 4 of searches near the substrate, potentially involved in terrestrial navigation (benthic in water). Even near the substrate, we use odor dispersed in the fluid, and not odor attached to the substrate (relevant to trail tracking).</p>
<p>Also note that we pick Schmidt number Sc = 1 and this is appropriate for odors in air but not in water. However, we expect a weak dependence on the Schmidt number as the Batchelor and Kolmogorov scales are below the size of the source and we are interested in the large scale statistics Falkovich et al., 2001; Celani et al., 2014; Duplat et al., 2010.</p>
<p>Intermittency contours are shown in Fig 1C, they are highest along the centerline, and decay away from the centerline, so that even within the plume detecting odor is relatively rare. Only a thin region near the centerline has intermittency larger than 66%; the outer and most critical bin of the plume has intermittency under 33%; in the furthest point on the centerline intermittency is &lt;10%. For reference, experimental values in the atmospheric boundary layer report intermittency 25% to 20% at 2 to 15m from the source along the centerline (Murlis and Jones, 1981).</p>
<p>We have more clearly labeled the contours in Fig 1C and added these remarks.</p>
<p>We included these remarks and added a whole table with matching to real conditions within the different environments.</p>
<disp-quote content-type="editor-comment">
<p>(2) Could some biological examples and references be added to support that backtracking is a biologically plausible mechanism?</p>
</disp-quote>
<p>Backtracking was observed e.g. in ants displaced in unfamiliar environments (Wystrach et al, P Roy Soc B, 280,  2013), in tsetse flies executing reverse turns uncorrelated to wind, which bring them back towards the location where they last detected odor (Torr, Phys Entom, 13, 1988, Gibson &amp; Brady Phys Entom 10, 1985) and in coackroaches upon loss of contact with the plume (Willis et al, J. Exp. Biol. 211, 2008). It is also used in computational models of olfactory navigation (Park et al, Plos Comput Biol, 12:e1004682, 2016).</p>
<disp-quote content-type="editor-comment">
<p>(3) Hand-crafted features can be both a strength and a limitation. On the one hand, they offer interpretability, which is crucial when trying to model biological systems. On the other hand, they may limit the generality of the model. A more thorough discussion of this paper's limitations should address this.</p>
<p>(4) The authors mention the possibility of feature engineering or using recurrent neural networks, but a more concrete discussion of these alternatives and their potential advantages/disadvantages would be beneficial. It should be noted that the hand-engineered features in this manuscript are quite similar to what the model of Singh et al suggests emerges in their trained RNNs.</p>
</disp-quote>
<p>Merged answer to points 3 and 4.</p>
<p>We agree with the reviewer that hand-crafted features are both a strength and a limitation in terms of performance and generality. This was a deliberate choice aimed at stripping the algorithm bare of implicit components, both in terms of features and in terms of memory. Even with these simple features, our model performs well in navigating across different signals, consistent with our previous results showing that these features are a “good” surrogate for positional information.</p>
<p>To search for the most effective temporal features, one may consider a more systematic hand crafting, scaling up our approach. In this case one would first define many features of the odor trace; rank groups of features for their accuracy in regression against distance; train Q learning with the most promising group of features and rank again. Note however that this approach will be cumbersome because multiple factors will have to be systematically varied: the regression algorithm; the discretization of the features and the memory.</p>
<p>Alternatively, to eliminate hand crafting altogether and seek better performance or generalization, one may consider replacing these hand-crafted features and the tabular Q-learning approach with recurrent neural networks or with finite state controllers. On the flip side, neither of these algorithms will directly provide the most effective features or the best memory, because these properties are hidden within the parameters that are optimized for. So extra work is needed to interrogate the algorithms and extract these information. For example, in Singh et al, the principal components of the hidden states in trained agents correlate with head direction, odor concentration and time since last odor encounter. More work is needed to move beyond correlations and establish more systematically what are the features that drive behavior in the RNN.</p>
<p>We have added these points to the discussion.</p>
<disp-quote content-type="editor-comment">
<p>(5) Minor: the title of the paper doesn't immediately signal its focus on recovery strategies and their interplay with memory in the context of olfactory navigation. Given the many other papers using a similar RL approach, this might help the authors position this paper better.</p>
</disp-quote>
<p>We agree with the referee and have modified the title to reflect this.</p>
<disp-quote content-type="editor-comment">
<p>(6) Minor: L 331: &quot;because turbulent odor plumes constantly switch on and off&quot; -- the signal received rather than the plume itself is switching on and off.</p>
</disp-quote>
<p>Thank you for the suggestion, we implemented it.</p>
</body>
</sub-article>
</article>