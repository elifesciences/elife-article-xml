<?xml version="1.0" ?><!DOCTYPE article PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Archiving and Interchange DTD v1.3 20210610//EN"  "JATS-archivearticle1-mathml3.dtd"><article xmlns:ali="http://www.niso.org/schemas/ali/1.0/" xmlns:xlink="http://www.w3.org/1999/xlink" article-type="research-article" dtd-version="1.3" xml:lang="en">
<front>
<journal-meta>
<journal-id journal-id-type="nlm-ta">elife</journal-id>
<journal-id journal-id-type="publisher-id">eLife</journal-id>
<journal-title-group>
<journal-title>eLife</journal-title>
</journal-title-group>
<issn publication-format="electronic" pub-type="epub">2050-084X</issn>
<publisher>
<publisher-name>eLife Sciences Publications, Ltd</publisher-name>
</publisher>
</journal-meta>
<article-meta>
<article-id pub-id-type="publisher-id">103636</article-id>
<article-id pub-id-type="doi">10.7554/eLife.103636</article-id>
<article-id pub-id-type="doi" specific-use="version">10.7554/eLife.103636.2</article-id>
<article-version-alternatives>
<article-version article-version-type="publication-state">reviewed preprint</article-version>
<article-version article-version-type="preprint-version">1.2</article-version>
</article-version-alternatives>
<article-categories><subj-group subj-group-type="heading">
<subject>Neuroscience</subject>
</subj-group>
</article-categories><title-group>
<article-title>Elucidating the Selection Mechanisms in Context-Dependent Computation through Low-Rank Neural Network Modeling</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author">
<name>
<surname>Zhang</surname>
<given-names>Yiteng</given-names>
</name>
<xref ref-type="aff" rid="a1">1</xref>
<xref ref-type="aff" rid="a2">2</xref>
</contrib>
<contrib contrib-type="author" corresp="yes">
<name>
<surname>Feng</surname>
<given-names>Jianfeng</given-names>
</name>
<xref ref-type="aff" rid="a1">1</xref>
<xref ref-type="aff" rid="a3">3</xref>
<xref ref-type="aff" rid="a4">4</xref>
<email>jianfeng64@gmail.com</email>
</contrib>
<contrib contrib-type="author" corresp="yes">
<contrib-id contrib-id-type="orcid">http://orcid.org/0000-0003-1006-9629</contrib-id>
<name>
<surname>Min</surname>
<given-names>Bin</given-names>
</name>
<xref ref-type="aff" rid="a2">2</xref>
<email>minbin@lglab.ac.cn</email>
</contrib>
<aff id="a1"><label>1</label><institution-wrap><institution-id institution-id-type="ror">https://ror.org/013q1eq08</institution-id><institution>School of Data Science, Fudan University</institution></institution-wrap>, <city>Shanghai</city>, <country country="CN">China</country></aff>
<aff id="a2"><label>2</label><institution>Lingang Laboratory</institution>, <city>Shanghai</city>, <country country="CN">China</country></aff>
<aff id="a3"><label>3</label><institution-wrap><institution-id institution-id-type="ror">https://ror.org/013q1eq08</institution-id><institution>Institute of Science and Technology for Brain-Inspired Intelligence, Fudan University</institution></institution-wrap>, <city>Shanghai</city>, <country country="CN">China</country></aff>
<aff id="a4"><label>4</label><institution-wrap><institution-id institution-id-type="ror">https://ror.org/013q1eq08</institution-id><institution>Key Laboratory of Computational Neuroscience and Brain-Inspired Intelligence, Fudan University, Ministry of Education</institution></institution-wrap>, <city>Shanghai</city>, <country country="CN">China</country></aff>
</contrib-group>
<contrib-group content-type="section">
<contrib contrib-type="editor">
<name>
<surname>Ostojic</surname>
<given-names>Srdjan</given-names>
</name>
<role>Reviewing Editor</role>
<aff>
<institution-wrap>
<institution>École Normale Supérieure - PSL</institution>
</institution-wrap>
<city>Paris</city>
<country country="FR">France</country>
</aff>
</contrib>
<contrib contrib-type="senior_editor">
<name>
<surname>Frank</surname>
<given-names>Michael J</given-names>
</name>
<role>Senior Editor</role>
<aff>
<institution-wrap>
<institution>Brown University</institution>
</institution-wrap>
<city>Providence</city>
<country country="US">United States</country>
</aff>
</contrib>
</contrib-group>
<author-notes>
<fn fn-type="coi-statement"><p>Competing interests: No competing interests declared</p></fn>
</author-notes>
<pub-date date-type="original-publication" iso-8601-date="2024-12-11">
<day>11</day>
<month>12</month>
<year>2024</year>
</pub-date>
<pub-date date-type="update" iso-8601-date="2025-06-10">
<day>10</day>
<month>06</month>
<year>2025</year>
</pub-date>
<volume>13</volume>
<elocation-id>RP103636</elocation-id>
<history>
<date date-type="sent-for-review" iso-8601-date="2024-10-03">
<day>03</day>
<month>10</month>
<year>2024</year>
</date>
</history>
<pub-history>
<event>
<event-desc>Preprint posted</event-desc>
<date date-type="preprint" iso-8601-date="2024-09-03">
<day>03</day>
<month>09</month>
<year>2024</year>
</date>
<self-uri content-type="preprint" xlink:href="https://doi.org/10.1101/2024.09.02.610896"/>
</event>
<event>
<event-desc>Reviewed preprint v1</event-desc>
<date date-type="reviewed-preprint" iso-8601-date="2024-12-11">
<day>11</day>
<month>12</month>
<year>2024</year>
</date>
<self-uri content-type="reviewed-preprint" xlink:href="https://doi.org/10.7554/eLife.103636.1"/>
<self-uri content-type="editor-report" xlink:href="https://doi.org/10.7554/eLife.103636.1.sa2">eLife Assessment</self-uri>
<self-uri content-type="referee-report" xlink:href="https://doi.org/10.7554/eLife.103636.1.sa1">Reviewer #1 (Public review):</self-uri>
<self-uri content-type="referee-report" xlink:href="https://doi.org/10.7554/eLife.103636.1.sa0">Reviewer #2 (Public review):</self-uri>
</event>
</pub-history>
<permissions>
<copyright-statement>© 2024, Zhang et al</copyright-statement>
<copyright-year>2024</copyright-year>
<copyright-holder>Zhang et al</copyright-holder>
<ali:free_to_read/>
<license xlink:href="https://creativecommons.org/licenses/by/4.0/">
<ali:license_ref>https://creativecommons.org/licenses/by/4.0/</ali:license_ref>
<license-p>This article is distributed under the terms of the <ext-link ext-link-type="uri" xlink:href="https://creativecommons.org/licenses/by/4.0/">Creative Commons Attribution License</ext-link>, which permits unrestricted use and redistribution provided that the original author and source are credited.</license-p>
</license>
</permissions>
<self-uri content-type="pdf" xlink:href="elife-preprint-103636-v2.pdf"/>
<abstract>
<title>Abstract</title>
<p>Humans and animals exhibit a remarkable ability to selectively filter out irrelevant information based on context. However, the neural mechanisms underlying this context-dependent selection process remain elusive. Recently, the issue of discriminating between two prevalent selection mechanisms— input modulation versus selection vector modulation—with neural activity data has been highlighted as one of the major challenges in the study of individual variability underlying context-dependent decision-making (CDM). Here, we investigated these selection mechanisms through low-rank neural network modeling of the CDM task. We first showed that only input modulation was allowed in rank-one neural networks and additional dimensions of network connectivity were required to endow neural networks with selection vector modulation. Through rigorous information flow analysis, we gained a mechanistic understanding of why additional dimensions are required for selection vector modulation and how additional dimensions specifically contribute to selection vector modulation. This new understanding then led to the identification of novel neural dynamical signatures for selection vector modulation at both single neuron and population levels. Together, our results provide a rigorous theoretical framework linking network connectivity, neural dynamics and selection mechanisms, paving the way towards elucidating the circuit mechanisms when studying individual variability in context-dependent computation.</p>
</abstract>
<custom-meta-group>
<custom-meta specific-use="meta-only">
<meta-name>publishing-route</meta-name>
<meta-value>prc</meta-value>
</custom-meta>
</custom-meta-group>
</article-meta>
<notes>
<fn-group content-type="summary-of-updates">
<title>Summary of Updates:</title>
<fn fn-type="update"><p>The Introduction revised in a more accessible manner for general audiences. The Discussion section revised to address the limitations of the proposed index. Methods section has been expanded to include a detailed description of the analyses associated with Figures 6B and 7.</p></fn>
</fn-group>
</notes>
</front>
<body>
<sec id="s1">
<title>Introduction</title>
<p>Imagine you are playing a card game. Your strategy depends not only on the cards you have but also on what your opponents are doing. As the game progresses, you adjust your moves based on their actions to increase your chances of winning. This example illustrates how much of our decision-making, both in everyday life and in more complex tasks, is influenced by the context in which we are acting (<xref ref-type="bibr" rid="c22">Miller &amp; Cohen, 2001</xref>; <xref ref-type="bibr" rid="c32">Roy et al., 2010</xref>; <xref ref-type="bibr" rid="c20">Mante et al., 2013</xref>; <xref ref-type="bibr" rid="c34">Saez et al., 2015</xref>; <xref ref-type="bibr" rid="c37">Siegel et al., 2015</xref>; <xref ref-type="bibr" rid="c6">Bernardi et al., 2020</xref>; <xref ref-type="bibr" rid="c41">Takagi et al., 2021</xref>; <xref ref-type="bibr" rid="c12">Flesch et al., 2022</xref>; <xref ref-type="bibr" rid="c3">Barbosa et al., 2023</xref>). However, how the brain performs such context-dependent computation remains elusive (<xref ref-type="bibr" rid="c13">Fusi et al., 2016</xref>; <xref ref-type="bibr" rid="c9">Cohen, 2017</xref>; <xref ref-type="bibr" rid="c2">Badre et al., 2021</xref>; <xref ref-type="bibr" rid="c26">Okazawa &amp; Kiani, 2023</xref>).</p>
<p>Using a monkey context-dependent decision-making (CDM) behavioral paradigm, a recent work uncovered a novel mechanism in the brain that helps adjust decisions based on context (<xref ref-type="bibr" rid="c20">Mante et al., 2013</xref>). This mechanism, called “selection vector modulation”, is distinct from the early sensory input modulation counterpart (<xref ref-type="bibr" rid="c10">Desimone &amp; Duncan, 1995</xref>; <xref ref-type="bibr" rid="c25">Noudoost et al., 2010</xref>). More recently, building on this work, new research with rats supported a novel theoretical framwork regarding how the brain makes context-dependent decisions and revealed how this process may vary between individuals (<xref ref-type="bibr" rid="c30">Pagan et al., 2024</xref>). Critically, this theoretical framework pointed out that current neurophysiological data fell short of distinguishing between selection vector modulation and sensory input modulation, calling for rethinking what kind of evidence is required for differentiating different selection mechanisms.</p>
<p>Here, we aim to address this challenge by using the low-rank recurrent neural network (RNN) modeling approach (<xref ref-type="bibr" rid="c17">Landau &amp; Sompolinsky, 2018</xref>; <xref ref-type="bibr" rid="c21">Mastrogiuseppe &amp; Ostojic, 2018</xref>; <xref ref-type="bibr" rid="c15">Kadmon et al., 2020</xref>; <xref ref-type="bibr" rid="c36">Schuessler et al., 2020</xref>; <xref ref-type="bibr" rid="c4">Beiran et al., 2021</xref>, <xref ref-type="bibr" rid="c5">2023</xref>; <xref ref-type="bibr" rid="c11">Dubreuil et al., 2022</xref>; <xref ref-type="bibr" rid="c43">Valente et al., 2022</xref>; <xref ref-type="bibr" rid="c27">Ostojic &amp; Fusi, 2024</xref>). This approach allowed us to simulate and better understand the neural processes behind context-dependent computation. More importantly, endowed by the low-rank RNN theory (<xref ref-type="bibr" rid="c4">Beiran et al., 2021</xref>; <xref ref-type="bibr" rid="c11">Dubreuil et al., 2022</xref>), this approach allowed us to develop a set of analyses and derivation uncovering a previously-unknown link between connectivity dimensionality, neural dynamics and selection mechanisms. This link then led to the identification of novel neural dynamical signatures for selection vector modulation at both the single-neuron and population levels. Together, our work provides a neural circuit basis for different selection mechanisms, shedding new light on the study of individual variability in neural computation underlying the ubiquitous context-dependent behaviors.</p>
</sec>
<sec id="s2">
<title>Results</title>
<sec id="s2a">
<title>Task paradigm, key concept and modeling approach</title>
<p>The task paradigm we focused on is the pulse-based context-dependent decision-making (CDM) task (<xref ref-type="bibr" rid="c28">Pagan et al., 2022</xref>), a novel rat-version CDM paradigm inspired by the previous monkey CDM work (<xref ref-type="bibr" rid="c20">Mante et al., 2013</xref>). In this paradigm, rats were presented with sequences of randomly-timed auditory pulses that varied in both location and frequency (<xref rid="fig1" ref-type="fig">Figure 1A</xref>). In alternating blocks of trials, rats were cued by an external context signal to determine the prevalent location (in the “LOC” context) or frequency (in the “FRQ” context). Note that compared to the continuous sensory input setting in previous works (e.g., <xref ref-type="bibr" rid="c20">Mante et al., 2013</xref>), this pulse-based sensory input setting allowed the experimenters to better characterize both behavioral and neural responses (<xref ref-type="bibr" rid="c28">Pagan et al., 2022</xref>). We will also demonstrate the unique advantage of this pulse-based input setting later in the present study (e.g., <xref rid="fig7" ref-type="fig">Fig. 7</xref>).</p>
<fig id="fig1" position="float" fig-type="figure">
<label>Figure 1.</label>
<caption><title>Prevalent candidate selection mechanisms in CDM cannot be dissociated by classical neural dynamics analysis.</title>
<p>(A) A pulse-based context-dependent decision-making task (adapted from <xref ref-type="bibr" rid="c28">Pagan et al., 2022</xref>). In each trial, rats were first cued by sound to indicate whether the current context was the location (LOC) context or the frequency (FRQ) context. Subsequently, rats were presented with a sequence of randomly-timed auditory pulses. Each pulse could come from either the left speaker or right speaker and could be of low frequency (6.5 kHz, light blue) or high frequency (14 kHz, dark blue). In the LOC context, rats were trained to turn right (left) if more pulses are emitted from the right (left) speaker. In the FRQ context, rats were trained to turn right (left) if there are more (fewer) high-frequency pulses compared to low-frequency pulses. (B) Two prevalent candidate mechanisms for context-dependent decision-making. <italic>Top</italic>: The input modulation mechanism. In this scenario, while the selection vector remains invariant across contexts, the stimulus input representation is altered in a way such that only the relevant stimulus input representation (i.e., the location input in the LOC context and the frequency input in the FRQ context) is well aligned with the selection vector, thereby fulfilling the requirement of context-dependent computation. <italic>Bottom</italic>: The selection vector modulation mechanism. In this scenario, although the stimulus input representation remains constant across different contexts, the selection vector itself is altered by the context input to align with the relevant sensory input. Red line: line attractor (choice axis). Green arrow: selection vector. Thick grey and blue arrows stand for the projections of the location and frequency input representation directions on the space spanned by the line attractor and selection vector, respectively. The small grey arrows stand for direction of relaxing dynamics. (C) Networks with distinct selection mechanisms may lead to similar trial-averaged neural dynamics (adapted from <xref ref-type="bibr" rid="c28">Pagan et al., 2022</xref>). In a model with pure input modulation, the irrelevant sensory input can still be represented by the network in a direction orthogonal to the selection vector. Therefore, using the classical targeted dimensionality reduction method (<xref ref-type="bibr" rid="c20">Mante et al., 2013</xref>), both the input modulation model (top) and the selection vector modulation model (bottom) would exhibit similar trial-averaged neural dynamics as shown in <xref ref-type="bibr" rid="c28">Pagan et al., 2022</xref>. (D) The setting of low-rank RNN modeling for the CDM task. The network has four input channels. Input 1 and input 2 represent two sensory inputs, while the other two channels indicate the context. The connectivity matrix <italic>J</italic> is constrained to be low-rank, expressed as <inline-formula><inline-graphic xlink:href="610896v2_inline172.gif" mimetype="image" mime-subtype="gif"/></inline-formula>, where <italic>N</italic> is the number of neurons, <italic>R</italic> is the matrix’s rank, and <inline-formula><inline-graphic xlink:href="610896v2_inline173.gif" mimetype="image" mime-subtype="gif"/></inline-formula> is a rank-1 matrix formed by the outer product of two <italic>N</italic>-dimensional connectivity vectors <bold><italic>m</italic></bold><sub><italic>r</italic></sub> and <bold><italic>n</italic></bold><sub><italic>r</italic></sub>.</p></caption>
<graphic xlink:href="610896v2_fig1.tif" mimetype="image" mime-subtype="tiff"/>
</fig>
<p>To solve this task, rats had to select the relevant information for the downstream evidence accumulation process based upon the context. There were at least two different mechanisms capable of performing this selection operation, i.e., selection vector modulation and input modulation (<xref ref-type="bibr" rid="c20">Mante et al., 2013</xref>; <xref ref-type="bibr" rid="c28">Pagan et al., 2022</xref>). To better introduce these mechanisms, we first reviewed the classical linearized dynamical systems analysis and the concept of selection vector (<xref rid="fig1" ref-type="fig">Figure 1B</xref>; <xref ref-type="bibr" rid="c20">Mante et al., 2013</xref>; <xref ref-type="bibr" rid="c40">Sussillo &amp; Barak, 2013</xref>; <xref ref-type="bibr" rid="c19">Maheswaranathan et al., 2019</xref>; <xref ref-type="bibr" rid="c18">Maheswaranathan &amp; Sussillo, 2020</xref>; <xref ref-type="bibr" rid="c23">Nair et al., 2023</xref>). In the linearized dynamical systems analysis, the neural dynamics around the choice axis (<xref rid="fig1" ref-type="fig">Figure 1B</xref>, red line) is approximated by a line attractor model. Specifically, the dynamics in the absence of external input can be approximated by the following linear equation <inline-formula><inline-graphic xlink:href="610896v2_inline1.gif" mimetype="image" mime-subtype="gif"/></inline-formula>, where <italic>M</italic> is a matrix with one eigenvalue being equal to 0 and all other eigenvalues having a negative real part. For brevity, let us denote the left eigenvector of the 0 eigenvalue as <bold><italic>s</italic></bold>. In this linear dynamical system, the effect of any given perturbation can be decomposed along the directions of different eigenvectors: the projection onto the <bold><italic>s</italic></bold> direction will remain constant while the projections onto all other eigenvectors will exponentially decay to zero. Thus, for any given input <bold><italic>I</italic></bold>, only the component projecting onto the <bold><italic>s</italic></bold> direction (i.e., <bold><italic>I</italic>·<italic>s</italic></bold>) can be integrated along the line attractor (see Methods for more details). In other words, <bold><italic>s</italic></bold> serves as a vector selecting the input information, which is known as the “selection vector” in the literature (<xref ref-type="bibr" rid="c20">Mante et al., 2013</xref>).</p>
<p>Two distinct selection mechanisms can then be introduced based upon the concept of selection vector (<xref ref-type="bibr" rid="c28">Pagan et al., 2022</xref>). Specifically, to perform the CDM task, the stimulus input (LOC input, for example) must have a larger impact on evidence accumulation in the relevant context (LOC context) than in the irrelevant context (FRQ context). That is, <bold><italic>I·s</italic></bold> must be larger in the relevant context than in the irrelevant context. The difference between these two can be decomposed into two components:
<disp-formula id="eqn1">
<graphic xlink:href="610896v2_eqn1.gif" mimetype="image" mime-subtype="gif"/>
</disp-formula>
where the Δ symbol denotes difference across two contexts (relevant – irrelevant) and the bar symbol denotes average across two contexts (see Methods for more details). The first component <inline-formula><inline-graphic xlink:href="610896v2_inline2.gif" mimetype="image" mime-subtype="gif"/></inline-formula> is called input modulation in which the change of input information across different contexts is emphasized (<xref rid="fig1" ref-type="fig">Figure 1B</xref>, top). In contrast, the second component <bold><italic>Ī</italic>·</bold>Δ<bold><italic>s</italic></bold> is called selection vector modulation in which the change of selection vector across contexts is instead highlighted (<xref rid="fig1" ref-type="fig">Figure 1B</xref>, bottom).</p>
<p>While these two selection mechanisms were clearly defined, recent work showed that it is actually challenging to differentiate them through neural dynamics (<xref ref-type="bibr" rid="c28">Pagan et al., 2022</xref>). For example, both input modulation and selection vector modulation can lead to similar trial-averaged neural dynamics through targeted dimensionality reduction (<xref rid="fig1" ref-type="fig">Figure 1C</xref>; <xref ref-type="bibr" rid="c28">Pagan et al., 2022</xref>). Take the input modulation as an example (<xref rid="fig1" ref-type="fig">Figure 1C</xref>, top). One noticeable aspect we can observe is that the input information (e.g., location information) is preserved in both relevant (LOC context) and irrelevant contexts (FRQ context), which seems contradictory to the definition of input modulation. What is the mechanism underlying this counterintuitive result? As Pagan et al. pointed out earlier, input modulation is not the input change (Δ<bold><italic>I</italic></bold>) per se. Rather, it means the change of input multiplied by selection vector (i.e., <inline-formula><inline-graphic xlink:href="610896v2_inline3.gif" mimetype="image" mime-subtype="gif"/></inline-formula>). Therefore, for the input modulation, while input information indeed is modulated by context along the selection vector direction, input information can still be preserved across contexts along other directions orthogonal to the selection vector, which explains the counterintuitive result and highlights the challenge of distinguishing input modulation from selection vector modulation in experiments (<xref ref-type="bibr" rid="c28">Pagan et al., 2022</xref>).</p>
<p>In this study, we sought to address this challenge using the low-rank RNN modeling approach. In contrast to the “black-box” vanilla RNN approach (e.g., <xref ref-type="bibr" rid="c20">Mante et al., 2013</xref>), the low-rank RNN approach features both well-controlled model complexity and mechanistic transparency, potentially providing a fresh view into the mechanisms underlying the intriguing selection process. Specifically, the low-rank RNNs we studied here implemented an input-output task structure similar to the classical RNN modeling work of CDM (<xref rid="fig1" ref-type="fig">Figure 1D</xref>; <xref ref-type="bibr" rid="c20">Mante et al., 2013</xref>). More concretely, the hidden state <bold><italic>x</italic></bold> of a low-rank RNN with <italic>N</italic> neurons evolves over time according to
<disp-formula id="eqn2">
<graphic xlink:href="610896v2_eqn2.gif" mimetype="image" mime-subtype="gif"/>
</disp-formula>
</p>
<p>Where <inline-formula><inline-graphic xlink:href="610896v2_inline4.gif" mimetype="image" mime-subtype="gif"/></inline-formula> is a low-rank matrix with <italic>R</italic> output vectors <bold><italic>m</italic></bold><sub><italic>r</italic></sub>, <italic>r</italic> = 1,…, <italic>R</italic> and R input-selection vectors <bold><italic>n</italic></bold><sub><italic>r</italic></sub>, <italic>r</italic> = 1,…, <italic>R</italic>, τ is the time constant of single neurons, <italic>ϕ</italic> is the nonlinear activation function, <italic>u</italic><sub><italic>s</italic></sub>(<italic>t</italic>), <italic>s</italic> = 1, 2 embedded into the network through <bold><italic>I</italic></bold><sub><italic>s</italic></sub> mimic the location and frequency click inputs, and <inline-formula><inline-graphic xlink:href="610896v2_inline5.gif" mimetype="image" mime-subtype="gif"/></inline-formula> embedded through <inline-formula><inline-graphic xlink:href="610896v2_inline6.gif" mimetype="image" mime-subtype="gif"/></inline-formula> indicate whether the current context is location or frequency. The output of the network is a linear projection of neural activity (see Methods for more model details). Under this general architectural setting, on one hand, through controlling the rank <italic>R</italic> of the matrix <italic>J</italic> during backpropagation training, we can determine the minimal rank required for performing the CDM task and reverse-engineer the underlying mechanism, which will be demonstrated in <xref rid="fig2" ref-type="fig">Figure 2</xref>. On the other hand, recent theoretical progress of low-rank RNNs (<xref ref-type="bibr" rid="c4">Beiran et al., 2021</xref>, <xref ref-type="bibr" rid="c4">2021</xref>; <xref ref-type="bibr" rid="c11">Dubreuil et al., 2022</xref>) enabled us to explicitly construct neural network models with mechanistic transparency, complementing the reverse-engineering analysis (<xref ref-type="bibr" rid="c20">Mante et al., 2013</xref>; <xref ref-type="bibr" rid="c40">Sussillo &amp; Barak, 2013</xref>), which will be shown in <xref rid="fig3" ref-type="fig">Figure 3</xref>.</p>
<fig id="fig2" position="float" fig-type="figure">
<label>Figure 2.</label>
<caption><title>No selection vector modulation in rank-1 neural network models.</title>
<p>(A) Illustration of rank-1 connectivity matrix structure. <italic>Left</italic>: a rank-1 matrix can be represented as the outer product of an output vector <bold><italic>m</italic></bold><sub><italic>dv</italic></sub> and an input-selection vector <bold><italic>n</italic></bold><sub><italic>dv</italic></sub>, of which the input-selection vector <bold><italic>n</italic></bold><sub><italic>dv</italic></sub> played the role of selecting the input information through its overlap with the input embedding vectors <bold><italic>I</italic></bold><sub>1</sub> and <bold><italic>I</italic></bold><sub>2</sub>. The context signals are fed forward to the network with embedding vectors <inline-formula><inline-graphic xlink:href="610896v2_inline174.gif" mimetype="image" mime-subtype="gif"/></inline-formula> and <inline-formula><inline-graphic xlink:href="610896v2_inline175.gif" mimetype="image" mime-subtype="gif"/></inline-formula>. Since the overlap between the context embedding vectors and input-selection vector <bold><italic>n</italic></bold><sub><italic>dv</italic></sub> are close to 0, for simplicity, we omitted the context embedding vectors here. <italic>Right</italic>: an example of the trained rank-1 connectivity structure characterized by the cosine angle between every pair of connectivity vectors (see <xref rid="fig2_S1" ref-type="fig">Figure 2-figure supplement 1</xref> and Methods for details). (B) The psychometric curve of the trained rank-1 RNNs. In context 1, input 1 strongly affects the choice, while input 2 has little impact on the choice. In context 2, the effect of input 1 and input 2 on the choice is exchanged. The shaded area indicates the standard deviation. Ctx. 1, context 1. Ctx. 2, context 2. (C) Characterizing the change of selection vector as well as input representation direction across contexts using cosine angle. The selection vector in each context is computed using linearized dynamical system analysis. The input representation direction is defined as the elementwise multiplication between the single neuron gain vector and the input embedding vector (see Methods for details). *** p&lt;0.001, one-way ANOVA test, n=100. Inp., input. Rep., representation. (D) Characterizing the overlap between the input representation direction and the selection vector. *** p&lt;0.001, one-way ANOVA test, n=100. Dir., direction. (E) The state space analysis for example trained rank-1 RNN. The space is spanned by the line attractor axis (red line) and the selection vector (green arrow). (F) Trial-averaged dynamics for example rank-1 RNN. We applied targeted dimensionality reduction (TDR) to identify the choice, input 1 and input 2 axes. The neuron activities were averaged according to input 1 strength, choice and context and then projected onto the choice and input 1 axes to obtain the trial-averaged population dynamics (See Methods for details).</p></caption>
<graphic xlink:href="610896v2_fig2.tif" mimetype="image" mime-subtype="tiff"/>
</fig>
<fig id="fig2_S1" position="float" fig-type="figure">
<label>Figure 2-figure supplement 1:</label>
<caption><title>Connectivity structure for the example rank-1 RNN.</title>
<p>(A) Projection of the connectivity space for the example rank-1 RNN. Each dot denotes a neuron. On each panel, the x and y coordinates of the <italic>i</italic>-th dot represent the <italic>i</italic>-th entry of the corresponding connectivity vectors.</p></caption>
<graphic xlink:href="610896v2_fig2_S1.tif" mimetype="image" mime-subtype="tiff"/>
</fig>
<fig id="fig3" position="float" fig-type="figure">
<label>Figure 3.</label>
<caption><title>A rank-3 neural network model with pure selection vector modulation.</title>
<p>(A) Illustration of the utilized rank-3 connectivity matrix structure. <italic>Left</italic>: the rank-3 matrix can be represented as the summation of three outer products, including the one with the output vector <bold><italic>m</italic></bold><sub><italic>dv</italic></sub> and the input-selection vector <bold><italic>n</italic></bold><sub><italic>dv</italic></sub>, the one with the output vector <inline-formula><inline-graphic xlink:href="610896v2_inline176.gif" mimetype="image" mime-subtype="gif"/></inline-formula> and the input-selection vector <inline-formula><inline-graphic xlink:href="610896v2_inline177.gif" mimetype="image" mime-subtype="gif"/></inline-formula>, and the one with the output vector <inline-formula><inline-graphic xlink:href="610896v2_inline178.gif" mimetype="image" mime-subtype="gif"/></inline-formula> and the input-selection vector <inline-formula><inline-graphic xlink:href="610896v2_inline179.gif" mimetype="image" mime-subtype="gif"/></inline-formula>, of which the input-selection vectors <inline-formula><inline-graphic xlink:href="610896v2_inline180.gif" mimetype="image" mime-subtype="gif"/></inline-formula> and <inline-formula><inline-graphic xlink:href="610896v2_inline181.gif" mimetype="image" mime-subtype="gif"/></inline-formula> played the role of selecting the input information from <bold><italic>I</italic></bold><sub>1</sub> and <bold><italic>I</italic></bold><sub>2</sub>, respectively. <italic>Right</italic>: the connectivity structure of the handcrafted RNN model characterized by the cosine angle between every pair of connectivity vectors (see <xref rid="fig3_S1" ref-type="fig">Figure 3-figure supplement 1</xref> and Methods for more details). (B) The psychometric curve of the handcrafted rank-3 RNN model. (C) Characterizing the change of selection vector as well as input representation direction across contexts using cosine angle. The selection vector in each context is computed using linearized dynamical system analysis. The input representation direction is defined as the elementwise multiplication between the single neuron gain vector and the input embedding vector (see Methods for details). *** p&lt;0.001, one-way ANOVA test, n=100. (D) Characterizing the overlap between the input representation direction and the selection vector. *** p&lt;0.001, one-way ANOVA test, n=100. (E) The state space analysis for example rank-3 RNN. The space is spanned by the line attractor axis (red line, invariant across contexts), selection vector in context 1 (green arrow, top panel) and selection vector in context 2 (green arrow, bottom panel). (F) Trial-averaged dynamics for example rank-3 RNN.</p></caption>
<graphic xlink:href="610896v2_fig3.tif" mimetype="image" mime-subtype="tiff"/>
</fig>
<fig id="fig3_S1" position="float" fig-type="figure">
<label>Figure 3-figure supplement 1:</label>
<caption><title>Connectivity structure for the example rank-3 RNN.</title>
<p>(A) Projection of the connectivity space for the example rank-3 RNN. This RNN has 30,000 neurons divided into three populations. Dots of the same color represent neurons within the same population. The inset in the top right corner shows the projection on the two context input axes. For brevity, we did not include the projections onto the context input axis and other connectivity vectors. Within each population, the context input axis is independent of the other connectivity vectors. This independence implies that the context signal only affects the average sensitivity of each neuron population, thereby serving a modulatory function.</p></caption>
<graphic xlink:href="610896v2_fig3_S1.tif" mimetype="image" mime-subtype="tiff"/>
</fig>
</sec>
<sec id="s2b">
<title>No selection vector modulation in rank-one models</title>
<p>In the literature, it was found that rank-one RNN models suffice to solve the CDM task (<xref ref-type="bibr" rid="c11">Dubreuil et al., 2022</xref>). Here, we further asked whether selection vector modulation can occur in rank-one RNN models. To this end, we trained many rank-1 models (see Methods for details) and found that indeed having rank-1 connectivity (e.g., with the overlap structure listed in <xref rid="fig2" ref-type="fig">Figure 2A</xref>; for the detailed connectivity structure, see <xref rid="fig2_S1" ref-type="fig">Figure 2-figure supplement 1</xref>) is sufficient to perform the CDM task, consistent with the earlier work. As shown in <xref rid="fig2" ref-type="fig">Figure 2B</xref>, in context 1, the decision was made based on input-1 evidence, ignoring input-2 evidence, indicating that the network can effectively filter out irrelevant information. To answer what kind of selection mechanisms underlies this context-dependent computation, we computed the selection vector in two contexts through linearized dynamical systems analysis (<xref ref-type="bibr" rid="c40">Sussillo &amp; Barak, 2013</xref>). Cosine angle analysis revealed that selection vectors kept invariant across different contexts (<xref rid="fig2" ref-type="fig">Figure 2C</xref>, left), indicating no selection vector modulation. This result was preserved across different hyperparameter settings (such as different regularization coefficients or activation functions). Note that this result actually can be mathematically proved (<xref ref-type="bibr" rid="c29">Pagan et al., 2023</xref>; <xref ref-type="bibr" rid="c30">Pagan et al., 2024</xref>). Therefore, our modeling result reconfirmed the limitation of rank-one models on selection vector modulation.</p>
<p>While the selection vector was not altered by contexts, the direction of input representations changed significantly across different contexts (<xref rid="fig2" ref-type="fig">Figure 2C</xref>, left; see Methods for the definition of input representation direction). Further analysis revealed that the overlap between the input representation direction and the unchanged selection vector is large in the relevant context and small in the irrelevant context, supporting the input modulation mechanism (<xref rid="fig2" ref-type="fig">Figure 2D</xref>). These results indicate that while a rank-1 network can perform the task, it can only achieve flexible computation through input modulation (<xref rid="fig2" ref-type="fig">Figure 2E</xref>). Importantly, when applying a similar targeted dimensionality reduction method to this rank-1 model, we found that the irrelevant sensory input information was indeed well-represented in neural activity state space (<xref rid="fig2" ref-type="fig">Figure 2F</xref>), supporting the conclusion made in the Pagan et al. paper that the presence of irrelevant sensory input in neural state space cannot be used as a reliable indicator for the absence of input modulation (<xref rid="fig1" ref-type="fig">Figure 1C</xref>).</p>
<p>In summary, we conclude that to study the mechanism of selection vector modulation, instead of limiting to the simplest model of CDM task, it is necessary to explore network models with higher ranks.</p>
</sec>
<sec id="s2c">
<title>A low-rank model with pure selection vector modulation</title>
<p>To study the mechanism of selection vector modulation, we designed a rank-3 neural network model, with one additional rank for each sensory input feature (i.e., <inline-formula><inline-graphic xlink:href="610896v2_inline7.gif" mimetype="image" mime-subtype="gif"/></inline-formula> for input 1 and <inline-formula><inline-graphic xlink:href="610896v2_inline8.gif" mimetype="image" mime-subtype="gif"/></inline-formula> for input 2; <xref rid="fig3" ref-type="fig">Figure 3A</xref>, left). Specifically, we ensured that <bold><italic>I</italic></bold><sub>1</sub> (<bold><italic>I</italic></bold><sub>2</sub>) has a positive overlap with <inline-formula><inline-graphic xlink:href="610896v2_inline9.gif" mimetype="image" mime-subtype="gif"/></inline-formula> and zero overlap with <bold><italic>n</italic></bold><sub><italic>dv</italic></sub>, while <inline-formula><inline-graphic xlink:href="610896v2_inline10.gif" mimetype="image" mime-subtype="gif"/></inline-formula> has a positive overlap with <bold><italic>n</italic></bold><sub><italic>dv</italic></sub> (<xref rid="fig3" ref-type="fig">Figure 3A</xref>, right; see <xref rid="fig3_S1" ref-type="fig">Figure 3-figure supplement 1</xref> and Methods for more details). Moreover, our rank-3 network relies on a multi-population structure, consistent with the notion that higher-rank networks still require a multi-population structure to perform flexible computations (<xref ref-type="bibr" rid="c11">Dubreuil et al., 2022</xref>). This configuration implies that the stimulus input 1 (2) is first selected by <inline-formula><inline-graphic xlink:href="610896v2_inline11.gif" mimetype="image" mime-subtype="gif"/></inline-formula>, represented by <inline-formula><inline-graphic xlink:href="610896v2_inline12.gif" mimetype="image" mime-subtype="gif"/></inline-formula>, and subsequently selected by <bold><italic>n</italic></bold><sub><italic>dv</italic></sub> before being integrated by the accumulator. In principle, this sequential selection process enables more sophisticated contextual modulations.</p>
<p>We confirmed that a model with such connectivity structure can perform the task (<xref rid="fig3" ref-type="fig">Figure 3B</xref>) and then conducted an analysis similar to that performed for rank-1 models. Unlike the rank-1 model, the selection vector for this rank-3 model changes across contexts while the input representation direction remains invariant (<xref rid="fig3" ref-type="fig">Figure 3C</xref>). Further analysis revealed that the overlap between the selection vector and the unchanged input representation direction is large in the relevant context and small in the irrelevant context (<xref rid="fig3" ref-type="fig">Figure 3D</xref>), supporting a pure selection vector modulation mechanism (<xref rid="fig3" ref-type="fig">Figure 3E</xref>) distinct from the input modulation counterpart shown in <xref rid="fig2" ref-type="fig">Figure 2D</xref>. When applying a similar targeted dimensionality reduction method to this rank-3 model, as what we expected, we found that both relevant and irrelevant sensory input information was indeed well-represented in neural activity state space (<xref rid="fig3" ref-type="fig">Figure 3F</xref>), which was indistinguishable from the input modulation counterpart (<xref rid="fig2" ref-type="fig">Figure 2F</xref>).</p>
<p>Together, through investigating these two extreme cases—one with pure input modulation and the other with pure selection vector modulation, we not only reconfirm the challenge of distinguishing input modulation from selection modulation based on neural activity data (<xref ref-type="bibr" rid="c28">Pagan et al., 2022</xref>) but also point out the previously unknown link between selection vector modulation and network connectivity dimensionality.</p>
</sec>
<sec id="s2d">
<title>Understanding context-dependent modulation in <xref rid="fig2" ref-type="fig">Figs. 2</xref> and <xref rid="fig3" ref-type="fig">3</xref> through pathway-based information flow analysis</title>
<p>What is the machinery underlying this link between selection vector modulation and network connectivity dimensionality? One possible way to address this issue is through linearized dynamical systems analysis: first computing the selection vector and the sensory input representation direction through reverse-engineering (Barak &amp; Sussillo, 2013) and then calculating both selection vector modulation and input modulation according to <xref ref-type="disp-formula" rid="eqn1">Eq. 1</xref>. However, the connection between the network connectivity dimensionality and the selection vector obtained through reverse-engineering is implicit and in general non-trivial (<xref ref-type="bibr" rid="c29">Pagan et al., 2023</xref>), hindering further investigation of the underlying machinery. Here, by combining recent theoretical progress in low-rank RNNs (<xref ref-type="bibr" rid="c21">Mastrogiuseppe &amp; Ostojic, 2018</xref>; <xref ref-type="bibr" rid="c11">Dubreuil et al., 2022</xref>) and linearized dynamical systems analysis (Barak &amp; Sussillo, 2013), we introduced a novel pathway-based information flow analysis approach, providing an explicit link between network connectivity, neural dynamics and selection mechanisms.</p>
<p>To start with, the low-rank RNN dynamics (i.e., <xref ref-type="disp-formula" rid="eqn2">Eq. 2</xref>) can be described by an information flow graph, with each task variable as a node and each effective coupling between task variables as an edge (<xref ref-type="bibr" rid="c21">Mastrogiuseppe &amp; Ostojic, 2018</xref>; <xref ref-type="bibr" rid="c11">Dubreuil et al., 2022</xref>). Take the rank-1 RNN in <xref rid="fig2" ref-type="fig">Figure 2</xref> as an example. A graph with three nodes, including two input variables <inline-formula><inline-graphic xlink:href="610896v2_inline13.gif" mimetype="image" mime-subtype="gif"/></inline-formula> and one decision variable κ<sub><italic>dv</italic></sub>(<italic>t</italic>), suffices (<xref rid="fig4" ref-type="fig">Figure 4A</xref>; see Methods for more details). In this graph, the dynamical evolution of the task variable κ<sub><italic>dv</italic></sub> can be expressed as:
<disp-formula id="eqn3">
<graphic xlink:href="610896v2_eqn3.gif" mimetype="image" mime-subtype="gif"/>
</disp-formula>
where the effective coupling <inline-formula><inline-graphic xlink:href="610896v2_inline14.gif" mimetype="image" mime-subtype="gif"/></inline-formula> from the input variable <inline-formula><inline-graphic xlink:href="610896v2_inline15.gif" mimetype="image" mime-subtype="gif"/></inline-formula> to the decision variable κ<sub><italic>dv</italic></sub> is equal to the overlap between the input representation direction <bold><italic>Ĩ</italic></bold><sub><italic>s</italic></sub> (each element is defined by Ĩ<sub><italic>s,i</italic></sub> = <italic>ϕ</italic>′(<italic>x</italic><sub><italic>i</italic></sub>)<italic>I</italic><sub><italic>s,i</italic></sub>) and the input-selection vector <bold><italic>n</italic></bold><sub><italic>dv</italic></sub>. More precisely, <inline-formula><inline-graphic xlink:href="610896v2_inline16.gif" mimetype="image" mime-subtype="gif"/></inline-formula>, where ⟨<bold><italic>a, b</italic></bold>⟩ is defined as <inline-formula><inline-graphic xlink:href="610896v2_inline17.gif" mimetype="image" mime-subtype="gif"/></inline-formula> for two length-<italic>N</italic> vectors. Since the input representation direction <bold><italic>Ĩ</italic></bold><sub><italic>s</italic></sub> depends on the single neuron gain <italic>ϕ</italic>′ and the context input can modulate this gain, the effective coupling <inline-formula><inline-graphic xlink:href="610896v2_inline18.gif" mimetype="image" mime-subtype="gif"/></inline-formula> is context-dependent. Indeed, as shown in <xref rid="fig4" ref-type="fig">Figure 4A</xref> and <xref rid="fig4_S1" ref-type="fig">Figure 4-figure supplement 1A</xref>, <inline-formula><inline-graphic xlink:href="610896v2_inline19.gif" mimetype="image" mime-subtype="gif"/></inline-formula> exhibited a large value in context 1 but was negligible in context 2 while <inline-formula><inline-graphic xlink:href="610896v2_inline20.gif" mimetype="image" mime-subtype="gif"/></inline-formula> exhibited a large value in context 2 but was negligible in context 1. In other words, information from the input variable can arrive at the decision variable only in the relevant context, which exactly is the computation required by the CDM task.</p>
<fig id="fig4" position="float" fig-type="figure">
<label>Figure 4.</label>
<caption><title>Pathway-based information flow analysis.</title>
<p>(A) The information flow graph of the rank-1 model presented in <xref rid="fig2" ref-type="fig">Figure 2</xref>. In this graph, nodes represented task variables communicating with each other through directed connections (denoted as <italic>E</italic><sub><italic>sender</italic>→<italic>receiver</italic></sub>) between them. Note that <italic>E</italic><sub><italic>sender</italic>→<italic>receiver</italic></sub> is the overlap between the representation direction of the sender variable (e.g., the representation directions of input variable and decision variable <bold><italic>I</italic></bold><sub><italic>inp</italic></sub> and <inline-formula><inline-graphic xlink:href="610896v2_inline96a.gif" mimetype="image" mime-subtype="gif"/></inline-formula>) and the input-selection vector of the receiver variable (e.g., the input-selection vector of decision variable <bold><italic>n</italic></bold><sub><italic>dv</italic></sub>). As such, <italic>E</italic><sub><italic>sender</italic>→<italic>receiver</italic></sub> naturally inherits the context dependency from the representation direction of task variable: while <inline-formula><inline-graphic xlink:href="610896v2_inline182.gif" mimetype="image" mime-subtype="gif"/></inline-formula>. exhibited a large value and <inline-formula><inline-graphic xlink:href="610896v2_inline183.gif" mimetype="image" mime-subtype="gif"/></inline-formula> was negligible in context 1, the values of these two exchanged in context 2. (B) Illustration of information flow dynamics in (A) through discretized steps. At step 1, sensory information <italic>A</italic><sub>1</sub> and <italic>A</italic><sub>2</sub> were placed in <italic>inp</italic>1 and <italic>inp</italic>2 slots, respectively. Depending on the context, different information contents (i.e., <inline-formula><inline-graphic xlink:href="610896v2_inline184.gif" mimetype="image" mime-subtype="gif"/></inline-formula> in context 1 and <inline-formula><inline-graphic xlink:href="610896v2_inline185.gif" mimetype="image" mime-subtype="gif"/></inline-formula> in context 2) entered into the <italic>dv</italic> slot at step 2 and were maintained by recurrent connections in the following steps, which is desirable for the context-dependent decision-making task. (C) The information flow graph of the rank-3 model presented in <xref rid="fig3" ref-type="fig">Figure 3</xref>. Different from (A), here to arrive at the <italic>dv</italic> slot, the input information has to first go through an intermediate slot (e.g., the <italic>inp</italic><sub>1</sub> → <italic>iv</italic><sub>1</sub> → <italic>dv</italic> pathway in context 1 and the <italic>inp</italic><sub>2</sub> → <italic>iv</italic><sub>2</sub> → <italic>dv</italic> pathway in context 2). (D) Illustration of information flow dynamics in (C) through discretized steps.</p></caption>
<graphic xlink:href="610896v2_fig4.tif" mimetype="image" mime-subtype="tiff"/>
</fig>
<fig id="fig4_S1" position="float" fig-type="figure">
<label>Figure 4-figure supplement 1:</label>
<caption><title>Effective coupling between task variables for rank-1 and rank-3 RNNs.</title>
<p>(A) Effective coupling between task variables for 100 trained rank-1 RNNs (<xref rid="fig2" ref-type="fig">Figure 2</xref>) in each context. Effective coupling between two task variables is defined as the overlap between the corresponding representation vector and input-selection vector. For example, the effective coupling from input 1 to decision variable <inline-formula><inline-graphic xlink:href="610896v2_inline193.gif" mimetype="image" mime-subtype="gif"/></inline-formula> is the overlap between <bold><italic>Ĩ</italic></bold><sub>1</sub> and <bold><italic>n</italic></bold><sub><italic>dv</italic></sub> (⟨<bold><italic>Ĩ</italic></bold><sub>1</sub>, <bold><italic>n</italic></bold><sub><italic>dv</italic></sub>⟩). As can be seen, the effective couplings of recurrent connection (<italic>E</italic><sub><italic>dv</italic>→<italic>dv</italic></sub>) are close to 1 in both contexts. The effective coupling from input task variables to decision variable is large in the relevant context (i.e. <inline-formula><inline-graphic xlink:href="610896v2_inline194.gif" mimetype="image" mime-subtype="gif"/></inline-formula> in context 1 and <inline-formula><inline-graphic xlink:href="610896v2_inline195.gif" mimetype="image" mime-subtype="gif"/></inline-formula> in context 2) and are negligible in the irrelevant context. (B) Effective coupling between task variables for 100 trained rank-3 RNNs (<xref rid="fig3" ref-type="fig">Figure 3</xref>) in each context. The effective coupling for recurrent connectivity (<italic>E</italic><sub><italic>dv</italic>→<italic>dv</italic></sub>, <italic>i</italic>. <bold><italic>e</italic></bold>. overlap between <inline-formula><inline-graphic xlink:href="610896v2_inline196.gif" mimetype="image" mime-subtype="gif"/></inline-formula> and <bold><italic>n</italic></bold><sub><italic>dv</italic></sub>) is close to 1 in both contexts. There is no direction connectivity from the input task variable to the decision variable since <inline-formula><inline-graphic xlink:href="610896v2_inline197.gif" mimetype="image" mime-subtype="gif"/></inline-formula> are zero in both contexts. The difference between <inline-formula><inline-graphic xlink:href="610896v2_inline198.gif" mimetype="image" mime-subtype="gif"/></inline-formula> in the two contexts leads to selection vector modulation.</p></caption>
<graphic xlink:href="610896v2_fig4_S1.tif" mimetype="image" mime-subtype="tiff"/>
</fig>
<fig id="fig4_S2" position="float" fig-type="figure">
<label>Figure 4-figure supplement 2:</label>
<caption><title>Neural activity and task variable dynamics for single pulse input.</title>
<p>(A) Task setting for single pulse input. We study the neural activity dynamics for low-rank RNN when they receive pulse input. For simplicity, only the RNNs’ neural activity given a pulse from input 1 in context 1 is considered. (B) Illustration of neural activity for rank-1 RNN given pulse input. For rank-1 RNN (<xref rid="fig2" ref-type="fig">Figure 2</xref>), dynamics of <inline-formula><inline-graphic xlink:href="610896v2_inline199.gif" mimetype="image" mime-subtype="gif"/></inline-formula> is always constrained in the subspace spanned by {<bold><italic>I</italic></bold><sub>1</sub>, <bold><italic>m</italic></bold><sub><italic>dv</italic></sub>}, with the corresponding coefficients being the input task variable <inline-formula><inline-graphic xlink:href="610896v2_inline200.gif" mimetype="image" mime-subtype="gif"/></inline-formula> and decision variable (<italic>k</italic><sub><italic>dv</italic></sub>), respectively. Moreover, the neural activity <bold><italic>x</italic></bold>(<italic>t</italic>) is always constrained in a line (dashed line) orthogonal to the selection vector. (C) Task variable dynamics for rank-1 RNN given pulse input. We run the example RNN for a given input and project the results onto each axis to obtain the dynamics of each task variable (solid line). The analytical expressions for the dynamics of each task variable are provided in the methods section (dotted line). The simulated RNN results closely match the theoretical values. (D) Illustration of neural activity for rank-3 RNN given pulse input. For rank-3 RNN (<xref rid="fig3" ref-type="fig">Figure 3</xref>), dynamics of <inline-formula><inline-graphic xlink:href="610896v2_inline201.gif" mimetype="image" mime-subtype="gif"/></inline-formula> are always constrained in the subspace spanned by {<bold><italic>I</italic></bold><sub>1</sub>, <bold><italic>m</italic></bold><sub><italic>iv</italic></sub>, <bold><italic>m</italic></bold><sub><italic>dv</italic></sub>}, with the corresponding coefficients being input task variable <inline-formula><inline-graphic xlink:href="610896v2_inline202.gif" mimetype="image" mime-subtype="gif"/></inline-formula>, intermediate task variable <inline-formula><inline-graphic xlink:href="610896v2_inline203.gif" mimetype="image" mime-subtype="gif"/></inline-formula> and decision variable (<italic>k</italic><sub><italic>dv</italic></sub>), respectively. (E) Task variable dynamics for rank-3 RNN given pulse input. Solid lines denote task variable dynamics calculated numerically by RNN simulation and dotted lines denote theoretical results.</p></caption>
<graphic xlink:href="610896v2_fig4_S2.tif" mimetype="image" mime-subtype="tiff"/>
</fig>
<p>To get a more intuitive understanding of the underlying information flow process, we discretized the equation and followed the information flow step by step. Specifically, by discretizing <xref ref-type="disp-formula" rid="eqn3">Eq. 3</xref> using Euler’s method with a time step equal to the time constant τ of the system, we get
<disp-formula id="eqn4">
<graphic xlink:href="610896v2_eqn4.gif" mimetype="image" mime-subtype="gif"/>
</disp-formula>
</p>
<p>Take context 1 as an example (<xref rid="fig4" ref-type="fig">Figure 4B</xref>, top panel). Initially, there is no information in the system. In step 1, pulse inputs of size <italic>A</italic><sub>1</sub> and <italic>A</italic><sub>2</sub> are placed in the <italic>inp</italic><sub>1</sub> and <italic>inp</italic><sub>2</sub> slots, respectively. The information from these slots, after being multiplied by the corresponding effective coupling, then flows to the <italic>dv</italic> slot. In context 1, <inline-formula><inline-graphic xlink:href="610896v2_inline21.gif" mimetype="image" mime-subtype="gif"/></inline-formula>, meaning only the content from the <italic>inp</italic><sub>1</sub> slot can arrive at the <italic>dv</italic> slot. Consequently, in step 2, the information content in the <italic>dv</italic> slot would be <inline-formula><inline-graphic xlink:href="610896v2_inline22.gif" mimetype="image" mime-subtype="gif"/></inline-formula>. The following steps will replicate step 2 due to the recurrent connectivity of the <italic>dv</italic> slot. The scenario in context 2 is similar to context 1, except that only the content from the <italic>inp</italic><sub>2</sub> slot arrives at the <italic>dv</italic> slot (<xref rid="fig4" ref-type="fig">Figure 4B</xref>, bottom panel). The continuous dynamics for each task variable given pulse input is displayed in <xref rid="fig4_S2" ref-type="fig">Figure 4-figure supplement 2, A-C</xref>.</p>
<p>The same pathway-based information flow analysis can also be applied to the rank-3 model (<xref rid="fig4" ref-type="fig">Figure 4C</xref> and <xref rid="fig4" ref-type="fig">4D</xref>). In this model, similar to the rank-1 models, there are input variables (<inline-formula><inline-graphic xlink:href="610896v2_inline23.gif" mimetype="image" mime-subtype="gif"/></inline-formula> and <inline-formula><inline-graphic xlink:href="610896v2_inline24.gif" mimetype="image" mime-subtype="gif"/></inline-formula>) and decision variable (<italic>k</italic><sub><italic>dv</italic></sub>). Additionally, it includes intermediate variables (<inline-formula><inline-graphic xlink:href="610896v2_inline25.gif" mimetype="image" mime-subtype="gif"/></inline-formula> and <inline-formula><inline-graphic xlink:href="610896v2_inline26.gif" mimetype="image" mime-subtype="gif"/></inline-formula>) corresponding to the activity along the <inline-formula><inline-graphic xlink:href="610896v2_inline27.gif" mimetype="image" mime-subtype="gif"/></inline-formula> and <inline-formula><inline-graphic xlink:href="610896v2_inline28.gif" mimetype="image" mime-subtype="gif"/></inline-formula> axes. In this scenario, instead of flowing directly from the input to the decision variable, the information flows first to the intermediate variables and then to the decision variable. These intermediate variables act as intermediate nodes. Introducing these nodes does more than simply increase the steps from the input variable to the decision variable. In the rank-1 case, the context signals can only modulate the pathway from the input to the decision variable. However, in the rank-3 case, context signals can modulate the system in two ways: from the input to the intermediate variables and from the intermediate variables to the decision variable.</p>
<p>Take the rank-3 model introduced in <xref rid="fig3" ref-type="fig">Figure 3</xref> as an example. Context signals did not alter the representation of input signals, leading to constant effective couplings (i.e., constant <inline-formula><inline-graphic xlink:href="610896v2_inline29.gif" mimetype="image" mime-subtype="gif"/></inline-formula> and <inline-formula><inline-graphic xlink:href="610896v2_inline30.gif" mimetype="image" mime-subtype="gif"/></inline-formula>) from input to intermediate variables across contexts. Instead, it changed the effective coupling from the intermediate variables to the decision variable (i.e., large <inline-formula><inline-graphic xlink:href="610896v2_inline31.gif" mimetype="image" mime-subtype="gif"/></inline-formula> in context 1 and near zero <inline-formula><inline-graphic xlink:href="610896v2_inline32.gif" mimetype="image" mime-subtype="gif"/></inline-formula> in context 2; <xref rid="fig4" ref-type="fig">Figure 4C</xref> and <xref rid="fig4_S1" ref-type="fig">Figure 4-figure supplement 1B</xref>). Consider the context 1 scenario in the discrete case. In step 1, pulse inputs of size <italic>A</italic><sub>1</sub> and <italic>A</italic><sub>2</sub> are placed in the <italic>inp</italic><sub>1</sub> and <italic>inp</italic><sub>2</sub> slots, respectively. In step 2, information flows to the intermediate slots, with <inline-formula><inline-graphic xlink:href="610896v2_inline33.gif" mimetype="image" mime-subtype="gif"/></inline-formula> in the <italic>iv</italic><sub>1</sub> slot and <inline-formula><inline-graphic xlink:href="610896v2_inline34.gif" mimetype="image" mime-subtype="gif"/></inline-formula> in the <italic>iv</italic><sub>2</sub> slot. In step 3, only the information in the <italic>iv</italic><sub>1</sub> slot flows to the <italic>dv</italic> slot, with the information content being <inline-formula><inline-graphic xlink:href="610896v2_inline35.gif" mimetype="image" mime-subtype="gif"/></inline-formula> (<xref rid="fig4" ref-type="fig">Figure 4D</xref>, top panel). The scenario in context 2 is similar to context 1, except that only the content from the <italic>iv</italic><sub>2</sub> slot reaches the <italic>dv</italic> slot in the third step, with the content being <inline-formula><inline-graphic xlink:href="610896v2_inline36.gif" mimetype="image" mime-subtype="gif"/></inline-formula> (<xref rid="fig4" ref-type="fig">Figure 4D</xref>, bottom panel). The continuous dynamics for each task variable given pulse input is displayed in <xref rid="fig4_S2" ref-type="fig">Figure 4-figure supplement 2, D</xref> and <xref rid="fig4_S2" ref-type="fig">E</xref>.</p>
<p>Together, this pathway-based information flow analysis provides an in-depth understanding of how the input information can be routed to the accumulator depending on the context, laying the foundation for a novel pathway-based information flow definition of selection vector and input contextual modulations.</p>
</sec>
<sec id="s2e">
<title>Information flow-based definition of selection vector modulation and selection vector for more general cases</title>
<p>Based on the understanding gained from the pathway-based information flow analysis, we now provide a novel definition of input modulation and selection vector modulation distinct from the one in <xref ref-type="disp-formula" rid="eqn1">Eq. 1</xref>. To begin with, we first considered a model with mixed input and selection vector modulation (<xref rid="fig5" ref-type="fig">Figure 5A</xref>, left), instead of studying extreme cases (i.e., one with pure input modulation in <xref rid="fig2" ref-type="fig">Figure 2</xref> and the other with pure selection vector modulation in <xref rid="fig3" ref-type="fig">Figure 3</xref>). In this more general model, input information can either go directly to the decision variable (with effective coupling <italic>E</italic><sub><italic>inp</italic>→<italic>dv</italic></sub>) or first pass through the intermediate variables before reaching the decision variable (with effective coupling <italic>E</italic><sub><italic>inp</italic>→<italic>iv</italic></sub> and <italic>E</italic><sub><italic>iv</italic>→<italic>dv</italic></sub> respectively). Applying the same information flow analysis, we see that a pulse input of unit size will ultimately reach the <italic>dv</italic> slot with a magnitude of <italic>E</italic><sub><italic>inp</italic>→<italic>dv</italic></sub>+ <italic>E</italic><sub><italic>inp</italic>→<italic>iv</italic></sub><italic>E</italic><sub><italic>iv</italic>→<italic>dv</italic></sub> (<xref rid="fig5" ref-type="fig">Figure 5A</xref>, right; see Methods for more details). In other words, the total effective coupling <italic>E</italic><sub><italic>tol</italic></sub> from the input to the decision variable is equal to <italic>E</italic><sub><italic>inp</italic>→<italic>dv</italic></sub>+ <italic>E</italic><sub><italic>inp</italic>→<italic>iv</italic></sub><italic>E</italic><sub><italic>iv</italic>→<italic>dv</italic></sub>. Now, it is straightforward to decompose the context-dependent modulation of <italic>E</italic><sub><italic>tol</italic></sub> in terms of input or selection vector change:
<disp-formula id="eqn5">
<graphic xlink:href="610896v2_eqn5.gif" mimetype="image" mime-subtype="gif"/>
</disp-formula>
in which the first component Δ<italic>E</italic><sub><italic>inp</italic>→<italic>dv</italic></sub>+ Δ<italic>E</italic><sub><italic>inp</italic>→<italic>iv</italic></sub><italic>Ē</italic><sub><italic>iv</italic>→<italic>dv</italic></sub> stands for the change of input representation (termed as input modulation) and the second component <italic>Ē</italic><sub><italic>inp</italic>→<italic>iv</italic></sub>Δ<italic>E</italic><sub><italic>iv</italic>→<italic>dv</italic></sub> is the one without changing the stimulus input representation (termed as selection vector modulation).</p>
<fig id="fig5" position="float" fig-type="figure">
<label>Figure 5.</label>
<caption><title>A novel pathway-based definition of selection vector modulation.</title>
<p>(A) A pathway-based decomposition of contextual modulation in a model with both input and selection vector modulations. This definition is based on an explicit formula of the effective connection from the input variable to the decision variable in the model (i.e., <italic>E</italic><sub><italic>inp</italic>→<italic>dv</italic></sub>+ <italic>E</italic><sub><italic>inp</italic>→<italic>iv</italic></sub><italic>E</italic><sub><italic>iv</italic>→<italic>dv</italic></sub>; see Method for details). The input modulation component is then defined as the modulation induced by the change of the input representation direction across contexts. The remaining component is then defined as the selection vector modulation one. (B) Illustration of contextual modulation decomposition introduced in <xref ref-type="bibr" rid="c28">Pagan et al., 2022</xref>. In this definition, the selection vector has to be first reverse-engineered through linearized dynamical systems analysis. The input modulation component is then defined as the modulation induced by the change of input representation direction across contexts while the selection vector modulation component is defined as the one induced by the change of the selection vector across contexts. (C) A family of handcrafted RNNs with both input and selection vector modulations. <bold><italic>α</italic></bold>, <italic>β</italic>, and <italic>η</italic> represent the associated effective coupling between task variables. In this model family, the <italic>inp</italic> → <italic>dv</italic> pathway, susceptible to the input modulation, is parameterized by <bold><italic>α</italic></bold> while the <italic>inp</italic> → <italic>iv</italic> → <italic>dv</italic> pathway, susceptible to the selection vector modulation, is parameterized by <italic>β</italic> and <italic>η</italic>. As such, the ratio of the input modulation to the selection vector modulation can be conveniently controlled by adjusting <bold><italic>α</italic></bold>, <italic>β</italic>, and <italic>η</italic>. (D) Comparison of pathway-based definition in (A) with the classical definition in (B) using the model family introduced in (C).</p></caption>
<graphic xlink:href="610896v2_fig5.tif" mimetype="image" mime-subtype="tiff"/>
</fig>
<p>We then asked if this pathway-based definition is equivalent to the one in <xref ref-type="disp-formula" rid="eqn1">Eq. 1</xref> based on linearized dynamical system analysis (<xref rid="fig5" ref-type="fig">Figure 5B</xref>; <xref ref-type="bibr" rid="c28">Pagan et al., 2022</xref>). To answer this question, we numerically compared these two definitions using a family of models with both input and selection vector modulations (<xref rid="fig5" ref-type="fig">Figure 5C</xref>; see Methods for model details) and found that these two definitions produced the same proportion of selection vector modulation across a wide range of parameter regimes (<xref rid="fig5" ref-type="fig">Figure 5D</xref>). Together with theoretical derivation of equivalence (see Methods), this consistency confirmed the validity of our pathway-based definition of contextual modulation decomposition.</p>
<p>Having elucidated the pathway-based definitions of input and selection vector modulation, we next provide a novel pathway-based definition of selection vector. For the network depicted in <xref rid="fig5" ref-type="fig">Figure 5A</xref>, the total effective coupling <italic>E</italic><sub><italic>inp</italic>→<italic>dv</italic></sub>+ <italic>E</italic><sub><italic>inp</italic>→<italic>iv</italic></sub><italic>E</italic><sub><italic>iv</italic>→<italic>dv</italic></sub> can be rewritten as ⟨<bold><italic>Ĩ, n</italic></bold><sub><italic>tol</italic></sub>⟩, where <bold><italic>Ĩ</italic></bold> is the input representation direction and <inline-formula><inline-graphic xlink:href="610896v2_inline37.gif" mimetype="image" mime-subtype="gif"/></inline-formula>. This reformulation aligns with the insight that the amount of input information that can be integrated by the accumulator is determined by the dot product between the input representation direction <bold><italic>Ĩ</italic></bold> and the selection vector. Thus, <bold><italic>n</italic></bold><sub><italic>tol</italic></sub> is the selection vector of the circuit in <xref rid="fig5" ref-type="fig">Figure 5A</xref>.</p>
<p>To better understand why selection vector has such a formula, we visualized the information propagation from input to the choice axis using a low-rank matrix (<xref rid="fig6" ref-type="fig">Figure 6A</xref>). Specifically, it comprises two components, each corresponding to a distinct pathway. For the first component, input information is directly selected by <bold><italic>n</italic></bold><sub><italic>dv</italic></sub>. For the second component, input information is sent first to the intermediate variable and then to the decision variable. This pathway involves two steps: in the first step, the input representation vector is selected by <bold><italic>n</italic></bold><sub><italic>iv</italic></sub>, and in the second step, to arrive at the choice axis, the selected information has to be multiplied by the effective coupling <inline-formula><inline-graphic xlink:href="610896v2_inline38.gif" mimetype="image" mime-subtype="gif"/></inline-formula>. By concatenating these two steps, information propagation from the input to the choice axis in this pathway can be effectively viewed as a selection process mediated by the vector <inline-formula><inline-graphic xlink:href="610896v2_inline39.gif" mimetype="image" mime-subtype="gif"/></inline-formula> (termed as the second-order selection vector component). Therefore, <bold><italic>n</italic></bold><sub><italic>tol</italic></sub> provides a novel pathway-based definition of selection vector in the network. We further verified the equivalence between this pathway-based definition and the linearized-dynamical-systems-based classical definition (<xref ref-type="bibr" rid="c20">Mante et al., 2013</xref>) in our simple circuit through theoretical derivation (see Methods) and numerical comparison (<xref rid="fig6" ref-type="fig">Figure 6B</xref>).</p>
<fig id="fig6" position="float" fig-type="figure">
<label>Figure 6.</label>
<caption><title>An explicit pathway-based formula of selection vector.</title>
<p>(A) Illustration of how an explicit pathway-based formula of selection vector is derived. In a model with both the first-order selection pathway (i.e., <italic>inp</italic> → <italic>dv</italic>) and the second-order selection pathway (i.e., <italic>inp</italic> → <italic>iv</italic> → <italic>dv</italic>), the second-order pathway can be reduced to a pathway with the effective selection vector <inline-formula><inline-graphic xlink:href="610896v2_inline186.gif" mimetype="image" mime-subtype="gif"/></inline-formula> that exhibited the contextual dependency missing in rank-1 models. (B) Comparison between this pathway-based selection vector and the classical one (<xref ref-type="bibr" rid="c20">Mante et al., 2013</xref>) using 1,000 RNNs (see Methods for details). (C) The connection between our understanding and the classical understanding in neural state space. Based upon the explicit formula of selection vector in (A), the selection vector modulation has to rely on the contextual modulation of additional representation direction (i.e., <inline-formula><inline-graphic xlink:href="610896v2_inline187.gif" mimetype="image" mime-subtype="gif"/></inline-formula>) orthogonal to both the input representation direction (<bold><italic>Ĩ</italic></bold><sub><italic>inp</italic></sub>) and decision variable representation direction (<inline-formula><inline-graphic xlink:href="610896v2_inline188.gif" mimetype="image" mime-subtype="gif"/></inline-formula>, line attractor). Therefore, it requires at least three dimensions (i.e., <inline-formula><inline-graphic xlink:href="610896v2_inline189.gif" mimetype="image" mime-subtype="gif"/></inline-formula>, and <inline-formula><inline-graphic xlink:href="610896v2_inline190.gif" mimetype="image" mime-subtype="gif"/></inline-formula>) to account for the selection vector modulation in neural state space.</p></caption>
<graphic xlink:href="610896v2_fig6.tif" mimetype="image" mime-subtype="tiff"/>
</fig>
<fig id="fig7" position="float" fig-type="figure">
<label>Figure 7.</label>
<caption><title>The correlation between the dimensionality of neural dynamics and the proportion of selection vector modulation is confirmed in vanilla RNNs.</title>
<p>(A) A general neural circuit model of CDM. In this model, there are multiple pathways capable of propagating the input information to the decision variable slot, of which the blue connections are susceptible to the input modulation while the green connections are susceptible to the selection vector modulation (see Methods for details). (B) The explicit formula of both the effective connection from the input variable to the decision variable and the effective selection vector for the model in (A). (C) The setting of vanilla RNNs trained to perform the CDM task. See Methods for more details. (D) Positive correlation between effective connectivity dimension and proportion of selection vector modulation. Given a trained RNN with matrix <italic>J</italic>, the effective connectivity dimension, defined by <inline-formula><inline-graphic xlink:href="610896v2_inline191.gif" mimetype="image" mime-subtype="gif"/></inline-formula> where <italic>σ</italic><sub>1</sub> ≥ <italic>σ</italic><sub>2</sub> ≥…≥ <italic>σ</italic><sub>n</sub> are singular values of <italic>J</italic>, is used to quantify the connectivity dimensionality. Spearman’s rank correlation, r=0.919, p&lt;1e-3, n=3,892. The x-axis is displayed in log-scale. (E) Single neuron response kernels for two example RNNs. The neuron response kernels were calculated using a regression method (<xref ref-type="bibr" rid="c28">Pagan et al., 2022</xref>; see Methods for details). For simplicity, only response kernels for input 1 are displayed. <italic>Top</italic>: Response kernels for two example neurons in the RNN with low effective dimension (indicated by a star marker in panel D). Two typical response kernels, including the decision variable profile (left) and the sensory input profile (right), are displayed. <italic>Bottom</italic>: Response kernels for three example neurons in the RNN with high effective dimension (indicated by a square marker in panel D). In addition to the decision variable profile (left) and sensory input profile (middle), there are neurons whose response kernels initially increase and then decrease (right). Gray lines, response kernels in context 1 (i.e., rel. ctx.). Blue lines, response kernels in context 2 (i.e., irrel. ctx.). (F) Principal dynamical modes for response kernels in the population level extracted by singular value decomposition. <italic>Left</italic>: Shared dynamical modes including one persistent choice mode (grey) and three transient modes (blue, orange, green) are identified across both RNNs. <italic>Right</italic>: For the <italic>i</italic>-th transient mode, the normalized percentage of explained variance (PEV) is given by <inline-formula><inline-graphic xlink:href="610896v2_inline192.gif" mimetype="image" mime-subtype="gif"/></inline-formula>, where <italic>σ</italic><sub>1</sub> ≥ <italic>σ</italic><sub>2</sub> ≥…≥ <italic>σ</italic><sub>39</sub> are singular values for each transient mode (see Methods for details). (G) Positive correlation between response-kernel-based index and proportion of selection vector modulation. For a given RNN, PEV of extra dynamical modes is defined as the accumulated normalized PEV of the second and subsequent transient dynamical modes (see Methods for details). Spearman’s rank correlation, r=0.902, p&lt;1e-3, n=3,892. The x-axis is displayed in log-scale.</p></caption>
<graphic xlink:href="610896v2_fig7.tif" mimetype="image" mime-subtype="tiff"/>
</fig>
<fig id="fig7_S1" position="float" fig-type="figure">
<label>Figure 7-figure supplement 1:</label>
<caption><title>Training vanilla RNNs with different regularization coefficients.</title>
<p>(A) The influence of regularization coefficient to effective connectivity dimension of trained RNNs. For each regularization coefficient, we trained 100 full-rank RNNs (<xref rid="fig7" ref-type="fig">Figure 7</xref>, panel D). Larger regularization results in connectivity matrices with lower rank, leading to a smaller effective connectivity dimension. (B) The influence of regularization coefficient on selection vector modulation of trained RNNs Distribution of selection vector modulation for networks trained with different regularization coefficients. Larger regularization leads to networks that favor the input modulation strategy. (C) The relationship between the proportion of explained variance (PEV) in extra-dimensions and effective connectivity dimension. There is a strong positive correlation between the PEV in extra dimensions and the effective connectivity dimension in both contexts. In each panel, each dot denotes a trained RNN, with different colors denoting different regularization coefficients.</p></caption>
<graphic xlink:href="610896v2_fig7_S1.tif" mimetype="image" mime-subtype="tiff"/>
</fig>
<fig id="fig7_S2" position="float" fig-type="figure">
<label>Figure 7-figure supplement 2:</label>
<caption><title>Verification correlation results using vanilla RNNs trained with different hyper-parameter settings.</title>
<p>(A) Similar results in trained vanilla RNNs with a softplus activation function. <italic>Left</italic>: Spearman’s rank correlation, r= 0.945, p&lt;1e-3, n= 2564. <italic>Right</italic>: Spearman’s rank correlation, r=0.803, p&lt;1e-3, n=2564. The x-axes are displayed in log-scale for both panels. (B) Similar results in trained vanilla RNNs initialized with a variance of 1/<italic>N. Left</italic>: Spearman’s rank correlation, r=0.973, p&lt;1e-3, n=2630. <italic>Right</italic>: Spearman’s rank correlation, r=0.976, p&lt;1e-3, n=2630. The x-axes are displayed in log-scale for both panels.</p></caption>
<graphic xlink:href="610896v2_fig7_S2.tif" mimetype="image" mime-subtype="tiff"/>
</fig>
<fig id="fig7_S3" position="float" fig-type="figure">
<label>Figure 7-figure supplement 3:</label>
<caption><title>Two RNNs with distinct modulation strategies produce the same neural activities.</title>
<p>(A) Information flow graph for the two RNNs. The black arrows denote that the effective coupling from the head to the tail is 1. For RNN1, the closure of <italic>inp</italic><sub>1</sub> → <italic>iv</italic><sub>2</sub> on the pathway <italic>inp</italic><sub>1</sub> → <italic>iv</italic><sub>+</sub> → <italic>dv</italic> prevents <italic>inp</italic><sub>1</sub> from reaching <italic>iv</italic><sub>2</sub> and subsequently the decision variable (<italic>dv</italic>), indicating that RNN1 uses solely input modulation strategy for input 1. For RNN2, the closure of <italic>iv</italic><sub>1</sub> → <italic>dv</italic> on the pathway <italic>inp</italic><sub>1</sub> → <italic>iv</italic><sub>1</sub> → <italic>dv</italic> means that although <italic>inp</italic><sub>1</sub> can reach <italic>iv</italic><sub>1</sub>, the subsequent step of <italic>iv</italic><sub>1</sub> reading <italic>dv</italic> is blocked. This indicates RNN2 uses solely the selection vector modulation strategy for input 1. (B) Connectivity weight among three example neurons in the two RNNs. Each neuron belongs to one of the three neuron populations (see Method for more details). Notice that the connectivity weights from <bold><italic>n</italic></bold><sub>1</sub> (neuron 1) to <bold><italic>n</italic></bold><sub>3</sub> (or <bold><italic>n</italic></bold><sub>2</sub> to <bold><italic>n</italic></bold><sub>3</sub>) are different between the two RNNs. (C) Neural activities for the three neurons in three example trials. Orange lines denote activities for RNN1 and blue lines denote activities for RNN2. The neural activity is approximately equal between the two RNNs. (D) Histogram of the single neuron activity similarity between the two RNNs. We calculated the similarity between the activity of the <italic>i</italic>-th neuron in RNN1 and the <italic>i</italic>-th neuron in RNN2 during trial <italic>k</italic> (<italic>r2_score</italic> function in the <italic>sklearn</italic> package of Python). Averaging over the batches provides the similarity between corresponding neurons (neuron <italic>i</italic> in RNN1 and neuron <italic>i</italic> in RNN2).</p></caption>
<graphic xlink:href="610896v2_fig7_S3.tif" mimetype="image" mime-subtype="tiff"/>
</fig>
<fig id="fig7_S4" position="float" fig-type="figure">
<label>Figure 7-figure supplement 4:</label>
<caption><title>Artificially introducing redundant structure can disrupt the PEV of extra dynamical modes index</title>
<p>A. Positive correlation between response-kernel-based index and proportion of selection vector modulation in trained vanilla RNNs. (Spearman’s rank correlation, n=75). B. No significant correlation between these two metrics in RNNs with additional task-irrelevant variance. (Spearman’s rank correlation, n=75). C. PEV of irrelevant activity showed significant difference between trained vanilla RNNs and RNNs with additional task-irrelevant variance. (one-way ANOVA test, n=75, ***: p&lt;0.001).</p></caption>
<graphic xlink:href="610896v2_fig7_S4.tif" mimetype="image" mime-subtype="tiff"/>
</fig>
<p>To visualize the pathway-based selection vector in neural activity state space, we found that a minimum of three dimensions is required, including the input representation direction, the decision variable representation direction and the intermediate variable representation direction (<xref rid="fig6" ref-type="fig">Figure 6C</xref>, left). This geometric visualization highlighted the role of extra-dimensions beyond the classical two-dimensional neural activity space spanned by the line attractor and selection vector (<xref rid="fig6" ref-type="fig">Figure 6C</xref>, right) in accounting for the selection vector modulation. This is simply because only the second-order selection vector component, which depends on the existence of the intermediate variable, is subject to contextual modulation. In other words, without extra-dimensions to support intermediate variable encoding, there will be no selection modulation.</p>
<p>Together, this set of analysis provided a parsimonious pathway-based understanding for both selection vector and its contextual modulation.</p>
</sec>
<sec id="s2f">
<title>Model prediction verification with vanilla RNN models</title>
<p>The new insights obtained from our new framework enable us to generate testable predictions for better differentiating selection vector modulation from input modulation, a major challenge unresolved in the field (<xref ref-type="bibr" rid="c28">Pagan et al., 2022</xref>).</p>
<p>First, we predict that it is more likely to have a large proportion of selection vector modulation for a neural network with high-dimensional connectivity. To better explain the underlying rationale, we can simply compare the number of potential connections contributing to the input modulation with those contributing to the selection vector modulation for a given neural network model. For example, in the network presented in <xref rid="fig5" ref-type="fig">Figure 5</xref>, there are three connections (including light blue, dark blue and green ones) while only one connection (i.e., the green one) supporting selection vector modulation. For a circuit with many higher-order pathways (e.g., <xref rid="fig7" ref-type="fig">Figure 7A</xref>), only those connections with the input as the sender is able to support input modulation. In other words, there exist far more connections potentially eligible to support the selection vector modulation (<xref rid="fig7" ref-type="fig">Figure 7B</xref>), thereby leading to a large selection vector modulation proportion. We then tested this prediction on vanilla RNNs trained through backpropagation (<xref rid="fig7" ref-type="fig">Figure 7C</xref>; <xref ref-type="bibr" rid="c20">Mante et al., 2013</xref>; <xref ref-type="bibr" rid="c39">Song et al., 2016</xref>; <xref ref-type="bibr" rid="c45">Yang &amp; Wang, 2020</xref>). Using effective dimension (see Methods for a formal definition; <xref ref-type="bibr" rid="c33">Rudelson &amp; Vershynin, 2007</xref>; <xref ref-type="bibr" rid="c35">Sanyal et al., 2020</xref>) to quantify the dimensionality of the connectivity matrix, we found a strong positive correlation between the effective dimension of connectivity matrix and the selection vector modulation (<xref rid="fig7" ref-type="fig">Figure 7D</xref>, left panel and <xref rid="fig7_S1" ref-type="fig">Figure 7-figure supplement 1A</xref>, see Method for details).</p>
<p>We then asked if we could generate predictions to quantify the proportion of selection vector modulation purely based on neural activities. To this end, as what has been performed in Pagan et al., we took advantage of the pulse-based sensory input setting to calculate the single neuron response kernel (see Methods for details). For a given neuron, the associated response kernel is defined to characterize the influence of a pulse input on its firing rate in later times. For example, for a neuron encoding the decision variable, the response kernel should exhibit a profile accumulating evidence over time (<xref rid="fig7" ref-type="fig">Figure 7E</xref>, top left). In contrast, for a neuron encoding the sensory input, the response kernel should exhibit an exponential decay profile with time constant <italic>τ</italic> (<xref rid="fig7" ref-type="fig">Figure 7E</xref>, top right). For each RNN trained through backpropagation, we then examined the associated single neuron response kernels. We found that for the model with low effective dimension (denoted by a star marker in <xref rid="fig7" ref-type="fig">Figure 7D</xref>), there were mainly two types of response kernels, including sensory input profile and decision variable profile (<xref rid="fig7" ref-type="fig">Figure 7E</xref>, top). In contrast, for the model with the highest effective dimension (denoted by a square marker in <xref rid="fig7" ref-type="fig">Figure 7D</xref>), aside from the sensory input and decision variable profiles, richer response kernel profiles were exhibited (<xref rid="fig7" ref-type="fig">Figure 7E</xref>, bottom). In particular, there was a set of single neuron response kernels with peak amplitudes occurring between the pulse input onset and the choice onset (<xref rid="fig7" ref-type="fig">Figure 7E</xref>, bottom right). These response kernels cannot be explained by the combination of sensory input and decision variable. Instead, the existence of these response kernels signifies neural dynamics in extra-dimensions beyond the subspaces spanned by the input and decision variable, the genuine neural dynamical signature of the existence of selection vector modulation (<xref rid="fig6" ref-type="fig">Figure 6C</xref>).</p>
<p>While single neuron response kernels are illustrative in highlighting the model difference, they lack explanatory power at the population level. Therefore, we employed the singular value decomposition method to extract the principal dynamical modes of response kernels at the population level (see Methods for details). We found that similar dynamical modes, including one persistent choice mode (grey) and three transient modes (blue, orange, green), were shared across both the low and high effective dimension models (<xref rid="fig7" ref-type="fig">Figure 7F</xref>, left). The key difference between these two models lies in the percentage of explained variance (PEV) of the second transient mode (orange): while there is near-zero PEV in the low effective dimension model (<xref rid="fig7" ref-type="fig">Figure 7F</xref>, top right), there is a substantial PEV in the high effective dimension model (<xref rid="fig7" ref-type="fig">Figure 7F</xref>, bottom right), consistent with the single neuron picture shown in <xref rid="fig7" ref-type="fig">Figure 7E</xref>. This result led us to use the PEV of extra dynamical modes (including the orange and green ones; see Methods for details) as a simple index to quantify the amount of selection vector modulation in these models. As expected, we found that the PEV of extra dynamical modes can serve as a reliable index reflecting the proportion of selection vector modulation in these models (<xref rid="fig7" ref-type="fig">Figure 7G</xref>, right panel and <xref rid="fig7_S1" ref-type="fig">Figure 7-figure supplement 1, B</xref> and <xref rid="fig7_S1" ref-type="fig">C</xref>). Similar results for vanilla RNNs trained with different hyperparameter settings are displayed in <xref rid="fig7_S2" ref-type="fig">Figure 7-figure supplement 2</xref>.</p>
<p>Together, we identified novel neural dynamical signatures of section vector modulation at both the single neuron and population level, suggesting that the potential great utility of these neural dynamical signatures in distinguishing the contribution of selection vector modulation from input modulation in experimental data.</p>
</sec>
</sec>
<sec id="s3">
<title>Discussion</title>
<p>Using low-rank RNNs, we provided a rigorous theoretical framework linking network connectivity, neural dynamics, and selection mechanisms, and gained an in-depth algebraic and geometric understanding of both input and selection vector modulation mechanisms, and accordingly uncovered a previously unknown link between selection vector modulation and extra-dimensions in neural state space. This gained understanding enabled us to generate novel predictions linking novel neural dynamic modes with the proportion of selection vector modulation, paving the way towards addressing the intricacy of neural variability across subjects in context-dependent computation.</p>
<sec id="s3a">
<title>A pathway-based definition of selection vector modulation</title>
<p>In their seminal work, Mante, Sussillo, and their collaborators developed a numerical approach to compute the selection vector for trained RNN models (<xref ref-type="bibr" rid="c20">Mante et al., 2013</xref>). Based on this concept of selection vector, recently, Pagan et al. proposed a new theoretical framework to decompose the solution space of context-dependent decision-making, in which input modulation and selection vector modulation were explicitly defined (i.e., <xref ref-type="disp-formula" rid="eqn1">Eq. 1</xref>). Here, taking the theoretical advantage of low-rank RNNs (<xref ref-type="bibr" rid="c21">Mastrogiuseppe &amp; Ostojic, 2018</xref>; <xref ref-type="bibr" rid="c11">Dubreuil et al., 2022</xref>), we went beyond numerical reverse-engineering and provided a complementary pathway-based definition of both selection vector and selection vector modulation (i.e., <xref ref-type="disp-formula" rid="eqn5">Eq. 5</xref>). This new definition gained us a novel geometric understanding of selection vector modulation, revealed a previously unknown link between extra dimensions and selection vector modulation (<xref rid="fig6" ref-type="fig">Figure 6C</xref>), and eventually provided us experimentally identifiable neural dynamical signature of selection vector modulation at both the single neuron and population levels (<xref rid="fig7" ref-type="fig">Figure 7, E-G</xref>).</p>
</sec>
<sec id="s3b">
<title>Individual neural variability in higher cognition</title>
<p>One hallmark of higher cognition is individual variability, as the same higher cognition problem can be solved equally well with different strategies. Therefore, studying the neural computations underlying individual variability is no doubt of great importance (<xref ref-type="bibr" rid="c14">Hariri, 2009</xref>; <xref ref-type="bibr" rid="c31">Parasuraman &amp; Jiang, 2012</xref>; <xref ref-type="bibr" rid="c16">Keung et al., 2020</xref>; <xref ref-type="bibr" rid="c24">Nelli et al., 2023</xref>). Recent experimental advances enabled researchers to investigate this important issue in a systematic manner using delicate behavioral paradigms and large-scale recordings (<xref ref-type="bibr" rid="c28">Pagan et al., 2022</xref>). However, the computation underlying higher cognition is largely internal, requiring discovering novel neural activity patterns as internal indicators to differentiate distinct circuit mechanisms. In the example of context-dependent decision-making studied here, to differentiate selection vector modulation from input modulation, we found the PEV in extra dynamical modes is a reliable index for a wide variety of RNNs (<xref rid="fig7" ref-type="fig">Figure 7D</xref> and <xref rid="fig7_S2" ref-type="fig">Figure 7-figure supplement 2</xref>). However, cautions have be made here as we can conveniently construct counter-examples deviating from the picture depicted by this index. For instance, manually introducing additional dimensions that do not directly contribute to the computation can disrupt the index (<xref rid="fig7_S4" ref-type="fig">Figure 7-figure supplement 4A</xref> and <xref rid="fig7_S4" ref-type="fig">4B</xref>). In the extreme scenario, we can construct two models with distinct circuit mechanisms (selection vector modulation and input modulation, respectively) but having the same neural activities (<xref rid="fig7_S3" ref-type="fig">Figure 7-figure supplement 3</xref>), suggesting that any activity-based index alone would fail to make this differentiation. Then, why did the proposed index work for the trained vanilla RNNs shown in <xref rid="fig7" ref-type="fig">Figure 7D</xref>? Our lesion analysis suggests that the underlying reason is that the major variance in neural activity of vanilla RNNs learned through backpropagation is task-relevant (<xref rid="fig7_S4" ref-type="fig">Figure 7-figure supplement 4C</xref>, see Methods for details<bold>)</bold>. However, it is highly likely that task-irrelevant neural activity variance exists in higher brain regions, meaning the proposed index may not perform well in neural recordings. Therefore, our modeling work suggests that, to address the intricacy of individual variability of neural computations underlying higher cognition, integrative efforts incorporating not only large-scale neural activity recordings but also activity perturbations, neuronal connectivity knowledge and computational modeling may be inevitably required.</p>
</sec>
<sec id="s3c">
<title>Beyond context-dependent decision making</title>
<p>While we mainly focused on context-dependent decision-making task in this study, the issue of whether input or selection vector modulation prevails is not limited to the domain of decision-making. For instance, recent work (<xref ref-type="bibr" rid="c8">Chen et al., 2024</xref>) demonstrated that during sequence working memory control (<xref ref-type="bibr" rid="c7">Botvinick &amp; Watanabe, 2007</xref>; <xref ref-type="bibr" rid="c44">Xie et al., 2022</xref>), sensory inputs presented at different ordinal ranks first entered into a common sensory subspace and then were routed to the corresponding rank-specific working memory subspaces in monkey frontal cortex. Here, similar to the decision-making case (<xref rid="fig1" ref-type="fig">Figure 1C</xref>), the same issue arises: where is the input information selected by the context (here, the ordinal rank)? Can the presence of a common sensory subspace (similar to the presence of location information in both relevant and irrelevant contexts in <xref rid="fig1" ref-type="fig">Figure 1C</xref>) preclude the input modulation? The pathway-based understanding of input and selection vector modulation gained from CDM in this study may be transferable to address these similar issues.</p>
</sec>
<sec id="s3d">
<title>The role of transient dynamics in extra-dimensions in context-dependent computation</title>
<p>In this study, we linked the selection vector modulation with transient dynamics (<xref ref-type="bibr" rid="c1">Aoi et al., 2020</xref>; <xref ref-type="bibr" rid="c38">Soldado-Magraner et al., 2023</xref>) in extra-dimensions. While the transient dynamics in extra-dimensions is not necessary in context-dependent decision-making here (<xref ref-type="bibr" rid="c11">Dubreuil et al., 2022</xref>; <xref rid="fig2" ref-type="fig">Figure 2</xref>), more complex context-dependent computation may require its presence. For example, recent work (<xref ref-type="bibr" rid="c42">Tian et al., 2024</xref>) found that transient dynamics in extra subspaces is required to perform the switch operation (i.e., exchanging information in subspace 1 with information in subspace 2). Understanding how transient dynamics in extra-dimensions contribute to complex context-dependent computation warrants further systematic investigation.</p>
<p>In summary, through low-rank neural network modeling, our work provided a parsimonious mechanistic account for how information can be selected along different pathways, making significant contributions towards understanding the intriguing selection mechanisms in context-dependent computation.</p>
</sec>
</sec>
</body>
<back>
<ref-list>
<ref id="c1"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Aoi</surname>, <given-names>M. C.</given-names></string-name>, <string-name><surname>Mante</surname>, <given-names>V.</given-names></string-name>, &amp; <string-name><surname>Pillow</surname>, <given-names>J. W.</given-names></string-name></person-group> (<year>2020</year>). <article-title>Prefrontal cortex exhibits multidimensional dynamic encoding during decision-making</article-title>. <source>Nature Neuroscience</source>, <volume>23</volume>(<issue>11</issue>), <fpage>1410</fpage>–<lpage>1420</lpage>. <pub-id pub-id-type="doi">10.1038/s41593-020-0696-5</pub-id></mixed-citation></ref>
<ref id="c2"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Badre</surname>, <given-names>D.</given-names></string-name>, <string-name><surname>Bhandari</surname>, <given-names>A.</given-names></string-name>, <string-name><surname>Keglovits</surname>, <given-names>H.</given-names></string-name>, &amp; <string-name><surname>Kikumoto</surname>, <given-names>A.</given-names></string-name></person-group> (<year>2021</year>). <article-title>The dimensionality of neural representations for control</article-title>. <source>Current Opinion in Behavioral Sciences</source>, <volume>38</volume>, <fpage>20</fpage>–<lpage>28</lpage>. <pub-id pub-id-type="doi">10.1016/j.cobeha.2020.07.002</pub-id></mixed-citation></ref>
<ref id="c3"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Barbosa</surname>, <given-names>J.</given-names></string-name>, <string-name><surname>Proville</surname>, <given-names>R.</given-names></string-name>, <string-name><surname>Rodgers</surname>, <given-names>C. C.</given-names></string-name>, <string-name><surname>DeWeese</surname>, <given-names>M. R.</given-names></string-name>, <string-name><surname>Ostojic</surname>, <given-names>S.</given-names></string-name>, &amp; <string-name><surname>Boubenec</surname>, <given-names>Y.</given-names></string-name></person-group> (<year>2023</year>). <article-title>Early selection of task-relevant features through population gating</article-title>. <source>Nature Communications</source>, <volume>14</volume>(<issue>1</issue>), <fpage>6837</fpage>. <pub-id pub-id-type="doi">10.1038/s41467-023-42519-5</pub-id></mixed-citation></ref>
<ref id="c4"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Beiran</surname>, <given-names>M.</given-names></string-name>, <string-name><surname>Dubreuil</surname>, <given-names>A.</given-names></string-name>, <string-name><surname>Valente</surname>, <given-names>A.</given-names></string-name>, <string-name><surname>Mastrogiuseppe</surname>, <given-names>F.</given-names></string-name>, &amp; <string-name><surname>Ostojic</surname>, <given-names>S.</given-names></string-name></person-group> (<year>2021</year>). <article-title>Shaping Dynamics With Multiple Populations in Low-Rank Recurrent Networks</article-title>. <source>Neural Computation</source>, <volume>33</volume>(<issue>6</issue>), <fpage>1572</fpage>–<lpage>1615</lpage>. <pub-id pub-id-type="doi">10.1162/neco_a_01381</pub-id></mixed-citation></ref>
<ref id="c5"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Beiran</surname>, <given-names>M.</given-names></string-name>, <string-name><surname>Meirhaeghe</surname>, <given-names>N.</given-names></string-name>, <string-name><surname>Sohn</surname>, <given-names>H.</given-names></string-name>, <string-name><surname>Jazayeri</surname>, <given-names>M.</given-names></string-name>, &amp; <string-name><surname>Ostojic</surname>, <given-names>S.</given-names></string-name></person-group> (<year>2023</year>). <article-title>Parametric control of flexible timing through low-dimensional neural manifolds</article-title>. <source>Neuron</source>, <volume>111</volume>(<issue>5</issue>), <fpage>739</fpage>-<lpage>753.e8</lpage>. <pub-id pub-id-type="doi">10.1016/j.neuron.2022.12.016</pub-id></mixed-citation></ref>
<ref id="c6"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Bernardi</surname>, <given-names>S.</given-names></string-name>, <string-name><surname>Benna</surname>, <given-names>M. K.</given-names></string-name>, <string-name><surname>Rigotti</surname>, <given-names>M.</given-names></string-name>, <string-name><surname>Munuera</surname>, <given-names>J.</given-names></string-name>, <string-name><surname>Fusi</surname>, <given-names>S.</given-names></string-name>, &amp; <string-name><surname>Salzman</surname>, <given-names>C. D.</given-names></string-name></person-group> (<year>2020</year>). <article-title>The Geometry of Abstraction in the Hippocampus and Prefrontal Cortex</article-title>. <source>Cell</source>, <volume>183</volume>(<issue>4</issue>), <fpage>954</fpage>-<lpage>967.e21</lpage>. <pub-id pub-id-type="doi">10.1016/j.cell.2020.09.031</pub-id></mixed-citation></ref>
<ref id="c7"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Botvinick</surname>, <given-names>M.</given-names></string-name>, &amp; <string-name><surname>Watanabe</surname>, <given-names>T.</given-names></string-name></person-group> (<year>2007</year>). <article-title>From Numerosity to Ordinal Rank: A Gain-Field Model of Serial Order Representation in Cortical Working Memory</article-title>. <source>The Journal of Neuroscience</source>, <volume>27</volume>(<issue>32</issue>), <fpage>8636</fpage>–<lpage>8642</lpage>. <pub-id pub-id-type="doi">10.1523/JNEUROSCI.2110-07.2007</pub-id></mixed-citation></ref>
<ref id="c8"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Chen</surname>, <given-names>J.</given-names></string-name>, <string-name><surname>Zhang</surname>, <given-names>C.</given-names></string-name>, <string-name><surname>Hu</surname>, <given-names>P.</given-names></string-name>, <string-name><surname>Min</surname>, <given-names>B.</given-names></string-name>, &amp; <string-name><surname>Wang</surname>, <given-names>L.</given-names></string-name></person-group> (<year>2024</year>). <article-title>Flexible control of sequence working memory in the macaque frontal cortex</article-title>. <source>Neuron</source>, <volume>112</volume>, <fpage>1</fpage>–<lpage>13</lpage>. <pub-id pub-id-type="doi">10.1016/j.neuron.2024.07.024</pub-id></mixed-citation></ref>
<ref id="c9"><mixed-citation publication-type="book"><person-group person-group-type="author"><string-name><surname>Cohen</surname>, <given-names>J. D.</given-names></string-name></person-group> (<year>2017</year>). <chapter-title>Cognitive Control: Core Constructs and Current Considerations</chapter-title>. In <person-group person-group-type="editor"><string-name><given-names>T.</given-names> <surname>Egner</surname></string-name></person-group> (Ed.), <source>The Wiley Handbook of Cognitive Control</source> (1st ed., pp. <fpage>1</fpage>–<lpage>28</lpage>). <publisher-name>Wiley</publisher-name>. <pub-id pub-id-type="doi">10.1002/9781118920497.ch1</pub-id></mixed-citation></ref>
<ref id="c10"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Desimone</surname>, <given-names>R.</given-names></string-name>, &amp; <string-name><surname>Duncan</surname>, <given-names>J.</given-names></string-name></person-group> (<year>1995</year>). <article-title>Neural mechanisms of selective visual attention</article-title>. <source>Annual Review of Neuroscience</source>, <volume>18</volume>, <fpage>193</fpage>–<lpage>222</lpage>. <pub-id pub-id-type="doi">10.1146/annurev.ne.18.030195.001205</pub-id></mixed-citation></ref>
<ref id="c11"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Dubreuil</surname>, <given-names>A.</given-names></string-name>, <string-name><surname>Valente</surname>, <given-names>A.</given-names></string-name>, <string-name><surname>Beiran</surname>, <given-names>M.</given-names></string-name>, <string-name><surname>Mastrogiuseppe</surname>, <given-names>F.</given-names></string-name>, &amp; <string-name><surname>Ostojic</surname>, <given-names>S.</given-names></string-name></person-group> (<year>2022</year>). <article-title>The role of population structure in computations through neural dynamics</article-title>. <source>Nature Neuroscience</source>, <volume>25</volume>(<issue>6</issue>), <fpage>783</fpage>–<lpage>794</lpage>. <pub-id pub-id-type="doi">10.1038/s41593-022-01088-4</pub-id></mixed-citation></ref>
<ref id="c12"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Flesch</surname>, <given-names>T.</given-names></string-name>, <string-name><surname>Juechems</surname>, <given-names>K.</given-names></string-name>, <string-name><surname>Dumbalska</surname>, <given-names>T.</given-names></string-name>, <string-name><surname>Saxe</surname>, <given-names>A.</given-names></string-name>, &amp; <string-name><surname>Summerfield</surname>, <given-names>C.</given-names></string-name></person-group> (<year>2022</year>). <article-title>Orthogonal representations for robust context-dependent task performance in brains and neural networks</article-title>. <source>Neuron</source>, <volume>110</volume>(<issue>7</issue>), <fpage>1258</fpage>-<lpage>1270.e11</lpage>. <pub-id pub-id-type="doi">10.1016/j.neuron.2022.01.005</pub-id></mixed-citation></ref>
<ref id="c13"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Fusi</surname>, <given-names>S.</given-names></string-name>, <string-name><surname>Miller</surname>, <given-names>E. K.</given-names></string-name>, &amp; <string-name><surname>Rigotti</surname>, <given-names>M.</given-names></string-name></person-group> (<year>2016</year>). <article-title>Why neurons mix: High dimensionality for higher cognition</article-title>. <source>Current Opinion in Neurobiology</source>, <volume>37</volume>, <fpage>66</fpage>–<lpage>74</lpage>. <pub-id pub-id-type="doi">10.1016/j.conb.2016.01.010</pub-id></mixed-citation></ref>
<ref id="c14"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Hariri</surname>, <given-names>A. R.</given-names></string-name></person-group> (<year>2009</year>). <article-title>The Neurobiology of Individual Differences in Complex Behavioral Traits</article-title>. <source>Annual Review of Neuroscience</source>, <volume>32</volume>, <fpage>225</fpage>–<lpage>247</lpage>. <pub-id pub-id-type="doi">10.1146/annurev.neuro.051508.135335</pub-id></mixed-citation></ref>
<ref id="c15"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Kadmon</surname>, <given-names>J.</given-names></string-name>, <string-name><surname>Timcheck</surname>, <given-names>J.</given-names></string-name>, &amp; <string-name><surname>Ganguli</surname>, <given-names>S.</given-names></string-name></person-group> (<year>2020</year>). <article-title>Predictive coding in balanced neural networks with noise, chaos and delays</article-title>. <source>Advances in Neural Information Processing Systems</source>, <volume>33</volume>, <fpage>16677</fpage>– <lpage>16688</lpage>. <ext-link ext-link-type="uri" xlink:href="https://proceedings.neurips.cc/paper/2020/hash/c236337b043acf93c7df397fdb9082b3-Abstract.html">https://proceedings.neurips.cc/paper/2020/hash/c236337b043acf93c7df397fdb9082b3-Abstract.html</ext-link></mixed-citation></ref>
<ref id="c16"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Keung</surname>, <given-names>W.</given-names></string-name>, <string-name><surname>Hagen</surname>, <given-names>T. A.</given-names></string-name>, &amp; <string-name><surname>Wilson</surname>, <given-names>R. C.</given-names></string-name></person-group> (<year>2020</year>). <article-title>A divisive model of evidence accumulation explains uneven weighting of evidence over time</article-title>. <source>Nature Communications</source>, <volume>11</volume>(<issue>1</issue>), <fpage>2160</fpage>. <pub-id pub-id-type="doi">10.1038/s41467-020-15630-0</pub-id></mixed-citation></ref>
<ref id="c17"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Landau</surname>, <given-names>I. D.</given-names></string-name>, &amp; <string-name><surname>Sompolinsky</surname>, <given-names>H.</given-names></string-name></person-group> (<year>2018</year>). <article-title>Coherent chaos in a recurrent neural network with structured connectivity</article-title>. <source>PLOS Computational Biology</source>, <volume>14</volume>(<issue>12</issue>), <fpage>e1006309</fpage>. <pub-id pub-id-type="doi">10.1371/journal.pcbi.1006309</pub-id></mixed-citation></ref>
<ref id="c18"><mixed-citation publication-type="web"><person-group person-group-type="author"><string-name><surname>Maheswaranathan</surname>, <given-names>N.</given-names></string-name>, &amp; <string-name><surname>Sussillo</surname>, <given-names>D.</given-names></string-name></person-group> (<year>2020</year>). <article-title>How recurrent networks implement contextual processing in sentiment analysis</article-title>. <source>Proceedings of the 37th International Conference on Machine Learning</source>, <fpage>6608</fpage>–<lpage>6619</lpage>. <ext-link ext-link-type="uri" xlink:href="https://proceedings.mlr.press/v119/maheswaranathan20a.html">https://proceedings.mlr.press/v119/maheswaranathan20a.html</ext-link></mixed-citation></ref>
<ref id="c19"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Maheswaranathan</surname>, <given-names>N.</given-names></string-name>, <string-name><surname>Williams</surname>, <given-names>A.</given-names></string-name>, <string-name><surname>Golub</surname>, <given-names>M.</given-names></string-name>, <string-name><surname>Ganguli</surname>, <given-names>S.</given-names></string-name>, &amp; <string-name><surname>Sussillo</surname>, <given-names>D.</given-names></string-name></person-group> (<year>2019</year>). <article-title>Reverse engineering recurrent networks for sentiment classification reveals line attractor dynamics</article-title>. <source>Advances in Neural Information Processing Systems</source>, <volume>32</volume>.<ext-link ext-link-type="uri" xlink:href="https://proceedings.neurips.cc/paper_files/paper/2019/hash/d921c3c762b1522c475ac8fc0811bb0f-Abstract.html">https://proceedings.neurips.cc/paper_files/paper/2019/hash/d921c3c762b1522c475ac8fc0811bb0f-Abstract.html</ext-link></mixed-citation></ref>
<ref id="c20"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Mante</surname>, <given-names>V.</given-names></string-name>, <string-name><surname>Sussillo</surname>, <given-names>D.</given-names></string-name>, <string-name><surname>Shenoy</surname>, <given-names>K. V.</given-names></string-name>, &amp; <string-name><surname>Newsome</surname>, <given-names>W. T.</given-names></string-name></person-group> (<year>2013</year>). <article-title>Context-dependent computation by recurrent dynamics in prefrontal cortex</article-title>. <source>Nature</source>, <volume>503</volume>(<issue>7474</issue>), <fpage>78</fpage>–<lpage>84</lpage>. <pub-id pub-id-type="doi">10.1038/nature12742</pub-id></mixed-citation></ref>
<ref id="c21"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Mastrogiuseppe</surname>, <given-names>F.</given-names></string-name>, &amp; <string-name><surname>Ostojic</surname>, <given-names>S.</given-names></string-name></person-group> (<year>2018</year>). <article-title>Linking Connectivity, Dynamics, and Computations in Low-Rank Recurrent Neural Networks</article-title>. <source>Neuron</source>, <volume>99</volume>(<issue>3</issue>), <fpage>609</fpage>-<lpage>623.e29</lpage>. <pub-id pub-id-type="doi">10.1016/j.neuron.2018.07.003</pub-id></mixed-citation></ref>
<ref id="c22"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Miller</surname>, <given-names>E. K.</given-names></string-name>, &amp; <string-name><surname>Cohen</surname>, <given-names>J. D.</given-names></string-name></person-group> (<year>2001</year>). <article-title>An Integrative Theory of Prefrontal Cortex Function</article-title>. <source>Annual Review of Neuroscience</source>, <volume>24</volume>(<issue>1</issue>), <fpage>167</fpage>–<lpage>202</lpage>. <pub-id pub-id-type="doi">10.1146/annurev.neuro.24.1.167</pub-id></mixed-citation></ref>
<ref id="c23"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Nair</surname>, <given-names>A.</given-names></string-name>, <string-name><surname>Karigo</surname>, <given-names>T.</given-names></string-name>, <string-name><surname>Yang</surname>, <given-names>B.</given-names></string-name>, <string-name><surname>Ganguli</surname>, <given-names>S.</given-names></string-name>, <string-name><surname>Schnitzer</surname>, <given-names>M. J.</given-names></string-name>, <string-name><surname>Linderman</surname>, <given-names>S. W.</given-names></string-name>, <string-name><surname>Anderson</surname>, <given-names>D. J.</given-names></string-name>, &amp; <string-name><surname>Kennedy</surname>, <given-names>A.</given-names></string-name></person-group> (<year>2023</year>). <article-title>An approximate line attractor in the hypothalamus encodes an aggressive state</article-title>. <source>Cell</source>, <volume>186</volume>(<issue>1</issue>), <fpage>178</fpage>-<lpage>193.e15</lpage>. <pub-id pub-id-type="doi">10.1016/j.cell.2022.11.027</pub-id></mixed-citation></ref>
<ref id="c24"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Nelli</surname>, <given-names>S.</given-names></string-name>, <string-name><surname>Braun</surname>, <given-names>L.</given-names></string-name>, <string-name><surname>Dumbalska</surname>, <given-names>T.</given-names></string-name>, <string-name><surname>Saxe</surname>, <given-names>A.</given-names></string-name>, &amp; <string-name><surname>Summerfield</surname>, <given-names>C.</given-names></string-name></person-group> (<year>2023</year>). <article-title>Neural knowledge assembly in humans and neural networks</article-title>. <source>Neuron</source>, <volume>111</volume>(<issue>9</issue>), <fpage>1504</fpage>-<lpage>1516.e9</lpage>. <pub-id pub-id-type="doi">10.1016/j.neuron.2023.02.014</pub-id></mixed-citation></ref>
<ref id="c25"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Noudoost</surname>, <given-names>B.</given-names></string-name>, <string-name><surname>Chang</surname>, <given-names>M. H.</given-names></string-name>, <string-name><surname>Steinmetz</surname>, <given-names>N. A.</given-names></string-name>, &amp; <string-name><surname>Moore</surname>, <given-names>T.</given-names></string-name></person-group> (<year>2010</year>). <article-title>Top-down control of visual attention</article-title>. <source>Current Opinion in Neurobiology</source>, <volume>20</volume>(<issue>2</issue>), <fpage>183</fpage>–<lpage>190</lpage>. <pub-id pub-id-type="doi">10.1016/j.conb.2010.02.003</pub-id></mixed-citation></ref>
<ref id="c26"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Okazawa</surname>, <given-names>G.</given-names></string-name>, &amp; <string-name><surname>Kiani</surname>, <given-names>R.</given-names></string-name></person-group> (<year>2023</year>). <article-title>Neural Mechanisms That Make Perceptual Decisions Flexible</article-title>. <source>Annual Review of Physiology</source>, <volume>85</volume>(<issue>1</issue>), <fpage>191</fpage>–<lpage>215</lpage>. <pub-id pub-id-type="doi">10.1146/annurev-physiol-031722-024731</pub-id></mixed-citation></ref>
<ref id="c27"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Ostojic</surname>, <given-names>S.</given-names></string-name>, &amp; <string-name><surname>Fusi</surname>, <given-names>S.</given-names></string-name></person-group> (<year>2024</year>). <article-title>Computational role of structure in neural activity and connectivity</article-title>. <source>Trends in Cognitive Sciences</source>, <volume>28</volume>(<issue>7</issue>), <fpage>677</fpage>–<lpage>690</lpage>. <pub-id pub-id-type="doi">10.1016/j.tics.2024.03.003</pub-id></mixed-citation></ref>
<ref id="c28"><mixed-citation publication-type="preprint"><person-group person-group-type="author"><string-name><surname>Pagan</surname>, <given-names>M.</given-names></string-name>, <string-name><surname>Tang</surname>, <given-names>V. D.</given-names></string-name>, <string-name><surname>Aoi</surname>, <given-names>M. C.</given-names></string-name>, <string-name><surname>Pillow</surname>, <given-names>J. W.</given-names></string-name>, <string-name><surname>Mante</surname>, <given-names>V.</given-names></string-name>, <string-name><surname>Sussillo</surname>, <given-names>D.</given-names></string-name>, &amp; <string-name><surname>Brody</surname>, <given-names>C. D.</given-names></string-name></person-group> (<year>2022</year>). <article-title>A new theoretical framework jointly explains behavioral and neural variability across subjects performing flexible decision-making</article-title>. <source>bioRxiv</source>. <pub-id pub-id-type="doi">10.1101/2022.11.28.518207</pub-id></mixed-citation></ref>
<ref id="c29"><mixed-citation publication-type="preprint"><person-group person-group-type="author"><string-name><surname>Pagan</surname>, <given-names>M.</given-names></string-name>, <string-name><surname>Valente</surname>, <given-names>A.</given-names></string-name>, <string-name><surname>Ostojic</surname>, <given-names>S.</given-names></string-name>, &amp; <string-name><surname>Brody</surname>, <given-names>C. D.</given-names></string-name></person-group> (<year>2023</year>). <article-title>Brief technical note on linearizing recurrent neural networks (RNNs) before vs after the pointwise nonlinearity</article-title> (<pub-id pub-id-type="arxiv">2309.04030</pub-id>). <source>arXiv</source>. <ext-link ext-link-type="uri" xlink:href="http://arxiv.org/abs/2309.04030">http://arxiv.org/abs/2309.04030</ext-link></mixed-citation></ref>
<ref id="c30"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Pagan</surname>, <given-names>M.</given-names></string-name>, <string-name><surname>Tang</surname>, <given-names>V. D.</given-names></string-name>, <string-name><surname>Aoi</surname>, <given-names>M. C.</given-names></string-name>, <string-name><surname>Pillow</surname>, <given-names>J. W.</given-names></string-name>, <string-name><surname>Mante</surname>, <given-names>V.</given-names></string-name>, <string-name><surname>Sussillo</surname>, <given-names>D.</given-names></string-name>, &amp; <string-name><surname>Brody</surname>, <given-names>C. D.</given-names></string-name></person-group> (<year>2024</year>). <article-title>Individual variability of neural computations underlying flexible decisions</article-title>. <source>Nature</source>. <pub-id pub-id-type="doi">10.1038/s41586-024-08433-6</pub-id></mixed-citation></ref>
<ref id="c31"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Parasuraman</surname>, <given-names>R.</given-names></string-name>, &amp; <string-name><surname>Jiang</surname>, <given-names>Y.</given-names></string-name></person-group> (<year>2012</year>). <article-title>Individual differences in cognition, affect, and performance: Behavioral, neuroimaging, and molecular genetic approaches</article-title>. <source>NeuroImage</source>, <volume>59</volume>(<issue>1</issue>), <fpage>70</fpage>–<lpage>82</lpage>. <pub-id pub-id-type="doi">10.1016/j.neuroimage.2011.04.040</pub-id></mixed-citation></ref>
<ref id="c32"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Roy</surname>, <given-names>J. E.</given-names></string-name>, <string-name><surname>Riesenhuber</surname>, <given-names>M.</given-names></string-name>, <string-name><surname>Poggio</surname>, <given-names>T.</given-names></string-name>, &amp; <string-name><surname>Miller</surname>, <given-names>E. K.</given-names></string-name></person-group> (<year>2010</year>). <article-title>Prefrontal Cortex Activity during Flexible Categorization</article-title>. <source>Journal of Neuroscience</source>, <volume>30</volume>(<issue>25</issue>), <fpage>8519</fpage>–<lpage>8528</lpage>. <pub-id pub-id-type="doi">10.1523/JNEUROSCI.4837-09.2010</pub-id></mixed-citation></ref>
<ref id="c33"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Rudelson</surname>, <given-names>M.</given-names></string-name>, &amp; <string-name><surname>Vershynin</surname>, <given-names>R.</given-names></string-name></person-group> (<year>2007</year>). <article-title>Sampling from large matrices: An approach through geometric functional analysis</article-title>. <source>Journal of the ACM</source>, <volume>54</volume>(<issue>4</issue>), <fpage>21</fpage>. <pub-id pub-id-type="doi">10.1145/1255443.1255449</pub-id></mixed-citation></ref>
<ref id="c34"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Saez</surname>, <given-names>A.</given-names></string-name>, <string-name><surname>Rigotti</surname>, <given-names>M.</given-names></string-name>, <string-name><surname>Ostojic</surname>, <given-names>S.</given-names></string-name>, <string-name><surname>Fusi</surname>, <given-names>S.</given-names></string-name>, &amp; <string-name><surname>Salzman</surname>, <given-names>C. D.</given-names></string-name></person-group> (<year>2015</year>). <article-title>Abstract Context Representations in Primate Amygdala and Prefrontal Cortex</article-title>. <source>Neuron</source>, <volume>87</volume>(<issue>4</issue>), <fpage>869</fpage>–<lpage>881</lpage>. <pub-id pub-id-type="doi">10.1016/j.neuron.2015.07.024</pub-id></mixed-citation></ref>
<ref id="c35"><mixed-citation publication-type="preprint"><person-group person-group-type="author"><string-name><surname>Sanyal</surname>, <given-names>A.</given-names></string-name>, <string-name><surname>Dokania</surname>, <given-names>P. K.</given-names></string-name>, &amp; <string-name><surname>Torr</surname>, <given-names>P. H.</given-names></string-name></person-group> (<year>2020</year>). <article-title>Stable Rank Normalization For Improved Gen-eralization in Neural Networks and Gans</article-title>. <source>arXiv</source>. <pub-id pub-id-type="doi">10.48550/arXiv.1906.04659</pub-id></mixed-citation></ref>
<ref id="c36"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Schuessler</surname>, <given-names>F.</given-names></string-name>, <string-name><surname>Dubreuil</surname>, <given-names>A.</given-names></string-name>, <string-name><surname>Mastrogiuseppe</surname>, <given-names>F.</given-names></string-name>, <string-name><surname>Ostojic</surname>, <given-names>S.</given-names></string-name>, &amp; <string-name><surname>Barak</surname>, <given-names>O.</given-names></string-name></person-group> (<year>2020</year>). <article-title>Dynamics of random recurrent networks with correlated low-rank structure</article-title>. <source>Physical Review Research</source>, <volume>2</volume>(<issue>1</issue>), <fpage>013111</fpage>. <pub-id pub-id-type="doi">10.1103/PhysRevResearch.2.013111</pub-id></mixed-citation></ref>
<ref id="c37"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Siegel</surname>, <given-names>M.</given-names></string-name>, <string-name><surname>Buschman</surname>, <given-names>T. J.</given-names></string-name>, &amp; <string-name><surname>Miller</surname>, <given-names>E. K.</given-names></string-name></person-group> (<year>2015</year>). <article-title>Cortical information flow during flexible sensorimotor decisions</article-title>. <source>Science (New York, N.Y.)</source>, <volume>348</volume>(<issue>6241</issue>), <fpage>1352</fpage>–<lpage>1355</lpage>. <pub-id pub-id-type="doi">10.1126/science.aab0551</pub-id></mixed-citation></ref>
<ref id="c38"><mixed-citation publication-type="preprint"><person-group person-group-type="author"><string-name><surname>Soldado-Magraner</surname>, <given-names>J.</given-names></string-name>, <string-name><surname>Mante</surname>, <given-names>V.</given-names></string-name>, &amp; <string-name><surname>Sahani</surname>, <given-names>M.</given-names></string-name></person-group> (<year>2023</year>). <article-title>Inferring context-dependent computations through linear approximations of prefrontal cortex dynamics</article-title>. <source>bioRxiv</source>. <pub-id pub-id-type="doi">10.1101/2023.02.06.527389</pub-id></mixed-citation></ref>
<ref id="c39"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Song</surname>, <given-names>H. F.</given-names></string-name>, <string-name><surname>Yang</surname>, <given-names>G. R.</given-names></string-name>, &amp; <string-name><surname>Wang</surname>, <given-names>X.-J.</given-names></string-name></person-group> (<year>2016</year>). <article-title>Training Excitatory-Inhibitory Recurrent Neural Networks for Cognitive Tasks: A Simple and Flexible Framework</article-title>. <source>PLOS Computational Biology</source>, <volume>12</volume>(<issue>2</issue>), <fpage>e1004792</fpage>. <pub-id pub-id-type="doi">10.1371/journal.pcbi.1004792</pub-id></mixed-citation></ref>
<ref id="c40"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Sussillo</surname>, <given-names>D.</given-names></string-name>, &amp; <string-name><surname>Barak</surname>, <given-names>O.</given-names></string-name></person-group> (<year>2013</year>). <article-title>Opening the Black Box: Low-Dimensional Dynamics in High-Dimensional Recurrent Neural Networks</article-title>. <source>Neural Computation</source>, <volume>25</volume>(<issue>3</issue>), <fpage>626</fpage>–<lpage>649</lpage>. <pub-id pub-id-type="doi">10.1162/NECO_a_00409</pub-id></mixed-citation></ref>
<ref id="c41"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Takagi</surname>, <given-names>Y.</given-names></string-name>, <string-name><surname>Hunt</surname>, <given-names>L. T.</given-names></string-name>, <string-name><surname>Woolrich</surname>, <given-names>M. W.</given-names></string-name>, <string-name><surname>Behrens</surname>, <given-names>T. E.</given-names></string-name>, &amp; <string-name><surname>Klein-Flügge</surname>, <given-names>M. C.</given-names></string-name></person-group> (<year>2021</year>). <article-title>Adapting non-invasive human recordings along multiple task-axes shows unfolding of spontaneous and over-trained choice</article-title>. <source>eLife</source>, <volume>10</volume>, <elocation-id>e60988</elocation-id>. <pub-id pub-id-type="doi">10.7554/eLife.60988</pub-id></mixed-citation></ref>
<ref id="c42"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Tian</surname>, <given-names>Z.</given-names></string-name>, <string-name><surname>Chen</surname>, <given-names>J.</given-names></string-name>, <string-name><surname>Zhang</surname>, <given-names>C.</given-names></string-name>, <string-name><surname>Min</surname>, <given-names>B.</given-names></string-name>, <string-name><surname>Bo</surname>, <given-names>X.</given-names></string-name>, &amp; <string-name><surname>Wang</surname>, <given-names>L.</given-names></string-name></person-group> (<year>2024</year>). <article-title>Mental Programming of Spatial Sequences in Working Memory in Macaque Frontal Cortex</article-title>. <source>Science</source>, <comment>in press</comment></mixed-citation></ref>
<ref id="c43"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Valente</surname>, <given-names>A.</given-names></string-name>, <string-name><surname>Ostojic</surname>, <given-names>S.</given-names></string-name>, &amp; <string-name><surname>Pillow</surname>, <given-names>J. W.</given-names></string-name></person-group> (<year>2022</year>). <article-title>Probing the Relationship Between Latent Linear Dynamical Systems and Low-Rank Recurrent Neural Network Models</article-title>. <source>Neural Computation</source>, <volume>34</volume>(<issue>9</issue>), <fpage>1871</fpage>–<lpage>1892</lpage>. <pub-id pub-id-type="doi">10.1162/neco_a_01522</pub-id></mixed-citation></ref>
<ref id="c44"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Xie</surname>, <given-names>Y.</given-names></string-name>, <string-name><surname>Hu</surname>, <given-names>P.</given-names></string-name>, <string-name><surname>Li</surname>, <given-names>J.</given-names></string-name>, <string-name><surname>Chen</surname>, <given-names>J.</given-names></string-name>, <string-name><surname>Song</surname>, <given-names>W.</given-names></string-name>, <string-name><surname>Wang</surname>, <given-names>X.-J.</given-names></string-name>, <string-name><surname>Yang</surname>, <given-names>T.</given-names></string-name>, <string-name><surname>Dehaene</surname>, <given-names>S.</given-names></string-name>, <string-name><surname>Tang</surname>, <given-names>S.</given-names></string-name>, <string-name><surname>Min</surname>, <given-names>B.</given-names></string-name>, &amp; <string-name><surname>Wang</surname>, <given-names>L.</given-names></string-name></person-group> (<year>2022</year>). <article-title>Geometry of sequence working memory in macaque prefrontal cortex</article-title>. <source>Science</source>, <volume>375</volume>(<issue>6581</issue>), <fpage>632</fpage>–<lpage>639</lpage>. <pub-id pub-id-type="doi">10.1126/science.abm0204</pub-id></mixed-citation></ref>
<ref id="c45"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Yang</surname>, <given-names>G. R.</given-names></string-name>, &amp; <string-name><surname>Wang</surname>, <given-names>X.-J.</given-names></string-name></person-group> (<year>2020</year>). <article-title>Artificial Neural Networks for Neuroscientists: A Primer</article-title>. <source>Neuron</source>, <volume>107</volume>(<issue>6</issue>), <fpage>1048</fpage>–<lpage>1070</lpage>. <pub-id pub-id-type="doi">10.1016/j.neuron.2020.09.005</pub-id></mixed-citation></ref>
</ref-list>
<app-group>
<app id="app1">
<title>Appendix</title>
<sec id="s4">
<title>The general form of RNNs</title>
<p>We investigated networks of <italic>N</italic> neurons with <italic>S</italic> input channels, described by the following temporal evolution equation
<disp-formula id="eqn1a">
<graphic xlink:href="610896v2_eqn1a.gif" mimetype="image" mime-subtype="gif"/>
</disp-formula>
</p>
<p>In this equation, <italic>x</italic><sub><italic>i</italic></sub>(<italic>t</italic>) represents the activation of neuron <italic>i</italic> at time <italic>t</italic>, τ denotes the characteristic time constant of a single neuron, and <italic>ϕ</italic> is a nonlinear activation function. Unless otherwise specified, we use the tanh function as the activation function. The coefficient <italic>J</italic><sub><italic>ij</italic></sub> represents the connectivity weight from neuron <italic>j</italic> to neuron <italic>i</italic>. The input <italic>u</italic><sub><italic>s</italic></sub>(<italic>t</italic>) corresponds to the <italic>s</italic>-th input channel at time <italic>t</italic>, with feedforward weight <italic>I</italic><sub><italic>si</italic></sub> to neuron <italic>i</italic>, and ϵ<sub><italic>i</italic></sub>(<italic>t</italic>) represents white noise at time <italic>t</italic>. The network’s output is obtained from the neuron’s activity <italic>ϕ</italic>(<italic>x</italic>) through a linear projection:
<disp-formula id="eqn2a">
<graphic xlink:href="610896v2_eqn2a.gif" mimetype="image" mime-subtype="gif"/>
</disp-formula>
</p>
<p>The connectivity matrix <italic>J</italic>, specified as <italic>J</italic> = {<italic>J</italic><sub><italic>ij</italic></sub>}, <italic>i</italic> = 1, …, <italic>N, j</italic> = 1, …, <italic>N</italic>, can be a low-rank or a full-rank matrix. In the low-rank case, <italic>J</italic> is restricted to a low-rank matrix <inline-formula><inline-graphic xlink:href="610896v2_inline40.gif" mimetype="image" mime-subtype="gif"/></inline-formula>, in which <bold><italic>m</italic></bold><sub><italic>r</italic></sub> is the <italic>r</italic>-th <italic>output vector</italic>, and <bold><italic>n</italic></bold><sub><italic>r</italic></sub> is the <italic>r</italic>-th <italic>input-selection vector</italic>, with each element of <bold><italic>m</italic></bold><sub><italic>r</italic></sub> and <bold><italic>n</italic></bold><sub><italic>r</italic></sub> considered an independent parameter (<xref ref-type="bibr" rid="c11">Dubreuil et al., 2022</xref>). In this paper, we set the time constant τ to be 100 ms, and use Euler’s method to discretize the evolution equation with a time step Δ<italic>t</italic> = 20 ms.</p>
</sec>
<sec id="s5">
<title>Task setting</title>
<p>We modeled the click-version CDM task recently investigated by (<xref ref-type="bibr" rid="c28">Pagan et al., 2022</xref>). The task involves four input channels <inline-formula><inline-graphic xlink:href="610896v2_inline41.gif" mimetype="image" mime-subtype="gif"/></inline-formula>, and <inline-formula><inline-graphic xlink:href="610896v2_inline42.gif" mimetype="image" mime-subtype="gif"/></inline-formula>, where <italic>u</italic><sub>1</sub>(<italic>t</italic>) and <italic>u</italic><sub>2</sub>(<italic>t</italic>) are stimulus inputs and <inline-formula><inline-graphic xlink:href="610896v2_inline43.gif" mimetype="image" mime-subtype="gif"/></inline-formula> and <inline-formula><inline-graphic xlink:href="610896v2_inline44.gif" mimetype="image" mime-subtype="gif"/></inline-formula> are context inputs. Initially, there is a fixation period lasting for <italic>T</italic><sub><italic>fix</italic></sub> = 200 ms. This is followed by a stimulus period of <italic>T</italic><sub><italic>sti</italic></sub> = 800 ms and then a decision period of <italic>T</italic><sub><italic>decision</italic></sub> = 20 ms.</p>
<p>For trial <italic>k</italic>, at each time step, the total number of pulse inputs (#pulse) is sampled from a Poisson distribution with a mean value of 40Δ<italic>t</italic> = 0.8. Each pulse has two properties: location and frequency. Location can be either left or right, and frequency can be either high or low. We randomly sample a pulse to be right with probability <inline-formula><inline-graphic xlink:href="610896v2_inline45.gif" mimetype="image" mime-subtype="gif"/></inline-formula> (hence left with probability <inline-formula><inline-graphic xlink:href="610896v2_inline46.gif" mimetype="image" mime-subtype="gif"/></inline-formula><inline-formula><inline-graphic xlink:href="610896v2_inline46a.gif" mimetype="image" mime-subtype="gif"/></inline-formula>) and to be high with probability <inline-formula><inline-graphic xlink:href="610896v2_inline47.gif" mimetype="image" mime-subtype="gif"/></inline-formula> (hence low with probability <inline-formula><inline-graphic xlink:href="610896v2_inline48.gif" mimetype="image" mime-subtype="gif"/></inline-formula>). The values of <inline-formula><inline-graphic xlink:href="610896v2_inline49.gif" mimetype="image" mime-subtype="gif"/></inline-formula> and <inline-formula><inline-graphic xlink:href="610896v2_inline50.gif" mimetype="image" mime-subtype="gif"/></inline-formula> are independently chosen from the set {39/40, 35/40, 25/40, 15/40, 5/40, 1/40}. The stimulus strength for the location input at trial <italic>k</italic> is defined as <inline-formula><inline-graphic xlink:href="610896v2_inline51.gif" mimetype="image" mime-subtype="gif"/></inline-formula>, and for the frequency input, it is defined as <inline-formula><inline-graphic xlink:href="610896v2_inline52.gif" mimetype="image" mime-subtype="gif"/></inline-formula>. The input <italic>u</italic><sub>1</sub>(<italic>t</italic>) represents location evidence, calculated as 0.1 times the difference between the number of right pulses and the number of left pulses (#right-#left) at time step <italic>t</italic>. The input <italic>u</italic><sub>2</sub>(<italic>t</italic>) represents frequency evidence, calculated as 0.1 times the difference between the number of high-frequency pulses and the number of low-frequency pulses (#high-#low) at time step <italic>t</italic>.</p>
<p>The context is randomly chosen to be either the location context or the frequency context. In the location context, <inline-formula><inline-graphic xlink:href="610896v2_inline53.gif" mimetype="image" mime-subtype="gif"/></inline-formula> and <inline-formula><inline-graphic xlink:href="610896v2_inline54.gif" mimetype="image" mime-subtype="gif"/></inline-formula> throughout the entire period. The target output <italic>z</italic><sub><italic>k</italic></sub> is defined as the sign of the location stimulus strength (1 if <inline-formula><inline-graphic xlink:href="610896v2_inline55.gif" mimetype="image" mime-subtype="gif"/></inline-formula>, otherwise -1). Thus, in this context, the target output <italic>z</italic><sub><italic>k</italic></sub> is independent of the frequency stimulus input. Conversely, in the frequency context, <inline-formula><inline-graphic xlink:href="610896v2_inline56.gif" mimetype="image" mime-subtype="gif"/></inline-formula> and <inline-formula><inline-graphic xlink:href="610896v2_inline57.gif" mimetype="image" mime-subtype="gif"/></inline-formula>. The target output <italic>z</italic><sub><italic>k</italic></sub> is defined as the sign of the frequency stimulus strength (1 if <inline-formula><inline-graphic xlink:href="610896v2_inline58.gif" mimetype="image" mime-subtype="gif"/></inline-formula>, otherwise -1). Thus, in this context, the target output is independent of the location stimulus input.</p>
</sec>
<sec id="s6">
<title>Linearized dynamical system analysis (<xref rid="fig1" ref-type="fig">Figure 1</xref> and <xref rid="fig7" ref-type="fig">Figure 7</xref>)</title>
<p>To uncover the computational mechanism enabling each RNN to perform context-dependent evidence accumulation, we utilize linearized dynamical system analysis to “open the black box” (<xref ref-type="bibr" rid="c20">Mante et al., 2013</xref>). The dynamical evolution of an RNN in context <italic>c</italic> is given by:
<disp-formula id="eqn3a">
<graphic xlink:href="610896v2_eqn3a.gif" mimetype="image" mime-subtype="gif"/>
</disp-formula>
where <bold><italic>r</italic></bold> = <italic>ϕ</italic>(<bold><italic>x</italic></bold>) is the neuron activity. First, we identify the slow point of each RNN in each context using an optimization method (<xref ref-type="bibr" rid="c20">Mante et al., 2013</xref>). Let <bold><italic>x</italic></bold><sup>∗</sup> be the discovered slow point, i.e., <inline-formula><inline-graphic xlink:href="610896v2_inline59.gif" mimetype="image" mime-subtype="gif"/></inline-formula> where <bold><italic>r</italic></bold><sup>∗</sup> = <italic>ϕ</italic>(<bold><italic>x</italic></bold><sup>∗</sup>). We define a diagonal matrix <italic>G</italic> = diag(<italic>ϕ</italic> ′ (<bold><italic>x</italic></bold><sup>∗</sup>)), with the <italic>i</italic>-th diagonal element representing the sensitivity of the <italic>i</italic>-th neuron at the slow point. Near the slow point, we have Δ<bold><italic>r</italic></bold> = <bold><italic>r</italic></bold> − <bold><italic>r</italic></bold><sup>∗</sup> ≈ <italic>G</italic>ϕ′(Δ<bold><italic>x</italic></bold>). Then, we can derive:
<disp-formula id="eqn4a">
<graphic xlink:href="610896v2_eqn4a.gif" mimetype="image" mime-subtype="gif"/>
</disp-formula>
</p>
<p>Thus, the dynamics of neuron activity around the slow point can be approximated by a linear dynamical system:
<disp-formula id="eqn5a">
<graphic xlink:href="610896v2_eqn5a.gif" mimetype="image" mime-subtype="gif"/>
</disp-formula>
<disp-formula id="eqn6">
<graphic xlink:href="610896v2_eqn6.gif" mimetype="image" mime-subtype="gif"/>
</disp-formula>
where <italic>E</italic> is the identity matrix, <italic>M</italic> denotes the state transition matrix of the dynamical system, and <bold><italic>Ĩ</italic></bold><sub><italic>r</italic></sub> = <italic>G</italic><bold><italic>I</italic></bold><sub><italic>r</italic></sub>, <italic>r</italic> = 1,2 are stimulus <italic>input representation directions</italic>. Similar to previous work (<xref ref-type="bibr" rid="c20">Mante et al., 2013</xref>), we find that for every network, the linear dynamical system near the slow point in each context is roughly a linear attractor. Specifically, the transition matrix <italic>M</italic> has a single eigenvalue close to zero, while all other eigenvalues have negative real parts. The right eigenvector of <italic>M</italic> associated with the eigenvalue close to zero defines the stable direction of the dynamical system, forming the line attractor <bold><italic>ρ</italic></bold> (unit norm). The left eigenvector of <italic>M</italic> associated with that eigenvalue defines the direction of the selection vector <bold><italic>s</italic></bold>. The norm of selection vector <bold><italic>s</italic></bold> is chosen such that <bold><italic>s</italic>·<italic>ρ</italic></bold> = 1. Previous work (<xref ref-type="bibr" rid="c20">Mante et al., 2013</xref>) has shown that a perturbation Δ<bold><italic>r</italic></bold><sub>0</sub> from the line attractor will eventually converge to the line attractor, with the distance from the starting point being <bold><italic>s</italic>·</bold>Δ<bold><italic>r</italic></bold><sub>0</sub>.</p>
<p>Based on linearized dynamical systems analysis, Pagan et al. recently defined <bold>input modulation</bold> and <bold>selection vector modulation</bold> (<xref ref-type="bibr" rid="c28">Pagan et al., 2022</xref>) as:
<disp-formula id="eqn7">
<graphic xlink:href="610896v2_eqn7.gif" mimetype="image" mime-subtype="gif"/>
</disp-formula>
<disp-formula id="eqn8">
<graphic xlink:href="610896v2_eqn8.gif" mimetype="image" mime-subtype="gif"/>
</disp-formula>
</p>
<p>Specifically, the input modulation and selection vector modulation for stimulus input 1 are defined as <inline-formula><inline-graphic xlink:href="610896v2_inline60.gif" mimetype="image" mime-subtype="gif"/></inline-formula> and <inline-formula><inline-graphic xlink:href="610896v2_inline61.gif" mimetype="image" mime-subtype="gif"/></inline-formula>, respectively. Similarly, the input modulation and selection vector modulation for stimulus input 2 are defined as <inline-formula><inline-graphic xlink:href="610896v2_inline62.gif" mimetype="image" mime-subtype="gif"/></inline-formula> and <inline-formula><inline-graphic xlink:href="610896v2_inline63.gif" mimetype="image" mime-subtype="gif"/></inline-formula>, respectively. Proportion for selection vector modulation (<xref rid="fig7" ref-type="fig">Figure 7D</xref> and <xref rid="fig7" ref-type="fig">7G</xref>) is defined as <inline-formula><inline-graphic xlink:href="610896v2_inline64.gif" mimetype="image" mime-subtype="gif"/></inline-formula>.</p>
</sec>
<sec id="s7">
<title>Training of rank-1 RNNs using backpropagation (<xref rid="fig2" ref-type="fig">Figure 2</xref>)</title>
<p>The rank-1 RNNs in <xref rid="fig2" ref-type="fig">Figure 2</xref> are trained using backpropagation-through-time with the PyTorch framework. These networks are trained to minimize a loss function defined as:
<disp-formula id="eqn9">
<graphic xlink:href="610896v2_eqn9.gif" mimetype="image" mime-subtype="gif"/>
</disp-formula>
</p>
<p>Here, <italic>z</italic><sub><italic>k</italic></sub> is the target output, <inline-formula><inline-graphic xlink:href="610896v2_inline65.gif" mimetype="image" mime-subtype="gif"/></inline-formula> is the network output, and the indices <italic>t</italic> and <italic>k</italic> represent time and trial, respectively. <italic>M</italic><sub><italic>t</italic></sub> is a temporal mask with value {0, 1}, where <italic>M</italic><sub><italic>t</italic></sub> is 1 only during the decision period. <bold><italic>L</italic></bold><sub><italic>reg</italic></sub> is the L2 regularization loss. For full-rank RNNs (<xref rid="fig7" ref-type="fig">Figure 7</xref>), <inline-formula><inline-graphic xlink:href="610896v2_inline66.gif" mimetype="image" mime-subtype="gif"/></inline-formula> and for low-rank RNNs, <inline-formula><inline-graphic xlink:href="610896v2_inline67.gif" mimetype="image" mime-subtype="gif"/></inline-formula>. The loss function is minimized by computing gradients with respect to all trainable parameters. We use Adam optimizer in PyTorch with the decay rates for the first and second moments set to 0.9 and 0.99, respectively, and a learning rate of 10<sup>−3</sup>. Each RNN is trained for 5000 steps with a batch size of 256 trials.</p>
<p>For <xref rid="fig2" ref-type="fig">Figure 2</xref>, we trained 100 RNNs of <italic>N</italic> = 512 neurons with the same training hyperparameters. The rank of the connectivity matrix is constrained to be rank-1, represented as <inline-formula><inline-graphic xlink:href="610896v2_inline68.gif" mimetype="image" mime-subtype="gif"/></inline-formula>. We trained the elements of the input vectors <inline-formula><inline-graphic xlink:href="610896v2_inline69.gif" mimetype="image" mime-subtype="gif"/></inline-formula>, connectivity vector <bold><italic>m</italic></bold><sub><italic>dv</italic></sub>, <bold><italic>n</italic></bold><sub><italic>dv</italic></sub>, and the readout vector <bold><italic>w</italic></bold>. All trainable parameters were initialized with random independent Gaussian weights with a mean of 0 and a variance of 1/<italic>N</italic><sup>2</sup>. The regularization coefficient <bold><italic>w</italic></bold><sub><italic>r</italic>eg</sub> is set to 10<sup>−4</sup>.</p>
</sec>
<sec id="s8">
<title>Trial-averaged analyse (<xref rid="fig2" ref-type="fig">Figure 2F</xref> and <xref rid="fig3" ref-type="fig">3F</xref>)</title>
<p>For the trial-averaged analyses shown in <xref rid="fig2" ref-type="fig">Figures 2f</xref> and <xref rid="fig3" ref-type="fig">3f</xref>, we followed a procedure similar to (<xref ref-type="bibr" rid="c20">Mante et al., 2013</xref>). Specifically, at each time point <italic>t</italic> and for each neuron <italic>i</italic>, we fit the following linear regression model to characterize how different task variables contribute to that neuron’s activity:
<disp-formula id="ueqn2">
<graphic xlink:href="610896v2_ueqn2.gif" mimetype="image" mime-subtype="gif"/>
</disp-formula>
</p>
<p>Here, <italic>choice</italic>(<italic>k</italic>), <italic>u</italic><sub>1,<italic>k</italic></sub>, <italic>u</italic><sub>2,<italic>k</italic></sub>, and <italic>context</italic>(<italic>k</italic>) represent the values of the corresponding variables on trial k. Next, for each regressor (choice, input 1, input 2, context), we pooled the resulting regression coefficients across neurons to get the time-vary regression vectors <inline-formula><inline-graphic xlink:href="610896v2_inline70.gif" mimetype="image" mime-subtype="gif"/></inline-formula>. For regressor <italic>v</italic>, we identified the time <inline-formula><inline-graphic xlink:href="610896v2_inline71.gif" mimetype="image" mime-subtype="gif"/></inline-formula>. when the regression vector <bold><italic>β</italic></bold><sub><italic>v</italic>;t</sub> has maximum norm, and get the time-independent regression vectors:
<disp-formula id="ueqn1">
<graphic xlink:href="610896v2_ueqn1.gif" mimetype="image" mime-subtype="gif"/>
</disp-formula>
</p>
<p>Next, we assembled these vectors into a matrix <inline-formula><inline-graphic xlink:href="610896v2_inline72.gif" mimetype="image" mime-subtype="gif"/></inline-formula> and using QR decomposition to get the orthogonalized regression basis <inline-formula><inline-graphic xlink:href="610896v2_inline73.gif" mimetype="image" mime-subtype="gif"/></inline-formula>.</p>
<p>Finally, we averaged neuronal activity across trials sharing the same condition (choice, context, input 1), and then projected this average activity onto the choice and input1 axes. This process resulted in the trial-averaged population dynamics illustrated in <xref rid="fig2" ref-type="fig">Figures 2F</xref> and <xref rid="fig3" ref-type="fig">3F</xref>.</p>
</sec>
<sec id="s9">
<title>Proof of no selection vector modulation in rank-1 RNNs (<xref rid="fig2" ref-type="fig">Figure 2</xref>)</title>
<p>The transition matrix of neuron activity in the rank-1 RNN is given by:
<disp-formula id="eqn10">
<graphic xlink:href="610896v2_eqn10.gif" mimetype="image" mime-subtype="gif"/>
</disp-formula>
</p>
<p>Multiplying <italic>M</italic><sup>T</sup> on the right by <bold><italic>n</italic></bold><sub><italic>dv</italic></sub>, we obtain
<disp-formula id="eqn11">
<graphic xlink:href="610896v2_eqn11.gif" mimetype="image" mime-subtype="gif"/>
</disp-formula>
where the ⟨<bold><italic>·</italic></bold>,<bold><italic>·</italic></bold>⟩ symbol is defined as <inline-formula><inline-graphic xlink:href="610896v2_inline74.gif" mimetype="image" mime-subtype="gif"/></inline-formula> for two vectors of length-<italic>N</italic>. The requirement for the linear attractor approximation, <inline-formula><inline-graphic xlink:href="610896v2_inline75.gif" mimetype="image" mime-subtype="gif"/></inline-formula>, is met by all our trained and handcrafted RNNs (<xref rid="fig4_S1" ref-type="fig">Figure 4-supplement figure 1</xref>). This demonstrates that <bold><italic>n</italic></bold><sub><italic>dv</italic></sub> is the left eigenvector of the transition matrix, and hence <inline-formula><inline-graphic xlink:href="610896v2_inline76.gif" mimetype="image" mime-subtype="gif"/></inline-formula> is the selection vector in each context. Therefore, the direction of the selection vector is invariant across different contexts for the rank-1 model, indicating no selection vector modulation and this is consistent with the training results shown in <xref rid="fig2" ref-type="fig">Figure 2</xref>.</p>
</sec>
<sec id="s10">
<title>Handcrafting rank-3 RNNs with pure selection vector modulation (<xref rid="fig3" ref-type="fig">Figure 3</xref>)</title>
<p>First, we provide the implementation details of the rank-3 RNNs used in <xref rid="fig3" ref-type="fig">Figure 3</xref>. The network consists of 30,000 neurons divided into three populations, each with 10,000 neurons. The first population (neurons 1-10,000) receives stimulus input, accounting for both the information flow from the stimulus input to the intermediate variables and the recurrent connection of the decision variable. The second (neurons 10,001-20,000) and third populations (neurons 20,001-30,000) handle the information flow from the intermediate variables to the decision variable and are modulated by the context signal. To achieve this, we generate three Gaussian random matrices (<italic>M</italic><sup>(1)</sup>, <italic>M</italic><sup>(2)</sup>, <italic>M</italic><sup>(3)</sup>) of shape 10,000 × 3. Let <inline-formula><inline-graphic xlink:href="610896v2_inline77.gif" mimetype="image" mime-subtype="gif"/></inline-formula> denote the <italic>r</italic>-th column of matrix <italic>M</italic><sup>(<italic>p</italic>)</sup>. The stimulus input <bold><italic>I</italic></bold><sub>1</sub> is given by the concatenation of three length-10,000 vectors <inline-formula><inline-graphic xlink:href="610896v2_inline78.gif" mimetype="image" mime-subtype="gif"/></inline-formula>, where <bold>0</bold> denotes a length-10,000 zero vector. The stimulus input <bold><italic>I</italic></bold><sub>2</sub> is given by <inline-formula><inline-graphic xlink:href="610896v2_inline79.gif" mimetype="image" mime-subtype="gif"/></inline-formula>. The context input <inline-formula><inline-graphic xlink:href="610896v2_inline80.gif" mimetype="image" mime-subtype="gif"/></inline-formula> is given by <inline-formula><inline-graphic xlink:href="610896v2_inline81.gif" mimetype="image" mime-subtype="gif"/></inline-formula>. The context input <inline-formula><inline-graphic xlink:href="610896v2_inline82.gif" mimetype="image" mime-subtype="gif"/></inline-formula> is given by <inline-formula><inline-graphic xlink:href="610896v2_inline83.gif" mimetype="image" mime-subtype="gif"/></inline-formula>. The connectivity vectors <bold><italic>m</italic></bold><sub><italic>iv</italic>1</sub>, <bold><italic>m</italic></bold><sub><italic>iv</italic>2</sub> and <bold><italic>m</italic></bold><sub><italic>dv</italic></sub> are given by <inline-formula><inline-graphic xlink:href="610896v2_inline84.gif" mimetype="image" mime-subtype="gif"/></inline-formula><inline-formula><inline-graphic xlink:href="610896v2_inline84a.gif" mimetype="image" mime-subtype="gif"/></inline-formula>, and <inline-formula><inline-graphic xlink:href="610896v2_inline85.gif" mimetype="image" mime-subtype="gif"/></inline-formula>, respectively. The input-selection vectors <bold><italic>n</italic></bold><sub><italic>iv</italic>1</sub>, <bold><italic>n</italic></bold><sub><italic>iv</italic>2</sub>, and <bold><italic>n</italic></bold><sub><italic>dv</italic></sub> are given by <inline-formula><inline-graphic xlink:href="610896v2_inline86.gif" mimetype="image" mime-subtype="gif"/></inline-formula>, and <inline-formula><inline-graphic xlink:href="610896v2_inline87.gif" mimetype="image" mime-subtype="gif"/></inline-formula>, respectively, where <inline-formula><inline-graphic xlink:href="610896v2_inline88.gif" mimetype="image" mime-subtype="gif"/></inline-formula> represents the average gain of the second population in context 1 or the third population in context 2. The readout vector <bold><italic>w</italic></bold> is given by <inline-formula><inline-graphic xlink:href="610896v2_inline89.gif" mimetype="image" mime-subtype="gif"/></inline-formula>. We generate 100 RNNs based on this method to ensure that the conclusions in <xref rid="fig3" ref-type="fig">Figure 3</xref> do not depend on the specific realization of random matrices. Linearized dynamical system analysis reveals that all these RNNs perform flexible computation through pure selection vector modulation. Please see the section “<bold>The construction of rank-3 RNN models</bold>” for a mean-field-theory-based understanding.</p>
</sec>
<sec id="s11">
<title>Pathway-based information flow graph analysis of low-rank RNNs (<xref rid="fig4" ref-type="fig">Figure 4</xref>)</title>
<p>The dynamical evolution equation for low-rank RNN with <italic>R</italic> ranks and <italic>S</italic> input channels in context <italic>c</italic> is given by
<disp-formula id="eqn12">
<graphic xlink:href="610896v2_eqn12.gif" mimetype="image" mime-subtype="gif"/>
</disp-formula>
</p>
<p>Assuming <inline-formula><inline-graphic xlink:href="610896v2_inline90.gif" mimetype="image" mime-subtype="gif"/></inline-formula> at <italic>t</italic> = 0, the dynamics of <bold><italic>x</italic></bold>(<italic>t</italic>) − <bold><italic>x</italic></bold>(<bold>0</bold>) are always constrained in the subspace spanned by {<bold><italic>m</italic></bold><sub><italic>r</italic></sub>, <italic>r</italic> = 1, …, <italic>R</italic>} and {<bold><italic>I</italic></bold><sub><italic>s</italic></sub>, <italic>s</italic> = 1, …, <italic>S</italic>}. Therefore, <bold><italic>x</italic></bold>(<italic>t</italic>) can be expressed as a linear combination of these vectors: <inline-formula><inline-graphic xlink:href="610896v2_inline91.gif" mimetype="image" mime-subtype="gif"/></inline-formula>, leading to the following evolving dynamics of task variables:
<disp-formula id="eqn13">
<graphic xlink:href="610896v2_eqn13.gif" mimetype="image" mime-subtype="gif"/>
</disp-formula>
<disp-formula id="eqn14">
<graphic xlink:href="610896v2_eqn14.gif" mimetype="image" mime-subtype="gif"/>
</disp-formula>
where <inline-formula><inline-graphic xlink:href="610896v2_inline92.gif" mimetype="image" mime-subtype="gif"/></inline-formula> denotes activation along the <italic>s</italic>-th input vector, termed the input task variable and <italic>k</italic><sub><italic>r</italic></sub>(<italic>t</italic>) denotes activation along the <italic>j</italic>-th output vector, termed the internal task variable. <bold><italic>The rank-1 RNN case</italic></bold>. Therefore, for rank-1 RNNs, the latent dynamics of decision variable (internal task variable associated with <bold><italic>m</italic></bold><sub><italic>dv</italic></sub>) in context <italic>c</italic> is given by
<disp-formula id="eqn15">
<graphic xlink:href="610896v2_eqn15.gif" mimetype="image" mime-subtype="gif"/>
</disp-formula>
</p>
<p>Similar to the linearized dynamical systems analysis introduced earlier, we linearized equation (15) around <inline-formula><inline-graphic xlink:href="610896v2_inline93.gif" mimetype="image" mime-subtype="gif"/></inline-formula>, obtaining the following linearized equation:
<disp-formula id="eqn16">
<graphic xlink:href="610896v2_eqn16.gif" mimetype="image" mime-subtype="gif"/>
</disp-formula>
where <inline-formula><inline-graphic xlink:href="610896v2_inline94.gif" mimetype="image" mime-subtype="gif"/></inline-formula> (termed as the decision variable representation direction) and <inline-formula><inline-graphic xlink:href="610896v2_inline95.gif" mimetype="image" mime-subtype="gif"/></inline-formula> (termed as the input representation direction), with <italic>G</italic><sub>c</sub> equal to <inline-formula><inline-graphic xlink:href="610896v2_inline96.gif" mimetype="image" mime-subtype="gif"/></inline-formula>. By denoting <inline-formula><inline-graphic xlink:href="610896v2_inline97.gif" mimetype="image" mime-subtype="gif"/></inline-formula> and <inline-formula><inline-graphic xlink:href="610896v2_inline98.gif" mimetype="image" mime-subtype="gif"/></inline-formula> as <inline-formula><inline-graphic xlink:href="610896v2_inline99.gif" mimetype="image" mime-subtype="gif"/></inline-formula> and <inline-formula><inline-graphic xlink:href="610896v2_inline100.gif" mimetype="image" mime-subtype="gif"/></inline-formula>, respectively, together with the fact that <inline-formula><inline-graphic xlink:href="610896v2_inline101.gif" mimetype="image" mime-subtype="gif"/></inline-formula> is close to zero for all trained rank-1 RNNs, we obtain
<disp-formula id="eqn17">
<graphic xlink:href="610896v2_eqn17.gif" mimetype="image" mime-subtype="gif"/>
</disp-formula>
which is <xref ref-type="disp-formula" rid="eqn3">Eq. 3</xref> in the main text.</p>
</sec>
<sec id="s12">
<title>The rank-3 RNN case</title>
<p>Using a similar method, we can uncover the latent dynamics of rank-3 RNNs shown in <xref rid="fig5" ref-type="fig">Figure 5</xref>. Note that the rank-3 RNN in <xref rid="fig3" ref-type="fig">Figure 3</xref> is a special case of this more general form. The latent dynamics for internal task variables in context <italic>c</italic> can be written as:
<disp-formula id="eqn18">
<graphic xlink:href="610896v2_eqn18.gif" mimetype="image" mime-subtype="gif"/>
</disp-formula>
<disp-formula id="eqn19">
<graphic xlink:href="610896v2_eqn19.gif" mimetype="image" mime-subtype="gif"/>
</disp-formula>
</p>
<p>By applying the same first-order Taylor expansion, we obtain the following equations:
<disp-formula id="eqn20">
<graphic xlink:href="610896v2_eqn20.gif" mimetype="image" mime-subtype="gif"/>
</disp-formula>
<disp-formula id="eqn21">
<graphic xlink:href="610896v2_eqn21.gif" mimetype="image" mime-subtype="gif"/>
</disp-formula>
</p>
<p>We consider the case in which the intermediate variables (<inline-formula><inline-graphic xlink:href="610896v2_inline102.gif" mimetype="image" mime-subtype="gif"/></inline-formula>, internal task variables associated with <inline-formula><inline-graphic xlink:href="610896v2_inline103.gif" mimetype="image" mime-subtype="gif"/></inline-formula>, respectively) only receive information from the corresponding stimulus input, and the effective coupling of the recurrent connection is 1 in both contexts.</p>
<p>Specifically, we assume:
<disp-formula id="eqn22">
<graphic xlink:href="610896v2_eqn22.gif" mimetype="image" mime-subtype="gif"/>
</disp-formula>
<disp-formula id="eqn23">
<graphic xlink:href="610896v2_eqn23.gif" mimetype="image" mime-subtype="gif"/>
</disp-formula>
<disp-formula id="eqn24">
<graphic xlink:href="610896v2_eqn24.gif" mimetype="image" mime-subtype="gif"/>
</disp-formula>
</p>
<p>Our construction methods for rank-3 RNNs in <xref rid="fig3" ref-type="fig">Figures 3</xref> and <xref rid="fig5" ref-type="fig">5</xref> guarantee these conditions when the network is large enough (for example, <italic>N</italic> = 30,000 in our setting). Under these conditions, equations (20) and (21) can be simplified to:
<disp-formula id="eqn25">
<graphic xlink:href="610896v2_eqn25.gif" mimetype="image" mime-subtype="gif"/>
</disp-formula>
<disp-formula id="eqn26">
<graphic xlink:href="610896v2_eqn26.gif" mimetype="image" mime-subtype="gif"/>
</disp-formula>
</p>
<p>Suppose at <italic>t</italic> = 0, the network receives a pulse from input 1 with size <italic>A</italic><sub>%</sub> and a pulse from input 2 with size <italic>A</italic><sub>2</sub>, which correspond to <italic>u</italic><sub>1</sub>(<italic>t</italic>) = <italic>A</italic><sub>1</sub><italic>τδ</italic>(<italic>t</italic>), <italic>u</italic><sub>2</sub>(<italic>t</italic>) = <italic>A</italic><sub>2</sub><italic>τδ</italic>(<italic>t</italic>). Under this condition, the expression for <italic>k</italic><sub><italic>dv</italic></sub> is given by
<disp-formula id="eqn27">
<graphic xlink:href="610896v2_eqn27.gif" mimetype="image" mime-subtype="gif"/>
</disp-formula>
</p>
<p>From equation (27), as <italic>t</italic> → ∞, <italic>k</italic><sub><italic>dv</italic></sub> will converge to <inline-formula><inline-graphic xlink:href="610896v2_inline104.gif" mimetype="image" mime-subtype="gif"/></inline-formula> providing a theoretical basis for the pathway-based information flow formula presented in <xref rid="fig4" ref-type="fig">Figures 4</xref> and <xref rid="fig5" ref-type="fig">5</xref>.</p>
</sec>
<sec id="s13">
<title>Building rank-3 RNNs with both input and selection vector modulations (<xref rid="fig5" ref-type="fig">Figure 5</xref>)</title>
<sec id="s13a">
<title>Understanding low-rank RNNs in the mean-field limit</title>
<p>The dynamics of task variables in low-rank RNNs can be mathematically analyzed under the mean-field limit (<italic>N</italic> →+∞) when each neuron’s connectivity component is randomly drawn from a multivariate Gaussian mixture model (GMM) (<xref ref-type="bibr" rid="c4">Beiran et al., 2021</xref>; <xref ref-type="bibr" rid="c11">Dubreuil et al., 2022</xref>). Specifically, we assume that, for the <italic>i</italic>-th neuron, the connectivity component vector <inline-formula><inline-graphic xlink:href="610896v2_inline105.gif" mimetype="image" mime-subtype="gif"/></inline-formula> is drawn independently from a GMM with <bold><italic>P</italic></bold> components. The weight for the <italic>j</italic>-th component is <bold><italic>α</italic></bold><sub><italic>j</italic></sub>, and this component is modeled as a Gaussian distribution with mean zero and covariance matrix Σ<sup>(<italic>j</italic>)</sup>. Let <inline-formula><inline-graphic xlink:href="610896v2_inline106.gif" mimetype="image" mime-subtype="gif"/></inline-formula> denote the upper-left (<italic>S</italic>+ <italic>R</italic>+ 2) × (<italic>S</italic>+ <italic>R</italic>+ 2) submatrix of Σ<sup>(<italic>j</italic>)</sup>, which represents the covariance matrix of <inline-formula><inline-graphic xlink:href="610896v2_inline107.gif" mimetype="image" mime-subtype="gif"/></inline-formula> within the <italic>j</italic>-th component. Let <inline-formula><inline-graphic xlink:href="610896v2_inline108.gif" mimetype="image" mime-subtype="gif"/></inline-formula> denote the covariance of <bold><italic>a</italic></bold><sup>(<italic>i</italic>)</sup> and <bold><italic>b</italic></bold><sup>(<italic>i</italic>)</sup>, where the <italic>i</italic>-th neuron belongs to the <bold><italic>p</italic></bold>-th component.</p>
<p>Given these assumptions, under the mean-field limit (<italic>N</italic> →+∞), equation (14) can be expressed as
<disp-formula id="eqn28">
<graphic xlink:href="610896v2_eqn28.gif" mimetype="image" mime-subtype="gif"/>
</disp-formula>
<disp-formula id="eqn29">
<graphic xlink:href="610896v2_eqn29.gif" mimetype="image" mime-subtype="gif"/>
</disp-formula>
<disp-formula id="eqn30">
<graphic xlink:href="610896v2_eqn30.gif" mimetype="image" mime-subtype="gif"/>
</disp-formula>
where <inline-formula><inline-graphic xlink:href="610896v2_inline109.gif" mimetype="image" mime-subtype="gif"/></inline-formula> if <italic>i</italic> = <italic>c</italic>, otherwise <inline-formula><inline-graphic xlink:href="610896v2_inline110.gif" mimetype="image" mime-subtype="gif"/></inline-formula>. Under the condition of small task variables (<inline-formula><inline-graphic xlink:href="610896v2_inline111.gif" mimetype="image" mime-subtype="gif"/></inline-formula> and <italic>k</italic><sub><italic>r</italic></sub>, <italic>r</italic> = 1, …, <italic>R</italic>), <inline-formula><inline-graphic xlink:href="610896v2_inline112.gif" mimetype="image" mime-subtype="gif"/></inline-formula> is approximately equal to <inline-formula><inline-graphic xlink:href="610896v2_inline113.gif" mimetype="image" mime-subtype="gif"/></inline-formula> and the quantities <inline-formula><inline-graphic xlink:href="610896v2_inline114.gif" mimetype="image" mime-subtype="gif"/></inline-formula> are determined solely by the covariance of the context <italic>c</italic> signal input within each population. Clearly, the effective coupling from the input task variable <inline-formula><inline-graphic xlink:href="610896v2_inline115.gif" mimetype="image" mime-subtype="gif"/></inline-formula> to the internal task variable <italic>k</italic><sub><italic>r</italic></sub> is given by <inline-formula><inline-graphic xlink:href="610896v2_inline116.gif" mimetype="image" mime-subtype="gif"/></inline-formula>, and the effective coupling between the internal task variables <italic>k</italic><sub><italic>j</italic></sub> and <italic>k</italic><sub><italic>r</italic></sub> is given by <inline-formula><inline-graphic xlink:href="610896v2_inline117.gif" mimetype="image" mime-subtype="gif"/></inline-formula>.</p>
</sec>
<sec id="s13b">
<title>Mean-field-theory-based model construction</title>
<p>Utilizing this theory, we can construct RNNs tailored to any given ratio of input modulation to selection vector modulation by properly setting the connectivity vectors (<inline-formula><inline-graphic xlink:href="610896v2_inline118.gif" mimetype="image" mime-subtype="gif"/></inline-formula>, and <bold><italic>n</italic></bold><sub><italic>dv</italic></sub>). The RNN we built consists of 30,000 neurons divided into three populations. The first population (neurons 1-10,000) receives the stimulus input, accounting for information flow from stimulus input to intermediate variables (the connection strength is controlled by <italic>β</italic>) and the recurrent connection of the decision variable. The second (neurons 10,001-20,000) and third populations (neurons 20,001-30,000) receive the stimulus input, accounting for the information flow from the stimulus input to the decision variable (the connection strength is controlled by <bold><italic>α</italic></bold>) and the information flow from the intermediate variables to the decision variable (the connection strength is controlled by <italic>η</italic>), and are modulated by contextual input. To achieve this, we generate three Gaussian random matrices (<italic>M</italic><sup>(1)</sup>, <italic>M</italic><sup>(2)</sup>, <italic>M</italic><sup>(3)</sup>) of shape 10,000 × 3, 10,000 × 5 and 10,000 × 5, respectively. Let <inline-formula><inline-graphic xlink:href="610896v2_inline119.gif" mimetype="image" mime-subtype="gif"/></inline-formula> denote the <italic>r</italic>-th column of matrix <italic>M</italic><sup>(p)</sup>. The stimulus input <bold><italic>I</italic></bold><sub>1</sub> is given by the concatenation of three length-10,000 vectors <inline-formula><inline-graphic xlink:href="610896v2_inline120.gif" mimetype="image" mime-subtype="gif"/></inline-formula>. The stimulus input <bold><italic>I</italic></bold><sub>2</sub> is given by <inline-formula><inline-graphic xlink:href="610896v2_inline121.gif" mimetype="image" mime-subtype="gif"/></inline-formula>. The context input <inline-formula><inline-graphic xlink:href="610896v2_inline122.gif" mimetype="image" mime-subtype="gif"/></inline-formula> is given by <inline-formula><inline-graphic xlink:href="610896v2_inline123.gif" mimetype="image" mime-subtype="gif"/></inline-formula>. The context input <inline-formula><inline-graphic xlink:href="610896v2_inline124.gif" mimetype="image" mime-subtype="gif"/></inline-formula> is given by <inline-formula><inline-graphic xlink:href="610896v2_inline125.gif" mimetype="image" mime-subtype="gif"/></inline-formula>. The connectivity vectors <inline-formula><inline-graphic xlink:href="610896v2_inline126.gif" mimetype="image" mime-subtype="gif"/></inline-formula>, and <bold><italic>m</italic></bold><sub><italic>dv</italic></sub> are given by <inline-formula><inline-graphic xlink:href="610896v2_inline127.gif" mimetype="image" mime-subtype="gif"/></inline-formula> and <inline-formula><inline-graphic xlink:href="610896v2_inline128.gif" mimetype="image" mime-subtype="gif"/></inline-formula>, respectively. The input-selection vectors <inline-formula><inline-graphic xlink:href="610896v2_inline129.gif" mimetype="image" mime-subtype="gif"/></inline-formula> and <inline-formula><inline-graphic xlink:href="610896v2_inline130.gif" mimetype="image" mime-subtype="gif"/></inline-formula> are given by <inline-formula><inline-graphic xlink:href="610896v2_inline131.gif" mimetype="image" mime-subtype="gif"/></inline-formula> respectively. <bold><italic>n</italic></bold><sub><italic>dv</italic></sub> is given by <inline-formula><inline-graphic xlink:href="610896v2_inline132.gif" mimetype="image" mime-subtype="gif"/></inline-formula>, where <inline-formula><inline-graphic xlink:href="610896v2_inline133.gif" mimetype="image" mime-subtype="gif"/></inline-formula> is the average gain of the second population in context 1 or third population in context 2. The readout vector <bold><italic>w</italic></bold> is given by <inline-formula><inline-graphic xlink:href="610896v2_inline134.gif" mimetype="image" mime-subtype="gif"/></inline-formula>.</p>
<p>For the network, in context 1, ⟨<italic>ϕ</italic>′⟩<sub><italic>p</italic></sub> is only determined by the covariance of the context 1 signal. That is,
<disp-formula id="eqn31">
<graphic xlink:href="610896v2_eqn31.gif" mimetype="image" mime-subtype="gif"/>
</disp-formula>
</p>
<p>Our construction method guarantees that <inline-formula><inline-graphic xlink:href="610896v2_inline135.gif" mimetype="image" mime-subtype="gif"/></inline-formula> for <bold><italic>p</italic></bold> = 1,2,3, respectively. Hence, ⟨<italic>ϕ</italic>′⟩: = 1, <italic>g</italic>, 1 for <bold><italic>p</italic></bold> = 1,2,3, respectively. Then the effective coupling from input variable <inline-formula><inline-graphic xlink:href="610896v2_inline136.gif" mimetype="image" mime-subtype="gif"/></inline-formula> to <inline-formula><inline-graphic xlink:href="610896v2_inline137.gif" mimetype="image" mime-subtype="gif"/></inline-formula> in context 1 is given by
<disp-formula id="eqn32">
<graphic xlink:href="610896v2_eqn32.gif" mimetype="image" mime-subtype="gif"/>
</disp-formula>
</p>
<p>Similarly, we can get that:
<disp-formula id="eqn33">
<graphic xlink:href="610896v2_eqn33.gif" mimetype="image" mime-subtype="gif"/>
</disp-formula>
<disp-formula id="eqn34">
<graphic xlink:href="610896v2_eqn34.gif" mimetype="image" mime-subtype="gif"/>
</disp-formula>
<disp-formula id="eqn35">
<graphic xlink:href="610896v2_eqn35.gif" mimetype="image" mime-subtype="gif"/>
</disp-formula>
</p>
<p>Other unmentioned effective couplings are zero. Similarly, the effective couplings in context 2 are given by
<disp-formula id="eqn36">
<graphic xlink:href="610896v2_eqn36.gif" mimetype="image" mime-subtype="gif"/>
</disp-formula>
<disp-formula id="eqn37">
<graphic xlink:href="610896v2_eqn37.gif" mimetype="image" mime-subtype="gif"/>
</disp-formula>
<disp-formula id="eqn38">
<graphic xlink:href="610896v2_eqn38.gif" mimetype="image" mime-subtype="gif"/>
</disp-formula>
</p>
<p>Thus, for each input, the input modulation is <bold><italic>α</italic></bold> and the selection vector modulation is <italic>β</italic> × <italic>η</italic>. Therefore, any given ratio of input modulation to selection vector modulation can be achieved by varying the parameters <bold><italic>α</italic></bold>, <italic>β</italic>, and <italic>η</italic>. The example in <xref rid="fig3" ref-type="fig">Figure 3</xref> with pure selection vector modulation is a special case with <inline-formula><inline-graphic xlink:href="610896v2_inline138.gif" mimetype="image" mime-subtype="gif"/></inline-formula>, and <italic>η</italic> = (1 – <italic>g</italic><sup>2</sup>)/3.</p>
</sec>
</sec>
<sec id="s14">
<title>Pathway-based definition of selection vector (<xref rid="fig6" ref-type="fig">Figure 6</xref>)</title>
<p>Next, we will consider the rank-3 RNN with latent dynamics depicted in equations (18) and (19). The input representation produced by a pulse input <italic>u</italic><sub><italic>s</italic></sub> = <italic>τA</italic><sub><italic>s</italic></sub><italic>δ</italic>(<italic>t</italic>), <italic>s</italic> = 1,2 in a certain context at <italic>t</italic> = 0 is given by <italic>A</italic><sub>1</sub><bold><italic>Ĩ</italic></bold><sub>1</sub>+ <italic>A</italic><sub>2</sub><bold><italic>Ĩ</italic></bold><sub>2</sub>. We have proven that this pulse input will ultimately reach the <italic>dv</italic> slot with a magnitude of <inline-formula><inline-graphic xlink:href="610896v2_inline139.gif" mimetype="image" mime-subtype="gif"/></inline-formula>. This equation can be rewritten as
<disp-formula id="eqn39">
<graphic xlink:href="610896v2_eqn39.gif" mimetype="image" mime-subtype="gif"/>
</disp-formula>
</p>
<p>Therefore, we define <inline-formula><inline-graphic xlink:href="610896v2_inline140.gif" mimetype="image" mime-subtype="gif"/></inline-formula> as the pathway-based definition of the selection vector. Through calculations, we can prove that this pathway-based definition of the selection vector is equivalent to the classical definition based on linearized dynamical systems. In fact, the transition matrix of neuron activity in this rank-3 RNN is given by:
<disp-formula id="eqn40">
<graphic xlink:href="610896v2_eqn40.gif" mimetype="image" mime-subtype="gif"/>
</disp-formula></p>
<p>Multiplying <italic>M</italic><sup><italic>T</italic></sup> on the right by <bold><italic>n</italic></bold><sub><italic>tol</italic></sub>, we obtain:
<disp-formula id="eqn41">
<graphic xlink:href="610896v2_eqn41.gif" mimetype="image" mime-subtype="gif"/>
</disp-formula>
</p>
<p>Moreover, under the condition that the choice axis is invariant across contexts, i.e., <inline-formula><inline-graphic xlink:href="610896v2_inline142.gif" mimetype="image" mime-subtype="gif"/></inline-formula> is invariant across contexts (<xref ref-type="bibr" rid="c20">Mante et al., 2013</xref>; <xref ref-type="bibr" rid="c28">Pagan et al., 2022</xref>),
<disp-formula id="eqn42">
<graphic xlink:href="610896v2_eqn42.gif" mimetype="image" mime-subtype="gif"/>
</disp-formula>
</p>
<p>This demonstrates that <inline-formula><inline-graphic xlink:href="610896v2_inline143.gif" mimetype="image" mime-subtype="gif"/></inline-formula> is indeed the left eigenvector of the transition matrix as well as the classical selection vector of the linearized dynamical systems.</p>
</sec>
<sec id="s15">
<title>The equivalence between two definitions of selection vector modulation (<xref rid="fig5" ref-type="fig">Figure 5</xref>)</title>
<p>Here, we use the rank-3 RNN and input 1 as an example to explain why there is an equivalence between our definition of selection vector modulation and the classical one (<xref ref-type="bibr" rid="c28">Pagan et al., 2022</xref>). In the previous section, we have proven that the input representation direction and selection vector are given by <bold><italic>Ĩ</italic></bold><sub>1</sub> and <inline-formula><inline-graphic xlink:href="610896v2_inline144.gif" mimetype="image" mime-subtype="gif"/></inline-formula>, respectively.</p>
<p>According to the classical definition (<xref ref-type="bibr" rid="c28">Pagan et al., 2022</xref>), the input modulation and selection vector modulation are given by <inline-formula><inline-graphic xlink:href="610896v2_inline145.gif" mimetype="image" mime-subtype="gif"/></inline-formula> and <inline-formula><inline-graphic xlink:href="610896v2_inline146.gif" mimetype="image" mime-subtype="gif"/></inline-formula>, respectively. Since <inline-formula><inline-graphic xlink:href="610896v2_inline147.gif" mimetype="image" mime-subtype="gif"/></inline-formula> and <bold><italic>n</italic></bold><sub><italic>dv</italic></sub> are invariant across different contexts, we have:
<disp-formula id="eqn43">
<graphic xlink:href="610896v2_eqn43.gif" mimetype="image" mime-subtype="gif"/>
</disp-formula>
<disp-formula id="eqn44">
<graphic xlink:href="610896v2_eqn44.gif" mimetype="image" mime-subtype="gif"/>
</disp-formula>
</p>
<p>Substituting these into equations (7) and (8) yields:
<disp-formula id="eqn45">
<graphic xlink:href="610896v2_eqn45.gif" mimetype="image" mime-subtype="gif"/>
</disp-formula>
<disp-formula id="eqn46">
<graphic xlink:href="610896v2_eqn46.gif" mimetype="image" mime-subtype="gif"/>
</disp-formula>
a result fully consistent with the pathway-based definition in <xref ref-type="disp-formula" rid="eqn5">Eq. 5</xref> of the main text.</p>
</sec>
<sec id="s16">
<title>Comparison between the pathway-based selection vector and the classical one (<xref rid="fig6" ref-type="fig">Figures 6B</xref>)</title>
<p>We generate 1000 RNNs according to the procedure in <xref rid="fig5" ref-type="fig">Figure 5C</xref> (see Method “<italic>Mean-field-theory-based model construction” for details)</italic>, with each RNN defined by parameters <bold><italic>α</italic></bold>, <italic>β</italic> and <italic>γ</italic> independently sampled from a Uniform(0,1) distribution. For each RNN, we computed the selection vector for the RNN in a given context (e.g., context 1 or 2) in two ways: via linearized dynamical system analysis following <xref ref-type="bibr" rid="c20">Mante et al. (2013)</xref>, producing the selection vector sv<sup>classical</sup> (classical in <xref rid="fig6" ref-type="fig">Figure 6B</xref>), using the theoretical derivation <inline-formula><inline-graphic xlink:href="610896v2_inline148.gif" mimetype="image" mime-subtype="gif"/></inline-formula> (“our’s” in <xref rid="fig6" ref-type="fig">Figure 6B</xref>)</p>
<p>We repeated this process 1000 times and measured the cosine angle between these two selection vectors and plot the resulting distribution for context 1 (gray) and context 2 (blue) in <xref rid="fig6" ref-type="fig">Figure 6B</xref>.</p>
</sec>
<sec id="s17">
<title>Pathway-based analysis of higher order low-rank RNNs (<xref rid="fig7" ref-type="fig">Figures 7, A</xref> and <xref rid="fig7" ref-type="fig">B</xref>)</title>
<p>In this section, we will consider RNNs with more intermediate variables (<xref rid="fig7" ref-type="fig">Figure 7A</xref>). Here, we consider only one stimulus modality for simplicity and use the same notation convention in the previous sections. The network consists of one input variable <inline-formula><inline-graphic xlink:href="610896v2_inline149.gif" mimetype="image" mime-subtype="gif"/></inline-formula> intermediate variables <inline-formula><inline-graphic xlink:href="610896v2_inline150.gif" mimetype="image" mime-subtype="gif"/></inline-formula>, and one decision variable <italic>k</italic><sub><italic>dv</italic></sub>. For simplicity, we let <inline-formula><inline-graphic xlink:href="610896v2_inline151.gif" mimetype="image" mime-subtype="gif"/></inline-formula> be an alias for the input variable and <inline-formula><inline-graphic xlink:href="610896v2_inline152.gif" mimetype="image" mime-subtype="gif"/></inline-formula> be an alias for the decision variable. We use the shorthand <italic>E</italic><sub><italic>i</italic>→<italic>j</italic></sub> and <italic>E</italic><sub><italic>i</italic>→<italic>dv</italic></sub> to denote the effective coupling <inline-formula><inline-graphic xlink:href="610896v2_inline153.gif" mimetype="image" mime-subtype="gif"/></inline-formula> and <inline-formula><inline-graphic xlink:href="610896v2_inline154.gif" mimetype="image" mime-subtype="gif"/></inline-formula>, respectively. The dynamics of these task variables are given by
<disp-formula id="eqn47">
<graphic xlink:href="610896v2_eqn47.gif" mimetype="image" mime-subtype="gif"/>
</disp-formula>
<disp-formula id="eqn48">
<graphic xlink:href="610896v2_eqn48.gif" mimetype="image" mime-subtype="gif"/>
</disp-formula>
<disp-formula id="eqn49">
<graphic xlink:href="610896v2_eqn49.gif" mimetype="image" mime-subtype="gif"/>
</disp-formula>
</p>
<p>Consider the case when, at time <italic>t</italic> = 0, the network receives a pulse input with unit size (i.e., <italic>u</italic>(<italic>t</italic>) = <italic>τδ</italic>(<italic>t</italic>)). Then, we have
<disp-formula id="eqn50">
<graphic xlink:href="610896v2_eqn50.gif" mimetype="image" mime-subtype="gif"/>
</disp-formula>
<disp-formula id="eqn51">
<graphic xlink:href="610896v2_eqn51.gif" mimetype="image" mime-subtype="gif"/>
</disp-formula>
<disp-formula id="eqn52">
<graphic xlink:href="610896v2_eqn52.gif" mimetype="image" mime-subtype="gif"/>
</disp-formula>
where <inline-formula><inline-graphic xlink:href="610896v2_inline155.gif" mimetype="image" mime-subtype="gif"/></inline-formula>. In equation (52), Γ stands for the incomplete Gamma function and <inline-formula><inline-graphic xlink:href="610896v2_inline156.gif" mimetype="image" mime-subtype="gif"/></inline-formula>. These expressions tell us that, as time goes to infinity, all intermediate task variables <inline-formula><inline-graphic xlink:href="610896v2_inline157.gif" mimetype="image" mime-subtype="gif"/></inline-formula> will decay to zero and the decision variable will converge to <inline-formula><inline-graphic xlink:href="610896v2_inline158.gif" mimetype="image" mime-subtype="gif"/></inline-formula>, which means that a pulse input of unit size will ultimately reach the <italic>dv</italic> slot with a magnitude of <inline-formula><inline-graphic xlink:href="610896v2_inline159.gif" mimetype="image" mime-subtype="gif"/></inline-formula>. Therefore, we define the total effective coupling from the input variable to the decision variable in this higher-order graph as
<disp-formula id="eqn53">
<graphic xlink:href="610896v2_eqn53.gif" mimetype="image" mime-subtype="gif"/>
</disp-formula>
</p>
<p>The difference of the total effective coupling between relevant context and irrelevant context can be decomposed into:
<disp-formula id="eqn54">
<graphic xlink:href="610896v2_eqn54.gif" mimetype="image" mime-subtype="gif"/>
</disp-formula>
</p>
<p>The first term, caused by changing of stimulus input representation, is defined as the input modulation. The second term, the one without changing the stimulus input representation, is defined as the selection vector modulation.</p>
<p>Using a similar method in rank-3 RNNs, the selection vector for RNNs of higher order is given by:
<disp-formula id="eqn55">
<graphic xlink:href="610896v2_eqn55.gif" mimetype="image" mime-subtype="gif"/>
</disp-formula>
</p>
</sec>
<sec id="s18">
<title>Training of full-rank vanilla RNNs using backpropagation (<xref rid="fig7" ref-type="fig">Figure 7</xref>)</title>
<p>For <xref rid="fig7" ref-type="fig">Figure 7</xref>, we trained full-rank RNNs of <italic>N</italic> = 128 neurons. We trained the elements of the input vectors, the connectivity matrix, and the readout vector. We tested a large range of regularization coefficients ranging from 0 to 0.1. For each <italic>r</italic><sub><italic>r</italic>eg</sub> chosen from the set {0, 0.001, 0.002, 0.003, 0.004, 0.005, 0.006, 0.007, 0.008, 0.009, 0.01, 0.02, 0.03, 0.04, 0.05, 0.06, 0.07, 0.08, 0.09, 0.1}, we trained 100 full-rank RNNs. A larger <bold><italic>w</italic></bold><sub><italic>r</italic>eg</sub> value results in trained connectivity matrix <italic>J</italic> with lower rank, making the network more similar to a rank-1 RNN. All trainable parameters were initialized with random independent Gaussian weights with a mean of 0 and variance of 1/<italic>N</italic><sup>2</sup>. Only trained RNNs with their largest eigenvalue of the activity transition matrix falling within the -0.05 to 0.05 range in both contexts were selected for subsequent analysis.</p>
<p>To ensure that the conclusions drawn from <xref rid="fig7" ref-type="fig">Figure 7</xref> are robust and not dependent on specific hyperparameter settings, we conducted similar experiments under different model hyperparameter settings. First, we trained RNNs with the softplus activation function and regularization coefficients chosen from {0.1, 0.09, 0.08, 0.07, 0.06, 0.05, 0.04, 0.03, 0.02, 0.01, 0.008, 0.004, 0.002, 0.001} (<xref rid="fig7_S2" ref-type="fig">Figure 7-figure supplement 2A</xref>). Unlike tanh, softplus does not saturate on the positive end. Additionally, we tested the initialization of trainable parameters with a variance of 1/<italic>N</italic> (<xref rid="fig7_S2" ref-type="fig">Figure 7-figure supplement 2B</xref>). Together, these experiments confirmed that the main results do not depend on the specific model hyperparameter settings.</p>
</sec>
<sec id="s19">
<title>Estimating matrix dimension and extra-dimension (<xref rid="fig7" ref-type="fig">Figure 7</xref>)</title>
<sec id="s19a">
<title>Effective dimension of connectivity matrix (<xref rid="fig7" ref-type="fig">Figure 7D</xref>)</title>
<p>Let <italic>σ</italic><sub>1</sub> ≥ <italic>σ</italic><sub>2</sub> ≥…≥ <italic>σ</italic><sub>n</sub> be the singular values of the connectivity matrix. The matrix’s rank is the number of nonzero singular values. However, rank alone can overlook differences in how quickly those singular values decay. To capture this, we define the effective dimension as its stable rank (<xref ref-type="bibr" rid="c35">Sanyal et al., 2020</xref>):
<disp-formula id="eqn56">
<graphic xlink:href="610896v2_eqn56.gif" mimetype="image" mime-subtype="gif"/>
</disp-formula>
</p>
<p>Each term lies between 0 and 1, so the effective dimension satisfies 0 ≤ edim(<italic>J</italic>) ≤ rank(<italic>J</italic>). When all nonzero singular values are equal, edim(<italic>J</italic>) equals the matrix rank. But if some singular values are much smaller than others, effective dimension will be closer to 1.</p>
</sec>
<sec id="s19b">
<title>Single neuron response kernel for pulse input (<xref rid="fig7" ref-type="fig">Figure 7E</xref>)</title>
<p>We apply pulse-based linear regression (<xref ref-type="bibr" rid="c28">Pagan et al., 2022</xref>) to access how pulse input affects neuron activity. The activity of neuron <italic>i</italic> in trial <italic>k</italic> at time step <italic>t</italic> is given by:
<disp-formula id="eqn57">
<graphic xlink:href="610896v2_eqn57.gif" mimetype="image" mime-subtype="gif"/>
</disp-formula>
where <italic>choice</italic>(<italic>k</italic>) is the RNN’s choice on trial <italic>k</italic> defined as the sign of its output during the decision period, <italic>context</italic>(<italic>k</italic>) is the context of trial <italic>k</italic> (1 for context 1 and 0 for context 2), <italic>u</italic><sub>1,<italic>k</italic></sub> indicates signed input <italic>i</italic> evidence as defined previously in Methods. The first three regression coefficients, <italic>β</italic><sub><italic>choice;i,t</italic></sub>, <italic>β</italic><sub><italic>context;i,t</italic></sub> and <italic>β</italic><sub><italic>time;i,t</italic></sub>, capture the influent of choice, context, and time on the neuron’s activity at each time step, each being a 40-dimension vector. The remaining coefficient, <inline-formula><inline-graphic xlink:href="610896v2_inline160.gif" mimetype="image" mime-subtype="gif"/></inline-formula> and <inline-formula><inline-graphic xlink:href="610896v2_inline161.gif" mimetype="image" mime-subtype="gif"/></inline-formula>, reflect the impact of pulse input on the neuron activity in specific context, each also a 40-dimension vector. The asterisk (∗) indicates the convolution operation between the response kernel and input evidence, described by:
<disp-formula id="eqn58">
<graphic xlink:href="610896v2_eqn58.gif" mimetype="image" mime-subtype="gif"/>
</disp-formula>
</p>
<p>Therefore, there are a total of 280 regression coefficients for each neuron. We obtained these coefficients using ridge regression with 1000 trails for each RNN. The coefficient <inline-formula><inline-graphic xlink:href="610896v2_inline162.gif" mimetype="image" mime-subtype="gif"/></inline-formula> is termed the single neuron response kernel for input <italic>i</italic> in context <italic>c</italic> (<xref rid="fig7" ref-type="fig">Figure 7E</xref>).</p>
</sec>
<sec id="s19c">
<title>Response kernel modes and normalized percentage of explained variance (PEV) (<xref rid="fig7" ref-type="fig">Figure 7F</xref>)</title>
<p>For each RNN, we construct a matrix <italic>B</italic> with shape <italic>N</italic><sub><italic>t</italic></sub> × (2<italic>N</italic>) from neuron response kernels for input 1 (or input 2) across both contexts, where <italic>N</italic><sub><italic>t</italic></sub> = 40 represents time steps and <italic>N</italic> is the number of neurons, with each column as a neuron’s response kernel in a context. Then we apply singular value decomposition (SVD) to the matrix:
<disp-formula id="eqn59">
<graphic xlink:href="610896v2_eqn59.gif" mimetype="image" mime-subtype="gif"/>
</disp-formula>
where <italic>S</italic> is a diagonal square matrix of size <italic>N</italic><sub><italic>t</italic></sub>, with diagonal element <inline-formula><inline-graphic xlink:href="610896v2_inline163.gif" mimetype="image" mime-subtype="gif"/></inline-formula> being the singular value of the matrix. The first column of U serves as a persistent mode (mode 0), while the second and following columns are transient modes (transient dynamical modes 1, 2, etc.). The normalized PEV of transient dynamical mode <italic>r, r</italic> ≥ 1 is defined as:
<disp-formula id="eqn60">
<graphic xlink:href="610896v2_eqn60.gif" mimetype="image" mime-subtype="gif"/>
</disp-formula>
</p>
</sec>
<sec id="s19d">
<title>PEV of extra dynamical modes</title>
<p>The PEV of extra dynamical modes for input 1 (or 2) is defined based on the normalized PEV of transient dynamical mode:
<disp-formula id="eqn61">
<graphic xlink:href="610896v2_eqn61.gif" mimetype="image" mime-subtype="gif"/>
</disp-formula>
</p>
<sec id="s19d1">
<title>The counterintuitive extreme example (<xref rid="fig7_S3" ref-type="fig">Figure 7-figure supplement 3</xref>)</title>
<p>We can manually construct two models (RNN1 and RNN2) with distinct circuit mechanisms (input modulation versus selection vector modulation) but showing the same neural activities. Specifically, we generated three Gaussian random matrices (<italic>M</italic><sup>(1)</sup>, <italic>M</italic><sup>(2)</sup>, <italic>M</italic><sup>(3)</sup>) of shape 10,000 × 5, 10,000 × 5 and 10,000 × 1, respectively. Let <inline-formula><inline-graphic xlink:href="610896v2_inline164.gif" mimetype="image" mime-subtype="gif"/></inline-formula> denote the <italic>r</italic>-th column of matrix <italic>M</italic><sup>(<italic>p</italic>)</sup>. The two models have the same input vectors, output vectors, and input-selection vectors for intermediate task variables (<inline-formula><inline-graphic xlink:href="610896v2_inline165.gif" mimetype="image" mime-subtype="gif"/></inline-formula> and <inline-formula><inline-graphic xlink:href="610896v2_inline166.gif" mimetype="image" mime-subtype="gif"/></inline-formula>), given by:
<disp-formula id="eqn62">
<graphic xlink:href="610896v2_eqn62.gif" mimetype="image" mime-subtype="gif"/>
</disp-formula>
<disp-formula id="eqn63">
<graphic xlink:href="610896v2_eqn63.gif" mimetype="image" mime-subtype="gif"/>
</disp-formula>
<disp-formula id="eqn64">
<graphic xlink:href="610896v2_eqn64.gif" mimetype="image" mime-subtype="gif"/>
</disp-formula>
<disp-formula id="eqn65">
<graphic xlink:href="610896v2_eqn65.gif" mimetype="image" mime-subtype="gif"/>
</disp-formula>
where <inline-formula><inline-graphic xlink:href="610896v2_inline167.gif" mimetype="image" mime-subtype="gif"/></inline-formula>. The difference between these two RNNs lies in their input-selection vector <bold><italic>n</italic></bold><sub><italic>dv</italic></sub> for the decision variable. For RNN1, <bold><italic>n</italic></bold><sub><italic>dv</italic></sub> is given by
<disp-formula id="eqn66">
<graphic xlink:href="610896v2_eqn66.gif" mimetype="image" mime-subtype="gif"/>
</disp-formula>
</p>
<p>For RNN2, <bold><italic>n</italic></bold><sub><italic>dv</italic></sub> is given by:
<disp-formula id="eqn67">
<graphic xlink:href="610896v2_eqn67.gif" mimetype="image" mime-subtype="gif"/>
</disp-formula>
</p>
<p>In this construction, the information flow graphs from input 1 to the decision variable (<italic>dv</italic>) in each context for the two RNNs are shown in <xref rid="fig7_S3" ref-type="fig">Figure 7-figure supplement 3A</xref>. Although the connectivity matrices of the two networks are different (<xref rid="fig7_S3" ref-type="fig">Figure 7-figure supplement 3B</xref>), when provided with the same input, the neuron activity of the <italic>i</italic>-th neuron in RNN1 is exactly the same as that of the <italic>i</italic>-th neuron in RNN2 at the same time point (<xref rid="fig7_S3" ref-type="fig">Figure 7-figure supplement 3C</xref>). The statistical results of similarity between all neuron pairs are given in <xref rid="fig7_S3" ref-type="fig">Figure 7-figure supplement 3D</xref>.</p>
</sec>
</sec>
</sec>
<sec id="s20">
<title>Manually adding redundant structure and PEV of irrelevant activity (<xref rid="fig7_S4" ref-type="fig">Figure 7-figure supplement 4</xref>)</title>
<sec id="s20a">
<title><italic>Redundant RNN</italic> (<xref rid="fig7_S4" ref-type="fig">Figure 7-figure supplement 4B</xref> and <xref rid="fig7_S4" ref-type="fig">4C</xref>)</title>
<p>To see if the currently proposed method can work when there is significant amount of neural activity variance irrelevant to the task, we manually added irrelevant neural activity into the trained RNNs (termed as redundant RNNs). Specifically, we randomly choice <italic>K</italic> = 75 trained vanilla RNNs (<xref rid="fig7" ref-type="fig">Figure 7D-G</xref>). To add irrelevant additional dimensions to the network without affecting the original function, for each RNN with N neurons, we build a larger RNN with 2<italic>N</italic> neurons equally divided into two populations. The input embeddings, readout vector, and the connectivity strengths between neurons within the first population (the first to the <italic>N</italic>-th neurons) are the same as the original RNN. As for the second population (the <italic>N</italic>+ 1-th to the 2<italic>N</italic>-th neurons, the input embeddings are sampled with Gaussian noise, with the standard deviation equal to that of the original RNN input embeddings and the readout vector is set to 0. The connectivity strengths within the second population are sampled with Gaussian noise, with the standard deviation chosen such that the average sum of square activity of the two populations is nearly equal. Moreover, there is no connectivity between the two populations. The resulting RNN, compared to the original network, introduces adding task-irrelevant neural activity (neural activity in the second population). At the same time, it performs the CDM task in the same way as the original network, with the identical selection vector modulation value.</p>
</sec>
<sec id="s20b">
<title><italic>PEV of irrelevant activity</italic> (<xref rid="fig7_S4" ref-type="fig">Figure 7-figure supplement 4C</xref>)</title>
<p>We hypothesize that the proportion of explained variance (PEV) in extra dynamical modes performs reliably for trained RNNs (<xref rid="fig7" ref-type="fig">Figure 7G</xref>) because task-irrelevant neural activity is minimal in these networks. To test this possibility, we conducted in-silico lesion experiments for the trained RNNs. The main idea is that if an RNN contains a large portion of task-irrelevant variance, there will exist a subspace (termed as task-irrelevant subspace) that captures this part of variance and removing this task-irrelevant subspace will not affect the network’s behavior.</p>
<p>Based on this idea, we developed an optimization method to identify such a task-irrelevant subspace for any given RNN. The main idea is to find a lesion subspace such that removing all neural activity within this subspace does not affect the network’s behavior, while capturing as much variance in neural activity caused by pulse inputs as possible. Specifically, for any given RNN, we constructed a new RNN with its connectivity matrix defined as <italic>J</italic> <sup>′</sup> = <italic>J</italic>(<italic>E</italic> − <italic>QQ</italic><sup>T</sup>), where <italic>J</italic> is the connectivity matrix of the original RNN, <italic>E</italic> is the identity matrix, and <italic>Q</italic> is the orthogonal basis of the lesion subspace. Here, <italic>Q</italic> is of shape <italic>N</italic> × <italic>r</italic>, where <italic>r</italic> is the dimension of the subspace (<italic>r</italic> = 10 in <xref rid="fig7_S4" ref-type="fig">Figure 7-Figure Supplement 4</xref>). For the new RNN, the matrix <italic>E</italic> − <italic>QQ</italic><sup>T</sup> removes all components of neural activity within the lesion subspace. We try to find the best <italic>Q</italic> by minimizing:
<disp-formula id="eqn68">
<graphic xlink:href="610896v2_eqn68.gif" mimetype="image" mime-subtype="gif"/>
</disp-formula>
where <italic>z</italic><sub>40</sub> is the network’s output at the last time step for pulse input at the beginning, <inline-formula><inline-graphic xlink:href="610896v2_inline168.gif" mimetype="image" mime-subtype="gif"/></inline-formula> is the output without lesion, <inline-formula><inline-graphic xlink:href="610896v2_inline169.gif" mimetype="image" mime-subtype="gif"/></inline-formula> is a 40 × <italic>N</italic> matrix, indicating the neuron activities caused by a pulse input for the RNN without lesion, <italic>λ</italic> = 10 is a hyperparameter balancing the two parts. We only consider input 1 under condition 1 for simplicity. The first part ensures that after removing neural activity in the <italic>Q</italic> subspace, the network’s output in response to unit pulse remains unchanged. The second parm aims to maximize the variance of neuron activity captured by lesion subspace. The orthogonal basis <italic>Q</italic> is parameterized using Cayley transform: <italic>Q</italic> = (<italic>E</italic>+ <italic>A</italic> – <italic>A</italic><sup>T</sup>)(<italic>E</italic> − <italic>A</italic>+ <italic>A</italic><sup>T</sup>) <sup>−1</sup>. Matrix <italic>A</italic> is optimized using gradient descend with Adam optimizer with a learning rate of 10<sup>−5</sup>. The training process last for 2000 steps and the maximum of <inline-formula><inline-graphic xlink:href="610896v2_inline170.gif" mimetype="image" mime-subtype="gif"/></inline-formula> under the condition of <inline-formula><inline-graphic xlink:href="610896v2_inline171.gif" mimetype="image" mime-subtype="gif"/></inline-formula> is defined as the network’s PEV of irrelevant activity (<xref rid="fig7_S4" ref-type="fig">Figure 7-figure supplement 4C</xref>).</p>
</sec>
</sec>
</app>
</app-group>
</back>
<sub-article id="sa0" article-type="editor-report">
<front-stub>
<article-id pub-id-type="doi">10.7554/eLife.103636.2.sa3</article-id>
<title-group>
<article-title>eLife Assessment</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author">
<name>
<surname>Ostojic</surname>
<given-names>Srdjan</given-names>
</name>
<role specific-use="editor">Reviewing Editor</role>
<aff>
<institution-wrap>
<institution>École Normale Supérieure - PSL</institution>
</institution-wrap>
<city>Paris</city>
<country>France</country>
</aff>
</contrib>
</contrib-group>
<kwd-group kwd-group-type="evidence-strength">
<kwd>Convincing</kwd>
</kwd-group>
<kwd-group kwd-group-type="claim-importance">
<kwd>Important</kwd>
</kwd-group>
</front-stub>
<body>
<p>This study provides an <bold>important</bold> set of analyses and theoretical derivations to understand the mechanisms used by recurrent neural networks (RNNs) to perform context-dependent accumulation of evidence. The results regarding the dimensionality and neural dynamical signatures of RNNs are <bold>convincing</bold> and provide new avenues to study the mechanisms underlying context-dependent computations. This manuscript will be of interest to a broad audience in systems and computational neuroscience.</p>
</body>
</sub-article>
<sub-article id="sa1" article-type="referee-report">
<front-stub>
<article-id pub-id-type="doi">10.7554/eLife.103636.2.sa2</article-id>
<title-group>
<article-title>Reviewer #1 (Public review):</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author">
<anonymous/>
<role specific-use="referee">Reviewer</role>
</contrib>
</contrib-group>
</front-stub>
<body>
<p>Summary:</p>
<p>This paper investigates how recurrent neural networks (RNNs) can perform context-dependent decision-making (CDM). The authors use low-rank RNN modeling and focus on a CDM task where subjects are presented with sequences of auditory pulses that vary in location and frequency, and they must determine either the prevalent location or frequency based on an external context signal. In particular, the authors focus on the problem of differentiating between two distinct selection mechanisms: input modulation, which involves altering the stimulus input representation, and selection vector modulation, which involves altering the &quot;selection vector&quot; of the dynamical system.</p>
<p>First, the authors show that rank-one networks can only implement input modulation, and that higher-rank networks are required for selection vector modulation. Then, the authors use pathway-based information flow analysis to understand how information is routed to the accumulator based on context. This analysis allows the authors to introduce a novel definition of selection vector modulation that explicitly links it to changes in the effective coupling along specific pathways within the network.</p>
<p>The study further generates testable predictions for differentiating selection vector modulation from input modulation based on neural dynamics. In particular, the authors find that: 1) A larger proportion of selection vector modulation is expected in networks with high-dimensional connectivity. 2) Single-neuron response kernels exhibiting specific profiles (peaking between stimulus onset and choice onset) are indicative of neural dynamics in extra dimensions, supporting the presence of selection vector modulation. 3) The percentage of explained variance (PEV) of extra dynamical modes extracted from response kernels at the population level can serve as an index to quantify the amount of selection vector modulation.</p>
<p>Strengths:</p>
<p>The paper is clear and well written, and it draws bridges between two recent important approaches in the study of CDM: circuit-level descriptions of low-rank RNNs, and differentiation across alternative mechanisms in terms of neural dynamics. The most interesting aspect of the study involves establishing a link between selection vector modulation, network dimensionality and dimensionality of neural dynamics. The high correlation between the networks' mechanisms and their dimensionality (Fig. 7d) is surprising since differentiating between selection mechanisms is generally a difficult task, and the strength of this result is further corroborated by its consistency across multiple RNN hyperparameters (Figure 7-figure supplement 1 and Figure 7-figure supplement 2). Interestingly, the correlation between the selection mechanism and the dimensionality of neural dynamics is also high (Fig. 7g), potentially providing a promising future avenue for the study of neural recordings in this task.</p>
<p>Weaknesses:</p>
<p>As acknowledged by the authors, the results linking selection vector modulation and dimensionality might not generalize to neural representations where a significant fraction of the variance encodes information unrelated to the task. Therefore, these tools might not be applicable to neural recordings or to artificial neural networks with additional high-dimensional activity unrelated to the task (e.g. RNNs trained to perform many other tasks).</p>
</body>
</sub-article>
<sub-article id="sa2" article-type="referee-report">
<front-stub>
<article-id pub-id-type="doi">10.7554/eLife.103636.2.sa1</article-id>
<title-group>
<article-title>Reviewer #2 (Public review):</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author">
<anonymous/>
<role specific-use="referee">Reviewer</role>
</contrib>
</contrib-group>
</front-stub>
<body>
<p>This manuscript examines network mechanisms that allow networks of neurons to perform context-dependent decision-making.</p>
<p>
In a recent study, Pagan and colleagues identified two distinct mechanisms by which recurrent neural networks can perform such computations. They termed these two mechanisms input-modulation and selection-vector modulation. Pagan and colleagues demonstrated that recurrent neural networks can be trained to implement combinations of these two mechanisms, and related this range of computational strategies with inter-individual variability in rats performing the same task. What type of structure in the recurrent connectivity favors one or the other mechanism however remained an open question.</p>
<p>The present manuscript addresses this specific question by using a class of mechanistically interpretable recurrent neural networks, low-rank RNNs.</p>
<p>
The manuscript starts by demonstrating that unit-rank RNNs can only implement the input-modulation mechanism, but not the selection-vector modulation. The authors then build rank three networks which implement selection-vector modulation, and show how the two mechanisms can be combined. Finally, they relate the amount of selection-vector modulation with the effective rank, ie the dimensionality of activity, of a trained full-rank RNN.</p>
<p>Strength:</p>
<p>- The manuscript is written in an obvious manner</p>
<p>
- The analytic approach adopted in the manuscript is impressive</p>
<p>
- Very clear identification of the mechanisms leading to the two types of context-dependent modulation</p>
<p>
- Altogether, this manuscript reports remarkable insights on a very timely question</p>
</body>
</sub-article>
<sub-article id="sa3" article-type="author-comment">
<front-stub>
<article-id pub-id-type="doi">10.7554/eLife.103636.2.sa0</article-id>
<title-group>
<article-title>Author response:</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author">
<name>
<surname>Zhang</surname>
<given-names>Yiteng</given-names>
</name>
<role specific-use="author">Author</role>
</contrib>
<contrib contrib-type="author">
<name>
<surname>Feng</surname>
<given-names>Jianfeng</given-names>
</name>
<role specific-use="author">Author</role>
</contrib>
<contrib contrib-type="author">
<name>
<surname>Min</surname>
<given-names>Bin</given-names>
</name>
<role specific-use="author">Author</role>
<contrib-id contrib-id-type="orcid">http://orcid.org/0000-0003-1006-9629</contrib-id></contrib>
</contrib-group>
</front-stub>
<body>
<p>The following is the authors’ response to the original reviews</p>
<disp-quote content-type="editor-comment">
<p><bold>Reviewer 1 (Public review):</bold></p>
<p>The first part of the manuscript is not particularly novel, and it would be beneficial to clearly state which aspects of the analyses and derivations are different from previous literature. For example, the derivation that rank-1 RNNs cannot implement selection vector modulation is already present in the Extended Discussion of Pagan et al., 2022 (Equations 42-43). Similarly, it would be helpful to more clearly explain how the proposed pathway-based information flow analysis differs from the circuit diagram of latent dynamics in Dubreuil et al., 2022.</p>
</disp-quote>
<p>We thank the reviewer for the insightful comments and providing us a good opportunity to better clarify the novelty of our work regarding the analyses and derivations. In general, as the reviewer pointed out, the major novelty of our work lies in explicitly linking selection mechanisms (proposed in Mante et al. 2013) with circuit-level descriptions of low-rank RNNs (developed in Dubreuil et al. 2022). This is made possible through a set of analyses and derivation integrating both linearized dynamical systems analysis (Mante et al., 2013) and the circuit diagram of latent dynamics (Dubreuil et al. 2022). Specifically, starting from rank-3 RNN models, we first derived the circuit diagram of latent dynamics (Eqs. 18 and 19) by applying the theory developed in Dubreuil et al. 2022. However, without further analysis, there is no explicit link between this latent dynamics and selection mechanism. In this manuscript, based on the line attractor assumption, we linearized the latent dynamics around the line attractor (Mante et al., 2013), which enabled us to explicitly solve the equation (from eq. 20 to eq. 27) and derive an explicit formula for the effective coupling of information flow (Fig. 5A). This formula of effective coupling strength supported an explicit pathway-based definition of selection vector modulation (Fig. 5) and selection vector (Fig. 6), the core result of this manuscript. Importantly, the same analysis can be extended to higher-order lowrank RNNs (Eqs. 47-55), suggesting the general applicability of our result. We have revised the manuscript to clearly state the novelty of our work. Please see Lines 292-294.</p>
<p>As such a set of analyses and derivation integrates many results from previous literatures, it naturally shared many similarities with previous results as the reviewer pointed out. Below, we compared our work with previous ones mentioned by the reviewer:</p>
<disp-quote content-type="editor-comment">
<p>(1) For example, the derivation that rank-1 RNNs cannot implement selection vector modulation is already present in the Extended Discussion of Pagan et al., 2022 (Equations 42-43).</p>
</disp-quote>
<p>For this point, we totally agree with the reviewer that the derivation of rank-1 RNNs’ limitations in implementing selection vector modulation is not particularly novel. The reason why we started from rank-1 RNNs is because these RNNs are the simplest examples revealing the intriguing link between the connectivity property and the modulation mechanism and thereby serving as the ideal introduction for the subsequent in-depth discussion for general audiences. In the original manuscript, we cited the Pagan et al. 2023 note but may not make it explicit enough. As the reviewer pointed out that the derivation has been added into the latest version of Pagan et al. paper (Pagan et al. 2024), we now cite the Pagan et al. 2024 paper and make it clear that the derivation has been derived in Pagan et al. 2024. Please see Lines 186-188 in the main text.</p>
<disp-quote content-type="editor-comment">
<p>(2) Similarly, it would be helpful to more clearly explain how the proposed pathway-based information flow analysis differs from the circuit diagram of latent dynamics in Dubreuil et al., 2022.</p>
</disp-quote>
<p>As we explained earlier, the latent dynamics in Dubreuil et al. alone did not provide an explicit link between circuit diagram and selection mechanisms. Our analysis go beyond the theory developed in Dubreuil et al. 2022 paper by integrating the linearized dynamical systems analysis (Mante et al. 2013), eventually providing a previously-unknown explicit link between circuit diagram and selection mechanisms.</p>
<disp-quote content-type="editor-comment">
<p>With regard to the results linking selection vector modulation and dimensionality, more work is required to understand the generality of these results, and how practical it would be to apply this type of analysis to neural recordings. For example, it is possible to build a network that uses input modulation and to greatly increase the dimensionality of the network simply by adding additional dimensions that do not directly contribute to the computation. Similarly, neural responses might have additional high-dimensional activity unrelated to the task. My understanding is that the currently proposed method would classify such networks incorrectly, and it is reasonable to imagine that the dimensionality of activity in high-order brain regions will be strongly dependent on activity that does not relate to this task.</p>
</disp-quote>
<p>We thank the reviewer for this insightful comment. As what the reviewer suggested, we did more work to better understand the generality and applicability of the index proposed in the manuscript.</p>
<p>Firstly, to see if the currently proposed method can work when there is significant amount of neural activity variance irrelevant to the task, we manually added irrelevant neural activity into the trained RNNs (termed as redundant RNNs, see Methods for details, Lines 1200-1215). As expected, we found that for these redundant RNNs, the correlation between the proposed index and the proportion of selection vector modulation indeed disappeared (Figure 7-figure supplement 4B). In fact, in the original version of our manuscript, we presented an extreme example of this idea in our discussion, where we designed two RNNs with theoretically identical neural activity patterns—one relying purely on input modulation and the other on selection vector modulation (Figure 7-figure supplement 3). Therefore, for this extreme example, any activity-based index alone would fail to differentiate between these two mechanisms, suggesting the challenge of distinguishing different selection mechanisms when taskirrelevant neural activity is added.</p>
<p>Secondly, we asked why the proposed index works well for the trained RNNs, which is kind of surprising in the first place as the reviewer pointed out. One possibility is that for trained RNNs, the task-irrelevant neural activity is minimal. To test this possibility, we conducted in-silico lesion experiments for the trained RNNs. The main idea is that if an RNN contains a large portion of taskirrelevant variance, there will exist a subspace (termed as task-irrelevant subspace) that captures this part of variance and removing this task-irrelevant subspace will not affect the network’s behavior. Based on this idea, we developed an optimization method to identify such a task-irrelevant subspace for any given RNN (see Methods for details, Lines 1216-1244). The results show that in the originally trained RNNs, the identified task-irrelevant subspace can only explain a small portion of neural activity variance (Figure 7-figure supplement 4, panel C). As a control, when applying the same optimization method to the redundant RNNs, we found that the identified task-irrelevant subspace can explain a significantly larger portion of neural activity variance (Figure 7-figure supplement 4, panel C). Taken together, we concluded that the reason why the index works for trained RNNs is because the major variance of the neural activity of the network learned through backpropagation is task-relevant.</p>
<p>Therefore, this set of analyses provided an understanding why the proposed index works for trained RNNs and failed for the redundant RNNs. We have added this part of analyses in the Discussion part. See Lines 601-610. As the reviewer pointed out that it is highly likely that there exists taskirrelevant neural activity variance in high brain regions, the proposed index may not work well in neural recordings. With this understanding, we tone down the conclusion related to experimentally testable prediction in the main text (e.g., in Abstract and Introduction). We thank the reviewer again for helping us improve the clarity of our work.</p>
<disp-quote content-type="editor-comment">
<p>Finally, a number of aspects of the analysis are not clear. The most important element to clarify is how the authors quantify the &quot;proportion of selection vector modulation&quot; in vanilla RNNs (Figures 7d and 7g). I could not find information about this in the Methods, yet this is a critical element of the study results. In Mante et al., 2013 and in Pagan et al., 2022 this was done by analyzing the RNN linearized dynamics around fixed points: is this the approach used also in this study? Also, how are the authors producing the trial-averaged analyses shown in Figures 2f and 3f? The methods used to produce this type of plot differ in Mante et al., 2013 and Pagan et al., 2022, and it is necessary for the authors to explain how this was computed in this case.</p>
</disp-quote>
<p>We thank the reviewer for the valuable comments. Yes, for proportion of selection vector modulation (Figure 7D and 7G) we employed the method used in Mante et al., 2013. For the trial-averaged analyses shown in Figures 2f and 3f, we followed a procedure used in Mante et al., 2013. In the revised version, we have added the relate information. See Lines 852-853 and 872-889. We thank the reviewer again for improving the clarify of our work.</p>
<disp-quote content-type="editor-comment">
<p>I am also confused by a number of analyses done to verify mathematical derivations, which seem to suggest that the results are close to identical, but not exactly identical. For example, in the histogram in Figure 6b, or the histogram in Figure 7-figure supplement 3d: what is the source of the small variability leading to some of the indices being less than 1?</p>
</disp-quote>
<p>In Figure 6B, the two selection vectors are considered theoretically equivalent under the meanfield assumption. However, because the RNNs we use have a finite number of neurons, finite-size effects inevitably cause slight deviations from perfect equivalence.</p>
<p>To verify this, we generated rank-3 RNNs of different sizes in the experiment for Figure 6b (see the Supplementary section “Building rank-3 RNNs with both input and selection vector modulations”). Specifically, for a fixed number of neurons 𝑁, we independently sampled 𝛼, 𝛽 and 𝛾 from a Uniform(0,1) distribution and built an RNN with 𝑁 neurons based on the procedure as in Figure 5C. We then computed the selection vector for the RNN in a given context (for example, context 1) in two ways:</p>
<p>(1) via linearized dynamical system analysis following Mante et al. (2013), producing the selection vector sc<sup>classical</sup></p>
<p>(2) using the theoretical derivation <inline-formula id="sa3equ1"><inline-graphic xlink:href="elife-103636-sa3-equ1.jpg" mimetype="image" mime-subtype="jpeg"/></inline-formula></p>
<fig id="sa3fig1">
<label>Author response image 1.</label>
<caption>
<title>cos angles for selection vectors computed using two methods in RNN with different size.</title>
<p>Black bars indicate median values.</p>
</caption>
<graphic mime-subtype="jpg" xlink:href="elife-103636-sa3-fig1.jpg" mimetype="image"/>
</fig>
<p>We repeated this process 1000 times for each 𝑁 and measured the cosine angle between these two selection vectors. As shown in Author response image 1, as 𝑁 increases, the cosine angles approach 1 more consistently, indicating that the two selection vectors become nearly equivalent in larger RNNs. Conversely, smaller RNNs display more pronounced finite-size effects, which accounts for indices slightly below 1.</p>
<disp-quote content-type="editor-comment">
<p><bold>Reviewer 2 (Public review):</bold></p>
<p>The introduction could have been written in a more accessible manner for any non-expert readers.</p>
</disp-quote>
<p>We sincerely thank the reviewer for the constructive feedback on the introduction and have revised it accordingly.</p>
<disp-quote content-type="editor-comment">
<p><bold>Reviewer #2 (Recommendations for the authors):</bold></p>
<p>The level of mastery of the low-rank framework is altogether impressive. I need however to point to a technical detail. The derivations of the information flow assume that the vectors m and vectors I are orthogonal (e.g. in Equation 14). This is not necessarily the case in trained networks, and Figure 2F suggests this is not the case in the trained rank 1 network. In that situation, the overlap between m and I leads to an additional term in the Equation going directly from the input to the output vector (see, e.g., Equation 15 in Beiran et al. Neuron 2023). In general, these kind of overlaps can contribute an additional pathway in higher rank networks too.</p>
</disp-quote>
<p>We thank the reviewer for the valuable comments. The derivations presented in Equation 14 do not actually require that the vectors 𝒎 and 𝑰 are orthogonal. Rather, our definition of the task variable differs slightly from the one in Beiran et al. (2023). Consider a rank-1 RNN with a single input channel:</p>
<disp-formula id="sa3equ2">
<graphic mime-subtype="jpg" xlink:href="elife-103636-sa3-equ2.jpg" mimetype="image"/>
</disp-formula>
<fig id="sa3fig2">
<label>Author response image 2.</label>
<caption>
<title>Difference of the definition of task variable with previous work.</title>
<p>(A) Our definition of task variable. (B) Definition of task variable in Beiran et al. 2023.</p>
</caption>
<graphic mime-subtype="jpg" xlink:href="elife-103636-sa3-fig2.jpg" mimetype="image"/>
</fig>
<p>As long as 𝒎 and 𝑰 are linearly independent, the state 𝒙(𝑡) can be uniquely written as a linear combination of the two vectors (Author response image 2):</p>
<disp-formula id="sa3equ3">
<graphic mime-subtype="jpg" xlink:href="elife-103636-sa3-equ3.jpg" mimetype="image"/>
</disp-formula>
<p>where <inline-formula id="sa3equ4"><inline-graphic xlink:href="elife-103636-sa3-equ4.jpg" mimetype="image" mime-subtype="jpeg"/></inline-formula> and <inline-formula id="sa3equ5"><inline-graphic xlink:href="elife-103636-sa3-equ5.jpg" mimetype="image" mime-subtype="jpeg"/></inline-formula> are the task variables associated with 𝒎 and 𝑰, respectively. Substituting this expression into the dynamical equations yields:</p>
<disp-formula id="sa3equ6">
<graphic mime-subtype="jpg" xlink:href="elife-103636-sa3-equ6.jpg" mimetype="image"/>
</disp-formula>
<disp-formula id="sa3equ7">
<graphic mime-subtype="jpg" xlink:href="elife-103636-sa3-equ7.jpg" mimetype="image"/>
</disp-formula>
<p>Hence, there is no additional term directly linking the input to the output vector in our formulation. By contrast, in Beiran et al. (2023), the input vector 𝑰 is decomposed into components parallel (𝐼//) and perpendicular (𝑰-) to 𝒎, and the task variables <inline-formula id="sa3equ8"><inline-graphic xlink:href="elife-103636-sa3-equ8.jpg" mimetype="image" mime-subtype="jpeg"/></inline-formula> are defined as (Figure 4-figure supplement 3B):</p>
<disp-formula id="sa3equ9">
<graphic mime-subtype="jpg" xlink:href="elife-103636-sa3-equ9.jpg" mimetype="image"/>
</disp-formula>
<p>This leads to dynamics of the form:</p>
<disp-formula id="sa3equ10">
<graphic mime-subtype="jpg" xlink:href="elife-103636-sa3-equ10.jpg" mimetype="image"/>
</disp-formula>
<disp-formula id="sa3equ11">
<graphic mime-subtype="jpg" xlink:href="elife-103636-sa3-equ11.jpg" mimetype="image"/>
</disp-formula>
<p>thus creating an additional direct term from the input to the output vector under their definition.</p>
<disp-quote content-type="editor-comment">
<p>The designed rank 3 network relies on a multi-population structure. This is explained clearly in the methods, but it could be stressed more in the main text to dispel the notion that higherrank networks may not need a multi-population structure to perform this task (cf Dubreuil et al 2022).</p>
</disp-quote>
<p>Thank you for the valuable comments. In the revised version, we emphasize this point by adding the following sentence: “our rank-3 network relies on a multi-population structure, consistent with the notion that higher-rank networks still require a multi-population structure to perform flexible computations (Dubreuil et al. 2022)”. See Lines 238-240.</p>
<disp-quote content-type="editor-comment">
<p>(3) An important result in Pagan et al and Mante et al is that the line attractor direction is invariant across contexts. I believe this is explicitly enforced in the models studied here, but this could be made more clear. It would be interesting to discuss the importance of this constraint.</p>
</disp-quote>
<p>We thank the reviewer for the valuable comments. In our hand-crafted RNN examples (Figures 3– 6), we enforce the choice axis to be identical across the two contexts (Figure R4B). Even in the rank-1 example (Figure 2), where we analyze a trained RNN, the choice axis still shows a substantial overlap between the two contexts (Figure R4A). However, in the trained vanilla RNNs shown in Figure 7, when the regularization term is relatively small, the overlap in the choice axis between contexts is smaller (Figure R4C)—i.e., the line attractor direction shifts between different contexts.</p>
<fig id="sa3fig3">
<label>Author response image 3.</label>
<caption>
<title>Cosine angle between the choice axes in two contexts for different RNNs.</title>
<p>(A) Rank-1 RNNs in Figure 2. (B) Rank-3 RNNs in Figure 3-6. (C) Vanilla RNNs in Figure 7.</p>
</caption>
<graphic mime-subtype="jpg" xlink:href="elife-103636-sa3-fig3.jpg" mimetype="image"/>
</fig>
<p>Our theoretical framework can also accommodate situations where the direction of the choice axis changes. For instance, consider the rank-3 RNN in Figure 6, where the choice axis <inline-formula id="sa3equ12"><inline-graphic xlink:href="elife-103636-sa3-equ12.jpg" mimetype="image" mime-subtype="jpeg"/></inline-formula> is defined as <inline-formula id="sa3equ13"><inline-graphic xlink:href="elife-103636-sa3-equ13.jpg" mimetype="image" mime-subtype="jpeg"/></inline-formula> with 𝐺 being a diagonal matrix whose elements represent the slopes of each neuron’s activation function. Since these slopes can change across contexts, <inline-formula id="sa3equ14"><inline-graphic xlink:href="elife-103636-sa3-equ14.jpg" mimetype="image" mime-subtype="jpeg"/></inline-formula> itself can vary across contexts. Likewise, the input representation direction may be written as <inline-formula id="sa3equ15"><inline-graphic xlink:href="elife-103636-sa3-equ15.jpg" mimetype="image" mime-subtype="jpeg"/></inline-formula>, allowing both the choice axis and the input axis to adapt to the context. The selection vector is given by:</p>
<disp-formula id="sa3equ16">
<graphic mime-subtype="jpg" xlink:href="elife-103636-sa3-equ16.jpg" mimetype="image"/>
</disp-formula>
<p>Here, we no longer assume that <inline-formula id="sa3equ17"><inline-graphic xlink:href="elife-103636-sa3-equ17.jpg" mimetype="image" mime-subtype="jpeg"/></inline-formula> is context-invariant; rather, we only assume its norm <inline-formula id="sa3equ18"><inline-graphic xlink:href="elife-103636-sa3-equ18.jpg" mimetype="image" mime-subtype="jpeg"/></inline-formula> remains the same across contexts. Under this weaker assumption, we still have</p>
<disp-formula id="sa3equ19">
<graphic mime-subtype="jpg" xlink:href="elife-103636-sa3-equ19.jpg" mimetype="image"/>
</disp-formula>
<disp-formula id="sa3equ20">
<graphic mime-subtype="jpg" xlink:href="elife-103636-sa3-equ20.jpg" mimetype="image"/>
</disp-formula>
<p>Substituting these into the equations yields the following expressions for input modulation and selection vector modulation:</p>
<disp-formula id="sa3equ21">
<graphic mime-subtype="jpg" xlink:href="elife-103636-sa3-equ21.jpg" mimetype="image"/>
</disp-formula>
<disp-formula id="sa3equ22">
<graphic mime-subtype="jpg" xlink:href="elife-103636-sa3-equ22.jpg" mimetype="image"/>
</disp-formula>
<disp-quote content-type="editor-comment">
<p>Figure 6B: it was not clear to me what exactly is plotted here.</p>
</disp-quote>
<p>We thank the reviewer for pointing out the missing explanation. In Figure 6B, we show the distribution of the cosine angles between two ways of computing the selection vector for randomly generated rank-3 RNNs. Specifically, We generate 1000 RNNs according to the procedure in Figure 5C, with each RNN defined by parameters 𝛼 , 𝛽 and 𝛾 independently sampled from a Uniform(0,1) distribution. For each RNN, we computed the selection vector for the RNN in a given context (e.g., context 1 or 2) in two ways:</p>
<p>(1)  via linearized dynamical system analysis following Mante et al. (2013), producing the selection vector sv&lt;supclassical (classical in Figure 6B),</p>
<p>(2)  using the theoretical derivation <inline-formula id="sa3equ23"><inline-graphic xlink:href="elife-103636-sa3-equ23.jpg" mimetype="image" mime-subtype="jpeg"/></inline-formula> (“our’s” in Figure 6B)</p>
<p>We repeated this process 1000 times and measured the cosine angle between these two selection vectors and plot the resulting distribution for context 1 (gray) and context 2 (blue) in Figure 6B. The figure shows that the computed selection vectors via the two methods are almost equal, as evidenced by the cosine angles clustering very close to 1.</p>
<p>We have revised it accordingly. See Lines 1135-1143.</p>
<disp-quote content-type="editor-comment">
<p>In Figure 7, how was the effective dimension of vanilla RNNs controlled or varied? The metric used (effective dimension) is relatively non-standard, it would be useful to give some intuition to the reader about it.</p>
</disp-quote>
<p>We thank the reviewer for these valuable comments.</p>
<p>Controlling the effective dimension</p>
<p>When train vanilla RNNs, we included a regularization term in the loss function of the form</p>
<disp-formula id="sa3equ24">
<graphic mime-subtype="jpg" xlink:href="elife-103636-sa3-equ24.jpg" mimetype="image"/>
</disp-formula>
<p>where 𝑤536 is a regularization coefficient. By adjusting 𝑤536, we can influence the distribution of singular values of connectivity of 𝐽. When <italic>w<sub>reg</sub></italic> is larger, the learned 𝐽 tends to have fewer large singular values, hence with lower effectivity dimension; when 𝑤536 is small, more singular values remain large, increasing the matrix’s effective dimension.</p>
<p>Definition and intuition: effective dimension</p>
<p>Consider a connectivity matrix 𝐽 with singular values <inline-formula id="sa3equ25"><inline-graphic xlink:href="elife-103636-sa3-equ25.jpg" mimetype="image" mime-subtype="jpeg"/></inline-formula>. The matrix’s rank is the number of nonzero singular values. However, rank alone can overlook differences in how quickly those singular values decay. To capture this, we define the effective dimension as:</p>
<disp-formula id="sa3equ26">
<graphic mime-subtype="jpg" xlink:href="elife-103636-sa3-equ26.jpg" mimetype="image"/>
</disp-formula>
<p>Each term lies between 0 and 1, so the effective dimension satisfies:</p>
<disp-formula id="sa3equ27">
<graphic mime-subtype="jpg" xlink:href="elife-103636-sa3-equ27.jpg" mimetype="image"/>
</disp-formula>
<p>When all nonzero singular values are equal, edim(𝐽) equals the matrix rank. But if some singular values are much smaller than others, effective dimension will be closer to 1. For example:</p>
<p>-  𝐽<sub>1</sub> has nonzero singular values (1, 0.1, 0.01). Its effective dimension is 1.0101, indicating that most of the variance is captured by the largest singular value.</p>
<p>-  𝐽sub&gt;0 has nonzero singular values (1, 0.8, 0.7). Its effective dimension is 2.13, which reflects that multiple singular values contribute significantly.</p>
<p>Hence, while both &gt;𝐽<sub>1</sub> and 𝐽sub&gt;0 are rank-3 matrices, their effective dimensions highlight the difference in how each matrix distributes its variance.</p>
<p>We have added the intuition underlying this concept in Methods (see Lines 1135-1143). We thank the reviewer for improving the clarity of our work.</p>
<p>Eqs 19&amp;21: n^T_r should be n^T_dv?</p>
<p>Thank you for point out this mistake. We have fixed it in the revised version.</p>
</body>
</sub-article>
</article>