<?xml version="1.0" ?><!DOCTYPE article PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Archiving and Interchange DTD v1.3 20210610//EN"  "JATS-archivearticle1-mathml3.dtd"><article xmlns:ali="http://www.niso.org/schemas/ali/1.0/" xmlns:xlink="http://www.w3.org/1999/xlink" article-type="research-article" dtd-version="1.3" xml:lang="en">
<front>
<journal-meta>
<journal-id journal-id-type="nlm-ta">elife</journal-id>
<journal-id journal-id-type="publisher-id">eLife</journal-id>
<journal-title-group>
<journal-title>eLife</journal-title>
</journal-title-group>
<issn publication-format="electronic" pub-type="epub">2050-084X</issn>
<publisher>
<publisher-name>eLife Sciences Publications, Ltd</publisher-name>
</publisher>
</journal-meta>
<article-meta>
<article-id pub-id-type="publisher-id">98033</article-id>
<article-id pub-id-type="doi">10.7554/eLife.98033</article-id>
<article-id pub-id-type="doi" specific-use="version">10.7554/eLife.98033.2</article-id>
<article-version-alternatives>
<article-version article-version-type="publication-state">reviewed preprint</article-version>
<article-version article-version-type="preprint-version">1.3</article-version>
</article-version-alternatives>
<article-categories>
<subj-group subj-group-type="heading">
<subject>Computational and Systems Biology</subject>
</subj-group>
</article-categories>
<title-group>
<article-title>Semantical and Geometrical Protein Encoding Toward Enhanced Bioactivity and Thermostability</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author" equal-contrib="yes">
<name>
<surname>Tan</surname>
<given-names>Yang</given-names>
</name>
<xref ref-type="aff" rid="a1">1</xref>
<xref ref-type="aff" rid="a2">2</xref>
<xref ref-type="aff" rid="a5">5</xref>
<xref ref-type="author-notes" rid="n1">†</xref>
</contrib>
<contrib contrib-type="author" equal-contrib="yes" corresp="yes">
<name>
<surname>Zhou</surname>
<given-names>Bingxin</given-names>
</name>
<xref ref-type="aff" rid="a1">1</xref>
<xref ref-type="aff" rid="a3">3</xref>
<xref ref-type="author-notes" rid="n1">†</xref>
<email>bingxin.zhou@sjtu.edu.cn</email>
</contrib>
<contrib contrib-type="author">
<name>
<surname>Zheng</surname>
<given-names>Lirong</given-names>
</name>
<xref ref-type="aff" rid="a1">1</xref>
</contrib>
<contrib contrib-type="author">
<name>
<surname>Fan</surname>
<given-names>Guisheng</given-names>
</name>
<xref ref-type="aff" rid="a2">2</xref>
</contrib>
<contrib contrib-type="author" corresp="yes">
<name>
<surname>Hong</surname>
<given-names>Liang</given-names>
</name>
<xref ref-type="aff" rid="a1">1</xref>
<xref ref-type="aff" rid="a3">3</xref>
<xref ref-type="aff" rid="a4">4</xref>
<xref ref-type="aff" rid="a5">5</xref>
<email>hongl3liang@sjtu.edu.cn</email>
</contrib>
<aff id="a1"><label>1</label><institution>Institute of Natural Sciences, Shanghai Jiao Tong University</institution>, <city>Shanghai</city>, <country>China</country></aff>
<aff id="a2"><label>2</label><institution>School of Information Science and Engineering, East China University of Science and Technology</institution>, <city>Shanghai</city>, <country>China</country></aff>
<aff id="a3"><label>3</label><institution>Shanghai National Center for Applied Mathematics (SJTU center), Shanghai Jiao Tong University</institution>, <city>Shanghai</city>, <country>China</country></aff>
<aff id="a4"><label>4</label><institution>Zhangjiang Institute for Advanced Study, Shanghai Jiao Tong University</institution>, <city>Shanghai</city>, <country>China</country></aff>
<aff id="a5"><label>5</label><institution>Shanghai Artificial Intelligence Laboratory</institution>, <city>Shanghai</city>, <country>China</country></aff>
</contrib-group>
<contrib-group content-type="section">
<contrib contrib-type="editor">
<name>
<surname>Koo</surname>
<given-names>Peter</given-names>
</name>
<role>Reviewing Editor</role>
<aff>
<institution-wrap>
<institution>Cold Spring Harbor Laboratory</institution>
</institution-wrap>
<city>Cold Spring Harbor</city>
<country>United States of America</country>
</aff>
</contrib>
<contrib contrib-type="senior_editor">
<name>
<surname>Cui</surname>
<given-names>Qiang</given-names>
</name>
<role>Senior Editor</role>
<aff>
<institution-wrap>
<institution>Boston University</institution>
</institution-wrap>
<city>Boston</city>
<country>United States of America</country>
</aff>
</contrib>
</contrib-group>
<author-notes>
<fn id="n1" fn-type="equal"><label>†</label><p>These authors contributed equally to this work</p></fn>
</author-notes>
<pub-date date-type="original-publication" iso-8601-date="2024-06-25">
<day>25</day>
<month>06</month>
<year>2024</year>
</pub-date>
<pub-date date-type="update" iso-8601-date="2024-10-18">
<day>18</day>
<month>10</month>
<year>2024</year>
</pub-date>
<volume>13</volume>
<elocation-id>RP98033</elocation-id>
<history>
<date date-type="sent-for-review" iso-8601-date="2024-03-28">
<day>28</day>
<month>03</month>
<year>2024</year>
</date>
</history>
<pub-history>
<event>
<event-desc>Preprint posted</event-desc>
<date date-type="preprint" iso-8601-date="2024-03-19">
<day>19</day>
<month>03</month>
<year>2024</year>
</date>
<self-uri content-type="preprint" xlink:href="https://doi.org/10.1101/2023.12.01.569522"/>
</event>
<event>
<event-desc>Reviewed preprint v1</event-desc>
<date date-type="reviewed-preprint" iso-8601-date="2024-06-25">
<day>25</day>
<month>06</month>
<year>2024</year>
</date>
<self-uri content-type="reviewed-preprint" xlink:href="https://doi.org/10.7554/eLife.98033.1"/>
<self-uri content-type="editor-report" xlink:href="https://doi.org/10.7554/eLife.98033.1.sa2">eLife assessment</self-uri>
<self-uri content-type="referee-report" xlink:href="https://doi.org/10.7554/eLife.98033.1.sa1">Reviewer #1 (Public Review):</self-uri>
<self-uri content-type="referee-report" xlink:href="https://doi.org/10.7554/eLife.98033.1.sa0">Reviewer #2 (Public Review):</self-uri>
</event>
</pub-history>
<permissions>
<copyright-statement>© 2024, Tan et al</copyright-statement>
<copyright-year>2024</copyright-year>
<copyright-holder>Tan et al</copyright-holder>
<ali:free_to_read/>
<license xlink:href="https://creativecommons.org/licenses/by/4.0/">
<ali:license_ref>https://creativecommons.org/licenses/by/4.0/</ali:license_ref>
<license-p>This article is distributed under the terms of the <ext-link ext-link-type="uri" xlink:href="https://creativecommons.org/licenses/by/4.0/">Creative Commons Attribution License</ext-link>, which permits unrestricted use and redistribution provided that the original author and source are credited.</license-p>
</license>
</permissions>
<self-uri content-type="pdf" xlink:href="elife-preprint-98033-v2.pdf"/>
<abstract>
<title>Abstract</title>
<p>Protein engineering is a pivotal aspect of synthetic biology, involving the modification of amino acids within existing protein sequences to achieve novel or enhanced functionalities and physical properties. Accurate prediction of protein variant effects requires a thorough understanding of protein sequence, structure, and function. Deep learning methods have demonstrated remarkable performance in guiding protein modification for improved functionality. However, existing approaches predominantly rely on protein sequences, which face challenges in efficiently encoding the geometric aspects of amino acids’ local environment and often fall short in capturing crucial details related to protein folding stability, internal molecular interactions, and bio-functions. Furthermore, there lacks a fundamental evaluation for developed methods in predicting protein thermostability, although it is a key physical property that is frequently investigated in practice. To address these challenges, this paper introduces a novel pre-training framework that integrates sequential and geometric encoders for protein primary and tertiary structures. This framework guides mutation directions toward desired traits by simulating natural selection on wild-type proteins and evaluates variant effects based on their fitness to perform specific functions. We assess the proposed approach using three benchmarks comprising over 300 deep mutational scanning assays. The prediction results showcase exceptional performance across extensive experiments when compared to other zero-shot learning methods, all while maintaining a minimal cost in terms of trainable parameters. This study not only proposes an effective framework for more accurate and comprehensive predictions to facilitate efficient protein engineering, but also enhances the <italic>in silico</italic> assessment system for future deep learning models to better align with empirical requirements. The PyTorch implementation are available at <ext-link ext-link-type="uri" xlink:href="https://github.com/tyang816/ProtSSN">https://github.com/tyang816/ProtSSN</ext-link>.</p>
</abstract>
<custom-meta-group>
<custom-meta specific-use="meta-only">
<meta-name>publishing-route</meta-name>
<meta-value>prc</meta-value>
</custom-meta>
</custom-meta-group>
</article-meta>
<notes>
<notes notes-type="competing-interest-statement">
<title>Competing Interest Statement</title><p>The authors have declared no competing interest.</p></notes>
<fn-group content-type="summary-of-updates">
<title>Summary of Updates:</title>
<fn fn-type="update"><p>add new experimental results from the latest baseline methods; additional investigations and justifications on the new benchmark datasets; revised contents for clearer presentation</p></fn>
</fn-group>
</notes>
</front>
<body>
<sec id="s1">
<title>Introduction</title>
<p>The diverse roles proteins play in nature necessitate their involvement in varied bio-functions, such as catalysis, binding, scaffolding, and transport (<xref ref-type="bibr" rid="c7">Frauenfelder and McMahon, 1998</xref>). Advances in science and technology have positioned proteins, particularly those with desired catalytic and binding properties, to pivotal positions in medicine, biology, and scientific research. While wild-type proteins exhibit optimal bio-functionality in their native environments, industrial applications often demand adaptation to conditions such as high temperature, high pressure, strong acidity, and strong alkalinity. The constrained efficacy of proteins in meeting the stringent requirements of industrial functioning environments hinders their widespread applications (<xref ref-type="bibr" rid="c60">Woodley, 2013</xref>; <xref ref-type="bibr" rid="c13">Ismail et al., 2021</xref>; <xref ref-type="bibr" rid="c69">Zheng et al., 2022</xref>; <xref ref-type="bibr" rid="c14">Jiang et al., 2023</xref>). Consequently, there arises a need to engineer these natural proteins to enhance their functionalities, aligning them with the demands of both industrial and scientific applications.</p>
<p>Analyzing the relationship between protein sequence and function yields valuable insights for engineering proteins with new or enhanced functions in synthetic biology. The intrinsic goal of protein engineering is to unveil highly functional sequences by navigating the intricate, high-dimensional surface of the fitness landscape (<xref ref-type="bibr" rid="c64">Yang et al., 2019</xref>), which delineates the relationship between amino acid (AA) sequences and the desired functional state. Predicting the effects of AA substitutions, insertions, and deletions (<xref ref-type="bibr" rid="c42">Riesselman et al., 2018</xref>; <xref ref-type="bibr" rid="c9">Gray et al., 2018</xref>; <xref ref-type="bibr" rid="c37">Notin et al., 2022a</xref>) in proteins, <italic>i.e</italic>., mutation, thus allows researchers to dissect how changes in the AA sequence can impact the protein’s catalytic efficiency, stability, and binding affinity (<xref ref-type="bibr" rid="c50">Shin et al., 2021</xref>). However, the extensive, non-contiguous search space of AA combinations poses challenges for conventional methods, such as rational design (<xref ref-type="bibr" rid="c1">Aprile et al., 2020</xref>) or directed evolution (<xref ref-type="bibr" rid="c59">Wang et al., 2021</xref>), in efficiently and effectively identifying protein variants with desired properties. In response, deep learning has emerged as a promising solution that proposes favorable protein variants with high fitness.</p>
<p>Deep learning approaches have been instrumental in advancing scientific insights into proteins, predominantly categorized into sequence-based and structure-based methods. Autoregressive protein language models (<xref ref-type="bibr" rid="c37">Notin et al., 2022a</xref>; <xref ref-type="bibr" rid="c29">Madani et al., 2023</xref>) interpret AA sequences as raw text to generate with self-attention mechanisms (<xref ref-type="bibr" rid="c55">Vaswani et al., 2017</xref>). Alternatively, masked language modeling objectives develop attention patterns that correspond to the residue-residue contact map of the protein (<xref ref-type="bibr" rid="c30">Meier et al., 2021</xref>; <xref ref-type="bibr" rid="c40">Rao et al., 2021a</xref>; <xref ref-type="bibr" rid="c43">Rives et al., 2021</xref>; <xref ref-type="bibr" rid="c58">Vig et al., 2021</xref>; <xref ref-type="bibr" rid="c2">Brandes et al., 2022</xref>; <xref ref-type="bibr" rid="c27">Lin et al., 2023</xref>). Other methods start from a multiple sequence alignment, summarizing the evolutionary patterns in target proteins (<xref ref-type="bibr" rid="c42">Riesselman et al., 2018</xref>; <xref ref-type="bibr" rid="c8">Frazer et al., 2021</xref>; <xref ref-type="bibr" rid="c41">Rao et al., 2021b</xref>). These methods result in a strong capacity for discovering the hidden protein space. However, the many-to-one relationship of both sequence-to-structure and structureto-function projections requires excessive training input or substantial learning resources, which raises concerns regarding the efficiency of these pathways when navigating the complexities of the vast sequence space associated with a target function. Moreover, the overlooked local environment of proteins hinders the model’s ability to capture structure-sensitive properties that impact protein’s thermostability, interaction with substrates, and catalytic process (<xref ref-type="bibr" rid="c68">Zhao et al., 2022</xref>; <xref ref-type="bibr" rid="c23">Koehler Leman et al., 2023</xref>). Alternatively, structure-based modeling methods serve as an effective enhancement to complement sequence-oriented inferences for proteins with their local environment (<xref ref-type="bibr" rid="c54">Torng and Altman, 2019</xref>; <xref ref-type="bibr" rid="c17">Jones et al., 2021</xref>; <xref ref-type="bibr" rid="c71">Zhou et al., 2023a</xref>; <xref ref-type="bibr" rid="c66">Yi et al., 2023</xref>). Given that core mutations often induce functional defects through subtle disruptions to structure or dynamics (<xref ref-type="bibr" rid="c46">Roscoe et al., 2013</xref>), incorporating protein geometry into the learning process can offer valuable insights into stabilizing protein functioning. Recent efforts have been made to encode geometric information of proteins for topology-sensitive tasks such as molecule binding (<xref ref-type="bibr" rid="c15">Jin et al., 2021</xref>; <xref ref-type="bibr" rid="c33">Myung et al., 2022</xref>; <xref ref-type="bibr" rid="c24">Kong et al., 2023</xref>) and protein properties prediction (<xref ref-type="bibr" rid="c67">Zhang et al., 2022</xref>). Nevertheless, structure encoders fall short in capturing non-local connections for AAs beyond their contact region and overlook correlations that do not conform to the ‘structure-function determination’ heuristic.</p>
<p>There is a pressing need to develop a novel framework that overcomes limitations inherent in individual implementations of sequence or structure-based investigations. To this end, we introduce ProtSSN to assimilate the semantics and topology of <bold>Prot</bold>eins from their <bold>S</bold>equence and <bold>S</bold>tructure with deep neural <bold>N</bold>etworks. ProtSSN incorporates the intermediate state of protein structures and facilitates the discovery of an efficient and effective trajectory for mapping protein sequences to functionalities. The developed model extends the generalization and robustness of self-supervised protein language models while maintaining low computational costs, thereby facilitating self-supervised training and task-specific customization. A funnel-shaped learning pipeline, as depicted in <xref rid="fig1" ref-type="fig">Fig. 1</xref>, is designed due to the limited availability of protein crystal structures compared to observed protein sequences. Initially, the linguistic embedding establishes the semantic and grammatical rules in AA chains by inspecting millions of protein sequences. The topological embedding then enhances the interactions among locally connected AAs. Since a geometry can be placed or observed by different angles and positions in space, we represent proteins’ topology by graphs and enhance the model’s robustness and efficiency with a rotation and translation equivariant graph representation learning scheme.</p>
<fig id="fig1" position="float" fig-type="figure">
<label>Figure 1.</label>
<caption><p>An illustration of ProtSSN that extracts the semantical and geometrical characteristics of a protein from its sequentially-ordered global construction and spatially-gathered local contacts with protein language models and equivariant graph neural networks. The encoded hidden representation can be used for downstream tasks such as variants effect prediction that recognizes the impact of mutating a few sites of a protein on its functionality.</p></caption>
<graphic xlink:href="569522v3_fig1.tif" mime-subtype="tiff" mimetype="image"/>
</fig>
<p>The pre-trained ProtSSN demonstrates its feasibility across a broad range of mutation effect prediction benchmarks covering catalysis, interaction, and thermostability. Mutation effects prediction serves as a common <italic>in silico</italic> assessment for evaluating the capability of an established deep learning framework in identifying favorable protein variants. With the continuous evolution of deep mutation scanning techniques and other high-throughput technologies, benchmark datasets have been curated to document fitness changes in mutants across diverse proteins with varying degrees of combinatorial and random modifications (<xref ref-type="bibr" rid="c32">Moal and Fernández-Recio, 2012</xref>; <xref ref-type="bibr" rid="c35">Nikam et al., 2021</xref>; <xref rid="c56" ref-type="bibr">Velecky et al., 2022</xref>). <bold>ProteinGym v1</bold> (<xref ref-type="bibr" rid="c37">Notin et al., 2023</xref>) comprehends fitness scoring of mutants to catalytic activity and binding affinity across over 200 well-studied proteins of varying deep mutational scanning (DMS) assays and taxa. Each protein includes tens of thousands of mutants documented from high-throughput screening techniques. While <bold>ProteinGym v1</bold> initiates the most comprehensive benchmark dataset for mutants toward different properties enhancement, these fitness scores are normalized and simplified into several classes without further specifications. For instance, a good portion of protein assays is scored by their stability, which, in practice, is further categorized into thermostability, photostability, pH-stability, <italic>etc</italic>. Moreover, these stability properties should be discussed under certain environmental conditions, such as pH and temperature. Unfortunately, these detailed attributes are excluded in <bold>ProteinGym v1</bold>. Since a trade-off relationship emerges between activity and thermostability (<xref ref-type="bibr" rid="c69">Zheng et al., 2022</xref>), protein engineering in practice extends beyond enhancing catalytic activities to maintaining or increasing thermostability for prolonged functional lifetimes and applications under elevated temperatures and chemical conditions (<xref ref-type="bibr" rid="c28">Liu et al., 2019</xref>). Consequently, there is a need to enrich mutation effect prediction benchmarks that evaluate the model’s efficacy in capturing variant effects concerning thermostability under distinct experimental conditions. In this study, we address the mutation effect prediction tasks on thermostability with <bold>DTm</bold> and <bold>DDG</bold>, two new single-site mutation benchmarks that measure thermostability using ΔTm and ΔΔG values, respectively. Both benchmarks group experimental assays based on the protein-condition combinations. These two datasets supplement the publicly available DMS assay benchmarks and facilitate ready-to-use assessment for future deep learning methods toward protein thermostability enhancement.</p>
<p>This work fulfills practical necessities in the development of deep learning methods for protein engineering from three distinct perspectives. Firstly, the developed ProtSSN employs selfsupervised learning during training to obviate the necessity for additional supervision in downstream tasks. This zero-shot scenario is desirable due to the scarcity of experimental results, as well as the ‘cold-start’ situation common in many wet lab experiments. Secondly, the trained model furnishes robust and meaningful approximations to the joint distribution of the entire amino acid chain, thereby augmenting the <italic>epistatic effect</italic> (<xref ref-type="bibr" rid="c47">Sarkisyan et al., 2016</xref>; <xref ref-type="bibr" rid="c20">Khersonsky et al., 2018</xref>) in deep mutations. This augmentation stems from the model’s consideration of the nonlinear combinatorial effects of amino acid sites. Additionally, we complement the existing dataset of DMS assay with additional benchmark assays related to protein-environment interactions, specifically focusing on thermostability–an integral objective in numerous protein engineering projects.</p>
</sec>
<sec id="s2">
<title>Materials and methods</title>
<p>This section starts by introducing the three mutational scanning benchmark datasets used in this study, including an open benchmark dataset <bold>ProteinGym v1</bold> and two new datasets on protein thermostability, <italic>i.e</italic>., <bold>DTm</bold> and <bold>DDG</bold>. We establish the proposed ProtSSN for protein sequences and structures encoding in Section Proposed Method. The overall pipeline of model training and inference is presented in Section Model Pipeline. The experimental setup for model evaluation is provided in Section Experimental Protocol.</p>
<sec id="s2a">
<title>Dataset</title>
<p>To evaluate model performance in predicting mutation effects, we compare ProtSSN with SOTA baselines on <bold>ProteinGym-v1</bold>, the largest open benchmark for DMS assays. We also introduce two novel benchmarks, <bold>DTm</bold> and <bold>DDG</bold>, for assessing protein thermostability under consistent control environments. Details of the new datasets are provided in <xref rid="tbl1" ref-type="table">Table 1</xref>. Considering the significant influence of experimental conditions on protein temperature, we explicitly note the pH environment in each assay. Refer to the following paragraphs for more details.</p>
<table-wrap id="tbl1" orientation="portrait" position="float">
<label>Table 1.</label>
<caption><title>Statistical summary of <bold>DTm</bold> and <bold>DDG</bold>.</title></caption>
<graphic xlink:href="569522v3_tbl1.tif" mime-subtype="tiff" mimetype="image"/>
</table-wrap>
<sec id="s2a1">
<title>ProteinGym</title>
<p>The assessment of ProtSSN for deep mutation effects prediction is conducted on <bold>ProteinGym v1</bold> (<xref ref-type="bibr" rid="c37">Notin et al., 2023</xref>). It is the most extensive protein substitution benchmark comprising 217 assays and more than 2.5<italic>M</italic> mutants. These DMS assays cover a broad spectrum of functional properties (<italic>e.g</italic>., ligand binding, aggregation, viral replication, and drug resistance) and span various protein families (<italic>e.g</italic>., kinases, ion channel proteins, transcription factors, and tumor suppressors) across different taxa (<italic>e.g</italic>., humans, other eukaryotes, prokaryotes, and viruses).</p>
</sec>
<sec id="s2a2">
<title>DTm</title>
<p>The assays in the first novel thermostability benchmark are sourced from single-site mutations in <bold>ProThermDB</bold> (<xref ref-type="bibr" rid="c35">Nikam et al., 2021</xref>). Each assay is named in the format ‘<italic>UniProt_ID-pH</italic>’. For instance, ‘<italic>O00095-8.0</italic>’ signifies mutations conducted and evaluated under pH 8.0 for protein <monospace>O00095</monospace>. The attributes include ‘mutant’, ‘score’, and ‘UniProt_ID’, with at least 10 mutants to ensure a meaningful evaluation. To concentrate on single-site mutations compared to wild-type proteins, we exclude records with continuous mutations. To avoid dealing with partial or misaligned protein structures resulting from incomplete wet experimental procedures, we employ UniProt ID to pair protein sequences with folded structures predicted by AlphaFold2 (<xref ref-type="bibr" rid="c18">Jumper et al., 2021</xref>) from <ext-link ext-link-type="uri" xlink:href="https://alphafold.ebi.ac.uk">https://alphafold.ebi.ac.uk</ext-link>. In total, <bold>DTm</bold> consists of 66 such protein-environment pairs and 2, 520 mutations.</p>
</sec>
<sec id="s2a3">
<title>DDG</title>
<p>The second novel thermostability benchmark is sourced from <bold>DDMut</bold> (<xref ref-type="bibr" rid="c72">Zhou et al., 2023b</xref>), where mutants are paired with their PDB documents. We thus employ crystal structures for proteins in <bold>DDG</bold> and conduct additional preprocessing steps for environmental consistency. In particular, we group mutants of the same protein under identical experimental conditions and examine the alignment between mutation sites and sequences extracted from crystal structures. We discard mutant records that cannot be aligned with the sequence loaded from the associated PDB document. After removing data points with fewer than 10 mutations, <bold>DDG</bold> comprises 36 data points and 829 mutations. As before, assays are named in the format ‘<italic>PDB_ID-pH-temperature</italic>’ to indicate the chemical condition (pH) and temperature (in Celsius) of the experiment on the protein. An example assay content is provided in <xref rid="fig2" ref-type="fig">Fig. 2</xref>.</p>
<fig id="fig2" position="float" fig-type="figure">
<label>Figure 2.</label>
<caption><p>An example source record of the mutation assay. The record is derived from DDG for the A chain of protein 1A7V, experimented at pH=6.5 and degree at 25<sup>°</sup>C.</p></caption>
<graphic xlink:href="569522v3_fig2.tif" mime-subtype="tiff" mimetype="image"/>
</fig>
</sec>
</sec>
<sec id="s2b">
<title>Proposed Method</title>
<p>Labeled data are usually scarce in biomolecule research, which demands designing a general selfsupervised model for predicting variant effects on unknown proteins and protein functions. We propose ProtSSN with a pre-training scheme that recovers residues from a given protein backbone structure with noisy local environment observations.</p>
<sec id="s2b1">
<title>Multi-level Protein Representation</title>
<sec id="s2b1a">
<title>Protein Primary Structure (Noisy)</title>
<p>Denote a given observation with resiude <inline-formula><inline-graphic xlink:href="569522v3_inline1.gif" mime-subtype="gif" mimetype="image"/></inline-formula>. We assume this arbitrary observation is undergoing random mutation toward a stable state. The training objective is to learn a revised state <bold><italic>v</italic></bold> that is less likely to be eliminated by natural selection due to unfavorable properties such as instability or inability to fold. The perturbed observation is defined by a multinomial distribution.
<disp-formula id="eqn1">
<graphic xlink:href="569522v3_eqn1.gif" mime-subtype="gif" mimetype="image"/>
</disp-formula>
where an AA in a protein chain has a chance of <italic>p</italic> to mutate to one of 20 AAs (including itself) following a <italic>replacement distribution</italic> <bold>Θ</bold>(⋅) and (1 − <italic>p</italic>) of remaining unchanged. We consider <italic>p</italic> as a tunable parameter and define <bold>Θ</bold>(⋅) by the frequency of residues observed in wild-type proteins.</p>
</sec>
<sec id="s2b1b">
<title>Protein Tertiary Structure</title>
<p>The geometry of a protein is described by 𝒢 = (𝒱, ℰ, <bold><italic>W</italic></bold><sub><italic>V</italic></sub>, <bold><italic>W</italic></bold><sub><italic>E</italic></sub>, <bold><italic>X</italic></bold><sub><italic>V</italic></sub>), which is a residue graph based on the <italic>k</italic>-nearest neighbor algorithm (<italic>k</italic>NN). Each node <italic>v</italic><sub><italic>i</italic></sub> ∈ 𝒱 represents an AA in the protein connected to up to <italic>k</italic> closest nodes within 30Å. Node attributes <bold><italic>W</italic></bold> <sub><italic>V</italic></sub> are hidden semantic embeddings of residues extracted by the semantic encoder (see Section Semantic Encoding of Global AA Contacts), and edge attributes <bold><italic>W</italic></bold> <sub><italic>E</italic></sub> ∈ ℝ<sup>93</sup> feature relationships of connected nodes based on inter-atomic distances, local N-C positions, and sequential position encoding (<xref ref-type="bibr" rid="c70">Zhou et al., 2024</xref>). Additionally, <bold><italic>X</italic></bold><sub><italic>V</italic></sub> records 3D coordinates of AAs in the Euclidean space, which plays a crucial role in the subsequent geometric embedding stage to preserve roto-translation equivariance.</p>
</sec>
</sec>
<sec id="s2b2">
<title>Semantic Encoding of Global AA Contacts</title>
<p>Although it is generally believed by the community that a protein’s sequence determines its biological function via the folded structure, following strictly to this singular pathway risks overlooking other unobserved yet potentially influential inter-atomic communications impacting protein fitness. Our proposed ProtSSN thus includes pairwise relationships for residues through an analysis of proteins’ primary structure from <inline-formula><inline-graphic xlink:href="569522v3_inline2.gif" mime-subtype="gif" mimetype="image"/></inline-formula> and embeds them into hidden representations <bold><italic>W</italic></bold> <sub><italic>V</italic></sub> for residues. At each iteration, the input sequences are modified randomly by (3) and then embedded via an <italic>Evolutionary Scale Modeling</italic> method, ESM-2 (<xref ref-type="bibr" rid="c27">Lin et al., 2023</xref>), which employs a BERT-style masked language modeling objective. This objective predicts the identity of randomly selected AAs in a protein sequence by observing their context within the remainder of the sequence. Alternative semantic encoding strategies are discussed in Section AA Perturbation Strategies.</p>
</sec>
<sec id="s2b3">
<title>Geometrical Encoding of Local AA Contacts</title>
<p>Proteins are structured in 3D space, which requires the geometric encoder to possess roto-translation equivariance to node positions as well as permutation invariant to node attributes. This design is vital to avoid the implementation of costly data augmentation strategies. We practice <italic>Equivariant Graph Neural Networks</italic> (EGNN) (<xref ref-type="bibr" rid="c48">Satorras et al., 2021</xref>) to acquire the hidden node representation <inline-formula><inline-graphic xlink:href="569522v3_inline3.gif" mime-subtype="gif" mimetype="image"/></inline-formula> and node coordinates <inline-formula><inline-graphic xlink:href="569522v3_inline4.gif" mime-subtype="gif" mimetype="image"/></inline-formula> at the <italic>l</italic> + 1th layer
<disp-formula id="eqn2">
<graphic xlink:href="569522v3_eqn2.gif" mime-subtype="gif" mimetype="image"/>
</disp-formula>
In these equations, <inline-formula><inline-graphic xlink:href="569522v3_inline5.gif" mime-subtype="gif" mimetype="image"/></inline-formula> represents the input edge attribute on 𝒱<sub><italic>ij</italic></sub>, which is not updated by the network. The propagation rules <italic>ϕ</italic><sub><italic>e</italic></sub>, <italic>ϕ</italic><sub><italic>x</italic></sub> and <italic>ϕ</italic><sub><italic>v</italic></sub> are defined by differentiable functions, <italic>e.g</italic>.multi-layer perceptrons (MLPs). The final hidden representation on nodes <inline-formula><inline-graphic xlink:href="569522v3_inline6.gif" mime-subtype="gif" mimetype="image"/></inline-formula> embeds the microenvironment and local topology of AAs, and it will be carried on by readout layers for label predictions.</p>
</sec>
</sec>
<sec id="s2c">
<title>Model Pipeline</title>
<p>ProtSSN is designed for protein engineering with a self-supervised learning scheme. The model is capable of conducting zero-shot variant effect prediction on an unknown protein, and it can generate the joint distribution for the residue of all AAs along the protein sequence of interest. This process accounts for the epistatic effect and concurrently returns all AA sites in a sequence. Below, we detail the workflow for training the zero-shot model and scoring the effect of a specific mutant.</p>
<sec id="s2c1">
<title>Training</title>
<p>The fundamental model architecture cascades a frozen sequence encoding module and a trainable tertiary structure encoder. The protein is represented by its sequence and structure characteristics, where the former is treated as plain text and the latter is formalized as a <italic>k</italic>NN graph with modelencoded node attributes, handcrafted edge attributes, and 3D positions of the corresponding AAs. Each input sequence <bold><italic>V</italic></bold> are first one-hot encoded by 33 tokens, comprising both AA residues and special tokens <xref ref-type="bibr" rid="c27">Lin et al. (2023</xref>). The ground truth sequences, during training, will be permuted into
<disp-formula id="eqn3">
<graphic xlink:href="569522v3_eqn3.gif" mime-subtype="gif" mimetype="image"/>
</disp-formula>
Here <inline-formula><inline-graphic xlink:href="569522v3_inline7.gif" mime-subtype="gif" mimetype="image"/></inline-formula> is the perturbed AA to be encoded by a protein language model, which analyses pairwise hidden relationships among AAs from the input protein sequence and produces a vector representation <inline-formula><inline-graphic xlink:href="569522v3_inline8.gif" mime-subtype="gif" mimetype="image"/></inline-formula> for each AA, <italic>i.e</italic>.,
<disp-formula id="eqn4">
<graphic xlink:href="569522v3_eqn4.gif" mime-subtype="gif" mimetype="image"/>
</disp-formula>
The language model LM<sub>frozen</sub>(⋅), ESM-2 (<xref ref-type="bibr" rid="c27">Lin et al., 2023</xref>) for instance, has been pre-trained on a massive protein sequence database (<italic>e.g</italic>., <bold>UniRef50</bold> (<xref ref-type="bibr" rid="c52">Suzek et al., 2015</xref>)) to understand the semantic and grammatical rules of wild-type proteins with high-dimensional AA-level long-short-range interactions. The independent perturbation on AA residues follows (1) operates in every epoch, which requires constant updates on the sequence embedding. To further enhance the interaction of locally connected AAs in the node representation, a stack of <italic>L</italic> EGNN layers is implemented on the input graph 𝒢 to yield
<disp-formula id="eqn5">
<graphic xlink:href="569522v3_eqn5.gif" mime-subtype="gif" mimetype="image"/>
</disp-formula>
During the pre-training phase for protein sequence recovery, the output layer <italic>ϕ</italic>(⋅) provides the probability of tokens in one of 33 types, <italic>i.e</italic>.,
<disp-formula id="eqn6">
<graphic xlink:href="569522v3_eqn6.gif" mime-subtype="gif" mimetype="image"/>
</disp-formula>
for a protein of <italic>n</italic> AAs. The model’s learnable parameters are refined by minimizing the crossentropy of the recovered AAs with respect to the ground-truth AAs in wild-type proteins:
<disp-formula id="eqn7">
<graphic xlink:href="569522v3_eqn7.gif" mime-subtype="gif" mimetype="image"/>
</disp-formula>
where <italic>L</italic> is the length of the sequence, <italic>n</italic> represents the position index within the sequence and each <italic>c</italic> corresponds to a potential type of token.</p>
</sec>
<sec id="s2c2">
<title>Inferencing</title>
<p>For a given wild-type protein and a set of mutants, the fitness scores of the mutants are derived from the joint distribution of the altered residues relative to the wild-type template. First, the wild-type protein sequence and structure are encoded into hidden representations following (4)(5). Unlike the pre-training process, here the residue in the wild-type protein is considered as a reference state and is compared with the predicted probability of AAs at the mutated site. Next, for a mutant with mutated sites 𝒯 (𝒯 ≥ 1), we define its fitness score <italic>F</italic><sub><italic>x</italic></sub> using the corresponding <italic>log-odds-ratio, i.e</italic>.,
<disp-formula id="eqn8">
<graphic xlink:href="569522v3_eqn8.gif" mime-subtype="gif" mimetype="image"/>
</disp-formula>
where <italic>y</italic><sub><italic>t</italic></sub> and <bold><italic>v</italic></bold><sub><italic>t</italic></sub> denote the mutated and wild-type residue of the <italic>r</italic>th AA.</p>
</sec>
</sec>
<sec id="s2d">
<title>Experimental Protocol</title>
<p>We validate the efficacy of ProtSSN on zero-shot mutation effect prediction tasks. The performance is compared with other SOTA models of varying numbers of trainable parameters. The implementations are programmed with <monospace>PyTorch-Geometric</monospace> (ver 2.2.0) and <monospace>PyTorch</monospace> (ver 1.12.1) and executed on an NVIDIA<sup>®</sup> Tesla A100 GPU with 6, 912 CUDA cores and 80GB HBM2 installed on an HPC cluster.</p>
<sec id="s2d1">
<title>Training Setup</title>
<p>ProtSSN is pre-trained on a non-redundant subset of <bold>CATH v4.3.0</bold> (<xref ref-type="bibr" rid="c39">Orengo et al., 1997</xref>) domains, which contains 30, 948 experimental protein structures with less than 40% sequence identity. We remove proteins that exceed 2, 000 AAs in length for efficiency. For each <italic>k</italic>NN protein graph, node features are extracted and updated by a frozen ESM2-t33 prefix model (<xref ref-type="bibr" rid="c27">Lin et al., 2023</xref>). Protein topology is inferred by a 6-layer EGNN (<xref ref-type="bibr" rid="c48">Satorras et al., 2021</xref>) with the hidden dimension tuned from {512, 768, 1280}. Adam (<xref ref-type="bibr" rid="c21">Kingma and Ba, 2015</xref>) is used for backpropagation with the learning rate set to 0.0001. To avoid training instability or CUDA out-of-memory, we limit the maximum input to 8, 192 AA tokens per batch, constituting approximately 32 graphs.</p>
</sec>
<sec id="s2d2">
<title>Baseline Methods</title>
<p>We undertake an extensive comparison with baseline methods of self-supervised sequence or structure-based models on the fitness of mutation effects prediction (<xref rid="tbl2" ref-type="table">Table 2</xref>). Sequence models employ position embedding strategies such as autoregression (RITA (<xref ref-type="bibr" rid="c10">Hesslow et al., 2022</xref>), Tranception (<xref ref-type="bibr" rid="c37">Notin et al., 2022a</xref>), and ProGen2 (<xref ref-type="bibr" rid="c34">Nijkamp et al., 2023</xref>)), masked language modeling (ESM-1b (<xref ref-type="bibr" rid="c43">Rives et al., 2021</xref>), ESM-1v (<xref ref-type="bibr" rid="c30">Meier et al., 2021</xref>), and ESM2 (<xref ref-type="bibr" rid="c27">Lin et al., 2023</xref>)), a combination of the both (ProtTrans (<xref ref-type="bibr" rid="c6">Elnaggar et al., 2021</xref>)), and convolutional modeling (CARP (<xref ref-type="bibr" rid="c63">Yang et al., 2022</xref>)). Additionally, we also compare with ESM-if1 (<xref ref-type="bibr" rid="c12">Hsu et al., 2022</xref>) which incorporates masked language modeling objectives with GVP (<xref ref-type="bibr" rid="c16">Jing et al., 2020</xref>), as well as MIF-ST (<xref ref-type="bibr" rid="c65">Yang et al., 2023</xref>) and SaProt <xref ref-type="bibr" rid="c51">Su et al. (2023</xref>) with both sequence and structure encoding.</p>
<table-wrap id="tbl2" orientation="portrait" position="float">
<label>Table 2.</label>
<caption><title>Details of Zero-shot Baseline Models.</title></caption>
<graphic xlink:href="569522v3_tbl2.tif" mime-subtype="tiff" mimetype="image"/>
</table-wrap>
<p>The majority of the performance comparison was conducted on zero-shot deep learning methods. However, for completeness, we also report a comparison with popular MSA-based methods, such as GEMME (<xref ref-type="bibr" rid="c25">Laine et al., 2019</xref>), Site-Independent (<xref ref-type="bibr" rid="c11">Hopf et al., 2017</xref>), EVmutation (<xref ref-type="bibr" rid="c11">Hopf et al., 2017</xref>), Wavenet (<xref ref-type="bibr" rid="c50">Shin et al., 2021</xref>), DeepSequence (<xref ref-type="bibr" rid="c42">Riesselman et al., 2018</xref>), and EVE (<xref ref-type="bibr" rid="c8">Frazer et al., 2021</xref>). Other deep learning methods use MSA for training or retrieval, including MSA-Transformer (<xref ref-type="bibr" rid="c41">Rao et al., 2021b</xref>), Tranception (<xref ref-type="bibr" rid="c37">Notin et al., 2022a</xref>) and TranceptEVE (<xref ref-type="bibr" rid="c38">&gt;Notin et al., 2022b</xref>).</p>
</sec>
<sec id="s2d3">
<title>Scoring Function</title>
<p>Following the convention, the fitness scores of the zero-shot models are calculated by the log-odds ratio in (8) for encoder methods, such as the proposed ProtSSN and the ProtTrans series models. For autoregressive and inverse folding models (<italic>e.g</italic>., Tranception and ProGen2) that predict the next token <italic>x</italic><sub><italic>i</italic></sub> based on the context of previous <italic>x</italic><sub>1:<italic>i</italic>−1</sub> tokens, the fitness score <italic>F</italic><sub><italic>x</italic></sub> of a mutated sequence <italic>y</italic> is computed via the log-likelihood ratio with the wild-type sequence <bold><italic>v</italic></bold>, <italic>i.e</italic>.,
<disp-formula id="eqn9">
<graphic xlink:href="569522v3_eqn9.gif" mime-subtype="gif" mimetype="image"/>
</disp-formula>
</p>
</sec>
<sec id="s2d4">
<title>Benchmark Datasets</title>
<p>We conduct a comprehensive comparison of deep learning predictions on hundreds of DMS assays concerning different protein types and biochemical assays. We prioritize experimentally measured properties that possess a monotonic relationship with protein fitness, such as catalytic activity, binding affinity, expression, and thermostability. In particular, <bold>ProteinGym v1</bold> (<xref ref-type="bibr" rid="c37">Notin et al., 2023</xref>) groups 5 sets of protein properties from 217 assays. Two new datasets named <bold>DTm</bold> and <bold>DDG</bold> examine 102 environment-specific assays with thermostability scores. In total, 319 assays with around 2.5 million mutants are scored. To better understand the novelty of the proposed ProtSSN, we designed additional investigations on <bold>ProteinGym v0</bold> (<bold><italic><xref ref-type="bibr" rid="c37">Notin et al., 2022a</xref></italic></bold>), an early-release version of <bold>ProteinGym</bold> with 1.5<italic>M</italic> missense variants across 86 assays (excluding one assay that failed to be folded by both AlphaFold2 and ESMFold, <italic>i.e</italic>., <monospace>A0A140D2T1_ZIKV_Sourisseau_growth_2019</monospace>).</p>
</sec>
<sec id="s2d5">
<title>Evaluation Metric</title>
<p>We evaluate the performance of pre-trained models on a diverse set of proteins and protein functions using Spearman’s <italic>ρ</italic> correlation that measures the strength and direction of the monotonic relationship between two ranked sequences, <italic>i.e</italic>., experimentally evaluated mutants and modelinferred mutants (<xref ref-type="bibr" rid="c30">Meier et al., 2021</xref>; <xref ref-type="bibr" rid="c37">Notin et al., 2022a</xref>; <xref ref-type="bibr" rid="c8">Frazer et al., 2021</xref>; <xref ref-type="bibr" rid="c70">Zhou et al., 2024</xref>). This non-parametric rank measure is robust to outliers and asymmetry in mutation scores, and it does not assume any specific distribution of mutation fitness scores. The scale of <italic>ρ</italic> ranges from −1 to 1, indicating the negative or positive correlation of the predicted sequence to the ground truth. The prediction is preferred if its <italic>ρ</italic> to the experimentally examined ground truth is close to 1.</p>
</sec>
</sec>
</sec>
<sec id="s3">
<title>Results</title>
<sec id="s3a">
<title>Variant Effect Prediction</title>
<p>We commence our investigation by assessing the predictive performance of ProtSSN on four benchmark datasets using state-of-the-art (SOTA) protein learning models. We deploy different versions of ProtSSN that learns <italic>k</italic>NN graphs with <italic>k</italic> ∈ {10, 20, 30} and <italic>h</italic> ∈ {512, 768, 1, 280} hidden neurons in each of the 6 EGNN layers. For all baselines, their performance on <bold>DTm</bold> and <bold>DDG</bold> are reproduced with the official implementation listed in <xref rid="tbl2" ref-type="table">Table 2</xref>, and the scores on <bold>ProteinGym v1</bold> are retrieved from <ext-link ext-link-type="uri" xlink:href="https://proteingym.org/benchmarks">https://proteingym.org/benchmarks</ext-link> by <xref ref-type="bibr" rid="c37">Notin et al. (2023</xref>). As visualized in <xref rid="fig3" ref-type="fig">Fig. 3</xref> and reported in <xref rid="tbl3" ref-type="table">Table 3</xref>, ProtSSN demonstrated exceptional predictive performance with a significantly smaller number of trainable parameters when predicting the function and thermostability of mutants.</p>
<table-wrap id="tbl3" orientation="portrait" position="float">
<label>Table 3.</label>
<caption><title>Spearman’s <italic>ρ</italic> correlation of variant effect prediction by with zero-shot methods on <bold>DTm, DDG</bold>, and <bold>ProteinGym v1</bold>.</title></caption>
<graphic xlink:href="569522v3_tbl3.tif" mime-subtype="tiff" mimetype="image"/>
</table-wrap>
<fig id="fig3" position="float" fig-type="figure">
<label>Figure 3.</label>
<caption><p>Number of trainable parameters and Spearman’s <italic>ρ</italic> correlation on <bold>DTm, DDG</bold>, and <bold>ProteinGym v1</bold>, with the medium value located by the dashed lines. Dot, cross, and diamond markers represent sequence-based, structure-based, and sequence-structure models, respectively.</p></caption>
<graphic xlink:href="569522v3_fig3.tif" mime-subtype="tiff" mimetype="image"/>
</fig>
<p>Compared to protein language models (<xref rid="fig3" ref-type="fig">Fig. 3</xref>, colored circles), ProtSSN benefits from abundant structure information to more accurately capture the overall protein characteristics, resulting in enhanced thermostability and thus achieving higher correlation scores on <bold>DTm</bold> and <bold>DDG</bold>. This is attributed to the compactness of the overall architecture as well as the presence of stable local structures such as alpha helices and beta sheets, both of which are crucial to protein thermostability by providing a framework that resists unfolding at elevated temperatures (<xref ref-type="bibr" rid="c45">Robinson-Rechavi et al., 2006</xref>). Consequently, the other two structures-involved models, <italic>i.e</italic>., ESM-if1 and MIF-ST, also exhibit higher performance on the two thermostability benchmarks.</p>
<p>On the other hand, although protein language models can typically increase their scale, <italic>i.e</italic>., the number of trainable parameters, to capture more information from sequences, they cannot fully replace the role of the structure-based analysis. This observation aligns with the mechanism of protein functionality, where local structures (such as binding pockets and catalytic pockets) and the overall structure (such as conformational changes and allosteric effect) are both crucial for binding and catalysis (<xref ref-type="bibr" rid="c49">Sheng et al., 2014</xref>). Unlike the thermostability benchmarks, the discrepancies between structure-involved models and protein language models are mitigated in <bold>ProteinGym v1</bold> by increasing the model scale. In summary, structure-based and sequence-based methods are suitable for different types of assays, but a comprehensive framework (such as ProtSSN) demonstrates superior overall performance compared to large-scale language models. Moreover, ProtSSN demonstrates consistency in providing high-quality fitness predictions of thermostability. We randomly bootstrap 50% of the samples from <bold>DTm</bold> and <bold>DDG</bold> for ten independent runs, the results are reported In <xref rid="tbl6" ref-type="table">Table 6</xref> for both the average performance and the standard deviation. ProtSSN achieves top performance with minimal variance.</p>
</sec>
<sec id="s3b">
<title>Ablation Study</title>
<p>The effectiveness of ProtSSN with different modular designs is examined by its performance on the early released version <bold>ProteinGym v0</bold> (<xref ref-type="bibr" rid="c37">Notin et al., 2022a</xref>) with 86 DMS assays. The complete comparison of baseline comparison on <bold>ProteinGym v0</bold> is detailed in Table S1 in SI. For the ablation study, the results are summarized in <xref rid="fig4" ref-type="fig">Fig. 4(a)-(d)</xref> and detailed in Table S2, where each record is subject to a combination of key arguments under investigation. For instance, in the top orange box of <xref rid="fig4" ref-type="fig">Fig. 4(a)</xref>, we report all ablation results that utilize 6 EGNN layers for graph convolution, regardless of the different scales of ESM-2 or the definitions of node attributes. For all modules investigated in this section, we separately discuss their influence on predicting mutation effects when modifying a single site or an arbitrary number of sites. The two cases are marked on the y-axis by single’ and ‘all’, respectively.</p>
<fig id="fig4" position="float" fig-type="figure">
<label>Figure 4.</label>
<caption><p>Ablation Study on <bold>ProteinGym v0</bold> with different modular settings of ProtSSN. Each record represents the average Spearman’s correlation of all assays. (a) Performance using different structure encoders: EGNN (orange) versus GCN/GAT (purple); (b) Performance using different node attributes: ESM2-embedded hidden representation (orange) versus one-hot encoding (purple); (c) Performance with varying numbers of EGNN layers; (d) Performance with different versions of ESM2 for sequence encoding; (e) Performance using different amino acid perturbation strategies during pre-training.</p></caption>
<graphic xlink:href="569522v3_fig4.tif" mime-subtype="tiff" mimetype="image"/>
</fig>
<sec id="s3b1">
<title>Inclusion of Roto-Translation Equivariance</title>
<p>We assess the effect of incorporating rotation and translation equivariance for protein geometric and topological encoding. Three types of graph convolutions are compared, including GCN (<xref ref-type="bibr" rid="c22">Kipf and Welling, 2017</xref>), GAT (<xref ref-type="bibr" rid="c57">Veličković et al., 2018</xref>), and EGNN (<xref ref-type="bibr" rid="c48">Satorras et al., 2021</xref>). The first two are classic non-equivariant graph convolutional methods, and the last one, which we apply in the main algorithm, preserves roto-translation equivariance. We fix the number of EGNN layers to 6 and examine the performance of the other two methods with either 4 or 6 layers. We find that integrating equivariance when embedding protein geometry would significantly improve prediction performance.</p>
</sec>
<sec id="s3b2">
<title>Sequence Encoding</title>
<p>We next investigate the benefits of defining data-driven node attributes for protein representation learning. We compare the performance of models trained on two sets of graph inputs: the first set defines its AA node attributes through trained ESM2 (<xref ref-type="bibr" rid="c27">Lin et al., 2023</xref>), while the second set uses one-hot encoded AAs for each node. A clear advantage of using hidden representations by prefix models over hardcoded attributes is evident from the results presented in <xref rid="fig4" ref-type="fig">Fig. 4(b)</xref>.</p>
</sec>
<sec id="s3b3">
<title>Depth of EGNN</title>
<p>Although graph neural networks can extract topological information from geometric inputs, it is vital to select an appropriate number of layers for the module to deliver the most expressive node representation without encountering the oversmoothing problem. We investigate a wide range of choices for the number of EGNN layers among {6, 12, 18}. As reported in <xref rid="fig4" ref-type="fig">Fig. 4(c)</xref>, embedding graph topology with deeper networks does not lead to performance improvements. A moderate choice of 6 EGNN layers is sufficient for our learning task.</p>
</sec>
<sec id="s3b4">
<title>Scale of ESM</title>
<p>We also evaluate ProtSSN on different choices of language embedding dimensions to study the trade-off between computational cost and input richness. Various scales of prefix models, including {8, 150, 650, 3000} millions of parameters, have been applied to produce different sequential embeddings with {320, 640, 1280, 2560} dimensions, respectively. <xref rid="fig4" ref-type="fig">Fig. 4(d)</xref> reveals a clear preference for ESM2-t33, which employs 650 million parameters to achieve optimal model performance with the best stability. Notably, a higher dimension and richer semantic expression do not always yield better performance. A performance degradation is observed at ESM2 with 3 billion parameters.</p>
</sec>
</sec>
<sec id="s3c">
<title>AA Perturbation Strategies</title>
<p>ProtSSN utilizes noise sampling at each epoch on the node attributes to emulate random mutations in nature. This introduction of noise directly affects the node attribute input to the graphs. Alongside the ‘mutate-then-recode’ method we implemented in the main algorithm, we examined four additional strategies to perturb the input data during training. The construction of these additional strategies is detailed below, and their corresponding Spearman’s <italic>ρ</italic> on <bold>ProteinGym v0</bold> is in <xref rid="fig4" ref-type="fig">Fig. 4(e)</xref>.</p>
<sec id="s3c1">
<title>Global Average</title>
<p>Suppose the encoded sequential representation of a node is predominantly determined by its residue. In essence, the protein sequence encoder will return similar embeddings for nodes of the same residue, albeit at different positions within a protein. With this premise, the first strategy replaces the node embedding for perturbed nodes with the average representations of the same residues. For example, when perturbing an AA to glycine, an overall representation of glycine is assigned by extracting and average-pooling all glycine representations from the input sequence.</p>
</sec>
<sec id="s3c2">
<title>Sliding Window</title>
<p>The presumption in the previous method neither aligns with the algorithmic design nor biological heuristics. Self-attention discerns the interaction of the central token with its neighbors across the entire document (protein). The representation of a residue is influenced by both its neighbors’ residues and locations. Thus, averaging embeddings of residues from varying positions is likely to forfeit positional information of the modified residue. For this purpose, we consider a sliding window of size 3 along the protein sequence.</p>
</sec>
<sec id="s3c3">
<title>Gaussian Noise</title>
<p>The third option regards node embeddings of AA as hidden vectors and imposes white noise on the vector values. We define the mean= 0 and variance= 0.5 on the noise, making the revised node representation <inline-formula><inline-graphic xlink:href="569522v3_inline9.gif" mime-subtype="gif" mimetype="image"/></inline-formula>.</p>
</sec>
<sec id="s3c4">
<title>Mask</title>
<p>Finally, we employ the masking technique prevalent in masked language modeling and substitute the perturbed residue token with a special <monospace>&lt;mask&gt;</monospace> token. The prefix language model will interpret it as a novel token and employ self-attention mechanisms to assign a new representation to it. We utilize the same hyperparameter settings as that of BERT (<xref ref-type="bibr" rid="c4">Devlin et al., 2018</xref>) and choose 15% of tokens per iteration as potentially influenced subjects. Specifically, 80% of these subjects are replaced with <monospace>&lt;mask&gt;</monospace>, 10% of them are replaced randomly (to other residues), and the remaining 10% stay unchanged.</p>
</sec>
</sec>
<sec id="s3d">
<title>Folding Methods</title>
<p>The analysis of protein structure through topological embeddings poses challenges due to the inherent difficulty in obtaining accurate structural observations through experimental techniques such as NMR (<xref ref-type="bibr" rid="c61">Wüthrich, 1990</xref>) and Cryo-EM (<xref ref-type="bibr" rid="c5">Elmlund et al., 2017</xref>). As a substitution, we use <italic>in silico</italic> folding models such as AlphaFold2 (<xref ref-type="bibr" rid="c18">Jumper et al., 2021</xref>) and ESMFold (<xref ref-type="bibr" rid="c27">Lin et al., 2023</xref>). Although these folding methods may introduce additional errors due to the inherent uncertainty or inaccuracy in structural predictions, we investigate the robustness of our model in the face of potential inaccuracies introduced by these folding strategies.</p>
<p><xref rid="tbl4" ref-type="table">Table 4</xref> examines the impact of different folding strategies on the performance of DMS predictions for ESM-if1, MIF-ST, and ProtSSN. Although the performance based on ESMFold-derived protein structures generally lags behind structures folded by AlphaFold2, the minimal difference between the two strategies across all four benchmarks validates the robustness of our ProtSSN in response to variations in input protein structures. We deliberately divide the assays in <bold>ProteinGym v0</bold> (<xref ref-type="bibr" rid="c37">Notin et al., 2022a</xref>) into two groups of interaction (<italic>e.g</italic>., binding and stability) and catalysis (<italic>e.g</italic>., activity), as the former is believed more sensitive to the structure of the protein (<xref ref-type="bibr" rid="c44">Robertson and Murphy, 1997</xref>).</p>
<table-wrap id="tbl4" orientation="portrait" position="float">
<label>Table 4.</label>
<caption><title>Influence of folding strategies (AlphaFold2 and ESMFold) on prediction performance for structure-involved models.</title></caption>
<graphic xlink:href="569522v3_tbl4.tif" mime-subtype="tiff" mimetype="image"/>
</table-wrap>
<p>ProtSSN emerges as the most robust method, maintaining consistent performance across different folding strategies, which underscores the importance of our model’s resilience to variations in input protein structures. The reported performance difference for both ESM-if1 and MIF-ST is 3−5 times higher than that of ProtSSN. The inconsistency between the optimal results for <bold>DDG</bold> and the scores reported in <xref rid="tbl3" ref-type="table">Table 3</xref> comes from the utilization of crystal structures in the main results. Another noteworthy observation pertains to the performance of ESM-if1 and MIF-ST on <bold>DDG</bold>. In this case, predictions based on ESMFold surpass those based on AlphaFold2, even outperforming predictions derived from crystal structures. However, the superior performance of these methods with ESMFold hinges on inaccurate protein structures, rendering them less reliable.</p>
</sec>
<sec id="s3e">
<title>Performance Enhancement with MSA and Ensemble</title>
<p>We extend the evaluation on <bold>ProteinGym v0</bold> to include a comparison of our zero-shot ProtSSN with few-shot learning methods that leverage MSA information of proteins (<xref ref-type="bibr" rid="c30">Meier et al., 2021</xref>). The details are reported in <xref rid="tbl5" ref-type="table">Table 5</xref>, where the performance of baseline methods are retrieved from <ext-link ext-link-type="uri" xlink:href="https://github.com/OATML-Markslab/ProteinGym">https://github.com/OATML-Markslab/ProteinGym</ext-link>. For ProtSSN, we employ an ensemble of nine models with varying sizes of <italic>k</italic>NN graphs (<italic>k</italic> ∈ {10, 20, 30}) and EGNN hidden neurons ({512, 768, 1280}), as discussed previously. The MSA depth reflects the number of MSA sequences that can be found for the protein, which influences the quality of MSA-based methods.</p>
<table-wrap id="tbl5" orientation="portrait" position="float">
<label>Table 5.</label>
<caption><title>Variant Effect Prediction on <bold>ProteinGym v0</bold> with both zero-shot and few-shot methods. Results are retrieved from (<xref ref-type="bibr" rid="c37">Notin et al., 2022a</xref>).</title></caption>
<graphic xlink:href="569522v3_tbl5.tif" mime-subtype="tiff" mimetype="image"/>
</table-wrap>
<table-wrap id="tbl6" orientation="portrait" position="float">
<label>Table 6.</label>
<caption><title>Average Spearman’s <italic>ρ</italic> correlation of variant effect prediction on <bold>DTm</bold> and <bold>DDG</bold> for zero-shot methods with model ensemble. The values within () indicate the standard deviation of bootstrapping.</title></caption>
<graphic xlink:href="569522v3_tbl6.tif" mime-subtype="tiff" mimetype="image"/>
</table-wrap>
<p>ProtSSN demonstrates superior performance among non-MSA zero-shot methods in predicting both single-site and multi-site mutants, underscoring its pivotal role in guiding protein engineering towards deep mutation. Furthermore, ProtSSN outperforms MSA-based methods across taxa, except for viruses, where precise identification of conserved sites is crucial for positive mutations, especially in spike proteins (<xref ref-type="bibr" rid="c19">Katoh and Standley, 2021</xref>; <xref ref-type="bibr" rid="c31">Mercurio et al., 2021</xref>). In essence, ProtSSN provides an efficient and effective solution for variant effects prediction when compared to both non-MSA and MSA-based methods. Note that although MSA-based methods generally consume fewer trainable parameters than non-MSA methods, they incur significantly higher costs in terms of search time and memory usage. Moreover, the inference performance of MSA-based methods relies heavily on the quality of the input MSA, where the additionally involved variance makes impacts the stability of the model performance.</p>
</sec>
</sec>
<sec id="s4">
<title>Discussion and conclusion</title>
<p>The development of modern computational methodologies for protein engineering is a crucial facet of <italic>in silico</italic> protein design. Effectively assessing the fitness of protein mutants not only supports cost-efficient experimental validations but also guides the modification of proteins toward enhanced or novel functions. Traditionally, computational methods rely on analyzing small sets of labeled data for specific protein assays, such as FLIP (<xref ref-type="bibr" rid="c3">Dallago et al., 2021</xref>), PEER (<xref ref-type="bibr" rid="c62">Xu et al., 2022</xref>), and PETA (<xref ref-type="bibr" rid="c53">Tan et al., 2024</xref>). More recent work has also focused on examining the relationship between models and supervised fitness prediction (<xref ref-type="bibr" rid="c26">Li et al., 2024</xref>). However, obtaining experimental data is often infeasible in real-world scenarios, particularly for positive mutants, due to the cost and complexity of protein engineering. This limitation renders supervised learning methods impractical for many applications. As a result, it is crucial to develop solutions that can efficiently suggest site mutations for wet experiments, even when starting from scratch without prior knowledge. Recent deep learning solutions employ a common strategy that involves establishing a hidden protein representation and masking potential mutation sites to recommend plausible amino acids. Previous research has primarily focused on extracting protein representations from either their sequential or structural modalities, with many treating the prediction of mutational effects merely as a secondary task following inverse folding or <italic>de novo</italic> protein design. These approaches often overlook the importance of comprehensive investigation on both global and local perspectives of amino acid interaction that are critical for featuring protein functions. Furthermore, these methods hardly tailored model designs for suggesting mutations, despite the significance of this type of task. In this work, we introduce ProtSSN, a denoising framework that effectively cascades protein sequence and structure embedding for predicting mutational effects. Both the protein language model and equivariant graph neural network are employed to encode the global interaction of amino acids with geometry-aware local enhancements.</p>
<p>On the other hand, existing benchmarks for evaluating computational solutions mostly focus on assessing model generalization on large-scale datasets (e.g., over 2 million mutants in <bold>ProteinGym v1</bold>). However, such high-throughput datasets often lack accurate experimental measurements (<xref ref-type="bibr" rid="c8">Frazer et al., 2021</xref>), leading to significant noise in the labels. Furthermore, the larger data volumes typically do not include environmental labels for mutants (e.g., temperature, pH), despite the critical importance of these conditions for biologists. In response, we propose <bold>DTm</bold> and <bold>DDG</bold>. These low-throughput datasets, which we have collected, emphasize the consistency of experimental conditions and data accuracy. They are traceable and serve as valuable complements to ProteinGym, providing a more detailed and reliable evaluation of computational models. We have extensively validated the efficacy of ProtSSN across various protein function assays and taxa, including two thermostability datasets prepared by ourselves. Our approach consistently demonstrates substantial promise for protein engineering applications, such as facilitating the design of mutation sequences with enhanced interaction and enzymatic activity.</p>
</sec>
</body>
<back>
<ref-list>
<title>References</title>
<ref id="c1"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Aprile</surname> <given-names>FA</given-names></string-name>, <string-name><surname>Sormanni</surname> <given-names>P</given-names></string-name>, <string-name><surname>Podpolny</surname> <given-names>M</given-names></string-name>, <string-name><surname>Chhangur</surname> <given-names>S</given-names></string-name>, <string-name><surname>Needham</surname> <given-names>LM</given-names></string-name>, <string-name><surname>Ruggeri</surname> <given-names>FS</given-names></string-name>, <string-name><surname>Perni</surname> <given-names>M</given-names></string-name>, <string-name><surname>Limbocker</surname> <given-names>R</given-names></string-name>, <string-name><surname>Heller</surname> <given-names>GT</given-names></string-name>, <string-name><surname>Sneideris</surname> <given-names>T</given-names></string-name>, <etal>et al.</etal></person-group> <article-title>Rational design of a conformation-specific antibody for the quantification of Aβ oligomers</article-title>. <source>Proceedings of the National Academy of Sciences</source>. <year>2020</year>; <volume>117</volume>(<issue>24</issue>):<fpage>13509</fpage>–<lpage>13518</lpage>.</mixed-citation></ref>
<ref id="c2"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Brandes</surname> <given-names>N</given-names></string-name>, <string-name><surname>Ofer</surname> <given-names>D</given-names></string-name>, <string-name><surname>Peleg</surname> <given-names>Y</given-names></string-name>, <string-name><surname>Rappoport</surname> <given-names>N</given-names></string-name>, <string-name><surname>Linial</surname> <given-names>M.</given-names></string-name></person-group> <article-title>ProteinBERT: A universal deep-learning model of protein sequence and function</article-title>. <source>Bioinformatics</source>. <year>2022</year>; <volume>38</volume>(<issue>8</issue>):<fpage>2102</fpage>–<lpage>2110</lpage>.</mixed-citation></ref>
<ref id="c3"><mixed-citation publication-type="preprint"><person-group person-group-type="author"><string-name><surname>Dallago</surname> <given-names>C</given-names></string-name>, <string-name><surname>Mou</surname> <given-names>J</given-names></string-name>, <string-name><surname>Johnston</surname> <given-names>KE</given-names></string-name>, <string-name><surname>Wittmann</surname> <given-names>BJ</given-names></string-name>, <string-name><surname>Bhattacharya</surname> <given-names>N</given-names></string-name>, <string-name><surname>Goldman</surname> <given-names>S</given-names></string-name>, <string-name><surname>Madani</surname> <given-names>A</given-names></string-name>, <string-name><surname>Yang</surname> <given-names>KK</given-names></string-name></person-group>. <article-title>FLIP: Benchmark tasks in fitness landscape inference for proteins</article-title>. <source>bioRxiv</source>. <year>2021</year>; p. <fpage>2021</fpage>–<lpage>11</lpage>.</mixed-citation></ref>
<ref id="c4"><mixed-citation publication-type="preprint"><person-group person-group-type="author"><string-name><surname>Devlin</surname> <given-names>J</given-names></string-name>, <string-name><surname>Chang</surname> <given-names>MW</given-names></string-name>, <string-name><surname>Lee</surname> <given-names>K</given-names></string-name>, <string-name><surname>Toutanova</surname> <given-names>K.</given-names></string-name></person-group> <article-title>BERT: Pre-training of deep bidirectional transformers for language understanding</article-title>. <source>arXiv</source>:<elocation-id>181004805</elocation-id>. <year>2018</year>;.</mixed-citation></ref>
<ref id="c5"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Elmlund</surname> <given-names>D</given-names></string-name>, <string-name><surname>Le</surname> <given-names>SN</given-names></string-name>, <string-name><surname>Elmlund</surname> <given-names>H.</given-names></string-name></person-group> <article-title>High-resolution Cryo-EM: the nuts and bolts</article-title>. <source>Current Opinion in Structural Biology</source>. <year>2017</year>; <volume>46</volume>:<fpage>1</fpage>–<lpage>6</lpage>.</mixed-citation></ref>
<ref id="c6"><mixed-citation publication-type="confproc"><person-group person-group-type="author"><string-name><surname>Elnaggar</surname> <given-names>A</given-names></string-name>, <string-name><surname>Heinzinger</surname> <given-names>M</given-names></string-name>, <string-name><surname>Dallago</surname> <given-names>C</given-names></string-name>, <string-name><surname>Rehawi</surname> <given-names>G</given-names></string-name>, <string-name><surname>Yu</surname> <given-names>W</given-names></string-name>, <string-name><surname>Jones</surname> <given-names>L</given-names></string-name>, <string-name><surname>Gibbs</surname> <given-names>T</given-names></string-name>, <string-name><surname>Feher</surname> <given-names>T</given-names></string-name>, <string-name><surname>Angerer</surname> <given-names>C</given-names></string-name>, <string-name><surname>Steinegger</surname> <given-names>M</given-names></string-name>, <string-name><surname>Bhowmik</surname> <given-names>D</given-names></string-name>, <string-name><surname>Rost</surname> <given-names>B.</given-names></string-name></person-group> <article-title>ProtTrans: Towards Cracking the Language of Lifes Code Through Self-Supervised Deep Learning and High Performance Computing</article-title>. <conf-name>IEEE Transactions on Pattern Analysis and Machine Intelligence</conf-name>. <year>2021</year>;.</mixed-citation></ref>
<ref id="c7"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Frauenfelder</surname> <given-names>H</given-names></string-name>, <string-name><surname>McMahon</surname> <given-names>B.</given-names></string-name></person-group> <article-title>Dynamics and function of proteins: the search for general concepts</article-title>. <source>Proceedings of the National Academy of Sciences</source>. <year>1998</year>; <volume>95</volume>(<issue>9</issue>):<fpage>4795</fpage>–<lpage>4797</lpage>.</mixed-citation></ref>
<ref id="c8"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Frazer</surname> <given-names>J</given-names></string-name>, <string-name><surname>Notin</surname> <given-names>P</given-names></string-name>, <string-name><surname>Dias</surname> <given-names>M</given-names></string-name>, <string-name><surname>Gomez</surname> <given-names>A</given-names></string-name>, <string-name><surname>Min</surname> <given-names>JK</given-names></string-name>, <string-name><surname>Brock</surname> <given-names>K</given-names></string-name>, <string-name><surname>Gal</surname> <given-names>Y</given-names></string-name>, <string-name><surname>Marks</surname> <given-names>DS</given-names></string-name></person-group>. <article-title>Disease variant prediction with deep generative models of evolutionary data</article-title>. <source>Nature</source>. <year>2021</year>; <volume>599</volume>(<issue>7883</issue>):<fpage>91</fpage>–<lpage>95</lpage>.</mixed-citation></ref>
<ref id="c9"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Gray</surname> <given-names>VE</given-names></string-name>, <string-name><surname>Hause</surname> <given-names>RJ</given-names></string-name>, <string-name><surname>Luebeck</surname> <given-names>J</given-names></string-name>, <string-name><surname>Shendure</surname> <given-names>J</given-names></string-name>, <string-name><surname>Fowler</surname> <given-names>DM</given-names></string-name></person-group>. <article-title>Quantitative missense variant effect prediction using large-scale mutagenesis data</article-title>. <source>Cell Systems</source>. <year>2018</year>; <volume>6</volume>(<issue>1</issue>):<fpage>116</fpage>–<lpage>124</lpage>.</mixed-citation></ref>
<ref id="c10"><mixed-citation publication-type="confproc"><person-group person-group-type="author"><string-name><surname>Hesslow</surname> <given-names>D</given-names></string-name>, <string-name><surname>Zanichelli</surname> <given-names>N</given-names></string-name>, <string-name><surname>Notin</surname> <given-names>P</given-names></string-name>, <string-name><surname>Poli</surname> <given-names>I</given-names></string-name>, <string-name><surname>Marks</surname> <given-names>D.</given-names></string-name></person-group> <article-title>RITA: a study on scaling up generative protein sequence models</article-title>. In: <conf-name>ICML Workshop on Computational Biology</conf-name>; <year>2022</year>..</mixed-citation></ref>
<ref id="c11"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Hopf</surname> <given-names>TA</given-names></string-name>, <string-name><surname>Ingraham</surname> <given-names>JB</given-names></string-name>, <string-name><surname>Poelwijk</surname> <given-names>FJ</given-names></string-name>, <string-name><surname>Schärfe</surname> <given-names>CP</given-names></string-name>, <string-name><surname>Springer</surname> <given-names>M</given-names></string-name>, <string-name><surname>Sander</surname> <given-names>C</given-names></string-name>, <string-name><surname>Marks</surname> <given-names>DS</given-names></string-name></person-group>. <article-title>Mutation effects predicted from sequence co-variation</article-title>. <source>Nature Biotechnology</source>. <year>2017</year>; <volume>35</volume>(<issue>2</issue>):<fpage>128</fpage>–<lpage>135</lpage>.</mixed-citation></ref>
<ref id="c12"><mixed-citation publication-type="book"><person-group person-group-type="author"><string-name><surname>Hsu</surname> <given-names>C</given-names></string-name>, <string-name><surname>Verkuil</surname> <given-names>R</given-names></string-name>, <string-name><surname>Liu</surname> <given-names>J</given-names></string-name>, <string-name><surname>Lin</surname> <given-names>Z</given-names></string-name>, <string-name><surname>Hie</surname> <given-names>B</given-names></string-name>, <string-name><surname>Sercu</surname> <given-names>T</given-names></string-name>, <string-name><surname>Lerer</surname> <given-names>A</given-names></string-name>, <string-name><surname>Rives</surname> <given-names>A.</given-names></string-name></person-group> <chapter-title>Learning inverse folding from millions of predicted structures</chapter-title>. <source>In: ICML</source> <publisher-name>PMLR</publisher-name>; <year>2022</year>. p. <fpage>8946</fpage>–<lpage>8970</lpage>.</mixed-citation></ref>
<ref id="c13"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Ismail</surname> <given-names>AR</given-names></string-name>, <string-name><surname>Kashtoh</surname> <given-names>H</given-names></string-name>, <string-name><surname>Baek</surname> <given-names>KH</given-names></string-name></person-group>. <article-title>Temperature-resistant and solvent-tolerant lipases as industrial biocatalysts: Biotechnological approaches and applications</article-title>. <source>International Journal of Biological Macromolecules</source>. <year>2021</year>; <volume>187</volume>:<fpage>127</fpage>–<lpage>142</lpage>.</mixed-citation></ref>
<ref id="c14"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Jiang</surname> <given-names>F</given-names></string-name>, <string-name><surname>Bian</surname> <given-names>J</given-names></string-name>, <string-name><surname>Liu</surname> <given-names>H</given-names></string-name>, <string-name><surname>Li</surname> <given-names>S</given-names></string-name>, <string-name><surname>Bai</surname> <given-names>X</given-names></string-name>, <string-name><surname>Zheng</surname> <given-names>L</given-names></string-name>, <string-name><surname>Jin</surname> <given-names>S</given-names></string-name>, <string-name><surname>Liu</surname> <given-names>Z</given-names></string-name>, <string-name><surname>Yang</surname> <given-names>GY</given-names></string-name>, <string-name><surname>Hong</surname> <given-names>L.</given-names></string-name></person-group> <article-title>Creatinase: Using Increased Entropy to Improve the Activity and Thermostability</article-title>. <source>The Journal of Physical Chemistry B</source>. <year>2023</year>; <volume>127</volume>(<issue>12</issue>):<fpage>2671</fpage>–<lpage>2682</lpage>.</mixed-citation></ref>
<ref id="c15"><mixed-citation publication-type="confproc"><person-group person-group-type="author"><string-name><surname>Jin</surname> <given-names>W</given-names></string-name>, <string-name><surname>Wohlwend</surname> <given-names>J</given-names></string-name>, <string-name><surname>Barzilay</surname> <given-names>R</given-names></string-name>, <string-name><surname>Jaakkola</surname> <given-names>TS</given-names></string-name></person-group>. <article-title>Iterative Refinement Graph Neural Network for Antibody Sequence-Structure Co-design</article-title>. In: <conf-name>ICLR</conf-name>; <year>2021</year>.</mixed-citation></ref>
<ref id="c16"><mixed-citation publication-type="confproc"><person-group person-group-type="author"><string-name><surname>Jing</surname> <given-names>B</given-names></string-name>, <string-name><surname>Eismann</surname> <given-names>S</given-names></string-name>, <string-name><surname>Suriana</surname> <given-names>P</given-names></string-name>, <string-name><surname>Townshend</surname> <given-names>RJL</given-names></string-name>, <string-name><surname>Dror</surname> <given-names>R.</given-names></string-name></person-group> <article-title>Learning from Protein Structure with Geometric Vector Perceptrons</article-title>. In: <conf-name>ICLR</conf-name>; <year>2020</year>.</mixed-citation></ref>
<ref id="c17"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Jones</surname> <given-names>D</given-names></string-name>, <string-name><surname>Kim</surname> <given-names>H</given-names></string-name>, <string-name><surname>Zhang</surname> <given-names>X</given-names></string-name>, <string-name><surname>Zemla</surname> <given-names>A</given-names></string-name>, <string-name><surname>Stevenson</surname> <given-names>G</given-names></string-name>, <string-name><surname>Bennett</surname> <given-names>WD</given-names></string-name>, <string-name><surname>Kirshner</surname> <given-names>D</given-names></string-name>, <string-name><surname>Wong</surname> <given-names>SE</given-names></string-name>, <string-name><surname>Lightstone</surname> <given-names>FC</given-names></string-name>, <string-name><surname>Allen</surname> <given-names>JE</given-names></string-name></person-group>. <article-title>Improved protein–ligand binding affinity prediction with structure-based deep fusion inference</article-title>. <source>Journal of Chemical Information and Modeling</source>. <year>2021</year>; <volume>61</volume>(<issue>4</issue>):<fpage>1583</fpage>–<lpage>1592</lpage>.</mixed-citation></ref>
<ref id="c18"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Jumper</surname> <given-names>J</given-names></string-name>, <string-name><surname>Evans</surname> <given-names>R</given-names></string-name>, <string-name><surname>Pritzel</surname> <given-names>A</given-names></string-name>, <string-name><surname>Green</surname> <given-names>T</given-names></string-name>, <string-name><surname>Figurnov</surname> <given-names>M</given-names></string-name>, <string-name><surname>Ronneberger</surname> <given-names>O</given-names></string-name>, <string-name><surname>Tunyasuvunakool</surname> <given-names>K</given-names></string-name>, <string-name><surname>Bates</surname> <given-names>R</given-names></string-name>, <string-name><surname>Žídek</surname> <given-names>A</given-names></string-name>, <string-name><surname>Potapenko</surname> <given-names>A</given-names></string-name>, <etal>et al.</etal></person-group> <article-title>Highly accurate protein structure prediction with AlphaFold</article-title>. <source>Nature</source>. <year>2021</year>; <volume>596</volume>(<issue>7873</issue>):<fpage>583</fpage>– <lpage>589</lpage>.</mixed-citation></ref>
<ref id="c19"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Katoh</surname> <given-names>K</given-names></string-name>, <string-name><surname>Standley</surname> <given-names>DM</given-names></string-name></person-group>. <article-title>Emerging SARS-CoV-2 variants follow a historical pattern recorded in outgroups infecting non-human hosts</article-title>. <source>Communications Biology</source>. <year>2021</year>; <volume>4</volume>(<issue>1</issue>):<fpage>1134</fpage>.</mixed-citation></ref>
<ref id="c20"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Khersonsky</surname> <given-names>O</given-names></string-name>, <string-name><surname>Lipsh</surname> <given-names>R</given-names></string-name>, <string-name><surname>Avizemer</surname> <given-names>Z</given-names></string-name>, <string-name><surname>Ashani</surname> <given-names>Y</given-names></string-name>, <string-name><surname>Goldsmith</surname> <given-names>M</given-names></string-name>, <string-name><surname>Leader</surname> <given-names>H</given-names></string-name>, <string-name><surname>Dym</surname> <given-names>O</given-names></string-name>, <string-name><surname>Rogotner</surname> <given-names>S</given-names></string-name>, <string-name><surname>Trudeau</surname> <given-names>DL</given-names></string-name>, <string-name><surname>Prilusky</surname> <given-names>J</given-names></string-name>, <etal>et al.</etal></person-group> <article-title>Automated design of efficient and functionally diverse enzyme repertoires</article-title>. <source>Molecular Cell</source>. <year>2018</year>; <volume>72</volume>(<issue>1</issue>):<fpage>178</fpage>–<lpage>186</lpage>.</mixed-citation></ref>
<ref id="c21"><mixed-citation publication-type="confproc"><person-group person-group-type="author"><string-name><surname>Kingma</surname> <given-names>DP</given-names></string-name>, <string-name><surname>Ba</surname> <given-names>J.</given-names></string-name></person-group> <article-title>ADAM: A method for stochastic optimization</article-title>. In: <conf-name>International Conference on Learning Representation</conf-name>; <year>2015</year>.</mixed-citation></ref>
<ref id="c22"><mixed-citation publication-type="confproc"><person-group person-group-type="author"><string-name><surname>Kipf</surname> <given-names>TN</given-names></string-name>, <string-name><surname>Welling</surname> <given-names>M.</given-names></string-name></person-group> <article-title>Semi-supervised classification with graph convolutional networks</article-title>. In: <conf-name>ICLR</conf-name>; <year>2017</year>.</mixed-citation></ref>
<ref id="c23"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Koehler Leman</surname> <given-names>J</given-names></string-name>, <string-name><surname>Szczerbiak</surname> <given-names>P</given-names></string-name>, <string-name><surname>Renfrew</surname> <given-names>PD</given-names></string-name>, <string-name><surname>Gligorijevic</surname> <given-names>V</given-names></string-name>, <string-name><surname>Berenberg</surname> <given-names>D</given-names></string-name>, <string-name><surname>Vatanen</surname> <given-names>T</given-names></string-name>, <string-name><surname>Taylor</surname> <given-names>BC</given-names></string-name>, <string-name><surname>Chandler</surname> <given-names>C</given-names></string-name>, <string-name><surname>Janssen</surname> <given-names>S</given-names></string-name>, <string-name><surname>Pataki</surname> <given-names>A</given-names></string-name>, <etal>et al.</etal></person-group> <article-title>Sequence-structure-function relationships in the microbial protein universe</article-title>. <source>Nature Communications</source>. <year>2023</year>; <volume>14</volume>(<issue>1</issue>):<fpage>2351</fpage>.</mixed-citation></ref>
<ref id="c24"><mixed-citation publication-type="web"><person-group person-group-type="author"><string-name><surname>Kong</surname> <given-names>X</given-names></string-name>, <string-name><surname>Huang</surname> <given-names>W</given-names></string-name>, <string-name><surname>Liu</surname> <given-names>Y.</given-names></string-name></person-group> <article-title>Conditional Antibody Design as 3D Equivariant Graph Translation</article-title>. <source>In: ICLR</source>; <year>2023</year>. <ext-link ext-link-type="uri" xlink:href="https://openreview.net/forum?id=LFHFQbjxIiP">https://openreview.net/forum?id=LFHFQbjxIiP</ext-link>.</mixed-citation></ref>
<ref id="c25"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Laine</surname> <given-names>E</given-names></string-name>, <string-name><surname>Karami</surname> <given-names>Y</given-names></string-name>, <string-name><surname>Carbone</surname> <given-names>A.</given-names></string-name></person-group> <article-title>GEMME: a simple and fast global epistatic model predicting mutational effects</article-title>. <source>Molecular biology and evolution</source>. <year>2019</year>; <volume>36</volume>(<issue>11</issue>):<fpage>2604</fpage>–<lpage>2619</lpage>.</mixed-citation></ref>
<ref id="c26"><mixed-citation publication-type="preprint"><person-group person-group-type="author"><string-name><surname>Li</surname> <given-names>FZ</given-names></string-name>, <string-name><surname>Amini</surname> <given-names>AP</given-names></string-name>, <string-name><surname>Yue</surname> <given-names>Y</given-names></string-name>, <string-name><surname>Yang</surname> <given-names>KK</given-names></string-name>, <string-name><surname>Lu</surname> <given-names>AX</given-names></string-name></person-group>. <article-title>Feature reuse and scaling: Understanding transfer learning with protein language models</article-title>. <source>bioRxiv</source>. <year>2024</year>; p. <fpage>2024</fpage>–<lpage>02</lpage>.</mixed-citation></ref>
<ref id="c27"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Lin</surname> <given-names>Z</given-names></string-name>, <string-name><surname>Akin</surname> <given-names>H</given-names></string-name>, <string-name><surname>Rao</surname> <given-names>R</given-names></string-name>, <string-name><surname>Hie</surname> <given-names>B</given-names></string-name>, <string-name><surname>Zhu</surname> <given-names>Z</given-names></string-name>, <string-name><surname>Lu</surname> <given-names>W</given-names></string-name>, <string-name><surname>Smetanin</surname> <given-names>N</given-names></string-name>, <string-name><surname>Verkuil</surname> <given-names>R</given-names></string-name>, <string-name><surname>Kabeli</surname> <given-names>O</given-names></string-name>, <string-name><surname>Shmueli</surname> <given-names>Y</given-names></string-name>, <etal>et al.</etal></person-group> <article-title>Evolutionary-scale prediction of atomic-level protein structure with a language model</article-title>. <source>Science</source>. <year>2023</year>; <volume>379</volume>(<issue>6637</issue>):<fpage>1123</fpage>–<lpage>1130</lpage>.</mixed-citation></ref>
<ref id="c28"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Liu</surname> <given-names>Q</given-names></string-name>, <string-name><surname>Xun</surname> <given-names>G</given-names></string-name>, <string-name><surname>Feng</surname> <given-names>Y.</given-names></string-name></person-group> <article-title>The state-of-the-art strategies of protein engineering for enzyme stabilization</article-title>. <source>Biotechnology Advances</source>. <year>2019</year>; <volume>37</volume>(<issue>4</issue>):<fpage>530</fpage>–<lpage>537</lpage>.</mixed-citation></ref>
<ref id="c29"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Madani</surname> <given-names>A</given-names></string-name>, <string-name><surname>Krause</surname> <given-names>B</given-names></string-name>, <string-name><surname>Greene</surname> <given-names>ER</given-names></string-name>, <string-name><surname>Subramanian</surname> <given-names>S</given-names></string-name>, <string-name><surname>Mohr</surname> <given-names>BP</given-names></string-name>, <string-name><surname>Holton</surname> <given-names>JM</given-names></string-name>, <string-name><surname>Olmos Jr</surname> <given-names>JL</given-names></string-name>, <string-name><surname>Xiong</surname> <given-names>C</given-names></string-name>, <string-name><surname>Sun</surname> <given-names>ZZ</given-names></string-name>, <string-name><surname>Socher</surname> <given-names>R</given-names></string-name>, <etal>et al.</etal></person-group> <article-title>Large language models generate functional protein sequences across diverse families</article-title>. <source>Nature Biotechnology</source>. <volume>41</volume>:<fpage>1099</fpage>–<lpage>1106</lpage> <year>2023</year>;.</mixed-citation></ref>
<ref id="c30"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Meier</surname> <given-names>J</given-names></string-name>, <string-name><surname>Rao</surname> <given-names>R</given-names></string-name>, <string-name><surname>Verkuil</surname> <given-names>R</given-names></string-name>, <string-name><surname>Liu</surname> <given-names>J</given-names></string-name>, <string-name><surname>Sercu</surname> <given-names>T</given-names></string-name>, <string-name><surname>Rives</surname> <given-names>A.</given-names></string-name></person-group> <article-title>Language models enable zero-shot prediction of the effects of mutations on protein function</article-title>. <source>In: NeurIPS</source>, vol. <volume>34</volume>; <year>2021</year>. p. <fpage>29287</fpage>–<lpage>29303</lpage>.</mixed-citation></ref>
<ref id="c31"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Mercurio</surname> <given-names>I</given-names></string-name>, <string-name><surname>Tragni</surname> <given-names>V</given-names></string-name>, <string-name><surname>Busto</surname> <given-names>F</given-names></string-name>, <string-name><surname>De Grassi</surname> <given-names>A</given-names></string-name>, <string-name><surname>Pierri</surname> <given-names>CL</given-names></string-name></person-group>. <article-title>Protein structure analysis of the interactions between SARS-CoV-2 spike protein and the human ACE2 receptor: from conformational changes to novel neutralizing antibodies</article-title>. <source>Cellular and Molecular Life Sciences</source>. <year>2021</year>; <volume>78</volume>:<fpage>1501</fpage>–<lpage>1522</lpage>.</mixed-citation></ref>
<ref id="c32"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Moal</surname> <given-names>IH</given-names></string-name>, <string-name><surname>Fernández-Recio</surname> <given-names>J.</given-names></string-name></person-group> <article-title>SKEMPI: A structural kinetic and energetic database of mutant protein interactions and its use in empirical models</article-title>. <source>Bioinformatics</source>. <year>2012</year>; <volume>28</volume>(<issue>20</issue>):<fpage>2600</fpage>–<lpage>2607</lpage>.</mixed-citation></ref>
<ref id="c33"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Myung</surname> <given-names>Y</given-names></string-name>, <string-name><surname>Pires</surname> <given-names>DE</given-names></string-name>, <string-name><surname>Ascher</surname> <given-names>DB</given-names></string-name></person-group>. <article-title>CSM-AB: graph-based antibody–antigen binding affinity prediction and docking scoring function</article-title>. <source>Bioinformatics</source>. <year>2022</year>; <volume>38</volume>(<issue>4</issue>):<fpage>1141</fpage>–<lpage>1143</lpage>.</mixed-citation></ref>
<ref id="c34"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Nijkamp</surname> <given-names>E</given-names></string-name>, <string-name><surname>Ruffolo</surname> <given-names>JA</given-names></string-name>, <string-name><surname>Weinstein</surname> <given-names>EN</given-names></string-name>, <string-name><surname>Naik</surname> <given-names>N</given-names></string-name>, <string-name><surname>Madani</surname> <given-names>A.</given-names></string-name></person-group> <article-title>ProGen2: exploring the boundaries of protein language models</article-title>. <source>Cell Systems</source>. <year>2023</year>; <volume>14</volume>(<issue>11</issue>):<fpage>968</fpage>–<lpage>978</lpage>.</mixed-citation></ref>
<ref id="c35"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Nikam</surname> <given-names>R</given-names></string-name>, <string-name><surname>Kulandaisamy</surname> <given-names>A</given-names></string-name>, <string-name><surname>Harini</surname> <given-names>K</given-names></string-name>, <string-name><surname>Sharma</surname> <given-names>D</given-names></string-name>, <string-name><surname>Gromiha</surname> <given-names>MM</given-names></string-name></person-group>. <article-title>ProThermDB: thermodynamic database for proteins and mutants revisited after 15 years</article-title>. <source>Nucleic Acids Research</source>. <year>2021</year>; <volume>49</volume>(<issue>D1</issue>):<fpage>D420</fpage>–<lpage>D424</lpage>.</mixed-citation></ref>
<ref id="c36"><mixed-citation publication-type="confproc"><person-group person-group-type="author"><string-name><surname>Notin</surname> <given-names>P</given-names></string-name>, <string-name><surname>Dias</surname> <given-names>M</given-names></string-name>, <string-name><surname>Frazer</surname> <given-names>J</given-names></string-name>, <string-name><surname>Hurtado</surname> <given-names>JM</given-names></string-name>, <string-name><surname>Gomez</surname> <given-names>AN</given-names></string-name>, <string-name><surname>Marks</surname> <given-names>D</given-names></string-name>, <string-name><surname>Gal</surname> <given-names>Y.</given-names></string-name></person-group> <article-title>Tranception: protein fitness prediction with autoregressive transformers and inference-time retrieval</article-title>. In: <conf-name>ICML</conf-name>; <year>2022</year>. p. <fpage>16990</fpage>–<lpage>17017</lpage>.</mixed-citation></ref>
<ref id="c37"><mixed-citation publication-type="confproc"><person-group person-group-type="author"><string-name><surname>Notin</surname> <given-names>P</given-names></string-name>, <string-name><surname>Kollasch</surname> <given-names>AW</given-names></string-name>, <string-name><surname>Ritter</surname> <given-names>D</given-names></string-name>, <string-name><surname>Van Niekerk</surname> <given-names>L</given-names></string-name>, <string-name><surname>Paul</surname> <given-names>S</given-names></string-name>, <string-name><surname>Spinner</surname> <given-names>H</given-names></string-name>, <string-name><surname>Rollins</surname> <given-names>NJ</given-names></string-name>, <string-name><surname>Shaw</surname> <given-names>A</given-names></string-name>, <string-name><surname>Weitzman</surname> <given-names>R</given-names></string-name>, <string-name><surname>Frazer</surname> <given-names>J</given-names></string-name>, <etal>et al.</etal></person-group> <article-title>ProteinGym: Large-scale benchmarks for protein fitness prediction and design</article-title>. In: <conf-name>NeurIPS</conf-name>; <year>2023</year>..</mixed-citation></ref>
<ref id="c38"><mixed-citation publication-type="preprint"><person-group person-group-type="author"><string-name><surname>Notin</surname> <given-names>P</given-names></string-name>, <string-name><surname>Van Niekerk</surname> <given-names>L</given-names></string-name>, <string-name><surname>Kollasch</surname> <given-names>AW</given-names></string-name>, <string-name><surname>Ritter</surname> <given-names>D</given-names></string-name>, <string-name><surname>Gal</surname> <given-names>Y</given-names></string-name>, <string-name><surname>Marks</surname> <given-names>DS</given-names></string-name></person-group>. <article-title>TranceptEVE: Combining family-specific and family-agnostic models of protein sequences for improved fitness prediction</article-title>. <source>bioRxiv</source>. <year>2022</year>; p. <fpage>2022</fpage>–<lpage>12</lpage>.</mixed-citation></ref>
<ref id="c39"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Orengo</surname> <given-names>C</given-names></string-name>, <string-name><surname>Michie</surname> <given-names>A</given-names></string-name>, <string-name><surname>Jones</surname> <given-names>S</given-names></string-name>, <string-name><surname>Jones</surname> <given-names>D</given-names></string-name>, <string-name><surname>Swindells</surname> <given-names>M</given-names></string-name>, <string-name><surname>Thornton</surname> <given-names>J.</given-names></string-name></person-group> <article-title>CATH – a hierarchic classification of protein domain structures</article-title>. <source>Structure</source>. <year>1997</year>; <volume>5</volume>(<issue>8</issue>):<fpage>1093</fpage>–<lpage>1109</lpage>. doi: <pub-id pub-id-type="doi">10.1016/S0969-2126(97)00260-8</pub-id>.</mixed-citation></ref>
<ref id="c40"><mixed-citation publication-type="confproc"><person-group person-group-type="author"><string-name><surname>Rao</surname> <given-names>R</given-names></string-name>, <string-name><surname>Meier</surname> <given-names>J</given-names></string-name>, <string-name><surname>Sercu</surname> <given-names>T</given-names></string-name>, <string-name><surname>Ovchinnikov</surname> <given-names>S</given-names></string-name>, <string-name><surname>Rives</surname> <given-names>A.</given-names></string-name></person-group> <article-title>Transformer protein language models are unsupervised structure learners</article-title>. In: <conf-name>ICLR</conf-name>; <year>2021</year>.</mixed-citation></ref>
<ref id="c41"><mixed-citation publication-type="confproc"><person-group person-group-type="author"><string-name><surname>Rao</surname> <given-names>RM</given-names></string-name>, <string-name><surname>Liu</surname> <given-names>J</given-names></string-name>, <string-name><surname>Verkuil</surname> <given-names>R</given-names></string-name>, <string-name><surname>Meier</surname> <given-names>J</given-names></string-name>, <string-name><surname>Canny</surname> <given-names>J</given-names></string-name>, <string-name><surname>Abbeel</surname> <given-names>P</given-names></string-name>, <string-name><surname>Sercu</surname> <given-names>T</given-names></string-name>, <string-name><surname>Rives</surname> <given-names>A.</given-names></string-name></person-group> <article-title>MSA transformer</article-title>. In: <conf-name>ICML</conf-name>; <year>2021</year>. p. <fpage>8844</fpage>–<lpage>8856</lpage>.</mixed-citation></ref>
<ref id="c42"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Riesselman</surname> <given-names>AJ</given-names></string-name>, <string-name><surname>Ingraham</surname> <given-names>JB</given-names></string-name>, <string-name><surname>Marks</surname> <given-names>DS</given-names></string-name></person-group>. <article-title>Deep generative models of genetic variation capture the effects of mutations</article-title>. <source>Nature Methods</source>. <year>2018</year>; <volume>15</volume>(<issue>10</issue>):<fpage>816</fpage>–<lpage>822</lpage>.</mixed-citation></ref>
<ref id="c43"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Rives</surname> <given-names>A</given-names></string-name>, <string-name><surname>Meier</surname> <given-names>J</given-names></string-name>, <string-name><surname>Sercu</surname> <given-names>T</given-names></string-name>, <string-name><surname>Goyal</surname> <given-names>S</given-names></string-name>, <string-name><surname>Lin</surname> <given-names>Z</given-names></string-name>, <string-name><surname>Liu</surname> <given-names>J</given-names></string-name>, <string-name><surname>Guo</surname> <given-names>D</given-names></string-name>, <string-name><surname>Ott</surname> <given-names>M</given-names></string-name>, <string-name><surname>Zitnick</surname> <given-names>CL</given-names></string-name>, <string-name><surname>Ma</surname> <given-names>J</given-names></string-name>, <etal>et al.</etal></person-group> <article-title>Biological structure and function emerge from scaling unsupervised learning to 250 million protein sequences</article-title>. <source>Proceedings of the National Academy of Sciences</source>. <year>2021</year>; <volume>118</volume>(<issue>15</issue>):<fpage>e2016239118</fpage>.</mixed-citation></ref>
<ref id="c44"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Robertson</surname> <given-names>AD</given-names></string-name>, <string-name><surname>Murphy</surname> <given-names>KP</given-names></string-name></person-group>. <article-title>Protein structure and the energetics of protein stability</article-title>. <source>Chemical Reviews</source>. <year>1997</year>; <volume>97</volume>(<issue>5</issue>):<fpage>1251</fpage>–<lpage>1268</lpage>.</mixed-citation></ref>
<ref id="c45"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Robinson-Rechavi</surname> <given-names>M</given-names></string-name>, <string-name><surname>Alibés</surname> <given-names>A</given-names></string-name>, <string-name><surname>Godzik</surname> <given-names>A.</given-names></string-name></person-group> <article-title>Contribution of electrostatic interactions, compactness and quaternary structure to protein thermostability: lessons from structural genomics of Thermotoga maritima</article-title>. <source>Journal of Molecular Biology</source>. <year>2006</year>; <volume>356</volume>(<issue>2</issue>):<fpage>547</fpage>–<lpage>557</lpage>.</mixed-citation></ref>
<ref id="c46"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Roscoe</surname> <given-names>BP</given-names></string-name>, <string-name><surname>Thayer</surname> <given-names>KM</given-names></string-name>, <string-name><surname>Zeldovich</surname> <given-names>KB</given-names></string-name>, <string-name><surname>Fushman</surname> <given-names>D</given-names></string-name>, <string-name><surname>Bolon</surname> <given-names>DN</given-names></string-name></person-group>. <article-title>Analyses of the effects of all ubiquitin point mutants on yeast growth rate</article-title>. <source>Journal of Molecular Biology</source>. <year>2013</year>; <volume>425</volume>(<issue>8</issue>):<fpage>1363</fpage>–<lpage>1377</lpage>.</mixed-citation></ref>
<ref id="c47"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Sarkisyan</surname> <given-names>KS</given-names></string-name>, <string-name><surname>Bolotin</surname> <given-names>DA</given-names></string-name>, <string-name><surname>Meer</surname> <given-names>MV</given-names></string-name>, <string-name><surname>Usmanova</surname> <given-names>DR</given-names></string-name>, <string-name><surname>Mishin</surname> <given-names>AS</given-names></string-name>, <string-name><surname>Sharonov</surname> <given-names>GV</given-names></string-name>, <string-name><surname>Ivankov</surname> <given-names>DN</given-names></string-name>, <string-name><surname>Bozhanova</surname> <given-names>NG</given-names></string-name>, <string-name><surname>Baranov</surname> <given-names>MS</given-names></string-name>, <string-name><surname>Soylemez</surname> <given-names>O</given-names></string-name>, <etal>et al.</etal></person-group> <article-title>Local fitness landscape of the green fluorescent protein</article-title>. <source>Nature</source>. <year>2016</year>; <volume>533</volume>(<issue>7603</issue>):<fpage>397</fpage>–<lpage>401</lpage>.</mixed-citation></ref>
<ref id="c48"><mixed-citation publication-type="confproc"><person-group person-group-type="author"><string-name><surname>Satorras</surname> <given-names>VG</given-names></string-name>, <string-name><surname>Hoogeboom</surname> <given-names>E</given-names></string-name>, <string-name><surname>Welling</surname> <given-names>M.</given-names></string-name></person-group> <article-title>E(n) equivariant graph neural networks</article-title>. In: <conf-name>ICML</conf-name>; <year>2021</year>. p. <fpage>9323</fpage>–<lpage>9332</lpage>.</mixed-citation></ref>
<ref id="c49"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Sheng</surname> <given-names>G</given-names></string-name>, <string-name><surname>Zhao</surname> <given-names>H</given-names></string-name>, <string-name><surname>Wang</surname> <given-names>J</given-names></string-name>, <string-name><surname>Rao</surname> <given-names>Y</given-names></string-name>, <string-name><surname>Tian</surname> <given-names>W</given-names></string-name>, <string-name><surname>Swarts</surname> <given-names>DC</given-names></string-name>, <string-name><surname>van der Oost</surname> <given-names>J</given-names></string-name>, <string-name><surname>Patel</surname> <given-names>DJ</given-names></string-name>, <string-name><surname>Wang</surname> <given-names>Y.</given-names></string-name></person-group> <article-title>Structure-based cleavage mechanism of Thermus thermophilus Argonaute DNA guide strand-mediated DNA target cleavage</article-title>. <source>Proceedings of the National Academy of Sciences</source>. <year>2014</year>; <volume>111</volume>(<issue>2</issue>):<fpage>652</fpage>–<lpage>657</lpage>.</mixed-citation></ref>
<ref id="c50"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Shin</surname> <given-names>JE</given-names></string-name>, <string-name><surname>Riesselman</surname> <given-names>AJ</given-names></string-name>, <string-name><surname>Kollasch</surname> <given-names>AW</given-names></string-name>, <string-name><surname>McMahon</surname> <given-names>C</given-names></string-name>, <string-name><surname>Simon</surname> <given-names>E</given-names></string-name>, <string-name><surname>Sander</surname> <given-names>C</given-names></string-name>, <string-name><surname>Manglik</surname> <given-names>A</given-names></string-name>, <string-name><surname>Kruse</surname> <given-names>AC</given-names></string-name>, <string-name><surname>Marks</surname> <given-names>DS</given-names></string-name></person-group>. <article-title>Protein design and variant prediction using autoregressive generative models</article-title>. <source>Nature Communications</source>. <year>2021</year>; <volume>12</volume>(<issue>1</issue>):<fpage>2403</fpage>.</mixed-citation></ref>
<ref id="c51"><mixed-citation publication-type="preprint"><person-group person-group-type="author"><string-name><surname>Su</surname> <given-names>J</given-names></string-name>, <string-name><surname>Han</surname> <given-names>C</given-names></string-name>, <string-name><surname>Zhou</surname> <given-names>Y</given-names></string-name>, <string-name><surname>Shan</surname> <given-names>J</given-names></string-name>, <string-name><surname>Zhou</surname> <given-names>X</given-names></string-name>, <string-name><surname>Yuan</surname> <given-names>F.</given-names></string-name></person-group> <article-title>Saprot: Protein language modeling with structure-aware vocabulary</article-title>. <source>bioRxiv</source>. <year>2023</year>; p. <fpage>2023</fpage>–<lpage>10</lpage>.</mixed-citation></ref>
<ref id="c52"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Suzek</surname> <given-names>BE</given-names></string-name>, <string-name><surname>Wang</surname> <given-names>Y</given-names></string-name>, <string-name><surname>Huang</surname> <given-names>H</given-names></string-name>, <string-name><surname>McGarvey</surname> <given-names>PB</given-names></string-name>, <string-name><surname>Wu</surname> <given-names>CH</given-names></string-name>, <string-name><surname>Consortium</surname> <given-names>U.</given-names></string-name></person-group> <article-title>UniRef clusters: a comprehensive and scalable alternative for improving sequence similarity searches</article-title>. <source>Bioinformatics</source>. <year>2015</year>; <volume>31</volume>(<issue>6</issue>):<fpage>926</fpage>–<lpage>932</lpage>.</mixed-citation></ref>
<ref id="c53"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Tan</surname> <given-names>Y</given-names></string-name>, <string-name><surname>Li</surname> <given-names>M</given-names></string-name>, <string-name><surname>Zhou</surname> <given-names>Z</given-names></string-name>, <string-name><surname>Tan</surname> <given-names>P</given-names></string-name>, <string-name><surname>Yu</surname> <given-names>H</given-names></string-name>, <string-name><surname>Fan</surname> <given-names>G</given-names></string-name>, <string-name><surname>Hong</surname> <given-names>L.</given-names></string-name></person-group> <article-title>PETA: evaluating the impact of protein transfer learning with sub-word tokenization on downstream applications</article-title>. <source>Journal of Cheminformatics</source>. <year>2024</year>; <volume>16</volume>(<issue>1</issue>):<fpage>92</fpage>.</mixed-citation></ref>
<ref id="c54"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Torng</surname> <given-names>W</given-names></string-name>, <string-name><surname>Altman</surname> <given-names>RB</given-names></string-name></person-group>. <article-title>High precision protein functional site detection using 3D convolutional neural networks</article-title>. <source>Bioinformatics</source>. <year>2019</year>; <volume>35</volume>(<issue>9</issue>):<fpage>1503</fpage>–<lpage>1512</lpage>.</mixed-citation></ref>
<ref id="c55"><mixed-citation publication-type="confproc"><person-group person-group-type="author"><string-name><surname>Vaswani</surname> <given-names>A</given-names></string-name>, <string-name><surname>Shazeer</surname> <given-names>N</given-names></string-name>, <string-name><surname>Parmar</surname> <given-names>N</given-names></string-name>, <string-name><surname>Uszkoreit</surname> <given-names>J</given-names></string-name>, <string-name><surname>Jones</surname> <given-names>L</given-names></string-name>, <string-name><surname>Gomez</surname> <given-names>AN</given-names></string-name>, <string-name><surname>Kaiser</surname> <given-names>L</given-names></string-name>, <string-name><surname>Polosukhin</surname> <given-names>I.</given-names></string-name></person-group> <article-title>Attention Is All You Need</article-title>. In: <conf-name>NeurIPS</conf-name>; <year>2017</year>.</mixed-citation></ref>
<ref id="c56"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Velecky</surname> <given-names>J</given-names></string-name>, <string-name><surname>Hamsikova</surname> <given-names>M</given-names></string-name>, <string-name><surname>Stourac</surname> <given-names>J</given-names></string-name>, <string-name><surname>Musil</surname> <given-names>M</given-names></string-name>, <string-name><surname>Damborsky</surname> <given-names>J</given-names></string-name>, <string-name><surname>Bednar</surname> <given-names>D</given-names></string-name>, <string-name><surname>Mazurenko</surname> <given-names>S.</given-names></string-name></person-group> <article-title>SoluProtMutDB: A manually curated database of protein solubility changes upon mutations</article-title>. <source>Computational and Structural Biotechnology Journal</source>. <year>2022</year>; <volume>20</volume>:<fpage>6339</fpage>–<lpage>6347</lpage>.</mixed-citation></ref>
<ref id="c57"><mixed-citation publication-type="confproc"><person-group person-group-type="author"><string-name><surname>Veličković</surname> <given-names>P</given-names></string-name>, <string-name><surname>Cucurull</surname> <given-names>G</given-names></string-name>, <string-name><surname>Casanova</surname> <given-names>A</given-names></string-name>, <string-name><surname>Romero</surname> <given-names>A</given-names></string-name>, <string-name><surname>Lio</surname> <given-names>P</given-names></string-name>, <string-name><surname>Bengio</surname> <given-names>Y.</given-names></string-name></person-group> <article-title>Graph attention networks</article-title>. In: <conf-name>ICLR</conf-name>; <year>2018</year>..</mixed-citation></ref>
<ref id="c58"><mixed-citation publication-type="confproc"><person-group person-group-type="author"><string-name><surname>Vig</surname> <given-names>J</given-names></string-name>, <string-name><surname>Madani</surname> <given-names>A</given-names></string-name>, <string-name><surname>Varshney</surname> <given-names>LR</given-names></string-name>, <string-name><surname>Xiong</surname> <given-names>C</given-names></string-name>, <string-name><surname>Rajani</surname> <given-names>N</given-names></string-name>, <etal>et al.</etal></person-group> <article-title>BERTology Meets Biology: Interpreting Attention in Protein Language Models</article-title>. In: <conf-name>ICLR</conf-name>; <year>2021</year>.</mixed-citation></ref>
<ref id="c59"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Wang</surname> <given-names>Y</given-names></string-name>, <string-name><surname>Xue</surname> <given-names>P</given-names></string-name>, <string-name><surname>Cao</surname> <given-names>M</given-names></string-name>, <string-name><surname>Yu</surname> <given-names>T</given-names></string-name>, <string-name><surname>Lane</surname> <given-names>ST</given-names></string-name>, <string-name><surname>Zhao</surname> <given-names>H.</given-names></string-name></person-group> <article-title>Directed evolution: methodologies and applications</article-title>. <source>Chemical Reviews</source>. <year>2021</year>; <volume>121</volume>(<issue>20</issue>):<fpage>12384</fpage>–<lpage>12444</lpage>.</mixed-citation></ref>
<ref id="c60"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Woodley</surname> <given-names>JM</given-names></string-name></person-group>. <article-title>Protein engineering of enzymes for process applications</article-title>. <source>Current Opinion in Chemical Biology</source>. <year>2013</year>; <volume>17</volume>(<issue>2</issue>):<fpage>310</fpage>–<lpage>316</lpage>.</mixed-citation></ref>
<ref id="c61"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Wüthrich</surname> <given-names>K.</given-names></string-name></person-group> <article-title>Protein structure determination in solution by NMR spectroscopy</article-title>. <source>Journal of Biological Chemistry</source>. <year>1990</year>; <volume>265</volume>(<issue>36</issue>):<fpage>22059</fpage>–<lpage>22062</lpage>.</mixed-citation></ref>
<ref id="c62"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Xu</surname> <given-names>M</given-names></string-name>, <string-name><surname>Zhang</surname> <given-names>Z</given-names></string-name>, <string-name><surname>Lu</surname> <given-names>J</given-names></string-name>, <string-name><surname>Zhu</surname> <given-names>Z</given-names></string-name>, <string-name><surname>Zhang</surname> <given-names>Y</given-names></string-name>, <string-name><surname>Chang</surname> <given-names>M</given-names></string-name>, <string-name><surname>Liu</surname> <given-names>R</given-names></string-name>, <string-name><surname>Tang</surname> <given-names>J.</given-names></string-name></person-group> <article-title>Peer: A comprehensive and multi-task benchmark for protein sequence understanding</article-title>. <source>NeurIPS</source>. <year>2022</year>; <volume>35</volume>:<fpage>35156</fpage>–<lpage>35173</lpage>.</mixed-citation></ref>
<ref id="c63"><mixed-citation publication-type="confproc"><person-group person-group-type="author"><string-name><surname>Yang</surname> <given-names>KK</given-names></string-name>, <string-name><surname>Lu</surname> <given-names>AX</given-names></string-name>, <string-name><surname>Fusi</surname> <given-names>N.</given-names></string-name></person-group> <article-title>Convolutions are competitive with transformers for protein sequence pretraining</article-title>. In: <conf-name>ICLR Machine Learning for Drug Discovery</conf-name>; <year>2022</year>.</mixed-citation></ref>
<ref id="c64"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Yang</surname> <given-names>KK</given-names></string-name>, <string-name><surname>Wu</surname> <given-names>Z</given-names></string-name>, <string-name><surname>Arnold</surname> <given-names>FH</given-names></string-name></person-group>. <article-title>Machine-learning-guided directed evolution for protein engineering</article-title>. <source>Nature Methods</source>. <year>2019</year>; <volume>16</volume>(<issue>8</issue>):<fpage>687</fpage>–<lpage>694</lpage>.</mixed-citation></ref>
<ref id="c65"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Yang</surname> <given-names>KK</given-names></string-name>, <string-name><surname>Zanichelli</surname> <given-names>N</given-names></string-name>, <string-name><surname>Yeh</surname> <given-names>H.</given-names></string-name></person-group> <article-title>Masked inverse folding with sequence transfer for protein representation learning</article-title>. <source>Protein Engineering, Design and Selection</source>. <year>2023</year>; <volume>36</volume>.</mixed-citation></ref>
<ref id="c66"><mixed-citation publication-type="confproc"><person-group person-group-type="author"><string-name><surname>Yi</surname> <given-names>K</given-names></string-name>, <string-name><surname>Zhou</surname> <given-names>B</given-names></string-name>, <string-name><surname>Shen</surname> <given-names>Y</given-names></string-name>, <string-name><surname>Liò</surname> <given-names>P</given-names></string-name>, <string-name><surname>Wang</surname> <given-names>YG</given-names></string-name></person-group>. <article-title>Graph denoising diffusion for inverse protein folding</article-title>. In: <conf-name>NeurIPS</conf-name>; <year>2023</year>..</mixed-citation></ref>
<ref id="c67"><mixed-citation publication-type="preprint"><person-group person-group-type="author"><string-name><surname>Zhang</surname> <given-names>N</given-names></string-name>, <string-name><surname>Bi</surname> <given-names>Z</given-names></string-name>, <string-name><surname>Liang</surname> <given-names>X</given-names></string-name>, <string-name><surname>Cheng</surname> <given-names>S</given-names></string-name>, <string-name><surname>Hong</surname> <given-names>H</given-names></string-name>, <string-name><surname>Deng</surname> <given-names>S</given-names></string-name>, <string-name><surname>Lian</surname> <given-names>J</given-names></string-name>, <string-name><surname>Zhang</surname> <given-names>Q</given-names></string-name>, <string-name><surname>Chen</surname> <given-names>H.</given-names></string-name></person-group> <article-title>Ontoprotein: Protein pretraining with gene ontology embedding</article-title>. <source>arXiv</source>:<elocation-id>220111147</elocation-id>. <year>2022</year>;.</mixed-citation></ref>
<ref id="c68"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Zhao</surname> <given-names>W</given-names></string-name>, <string-name><surname>Zhong</surname> <given-names>B</given-names></string-name>, <string-name><surname>Zheng</surname> <given-names>L</given-names></string-name>, <string-name><surname>Tan</surname> <given-names>P</given-names></string-name>, <string-name><surname>Wang</surname> <given-names>Y</given-names></string-name>, <string-name><surname>Leng</surname> <given-names>H</given-names></string-name>, <string-name><surname>de Souza</surname> <given-names>N</given-names></string-name>, <string-name><surname>Liu</surname> <given-names>Z</given-names></string-name>, <string-name><surname>Hong</surname> <given-names>L</given-names></string-name>, <string-name><surname>Xiao</surname> <given-names>X.</given-names></string-name></person-group> <article-title>Proteome-wide 3D structure prediction provides insights into the ancestral metabolism of ancient archaea and bacteria</article-title>. <source>Nature Communications</source>. <year>2022</year>; <volume>13</volume>(<issue>1</issue>):<fpage>7861</fpage>.</mixed-citation></ref>
<ref id="c69"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Zheng</surname> <given-names>L</given-names></string-name>, <string-name><surname>Lu</surname> <given-names>H</given-names></string-name>, <string-name><surname>Zan</surname> <given-names>B</given-names></string-name>, <string-name><surname>Li</surname> <given-names>S</given-names></string-name>, <string-name><surname>Liu</surname> <given-names>H</given-names></string-name>, <string-name><surname>Liu</surname> <given-names>Z</given-names></string-name>, <string-name><surname>Huang</surname> <given-names>J</given-names></string-name>, <string-name><surname>Liu</surname> <given-names>Y</given-names></string-name>, <string-name><surname>Jiang</surname> <given-names>F</given-names></string-name>, <string-name><surname>Liu</surname> <given-names>Q</given-names></string-name>, <etal>et al.</etal></person-group> <article-title>Loosely-packed dynamical structures with partially-melted surface being the key for thermophilic argonaute proteins achieving high DNA-cleavage activity</article-title>. <source>Nucleic Acids Research</source>. <year>2022</year>; <volume>50</volume>(<issue>13</issue>):<fpage>7529</fpage>–<lpage>7544</lpage>.</mixed-citation></ref>
<ref id="c70"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Zhou</surname> <given-names>B</given-names></string-name>, <string-name><surname>Zheng</surname> <given-names>L</given-names></string-name>, <string-name><surname>Wu</surname> <given-names>B</given-names></string-name>, <string-name><surname>Tan</surname> <given-names>Y</given-names></string-name>, <string-name><surname>Lv</surname> <given-names>O</given-names></string-name>, <string-name><surname>Yi</surname> <given-names>K</given-names></string-name>, <string-name><surname>Fan</surname> <given-names>G</given-names></string-name>, <string-name><surname>Hong</surname> <given-names>L.</given-names></string-name></person-group> <article-title>Protein engineering with lightweight graph denoising neural networks</article-title>. <source>Journal of Chemical Information and Modeling</source>. <year>2024</year>; <volume>64</volume>(<issue>9</issue>):<fpage>3650</fpage>–<lpage>3661</lpage>.</mixed-citation></ref>
<ref id="c71"><mixed-citation publication-type="preprint"><person-group person-group-type="author"><string-name><surname>Zhou</surname> <given-names>B</given-names></string-name>, <string-name><surname>Zheng</surname> <given-names>L</given-names></string-name>, <string-name><surname>Wu</surname> <given-names>B</given-names></string-name>, <string-name><surname>Yi</surname> <given-names>K</given-names></string-name>, <string-name><surname>Zhong</surname> <given-names>B</given-names></string-name>, <string-name><surname>Lio</surname> <given-names>P</given-names></string-name>, <string-name><surname>Hong</surname> <given-names>L.</given-names></string-name></person-group> <article-title>Conditional Protein Denoising Diffusion Generates Programmable Endonucleases</article-title>. <source>bioRxiv</source>. <year>2023</year>; p. <fpage>2023</fpage>–<lpage>08</lpage>.</mixed-citation></ref>
<ref id="c72"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Zhou</surname> <given-names>Y</given-names></string-name>, <string-name><surname>Pan</surname> <given-names>Q</given-names></string-name>, <string-name><surname>Pires</surname> <given-names>DE</given-names></string-name>, <string-name><surname>Rodrigues</surname> <given-names>CH</given-names></string-name>, <string-name><surname>Ascher</surname> <given-names>DB</given-names></string-name></person-group>. <article-title>DDMut: predicting effects of mutations on protein stability using deep learning</article-title>. <source>Nucleic Acids Research</source>. <year>2023</year>; p. <fpage>gkad472</fpage>.</mixed-citation></ref>
</ref-list>
</back>
<sub-article id="sa0" article-type="editor-report">
<front-stub>
<article-id pub-id-type="doi">10.7554/eLife.98033.2.sa3</article-id>
<title-group>
<article-title>eLife Assessment</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author">
<name>
<surname>Koo</surname>
<given-names>Peter</given-names>
</name>
<role specific-use="editor">Reviewing Editor</role>
<aff>
<institution-wrap>
<institution>Cold Spring Harbor Laboratory</institution>
</institution-wrap>
<city>Cold Spring Harbor</city>
<country>United States of America</country>
</aff>
</contrib>
</contrib-group>
<kwd-group kwd-group-type="evidence-strength">
<kwd>Solid</kwd>
</kwd-group>
<kwd-group kwd-group-type="claim-importance">
<kwd>Valuable</kwd>
</kwd-group>
</front-stub>
<body>
<p>ProtSSN is a <bold>valuable</bold> approach that generates protein embeddings by integrating sequence and structural information, demonstrating improved prediction of mutation effects on thermostability compared to competing models. The evidence supporting the authors' claims is <bold>solid</bold>, with well-executed comparisons. This work will be of particular interest to researchers in bioinformatics and structural biology, especially those focused on protein function and stability.</p>
</body>
</sub-article>
<sub-article id="sa1" article-type="referee-report">
<front-stub>
<article-id pub-id-type="doi">10.7554/eLife.98033.2.sa2</article-id>
<title-group>
<article-title>Reviewer #1 (Public review):</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author">
<anonymous/>
<role specific-use="referee">Reviewer</role>
</contrib>
</contrib-group>
</front-stub>
<body>
<p>After revisions:</p>
<p>My concerns have been addressed.</p>
<p>Prior to revisions:</p>
<p>Summary:</p>
<p>
The authors introduce a denoising-style model that incorporates both structure and primary-sequence embeddings to generate richer embeddings of peptides. My understanding is that the authors use ESM for the primary sequence embeddings, take resolved structures (or use structural predictions from AlphaFold when they're not available), then develop an architecture to combine these two with a loss that seems reminiscent of diffusion models or masked language model approaches. The embeddings can be viewed as ensemble-style embedding of the two levels of sequence information, or with AlphaFold, an ensemble of two methods (ESM+AlphaFold). The authors also gather external datasets to evaluate their approach and compare it to previous approaches. The approach seems promising, and appears to out-compete previous methods at several tasks. Nonetheless, I have strong concerns about a lack of verbosity as well as exclusion of relevant methods and references.</p>
<p>Advances:</p>
<p>
I appreciate the breadth of the analysis and comparisons to other methods. The authors separate tasks, models, and sizes of models in an intuitive, easy-to-read fashion that I find valuable for selecting a method for embedding peptides. Moreover, the authors gather two datasets for evaluating embeddings' utility for predicting thermostability. Overall, the work should be helpful for the field as more groups choose methods/pretraining strategies amenable to their goals, and can do so in an evidence-guided manner.</p>
<p>Considerations:</p>
<p>
Primarily, a majority of the results and conclusions (e.g., Table 3) are reached using data and methods from ProteinGym, yet the best-performing methods on ProteinGym are excluded from the paper (e.g., EVE-based models and GEMME). In the ProteinGym database, these methods outperform ProtSSN models. Moreover, these models were published over a year---or even 4 years in the case of GEMME---before ProtSSN, and I do not see justification for their exclusion in the text.</p>
<p>Secondly, related to comparison of other models, there is no section in the methods about how other models were used, or how their scores were computed. When comparing these models, I think it's crucial that there are explicit derivations or explanations for the exact task used for scoring each method. In other words, if the pre-training is indeed the important advance of the paper, the paper needs to show this more explicitly by explaining exactly which components of the model (and previous models) are used for evaluation. Are the authors extracting the final hidden layer representations of the model, treating these as features, then using these features in a regression task to predict fitness/thermostability/DDG etc.? How are the model embeddings of other methods being used, since, for example, many of these methods output a k-dimensional embedding of a given sequence, rather than one single score that can be correlated with some fitness/functional metric. Summarily, I think the text is lacking an explicit mention of how these embeddings are being summarized or used, as well as how this compares to the model presented.</p>
<p>I think the above issues can mainly be addressed by considering and incorporating points from Li et al. 2024[1] and potentially Tang &amp; Koo 2024[2]. Li et al.[1] make extremely explicit the use of pretraining for downstream prediction tasks. Moreover, they benchmark pretraining strategies explicitly on thermostability (one of the main considerations in the submitted manuscript), yet there is no mention of this work nor the dataset used (FLIP (Dallago et al., 2021)) in this current work. I think a reference and discussion of [1] is critical, and I would also like to see comparisons in line with [1], as [1] is very clear about what features from pretraining are used, and how. If the comparisons with previous methods were done in this fashion, this level of detail needs to be included in the text.</p>
<p>To conclude, I think the manuscript would benefit substantially from a more thorough comparison of previous methods. Maybe one way of doing this is following [1] or [2], and using the final embeddings of each method for a variety of regression tasks---to really make clear where these methods are performing relative to one another. I think a more thorough methods section detailing how previous methods did their scoring is also important. Lastly, TranceptEVE (or a model comparable to it) and GEMME should also be mentioned in these results, or at the bare minimum, be given justification for their absence.</p>
<p>[1] Feature Reuse and Scaling: Understanding Transfer Learning with Protein Language Models Francesca-Zhoufan Li, Ava P. Amini, Yisong Yue, Kevin K. Yang, Alex X. Lu bioRxiv 2024.02.05.578959; doi: <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.1101/2024.02.05.578959">https://doi.org/10.1101/2024.02.05.578959</ext-link></p>
<p>
[2] Evaluating the representational power of pre-trained DNA language models for regulatory genomics Ziqi Tang, Peter K Koo bioRxiv 2024.02.29.582810; doi: <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.1101/2024.02.29.582810">https://doi.org/10.1101/2024.02.29.582810</ext-link></p>
</body>
</sub-article>
<sub-article id="sa2" article-type="referee-report">
<front-stub>
<article-id pub-id-type="doi">10.7554/eLife.98033.2.sa1</article-id>
<title-group>
<article-title>Reviewer #2 (Public review):</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author">
<anonymous/>
<role specific-use="referee">Reviewer</role>
</contrib>
</contrib-group>
</front-stub>
<body>
<p>Summary:</p>
<p>To design proteins and predict disease, we want to predict the effects of mutations on the function of a protein. To make these predictions, biologists have long turned to statistical models that learn patterns that are conserved across evolution. There is potential to improve our predictions however by incorporating structure. In this paper the authors build a denoising auto-encoder model that incorporates sequence and structure to predict mutation effects. The model is trained to predict the sequence of a protein given its perturbed sequence and structure. The authors demonstrate that this model is able to predict the effects of mutations better than sequence-only models.</p>
<p>As well, the authors curate a set of assays measuring the effect of mutations on thermostability. They demonstrate their model also predicts the effects of these mutations better than previous models and make this benchmark available for the community.</p>
<p>Strengths:</p>
<p>The authors describe a method that makes accurate mutation effect predictions by informing its predictions with structure.</p>
<p>Weaknesses:</p>
<p>In the review period, the authors included a previous method, SaProt, that similarly uses protein structure to predict the effects of mutations, in their evaluations.</p>
<p>
They see that SaProt performs similarly to their method.</p>
<p>Readers should note that methods labelled as &quot;few-shot&quot; in comparisons do not make use of experimental labels, but rather use sequences inferred as homologous; these sequences are also often available even if the protein has never been experimentally tested.</p>
<p>ProteinGym is largely made of deep mutational scans, which measure the effect of every mutation on a protein. These new benchmarks contain on average measurements of less than a percent of all possible point mutations of their respective proteins. It is unclear what sorts of protein regions these mutations are more likely to lie in; therefore it is challenging to make conclusions about what a model has necessarily learned based on its score on this benchmark. For example, several assays in this new benchmark seem to be similar to each other, such as four assays on ubiquitin performed in pH 2.25 to pH 3.0.</p>
<p>The authors state that their new benchmarks are potentially more useful than those of ProteinGym, citing Frazer 2021; readers should be aware that the mutations from the later source are actually mutations whose impact on human health has been determined through multiple sources, including population genetics, clinical evidence and some experiment.</p>
</body>
</sub-article>
<sub-article id="sa3" article-type="author-comment">
<front-stub>
<article-id pub-id-type="doi">10.7554/eLife.98033.2.sa0</article-id>
<title-group>
<article-title>Author response:</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author">
<name>
<surname>Tan</surname>
<given-names>Yang</given-names>
</name>
<role specific-use="author">Author</role>
</contrib>
<contrib contrib-type="author">
<name>
<surname>Zhou</surname>
<given-names>Bingxin</given-names>
</name>
<role specific-use="author">Author</role>
</contrib>
<contrib contrib-type="author">
<name>
<surname>Zheng</surname>
<given-names>Lirong</given-names>
</name>
<role specific-use="author">Author</role>
</contrib>
<contrib contrib-type="author">
<name>
<surname>Fan</surname>
<given-names>Guisheng</given-names>
</name>
<role specific-use="author">Author</role>
</contrib>
<contrib contrib-type="author">
<name>
<surname>Hong</surname>
<given-names>Liang</given-names>
</name>
<role specific-use="author">Author</role>
</contrib>
</contrib-group>
</front-stub>
<body>
<p>The following is the authors’ response to the original reviews.</p>
<disp-quote content-type="editor-comment">
<p><bold>Response to Reviewer 1</bold></p>
<p>Summary:</p>
<p>The authors introduce a denoising-style model that incorporates both structure and primary-sequence embeddings to generate richer embeddings of peptides. My understanding is that the authors use ESM for the primary sequence embeddings, take resolved structures (or use structural predictions from AlphaFold when they're not available), and then develop an architecture to combine these two with a loss that seems reminiscent of diffusion models or masked language model approaches. The embeddings can be viewed as ensemble-style embedding of the two levels of sequence information, or with AlphaFold, an ensemble of two methods (ESM+AlphaFold). The authors also gather external datasets to evaluate their approach and compare it to previous approaches. The approach seems promising and appears to out-compete previous methods at several tasks. Nonetheless, I have strong concerns about a lack of verbosity as well as the exclusion of relevant methods and references.</p>
</disp-quote>
<p>Thank you for the comprehensive summary. Regarding the concerns listed in the review below, we have made point-to-point response. We also modified our manuscript in accordance.</p>
<disp-quote content-type="editor-comment">
<p>Advances:</p>
<p>I appreciate the breadth of the analysis and comparisons to other methods. The authors separate tasks, models, and sizes of models in an intuitive, easy-to-read fashion that I find valuable for selecting a method for embedding peptides. Moreover, the authors gather two datasets for evaluating embeddings' utility for predicting thermostability. Overall, the work should be helpful for the field as more groups choose methods/pretraining strategies amenable to their goals, and can do so in an evidence-guided manner.</p>
</disp-quote>
<p>Thank you for recognizing the strength of our work in terms of the notable contributions, the solid analysis, and the clear presentation.</p>
<disp-quote content-type="editor-comment">
<p>Considerations:</p>
<p>(1) Primarily, a majority of the results and conclusions (e.g., Table 3) are reached using data and methods from ProteinGym, yet the best-performing methods on ProteinGym are excluded from the paper (e.g., EVEbased models and GEMME). In the ProteinGym database, these methods outperform ProtSSN models. Moreover, these models were published over a year---or even 4 years in the case of GEMME---before ProtSSN, and I do not see justification for their exclusion in the text.</p>
</disp-quote>
<p>We decided to exclude the listed methods from the primary table as they are all MSA-based methods, which are considered few-shot methods in deep learning (Rao et al., ICML, 2021). In contrast, the proposed ProtSSN is a zero-shot method that makes inferences based on less information than few-shot methods. Moreover, it is possible for MSA-based methods to query aligned sequences based on predictions. For instance, Tranception (Notin et al., ICML, 2022) selects the model with the optimal proportions of logits and retrieval results according to the average correlation score on ProteinGym (Table 10, Notin et al., 2022).</p>
<p>With this in mind, we only included zero-shot deep learning methods in Table 3, which require no more than the sequence and structure of the underlying wild-type protein when scoring the mutants. In the revision, we have added the performance of SaProt to Table 3, and the performance of GEMME, TranceptEVE, and SaProt to Table 5. Furthermore, we have released the model's performance on the public leaderboard of ProteinGym v1 at proteingym.org.</p>
<disp-quote content-type="editor-comment">
<p>(2) Secondly, related to the comparison of other models, there is no section in the methods about how other models were used, or how their scores were computed. When comparing these models, I think it's crucial that there are explicit derivations or explanations for the exact task used for scoring each method. In other words, if the pre-training is indeed an important advance of the paper, the paper needs to show this more explicitly by explaining exactly which components of the model (and previous models) are used for evaluation. Are the authors extracting the final hidden layer representations of the model, treating these as features, and then using these features in a regression task to predict fitness/thermostability/DDG etc.? How are the model embeddings of other methods being used, since, for example, many of these methods output a k-dimensional embedding of a given sequence, rather than one single score that can be correlated with some fitness/functional metric? Summarily, I think the text lacks an explicit mention of how these embeddings are being summarized or used, as well as how this compares to the model presented.</p>
</disp-quote>
<p>Thank you for the suggestion. Below we address the questions in three points.</p>
<p>(1) The task and the scoring for each method. We followed your suggestion and added a new paragraph titled “Scoring Function” on page 9 to provide a detailed explanation of the scoring functions used by other deep learning zero-shot methods.</p>
<p>(2) The importance of individual pre-training modules. The complete architecture of the proposed ProtSSN model has been introduced on page 7-8. Empirically, the influence of each pre-training module on the overall performance has been examined through ablation studies on page 12. In summary, the optimal performance is achieved by combining all the individual modules and designs.</p>
<p>(3) The input of fitness scoring. For a zero-shot prediction task, the final score for a mutant will be calculated by wildly-used functions named log-odds ratio (for encoder models, including ours) or loglikelihood (for autoregressive models or inverse folding models. In the revision, we explicitly define these functions in sections “Inferencing” (page 7) and “Scoring Function” (page 9).</p>
<disp-quote content-type="editor-comment">
<p>(3) I think the above issues can mainly be addressed by considering and incorporating points from Li et al. 2024[1] and potentially Tang &amp; Koo 2024[2]. Li et al.[1] make extremely explicit the use of pretraining for downstream prediction tasks. Moreover, they benchmark pretraining strategies explicitly on thermostability (one of the main considerations in the submitted manuscript), yet there is no mention of this work nor the dataset used (FLIP (Dallago et al., 2021)) in this current work. I think a reference and discussion of [1] is critical, and I would also like to see comparisons in line with [1], as [1] is very clear about what features from pretraining are used, and how. If the comparisons with previous methods were done in this fashion, this level of detail needs to be included in the text.</p>
</disp-quote>
<p>The initial version did not include an explicit comparison with the mentioned reference due to the difference in the learning task. In particular, [1] formulates a supervised learning task on predicting the continuous scores of mutants of specific proteins. In comparison, we make zero-shot predictions, where the model is trained in a self-supervised learning manner that requires no labels from experiments. In the revision, we added discussions in “Discussion and Conclusion” (lines 476-484):</p>
<disp-quote content-type="editor-comment">
<p><bold>Recommendations For The Authors:</bold></p>
<p>Comment 1</p>
<p>I found the methods lacking in the sense that there is never a simple, explicit statement about what is the exact input and output of the model. What are the components of the input that are required by the user (to generate) or supply to the model? Are these inputs different at training vs inference time? The loss function seems like it's trying to de-noise a modified sequence, can you make this more explicit, i.e. exactly what values/objects are being compared in the loss?</p>
</disp-quote>
<p>We have added a more detailed description in the &quot;Model Pipeline&quot; section (page 7), which explains the distinct input requirements for training and inference, as well as the formulation of the employed loss function. To summarize:</p>
<p>(1) Both sequence and structure information are used in training and inference. Specifically, structure information is represented as a 3D graph with coordinates, while sequence information consists of AA-wise hidden representations encoded by ESM2-650M. During inference, instead of encoding each mutant individually, the model encodes the WT protein and uses the output probability scores relevant to the mutant to calculate the fitness score. This is a standard operation in many zero-shot fitness prediction models, commonly referred to as the log-odds-ratio.</p>
<p>(2) The loss function compares the differences between the noisy input sequence and the output (recovered) AA sequence. Noise is added to the input sequences, and the model is trained to denoise them (see “Ablation Study” for the different types of noise we tested). This approach is similar to a one-step diffusion process or BERT-style token permutation. The model learns to recover the probability of each node (AA) being one of 33 tokens. A cross-entropy loss is then applied to compare this distribution with the ground-truth (unpermuted) AA sequence, aiming to minimize the difference.</p>
<p>To better present the workflow, we revised the manuscript accordingly.</p>
<disp-quote content-type="editor-comment">
<p>Comment 2</p>
<p>Related to the above, I'm not exactly sure where the structural/tertiary structure information comes from. In the methods, they don't state exactly whether the 3D coordinates are given in the CATH repository or where exactly they come from. In the results section they mention using AlphaFold to obtain coordinates for a specific task---is the use of AlphaFold limited only to these tasks/this is to show robustness whether using AlphaFold or realized coordinates?</p>
</disp-quote>
<p>The 3D coordinates of all proteins in the training set are derived from the crystal structures in CATH v4.3.0 to ensure a high-quality input dataset (see &quot;Training Setup,&quot; Page 8). However, during the inference phase, we used predicted structures from AlphaFold2 and ESMFold as substitutes. This approach enhances the generalizability of our method, as in real-world scenarios, the crystal structure of the template protein to be engineered is not always available. The associated descriptions can be found in “Training Setup” (lines 271-272) and “Folding Methods” (lines 429-435).</p>
<disp-quote content-type="editor-comment">
<p>Comment 3</p>
<p>Lines 142+144 missing reference &quot;Section establishes&quot;, &quot;provided in Section .&quot;</p>
<p>199 &quot;see Section &quot; missing reference</p>
<p>214 missing &quot;Section&quot;</p>
</disp-quote>
<p>Thank you for pointing this out. We have fixed all missing references in the revision.</p>
<disp-quote content-type="editor-comment">
<p>Comment 4</p>
<p>Table 2 - seems inconsistent to mention the number of parameters in the first 2 methods, then not in the others (though I see in Table 3 this is included, so maybe should just be omitted in Table 2).</p>
</disp-quote>
<p>In Table 2, we present the zero-shot methods used as baselines. Since many methods have different versions due to varying hyperparameter settings, we decided to list the number of parameters in the following tables.</p>
<p>We have double-checked both Table 3 and Table 5 and confirm that there is no inconsistency in the reported number of parameters. One potential explanation for the observed difference in the comment could be due to the differences in the number of parameters between single and ensemble methods. The ensemble method averages the predictions of multiple models, and we sum the total number of parameters across all models involved. For example, RITA-ensemble has 2210M parameters, derived from the sum of four individual models with 30M, 300M, 680M, and 1200M parameters.</p>
<disp-quote content-type="editor-comment">
<p>Comment 5</p>
<p>In general, I found using the word &quot;type&quot; instead of &quot;residue&quot; a bit unnatural. As far as I can tell, the norm in the field is to say &quot;amino acid&quot; or &quot;residue&quot; rather than &quot;type&quot;. This somewhat confused me when trying to understand the methods section, especially when talking about injecting noise (I figured &quot;type&quot; may refer to evolutionarily-close, or physicochemically-close residues). Maybe it's not necessary to change this in every instance, but something to consider in terms of ease of reading.</p>
</disp-quote>
<p>Thank you for your suggestion. The term &quot;type&quot; we used is a common expression similar to &quot;class&quot; in the NLP field. To avoid further confusion to the biologists, we have revised the manuscript accordingly.</p>
<disp-quote content-type="editor-comment">
<p>Comment 6</p>
<p>197 should this read &quot;based on the kNN &quot;algorithm&quot;&quot; (word missing) or maybe &quot;based on &quot;its&quot; kNN&quot;?</p>
</disp-quote>
<p>We have corrected the typo accordingly. It now reads “the 𝑘-nearest neighbor algorithm (𝑘NN)” (line 198).</p>
<disp-quote content-type="editor-comment">
<p>Comment 7</p>
<p>200 weights of dimension 93, where does this number come from?</p>
</disp-quote>
<p>The edge features are derived by Zhou et al., 2024. We have updated the reference in the manuscript for clarity (lines 201-202).</p>
<disp-quote content-type="editor-comment">
<p>Comment 8</p>
<p>210-212 &quot;representations of the noisy AA sequence are encoded from the noisy input&quot; what is the &quot;noisy AA sequence?&quot; might be helpful to exactly defined what is &quot;noisy input&quot; or &quot;noisy AA sequence&quot;. This sentence could potentially be worded to make it clearer, e.g. &quot;we take the modified input sequence and embed it using [xyz].&quot;</p>
</disp-quote>
<p>We have revised the text accordingly. In the revised see lines 211-212:</p>
<disp-quote content-type="editor-comment">
<p>Comment 9</p>
<p>In Table 3</p>
<p>Formatting, DTm (million), (million) should be under &quot;# Params&quot; likely?</p>
<p>Also for DDG this is reported on only a few hundred mutations, it might be worth plotting the confidence intervals over the Spearman correlation (e.g. by bootstrapping the correlation coefficient).</p>
</disp-quote>
<p>We followed the suggestion and added “million” under the &quot;# Params&quot;. We have added the bootstrapped results for DDG and DTm to Table 6. For each dataset, we randomly sampled 50% of the data for ten independent runs. ProtSSN achieves the top performance with a considerably small variance.</p>
<disp-quote content-type="editor-comment">
<p>Comment 10</p>
<p>The paragraph in lines 319 to lines 328 I feel may lack sufficient evidence.</p>
<p>&quot;While sequence-based analysis cannot entirely replace the role of structure-based analysis, compared to a fully structure-based deep learning method, a protein language model is more likely to capture sufficient information from sequences by increasing the model scale, i.e., the number of trainable parameters.&quot;</p>
<p>This claim is made without a citation, such as [1]. Increasing the scale of the model doesn't always align with improving out-of-sample/generalization performance. I don't feel fully convinced by the claim that worse prediction is ameliorated by increasing the number of parameters. In Table 3 the performance is not monotonic with (nor scales with) the number of parameters, even within a model. See ProGen2 Expression scores, or ESM-2 Stability scores, as a function of their model sizes. In [1], the authors discuss whether pretraining strategies are aligned with specific tasks. I think rewording this paragraph and mentioning this paper is important. Figure 3 shows that maybe there's some evidence for this but I don't feel entirely convinced by the plot.</p>
</disp-quote>
<p>We agree that increasing the number of learnable parameters does not always result in better performance in downstream tasks. However, what we intended to convey is that language models typically need to scale up in size to capture the interactions among residues, while structure-based models can achieve this more efficiently with lower computational costs. We have rephrased this paragraph in the paper to clarify our point in lines 340-342.</p>
<disp-quote content-type="editor-comment">
<p>Comment 11</p>
<p>Line 327 related to my major comment, &quot; a comprehensive framework, such as ProtSSN, exhibits the best performance.&quot; Refers to performance on ProteinGym, yet the best-performing methods on ProteinGym are excluded from the comparison.</p>
</disp-quote>
<p>The primary comparisons were conducted using zero-shot models for fairness, meaning that the baseline models were not trained on MSA and did not use test performance to tune their hyperparameters. It's also worth noting that SaProt (the current SOTA model) had not been updated on the leaderboard at the time of submitting this paper. In the revised manuscript, we have included GEMME and TranceptEVE in Table 5 and SaProt in Tables 3, 5, and 6. While ProtSSN does not achieve SOTA performance in every individual task, our key argument in the analysis is to highlight the overall advantage of hybrid encoders compared to single sequence-based or structure-based models. We made clearer statement in the revised manuscript (line 349):</p>
<disp-quote content-type="editor-comment">
<p>Comment 12</p>
<p>Line 347, line abruptly ends &quot;equivariance when embedding protein geometry significantly.&quot; (?).</p>
</disp-quote>
<p>We have fixed the typo, (lines 372-373):</p>
<disp-quote content-type="editor-comment">
<p>Comment 13</p>
<p>Figure 3 I think can be made clearer. Instead of using True/false maybe be more explicit. For example in 3b, say something like &quot;One-hot encoded&quot; or &quot;ESM-2 embedded&quot;.</p>
</disp-quote>
<p>The labels were set to True/False with the title of the subfigures so that they can be colored consistently.</p>
<p>Following the suggestion, we have updated the captions in the revised manuscript for clarity.</p>
<disp-quote content-type="editor-comment">
<p>Comment 14</p>
<p>Lines 381-382 &quot;average sequential embedding of all other Glycines&quot; is to say that the score is taken as the average score in which Glycine is substituted at every other position in the peptide? Somewhat confused by the language &quot;average sequential embedding&quot; and think rephrasing could be done to make things clearer.</p>
</disp-quote>
<p>We have revised the related text accordingly a for clearer presentation (lines 406-413).</p>
<disp-quote content-type="editor-comment">
<p>Comment 15</p>
<p>Table 5, and in mentions to VEP, if ProtSSN is leveraging AlphaFold for its structural information, I disagree that ProtSSN is not an MSA method, and I find it unfair to place ProtSSN in the &quot;non-MSA&quot; categories. If this isn't the case, then maybe making clearer the inputs etc. in the Methods will help.</p>
</disp-quote>
<p>Your response is well-articulated and clear, but here is a slight revision for improved clarity and flow:</p>
<p>We respectfully disagree with classifying a protein encoding method based solely on its input structure. While AF2 leverages MSA sequences to predict protein structures, this information is not used in our model, and our model is not exclusive to AF2-predicted structures. When applicable, the model can encode structures derived from experimental data or other folding methods. For example, in the manuscript, we compared the performance of ProtSSN using proteins folded by both AF2 and ESMFold.</p>
<p>However, we would like to emphasize that comparing the sensitivity of an encoding method across different structures or conformations is not the primary focus of our work. In contrast, some methods explicitly use MSA during model training. For instance, MSA-Transformer encodes MSA information directly into the protein embedding, and Tranception-retrieval utilizes different sets of MSA hyperparameters depending on the validation set's performance.</p>
<p>To avoid further confusion, we have revised the terms &quot;MSA methods&quot; and &quot;non-MSA methods&quot; in the manuscript to &quot;zero-shot methods&quot; and &quot;few-shot methods.&quot;</p>
<disp-quote content-type="editor-comment">
<p>Comment 16</p>
<p>Table 3 they're highlighted as the best, yet on ProteinGym there's several EVE models that do better as well as GEMMA, which are not referenced.</p>
</disp-quote>
<p>The comparison in Table 3 focuses on zero-shot methods, whereas GEMME and EVE are few-shot models. Since these methods have different input requirements, directly comparing them could lead to</p>
<p>unfair conclusions. For this reason, we reserved the comparisons with these few-shot models for Table 5, where we aim to provide a more comprehensive evaluation of all available methods.</p>
<disp-quote content-type="editor-comment">
<p><bold>Response to Reviewer 2</bold></p>
<p>Summary:</p>
<p>To design proteins and predict disease, we want to predict the effects of mutations on the function of a protein. To make these predictions, biologists have long turned to statistical models that learn patterns that are conserved across evolution. There is potential to improve our predictions however by incorporating structure. In this paper, the authors build a denoising auto-encoder model that incorporates sequence and structure to predict mutation effects. The model is trained to predict the sequence of a protein given its perturbed sequence and structure. The authors demonstrate that this model is able to predict the effects of mutations better than sequence-only models.</p>
</disp-quote>
<p>Thank you for your thorough review and clear summary of our work. Below, we provide a detailed, pointby-point response to each of your questions and concerns.</p>
<disp-quote content-type="editor-comment">
<p>Strengths:</p>
<p>The authors describe a method that makes accurate mutation effect predictions by informing its predictions with structure.</p>
</disp-quote>
<p>Thank you for your clear summary of our highlights.</p>
<disp-quote content-type="editor-comment">
<p>Weaknesses:</p>
<p>Comment 1</p>
<p>It is unclear how this model compares to other methods of incorporating structure into models of biological sequences, most notably SaProt.</p>
<p>(<ext-link ext-link-type="uri" xlink:href="https://www.biorxiv.org/content/10.1101/2023.10.01.560349v1.full.pdf">https://www.biorxiv.org/content/10.1101/2023.10.01.560349v1.full.pdf</ext-link>).</p>
</disp-quote>
<p>In the revision, we have updated the performance of SaProt single models (with both masked and unmasked versions with the pLDDT score) and ensemble models in the Tables 3, 5, and 6.</p>
<p>In the revised manuscript, we have updated the performance results for SaProt's single models (both masked and unmasked versions with the pLDDT score) as well as the ensemble models. These updates are reflected in Tables 3, 5, and 6.</p>
<disp-quote content-type="editor-comment">
<p>Comment 2</p>
<p>ProteinGym is largely made of deep mutational scans, which measure the effect of every mutation on a protein. These new benchmarks contain on average measurements of less than a percent of all possible point mutations of their respective proteins. It is unclear what sorts of protein regions these mutations are more likely to lie in; therefore it is challenging to make conclusions about what a model has necessarily learned based on its score on this benchmark. For example, several assays in this new benchmark seem to be similar to each other, such as four assays on ubiquitin performed at pH 2.25 to pH 3.0.</p>
</disp-quote>
<p>We agree that both DTm and DDG are smaller datasets, making them less comprehensive than ProteinGym. However, we believe DTm and DDG provide valuable supplementary insights for the following reasons:</p>
<p>(1) These two datasets are low-throughput and manually curated. Compared to datasets from highthroughput experiments like ProteinGym, they contain fewer errors from experimental sources and data processing, offering cleaner and more reliable data.</p>
<p>(2) Environmental factors are crucial for the function and properties of enzymes, which is a significant concern for many biologists when discussing enzymatic functions. Existing benchmarks like ProteinGym tend to simplify these factors and focus more on global protein characteristics (e.g., AA sequence), overlooking the influence of environmental conditions.</p>
<p>(3) While low-throughput datasets like DTm and DDG do not cover all AA positions or perform extensive saturation mutagenesis, these experiments often target mutations at sites with higher potential for positive outcomes, guided by prior knowledge. As a result, the positive-to-negative ratio is more meaningful than random mutagenesis datasets, making these benchmarks more relevant for evaluating model performance.</p>
<p>We would like to emphasize that DTm and DDG are designed to complement existing benchmarks rather than replace ProteinGym. They address different scales and levels of detail in fitness prediction, and their inclusion allows for a more comprehensive evaluation of deep learning models.</p>
<disp-quote content-type="editor-comment">
<p><bold>Recommendations For The Authors:</bold></p>
<p>Comment 1</p>
<p>I recommend including SaProt in your benchmarks.</p>
</disp-quote>
<p>In the revision, we added comparisons with SaProt in all the Tables (3, 5 and 6).</p>
<disp-quote content-type="editor-comment">
<p>Comment 2</p>
<p>I also recommend investigating and giving a description of the bias in these new datasets.</p>
</disp-quote>
<p>The bias of the new benchmarks could be found in Table 1, where the mutants are distributed evenly at different level of pH values.</p>
<p>In the revision, we added a discussion regarding the new datasets in “Discussion and Conclusion” (lines 496-504 of the revised version).</p>
<disp-quote content-type="editor-comment">
<p>Comment 3</p>
<p>I also recommend reporting the model's ability to predict disease using ClinVar -- this experiment is conspicuously absent.</p>
</disp-quote>
<p>Following the suggestion, we retrieved 2,525 samples from the ClinVar dataset available on ProteinGym’s website. Since the official source did not provide corresponding structure files, we performed the following three steps:</p>
<p>(1) We retrieved the UniProt IDs for the sequences from the UniProt website and downloaded the corresponding AlphaFold2 structures for 2,302 samples.</p>
<p>(2) For the remaining proteins, we used ColabFold 1.5.5 to perform structure prediction.</p>
<p>(3) Among these, 12 proteins were too long to be folded by ColabFold, for which we used the AlphaFold3 server for prediction.</p>
<p>All processed structural data can be found at <ext-link ext-link-type="uri" xlink:href="https://huggingface.co/datasets/tyang816/ClinVar_PDB">https://huggingface.co/datasets/tyang816/ClinVar_PDB</ext-link>. Our test results are provided in the following table. ProtSSN achieves the top performance over baseline methods.</p>
<table-wrap id="sa3table1">
<label>Author response table 1.</label>
<graphic mime-subtype="jpg" xlink:href="elife-98033-sa3-table1.jpg" mimetype="image"/>
</table-wrap>
</body>
</sub-article>
</article>