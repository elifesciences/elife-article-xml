<?xml version="1.0" ?><!DOCTYPE article PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Archiving and Interchange DTD v1.3 20210610//EN"  "JATS-archivearticle1-mathml3.dtd"><article xmlns:ali="http://www.niso.org/schemas/ali/1.0/" xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" article-type="research-article" dtd-version="1.3" xml:lang="en">
<front>
<journal-meta>
<journal-id journal-id-type="nlm-ta">elife</journal-id>
<journal-id journal-id-type="publisher-id">eLife</journal-id>
<journal-title-group>
<journal-title>eLife</journal-title>
</journal-title-group>
<issn publication-format="electronic" pub-type="epub">2050-084X</issn>
<publisher>
<publisher-name>eLife Sciences Publications, Ltd</publisher-name>
</publisher>
</journal-meta>
<article-meta>
<article-id pub-id-type="publisher-id">89911</article-id>
<article-id pub-id-type="doi">10.7554/eLife.89911</article-id>
<article-id pub-id-type="doi" specific-use="version">10.7554/eLife.89911.2</article-id>
<article-version-alternatives>
<article-version article-version-type="publication-state">reviewed preprint</article-version>
<article-version article-version-type="preprint-version">1.3</article-version>
</article-version-alternatives>
<article-categories>
<subj-group subj-group-type="heading">
<subject>Neuroscience</subject>
</subj-group>
</article-categories>
<title-group>
<article-title>Determinantal Point Process Attention Over Grid Cell Code Supports Out of Distribution Generalization</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author">
<name>
<surname>Mondal</surname>
<given-names>Shanka Subhra</given-names>
</name>
<xref ref-type="aff" rid="a1"/>
<email xlink:href="mailto:smondal@princeton.edu">smondal@princeton.edu</email>
</contrib>
<contrib contrib-type="author">
<name>
<surname>Frankland</surname>
<given-names>Steven</given-names>
</name>
<xref ref-type="aff" rid="a2"/>
<email xlink:href="mailto:s.m.frankland@gmail.com">s.m.frankland@gmail.com</email>
</contrib>
<contrib contrib-type="author">
<name>
<surname>Webb</surname>
<given-names>Taylor W.</given-names>
</name>
<xref ref-type="aff" rid="a3"/>
<email xlink:href="mailto:taylor.w.webb@gmail.com">taylor.w.webb@gmail.com</email>
</contrib>
<contrib contrib-type="author">
<name>
<surname>Cohen</surname>
<given-names>Jonathan D.</given-names>
</name>
<xref ref-type="aff" rid="a2"/>
<email xlink:href="mailto:jdc@princeton.edu">jdc@princeton.edu</email>
</contrib>
<aff id="a1"><institution>Department of Electrical and Computer Engineering, Princeton University</institution></aff>
<aff id="a2"><institution>Princeton Neuroscience Institute, Princeton University</institution></aff>
<aff id="a3"><institution>Department of Psychology, University of California</institution>, <addr-line>Los Angeles</addr-line></aff>
</contrib-group>
<contrib-group content-type="section">
<contrib contrib-type="editor">
<name>
<surname>Schapiro</surname>
<given-names>Anna C</given-names>
</name>
<role>Reviewing Editor</role>
<aff>
<institution-wrap>
<institution>University of Pennsylvania</institution>
</institution-wrap>
<city>Philadelphia</city>
<country>United States of America</country>
</aff>
</contrib>
<contrib contrib-type="senior_editor">
<name>
<surname>Behrens</surname>
<given-names>Timothy E</given-names>
</name>
<role>Senior Editor</role>
<aff>
<institution-wrap>
<institution>University of Oxford</institution>
</institution-wrap>
<city>Oxford</city>
<country>United Kingdom</country>
</aff>
</contrib>
</contrib-group>
<pub-date pub-type="epub">
<day>23</day>
<month>01</month>
<year>2024</year>
</pub-date>
<pub-date date-type="original-publication" iso-8601-date="2023-08-23">
<day>23</day>
<month>08</month>
<year>2023</year>
</pub-date>
<pub-date date-type="update" iso-8601-date="2024-03-21">
<day>21</day>
<month>03</month>
<year>2024</year>
</pub-date>
<volume>12</volume>
<elocation-id>RP89911</elocation-id>
<history><date date-type="sent-for-review" iso-8601-date="2023-06-17">
<day>17</day>
<month>06</month>
<year>2023</year>
</date>
</history>
<pub-history>
<event>
<event-desc>Preprint posted</event-desc>
<date date-type="preprint" iso-8601-date="2023-05-28">
<day>28</day>
<month>05</month>
<year>2023</year>
</date>
<self-uri content-type="preprint" xlink:href="https://doi.org/10.48550/arXiv.2305.18417"/>
</event>
<event>
<event-desc>Reviewed preprint v1</event-desc>
<date date-type="reviewed-preprint" iso-8601-date="2023-08-23">
<day>23</day>
<month>08</month>
<year>2023</year>
</date>
<self-uri content-type="reviewed-preprint" xlink:href="https://doi.org/10.7554/eLife.89911.1"/>
<self-uri content-type="editor-report" xlink:href="https://doi.org/10.7554/eLife.89911.1.sa2">eLife assessment</self-uri>
<self-uri content-type="referee-report" xlink:href="https://doi.org/10.7554/eLife.89911.1.sa1">Reviewer #1 (Public Review):</self-uri>
<self-uri content-type="referee-report" xlink:href="https://doi.org/10.7554/eLife.89911.1.sa0">Reviewer #2 (Public Review):</self-uri>
</event>
</pub-history>
<permissions>
<copyright-statement>© 2023, Mondal et al</copyright-statement>
<copyright-year>2023</copyright-year>
<copyright-holder>Mondal et al</copyright-holder>
<ali:free_to_read/>
<license xlink:href="https://creativecommons.org/licenses/by/4.0/">
<ali:license_ref>https://creativecommons.org/licenses/by/4.0/</ali:license_ref>
<license-p>This article is distributed under the terms of the <ext-link ext-link-type="uri" xlink:href="https://creativecommons.org/licenses/by/4.0/">Creative Commons Attribution License</ext-link>, which permits unrestricted use and redistribution provided that the original author and source are credited.</license-p>
</license>
</permissions>
<self-uri content-type="pdf" xlink:href="elife-preprint-89911-v2.pdf"/>
<abstract>
<title>Abstract</title>
<p>Deep neural networks have made tremendous gains in emulating human-like intelligence, and have been used increasingly as ways of understanding how the brain may solve the complex computational problems on which this relies. However, these still fall short of, and therefore fail to provide insight into how the brain supports strong forms of generalization of which humans are capable. One such case is out-of-distribution (OOD) generalization— successful performance on test examples that lie outside the distribution of the training set. Here, we identify properties of processing in the brain that may contribute to this ability. We describe a two-part algorithm that draws on specific features of neural computation to achieve OOD generalization, and provide a proof of concept by evaluating performance on two challenging cognitive tasks. First we draw on the fact that the mammalian brain represents metric spaces using grid cell code (e.g., in the entorhinal cortex): abstract representations of relational structure, organized in recurring motifs that cover the representational space. Second, we propose an attentional mechanism that operates over the grid cell code using Determinantal Point Process (DPP), that we call DPP attention (DPP-A) - a transformation that ensures maximum sparseness in the coverage of that space. We show that a loss function that combines standard task-optimized error with DPP-A can exploit the recurring motifs in the grid cell code, and can be integrated with common architectures to achieve strong OOD generalization performance on analogy and arithmetic tasks. This provides both an interpretation of how the grid cell code in the mammalian brain may contribute to generalization performance, and at the same time a potential means for improving such capabilities in artificial neural networks.</p>
</abstract>

</article-meta>
</front>
<body>
<sec id="s1" sec-type="Introduction">
<title>1 Introduction</title>
<p>Deep neural networks now meet, or even exceed, human competency in many challenging task domains (<xref ref-type="bibr" rid="c31">He et al., 2016</xref>; <xref ref-type="bibr" rid="c61">Silver et al., 2017</xref>; <xref ref-type="bibr" rid="c74">Wu et al., 2016</xref>; <xref ref-type="bibr" rid="c32">He et al., 2017</xref>). Their success on these tasks, however, is generally limited to the narrow set of conditions under which they were trained, falling short of the capacity for strong forms of generalization that is central to human intelligence (<xref ref-type="bibr" rid="c5">Barrett et al., 2018</xref>; <xref ref-type="bibr" rid="c45">Lake &amp; Baroni, 2018</xref>; <xref ref-type="bibr" rid="c33">Hill et al., 2019</xref>; <xref ref-type="bibr" rid="c70">Webb et al., 2020</xref>), and hence fail to provide insights into how our brain supports them. One such case is out-of-distribution (OOD) generalization where the test data lies outside the distribution of the training data. Here, we consider two challenging cognitive problems that often require a capacity for OOD generalization: a) analogy and b) arithmetic. What enables the human brain to successfully generalize on these tasks, and how might we better realize that ability in deep learning systems?</p>
<p>To address the problem, we focus on two properties of processing in the brain that we hypothesize are useful for OOD generalization: a) the <italic>abstract representations</italic> of relational structure, in which relations are preserved across transformations like translation and scaling (such as observed for grid cells in mammalian medial entorhinal cortex (<xref ref-type="bibr" rid="c30">Hafting et al., 2005</xref>)); and b) an <italic>attentional objective</italic> inspired from Determinantal Point Processes (DPPs), which are probabilistic models of repulsion arising in quantum physics (<xref ref-type="bibr" rid="c47">Macchi, 1975</xref>), to attend to abstract representations that have maximum variance and minimum correlation among them, over the training data. We refer to this as DPP attention or DPP-A. The net effect of these two properties is to normalize the representations of training and testing data in a way that preserves their relational structure, and allows the network to learn that structure in a form that can be applied well beyond the domain over which it was trained.</p>
<p>In previous work, it has been shown that such OOD generalization can be accomplished in a neural network by providing it with a mechanism for temporal context normalization (<xref ref-type="bibr" rid="c70">Webb et al., 2020</xref>)<sup><xref ref-type="fn" rid="fn0001">1</xref></sup>, a technique that allows neural networks to preserve the relational structure between the inputs in a local temporal context, while abstracting over the differences between contexts. Here, we test whether the same capabilities can be achieved using a well-established, biologically plausible embedding scheme – grid cell code – and an adaptive form of normalization that is based strictly on the statistics of the training data in the embedding space. We show that when deep neural networks are presented with data that exhibits such relational structure, grid cell code coupled with an error-minimizing/attentional objective promotes strong OOD generalization. We unpack each of these theoretical components in turn before describing the tasks, modeling architectures, and results.</p>
<p><bold>Abstract Representations of Relational Structure.</bold> The first component of the proposed framework relies on the idea that a key element underlying human-like OOD generalization is the use of low-dimensional representations that emphasize the relational structure between data points. Empirical evidence suggests that, for spatial information, this is accomplished in the brain by encoding the organism’s spatial position using a periodic code consisting of different frequencies and phases (akin to a Fourier transform of the space). Although grid cells were discovered for representations of space (<xref ref-type="bibr" rid="c30">Hafting et al., 2005</xref>; <xref ref-type="bibr" rid="c63">Sreenivasan &amp; Fiete, 2011</xref>; <xref ref-type="bibr" rid="c50">Mathis et al., 2012</xref>) and used for guiding spatial behaviour (<xref ref-type="bibr" rid="c22">Erdem &amp; Hasselmo, 2014</xref>; <xref ref-type="bibr" rid="c12">Bush et al., 2015</xref>), they have since been identified in non-spatial domains, such as auditory tones (<xref ref-type="bibr" rid="c1">Aronov et al., 2017</xref>), odor (<xref ref-type="bibr" rid="c4">Bao et al., 2019</xref>), episodic memory (<xref ref-type="bibr" rid="c13">Chandra et al., 2023</xref>), and conceptual dimensions (<xref ref-type="bibr" rid="c16">Constantinescu et al., 2016</xref>). These findings suggest that the coding scheme used by grid cells may serve as a general representation of metric structure that may be exploited for reasoning about the abstract conceptual dimensions required for higher-level reasoning tasks, such as analogy and mathematics (<xref ref-type="bibr" rid="c52">McNamee et al., 2022</xref>). Of interest here, the periodic response function displayed by grid cells belonging to a particular frequency is invariant to translation by its period, and increasing the scale of a higher frequency response gives a lower frequency response and vice versa, making it invariant to scale across frequencies. This is particularly promising for prospects of OOD generalization: downstream systems that acquire parameters over a narrow training region may be able to successfully apply those parameters across transformations of translation or scale, given the shared structure (which can also be learned (<xref ref-type="bibr" rid="c17">Cueva &amp; Wei, 2018</xref>; <xref ref-type="bibr" rid="c3">Banino et al., 2018</xref>; <xref ref-type="bibr" rid="c73">Whittington et al., 2020</xref>)).</p>
<p><bold>DPP attention (DPP-A).</bold> The second component of our proposed framework is a novel attentional objective that uses the statistics of the training data to sculpt the influence of grid cells on downstream computation. Despite the use of a relational encoding metric (i.e., grid cell code), generalization may also require identifying which aspects of this encoding that could potentially be shared across training and test distributions. Here, we implement this by identifying, and restricting further processing to those grid cell embeddings that exhibit the greatest variance, but are least redundant (that is, pairwise uncorrelated) over the training data. Formally, this is captured by maximizing the determinant of the covariance matrix of the grid cell embeddings computed over the training data (<xref ref-type="bibr" rid="c44">Kulesza &amp; Taskar, 2012</xref>). To avoid overfitting the training data, we attend to a subset of grid cell embeddings that maximize the volume in the representational space, diminishing the influence of low-variance codes (irrelevant), or codes with high-similarity to other codes (redundant), which decrease the determinant of the covariance matrix.</p>
<p>DPP-A is inspired by mathematical work in statistical physics using DPPs that originated for modeling the distribution of fermions at thermal equilibrium (<xref ref-type="bibr" rid="c47">Macchi, 1975</xref>). DPPs have since been adopted in machine learning for applications in which diversity in a subset of selected items is desirable, such as recommender systems (<xref ref-type="bibr" rid="c44">Kulesza &amp; Taskar, 2012</xref>). Recent work in computational cognitive science has shown DPPs naturally capture inductive biases in human inference, such as some word-learning and reasoning tasks (e.g., one noun should only refer to one object) while also serving as an efficient memory code (<xref ref-type="bibr" rid="c24">Frankland &amp; Cohen, 2020</xref>). In that context, the learner is biased to find a set of possible word-meaning pairs whose representations exhibit the greatest variance and lowest covariance on a task-relevant dataset. DPPs also provide a formal objective for the type of orthogonal coding that has been proposed to be characteristic of representations in mammalian hippocampus, and integral for episodic memory (<xref ref-type="bibr" rid="c51">McClelland et al., 1995</xref>). Thus, using the DPP objective to govern attention over the grid cell code, known to be implemented in the entorhinal cortex (<xref ref-type="bibr" rid="c30">Hafting et al., 2005</xref>; <xref ref-type="bibr" rid="c7">Barry et al., 2007</xref>; <xref ref-type="bibr" rid="c66">Stensola et al., 2012</xref>; <xref ref-type="bibr" rid="c28">Giocomo et al., 2011</xref>; <xref ref-type="bibr" rid="c10">Brandon et al., 2011</xref>)(one synapse upstream of the hippocampus), aligns with the function and organization of cognitive and neural systems underlying the capability for abstraction.</p>
<p>Taken together, the representational and attention mechanisms outlined above define a two-component framework of neural computation for OOD generalization, by minimizing task-specific error subject to: i) embeddings that encode relational structure among the data (grid cell code), and ii) attention to those embeddings that maximize the “volume” of the representational space that is covered, while minimizing redundancy (DPP-A). Below, we demonstrate proof of concept by showing that these mechanisms allow artificial neural networks to learn representations that support OOD generalization on two challenging cognitive tasks and therefore serve as a reasonable starting point for examining the properties of interest in these networks.</p>
</sec>
<sec id="s2">
<title>2 Approach</title>
<p><xref ref-type="fig" rid="fig1">Figure 1</xref> illustrates the general framework. Task inputs, corresponding to points in a metric space, are represented as a set of grid cell embeddings <italic><bold>x</bold></italic><sub><italic>t</italic>=1..<italic>T</italic></sub>, that are then passed to the inference module <italic><bold>R</bold></italic>. The embedding of each input is represented by the pattern of activity of grid cells that respond selectively to different combinations of phases and frequencies. Attention over these is a learned gating <italic><bold>g</bold></italic> of the grid cells, the gated activations of which (<italic><bold>x</bold></italic> ⊙ <italic><bold>g</bold></italic>) are passed to the inference module (<italic><bold>R</bold></italic>). The parameterization of <italic><bold>g</bold></italic> and <italic><bold>R</bold></italic> are determined by backpropagation of the error signal obtained by two loss functions over the training set. Note that learning of parameter <italic><bold>g</bold></italic> occurs only over the training space and is not further modified during testing (i.e. over the test spaces). The first loss function, <italic>𝓛<sub>DPP</sub></italic> favors attentional gatings over the grid cells that maximize the DPP-A objective; that is, the “volume” of the representational space covered by the attended grid cells. The second loss function, <italic>𝓛<sub>task</sub></italic> is a standard task error term (e.g., the cross entropy of targets <italic>y</italic> and task outputs <inline-formula id="ie1"><alternatives><mml:math display="inline" id="i1"><mml:mover accent="true"><mml:mi>y</mml:mi><mml:mo>^</mml:mo></mml:mover></mml:math><inline-graphic xlink:href="2305.18417v3_ieq1.tif" mimetype="image" mime-subtype="tiff"/></alternatives></inline-formula> over the training set). We describe each of these components in the following sections.</p>
<fig id="fig1" position="float" fig-type="figure">
<label>Figure 1</label>
<caption><title>Schematic of the overall framework. Given a task (e.g., an analogy to solve), inputs (denoted as {<italic>A, B, C, D</italic>}) are represented by the grid cell code, consisting of units (“grid cells”) representing different combinations of frequencies and phases.</title><p>Grid cell embeddings (<italic><bold>x</bold><sub>A</sub>, <bold>x</bold><sub>B</sub>, <bold>x</bold><sub>C</sub>, <bold>x</bold><sub>D</sub></italic>) are multiplied elementwise (represented as a Hadamard product ⊙) by a set of learned attention gates <italic><bold>g</bold></italic>, then passed to the inference module <italic><bold>R</bold></italic>. The attention gates <italic><bold>g</bold></italic> are optimized using <italic>𝓛<sub>DPP</sub></italic>, which encourages attention to grid cell embeddings that maximize the volume of the representational space. The inference module outputs a score for each candidate analogy (consisting of <italic>A, B, C</italic> and a candidate answer choice <italic>D</italic>). The scores for all answer choices are passed through a softmax to generate an answer <inline-formula id="ie2"><alternatives><mml:math display="inline" id="i2"><mml:mover accent="true"><mml:mi>y</mml:mi><mml:mo>^</mml:mo></mml:mover></mml:math><inline-graphic xlink:href="2305.18417v3_ieq2.tif" mimetype="image" mime-subtype="tiff"/></alternatives></inline-formula>, which is compared against the target <italic>y</italic> to generate the task loss <italic>𝓛<sub>task</sub></italic>.</p></caption>
<graphic xlink:href="2305.18417v3_fig1.tif" mimetype="image" mime-subtype="tiff"/>
</fig>
<sec id="s2-1">
<title>2.1 Task setup</title>
<sec id="s2-1-1">
<title>2.1.1 Analogy task</title>
<p>We constructed proportional analogy problems with four terms, of the form <italic>A</italic> : <italic>B</italic> :: <italic>C</italic> : <italic>D</italic>, where the relation between <italic>A</italic> and <italic>B</italic> was the same as between <italic>C</italic> and <italic>D</italic>. Each of <italic>A, B, C, D</italic> was a point in the integer space ℤ<sup>2</sup>, with each dimension sampled from the range [0, <italic>M</italic> − 1], where <italic>M</italic> denotes the size of the training region. To form an analogy, two pairs of points (<italic>A, B</italic>) and (<italic>C, D</italic>) were chosen such that the vectors <italic>AB</italic> and <italic>CD</italic> were equal. Each analogy problem also contained a set of 6 foil items sampled in the range [0, <italic>M</italic> − 1]<sup>2</sup> excluding <italic>D</italic>, such that they didn’t form an analogy with <italic>A, B, C</italic>. The task was, given <italic>A, B</italic> and <italic>C</italic>, to select <italic>D</italic> from a set of multiple choices consisting of <italic>D</italic> and the 6 foil items. During training, the networks were exposed to sets of points sampled uniformly over locations in the training range, and with pairs of points forming vectors of varying length. The network was trained on 80% of all such sets of points in the training range, with 20% held out as the validation set.</p>
<p>To study OOD generalization, we created two cases of test data, that tested for OOD generalization in translation and scale. For the <italic>translation invariance</italic> case (<xref ref-type="fig" rid="fig2">Figure 2(a)</xref>), the constituents of the training analogies were translated along both dimensions by the same integer value <sup><xref ref-type="fn" rid="fn0002">2</xref></sup> <italic>KM</italic> (obtained by multiplying <italic>K</italic> and <italic>M</italic>, both of which are integer values) such that the test analogies were in the range [<italic>KM</italic>, (<italic>K</italic> +1)<italic>M</italic> −1]<sup>2</sup> after translation. Non-overlapping test regions were generated for <italic>K</italic> ∈ [1, 9]. Similar to the translation OOD generalization regime of <xref ref-type="bibr" rid="c70">Webb et al. (2020)</xref>, this allowed the graded evaluation of OOD generalization to a series of increasingly remote test domains as the distance from the training region increased. For example a training analogy <italic>A</italic> : <italic>B</italic> :: <italic>C</italic> : <italic>D</italic> after translation by <italic>KM</italic>, would be <italic>A</italic> + <italic>KM</italic> : <italic>B</italic> + <italic>KM</italic> :: <italic>C</italic> + <italic>KM</italic> : <italic>D</italic> + <italic>KM</italic>.</p>
<fig id="fig2" position="float" fig-type="figure">
<label>Figure 2</label>
<caption><title>Generation of test analogies from training analogies (region marked in blue) by: a) translating both dimension values of <italic>A, B, C, D</italic> by the same amount; and b) scaling both dimension values of <italic>A, B, C, D</italic> by the same amount.</title><p>Since both dimension values are transformed by the same amount, each input gets transformed along the diagonal.</p></caption>
<graphic xlink:href="2305.18417v3_fig2.tif" mimetype="image" mime-subtype="tiff"/>
</fig>
<p>For the <italic>scale invariance</italic> case (<xref ref-type="fig" rid="fig2">Figure 2(b)</xref>), we scaled each constituent of the training analogies by <italic>K</italic> so that the test analogies after scaling were in the range [0, <italic>KM</italic> − 1]<sup>2</sup>. Thus, an analogy <italic>A</italic> : <italic>B</italic> :: <italic>C</italic> : <italic>D</italic> after scaling by <italic>K</italic>, would be <italic>KA</italic> : <italic>KB</italic> :: <italic>KC</italic> : <italic>KD</italic>. By varying the value of <italic>K</italic> from 1 to 9, we scaled the training analogies to occupy increasingly distant and larger regions of the test space. It is worth noting that while humans can exhibit complex and sophisticated forms of analogical reasoning (<xref ref-type="bibr" rid="c36">Holyoak, 2012</xref>; <xref ref-type="bibr" rid="c71">Webb et al., 2023</xref>; <xref ref-type="bibr" rid="c46">Lu et al., 2022</xref>), here we focused on a relatively simple form, that was inspired by Rumelhart’s parallelogram model of analogy (<xref ref-type="bibr" rid="c58">Rumelhart &amp; Abrahamson, 1973</xref>; <xref ref-type="bibr" rid="c53">Mikolov et al., 2013</xref>) that has been used to explain traditional human verbal analogies (e.g., “king is to what as man is to woman?”). Our model, like that one, seeks to explain analogical reasoning in terms of the computation of simple Euclidean distances (i.e., <italic>A − B</italic> = <italic>C − D</italic>, where <italic>A, B, C, D</italic> are vectors in 2D space).</p>
</sec>
<sec id="s2-1-2">
<title>2.1.2 Arithmetic task</title>
<p>We tested two types of arithmetic operations, corresponding to the translation and scaling transformations used in the analogy tasks: elementwise addition and multiplication of two inputs <italic>A</italic> and <italic>B</italic>, each a point in ℤ<sup>2</sup>, for which <italic>C</italic> was the point corresponding to the answer (i.e., <italic>C</italic> = <italic>A</italic> + <italic>B</italic> or <italic>C</italic> = <italic>A ∗ B</italic>). As with the analogy task, each arithmetic problem also contained a set of 6 foil items sampled in the range [0, <italic>M</italic> −1]<sup>2</sup>, excluding <italic>C</italic>. The task was to select <italic>C</italic> from a set of choices consisting of <italic>C</italic> and the 6 foil items. Similar to the analogy task, training data was constructed from a uniform distribution of points and vector lengths in the training range, with 20% held out as the validation set. To study OOD generalization, we created testing data corresponding to <italic>K</italic> = 9 non-overlapping regions, such that <italic>C</italic> ∈ [<italic>M</italic>, 2<italic>M</italic> − 1]<sup>2</sup>, [2<italic>M</italic>, 3<italic>M</italic> − 1]<sup>2</sup>, …[<italic>KM</italic>, (<italic>K</italic> + 1)<italic>M</italic> − 1]<sup>2</sup>.</p>
</sec>
</sec>
<sec id="s2-2">
<title>2.2 Architecture</title>
<sec id="s2-2-1">
<title>2.2.1 Grid cell code</title>
<p>As discussed above, the grid cell code is found in the mammalian neocortex, that support structured, low-dimensional representations of task-relevant information. For example, an organism’s location in 2D allocentric space (<xref ref-type="bibr" rid="c30">Hafting et al., 2005</xref>), the frequency of 1D auditory stimuli (<xref ref-type="bibr" rid="c1">Aronov et al., 2017</xref>), and conceptual knowledge in two continuous dimensions (<xref ref-type="bibr" rid="c20">Doeller et al., 2010</xref>; <xref ref-type="bibr" rid="c16">Constantinescu et al., 2016</xref>) have all been shown to be represented as unique, similarity-preserving combinations of frequencies and phases. Here, these codes are of interest because the relational structure in the input is preserved in the code across translation and scale. This offers a promising metric that can be used to learn structure relevant to the processing of analogies (<xref ref-type="bibr" rid="c25">Frankland et al., 2019</xref>) and arithmetic over a restricted range of stimulus values, and then used to generalize such processing to stimuli outside of the domain of task training.</p>
<p>To derive the grid cell code for stimuli, we follow the analytic approach described by <xref ref-type="bibr" rid="c8">Bicanski &amp; Burgess (2019)</xref> <sup><xref ref-type="fn" rid="fn0003">3</xref></sup>. Specifically, the grid cell embedding for a particular stimulus location <italic>A</italic> is given by:
<disp-formula id="ed1"><alternatives><mml:math display="block" id="e1"><mml:mrow><mml:msub><mml:mstyle mathvariant="bold-italic" mathsize="normal"><mml:mi>x</mml:mi></mml:mstyle><mml:mi>A</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mi>m</mml:mi><mml:mi>a</mml:mi><mml:mi>x</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mn>0</mml:mn><mml:mo>,</mml:mo><mml:mi>c</mml:mi><mml:mi>o</mml:mi><mml:mi>s</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mstyle mathvariant="bold-italic" mathsize="normal"><mml:mi>z</mml:mi></mml:mstyle><mml:mn>0</mml:mn></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mo>+</mml:mo><mml:mi>c</mml:mi><mml:mi>o</mml:mi><mml:mi>s</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mstyle mathvariant="bold-italic" mathsize="normal"><mml:mi>z</mml:mi></mml:mstyle><mml:mn>1</mml:mn></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mo>+</mml:mo><mml:mi>c</mml:mi><mml:mi>o</mml:mi><mml:mi>s</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mstyle mathvariant="bold-italic" mathsize="normal"><mml:mi>z</mml:mi></mml:mstyle><mml:mn>2</mml:mn></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:math><graphic xlink:href="2305.18417v3_eqn1.tif" mimetype="image" mime-subtype="tiff"/></alternatives><label>(1)</label></disp-formula>
where,
<disp-formula id="ed2"><alternatives><mml:math display="block" id="e2"><mml:mrow><mml:msub><mml:mstyle mathvariant="bold-italic" mathsize="normal"><mml:mi>z</mml:mi></mml:mstyle><mml:mi>i</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mstyle mathvariant="bold-italic" mathsize="normal"><mml:mi>b</mml:mi></mml:mstyle><mml:mi>i</mml:mi></mml:msub><mml:mo>*</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi>F</mml:mi><mml:mi>A</mml:mi><mml:mo>+</mml:mo><mml:msub><mml:mi>A</mml:mi><mml:mrow><mml:mi>o</mml:mi><mml:mi>f</mml:mi><mml:mtext> </mml:mtext><mml:mi>f</mml:mi><mml:mtext> </mml:mtext><mml:mi>s</mml:mi><mml:mi>e</mml:mi><mml:mi>t</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><graphic xlink:href="2305.18417v3_eqn2.tif" mimetype="image" mime-subtype="tiff"/></alternatives><label>(2)</label></disp-formula>
<disp-formula id="ed3"><alternatives><mml:math display="block" id="e3"><mml:mrow><mml:msub><mml:mstyle mathvariant="bold-italic" mathsize="normal"><mml:mi>b</mml:mi></mml:mstyle><mml:mn>0</mml:mn></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mtable><mml:mtr><mml:mtd><mml:mrow><mml:mi>c</mml:mi><mml:mi>o</mml:mi><mml:mi>s</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mn>0</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mrow><mml:mi>s</mml:mi><mml:mi>i</mml:mi><mml:mi>n</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mn>0</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>,</mml:mo><mml:msub><mml:mstyle mathvariant="bold-italic" mathsize="normal"><mml:mi>b</mml:mi></mml:mstyle><mml:mn>1</mml:mn></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mtable><mml:mtr><mml:mtd><mml:mrow><mml:mi>c</mml:mi><mml:mi>o</mml:mi><mml:mi>s</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mfrac><mml:mi>π</mml:mi><mml:mn>3</mml:mn></mml:mfrac></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mrow><mml:mi>s</mml:mi><mml:mi>i</mml:mi><mml:mi>n</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mfrac><mml:mi>π</mml:mi><mml:mn>3</mml:mn></mml:mfrac></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>,</mml:mo><mml:msub><mml:mstyle mathvariant="bold-italic" mathsize="normal"><mml:mi>b</mml:mi></mml:mstyle><mml:mn>2</mml:mn></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mtable><mml:mtr><mml:mtd><mml:mrow><mml:mi>c</mml:mi><mml:mi>o</mml:mi><mml:mi>s</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mfrac><mml:mrow><mml:mn>2</mml:mn><mml:mi>π</mml:mi></mml:mrow><mml:mn>3</mml:mn></mml:mfrac></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mrow><mml:mi>s</mml:mi><mml:mi>i</mml:mi><mml:mi>n</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mfrac><mml:mrow><mml:mn>2</mml:mn><mml:mi>π</mml:mi></mml:mrow><mml:mn>3</mml:mn></mml:mfrac></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:math><graphic xlink:href="2305.18417v3_eqn3.tif" mimetype="image" mime-subtype="tiff"/></alternatives><label>(3)</label></disp-formula></p>
<p>The spatial frequencies of grids (<italic>F</italic>) begin at a value of 0.0028 ∗ 2<italic>π</italic>. <xref ref-type="bibr" rid="c72">Wei et al. (2015)</xref> have shown that, to minimize the number of variables needed to represent an integer domain of size <italic>S</italic>, the firing rate widths and frequencies should scale geometrically in a range (<inline-formula id="ie3"><alternatives><mml:math display="inline" id="i3"><mml:mrow><mml:msqrt><mml:mn>2</mml:mn></mml:msqrt><mml:mo>,</mml:mo><mml:msqrt><mml:mi>e</mml:mi></mml:msqrt></mml:mrow></mml:math><inline-graphic xlink:href="2305.18417v3_ieq3.tif" mimetype="image" mime-subtype="tiff"/></alternatives></inline-formula>), closely matching empirically observed scaling in entorhinal cortex (<xref ref-type="bibr" rid="c66">Stensola et al., 2012</xref>). We choose a scaling factor of <inline-formula id="ie4"><alternatives><mml:math display="inline" id="i4"><mml:mrow><mml:msqrt><mml:mn>2</mml:mn></mml:msqrt></mml:mrow></mml:math><inline-graphic xlink:href="2305.18417v3_ieq4.tif" mimetype="image" mime-subtype="tiff"/></alternatives></inline-formula> to efficiently tile the space. One consequence of this efficiency is that the total number of discrete frequencies in the entorhinal cortex is expected to be small. Empirically, it has been estimated to be between 8-12 (<xref ref-type="bibr" rid="c54">Moser et al., 2015</xref>) <sup><xref ref-type="fn" rid="fn0004">4</xref></sup>. Here, we choose <italic>N<sub>f</sub></italic> = 9 (dimension of <italic>F</italic>) as the number of frequencies. <italic>A</italic> refers to a particular location in a two dimensional space, and 100 offsets (<italic>A<sub>of f set</sub></italic>) are used for each frequency to evenly cover a space of 1000×1000 locations using 900 grid cells. These offsets represent different phases within each frequency and since there are 100 of them, <italic>N<sub>p</sub></italic> = 100. Hence <italic>N<sub>p</sub></italic> × <italic>N<sub>f</sub></italic> = 900, which denotes the number of grid cells. Each point from the set of 2D points for the stimuli in a task (described in <xref ref-type="sec" rid="s2-1">Section 2.1</xref>), was represented using the firing rate of 900 grid cells which constituted the grid cell embedding for that point to form the inputs to our model.</p>
</sec>
<sec id="s2-2-2">
<title>2.2.2 DPP-A</title>
<p>We hypothesize that the use of a relational encoding metric (i.e., grid cell code) is extremely useful, but not sufficient for a system to achieve strong generalization, which requires attending to particular aspects of the encoding that can capture the same relational structure across the training and test distributions. Toward this end, we propose an attentional objective that uses the statistics of the training data to attend to grid cell embeddings that can induce the inference module to achieve strong generalization. Our objective, which we describe in detail below, seeks to identify those grid cell embeddings that exhibit the greatest variance but are least redundant (pairwise uncorrelated over the training data). Formally, this is captured by maximizing the determinant of the covariance matrix of the grid cell embeddings computed over the training data (<xref ref-type="bibr" rid="c44">Kulesza &amp; Taskar, 2012</xref>). Although in machine learning, DPPs have been particularly influential in work on recommender systems (<xref ref-type="bibr" rid="c14">Chen et al., 2018</xref>), summarization (<xref ref-type="bibr" rid="c29">Gong et al., 2014</xref>; <xref ref-type="bibr" rid="c56">Perez-Beltrachini &amp; Lapata, 2021</xref>), neural network pruning (<xref ref-type="bibr" rid="c48">Mariet &amp; Sra, 2015</xref>), here, we propose to use maximization of the determinant of the covariance matrix as an attentional mechanism to limit the influence of grid cell embeddings with low-variance (which are less relevant) or with high-similarity to other grid cell embeddings (which are redundant).</p>
<p>For the specific tasks that we study here, we have assumed the grid cell embeddings to be pre-learned to represent the entire space of possible test data points, and we are simply focused on the problem of how to determine which of these are most useful in enabling generalization for a task-optimized network trained on a small fraction of that space (<xref ref-type="fig" rid="fig2">Figure 2</xref>). That is, we look for a way to attend to a subset of gridcells frequencies whose embeddings capture recurring task-relevant relational structure. We find that grid cell embeddings corresponding to the higher spatial frequency grid cells exhibit greater variance over the training data than the lower frequency embeddings, while at the same time the correlations among those grid cell embeddings are lower than the correlations among the lower frequency grid cell embeddings. The determinant of the covariance matrix of the grid cell embeddings is maximized when the variances of the grid cell embeddings are high (they are “expressive”) and the correlation among the grid cell embeddings is low (they “cover the representational space”). As a result, the higher frequency grid cell embeddings more efficiently cover the representational space of the training data, allowing them to efficiently capture the same relational structure across training and test distributions which is required for OOD generalization.</p>
<p>Formally, we treat obtaining <italic>𝓛<sub>DPP</sub></italic> as an approximation of a determinantal point process (DPP). A DPP <italic>𝒫</italic> defines a probability measure on all subsets of a set of items <italic>𝒰</italic> = {1, 2, …<italic>N</italic>}. For every <italic><bold>u</bold> ⊆ 𝒰, P</italic> (<italic><bold>u</bold></italic>) ∝ det(<italic><bold>V<sub>u</sub></bold></italic>). Here <italic><bold>V</bold></italic> is a positive semidefinite covariance matrix and <italic><bold>V<sub>u</sub></bold></italic> = [<italic>V<sub>ij</sub></italic>]<sub><italic>i,j∈<bold>u</bold></italic></sub> denotes the matrix <italic><bold>V</bold></italic> restricted to the entries indexed by elements of <italic><bold>u</bold></italic>. The maximum a posteriori (MAP) problem <italic>argmax<sub><bold>u</bold></sub></italic> det(<italic><bold>V<sub>u</sub></bold></italic>) is NP-hard (<xref ref-type="bibr" rid="c42">Ko et al., 1995</xref>). However <italic>f</italic> (<italic><bold>u</bold></italic>) = log(det(<italic><bold>V<sub>u</sub></bold></italic>)) satisfies the property of a submodular function, and various algorithms exist for approximately maximizing them. One common way is to approximate this discrete optimization problem by replacing the discrete variables with continuous variables and extending the objective function to the continuous domain. <xref ref-type="bibr" rid="c27">Gillenwater et al. (2012)</xref> proposed a continuous extension that is efficiently computable and differentiable:
<disp-formula id="ed4"><alternatives><mml:math display="block" id="e4"><mml:mrow><mml:mover accent="true"><mml:mi>F</mml:mi><mml:mo>^</mml:mo></mml:mover><mml:mo stretchy="false">(</mml:mo><mml:mstyle mathvariant="bold-italic" mathsize="normal"><mml:mi>w</mml:mi></mml:mstyle><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mi>log</mml:mi><mml:mstyle displaystyle="true"><mml:munder><mml:mo>∑</mml:mo><mml:mstyle mathvariant="bold-italic" mathsize="normal"><mml:mi>u</mml:mi></mml:mstyle></mml:munder><mml:mrow><mml:mstyle displaystyle="true"><mml:munder><mml:mo>∏</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>∈</mml:mo><mml:mstyle mathvariant="bold-italic" mathsize="normal"><mml:mi>u</mml:mi></mml:mstyle></mml:mrow></mml:munder><mml:mrow><mml:msub><mml:mi>w</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mstyle displaystyle="true"><mml:munder><mml:mo>∏</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>∉</mml:mo><mml:mstyle mathvariant="bold-italic" mathsize="normal"><mml:mi>u</mml:mi></mml:mstyle></mml:mrow></mml:munder><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mn>1</mml:mn><mml:mo>−</mml:mo><mml:msub><mml:mi>w</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mi>exp</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mi>f</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mstyle mathvariant="bold-italic" mathsize="normal"><mml:mi>u</mml:mi></mml:mstyle><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>,</mml:mo><mml:mstyle mathvariant="bold-italic" mathsize="normal"><mml:mi>w</mml:mi></mml:mstyle><mml:mo>∈</mml:mo><mml:msup><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:mn>0</mml:mn><mml:mo>,</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">]</mml:mo></mml:mrow><mml:mi>N</mml:mi></mml:msup><mml:mo>.</mml:mo></mml:mrow></mml:mstyle></mml:mrow></mml:mstyle></mml:mrow></mml:mstyle></mml:mrow></mml:math><graphic xlink:href="2305.18417v3_eqn4.tif" mimetype="image" mime-subtype="tiff"/></alternatives><label>(4)</label></disp-formula></p>
<p>We use the following theorem from <xref ref-type="bibr" rid="c27">Gillenwater et al. (2012)</xref> to construct <italic>𝓛<sub>DPP</sub></italic>:</p>
<p><bold>Theorem 2.1.</bold> <italic>For a positive semidefinite matrix <bold>V</bold> and <bold>w</bold></italic> ∈ [0, 1]<sup><italic>N</italic></sup> :
<disp-formula id="ed5"><alternatives><mml:math display="block" id="e5"><mml:mrow><mml:mstyle displaystyle="true"><mml:munder><mml:mo>∑</mml:mo><mml:mstyle mathvariant="bold-italic" mathsize="normal"><mml:mi>u</mml:mi></mml:mstyle></mml:munder><mml:mrow><mml:mstyle displaystyle="true"><mml:munder><mml:mo>∏</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>∈</mml:mo><mml:mstyle mathvariant="bold-italic" mathsize="normal"><mml:mi>u</mml:mi></mml:mstyle></mml:mrow></mml:munder><mml:mrow><mml:msub><mml:mi>w</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mstyle displaystyle="true"><mml:munder><mml:mo>∏</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>∉</mml:mo><mml:mstyle mathvariant="bold-italic" mathsize="normal"><mml:mi>u</mml:mi></mml:mstyle></mml:mrow></mml:munder><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mn>1</mml:mn><mml:mo>−</mml:mo><mml:msub><mml:mi>w</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mi>det</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mstyle mathvariant="bold-italic" mathsize="normal"><mml:mi>V</mml:mi></mml:mstyle><mml:mstyle mathvariant="bold-italic" mathsize="normal"><mml:mi>u</mml:mi></mml:mstyle></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mi>det</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mtext>diag</mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:mstyle mathvariant="bold-italic" mathsize="normal"><mml:mi>w</mml:mi></mml:mstyle><mml:mo stretchy="false">)</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mstyle mathvariant="bold-italic" mathsize="normal"><mml:mi>V</mml:mi></mml:mstyle><mml:mo>−</mml:mo><mml:mstyle mathvariant="bold-italic" mathsize="normal"><mml:mi>I</mml:mi></mml:mstyle><mml:mo stretchy="false">)</mml:mo><mml:mo>+</mml:mo><mml:mstyle mathvariant="bold-italic" mathsize="normal"><mml:mi>I</mml:mi></mml:mstyle></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mstyle></mml:mrow></mml:mstyle></mml:mrow></mml:mstyle></mml:mrow></mml:math><graphic xlink:href="2305.18417v3_eqn5.tif" mimetype="image" mime-subtype="tiff"/></alternatives><label>(5)</label></disp-formula></p>
<p>We propose an attention mechanism that uses <italic>𝓛<sub>DPP</sub></italic> to attend to subsets of grid cell embeddings for further processing. <xref ref-type="table" rid="alg1">Algorithm 1</xref> describes the training procedure with DPP-A which consists of two steps, using <italic>𝓛<sub>DPP</sub></italic> as the first step. This step maximizes the objective function:
<disp-formula id="ed6"><alternatives><mml:math display="block" id="e6"><mml:mrow><mml:mover accent="true"><mml:mi>F</mml:mi><mml:mo>^</mml:mo></mml:mover><mml:mo stretchy="false">(</mml:mo><mml:mstyle mathvariant="bold-italic" mathsize="normal"><mml:mi>g</mml:mi></mml:mstyle><mml:mo>,</mml:mo><mml:mstyle mathvariant="bold-italic" mathsize="normal"><mml:mi>V</mml:mi></mml:mstyle><mml:mo>,</mml:mo><mml:msub><mml:mi>N</mml:mi><mml:mi>f</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>N</mml:mi><mml:mi>p</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mstyle displaystyle="true"><mml:munderover><mml:mo>∑</mml:mo><mml:mrow><mml:mi>f</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:msub><mml:mi>N</mml:mi><mml:mi>f</mml:mi></mml:msub></mml:mrow></mml:munderover><mml:mrow><mml:mi>log</mml:mi><mml:mtext> </mml:mtext><mml:mi>det</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mtext>diag</mml:mtext><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mi>σ</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mstyle mathvariant="bold-italic" mathsize="normal"><mml:mi>g</mml:mi></mml:mstyle><mml:mstyle mathvariant="bold-italic" mathsize="normal"><mml:mi>f</mml:mi></mml:mstyle></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mstyle mathvariant="bold-italic" mathsize="normal"><mml:mi>V</mml:mi></mml:mstyle><mml:mstyle mathvariant="bold-italic" mathsize="normal"><mml:mi>f</mml:mi></mml:mstyle></mml:msub><mml:mo>−</mml:mo><mml:mstyle mathvariant="bold-italic" mathsize="normal"><mml:mi>I</mml:mi></mml:mstyle><mml:mo stretchy="false">)</mml:mo><mml:mo>+</mml:mo><mml:mstyle mathvariant="bold-italic" mathsize="normal"><mml:mi>I</mml:mi></mml:mstyle></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mstyle></mml:mrow></mml:math><graphic xlink:href="2305.18417v3_eqn6.tif" mimetype="image" mime-subtype="tiff"/></alternatives><label>(6)</label></disp-formula>
using stochastic gradient ascent for <inline-formula id="ie5"><alternatives><mml:math display="inline" id="i5"><mml:mrow><mml:msub><mml:mi>N</mml:mi><mml:mrow><mml:msub><mml:mi>E</mml:mi><mml:mrow><mml:mi>D</mml:mi><mml:mi>P</mml:mi><mml:mi>P</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub></mml:mrow></mml:math><inline-graphic xlink:href="2305.18417v3_ieq5.tif" mimetype="image" mime-subtype="tiff"/></alternatives></inline-formula> epochs, which is equivalent to minimizing <italic>𝓛<sub>DPP</sub></italic>, as <inline-formula id="ie6"><alternatives><mml:math display="inline" id="i6"><mml:mrow><mml:msub><mml:mi>𝓛</mml:mi><mml:mrow><mml:mi>D</mml:mi><mml:mi>P</mml:mi><mml:mi>P</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mo>−</mml:mo><mml:mover accent="true"><mml:mi>F</mml:mi><mml:mo>^</mml:mo></mml:mover><mml:mo stretchy="false">(</mml:mo><mml:mstyle mathvariant="bold" mathsize="normal"><mml:mi>g</mml:mi></mml:mstyle><mml:mo>,</mml:mo><mml:mstyle mathvariant="bold" mathsize="normal"><mml:mi>V</mml:mi></mml:mstyle><mml:mo>,</mml:mo><mml:msub><mml:mi>N</mml:mi><mml:mi>f</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>N</mml:mi><mml:mi>p</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="2305.18417v3_ieq6.tif" mimetype="image" mime-subtype="tiff"/></alternatives></inline-formula>. It involves attending to grid cell embeddings that exhibit the greatest within frequency variance but are least redundant (that is, that are least also pairwise uncorrelated) over the training data. This is achieved by maximizing the determinant of the covariance matrix over the within frequency grid cell embeddings of the training data, and <xref ref-type="disp-formula" rid="ed6">Equation 6</xref> is obtained by applying log on both sides of the Theorem 2.1, and in our case <italic>𝒰</italic> refers to grid cells of a particular frequency. Here <italic><bold>g</bold></italic> are the attention gates corresponding to each grid cell, and <italic>N<sub>f</sub></italic> is the number of distinct frequencies. The matrix <italic><bold>V</bold></italic> captures a measure of the covariance of the grid cell embeddings over the training region. We used the <italic>synth_kernel</italic> function <sup><xref ref-type="fn" rid="fn0005">5</xref></sup> to construct <italic><bold>V</bold></italic>, where in our case <italic><bold>m</bold></italic> are the variances of the grid cell embeddings <italic><bold>S</bold></italic> computed over the training region <italic>M, N</italic> is the number of grid cells and <italic>w<sub>m</sub>, b</italic> are hyperparameters with values of 1 and 0.1 respectively. The dimensionality of <italic><bold>V</bold></italic> is <italic>N<sub>f</sub> N<sub>p</sub> × N<sub>f</sub> N<sub>p</sub></italic>(900 × 900). <italic><bold>g<sub>f</sub></bold></italic> are the gates of the grid cells belonging to the <italic>f</italic>th frequency, so <italic><bold>g<sub>f</sub></bold></italic> = <italic><bold>g</bold></italic>[<italic>f N<sub>p</sub></italic> : (<italic>f</italic> + 1)<italic>N<sub>p</sub></italic>], where <italic>N<sub>p</sub></italic> is the number of phases for each frequency. <italic><bold>V<sub>f</sub></bold></italic> = <italic><bold>V</bold></italic> [<italic>f N<sub>p</sub></italic> : (<italic>f</italic> + 1)<italic>N<sub>p</sub>, f N<sub>p</sub></italic> : (<italic>f</italic> + 1)<italic>N<sub>p</sub></italic>] is the restriction of <italic><bold>V</bold></italic> to the grid cell embeddings for <italic>f</italic>th frequency, so it captured the covariance of the grid cell embeddings belonging to the <italic>f</italic>th frequency. <italic>σ</italic> is sigmoid non-linearity applied to <italic><bold>g<sub>f</sub></bold></italic>, defined as <inline-formula id="ie7"><alternatives><mml:math display="inline" id="i7"><mml:mrow><mml:mi>σ</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mstyle mathvariant="bold-italic" mathsize="normal"><mml:mi>g</mml:mi></mml:mstyle><mml:mstyle mathvariant="bold-italic" mathsize="normal"><mml:mi>f</mml:mi></mml:mstyle></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mn>1</mml:mn><mml:mo>/</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mn>1</mml:mn><mml:mo>+</mml:mo><mml:msup><mml:mi>e</mml:mi><mml:mrow><mml:mo>−</mml:mo><mml:msub><mml:mstyle mathvariant="bold-italic" mathsize="normal"><mml:mi>g</mml:mi></mml:mstyle><mml:mstyle mathvariant="bold-italic" mathsize="normal"><mml:mi>f</mml:mi></mml:mstyle></mml:msub></mml:mrow></mml:msup><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="2305.18417v3_ieq7.tif" mimetype="image" mime-subtype="tiff"/></alternatives></inline-formula>, so that their values are between 0 and 1. <italic>diag</italic>(<italic>σ</italic>(<italic><bold>g<sub>f</sub></bold></italic>)) converts vector <italic>σ</italic>(<italic><bold>g<sub>f</sub></bold></italic>) into a matrix with <italic>σ</italic>(<italic><bold>g<sub>f</sub></bold></italic>) as the diagonal of the matrix and the rest entries are zero, which is multiplied with <italic><bold>V − I</bold></italic>, which results in elementwise multiplication of <italic>σ</italic>(<italic><bold>g<sub>f</sub></bold></italic>) with the column vectors of <italic><bold>V − I</bold></italic>. <xref ref-type="disp-formula" rid="ed6">Equation 6</xref> which involved summation of the logarithm of the determinant of the gated covariance matrix of grid cell embeddings within each frequency, over <italic>N<sub>f</sub></italic> frequencies was used to compute the negative of <italic>𝓛<sub>DPP</sub></italic>. Maximizing <inline-formula id="ie8"><alternatives><mml:math display="inline" id="i8"><mml:mover accent="true"><mml:mi>F</mml:mi><mml:mo>^</mml:mo></mml:mover></mml:math><inline-graphic xlink:href="2305.18417v3_ieq8.tif" mimetype="image" mime-subtype="tiff"/></alternatives></inline-formula> gave the approximate maximum within frequency log determinant for each frequency <italic>f</italic> ∈ [1, <italic>N<sub>f</sub></italic>], which we denote for the <italic>f</italic>th frequency as <inline-formula id="ie9"><alternatives><mml:math display="inline" id="i9"><mml:mrow><mml:msub><mml:mover accent="true"><mml:mi>F</mml:mi><mml:mo>^</mml:mo></mml:mover><mml:mi>f</mml:mi></mml:msub></mml:mrow></mml:math><inline-graphic xlink:href="2305.18417v3_ieq9.tif" mimetype="image" mime-subtype="tiff"/></alternatives></inline-formula>. In the second step of the training procedure, we used the <inline-formula id="ie10"><alternatives><mml:math display="inline" id="i10"><mml:mrow><mml:msub><mml:mi>f</mml:mi><mml:mrow><mml:mi>m</mml:mi><mml:mi>a</mml:mi><mml:msub><mml:mi>x</mml:mi><mml:mrow><mml:mi>D</mml:mi><mml:mi>P</mml:mi><mml:mi>P</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub></mml:mrow></mml:math><inline-graphic xlink:href="2305.18417v3_ieq10.tif" mimetype="image" mime-subtype="tiff"/></alternatives></inline-formula> grid cell frequency, where <inline-formula id="ie11"><alternatives><mml:math display="inline" id="i11"><mml:mrow><mml:msub><mml:mi>f</mml:mi><mml:mrow><mml:mi>m</mml:mi><mml:mi>a</mml:mi><mml:msub><mml:mi>x</mml:mi><mml:mrow><mml:mi>D</mml:mi><mml:mi>P</mml:mi><mml:mi>P</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mi>arg</mml:mi><mml:mtext> </mml:mtext><mml:msub><mml:mrow><mml:mi>max</mml:mi></mml:mrow><mml:mrow><mml:mi>f</mml:mi><mml:mo>∈</mml:mo><mml:mo stretchy="false">[</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:msub><mml:mi>N</mml:mi><mml:mi>f</mml:mi></mml:msub><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:msub><mml:msub><mml:mover accent="true"><mml:mi>F</mml:mi><mml:mo>^</mml:mo></mml:mover><mml:mi>f</mml:mi></mml:msub></mml:mrow></mml:math><inline-graphic xlink:href="2305.18417v3_ieq11.tif" mimetype="image" mime-subtype="tiff"/></alternatives></inline-formula>. In other words, we used the grid cell embeddings for the frequency which had the maximum within-frequency log determinant at the end of the first step, which we find are best at capturing the relational structure across the training and testing data, thereby promoting out-of-distribution generalization. In this step, we trained the inference module minimizing <italic>𝓛<sub>task</sub></italic> over <inline-formula id="ie12"><alternatives><mml:math display="inline" id="i12"><mml:mrow><mml:msub><mml:mi>N</mml:mi><mml:mrow><mml:msub><mml:mi>E</mml:mi><mml:mrow><mml:mi>t</mml:mi><mml:mi>a</mml:mi><mml:mi>s</mml:mi><mml:mi>k</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub></mml:mrow></mml:math><inline-graphic xlink:href="2305.18417v3_ieq12.tif" mimetype="image" mime-subtype="tiff"/></alternatives></inline-formula> epochs. More details can be found in <xref ref-type="sec" rid="s7-10">Appendix 7.10</xref>.</p>
<table-wrap id="alg1">
<label>Algorithm 1</label>
<caption><title>Training with DPP-A</title></caption>
<alternatives>
<graphic xlink:href="2305.18417v3_alg1.tif" mimetype="image" mime-subtype="tiff"/>
<table frame="hsides" rules="all">
<tbody>
<tr>
<td align="left"><bold>Parameters:</bold> inference module <italic><bold>R</bold></italic>, attention gates <italic><bold>g</bold></italic><break/><bold>Hyperparameters:</bold> number of frequencies <italic>N<sub>f</sub></italic>, number of phases <italic>N<sub>p</sub></italic>, number of epochs optimizing DPP attention <inline-formula id="ie13"><alternatives><mml:math display="inline" id="i13"><mml:mrow><mml:msub><mml:mi>N</mml:mi><mml:mrow><mml:msub><mml:mi>E</mml:mi><mml:mrow><mml:mi>D</mml:mi><mml:mi>P</mml:mi><mml:mi>P</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub></mml:mrow></mml:math><inline-graphic xlink:href="2305.18417v3_ieq13.tif" mimetype="image" mime-subtype="tiff"/></alternatives></inline-formula>, number of epochs optimizing task loss <inline-formula id="ie14"><alternatives><mml:math display="inline" id="i14"><mml:mrow><mml:msub><mml:mi>N</mml:mi><mml:mrow><mml:msub><mml:mi>E</mml:mi><mml:mrow><mml:mi>t</mml:mi><mml:mi>a</mml:mi><mml:mi>s</mml:mi><mml:mi>k</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub></mml:mrow></mml:math><inline-graphic xlink:href="2305.18417v3_ieq14.tif" mimetype="image" mime-subtype="tiff"/></alternatives></inline-formula>, number of batches per epoch <italic>N<sub>b</sub></italic><break/><bold>Inputs:</bold> covariance matrix <italic><bold>V</bold></italic>, grid cell embeddings <italic><bold>x</bold></italic> and targets <italic>y</italic> for all training problems</td>
</tr>
<tr>
<td align="left">
<p>Initialize <italic><bold>g, R</bold></italic></p>
<p><bold>for</bold> <italic>i</italic> = 1 <bold>to</bold> <inline-formula id="ie15"><alternatives><mml:math display="inline" id="i15"><mml:mrow><mml:msub><mml:mi>N</mml:mi><mml:mrow><mml:msub><mml:mi>E</mml:mi><mml:mrow><mml:mi>D</mml:mi><mml:mi>P</mml:mi><mml:mi>P</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub></mml:mrow></mml:math><inline-graphic xlink:href="2305.18417v3_ieq15.tif" mimetype="image" mime-subtype="tiff"/></alternatives></inline-formula> <bold>do</bold></p>
<p> <bold>for</bold> <italic>j</italic> = 1 <bold>to</bold> <italic>N<sub>b</sub></italic> <bold>do</bold></p>
<p>  <inline-formula id="ie16"><alternatives><mml:math display="inline" id="i16"><mml:mrow><mml:mover accent="true"><mml:mi>F</mml:mi><mml:mo>^</mml:mo></mml:mover><mml:mo stretchy="false">(</mml:mo><mml:mstyle mathvariant="bold-italic" mathsize="normal"><mml:mi>g</mml:mi></mml:mstyle><mml:mo>,</mml:mo><mml:mstyle mathvariant="bold-italic" mathsize="normal"><mml:mi>V</mml:mi></mml:mstyle><mml:mo>,</mml:mo><mml:msub><mml:mi>N</mml:mi><mml:mi>f</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>N</mml:mi><mml:mi>p</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mstyle displaystyle="true"><mml:munderover><mml:mo>∑</mml:mo><mml:mrow><mml:mi>f</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:msub><mml:mi>N</mml:mi><mml:mi>f</mml:mi></mml:msub></mml:mrow></mml:munderover><mml:mrow><mml:mi>log</mml:mi><mml:mtext> </mml:mtext><mml:mi>det</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mtext>diag</mml:mtext><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mi>σ</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mstyle mathvariant="bold-italic" mathsize="normal"><mml:mi>g</mml:mi></mml:mstyle><mml:mstyle mathvariant="bold-italic" mathsize="normal"><mml:mi>f</mml:mi></mml:mstyle></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mstyle mathvariant="bold-italic" mathsize="normal"><mml:mi>V</mml:mi></mml:mstyle><mml:mstyle mathvariant="bold-italic" mathsize="normal"><mml:mi>f</mml:mi></mml:mstyle></mml:msub><mml:mo>−</mml:mo><mml:mstyle mathvariant="bold-italic" mathsize="normal"><mml:mi>I</mml:mi></mml:mstyle><mml:mo stretchy="false">)</mml:mo><mml:mo>+</mml:mo><mml:mstyle mathvariant="bold-italic" mathsize="normal"><mml:mi>I</mml:mi></mml:mstyle></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mstyle></mml:mrow></mml:math><inline-graphic xlink:href="2305.18417v3_ieq16.tif" mimetype="image" mime-subtype="tiff"/></alternatives></inline-formula></p>
<p>  <inline-formula id="ie17"><alternatives><mml:math display="inline" id="i17"><mml:mrow><mml:msub><mml:mi>𝓛</mml:mi><mml:mrow><mml:malignmark/><mml:mi>D</mml:mi><mml:mi>P</mml:mi><mml:mi>P</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mo>−</mml:mo><mml:mover accent="true"><mml:mi>F</mml:mi><mml:mo>^</mml:mo></mml:mover><mml:mo stretchy="false">(</mml:mo><mml:mstyle mathvariant="bold-italic" mathsize="normal"><mml:mi>g</mml:mi></mml:mstyle><mml:mo>,</mml:mo><mml:mstyle mathvariant="bold-italic" mathsize="normal"><mml:mi>V</mml:mi></mml:mstyle><mml:mo>,</mml:mo><mml:msub><mml:mi>N</mml:mi><mml:mi>f</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>N</mml:mi><mml:mi>p</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="2305.18417v3_ieq17.tif" mimetype="image" mime-subtype="tiff"/></alternatives></inline-formula></p>
<p>  Update <italic><bold>g</bold></italic></p>
<p> <bold>end for</bold></p>
<p><bold>end for</bold></p>
<p><inline-formula id="ie18"><alternatives><mml:math display="inline" id="i18"><mml:mrow><mml:msub><mml:mover accent="true"><mml:mi>F</mml:mi><mml:mo>^</mml:mo></mml:mover><mml:mrow><mml:mi>f</mml:mi><mml:mo>∈</mml:mo><mml:mo stretchy="false">[</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:msub><mml:mi>N</mml:mi><mml:mi>f</mml:mi></mml:msub><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mi>log</mml:mi><mml:mtext> </mml:mtext><mml:mi>det</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mtext>diag</mml:mtext><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mi>σ</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mstyle mathvariant="bold-italic" mathsize="normal"><mml:mi>g</mml:mi></mml:mstyle><mml:mstyle mathvariant="bold-italic" mathsize="normal"><mml:mi>f</mml:mi></mml:mstyle></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mstyle mathvariant="bold-italic" mathsize="normal"><mml:mi>V</mml:mi></mml:mstyle><mml:mstyle mathvariant="bold-italic" mathsize="normal"><mml:mi>f</mml:mi></mml:mstyle></mml:msub><mml:mo>−</mml:mo><mml:mstyle mathvariant="bold-italic" mathsize="normal"><mml:mi>I</mml:mi></mml:mstyle><mml:mo stretchy="false">)</mml:mo><mml:mo>+</mml:mo><mml:mstyle mathvariant="bold-italic" mathsize="normal"><mml:mi>I</mml:mi></mml:mstyle></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="2305.18417v3_ieq18.tif" mimetype="image" mime-subtype="tiff"/></alternatives></inline-formula></p>
<p><inline-formula id="ie19"><alternatives><mml:math display="inline" id="i19"><mml:mrow><mml:msub><mml:mi>f</mml:mi><mml:mrow><mml:mi>m</mml:mi><mml:mi>a</mml:mi><mml:msub><mml:mi>x</mml:mi><mml:mrow><mml:mi>D</mml:mi><mml:mi>P</mml:mi><mml:mi>P</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mi>arg</mml:mi><mml:mtext> </mml:mtext><mml:msub><mml:mrow><mml:mi>max</mml:mi></mml:mrow><mml:mrow><mml:mi>f</mml:mi><mml:mo>∈</mml:mo><mml:mo stretchy="false">[</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:msub><mml:mi>N</mml:mi><mml:mi>f</mml:mi></mml:msub><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:msub><mml:msub><mml:mover accent="true"><mml:mi>F</mml:mi><mml:mo>^</mml:mo></mml:mover><mml:mi>f</mml:mi></mml:msub></mml:mrow></mml:math><inline-graphic xlink:href="2305.18417v3_ieq19.tif" mimetype="image" mime-subtype="tiff"/></alternatives></inline-formula></p>
<p><bold>for</bold> <italic>i</italic> = 1 <bold>to</bold> <inline-formula id="ie20"><alternatives><mml:math display="inline" id="i20"><mml:mrow><mml:msub><mml:mi>N</mml:mi><mml:mrow><mml:msub><mml:mi>E</mml:mi><mml:mrow><mml:mi>t</mml:mi><mml:mi>a</mml:mi><mml:mi>s</mml:mi><mml:mi>k</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub></mml:mrow></mml:math><inline-graphic xlink:href="2305.18417v3_ieq20.tif" mimetype="image" mime-subtype="tiff"/></alternatives></inline-formula> <bold>do</bold></p>
<p> <bold>for</bold> <italic>j</italic> = 1 <bold>to</bold> <italic>N<sub>b</sub></italic> <bold>do</bold></p>
<p>  <inline-formula id="ie21"><alternatives><mml:math display="inline" id="i21"><mml:mrow><mml:mover accent="true"><mml:mi>y</mml:mi><mml:mo>^</mml:mo></mml:mover><mml:mo>=</mml:mo><mml:mstyle mathvariant="bold-italic" mathsize="normal"><mml:mi>R</mml:mi></mml:mstyle><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mstyle mathvariant="bold-italic" mathsize="normal"><mml:mi>x</mml:mi></mml:mstyle><mml:mrow><mml:mi>f</mml:mi><mml:mo>=</mml:mo><mml:msub><mml:mi>f</mml:mi><mml:mrow><mml:mi>m</mml:mi><mml:mi>a</mml:mi><mml:msub><mml:mi>x</mml:mi><mml:mrow><mml:mi>D</mml:mi><mml:mi>P</mml:mi><mml:mi>P</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="2305.18417v3_ieq21.tif" mimetype="image" mime-subtype="tiff"/></alternatives></inline-formula></p>
<p>  <inline-formula id="ie22"><alternatives><mml:math display="inline" id="i22"><mml:mrow><mml:msub><mml:mi>𝓛</mml:mi><mml:mrow><mml:mi>t</mml:mi><mml:mi>a</mml:mi><mml:mi>s</mml:mi><mml:mi>k</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mtext>cross-entropy</mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:mover accent="true"><mml:mi>y</mml:mi><mml:mo>^</mml:mo></mml:mover><mml:mo>,</mml:mo><mml:mi>y</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="2305.18417v3_ieq22.tif" mimetype="image" mime-subtype="tiff"/></alternatives></inline-formula></p>
<p>  Update <italic><bold>R</bold></italic></p>
<p> <bold>end for</bold></p>
<p><bold>end for</bold></p>
</td>
</tr>
</tbody>
</table>
</alternatives>
</table-wrap>
</sec>
<sec id="s2-2-3">
<title>2.2.3 Inference module</title>
<p>We implemented the inference module <italic><bold>R</bold></italic> in two forms, one using an LSTM (<xref ref-type="bibr" rid="c35">Hochreiter &amp; Schmidhuber, 1997</xref>) and the other using a transformer (<xref ref-type="bibr" rid="c68">Vaswani et al., 2017</xref>) architecture. Separate networks were trained for the analogy and arithmetic tasks using each form of inference module. For each task, the attended grid cell embeddings of each stimuli obtained from the DPP-A process (<inline-formula id="ie23"><alternatives><mml:math display="inline" id="i23"><mml:mrow><mml:msub><mml:mstyle mathvariant="bold-italic" mathsize="normal"><mml:mi>x</mml:mi></mml:mstyle><mml:mrow><mml:mi>f</mml:mi><mml:mo>=</mml:mo><mml:msub><mml:mi>f</mml:mi><mml:mrow><mml:mi>m</mml:mi><mml:mi>a</mml:mi><mml:msub><mml:mi>x</mml:mi><mml:mrow><mml:mi>D</mml:mi><mml:mi>P</mml:mi><mml:mi>P</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub></mml:mrow></mml:msub></mml:mrow></mml:math><inline-graphic xlink:href="2305.18417v3_ieq23.tif" mimetype="image" mime-subtype="tiff"/></alternatives></inline-formula>), were provided to <italic><bold>R</bold></italic> as its inputs, which we denote as <italic><bold>x<sub>R</sub></bold></italic> for brevity. For the arithmetic task, we also concatenated to <italic><bold>x<sub>R</sub></bold></italic> a one-hot tensor of dimension 2, before feeding to <italic><bold>R</bold></italic> that specified which computation to perform (addition or multiplication). As proposed by <xref ref-type="bibr" rid="c33">Hill et al. (2019</xref>), we treated both the analogy and arithmetic tasks as scoring (i.e., multiple choice) problems. For each analogy, the inference module was presented with multiple problems, each consisting of three stimuli, <italic>A, B, C</italic>, and a candidate completion from the set containing <italic>D</italic> (the correct completion) and six foil completions. For each instance of the arithmetic task, it was presented with two stimuli, <italic>A, B</italic>, and a candidate completion from the set containing <italic>C</italic> (the correct completion) and six foil completions. Stimuli were presented sequentially for <italic><bold>R</bold></italic> constructed using an LSTM, which consists of three gates, and computations using them defined as below:
<disp-formula id="ed7"><alternatives><mml:math display="block" id="e7"><mml:mrow><mml:mstyle mathvariant="bold-italic" mathsize="normal"><mml:mi>i</mml:mi><mml:mi>n</mml:mi><mml:mi>p</mml:mi><mml:mi>u</mml:mi><mml:mi>t</mml:mi><mml:mo>_</mml:mo><mml:mi>g</mml:mi><mml:mi>a</mml:mi><mml:mi>t</mml:mi><mml:mi>e</mml:mi></mml:mstyle><mml:mo stretchy="false">[</mml:mo><mml:mi>t</mml:mi><mml:mo stretchy="false">]</mml:mo><mml:mo>=</mml:mo><mml:mi>σ</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msub><mml:mstyle mathvariant="bold-italic" mathsize="normal"><mml:mi>W</mml:mi></mml:mstyle><mml:mrow><mml:mstyle mathvariant="bold-italic" mathsize="normal"><mml:mi>i</mml:mi><mml:mi>i</mml:mi></mml:mstyle></mml:mrow></mml:msub><mml:msub><mml:mstyle mathvariant="bold-italic" mathsize="normal"><mml:mi>x</mml:mi></mml:mstyle><mml:mstyle mathvariant="bold-italic" mathsize="normal"><mml:mi>R</mml:mi></mml:mstyle></mml:msub><mml:mo stretchy="false">[</mml:mo><mml:mi>t</mml:mi><mml:mo stretchy="false">]</mml:mo><mml:mo>+</mml:mo><mml:msub><mml:mstyle mathvariant="bold-italic" mathsize="normal"><mml:mi>b</mml:mi></mml:mstyle><mml:mrow><mml:mstyle mathvariant="bold-italic" mathsize="normal"><mml:mi>i</mml:mi><mml:mi>i</mml:mi></mml:mstyle></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:msub><mml:mstyle mathvariant="bold-italic" mathsize="normal"><mml:mi>W</mml:mi></mml:mstyle><mml:mrow><mml:mstyle mathvariant="bold-italic" mathsize="normal"><mml:mi>h</mml:mi><mml:mi>i</mml:mi></mml:mstyle></mml:mrow></mml:msub><mml:mstyle mathvariant="bold-italic" mathsize="normal"><mml:mi>h</mml:mi></mml:mstyle><mml:mo stretchy="false">[</mml:mo><mml:mi>t</mml:mi><mml:mo>−</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">]</mml:mo><mml:mo>+</mml:mo><mml:msub><mml:mstyle mathvariant="bold-italic" mathsize="normal"><mml:mi>b</mml:mi></mml:mstyle><mml:mrow><mml:mstyle mathvariant="bold-italic" mathsize="normal"><mml:mi>h</mml:mi><mml:mi>i</mml:mi></mml:mstyle></mml:mrow></mml:msub></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:math><graphic xlink:href="2305.18417v3_eqn7.tif" mimetype="image" mime-subtype="tiff"/></alternatives><label>(7)</label></disp-formula>
<disp-formula id="ed8"><alternatives><mml:math display="block" id="e8"><mml:mrow><mml:mstyle mathvariant="bold-italic" mathsize="normal"><mml:mi>f</mml:mi><mml:mi>o</mml:mi><mml:mi>r</mml:mi><mml:mi>g</mml:mi><mml:mi>e</mml:mi><mml:mi>t</mml:mi><mml:mo>_</mml:mo><mml:mi>g</mml:mi><mml:mi>a</mml:mi><mml:mi>t</mml:mi><mml:mi>e</mml:mi></mml:mstyle><mml:mo stretchy="false">[</mml:mo><mml:mi>t</mml:mi><mml:mo stretchy="false">]</mml:mo><mml:mo>=</mml:mo><mml:mi>σ</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msub><mml:mstyle mathvariant="bold-italic" mathsize="normal"><mml:mi>W</mml:mi></mml:mstyle><mml:mrow><mml:mstyle mathvariant="bold-italic" mathsize="normal"><mml:mi>i</mml:mi><mml:mi>f</mml:mi></mml:mstyle></mml:mrow></mml:msub><mml:msub><mml:mstyle mathvariant="bold-italic" mathsize="normal"><mml:mi>x</mml:mi></mml:mstyle><mml:mstyle mathvariant="bold-italic" mathsize="normal"><mml:mi>R</mml:mi></mml:mstyle></mml:msub><mml:mo stretchy="false">[</mml:mo><mml:mi>t</mml:mi><mml:mo stretchy="false">]</mml:mo><mml:mo>+</mml:mo><mml:msub><mml:mstyle mathvariant="bold-italic" mathsize="normal"><mml:mi>b</mml:mi></mml:mstyle><mml:mrow><mml:mstyle mathvariant="bold-italic" mathsize="normal"><mml:mi>i</mml:mi><mml:mi>f</mml:mi></mml:mstyle></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:msub><mml:mstyle mathvariant="bold-italic" mathsize="normal"><mml:mi>W</mml:mi></mml:mstyle><mml:mrow><mml:mstyle mathvariant="bold-italic" mathsize="normal"><mml:mi>h</mml:mi><mml:mi>f</mml:mi></mml:mstyle></mml:mrow></mml:msub><mml:mstyle mathvariant="bold-italic" mathsize="normal"><mml:mi>h</mml:mi></mml:mstyle><mml:mo stretchy="false">[</mml:mo><mml:mi>t</mml:mi><mml:mo>−</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">]</mml:mo><mml:mo>+</mml:mo><mml:msub><mml:mstyle mathvariant="bold-italic" mathsize="normal"><mml:mi>b</mml:mi></mml:mstyle><mml:mrow><mml:mstyle mathvariant="bold-italic" mathsize="normal"><mml:mi>h</mml:mi><mml:mi>f</mml:mi></mml:mstyle></mml:mrow></mml:msub></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:math><graphic xlink:href="2305.18417v3_eqn8.tif" mimetype="image" mime-subtype="tiff"/></alternatives><label>(8)</label></disp-formula>
<disp-formula id="ed9"><alternatives><mml:math display="block" id="e9"><mml:mrow><mml:mstyle mathvariant="bold-italic" mathsize="normal"><mml:mi>o</mml:mi><mml:mi>u</mml:mi><mml:mi>t</mml:mi><mml:mi>p</mml:mi><mml:mi>u</mml:mi><mml:mi>t</mml:mi><mml:mo>_</mml:mo><mml:mi>g</mml:mi><mml:mi>a</mml:mi><mml:mi>t</mml:mi><mml:mi>e</mml:mi></mml:mstyle><mml:mo stretchy="false">[</mml:mo><mml:mi>t</mml:mi><mml:mo stretchy="false">]</mml:mo><mml:mo>=</mml:mo><mml:mi>σ</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msub><mml:mstyle mathvariant="bold-italic" mathsize="normal"><mml:mi>W</mml:mi></mml:mstyle><mml:mrow><mml:mstyle mathvariant="bold-italic" mathsize="normal"><mml:mi>i</mml:mi><mml:mi>o</mml:mi></mml:mstyle></mml:mrow></mml:msub><mml:msub><mml:mstyle mathvariant="bold-italic" mathsize="normal"><mml:mi>x</mml:mi></mml:mstyle><mml:mstyle mathvariant="bold-italic" mathsize="normal"><mml:mi>R</mml:mi></mml:mstyle></mml:msub><mml:mo stretchy="false">[</mml:mo><mml:mi>t</mml:mi><mml:mo stretchy="false">]</mml:mo><mml:mo>+</mml:mo><mml:msub><mml:mstyle mathvariant="bold-italic" mathsize="normal"><mml:mi>b</mml:mi></mml:mstyle><mml:mrow><mml:mstyle mathvariant="bold-italic" mathsize="normal"><mml:mi>i</mml:mi><mml:mi>o</mml:mi></mml:mstyle></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:msub><mml:mstyle mathvariant="bold-italic" mathsize="normal"><mml:mi>W</mml:mi></mml:mstyle><mml:mrow><mml:mstyle mathvariant="bold-italic" mathsize="normal"><mml:mi>h</mml:mi><mml:mi>o</mml:mi></mml:mstyle></mml:mrow></mml:msub><mml:mstyle mathvariant="bold-italic" mathsize="normal"><mml:mi>h</mml:mi></mml:mstyle><mml:mo stretchy="false">[</mml:mo><mml:mi>t</mml:mi><mml:mo>−</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">]</mml:mo><mml:mo>+</mml:mo><mml:msub><mml:mstyle mathvariant="bold-italic" mathsize="normal"><mml:mi>b</mml:mi></mml:mstyle><mml:mrow><mml:mstyle mathvariant="bold-italic" mathsize="normal"><mml:mi>h</mml:mi><mml:mi>o</mml:mi></mml:mstyle></mml:mrow></mml:msub></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:math><graphic xlink:href="2305.18417v3_eqn9.tif" mimetype="image" mime-subtype="tiff"/></alternatives><label>(9)</label></disp-formula>
<disp-formula id="ed10"><alternatives><mml:math display="block" id="e10"><mml:mrow><mml:mstyle mathvariant="bold-italic" mathsize="normal"><mml:mi>c</mml:mi></mml:mstyle><mml:mo stretchy="false">[</mml:mo><mml:mi>t</mml:mi><mml:mo stretchy="false">]</mml:mo><mml:mo>=</mml:mo><mml:mstyle mathvariant="bold-italic" mathsize="normal"><mml:mi>f</mml:mi><mml:mi>o</mml:mi><mml:mi>r</mml:mi><mml:mi>g</mml:mi><mml:mi>e</mml:mi><mml:mi>t</mml:mi><mml:mo>_</mml:mo><mml:mi>g</mml:mi><mml:mi>a</mml:mi><mml:mi>t</mml:mi><mml:mi>e</mml:mi></mml:mstyle><mml:mo stretchy="false">[</mml:mo><mml:mi>t</mml:mi><mml:mo stretchy="false">]</mml:mo><mml:mo>⊙</mml:mo><mml:mstyle mathvariant="bold-italic" mathsize="normal"><mml:mi>c</mml:mi></mml:mstyle><mml:mo stretchy="false">[</mml:mo><mml:mi>t</mml:mi><mml:mo>−</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">]</mml:mo><mml:mo>+</mml:mo><mml:mstyle mathvariant="bold-italic" mathsize="normal"><mml:mi>i</mml:mi><mml:mi>n</mml:mi><mml:mi>p</mml:mi><mml:mi>u</mml:mi><mml:mi>t</mml:mi><mml:mo>_</mml:mo><mml:mi>g</mml:mi><mml:mi>a</mml:mi><mml:mi>t</mml:mi><mml:mi>e</mml:mi></mml:mstyle><mml:mo stretchy="false">[</mml:mo><mml:mi>t</mml:mi><mml:mo stretchy="false">]</mml:mo><mml:mo>⊙</mml:mo><mml:mi>t</mml:mi><mml:mi>a</mml:mi><mml:mi>n</mml:mi><mml:mi>h</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msub><mml:mstyle mathvariant="bold-italic" mathsize="normal"><mml:mi>W</mml:mi></mml:mstyle><mml:mrow><mml:mstyle mathvariant="bold-italic" mathsize="normal"><mml:mi>i</mml:mi><mml:mi>c</mml:mi></mml:mstyle></mml:mrow></mml:msub><mml:msub><mml:mstyle mathvariant="bold-italic" mathsize="normal"><mml:mi>x</mml:mi></mml:mstyle><mml:mstyle mathvariant="bold-italic" mathsize="normal"><mml:mi>R</mml:mi></mml:mstyle></mml:msub><mml:mo stretchy="false">[</mml:mo><mml:mi>t</mml:mi><mml:mo stretchy="false">]</mml:mo><mml:mo>+</mml:mo><mml:msub><mml:mstyle mathvariant="bold-italic" mathsize="normal"><mml:mi>b</mml:mi></mml:mstyle><mml:mrow><mml:mstyle mathvariant="bold-italic" mathsize="normal"><mml:mi>i</mml:mi><mml:mi>c</mml:mi></mml:mstyle></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:msub><mml:mstyle mathvariant="bold-italic" mathsize="normal"><mml:mi>W</mml:mi></mml:mstyle><mml:mrow><mml:mstyle mathvariant="bold-italic" mathsize="normal"><mml:mi>h</mml:mi><mml:mi>c</mml:mi></mml:mstyle></mml:mrow></mml:msub><mml:mstyle mathvariant="bold-italic" mathsize="normal"><mml:mi>h</mml:mi></mml:mstyle><mml:mo stretchy="false">[</mml:mo><mml:mi>t</mml:mi><mml:mo>−</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">]</mml:mo><mml:mo>+</mml:mo><mml:msub><mml:mstyle mathvariant="bold-italic" mathsize="normal"><mml:mi>b</mml:mi></mml:mstyle><mml:mrow><mml:mstyle mathvariant="bold-italic" mathsize="normal"><mml:mi>h</mml:mi><mml:mi>c</mml:mi></mml:mstyle></mml:mrow></mml:msub></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:math><graphic xlink:href="2305.18417v3_eqn10.tif" mimetype="image" mime-subtype="tiff"/></alternatives><label>(10)</label></disp-formula>
<disp-formula id="ed11"><alternatives><mml:math display="block" id="e11"><mml:mrow><mml:mstyle mathvariant="bold-italic" mathsize="normal"><mml:mi>h</mml:mi></mml:mstyle><mml:mo stretchy="false">[</mml:mo><mml:mi>t</mml:mi><mml:mo stretchy="false">]</mml:mo><mml:mo>=</mml:mo><mml:mstyle mathvariant="bold-italic" mathsize="normal"><mml:mi>o</mml:mi><mml:mi>u</mml:mi><mml:mi>t</mml:mi><mml:mi>p</mml:mi><mml:mi>u</mml:mi><mml:mi>t</mml:mi><mml:mo>_</mml:mo><mml:mi>g</mml:mi><mml:mi>a</mml:mi><mml:mi>t</mml:mi><mml:mi>e</mml:mi></mml:mstyle><mml:mo stretchy="false">[</mml:mo><mml:mi>t</mml:mi><mml:mo stretchy="false">]</mml:mo><mml:mo>⊙</mml:mo><mml:mi>t</mml:mi><mml:mi>a</mml:mi><mml:mi>n</mml:mi><mml:mi>h</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mstyle mathvariant="bold-italic" mathsize="normal"><mml:mi>c</mml:mi></mml:mstyle><mml:mo stretchy="false">[</mml:mo><mml:mi>t</mml:mi><mml:mo stretchy="false">]</mml:mo></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:math><graphic xlink:href="2305.18417v3_eqn11.tif" mimetype="image" mime-subtype="tiff"/></alternatives><label>(11)</label></disp-formula>
where <italic><bold>W<sub>ii</sub>,W<sub>hi</sub>,W<sub>if</sub>,W<sub>hf</sub>,W<sub>io</sub>,W<sub>ho</sub>,W<sub>ic</sub>,W<sub>hc</sub></bold></italic> are weight matrices and <italic><bold>b<sub>ii</sub>, b<sub>hi</sub>, b<sub>if</sub>, b<sub>hf</sub>, b<sub>io</sub>, b<sub>ho</sub>, b<sub>ic</sub>, b<sub>hc</sub></bold></italic> are bias vectors. <italic><bold>h</bold></italic>[<italic>t</italic>] and <italic><bold>c</bold></italic>[<italic>t</italic>] are the hidden state and the cell state at time <italic>t</italic> respectively. The hidden state for the last timestep was passed through a linear layer with a single output unit to generate a score for the candidate completions for each problem. We used a single layered LSTM of 512 hidden units, which corresponds to the size of the hidden state, cell state, bias vectors, and weight matrices. The hidden and cell state of the LSTM was reinitialized at the start of each sequence for each candidate completion.</p>
<p>For <italic><bold>R</bold></italic> constructed using a transformer, we used the standard multi-head self attention (<italic>MHSA</italic>) mechanism followed by a multi-layered perceptron (<italic>MLP</italic>) - a feedforward neural network with one hidden layer, with layer normalization (<xref ref-type="bibr" rid="c2">Ba et al., 2016</xref>) (<italic>LN</italic>) to transform <italic><bold>x<sub>R</sub></bold></italic> at each layer of the transformer, defined as below:
<disp-formula id="ed12"><alternatives><mml:math display="block" id="e12"><mml:mrow><mml:mi>S</mml:mi><mml:mi>A</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mstyle mathvariant="bold-italic" mathsize="normal"><mml:mi>Q</mml:mi></mml:mstyle><mml:mo>,</mml:mo><mml:mstyle mathvariant="bold-italic" mathsize="normal"><mml:mi>K</mml:mi></mml:mstyle><mml:mo>,</mml:mo><mml:mstyle mathvariant="bold-italic" mathsize="normal"><mml:mi>V</mml:mi></mml:mstyle><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mi>s</mml:mi><mml:mi>o</mml:mi><mml:mi>f</mml:mi><mml:mi>t</mml:mi><mml:mi>m</mml:mi><mml:mi>a</mml:mi><mml:mi>x</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mfrac><mml:mrow><mml:mstyle mathvariant="bold-italic" mathsize="normal"><mml:mi>Q</mml:mi></mml:mstyle><mml:msup><mml:mstyle mathvariant="bold-italic" mathsize="normal"><mml:mi>K</mml:mi></mml:mstyle><mml:mi>T</mml:mi></mml:msup></mml:mrow><mml:mrow><mml:msqrt><mml:mrow><mml:msub><mml:mi>d</mml:mi><mml:mi>k</mml:mi></mml:msub></mml:mrow></mml:msqrt></mml:mrow></mml:mfrac><mml:mo stretchy="false">)</mml:mo><mml:mstyle mathvariant="bold-italic" mathsize="normal"><mml:mi>V</mml:mi></mml:mstyle></mml:mrow></mml:math><graphic xlink:href="2305.18417v3_eqn12.tif" mimetype="image" mime-subtype="tiff"/></alternatives><label>(12)</label></disp-formula>
<disp-formula id="ed13"><alternatives><mml:math display="block" id="e13"><mml:mrow><mml:mi>M</mml:mi><mml:mi>H</mml:mi><mml:mi>S</mml:mi><mml:mi>A</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mstyle mathvariant="bold-italic" mathsize="normal"><mml:mi>x</mml:mi></mml:mstyle><mml:mstyle mathvariant="bold-italic" mathsize="normal"><mml:mi>R</mml:mi></mml:mstyle></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mi>C</mml:mi><mml:mi>o</mml:mi><mml:mi>n</mml:mi><mml:mi>c</mml:mi><mml:mi>a</mml:mi><mml:mi>t</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mi>S</mml:mi><mml:mi>A</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msubsup><mml:mstyle mathvariant="bold-italic" mathsize="normal"><mml:mi>W</mml:mi></mml:mstyle><mml:mstyle mathvariant="bold" mathsize="normal"><mml:mn>1</mml:mn></mml:mstyle><mml:mstyle mathvariant="bold-italic" mathsize="normal"><mml:mi>Q</mml:mi></mml:mstyle></mml:msubsup><mml:msub><mml:mstyle mathvariant="bold-italic" mathsize="normal"><mml:mi>x</mml:mi></mml:mstyle><mml:mstyle mathvariant="bold-italic" mathsize="normal"><mml:mi>R</mml:mi></mml:mstyle></mml:msub><mml:mo>,</mml:mo><mml:msubsup><mml:mstyle mathvariant="bold-italic" mathsize="normal"><mml:mi>W</mml:mi></mml:mstyle><mml:mstyle mathvariant="bold" mathsize="normal"><mml:mn>1</mml:mn></mml:mstyle><mml:mstyle mathvariant="bold-italic" mathsize="normal"><mml:mi>K</mml:mi></mml:mstyle></mml:msubsup><mml:msub><mml:mstyle mathvariant="bold-italic" mathsize="normal"><mml:mi>x</mml:mi></mml:mstyle><mml:mstyle mathvariant="bold-italic" mathsize="normal"><mml:mi>R</mml:mi></mml:mstyle></mml:msub><mml:mo>,</mml:mo><mml:msubsup><mml:mstyle mathvariant="bold-italic" mathsize="normal"><mml:mi>W</mml:mi></mml:mstyle><mml:mstyle mathvariant="bold" mathsize="normal"><mml:mn>1</mml:mn></mml:mstyle><mml:mstyle mathvariant="bold-italic" mathsize="normal"><mml:mi>V</mml:mi></mml:mstyle></mml:msubsup><mml:msub><mml:mstyle mathvariant="bold-italic" mathsize="normal"><mml:mi>x</mml:mi></mml:mstyle><mml:mstyle mathvariant="bold-italic" mathsize="normal"><mml:mi>R</mml:mi></mml:mstyle></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:mi>S</mml:mi><mml:mi>A</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msubsup><mml:mstyle mathvariant="bold-italic" mathsize="normal"><mml:mi>W</mml:mi></mml:mstyle><mml:mstyle mathvariant="bold-italic" mathsize="normal"><mml:mi>H</mml:mi></mml:mstyle><mml:mstyle mathvariant="bold-italic" mathsize="normal"><mml:mi>Q</mml:mi></mml:mstyle></mml:msubsup><mml:msub><mml:mstyle mathvariant="bold-italic" mathsize="normal"><mml:mi>x</mml:mi></mml:mstyle><mml:mstyle mathvariant="bold-italic" mathsize="normal"><mml:mi>R</mml:mi></mml:mstyle></mml:msub><mml:mo>,</mml:mo><mml:msubsup><mml:mstyle mathvariant="bold-italic" mathsize="normal"><mml:mi>W</mml:mi></mml:mstyle><mml:mstyle mathvariant="bold-italic" mathsize="normal"><mml:mi>H</mml:mi></mml:mstyle><mml:mstyle mathvariant="bold-italic" mathsize="normal"><mml:mi>K</mml:mi></mml:mstyle></mml:msubsup><mml:msub><mml:mstyle mathvariant="bold-italic" mathsize="normal"><mml:mi>x</mml:mi></mml:mstyle><mml:mstyle mathvariant="bold-italic" mathsize="normal"><mml:mi>R</mml:mi></mml:mstyle></mml:msub><mml:mo>,</mml:mo><mml:msubsup><mml:mstyle mathvariant="bold-italic" mathsize="normal"><mml:mi>W</mml:mi></mml:mstyle><mml:mstyle mathvariant="bold-italic" mathsize="normal"><mml:mi>H</mml:mi></mml:mstyle><mml:mstyle mathvariant="bold-italic" mathsize="normal"><mml:mi>V</mml:mi></mml:mstyle></mml:msubsup><mml:msub><mml:mstyle mathvariant="bold-italic" mathsize="normal"><mml:mi>x</mml:mi></mml:mstyle><mml:mstyle mathvariant="bold-italic" mathsize="normal"><mml:mi>R</mml:mi></mml:mstyle></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:msup><mml:mstyle mathvariant="bold-italic" mathsize="normal"><mml:mi>W</mml:mi></mml:mstyle><mml:mstyle mathvariant="bold-italic" mathsize="normal"><mml:mi>O</mml:mi></mml:mstyle></mml:msup></mml:mrow></mml:math><graphic xlink:href="2305.18417v3_eqn13.tif" mimetype="image" mime-subtype="tiff"/></alternatives><label>(13)</label></disp-formula>
<disp-formula id="ed14"><alternatives><mml:math display="block" id="e14"><mml:mrow><mml:msub><mml:mstyle mathvariant="bold-italic" mathsize="normal"><mml:mover accent="true"><mml:mi>x</mml:mi><mml:mo>˜</mml:mo></mml:mover></mml:mstyle><mml:mstyle mathvariant="bold-italic" mathsize="normal"><mml:mi>R</mml:mi></mml:mstyle></mml:msub><mml:mo>=</mml:mo><mml:mi>M</mml:mi><mml:mi>L</mml:mi><mml:mi>P</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mi>L</mml:mi><mml:mi>N</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mi>M</mml:mi><mml:mi>H</mml:mi><mml:mi>S</mml:mi><mml:mi>A</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mi>L</mml:mi><mml:mi>N</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mstyle mathvariant="bold-italic" mathsize="normal"><mml:mi>x</mml:mi></mml:mstyle><mml:mstyle mathvariant="bold-italic" mathsize="normal"><mml:mi>R</mml:mi></mml:mstyle></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>+</mml:mo><mml:msub><mml:mstyle mathvariant="bold-italic" mathsize="normal"><mml:mi>x</mml:mi></mml:mstyle><mml:mstyle mathvariant="bold-italic" mathsize="normal"><mml:mi>R</mml:mi></mml:mstyle></mml:msub></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>+</mml:mo><mml:mi>M</mml:mi><mml:mi>H</mml:mi><mml:mi>S</mml:mi><mml:mi>A</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mi>L</mml:mi><mml:mi>N</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mstyle mathvariant="bold-italic" mathsize="normal"><mml:mi>x</mml:mi></mml:mstyle><mml:mstyle mathvariant="bold-italic" mathsize="normal"><mml:mi>R</mml:mi></mml:mstyle></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>+</mml:mo><mml:msub><mml:mstyle mathvariant="bold-italic" mathsize="normal"><mml:mi>x</mml:mi></mml:mstyle><mml:mstyle mathvariant="bold-italic" mathsize="normal"><mml:mi>R</mml:mi></mml:mstyle></mml:msub></mml:mrow></mml:math><graphic xlink:href="2305.18417v3_eqn14.tif" mimetype="image" mime-subtype="tiff"/></alternatives><label>(14)</label></disp-formula>
where <italic><bold>Q, K</bold></italic>, and <italic><bold>V</bold></italic> are called the query, key, and value matrices respectively, <italic>d<sub>k</sub></italic> is the dimension of the matrices, <italic><bold>W<sup>Q</sup>, W<sup>K</sup></bold></italic>, and <italic><bold>W<sup>V</sup></bold></italic> are the corresponding projection matrices, <italic><bold>W<sup>O</sup></bold></italic> is the output projection matrix which is applied to the concatenation of self attention (<italic>SA</italic>) output for each head, and <italic>H</italic> is the number of heads. The <italic>softmax</italic> function is used to convert real valued vector inputs into a probability distribution, defined as <inline-formula id="ie24"><alternatives><mml:math display="inline" id="i24"><mml:mrow><mml:mi>s</mml:mi><mml:mi>o</mml:mi><mml:mi>f</mml:mi><mml:mi>t</mml:mi><mml:mi>m</mml:mi><mml:mi>a</mml:mi><mml:mi>x</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>z</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:msup><mml:mi>e</mml:mi><mml:mrow><mml:msub><mml:mi>z</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:msup><mml:mo>/</mml:mo><mml:msub><mml:mi>Σ</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:msup><mml:mi>e</mml:mi><mml:mrow><mml:msub><mml:mi>z</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:msup></mml:mrow></mml:math><inline-graphic xlink:href="2305.18417v3_ieq24.tif" mimetype="image" mime-subtype="tiff"/></alternatives></inline-formula>. We used a transformer with 6 layers, each of which had 8 heads, <italic>d<sub>k</sub></italic> = 32, and <italic>MLP</italic> hidden layer dimension of 512. The stimuli were presented together and projected into 128 dimensions to be more easily divisible by the number of heads, followed by layer normalization. Since a transformer is naturally invariant to the order of the stimuli, to make use of the order we added to <italic><bold>x<sub>R</sub></bold></italic> a learnable positional encoding (<xref ref-type="bibr" rid="c39">Kazemnejad, 2019</xref>), which is the linear projection of one-hot tensors denoting the position of stimuli in the sequence. We then concatenated a learned CLS (short for “classification”) token (analogous to the CLS token in <xref ref-type="bibr" rid="c19">Devlin et al. (2018)</xref>) to <italic><bold>x<sub>R</sub></bold></italic>, before transforming with <xref ref-type="disp-formula" rid="ed14">Equation 14</xref>. We took the transformed value (<inline-formula id="ie25"><alternatives><mml:math display="inline" id="i25"><mml:mrow><mml:msub><mml:mstyle mathvariant="bold-italic" mathsize="normal"><mml:mover accent="true"><mml:mi>x</mml:mi><mml:mo>˜</mml:mo></mml:mover></mml:mstyle><mml:mstyle mathvariant="bold-italic" mathsize="normal"><mml:mi>R</mml:mi></mml:mstyle></mml:msub></mml:mrow></mml:math><inline-graphic xlink:href="2305.18417v3_ieq25.tif" mimetype="image" mime-subtype="tiff"/></alternatives></inline-formula>) corresponding to the CLS token, and passed it to a linear layer with 1 output unit to generate a score for each candidate completion. This procedure was repeated for each candidate completion.</p>
<p>The seven scores (one for the correct completion and for six foil completions) were normalized using a softmax function, such that a higher score would correspond to a higher probability and vice versa, and the probabilities sum to 1. The inference module was trained using the task specific cross entropy loss (<italic>𝓛<sub>task</sub></italic> = cross-entropy) between the softmax-normalized scores and the index for the correct completion (target), defined as <italic>−log</italic>(<italic>softmax</italic>(scores)[target]). It is worth noting that the properties of equivariance hold, since the probability distribution after applying softmax remains the same when the transformation (translation or scaling) is applied to the scores for each of the answer choices obtained from the output of the inference module, and when the same transformation is applied to the stimuli for the task and all the answer choices before presenting as input to the inference module to obtain the scores. We also tried formulating the tasks as regression problems, the details of which can be found in <xref ref-type="sec" rid="s7-7">Appendix 7.7</xref>.</p>
<p>While our model is not construed to be as specific about the implementation of the <italic><bold>R</bold></italic> module, we assume that — as a standard deep learning component — it is likely to map onto neocortical structures that interact with the entorhinal cortex and, in particular, regions of the prefrontal-posterior parietal network widely believed to be involved in abstract relational processes (<xref ref-type="bibr" rid="c69">Waltz et al., 1999</xref>; <xref ref-type="bibr" rid="c15">Christoff et al., 2001</xref>; <xref ref-type="bibr" rid="c41">Knowlton et al., 2012</xref>; <xref ref-type="bibr" rid="c67">Summerfield et al., 2020</xref>). In particular, the role of the prefrontal cortex in the encoding and active maintenance of abstract information needed for task performance (such as rules and relations) has often been modeled using gated recurrent networks, such as LSTMs (<xref ref-type="bibr" rid="c23">Frank et al., 2001</xref>; <xref ref-type="bibr" rid="c11">Braver &amp; Cohen, 2000</xref>), and the posterior parietal cortex has long been known to support “maps” that may provide an important substrate for computing complex relations (<xref ref-type="bibr" rid="c67">Summerfield et al., 2020</xref>).</p>
</sec>
</sec>
</sec>
<sec id="s3">
<title>3 Related work</title>
<p>A body of recent computational work has shown that representations similar to grid cells can be derived using standard analytical techniques for dimensionality reduction (<xref ref-type="bibr" rid="c21">Dordek et al., 2016</xref>; <xref ref-type="bibr" rid="c65">Stachenfeld et al., 2017</xref>), as well as from error-driven learning paradigms (<xref ref-type="bibr" rid="c17">Cueva &amp; Wei, 2018</xref>; <xref ref-type="bibr" rid="c3">Banino et al., 2018</xref>; <xref ref-type="bibr" rid="c73">Whittington et al., 2020</xref>; <xref ref-type="bibr" rid="c62">Sorscher et al., 2022</xref>). Previous work has also shown that grid cells emerge in networks trained to generalize to novel location/object combinations, and support transitive inference (<xref ref-type="bibr" rid="c73">Whittington et al., 2020</xref>). Here, we show that grid cells enable strong OOD generalization when coupled with the appropriate attentional mechanism. Our proposed method is thus complementary to these previous approaches for obtaining grid cell representations from raw data.</p>
<p>In the field of machine learning, DPPs have been used for supervised video summarization (<xref ref-type="bibr" rid="c29">Gong et al., 2014</xref>), diverse recommendations (<xref ref-type="bibr" rid="c14">Chen et al., 2018</xref>), selecting a subset of diverse neurons to prune a neural network without hurting performance (<xref ref-type="bibr" rid="c48">Mariet &amp; Sra, 2015</xref>), and diverse minibatch attention for stochastic gradient descent (<xref ref-type="bibr" rid="c75">Zhang et al., 2017</xref>). Recently, <xref ref-type="bibr" rid="c49">Mariet et al. (2019)</xref> generated approximate DPP samples by proposing an inhibitive attention mechanism based on transformer networks as a proxy for capturing the dissimilarity between feature vectors, and <xref ref-type="bibr" rid="c56">Perez-Beltrachini &amp; Lapata (2021)</xref> used DPP-based attention with seq-to-seq architectures for diverse and relevant multi-document summarization. To our knowledge, however, DPPs have not previously been combined with the grid cell code that we employ here, and have not been used to enable OOD generalization.</p>
<p>Various approaches have been proposed to prevent deep learning systems from overfitting, and enable them to generalize. A commonly employed technique is weight decay (<xref ref-type="bibr" rid="c43">Krogh &amp; Hertz, 1992</xref>). <xref ref-type="bibr" rid="c64">Srivastava et al. (2014)</xref> proposed dropout, a regularization technique which reduces overfitting by randomly zeroing units from the neural network during training. Recently, <xref ref-type="bibr" rid="c70">Webb et al. (2020)</xref> proposed temporal context normalization (TCN) in which a normalization similar to batch normalization (<xref ref-type="bibr" rid="c38">Ioffe &amp; Szegedy, 2015</xref>) was applied over the temporal dimension instead of the batch dimension. However, unlike these previous approaches, the method reported here achieves nearly perfect OOD generalization when operating over the appropriate representation, as we show in the results. Our proposed method also has the virtue of being based on a well understood, and biologically plausible, encoding scheme (grid cell code).</p>
</sec>
<sec id="s4">
<title>4 Experiments</title>
<sec id="s4-1">
<title>4.1 Experimental details</title>
<p>For each task, the sequence of stimuli for a given problem was encoded using grid cell code (see <xref ref-type="sec" rid="s2-2-1">Section 2.2.1</xref>), that were then modulated by DPP-A (see <xref ref-type="sec" rid="s2-2-2">Section 2.2.2</xref>), and passed to the inference module <italic><bold>R</bold></italic> (see <xref ref-type="sec" rid="s2-2-3">Section 2.2.3</xref>). We trained 3 networks using each type of inference module. For networks using an LSTM in the inference module, we trained each network for number of epochs for optimizing DPP attention <inline-formula id="ie26"><alternatives><mml:math display="inline" id="i26"><mml:mrow><mml:msub><mml:mi>N</mml:mi><mml:mrow><mml:msub><mml:mi>E</mml:mi><mml:mrow><mml:mi>D</mml:mi><mml:mi>P</mml:mi><mml:mi>P</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mn>50</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="2305.18417v3_ieq26.tif" mimetype="image" mime-subtype="tiff"/></alternatives></inline-formula>, number of epochs for optimizing task loss <inline-formula id="ie27"><alternatives><mml:math display="inline" id="i27"><mml:mrow><mml:msub><mml:mi>N</mml:mi><mml:mrow><mml:msub><mml:mi>E</mml:mi><mml:mrow><mml:mi>t</mml:mi><mml:mi>a</mml:mi><mml:mi>s</mml:mi><mml:mi>k</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mn>50</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="2305.18417v3_ieq27.tif" mimetype="image" mime-subtype="tiff"/></alternatives></inline-formula>, on analogy problems, and for <inline-formula id="ie28"><alternatives><mml:math display="inline" id="i28"><mml:mrow><mml:msub><mml:mi>N</mml:mi><mml:mrow><mml:msub><mml:mi>E</mml:mi><mml:mrow><mml:mi>D</mml:mi><mml:mi>P</mml:mi><mml:mi>P</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mn>500</mml:mn><mml:mo>,</mml:mo><mml:msub><mml:mi>N</mml:mi><mml:mrow><mml:msub><mml:mi>E</mml:mi><mml:mrow><mml:mi>t</mml:mi><mml:mi>a</mml:mi><mml:mi>s</mml:mi><mml:mi>k</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mn>500</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="2305.18417v3_ieq28.tif" mimetype="image" mime-subtype="tiff"/></alternatives></inline-formula>, on arithmetic problems with a batch size of 256, using the ADAM optimizer (<xref ref-type="bibr" rid="c40">Kingma &amp; Ba, 2014</xref>), and a learning rate of 1<italic>e</italic><sup>−3</sup>. For networks using a transformer in the inference module, we trained with a batch size of 128 on analogy with a learning rate of 5<italic>e</italic><sup>−4</sup>, and on arithmetic problems with a learning rate of 5<italic>e</italic><sup>−5</sup>. More details can be found in <xref ref-type="sec" rid="s7-2">Appendix 7.2</xref>.</p>
</sec>
<sec id="s4-2">
<title>4.2 Comparison models</title>
<p>To evaluate how the grid cell code coupled with DPP-A compares with other architectures and approaches to generalization, and the extent to which each of these components contributed to the performance of the model, we compared it with several alternative models for performing the analogy and arithmetic tasks. First, we compared it with the temporal context normalization (TCN) model (<xref ref-type="bibr" rid="c70">Webb et al., 2020</xref>) (see <xref ref-type="sec" rid="s3">Section 3</xref>), but modified so as to use the grid cell code as input. We passed the grid cell embeddings for each input through a shared feedforward encoder which consisted of two fully connected layers with 256 units per layer. ReLU nonlinearities were used in both the layers. The final embedding was generated with a linear layer of 256 units. TCN was applied to these embeddings and then passed as a sequence for each candidate completion to the inference module. This implementation of TCN involved a learned encoder on top of the grid cell embeddings, so it is closely analogous to the original TCN.</p>
<p>Next, we compared our model to one that used variational dropout (<xref ref-type="bibr" rid="c26">Gal &amp; Ghahramani, 2016</xref>), which is shown to be more effective in generalization compared to naive dropout (<xref ref-type="bibr" rid="c64">Srivastava et al., 2014</xref>). We randomly sampled a dropout mask (50% dropout), zeroing out the contribution of some of the grid cell code in the input to the inference module. We then use that locked dropout mask for every time step in the sequence. We also compared DPP-A to a model that had an additional penalty (L1 regularization) proportional to the absolute sum of the attention gates <italic>g</italic> along with the task-specific loss. We experimented with different values of <italic>λ</italic>, which controlled the strength of the penalty relative to the cross-entropy loss. We report accuracy values for <italic>λ</italic> that achieved the best performance on the validation set. Accuracy values for various <italic>λ</italic>s are provided in the <xref ref-type="sec" rid="s7-8">Appendix 7.8</xref>. Dropout and L1 regularization were chosen as a proxy for DPP-A and hence we used the same input data for fair comparison. Finally, we compared to a model that used the complete grid cell code, i.e. no DPP-A.</p>
</sec>
</sec>
<sec id="s5" sec-type="results">
<title>5 Results</title>
<sec id="s5-1">
<title>5.1 Analogy</title>
<p>We first present results on the analogy task for two types of testing data, translation and scaling using two types of inference module, LSTM and transformer. We trained 3 networks for each method and report mean accuracy along with standard error of the mean. <xref ref-type="fig" rid="fig3">Figure 3</xref> shows the results for the analogy task using an LSTM in the inference module. The left panel shows results for the translation regime, and the right panel shows results for the scaling regime. Both plots show accuracy on the training and validation sets, and on a series of 9 (increasingly distant) OOD generalization test regions. DPP-A (shown in blue) achieves nearly perfect accuracy on all of the test regions, considerably outperforming the other models.</p>
<fig id="fig3" position="float" fig-type="figure">
<label>Figure 3</label>
<caption><title>Results on analogy on each region for translation and scaling using LSTM in the inference module.</title></caption>
<graphic xlink:href="2305.18417v3_fig3.tif" mimetype="image" mime-subtype="tiff"/>
</fig>
<p>For the case of translation, using all the grid cell code with no DPP-A (shown in purple) led to the worst OOD generalization performance, overfitting on the training set. Locked dropout (denoted by green) and L1 regularization (denoted by red) reduced overfitting and demonstrated better OOD generalization performance than no DPP-A but still performed considerably worse than DPP-A. For the case of scaling, locked dropout and L1 regularization performed slightly better than TCN, achieving marginally higher test accuracy, but DPP-A still substantially outperformed all other models, with a nearly 70% improvement in average test accuracy.</p>
<p>To test the generality of the grid cell code and DPP-A across network architectures, we also tested a transformer (<xref ref-type="bibr" rid="c68">Vaswani et al., 2017</xref>) in place of the LSTM in the inference module. Previous work has suggested that transformers are particularly useful for extracting structure in sequential data and have been used for OOD generalization (<xref ref-type="bibr" rid="c59">Saxton et al., 2019</xref>). <xref ref-type="fig" rid="fig4">Figure 4</xref> shows the results for the analogy task using a transformer in the inference module. With no explicit attention (no DPP-A) over the grid cell code (shown in orange), the transformer did poorly on the analogies on the test regions. This suggests that simply using a more sophisticated architecture with standard forms of attention is not sufficient to enable OOD generalization based on the grid cell code. With DPP-A (shown in blue), the OOD generalization performance of the transformer is nearly perfect for both translation and scaling. These results also demonstrate that grid cell code coupled with DPP-A can be exploited for OOD generalization effectively by different architectures.</p>
<fig id="fig4" position="float" fig-type="figure">
<label>Figure 4</label>
<caption><title>Results on analogy on each region for translation and scaling using the transformer in the inference module.</title></caption>
<graphic xlink:href="2305.18417v3_fig4.tif" mimetype="image" mime-subtype="tiff"/>
</fig>
</sec>
<sec id="s5-2">
<title>5.2 Arithmetic</title>
<p>We next present results on the arithmetic task for two types of operations, addition and multiplication using two types of inference module, LSTM and transformer. We trained 3 networks for each method and report mean accuracy along with standard error of the mean.</p>
<p><xref ref-type="fig" rid="fig5">Figure 5</xref> shows the results for arithmetic problems using an LSTM in the inference module. The left panel shows results for addition problems, and the right panel shows results for multiplication problems. DPP-A achieves higher accuracy for addition than multiplication on the test regions. However, in both cases DPP-A significantly outperforms the other models, achieving nearly perfect OOD generalization for addition, and 65% accuracy for multiplication, compared with under 20% accuracy for all the other models. We found that grid cell embeddings obtained after the first step in <xref ref-type="table" rid="alg1">Algorithm 1</xref> aren’t able to fully preserve the relational structure for multiplication problems on the test regions (more details in <xref ref-type="sec" rid="s7-3">Appendix 7.3</xref>), but still it affords superior capacity for OOD generalization than any of the other models. Thus, while it does not match the generalizability of a genuine algorithmic (i.e., symbolic) arithmetic function, it may be sufficient for some tasks (e.g., approximate multiplication ability in young children (<xref ref-type="bibr" rid="c57">Qu et al., 2021</xref>)).</p>
<fig id="fig5" position="float" fig-type="figure">
<label>Figure 5</label>
<caption><title>Results on arithmetic on each region using LSTM in the inference module.</title></caption>
<graphic xlink:href="2305.18417v3_fig5.tif" mimetype="image" mime-subtype="tiff"/>
</fig>
<p><xref ref-type="fig" rid="fig6">Figure 6</xref> shows the results for arithmetic problems using a transformer in the inference module. With no DPP-A over the grid cell code the transformer did poorly on addition and multiplication on the test regions, achieving around 20-30% accuracy. With DPP-A, the OOD generalization performance of the transformer shows a pattern similar to that for LSTM: it is nearly perfect for addition and, though not as good on multiplication, nevertheless shows approximately 40% better performance than the transformer multiplication.</p>
<fig id="fig6" position="float" fig-type="figure">
<label>Figure 6</label>
<caption><title>Results on arithmetic on each region using the transformer in the inference module.</title></caption>
<graphic xlink:href="2305.18417v3_fig6.tif" mimetype="image" mime-subtype="tiff"/>
</fig>
</sec>
<sec id="s5-3">
<title>5.3 Ablation study</title>
<p>To determine the individual importance of the grid cell code and the DPP-A attention objective, we carried out several ablation studies. First, to evaluate the importance of grid cell code, we analyzed the effect of DPP-A with other embeddings, using either one-hot or smoothed one-hot embeddings (similar to place cell coding) with standard deviations of 1, 10, and 100, each passed through a learned feedforward encoder, which consisted of two fully connected layers with 1024 units per layer, and ReLU nonlinearities. The final embedding was generated with a fully connected layer with 1024 units and sigmoid nonlinearity. Since these embeddings don’t have a frequency component, the training procedure with DPP-A consisted of only one step: minimizing the loss function <inline-formula id="ie29"><alternatives><mml:math display="inline" id="i29"><mml:mrow><mml:mi>𝓛</mml:mi><mml:mo>=</mml:mo><mml:msub><mml:mi>𝓛</mml:mi><mml:mrow><mml:mi>t</mml:mi><mml:mi>a</mml:mi><mml:mi>s</mml:mi><mml:mi>k</mml:mi></mml:mrow></mml:msub><mml:mo>−</mml:mo><mml:mi>λ</mml:mi><mml:mo>*</mml:mo><mml:mover accent="true"><mml:mi>F</mml:mi><mml:mo>^</mml:mo></mml:mover><mml:mo stretchy="false">(</mml:mo><mml:mstyle mathvariant="bold-italic" mathsize="normal"><mml:mi>g</mml:mi></mml:mstyle><mml:mo>,</mml:mo><mml:mstyle mathvariant="bold-italic" mathsize="normal"><mml:mi>V</mml:mi></mml:mstyle><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="2305.18417v3_ieq29.tif" mimetype="image" mime-subtype="tiff"/></alternatives></inline-formula>. We tried different values of <italic>λ</italic> (0.001, 0.01, 0.1, 1, 10, 100, 1000, 10000). For each type of embedding (one-hots and smoothed one-hots with each value of standard deviation), we trained 3 networks and report for the model that achieved best performance on the validation set. Note that, given the much higher dimensionality and therefore memory demands of embeddings based on one-hots and smoothed one-hots, we had to limit the evaluation to a subset of the total space, resulting in evaluation on only two test regions (i.e., <italic>K</italic> ∈ [1, 3]).</p>
<p><xref ref-type="fig" rid="fig7">Figure 7</xref> shows the results for the analogy task (results for the arithmetic task are in <xref ref-type="sec" rid="s7-6">Appendix 7.6</xref>, <xref ref-type="fig" rid="fig11">Figure 11</xref>) using an LSTM in the inference module. The average accuracy on the test regions for translation and scaling using smoothed one-hots passed through an encoder (shown in green) is nearly 30% better than simple one-hot embeddings passed through an encoder (shown in orange), but both still achieve significantly lower test accuracy than grid cell code which support perfect OOD generalization.</p>
<fig id="fig7" position="float" fig-type="figure">
<label>Figure 7</label>
<caption><title>Results on analogy on each region using DPP-A, an LSTM in the inference module, and different embeddings (grid cell code, one-hots, and smoothed one-hots passed through a learned encoder) for translation (left) and scaling (right).</title><p>Each point is mean accuracy over three networks, and bars show standard error of the mean.</p></caption>
<graphic xlink:href="2305.18417v3_fig7.tif" mimetype="image" mime-subtype="tiff"/>
</fig>
<p>With respect to the importance of the DPP-A, we note that the simulations reported earlier show that replacing the DPP-A mechanism with either other forms of regularization (dropout and L1 regularization; see <xref ref-type="sec" rid="s4-2">Section 4.2</xref>) or a transformer (<xref ref-type="fig" rid="fig4">Figure 4</xref> in <xref ref-type="sec" rid="s5-1">Section 5.1</xref> for analogy and <xref ref-type="fig" rid="fig6">Figure 6</xref> in <xref ref-type="sec" rid="s5-2">Section 5.2</xref> for arithmetic tasks) failed to achieve the same level of OOD generalization as the network that used DPP-A. The results using a transformer are particularly instructive, as that incorporates a powerful mechanism for learned attention, but, even when provided with grid cell embeddings, failed to produce results comparable to DPP-A, suggesting that the latter provides a simple but powerful form of attention objective, at least when used in conjunction with grid cell embeddings.</p>
<p>Finally, for completeness, we also carried out a set of simulations that examined the performance of networks with various embeddings (grid cell code, and one-hots or smoothed one-hots with or without a learned feedforward encoder), but no attention or regularization (i.e., neither DPP-A, transformer, nor TCN, L1 Regularization, or Dropout). <xref ref-type="fig" rid="fig8">Figure 8</xref> shows the results for the different embeddings on the analogy task (results for the arithmetic task are in <xref ref-type="sec" rid="s7-6">Appendix 7.6</xref>, <xref ref-type="fig" rid="fig12">Figure 12</xref>). For translation (left), the average accuracy over the test regions using grid cell code (shown in blue) is nearly 25% more compared to other embeddings, which all yield performance near chance (<italic>∼</italic> 15%). For scaling (right), although other embeddings achieve higher performance than chance (except smoothed one-hots), they still achieve lower test accuracy than grid cell code. More ablation studies can be found in <xref ref-type="sec" rid="s7-4">Appendix 7.4</xref>, <xref ref-type="sec" rid="s7-9">7.9</xref>, and <xref ref-type="fig" rid="fig13">Figure 13</xref>.</p>
<fig id="fig8" position="float" fig-type="figure">
<label>Figure 8</label>
<caption><title>Results on analogy on each region using different embeddings (grid cell code, and one-hots or smoothed one-hots with and without an encoder) and an LSTM in the inference module, but without DPP-A, TCN, L1 Regularization, or Dropout for translation (left) and scaling (right).</title></caption>
<graphic xlink:href="2305.18417v3_fig8.tif" mimetype="image" mime-subtype="tiff"/>
</fig>
</sec>
</sec>
<sec id="s6" sec-type="discussion">
<title>6 Discussion and future directions</title>
<p>We have identified how particular properties of processing observed in the brain can be used to achieve strong OOD generalization, and introduced a two-component algorithm to promote OOD generalization in deep neural networks. The first component is a structured representation of the training data, modeled closely on known properties of grid cells – a population of cells that collectively represent abstract position using a periodic code. However, despite their intrinsic structure, we find that grid cell code and standard error-driven learning alone are insufficient to promote OOD generalization, and standard approaches for preventing overfitting offer only modest gains. This is addressed by the second component, using DPP-A to implement attentional regularization over the grid cell code. DPP-A allows only a relevant and diverse subset of cells to influence downstream computation in the inference module using the statistics of the training data. For proof of concept, we started with two challenging cognitive tasks (analogy and arithmetic), and showed that the combination of grid cell code and DPP-A promotes OOD generalization across both translation and scale when incorporated into common architectures (LSTM and transformer). It is worth noting that the DPP-A attentional mechanism is different from the attentional mechanism in the transformer module, and both are needed for strong OOD generalization in the case of transformers. Use of the standard self-attention mechanism in transformers over the inputs (i.e., A, B, C, and D for the analogy task) in place of DPP-A would lead to weightings of grid cell embeddings over all frequencies and phases. The objective function for the DPP-A represents an inductive bias, that selectively assigns the greatest weight to all grid cell embeddings (i.e., for all phases) of the frequency for which the determinant of the covariance matrix is greatest computed over the training space. The transformer inference module then attends over the inputs with the selected grid cell embeddings based on the DPP-A objective.</p>
<p>The current approach has some limitations and presents interesting directions for future work. First, we derive the grid cell code from known properties of neural systems, rather than obtaining the code directly from real-world data. Here, we are encouraged by the body of work providing evidence for grid cell code in the hidden layers of neural networks in a variety of task contexts and architectures (<xref ref-type="bibr" rid="c72">Wei et al., 2015</xref>; <xref ref-type="bibr" rid="c17">Cueva &amp; Wei, 2018</xref>; <xref ref-type="bibr" rid="c3">Banino et al., 2018</xref>; <xref ref-type="bibr" rid="c73">Whittington et al., 2020</xref>). This suggests reason for optimism that DPP-A may promote strong generalization in cases where grid cell code naturally emerge: for example, navigation tasks (<xref ref-type="bibr" rid="c3">Banino et al., 2018</xref>) and reasoning by transitive inference (<xref ref-type="bibr" rid="c73">Whittington et al., 2020</xref>). Integrating our approach with structured representations acquired from high-dimensional, naturalistic datasets remains a critical next step which would have significant potential for broader future practical applications. So too does application to more complex transformations beyond translation and scale, such as rotation, and complex forms of representations, and analogical reasoning tasks (<xref ref-type="bibr" rid="c36">Holyoak, 2012</xref>; <xref ref-type="bibr" rid="c71">Webb et al., 2023</xref>; <xref ref-type="bibr" rid="c46">Lu et al., 2022</xref>). Second, it is not clear how DPP-A might be implemented in a neural network. In that regard, <xref ref-type="bibr" rid="c9">Bozkurt et al. (2022)</xref> recently proposed a biologically plausible neural network algorithm using a weighted similarity matrix approach to implement a determinant maximization criterion, which is the core idea underlying the objective function we use for DPP-A (<xref ref-type="disp-formula" rid="ed6">Equation 6</xref>), suggesting that the DPP-A mechanism we describe may also be biologically plausible. This could be tested experimentally by exposing individuals (e.g., rodents or humans) to a task that requires consistent exposure to a subregion, and evaluating the distribution of activity over the grid cells. Our model predicts that high frequency grid cells should increase their firing rate more than low frequency cells, since the high frequency grid cells maximize the determinant of the covariance matrix of the grid cell embeddings. It is also worth noting that <xref ref-type="bibr" rid="c24">Frankland &amp; Cohen (2020</xref>) have suggested that the use of DPPs may also help explain a mutual exclusivity bias observed in human word learning and reasoning. While this is not direct evidence of biological plausibility, it is consistent with the idea that the human brain selects representations for processing that maximize the volume of the representational space, which can be achieved by maximizing the DPP-A objective function defined in <xref ref-type="disp-formula" rid="ed6">Equation 6</xref>. Third, we compared grid cell code to only one-hots and place cell code. Future work could compare to a broader range of potential biological coding schemes for the overall space, e.g. boundary vector cell coding (<xref ref-type="bibr" rid="c6">Barry et al., 2006</xref>), band cell coding, or egocentric boundary cell coding (<xref ref-type="bibr" rid="c34">Hinman et al., 2019</xref>).</p>
<p>Finally, we focus on analogies in linear spaces which limits the generality of our approach in nonlinear spaces. In that regard, there are at least two potential directions that could be pursued. One is to directly encode nonlinear structures (such as trees, rings, etc.) with grid cells, to which DPP-A could be applied as described in our model. The TEM model (<xref ref-type="bibr" rid="c73">Whittington et al., 2020</xref>) suggests that grid cells in the medial entorhinal may form a basis set that captures structural knowledge for such nonlinear spaces, such as social hierarchies and transitive inference when formalized as a connected graph. Another would be to use eigen-decomposition of the successor representation (<xref ref-type="bibr" rid="c18">Dayan, 1993</xref>), a learnable predictive representation of possible future states that has been shown by <xref ref-type="bibr" rid="c65">Stachenfeld et al. (2017)</xref> to provide an abstract structured representation of a space that is analogous to the grid cell code. This general-purpose mechanism could be applied to represent analogies in nonlinear spaces (<xref ref-type="bibr" rid="c25">Frankland et al., 2019</xref>), for which there may not be a clear factorization in terms of grid cells (i.e., distinct frequencies and multiple phases within each frequency). Since the DPP-A mechanism, as we have described it, requires representations to be factored in this way it would need to be modified for such purpose. Either of these approaches, if successful, would allow our model to be extended to domains containing nonlinear forms of structure. To the extent that different coding schemes (i.e., basis sets) are needed for different forms of structure, the question of how these are identified and engaged for use in a given setting is clearly an important one, that is not addressed by the current work. We imagine that this is likely subserved by monitoring and selection mechanisms proposed to underlie the capacity for selective attention and cognitive control (<xref ref-type="bibr" rid="c60">Shenhav et al., 2013</xref>), though the specific computational mechanisms that underlie this function remain an important direction for future research.</p>
</sec>
</body>
<back>
<ref-list>
<title>References</title>
<ref id="c1"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><given-names>Dmitriy</given-names> <surname>Aronov</surname></string-name>, <string-name><given-names>Rhino</given-names> <surname>Nevers</surname></string-name>, and <string-name><given-names>David W</given-names> <surname>Tank</surname></string-name></person-group>. <article-title>Mapping of a non-spatial dimension by the hippocampal–entorhinal circuit</article-title>. <source>Nature</source>, <volume>543</volume>(<issue>7647</issue>):<fpage>719</fpage>–<lpage>722</lpage>, <year>2017</year>.</mixed-citation></ref>
<ref id="c2"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><given-names>Jimmy Lei</given-names> <surname>Ba</surname></string-name>, <string-name><given-names>Jamie Ryan</given-names> <surname>Kiros</surname></string-name>, and <string-name><given-names>Geoffrey E</given-names> <surname>Hinton</surname></string-name></person-group>. <article-title>Layer normalization</article-title>. <source>arXiv preprint arXiv:1607.06450</source>, <year>2016</year>.</mixed-citation></ref>
<ref id="c3"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><given-names>Andrea</given-names> <surname>Banino</surname></string-name>, <string-name><given-names>Caswell</given-names> <surname>Barry</surname></string-name>, <string-name><given-names>Benigno</given-names> <surname>Uria</surname></string-name>, <string-name><given-names>Charles</given-names> <surname>Blundell</surname></string-name>, <string-name><given-names>Timothy</given-names> <surname>Lillicrap</surname></string-name>, <string-name><given-names>Piotr</given-names> <surname>Mirowski</surname></string-name>, <string-name><given-names>Alexander</given-names> <surname>Pritzel</surname></string-name>, <string-name><given-names>Martin J</given-names> <surname>Chadwick</surname></string-name>, <string-name><given-names>Thomas</given-names> <surname>Degris</surname></string-name>, <string-name><given-names>Joseph</given-names> <surname>Modayil</surname></string-name>, <etal>et al.</etal></person-group> <article-title>Vector-based navigation using grid-like representations in artificial agents</article-title>. <source>Nature</source>, <volume>557</volume>(<issue>7705</issue>):<fpage>429</fpage>–<lpage>433</lpage>, <year>2018</year>.</mixed-citation></ref>
<ref id="c4"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><given-names>Xiaojun</given-names> <surname>Bao</surname></string-name>, <string-name><given-names>Eva</given-names> <surname>Gjorgieva</surname></string-name>, <string-name><given-names>Laura K</given-names> <surname>Shanahan</surname></string-name>, <string-name><given-names>James D</given-names> <surname>Howard</surname></string-name>, <string-name><given-names>Thorsten</given-names> <surname>Kahnt</surname></string-name>, and <string-name><given-names>Jay A</given-names> <surname>Gottfried</surname></string-name></person-group>. <article-title>Grid-like neural representations support olfactory navigation of a two-dimensional odor space</article-title>. <source>Neuron</source>, <volume>102</volume>(<issue>5</issue>):<fpage>1066</fpage>–<lpage>1075</lpage>, <year>2019</year>.</mixed-citation></ref>
<ref id="c5"><mixed-citation publication-type="book"><person-group person-group-type="author"><string-name><given-names>David</given-names> <surname>Barrett</surname></string-name>, <string-name><given-names>Felix</given-names> <surname>Hill</surname></string-name>, <string-name><given-names>Adam</given-names> <surname>Santoro</surname></string-name>, <string-name><given-names>Ari</given-names> <surname>Morcos</surname></string-name>, and <string-name><given-names>Timothy</given-names> <surname>Lillicrap</surname></string-name></person-group>. <chapter-title>Measuring abstract reasoning in neural networks</chapter-title>. In <source>International Conference on Machine Learning</source>, pp. <fpage>511</fpage>–<lpage>520</lpage>. <publisher-name>PMLR</publisher-name>, <year>2018</year>.</mixed-citation></ref>
<ref id="c6"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><given-names>Caswell</given-names> <surname>Barry</surname></string-name>, <string-name><given-names>Colin</given-names> <surname>Lever</surname></string-name>, <string-name><given-names>Robin</given-names> <surname>Hayman</surname></string-name>, <string-name><given-names>Tom</given-names> <surname>Hartley</surname></string-name>, <string-name><given-names>Stephen</given-names> <surname>Burton</surname></string-name>, <string-name><given-names>John</given-names> <surname>O’Keefe</surname></string-name>, <string-name><given-names>Kate</given-names> <surname>Jeffery</surname></string-name>, and <string-name><given-names>N</given-names> <surname>Burgess</surname></string-name></person-group>. <article-title>The boundary vector cell model of place cell firing and spatial memory</article-title>. <source>Reviews in the Neurosciences</source>, <volume>17</volume>(<issue>1-2</issue>):<fpage>71</fpage>–<lpage>98</lpage>, <year>2006</year>.</mixed-citation></ref>
<ref id="c7"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><given-names>Caswell</given-names> <surname>Barry</surname></string-name>, <string-name><given-names>Robin</given-names> <surname>Hayman</surname></string-name>, <string-name><given-names>Neil</given-names> <surname>Burgess</surname></string-name>, and <string-name><given-names>Kathryn J</given-names> <surname>Jeffery</surname></string-name></person-group>. <article-title>Experience-dependent rescaling of entorhinal grids</article-title>. <source>Nature Neuroscience</source>, <volume>10</volume>(<issue>6</issue>):<fpage>682</fpage>–<lpage>684</lpage>, <year>2007</year>.</mixed-citation></ref>
<ref id="c8"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><given-names>Andrej</given-names> <surname>Bicanski</surname></string-name> and <string-name><given-names>Neil</given-names> <surname>Burgess</surname></string-name></person-group>. <article-title>A computational model of visual recognition memory via grid cells</article-title>. <source>Current Biology</source>, <volume>29</volume>(<issue>6</issue>):<fpage>979</fpage>–<lpage>990</lpage>, <year>2019</year>.</mixed-citation></ref>
<ref id="c9"><mixed-citation publication-type="book"><person-group person-group-type="author"><string-name><given-names>Bariscan</given-names> <surname>Bozkurt</surname></string-name>, <string-name><given-names>Cengiz</given-names> <surname>Pehlevan</surname></string-name>, and <string-name><given-names>Alper</given-names> <surname>Erdogan</surname></string-name></person-group>. <chapter-title>Biologically-plausible determinant maximization neural networks for blind separation of correlated sources</chapter-title>. <source>Advances in Neural Information Processing Systems</source>, <publisher-loc>35</publisher-loc>:<fpage>13704</fpage>–<lpage>13717</lpage>, <year>2022</year>.</mixed-citation></ref>
<ref id="c10"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><given-names>Mark P</given-names> <surname>Brandon</surname></string-name>, <string-name><given-names>Andrew R</given-names> <surname>Bogaard</surname></string-name>, <string-name><given-names>Christopher P</given-names> <surname>Libby</surname></string-name>, <string-name><given-names>Michael A</given-names> <surname>Connerney</surname></string-name>, <string-name><given-names>Kishan</given-names> <surname>Gupta</surname></string-name>, and <string-name><given-names>Michael E</given-names> <surname>Hasselmo</surname></string-name></person-group>. <article-title>Reduction of theta rhythm dissociates grid cell spatial periodicity from directional tuning</article-title>. <source>Science</source>, <volume>332</volume>(<issue>6029</issue>):<fpage>595</fpage>–<lpage>599</lpage>, <year>2011</year>.</mixed-citation></ref>
<ref id="c11"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><given-names>Todd S</given-names> <surname>Braver</surname></string-name> and <string-name><given-names>Jonathan D</given-names> <surname>Cohen</surname></string-name></person-group>. <article-title>On the control of control: The role of dopamine in regulating prefrontal function and working memory</article-title>. <source>Attention and Performance</source>, <volume>18</volume>:<fpage>712</fpage>–<lpage>737</lpage>, <year>2000</year>.</mixed-citation></ref>
<ref id="c12"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><given-names>Daniel</given-names> <surname>Bush</surname></string-name>, <string-name><given-names>Caswell</given-names> <surname>Barry</surname></string-name>, <string-name><given-names>Daniel</given-names> <surname>Manson</surname></string-name>, and <string-name><given-names>Neil</given-names> <surname>Burgess</surname></string-name></person-group>. <article-title>Using grid cells for navigation</article-title>. <source>Neuron</source>, <volume>87</volume> (<issue>3</issue>):<fpage>507</fpage>–<lpage>520</lpage>, <year>2015</year>.</mixed-citation></ref>
<ref id="c13"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><given-names>Sarthak</given-names> <surname>Chandra</surname></string-name>, <string-name><given-names>Sugandha</given-names> <surname>Sharma</surname></string-name>, <string-name><given-names>Rishidev</given-names> <surname>Chaudhuri</surname></string-name>, and <string-name><given-names>Ila</given-names> <surname>Fiete</surname></string-name></person-group>. <article-title>High-capacity flexible hippocampal associative and episodic memory enabled by prestructured “spatial” representations</article-title>. <source>BioRxiv</source>, pp. <fpage>2023</fpage>–<lpage>11</lpage>, <year>2023</year>.</mixed-citation></ref>
<ref id="c14"><mixed-citation publication-type="confproc"><person-group person-group-type="author"><string-name><given-names>Laming</given-names> <surname>Chen</surname></string-name>, <string-name><given-names>Guoxin</given-names> <surname>Zhang</surname></string-name>, and <string-name><given-names>Hanning</given-names> <surname>Zhou</surname></string-name></person-group>. <source>Fast greedy map inference for determinantal point process to improve recommendation diversity</source>. In <conf-name>Proceedings of the 32nd International Conference on Neural Information Processing Systems</conf-name>, pp. <fpage>5627</fpage>–<lpage>5638</lpage>, <year>2018</year>.</mixed-citation></ref>
<ref id="c15"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><given-names>Kalina</given-names> <surname>Christoff</surname></string-name>, <string-name><given-names>Vivek</given-names> <surname>Prabhakaran</surname></string-name>, <string-name><given-names>Jennifer</given-names> <surname>Dorfman</surname></string-name>, <string-name><given-names>Zuo</given-names> <surname>Zhao</surname></string-name>, <string-name><given-names>James K</given-names> <surname>Kroger</surname></string-name>, <string-name><given-names>Keith J</given-names> <surname>Holyoak</surname></string-name>, and <string-name><given-names>John DE</given-names> <surname>Gabrieli</surname></string-name></person-group>. <article-title>Rostrolateral prefrontal cortex involvement in relational integration during reasoning</article-title>. <source>Neuroimage</source>, <volume>14</volume>(<issue>5</issue>):<fpage>1136</fpage>–<lpage>1149</lpage>, <year>2001</year>.</mixed-citation></ref>
<ref id="c16"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><given-names>Alexandra O</given-names> <surname>Constantinescu</surname></string-name>, <string-name><given-names>Jill X</given-names> <surname>O’Reilly</surname></string-name>, and <string-name><given-names>Timothy EJ</given-names> <surname>Behrens</surname></string-name></person-group>. <article-title>Organizing conceptual knowledge in humans with a gridlike code</article-title>. <source>Science</source>, <volume>352</volume>(<issue>6292</issue>):<fpage>1464</fpage>–<lpage>1468</lpage>, <year>2016</year>.</mixed-citation></ref>
<ref id="c17"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><given-names>Christopher J</given-names> <surname>Cueva</surname></string-name> and <string-name><given-names>Xue-Xin</given-names> <surname>Wei</surname></string-name></person-group>. <article-title>Emergence of grid-like representations by training recurrent neural networks to perform spatial localization</article-title>. <source>arXiv preprint arXiv:1803.07770</source>, <year>2018</year>.</mixed-citation></ref>
<ref id="c18"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><given-names>Peter</given-names> <surname>Dayan</surname></string-name></person-group>. <article-title>Improving generalization for temporal difference learning: The successor representation</article-title>. <source>Neural Computation</source>, <volume>5</volume>(<issue>4</issue>):<fpage>613</fpage>–<lpage>624</lpage>, <year>1993</year>.</mixed-citation></ref>
<ref id="c19"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><given-names>Jacob</given-names> <surname>Devlin</surname></string-name>, <string-name><given-names>Ming-Wei</given-names> <surname>Chang</surname></string-name>, <string-name><given-names>Kenton</given-names> <surname>Lee</surname></string-name>, and <string-name><given-names>Kristina</given-names> <surname>Toutanova</surname></string-name></person-group>. <article-title>Bert: Pre-training of deep bidirectional transformers for language understanding</article-title>. <source>arXiv preprint arXiv:1810.04805</source>, <year>2018</year>.</mixed-citation></ref>
<ref id="c20"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><given-names>Christian F</given-names> <surname>Doeller</surname></string-name>, <string-name><given-names>Caswell</given-names> <surname>Barry</surname></string-name>, and <string-name><given-names>Neil</given-names> <surname>Burgess</surname></string-name></person-group>. <article-title>Evidence for grid cells in a human memory network</article-title>. <source>Nature</source>, <volume>463</volume>(<issue>7281</issue>):<fpage>657</fpage>–<lpage>661</lpage>, <year>2010</year>.</mixed-citation></ref>
<ref id="c21"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><given-names>Yedidyah</given-names> <surname>Dordek</surname></string-name>, <string-name><given-names>Daniel</given-names> <surname>Soudry</surname></string-name>, <string-name><given-names>Ron</given-names> <surname>Meir</surname></string-name>, and <string-name><given-names>Dori</given-names> <surname>Derdikman</surname></string-name></person-group>. <article-title>Extracting grid cell characteristics from place cell inputs using non-negative principal component analysis</article-title>. <source>Elife</source>, <volume>5</volume>:<fpage>e10094</fpage>, <year>2016</year>.</mixed-citation></ref>
<ref id="c22"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><given-names>Uğur M</given-names> <surname>Erdem</surname></string-name> and <string-name><given-names>Michael E</given-names> <surname>Hasselmo</surname></string-name></person-group>. <article-title>A biologically inspired hierarchical goal directed navigation model</article-title>. <source>Journal of Physiology-Paris</source>, <volume>108</volume>(<issue>1</issue>):<fpage>28</fpage>–<lpage>37</lpage>, <year>2014</year>.</mixed-citation></ref>
<ref id="c23"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><given-names>Michael J</given-names> <surname>Frank</surname></string-name>, <string-name><given-names>Bryan</given-names> <surname>Loughry</surname></string-name>, and <string-name><given-names>Randall C</given-names> <surname>O’Reilly</surname></string-name></person-group>. <article-title>Interactions between frontal cortex and basal ganglia in working memory: a computational model</article-title>. <source>Cognitive, Affective, &amp; Behavioral Neuroscience</source>, <volume>1</volume>: <fpage>137</fpage>–<lpage>160</lpage>, <year>2001</year>.</mixed-citation></ref>
<ref id="c24"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><given-names>Steven</given-names> <surname>Frankland</surname></string-name> and <string-name><given-names>Jonathan</given-names> <surname>Cohen</surname></string-name></person-group>. <article-title>Determinantal point processes for memory and structured inference</article-title>. In <source>CogSci</source>, <year>2020</year>.</mixed-citation></ref>
<ref id="c25"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><given-names>Steven</given-names> <surname>Frankland</surname></string-name>, <string-name><given-names>Taylor W</given-names> <surname>Webb</surname></string-name>, <string-name><given-names>Alexander A</given-names> <surname>Petrov</surname></string-name>, <string-name><given-names>Randall C</given-names> <surname>O’Reilly</surname></string-name>, and <string-name><given-names>Jonathan</given-names> <surname>Cohen</surname></string-name></person-group>. <article-title>Extracting and utilizing abstract, structured representations for analogy</article-title>. In <source>CogSci</source>, pp. <fpage>1766</fpage>–<lpage>1772</lpage>, <year>2019</year>.</mixed-citation></ref>
<ref id="c26"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><given-names>Yarin</given-names> <surname>Gal</surname></string-name> and <string-name><given-names>Zoubin</given-names> <surname>Ghahramani</surname></string-name></person-group>. <article-title>A theoretically grounded application of dropout in recurrent neural networks</article-title>. <source>Advances in Neural Information Processing Systems</source>, <volume>29</volume>:<fpage>1019</fpage>–<lpage>1027</lpage>, <year>2016</year>.</mixed-citation></ref>
<ref id="c27"><mixed-citation publication-type="book"><person-group person-group-type="author"><string-name><given-names>Jennifer</given-names> <surname>Gillenwater</surname></string-name>, <string-name><given-names>Alex</given-names> <surname>Kulesza</surname></string-name>, and <string-name><given-names>Ben</given-names> <surname>Taskar</surname></string-name></person-group>. <chapter-title>Near-optimal map inference for determinantal point processes</chapter-title>. In <source>Advances in Neural Information Processing Systems</source>, pp. <fpage>2744</fpage>–<lpage>2752</lpage>. <publisher-name>Citeseer</publisher-name>, <year>2012</year>.</mixed-citation></ref>
<ref id="c28"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><given-names>Lisa M</given-names> <surname>Giocomo</surname></string-name>, <string-name><given-names>Syed A</given-names> <surname>Hussaini</surname></string-name>, <string-name><given-names>Fan</given-names> <surname>Zheng</surname></string-name>, <string-name><given-names>Eric R</given-names> <surname>Kandel</surname></string-name>, <string-name><given-names>May-Britt</given-names> <surname>Moser</surname></string-name>, and <string-name><given-names>Edvard I</given-names> <surname>Moser</surname></string-name></person-group>. <article-title>Grid cells use hcn1 channels for spatial scaling</article-title>. <source>Cell</source>, <volume>147</volume>(<issue>5</issue>):<fpage>1159</fpage>–<lpage>1170</lpage>, <year>2011</year>.</mixed-citation></ref>
<ref id="c29"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><given-names>Boqing</given-names> <surname>Gong</surname></string-name>, <string-name><given-names>Wei-Lun</given-names> <surname>Chao</surname></string-name>, <string-name><given-names>Kristen</given-names> <surname>Grauman</surname></string-name>, and <string-name><given-names>Fei</given-names> <surname>Sha</surname></string-name></person-group>. <article-title>Diverse sequential subset selection for supervised video summarization</article-title>. <source>Advances in Neural Information Processing Systems</source>, <volume>27</volume>:<fpage>2069</fpage>–<lpage>2077</lpage>, <year>2014</year>.</mixed-citation></ref>
<ref id="c30"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><given-names>Torkel</given-names> <surname>Hafting</surname></string-name>, <string-name><given-names>Marianne</given-names> <surname>Fyhn</surname></string-name>, <string-name><given-names>Sturla</given-names> <surname>Molden</surname></string-name>, <string-name><given-names>May-Britt</given-names> <surname>Moser</surname></string-name>, and <string-name><given-names>Edvard I</given-names> <surname>Moser</surname></string-name></person-group>. <article-title>Microstructure of a spatial map in the entorhinal cortex</article-title>. <source>Nature</source>, <volume>436</volume>(<issue>7052</issue>):<fpage>801</fpage>–<lpage>806</lpage>, <year>2005</year>.</mixed-citation></ref>
<ref id="c31"><mixed-citation publication-type="confproc"><person-group person-group-type="author"><string-name><given-names>Kaiming</given-names> <surname>He</surname></string-name>, <string-name><given-names>Xiangyu</given-names> <surname>Zhang</surname></string-name>, <string-name><given-names>Shaoqing</given-names> <surname>Ren</surname></string-name>, and <string-name><given-names>Jian</given-names> <surname>Sun</surname></string-name></person-group>. <source>Deep residual learning for image recognition</source>. In <conf-name>Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition</conf-name>, pp. <fpage>770</fpage>–<lpage>778</lpage>, <year>2016</year>.</mixed-citation></ref>
<ref id="c32"><mixed-citation publication-type="confproc"><person-group person-group-type="author"><string-name><given-names>Kaiming</given-names> <surname>He</surname></string-name>, <string-name><given-names>Georgia</given-names> <surname>Gkioxari</surname></string-name>, <string-name><given-names>Piotr</given-names> <surname>Dollár</surname></string-name>, and <string-name><given-names>Ross</given-names> <surname>Girshick</surname></string-name></person-group>. <source>Mask r-cnn</source>. In <conf-name>Proceedings of the IEEE International Conference on Computer Vision</conf-name>, pp. <fpage>2961</fpage>–<lpage>2969</lpage>, <year>2017</year>.</mixed-citation></ref>
<ref id="c33"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><given-names>Felix</given-names> <surname>Hill</surname></string-name>, <string-name><given-names>Adam</given-names> <surname>Santoro</surname></string-name>, <string-name><given-names>David GT</given-names> <surname>Barrett</surname></string-name>, <string-name><given-names>Ari S</given-names> <surname>Morcos</surname></string-name>, and <string-name><given-names>Timothy</given-names> <surname>Lillicrap</surname></string-name></person-group>. <article-title>Learning to make analogies by contrasting abstract relational structure</article-title>. <source>arXiv preprint arXiv:1902.00120</source>, <year>2019</year>.</mixed-citation></ref>
<ref id="c34"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><given-names>James R</given-names> <surname>Hinman</surname></string-name>, <string-name><given-names>G William</given-names> <surname>Chapman</surname></string-name>, and <string-name><given-names>Michael E</given-names> <surname>Hasselmo</surname></string-name></person-group>. <article-title>Neuronal representation of environmental boundaries in egocentric coordinates</article-title>. <source>Nature Communications</source>, <volume>10</volume>(<issue>1</issue>):<fpage>2772</fpage>, <year>2019</year>.</mixed-citation></ref>
<ref id="c35"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><given-names>Sepp</given-names> <surname>Hochreiter</surname></string-name> and <string-name><given-names>Jürgen</given-names> <surname>Schmidhuber</surname></string-name></person-group>. <article-title>Lstm can solve hard long time lag problems</article-title>. <source>Advances in Neural Information Processing Systems</source>, pp. <fpage>473</fpage>–<lpage>479</lpage>, <year>1997</year>.</mixed-citation></ref>
<ref id="c36"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><given-names>Keith J</given-names> <surname>Holyoak</surname></string-name></person-group>. <article-title>Analogy and relational reasoning</article-title>. <source>The Oxford Handbook of Thinking and Reasoning</source>, pp. <fpage>234</fpage>–<lpage>259</lpage>, <year>2012</year>.</mixed-citation></ref>
<ref id="c37"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><given-names>Marc W</given-names> <surname>Howard</surname></string-name>, <string-name><given-names>Mrigankka S</given-names> <surname>Fotedar</surname></string-name>, <string-name><given-names>Aditya V</given-names> <surname>Datey</surname></string-name>, and <string-name><given-names>Michael E</given-names> <surname>Hasselmo</surname></string-name></person-group>. <article-title>The temporal context model in spatial navigation and relational learning: toward a common explanation of medial temporal lobe function across domains</article-title>. <source>Psychological Review</source>, <volume>112</volume>(<issue>1</issue>):<fpage>75</fpage>, <year>2005</year>.</mixed-citation></ref>
<ref id="c38"><mixed-citation publication-type="book"><person-group person-group-type="author"><string-name><given-names>Sergey</given-names> <surname>Ioffe</surname></string-name> and <string-name><given-names>Christian</given-names> <surname>Szegedy</surname></string-name></person-group>. <chapter-title>Batch normalization: Accelerating deep network training by reducing internal covariate shift</chapter-title>. In <source>International Conference on Machine Learning</source>, pp. <fpage>448</fpage>–<lpage>456</lpage>. <publisher-name>PMLR</publisher-name>, <year>2015</year>.</mixed-citation></ref>
<ref id="c39"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><given-names>Amirhossein</given-names> <surname>Kazemnejad</surname></string-name></person-group>. <article-title>Transformer architecture: The positional encoding</article-title>. <source>Kazemnejad’s blog</source>, <year>2019</year>.</mixed-citation></ref>
<ref id="c40"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><given-names>Diederik P</given-names> <surname>Kingma</surname></string-name> and <string-name><given-names>Jimmy</given-names> <surname>Ba</surname></string-name></person-group>. <article-title>Adam: A method for stochastic optimization</article-title>. <source>arXiv preprint arXiv:1412.6980</source>, <year>2014</year>.</mixed-citation></ref>
<ref id="c41"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><given-names>Barbara J</given-names> <surname>Knowlton</surname></string-name>, <string-name><given-names>Robert G</given-names> <surname>Morrison</surname></string-name>, <string-name><given-names>John E</given-names> <surname>Hummel</surname></string-name>, and <string-name><given-names>Keith J</given-names> <surname>Holyoak</surname></string-name></person-group>. <article-title>A neurocomputational system for relational reasoning</article-title>. <source>Trends in Cognitive Sciences</source>, <volume>16</volume>(<issue>7</issue>):<fpage>373</fpage>–<lpage>381</lpage>, <year>2012</year>.</mixed-citation></ref>
<ref id="c42"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><given-names>Chun-Wa</given-names> <surname>Ko</surname></string-name>, <string-name><given-names>Jon</given-names> <surname>Lee</surname></string-name>, and <string-name><given-names>Maurice</given-names> <surname>Queyranne</surname></string-name></person-group>. <article-title>An exact algorithm for maximum entropy sampling</article-title>. <source>Operations Research</source>, <volume>43</volume>(<issue>4</issue>):<fpage>684</fpage>–<lpage>691</lpage>, <year>1995</year>.</mixed-citation></ref>
<ref id="c43"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><given-names>Anders</given-names> <surname>Krogh</surname></string-name> and <string-name><given-names>John A</given-names> <surname>Hertz</surname></string-name></person-group>. <article-title>A simple weight decay can improve generalization</article-title>. In <source>Advances in Neural Information Processing Systems</source>, pp. <fpage>950</fpage>–<lpage>957</lpage>, <year>1992</year>.</mixed-citation></ref>
<ref id="c44"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><given-names>Alex</given-names> <surname>Kulesza</surname></string-name> and <string-name><given-names>Ben</given-names> <surname>Taskar</surname></string-name></person-group>. <article-title>Determinantal point processes for machine learning</article-title>. <source>arXiv preprint arXiv:1207.6083</source>, <year>2012</year>.</mixed-citation></ref>
<ref id="c45"><mixed-citation publication-type="book"><person-group person-group-type="author"><string-name><given-names>Brenden</given-names> <surname>Lake</surname></string-name> and <string-name><given-names>Marco</given-names> <surname>Baroni</surname></string-name></person-group>. <chapter-title>Generalization without systematicity: On the compositional skills of sequence-to-sequence recurrent networks</chapter-title>. In <source>International Conference on Machine Learning</source>, pp. <fpage>2873</fpage>–<lpage>2882</lpage>. <publisher-name>PMLR</publisher-name>, <year>2018</year>.</mixed-citation></ref>
<ref id="c46"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><given-names>Hongjing</given-names> <surname>Lu</surname></string-name>, <string-name><given-names>Nicholas</given-names> <surname>Ichien</surname></string-name>, and <string-name><given-names>Keith J</given-names> <surname>Holyoak</surname></string-name></person-group>. <article-title>Probabilistic analogical mapping with semantic relation networks</article-title>. <source>Psychological Review</source>, <year>2022</year>.</mixed-citation></ref>
<ref id="c47"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><given-names>Odile</given-names> <surname>Macchi</surname></string-name></person-group>. <article-title>The coincidence approach to stochastic point processes</article-title>. <source>Advances in Applied Probability</source>, <volume>7</volume> (<issue>1</issue>):<fpage>83</fpage>–<lpage>122</lpage>, <year>1975</year>.</mixed-citation></ref>
<ref id="c48"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><given-names>Zelda</given-names> <surname>Mariet</surname></string-name> and <string-name><given-names>Suvrit</given-names> <surname>Sra</surname></string-name></person-group>. <article-title>Diversity networks: Neural network compression using determinantal point processes</article-title>. <source>arXiv preprint arXiv:1511.05077</source>, <year>2015</year>.</mixed-citation></ref>
<ref id="c49"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><given-names>Zelda</given-names> <surname>Mariet</surname></string-name>, <string-name><given-names>Yaniv</given-names> <surname>Ovadia</surname></string-name>, and <string-name><given-names>Jasper</given-names> <surname>Snoek</surname></string-name></person-group>. <article-title>Dppnet: Approximating determinantal point processes with deep networks</article-title>. <source>arXiv preprint arXiv:1901.02051</source>, <year>2019</year>.</mixed-citation></ref>
<ref id="c50"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><given-names>Alexander</given-names> <surname>Mathis</surname></string-name>, <string-name><given-names>Andreas VM</given-names> <surname>Herz</surname></string-name>, and <string-name><given-names>Martin</given-names> <surname>Stemmler</surname></string-name></person-group>. <article-title>Optimal population codes for space: grid cells outperform place cells</article-title>. <source>Neural Computation</source>, <volume>24</volume>(<issue>9</issue>):<fpage>2280</fpage>–<lpage>2317</lpage>, <year>2012</year>.</mixed-citation></ref>
<ref id="c51"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><given-names>James L</given-names> <surname>McClelland</surname></string-name>, <string-name><given-names>Bruce L</given-names> <surname>McNaughton</surname></string-name>, and <string-name><given-names>Randall C</given-names> <surname>O’Reilly</surname></string-name></person-group>. <article-title>Why there are complementary learning systems in the hippocampus and neocortex: insights from the successes and failures of connectionist models of learning and memory</article-title>. <source>Psychological Review</source>, <volume>102</volume>(<issue>3</issue>):<fpage>419</fpage>, <year>1995</year>.</mixed-citation></ref>
<ref id="c52"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><given-names>Daniel C</given-names> <surname>McNamee</surname></string-name>, <string-name><given-names>Kimberly L</given-names> <surname>Stachenfeld</surname></string-name>, <string-name><given-names>Matthew M</given-names> <surname>Botvinick</surname></string-name>, and <string-name><given-names>Samuel J</given-names> <surname>Gershman</surname></string-name></person-group>. <article-title>Compositional sequence generation in the entorhinal–hippocampal system</article-title>. <source>Entropy</source>, <volume>24</volume>(<issue>12</issue>):<fpage>1791</fpage>, <year>2022</year>.</mixed-citation></ref>
<ref id="c53"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><given-names>Tomas</given-names> <surname>Mikolov</surname></string-name>, <string-name><given-names>Kai</given-names> <surname>Chen</surname></string-name>, <string-name><given-names>Greg</given-names> <surname>Corrado</surname></string-name>, and <string-name><given-names>Jeffrey</given-names> <surname>Dean</surname></string-name></person-group>. <article-title>Efficient estimation of word representations in vector space</article-title>. <source>arXiv preprint arXiv:1301.3781</source>, <year>2013</year>.</mixed-citation></ref>
<ref id="c54"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><given-names>May-Britt</given-names> <surname>Moser</surname></string-name>, <string-name><given-names>David C</given-names> <surname>Rowland</surname></string-name>, and <string-name><given-names>Edvard I</given-names> <surname>Moser</surname></string-name></person-group>. <article-title>Place cells, grid cells, and memory</article-title>. <source>Cold Spring Harbor Perspectives in Biology</source>, <volume>7</volume>(<issue>2</issue>):<fpage>a021808</fpage>, <year>2015</year>.</mixed-citation></ref>
<ref id="c55"><mixed-citation publication-type="other"><person-group person-group-type="author"><string-name><given-names>Adam</given-names> <surname>Paszke</surname></string-name>, <string-name><given-names>Sam</given-names> <surname>Gross</surname></string-name>, <string-name><given-names>Soumith</given-names> <surname>Chintala</surname></string-name>, <string-name><given-names>Gregory</given-names> <surname>Chanan</surname></string-name>, <string-name><given-names>Edward</given-names> <surname>Yang</surname></string-name>, <string-name><given-names>Zachary</given-names> <surname>DeVito</surname></string-name>, <string-name><given-names>Zeming</given-names> <surname>Lin</surname></string-name>, <string-name><given-names>Alban</given-names> <surname>Desmaison</surname></string-name>, <string-name><given-names>Luca</given-names> <surname>Antiga</surname></string-name>, and <string-name><given-names>Adam</given-names> <surname>Lerer</surname></string-name></person-group>. <source>Automatic differentiation in pytorch</source>. <year>2017</year>.</mixed-citation></ref>
<ref id="c56"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><given-names>Laura</given-names> <surname>Perez-Beltrachini</surname></string-name> and <string-name><given-names>Mirella</given-names> <surname>Lapata</surname></string-name></person-group>. <article-title>Multi-document summarization with determinantal point process attention</article-title>. <source>Journal of Artificial Intelligence Research</source>, <volume>71</volume>:<fpage>371</fpage>–<lpage>399</lpage>, <year>2021</year>.</mixed-citation></ref>
<ref id="c57"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><given-names>Chuyan</given-names> <surname>Qu</surname></string-name>, <string-name><given-names>Emily</given-names> <surname>Szkudlarek</surname></string-name>, and <string-name><given-names>Elizabeth M</given-names> <surname>Brannon</surname></string-name></person-group>. <article-title>Approximate multiplication in young children prior to multiplication instruction</article-title>. <source>Journal of Experimental Child Psychology</source>, <volume>207</volume>:<fpage>105116</fpage>, <year>2021</year>.</mixed-citation></ref>
<ref id="c58"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><given-names>David E</given-names> <surname>Rumelhart</surname></string-name> and <string-name><given-names>Adele A</given-names> <surname>Abrahamson</surname></string-name></person-group>. <article-title>A model for analogical reasoning</article-title>. <source>Cognitive Psychology</source>, <volume>5</volume> (<issue>1</issue>):<fpage>1</fpage>–<lpage>28</lpage>, <year>1973</year>.</mixed-citation></ref>
<ref id="c59"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><given-names>David</given-names> <surname>Saxton</surname></string-name>, <string-name><given-names>Edward</given-names> <surname>Grefenstette</surname></string-name>, <string-name><given-names>Felix</given-names> <surname>Hill</surname></string-name>, and <string-name><given-names>Pushmeet</given-names> <surname>Kohli</surname></string-name></person-group>. <article-title>Analysing mathematical reasoning abilities of neural models</article-title>. <source>arXiv preprint arXiv:1904.01557</source>, <year>2019</year>.</mixed-citation></ref>
<ref id="c60"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><given-names>Amitai</given-names> <surname>Shenhav</surname></string-name>, <string-name><given-names>Matthew M</given-names> <surname>Botvinick</surname></string-name>, and <string-name><given-names>Jonathan D</given-names> <surname>Cohen</surname></string-name></person-group>. <article-title>The expected value of control: an integrative theory of anterior cingulate cortex function</article-title>. <source>Neuron</source>, <volume>79</volume>(<issue>2</issue>):<fpage>217</fpage>–<lpage>240</lpage>, <year>2013</year>.</mixed-citation></ref>
<ref id="c61"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><given-names>David</given-names> <surname>Silver</surname></string-name>, <string-name><given-names>Julian</given-names> <surname>Schrittwieser</surname></string-name>, <string-name><given-names>Karen</given-names> <surname>Simonyan</surname></string-name>, <string-name><given-names>Ioannis</given-names> <surname>Antonoglou</surname></string-name>, <string-name><given-names>Aja</given-names> <surname>Huang</surname></string-name>, <string-name><given-names>Arthur</given-names> <surname>Guez</surname></string-name>, <string-name><given-names>Thomas</given-names> <surname>Hubert</surname></string-name>, <string-name><given-names>Lucas</given-names> <surname>Baker</surname></string-name>, <string-name><given-names>Matthew</given-names> <surname>Lai</surname></string-name>, <string-name><given-names>Adrian</given-names> <surname>Bolton</surname></string-name>, <etal>et al.</etal></person-group> <article-title>Mastering the game of go without human knowledge</article-title>. <source>Nature</source>, <volume>550</volume>(<issue>7676</issue>):<fpage>354</fpage>–<lpage>359</lpage>, <year>2017</year>.</mixed-citation></ref>
<ref id="c62"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><given-names>Ben</given-names> <surname>Sorscher</surname></string-name>, <string-name><given-names>Gabriel C</given-names> <surname>Mel</surname></string-name>, <string-name><given-names>Samuel A</given-names> <surname>Ocko</surname></string-name>, <string-name><given-names>Lisa M</given-names> <surname>Giocomo</surname></string-name>, and <string-name><given-names>Surya</given-names> <surname>Ganguli</surname></string-name></person-group>. <article-title>A unified theory for the computational and mechanistic origins of grid cells</article-title>. <source>Neuron</source>, <year>2022</year>.</mixed-citation></ref>
<ref id="c63"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><given-names>Sameet</given-names> <surname>Sreenivasan</surname></string-name> and <string-name><given-names>Ila</given-names> <surname>Fiete</surname></string-name></person-group>. <article-title>Grid cells generate an analog error-correcting code for singularly precise neural computation</article-title>. <source>Nature Neuroscience</source>, <volume>14</volume>(<issue>10</issue>):<fpage>1330</fpage>–<lpage>1337</lpage>, <year>2011</year>.</mixed-citation></ref>
<ref id="c64"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><given-names>Nitish</given-names> <surname>Srivastava</surname></string-name>, <string-name><given-names>Geoffrey</given-names> <surname>Hinton</surname></string-name>, <string-name><given-names>Alex</given-names> <surname>Krizhevsky</surname></string-name>, <string-name><given-names>Ilya</given-names> <surname>Sutskever</surname></string-name>, and <string-name><given-names>Ruslan</given-names> <surname>Salakhutdinov</surname></string-name></person-group>. <article-title>Dropout: a simple way to prevent neural networks from overfitting</article-title>. <source>The Journal of Machine Learning Research</source>, <volume>15</volume> (<issue>1</issue>):<fpage>1929</fpage>–<lpage>1958</lpage>, <year>2014</year>.</mixed-citation></ref>
<ref id="c65"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><given-names>Kimberly L</given-names> <surname>Stachenfeld</surname></string-name>, <string-name><given-names>Matthew M</given-names> <surname>Botvinick</surname></string-name>, and <string-name><given-names>Samuel J</given-names> <surname>Gershman</surname></string-name></person-group>. <article-title>The hippocampus as a predictive map</article-title>. <source>Nature Neuroscience</source>, <volume>20</volume>(<issue>11</issue>):<fpage>1643</fpage>–<lpage>1653</lpage>, <year>2017</year>.</mixed-citation></ref>
<ref id="c66"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><given-names>Hanne</given-names> <surname>Stensola</surname></string-name>, <string-name><given-names>Tor</given-names> <surname>Stensola</surname></string-name>, <string-name><given-names>Trygve</given-names> <surname>Solstad</surname></string-name>, <string-name><given-names>Kristian</given-names> <surname>Frøland</surname></string-name>, <string-name><given-names>May-Britt</given-names> <surname>Moser</surname></string-name>, and <string-name><given-names>Edvard I</given-names> <surname>Moser</surname></string-name></person-group>. <article-title>The entorhinal grid map is discretized</article-title>. <source>Nature</source>, <volume>492</volume>(<issue>7427</issue>):<fpage>72</fpage>–<lpage>78</lpage>, <year>2012</year>.</mixed-citation></ref>
<ref id="c67"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><given-names>Christopher</given-names> <surname>Summerfield</surname></string-name>, <string-name><given-names>Fabrice</given-names> <surname>Luyckx</surname></string-name>, and <string-name><given-names>Hannah</given-names> <surname>Sheahan</surname></string-name></person-group>. <article-title>Structure learning and the posterior parietal cortex</article-title>. <source>Progress in Neurobiology</source>, <volume>184</volume>:<fpage>101717</fpage>, <year>2020</year>.</mixed-citation></ref>
<ref id="c68"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><given-names>Ashish</given-names> <surname>Vaswani</surname></string-name>, <string-name><given-names>Noam</given-names> <surname>Shazeer</surname></string-name>, <string-name><given-names>Niki</given-names> <surname>Parmar</surname></string-name>, <string-name><given-names>Jakob</given-names> <surname>Uszkoreit</surname></string-name>, <string-name><given-names>Llion</given-names> <surname>Jones</surname></string-name>, <string-name><given-names>Aidan N</given-names> <surname>Gomez</surname></string-name>, <string-name><given-names>Łukasz</given-names> <surname>Kaiser</surname></string-name>, and <string-name><given-names>Illia</given-names> <surname>Polosukhin</surname></string-name></person-group>. <article-title>Attention is all you need</article-title>. In <source>Advances in Neural Information Processing Systems</source>, pp. <fpage>5998</fpage>–<lpage>6008</lpage>, <year>2017</year>.</mixed-citation></ref>
<ref id="c69"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><given-names>James A</given-names> <surname>Waltz</surname></string-name>, <string-name><given-names>Barbara J</given-names> <surname>Knowlton</surname></string-name>, <string-name><given-names>Keith J</given-names> <surname>Holyoak</surname></string-name>, <string-name><given-names>Kyle B</given-names> <surname>Boone</surname></string-name>, <string-name><given-names>Fred S</given-names> <surname>Mishkin</surname></string-name>, <string-name><given-names>Marcia</given-names> <surname>de Menezes Santos</surname></string-name>, <string-name><given-names>Carmen R</given-names> <surname>Thomas</surname></string-name>, and <string-name><given-names>Bruce L</given-names> <surname>Miller</surname></string-name></person-group>. <article-title>A system for relational reasoning in human prefrontal cortex</article-title>. <source>Psychological Science</source>, <volume>10</volume>(<issue>2</issue>):<fpage>119</fpage>–<lpage>125</lpage>, <year>1999</year>.</mixed-citation></ref>
<ref id="c70"><mixed-citation publication-type="book"><person-group person-group-type="author"><string-name><given-names>Taylor</given-names> <surname>Webb</surname></string-name>, <string-name><given-names>Zachary</given-names> <surname>Dulberg</surname></string-name>, <string-name><given-names>Steven</given-names> <surname>Frankland</surname></string-name>, <string-name><given-names>Alexander</given-names> <surname>Petrov</surname></string-name>, <string-name><given-names>Randall</given-names> <surname>O’Reilly</surname></string-name>, and <string-name><given-names>Jonathan</given-names> <surname>Cohen</surname></string-name></person-group>. <chapter-title>Learning representations that support extrapolation</chapter-title>. In <source>International Conference on Machine Learning</source>, pp. <fpage>10136</fpage>–<lpage>10146</lpage>. <publisher-name>PMLR</publisher-name>, <year>2020</year>.</mixed-citation></ref>
<ref id="c71"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><given-names>Taylor</given-names> <surname>Webb</surname></string-name>, <string-name><given-names>Shuhao</given-names> <surname>Fu</surname></string-name>, <string-name><given-names>Trevor</given-names> <surname>Bihl</surname></string-name>, <string-name><given-names>Keith J</given-names> <surname>Holyoak</surname></string-name>, and <string-name><given-names>Hongjing</given-names> <surname>Lu</surname></string-name></person-group>. <article-title>Zero-shot visual reasoning through probabilistic analogical mapping</article-title>. <source>Nature Communications</source>, <volume>14</volume>(<issue>1</issue>):<fpage>5144</fpage>, <year>2023</year>.</mixed-citation></ref>
<ref id="c72"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><given-names>Xue-Xin</given-names> <surname>Wei</surname></string-name>, <string-name><given-names>Jason</given-names> <surname>Prentice</surname></string-name>, and <string-name><given-names>Vijay</given-names> <surname>Balasubramanian</surname></string-name></person-group>. <article-title>A principle of economy predicts the functional architecture of grid cells</article-title>. <source>Elife</source>, <volume>4</volume>:<fpage>e08362</fpage>, <year>2015</year>.</mixed-citation></ref>
<ref id="c73"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><given-names>James CR</given-names> <surname>Whittington</surname></string-name>, <string-name><given-names>Timothy H</given-names> <surname>Muller</surname></string-name>, <string-name><given-names>Shirley</given-names> <surname>Mark</surname></string-name>, <string-name><given-names>Guifen</given-names> <surname>Chen</surname></string-name>, <string-name><given-names>Caswell</given-names> <surname>Barry</surname></string-name>, <string-name><given-names>Neil</given-names> <surname>Burgess</surname></string-name>, and <string-name><given-names>Timothy EJ</given-names> <surname>Behrens</surname></string-name></person-group>. <article-title>The tolman-eichenbaum machine: Unifying space and relational memory through generalization in the hippocampal formation</article-title>. <source>Cell</source>, <volume>183</volume>(<issue>5</issue>):<fpage>1249</fpage>–<lpage>1263</lpage>, <year>2020</year>.</mixed-citation></ref>
<ref id="c74"><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><given-names>Yonghui</given-names> <surname>Wu</surname></string-name>, <string-name><given-names>Mike</given-names> <surname>Schuster</surname></string-name>, <string-name><given-names>Zhifeng</given-names> <surname>Chen</surname></string-name>, <string-name><given-names>Quoc V</given-names> <surname>Le</surname></string-name>, <string-name><given-names>Mohammad</given-names> <surname>Norouzi</surname></string-name>, <string-name><given-names>Wolfgang</given-names> <surname>Macherey</surname></string-name>, <string-name><given-names>Maxim</given-names> <surname>Krikun</surname></string-name>, <string-name><given-names>Yuan</given-names> <surname>Cao</surname></string-name>, <string-name><given-names>Qin</given-names> <surname>Gao</surname></string-name>, <string-name><given-names>Klaus</given-names> <surname>Macherey</surname></string-name>, <etal>et al.</etal></person-group> <article-title>Google’s neural machine translation system: Bridging the gap between human and machine translation</article-title>. <source>arXiv preprint arXiv:1609.08144</source>, <year>2016</year>.</mixed-citation></ref>
<ref id="c75"><mixed-citation publication-type="web"><person-group person-group-type="author"><string-name><given-names>Cheng</given-names> <surname>Zhang</surname></string-name>, <string-name><given-names>Hedvig</given-names> <surname>Kjellstrom</surname></string-name>, and <string-name><given-names>Stephan</given-names> <surname>Mandt</surname></string-name></person-group>. <article-title>Determinantal point processes for mini-batch diversification</article-title>. <source>arXiv preprint arXiv:1705.00607</source>, <year>2017</year>.</mixed-citation></ref>
</ref-list>
<app-group>
<app id="ap1">
<title>7 Appendix</title>
<sec id="s7-1" sec-type="data-availability">
<title>7.1 Code and data availability</title>
<p>The code and the data can be downloaded from <ext-link ext-link-type="uri" xlink:href="https://github.com/Shanka123/DPP-Attention_Grid-Cell-Code">https://github.com/Shanka123/DPP-Attention_Grid-Cell-Code</ext-link>.</p>
</sec>
<sec id="s7-2">
<title>7.2 More experimental details</title>
<p>The size of the training region, <italic>M</italic> was 100. For the analogy task, we used 653216 training samples, 163304 validation samples, and 20000 testing samples for each of the nine regions. For the arithmetic task, we used 80000 training samples, 20000 validation samples, and 20000 testing samples for each of the nine regions with equal number of addition and multiplication problems. We used the PyTorch library (<xref ref-type="bibr" rid="c55">Paszke et al., 2017</xref>) for all experiments. For each network, the training epoch that achieved the best validation accuracy was used to report performance accuracy for the training stimulus sets, validation sets (held out stimuli from the training range), and OOD generalization test sets (from regions beyond the range of the training data).</p>
</sec>
<sec id="s7-3">
<title>7.3 Why is OOD generalization performance worse for the multiplication task?</title>
<p>In an effort to understand why DPP-A achieved around 65% average test accuracy on multiplication compared to nearly perfect accuracy for addition and analogy tasks, we analyzed the distribution of the grid cell embeddings for the frequency which had the maximum within-frequency determinant at the end of the first step in <xref ref-type="table" rid="alg1">Algorithm 1</xref>. More specifically for <italic>A, B</italic> and the correct answer <italic>C</italic>, we analyzed the distribution of each grid cell for the training and the nine test regions. Note that since the total number of grid cells was 900 and there were nine frequencies, the dimension of the grid cell embeddings corresponding to <inline-formula id="ie30"><alternatives><mml:math display="inline" id="i30"><mml:mrow><mml:msub><mml:mi>f</mml:mi><mml:mrow><mml:mi>m</mml:mi><mml:mi>a</mml:mi><mml:msub><mml:mi>x</mml:mi><mml:mrow><mml:mi>D</mml:mi><mml:mi>P</mml:mi><mml:mi>P</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub></mml:mrow></mml:math><inline-graphic xlink:href="2305.18417v3_ieq30.tif" mimetype="image" mime-subtype="tiff"/></alternatives></inline-formula> grid cell frequency was 100. To quantify the similarity between training and the test distributions, we computed cosine distance (1 - cosine similarity), and averaged it over the 100 dimensions and nine test regions. We found that the average cosine distance is 5x greater for multiplication than addition problem (0.0002 for addition: 0.001 for multiplication). In this respect, grid cell code does not perfectly preserve the relational structure of the multiplication problem, which we would expect to limit DPP-A’s OOD generalization ability in that task domain.</p>
</sec>
<sec id="s7-4">
<title>7.4 Ablation study on choice of frequency</title>
<fig id="fig9" position="float" fig-type="figure">
<label>Figure 9</label>
<caption><title>Results on analogy on each region using LSTM in the inference module for choosing top <italic>K</italic> frequencies with <inline-formula id="ie31"><alternatives><mml:math display="inline" id="i31"><mml:mrow><mml:msub><mml:mover accent="true"><mml:mi>F</mml:mi><mml:mo>^</mml:mo></mml:mover><mml:mi>f</mml:mi></mml:msub></mml:mrow></mml:math><inline-graphic xlink:href="2305.18417v3_ieq31.tif" mimetype="image" mime-subtype="tiff"/></alternatives></inline-formula> in <xref ref-type="table" rid="alg1">Algorithm 1</xref>.</title><p>Results show mean accuracy on each region averaged over 3 trained networks along with errorbar (standard error of the mean).</p></caption>
<graphic xlink:href="2305.18417v3_fig9.tif" mimetype="image" mime-subtype="tiff"/>
</fig>
</sec>
<sec id="s7-5">
<title>7.5 Baseline using dynamic attention across frequencies</title>
<fig id="fig10" position="float" fig-type="figure">
<label>Figure 10</label>
<caption><title>Results on analogy on each region for translation and scaling using the transformer in the inference module.</title></caption>
<graphic xlink:href="2305.18417v3_fig10.tif" mimetype="image" mime-subtype="tiff"/>
</fig>
</sec>
<sec id="s7-6">
<title>7.6 Ablation study on arithmetic task</title>
<fig id="fig11" position="float" fig-type="figure">
<label>Figure 11</label>
<caption><title>Results on arithmetic with different embeddings (with DPP-A) using LSTM in the inference module.</title><p>Results show mean accuracy on each region averaged over 3 trained networks along with errorbar (standard error of the mean).</p></caption>
<graphic xlink:href="2305.18417v3_fig11.tif" mimetype="image" mime-subtype="tiff"/>
</fig>
<fig id="fig12" position="float" fig-type="figure">
<label>Figure 12</label>
<caption><title>Results on arithmetic with different embeddings (without DPP-A, TCN, L1 Regularization, or Dropout) using LSTM in the inference module.</title><p>Results show mean accuracy on each region averaged over 3 trained networks along with errorbar (standard error of the mean).</p></caption>
<graphic xlink:href="2305.18417v3_fig12.tif" mimetype="image" mime-subtype="tiff"/>
</fig>
<fig id="fig13" position="float" fig-type="figure">
<label>Figure 13</label>
<caption><title>Results on arithmetic for increasing number of grid cell frequencies <italic>N<sub>f</sub></italic> on each region using LSTM in the inference module.</title><p>Results show mean accuracy on each region averaged over 3 trained networks along with errorbar (standard error of the mean).</p></caption>
<graphic xlink:href="2305.18417v3_fig13.tif" mimetype="image" mime-subtype="tiff"/>
</fig>
</sec>
<sec id="s7-7">
<title>7.7 Regression formulation</title>
<p>We also tried formulating the analogy and arithmetic tasks as regression instead of classification via a scoring mechanism. For DPP-A, the inference module was trained to generate the grid cell embeddings belonging to the <inline-formula id="ie32"><alternatives><mml:math display="inline" id="i32"><mml:mrow><mml:msub><mml:mi>f</mml:mi><mml:mrow><mml:mi>m</mml:mi><mml:mi>a</mml:mi><mml:msub><mml:mi>x</mml:mi><mml:mrow><mml:mi>D</mml:mi><mml:mi>P</mml:mi><mml:mi>P</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub></mml:mrow></mml:math><inline-graphic xlink:href="2305.18417v3_ieq32.tif" mimetype="image" mime-subtype="tiff"/></alternatives></inline-formula> frequency, which had the maximum within-frequency determinant at the end of the first step in <xref ref-type="table" rid="alg1">Algorithm 1</xref> for the correct completion, given as input the <inline-formula id="ie33"><alternatives><mml:math display="inline" id="i33"><mml:mrow><mml:msub><mml:mi>f</mml:mi><mml:mrow><mml:mi>m</mml:mi><mml:mi>a</mml:mi><mml:msub><mml:mi>x</mml:mi><mml:mrow><mml:mi>D</mml:mi><mml:mi>P</mml:mi><mml:mi>P</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub></mml:mrow></mml:math><inline-graphic xlink:href="2305.18417v3_ieq33.tif" mimetype="image" mime-subtype="tiff"/></alternatives></inline-formula> frequency grid cell embeddings for <italic>A, B, C</italic> for the analogy task and <italic>A, B</italic> for the arithmetic task. A linear layer with 100 units and sigmoid activation was used to generate the output of the inference module and was trained to minimize the mean squared error with the <inline-formula id="ie34"><alternatives><mml:math display="inline" id="i34"><mml:mrow><mml:msub><mml:mi>f</mml:mi><mml:mrow><mml:mi>m</mml:mi><mml:mi>a</mml:mi><mml:msub><mml:mi>x</mml:mi><mml:mrow><mml:mi>D</mml:mi><mml:mi>P</mml:mi><mml:mi>P</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub></mml:mrow></mml:math><inline-graphic xlink:href="2305.18417v3_ieq34.tif" mimetype="image" mime-subtype="tiff"/></alternatives></inline-formula> frequency grid cell embeddings of the correct completion. We compared DPP-A with a version that didn’t use the attentional objective (no DPP-A), where the inference module was trained to generate the grid cell embeddings for all the frequencies, but was evaluated on only the <inline-formula id="ie35"><alternatives><mml:math display="inline" id="i35"><mml:mrow><mml:msub><mml:mi>f</mml:mi><mml:mrow><mml:mi>m</mml:mi><mml:mi>a</mml:mi><mml:msub><mml:mi>x</mml:mi><mml:mrow><mml:mi>D</mml:mi><mml:mi>P</mml:mi><mml:mi>P</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub></mml:mrow></mml:math><inline-graphic xlink:href="2305.18417v3_ieq35.tif" mimetype="image" mime-subtype="tiff"/></alternatives></inline-formula> frequency grid cell embeddings for fair comparison with the DPP-A version. <xref ref-type="fig" rid="fig14">Figure 14</xref> shows the results for the analogy task using an LSTM in the inference module. For both the translation (left) and scaling (right) regimes, DPP-A achieves nearly zero mean squared error on all the test regions, considerably outperforming the no DPP-A which achieves a much higher error. <xref ref-type="fig" rid="fig15">Figure 15</xref> shows the results for arithmetic problems using an LSTM in the inference module. For addition problems, shown on the left, DPP-A achieves nearly zero mean squared error on the test regions. For multiplication problems, shown on the right, DPP-A achieves a lower mean squared error on the test regions, 0.11, compared to no DPP-A which achieves around 0.17.</p>
<fig id="fig14" position="float" fig-type="figure">
<label>Figure 14</label>
<caption><title>Results for regression on analogy using LSTM in the inference module.</title><p>Results show mean squared error on each region averaged over 3 trained networks along with errorbar (standard error of the mean).</p></caption>
<graphic xlink:href="2305.18417v3_fig14.tif" mimetype="image" mime-subtype="tiff"/>
</fig>
<fig id="fig15" position="float" fig-type="figure">
<label>Figure 15</label>
<caption><title>Results for regression on arithmetic on each region using LSTM in the inference module.</title><p>Results show mean squared error on each region averaged over 3 trained networks along with errorbar (standard error of the mean).</p></caption>
<graphic xlink:href="2305.18417v3_fig15.tif" mimetype="image" mime-subtype="tiff"/>
</fig>
</sec>
<sec id="s7-8">
<title>7.8 Effect of L1 Regularization strength (<italic>λ</italic>)</title>
<fig id="fig16" position="float" fig-type="figure">
<label>Figure 16</label>
<caption><title>Results on analogy for L1 regularization for various <italic>λ</italic>s for translation and scaling using LSTM in the inference module.</title><p>Results show mean accuracy on each region averaged over 3 trained networks along with errorbar (standard error of the mean).</p></caption>
<graphic xlink:href="2305.18417v3_fig16.tif" mimetype="image" mime-subtype="tiff"/>
</fig>
<fig id="fig17" position="float" fig-type="figure">
<label>Figure 17</label>
<caption><title>Results on arithmetic for L1 regularization for various <italic>λ</italic>s using LSTM in the inference module.</title><p>Results show mean accuracy on each region averaged over 3 trained networks along with errorbar (standard error of the mean).</p></caption>
<graphic xlink:href="2305.18417v3_fig17.tif" mimetype="image" mime-subtype="tiff"/>
</fig>
</sec>
<sec id="s7-9">
<title>7.9 Ablation on DPP-A</title>
<p>The proposed DPP-A method (<xref ref-type="table" rid="alg1">Algorithm 1</xref>) consists of two steps with <italic>𝓛<sub>DPP</sub></italic> in the first step and <italic>𝓛<sub>task</sub></italic> in the second step. We considered two ablation experiments which consists of a single step. In one case we maximized the objective function, <inline-formula id="ie36"><alternatives><mml:math display="inline" id="i36"><mml:mrow><mml:mover accent="true"><mml:mi>F</mml:mi><mml:mo>^</mml:mo></mml:mover><mml:mo stretchy="false">(</mml:mo><mml:mstyle mathvariant="bold-italic" mathsize="normal"><mml:mi>g</mml:mi></mml:mstyle><mml:mo>,</mml:mo><mml:mstyle mathvariant="bold-italic" mathsize="normal"><mml:mi>V</mml:mi></mml:mstyle><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mi>log</mml:mi><mml:mtext> </mml:mtext><mml:mi>det</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mi>d</mml:mi><mml:mi>i</mml:mi><mml:mi>a</mml:mi><mml:mi>g</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mi>σ</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mstyle mathvariant="bold-italic" mathsize="normal"><mml:mi>g</mml:mi></mml:mstyle><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mstyle mathvariant="bold-italic" mathsize="normal"><mml:mo stretchy="false">(</mml:mo></mml:mstyle><mml:mi>V</mml:mi><mml:mo>−</mml:mo><mml:mstyle mathvariant="bold-italic" mathsize="normal"><mml:mi>I</mml:mi></mml:mstyle><mml:mo stretchy="false">)</mml:mo><mml:mo>+</mml:mo><mml:mstyle mathvariant="bold-italic" mathsize="normal"><mml:mi>I</mml:mi></mml:mstyle></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="2305.18417v3_ieq36.tif" mimetype="image" mime-subtype="tiff"/></alternatives></inline-formula>, over the grid cell embeddings of all frequencies and phases (instead of summing <inline-formula id="ie37"><alternatives><mml:math display="inline" id="i37"><mml:mover accent="true"><mml:mi>F</mml:mi><mml:mo>^</mml:mo></mml:mover></mml:math><inline-graphic xlink:href="2305.18417v3_ieq37.tif" mimetype="image" mime-subtype="tiff"/></alternatives></inline-formula> corresponding to the grid cell embeddings from each frequency independently as done in the first step of <xref ref-type="table" rid="alg1">Algorithm 1</xref>), using stochastic gradient ascent, along with minimizing <italic>𝓛<sub>task</sub></italic>, which would use all the attended grid cell embeddings (instead of using <inline-formula id="ie38"><alternatives><mml:math display="inline" id="i38"><mml:msub><mml:mi>f</mml:mi><mml:mrow><mml:mi>m</mml:mi><mml:mi>a</mml:mi><mml:msub><mml:mi>x</mml:mi><mml:mrow><mml:mi>D</mml:mi><mml:mi>P</mml:mi><mml:mi>P</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub></mml:math><inline-graphic xlink:href="2305.18417v3_ieq38.tif" mimetype="image" mime-subtype="tiff"/></alternatives></inline-formula> frequency grid cell embeddings as done in the second step of <xref ref-type="table" rid="alg1">Algorithm 1</xref>). So total loss, <inline-formula id="ie39"><alternatives><mml:math display="inline" id="i39"><mml:mrow><mml:mi>𝓛</mml:mi><mml:mo>=</mml:mo><mml:msub><mml:mi>𝓛</mml:mi><mml:mrow><mml:mi>t</mml:mi><mml:mi>a</mml:mi><mml:mi>s</mml:mi><mml:mi>k</mml:mi></mml:mrow></mml:msub><mml:mo>−</mml:mo><mml:mi>λ</mml:mi><mml:mo>*</mml:mo><mml:mover accent="true"><mml:mi>F</mml:mi><mml:mo>^</mml:mo></mml:mover><mml:mo stretchy="false">(</mml:mo><mml:mstyle mathvariant="bold-italic" mathsize="normal"><mml:mi>g</mml:mi></mml:mstyle><mml:mo>,</mml:mo><mml:mstyle mathvariant="bold-italic" mathsize="normal"><mml:mi>V</mml:mi></mml:mstyle><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="2305.18417v3_ieq39.tif" mimetype="image" mime-subtype="tiff"/></alternatives></inline-formula>.</p>
<p>We refer to this ablation experiment as one step DPP-A over the complete grid cell code. The results on the analogy for this ablation experiment is shown in <xref ref-type="fig" rid="fig18">Figure 18</xref>. We see that the accuracy on test analogies for translation for various <italic>λ</italic>s are around 30-60%, and for scaling around 20-40%, which is much lower than the nearly perfect accuracy achieved by the proposed DPP-A method. In the other case we maximized the objective function <inline-formula id="ie40"><alternatives><mml:math display="inline" id="i40"><mml:mrow><mml:mover accent="true"><mml:mi>F</mml:mi><mml:mo>^</mml:mo></mml:mover><mml:mo stretchy="false">(</mml:mo><mml:mstyle mathvariant="bold-italic" mathsize="normal"><mml:mi>g</mml:mi></mml:mstyle><mml:mo>,</mml:mo><mml:mstyle mathvariant="bold-italic" mathsize="normal"><mml:mi>V</mml:mi></mml:mstyle><mml:mo>,</mml:mo><mml:msub><mml:mi>N</mml:mi><mml:mi>f</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>N</mml:mi><mml:mi>p</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mstyle displaystyle="true"><mml:munderover><mml:mo>∑</mml:mo><mml:mrow><mml:mi>f</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:msub><mml:mi>N</mml:mi><mml:mi>f</mml:mi></mml:msub></mml:mrow></mml:munderover><mml:mrow><mml:mi>log</mml:mi><mml:mi>det</mml:mi></mml:mrow></mml:mstyle><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mi>d</mml:mi><mml:mi>i</mml:mi><mml:mi>a</mml:mi><mml:mi>g</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mi>σ</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mstyle mathvariant="bold-italic" mathsize="normal"><mml:mi>g</mml:mi></mml:mstyle><mml:mstyle mathvariant="bold-italic" mathsize="normal"><mml:mi>f</mml:mi></mml:mstyle></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mstyle mathvariant="bold-italic" mathsize="normal"><mml:mi>V</mml:mi></mml:mstyle><mml:mstyle mathvariant="bold-italic" mathsize="normal"><mml:mi>f</mml:mi></mml:mstyle></mml:msub><mml:mo>−</mml:mo><mml:mstyle mathvariant="bold-italic" mathsize="normal"><mml:mi>I</mml:mi></mml:mstyle><mml:mo stretchy="false">)</mml:mo><mml:mo>+</mml:mo><mml:mstyle mathvariant="bold-italic" mathsize="normal"><mml:mi>I</mml:mi></mml:mstyle></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="2305.18417v3_ieq40.tif" mimetype="image" mime-subtype="tiff"/></alternatives></inline-formula>, using stochastic gradient ascent, which is same as <italic>𝓛<sub>DPP</sub></italic> in the first step of <xref ref-type="table" rid="alg1">Algorithm 1</xref>, along with minimizing <italic>𝓛<sub>task</sub></italic>, which would use all the attended grid cell embeddings. So total loss, <inline-formula id="ie41"><alternatives><mml:math display="inline" id="i41"><mml:mi>𝓛</mml:mi><mml:mo>=</mml:mo><mml:msub><mml:mi>𝓛</mml:mi><mml:mrow><mml:mi>t</mml:mi><mml:mi>a</mml:mi><mml:mi>s</mml:mi><mml:mi>k</mml:mi></mml:mrow></mml:msub><mml:mo>−</mml:mo><mml:mi>λ</mml:mi><mml:mo>*</mml:mo><mml:mover accent="true"><mml:mi>F</mml:mi><mml:mo>^</mml:mo></mml:mover><mml:mo stretchy="false">(</mml:mo><mml:mstyle mathvariant="bold-italic" mathsize="normal"><mml:mi>g</mml:mi></mml:mstyle><mml:mo>,</mml:mo><mml:mstyle mathvariant="bold-italic" mathsize="normal"><mml:mi>V</mml:mi></mml:mstyle><mml:mo>,</mml:mo><mml:msub><mml:mi>N</mml:mi><mml:mi>f</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>N</mml:mi><mml:mi>p</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:math><inline-graphic xlink:href="2305.18417v3_ieq41.tif" mimetype="image" mime-subtype="tiff"/></alternatives></inline-formula>. We refer to this ablation experiment as one step DPP-A within frequencies. As shown in <xref ref-type="fig" rid="fig19">Figure 19</xref>, the accuracy on test analogies for both translation and scaling for various <italic>λ</italic>s are in a similar range to one step DPP-A over the complete grid cell code, and is much lower than the nearly perfect accuracy achieved by the proposed DPP-A method.</p>
<fig id="fig18" position="float" fig-type="figure">
<label>Figure 18</label>
<caption><title>Results on analogy for one step DPP-A over the complete grid cell code for various <italic>λ</italic>s for translation and scaling using LSTM in the inference module.</title><p>Results show mean accuracy on each region averaged over 3 trained networks along with errorbar (standard error of the mean).</p></caption>
<graphic xlink:href="2305.18417v3_fig18.tif" mimetype="image" mime-subtype="tiff"/>
</fig>
<fig id="fig19" position="float" fig-type="figure">
<label>Figure 19</label>
<caption><title>Results on analogy for one step DPP-A within frequencies for various <italic>λ</italic>s for translation and scaling using LSTM in the inference module.</title><p>Results show mean accuracy on each region averaged over 3 trained networks along with errorbar (standard error of the mean).</p></caption>
<graphic xlink:href="2305.18417v3_fig19.tif" mimetype="image" mime-subtype="tiff"/>
</fig>
</sec>
<sec id="s7-10">
<title>7.10 DPP-A attentional modulation</title>
<p>The gates within each frequency were optimized (independent of the task inputs), according to <xref ref-type="disp-formula" rid="ed6">Equation 6</xref>, to compute the approximate maximum within frequency log determinant of the covariance matrix over the grid cell embeddings individually for each frequency. We then used the grid cell embeddings belonging to the frequency that had the maximum within-frequency log determinant for training the inference module, which always happened to be grid cells within the top three frequencies. <xref ref-type="fig" rid="fig20">Figure 20</xref> shows the approximate maximum log determinant (on the y-axis) for the different frequencies (on the x-axis). The intuition behind why DPP-A identified grid cell embeddings corresponding to the highest spatial frequencies, and why this produced the best OOD generalization (i.e., extrapolation on our analogy tasks), is because those grid cell embeddings exhibited greater variance over the training data than the lower frequency embeddings, while at the same time the correlations among those grid cell embeddings were lower than the correlations among the lower frequency grid cell embeddings. The determinant of the covariance matrix of the grid cell embeddings is maximized when the variances of the grid cell embeddings are high (they are “expressive”) and the correlation among the grid cell embeddings is low (they “cover the representational space”). As a result, the higher frequency grid cell embeddings more efficiently covered the representational space of the training data, allowing them to efficiently capture the same relational structure across training and test distributions which is required for OOD generalization.</p>
<fig id="fig20" position="float" fig-type="figure">
<label>Figure 20</label>
<caption><title>Approximate maximum log determinant of the covariance matrix over the grid cell embeddings (y-axis) for each frequency (x-axis), obtained after maximizing <xref ref-type="disp-formula" rid="ed6">Equation 6</xref>.</title></caption>
<graphic xlink:href="2305.18417v3_fig20.tif" mimetype="image" mime-subtype="tiff"/>
</fig>
<p>To demonstrate that the higher grid cell frequencies more efficiently cover the representational space, we analyzed in <xref ref-type="fig" rid="fig21">Figure 21</xref>, the results after the summation of the multiplication of the grid cell embeddings over the 2d space of 1000 × 1000 locations, with their corresponding gates for 3 representative frequencies (left, middle, and right panels showing results for the lowest, middle and highest grid cell frequencies, respectively, of the 9 used in the model), obtained after maximizing <xref ref-type="disp-formula" rid="ed6">Equation 6</xref> for each grid cell frequency. The color code indicates the responsiveness of the grid cells to different X and Y locations in the input space (lighter color corresponding to greater responsiveness). Note that the dark blue area (denoting regions of least responsiveness to any grid cell) is greatest for the lowest frequency and nearly zero for the highest frequency, illustrating that grid cell embeddings belonging to the highest frequency more efficiently cover the representational space which allows them to capture the same relational structure across training and test distributions as required for OOD generalization.</p>
<fig id="fig21" position="float" fig-type="figure">
<label>Figure 21</label>
<caption><title>Each panel shows the results after summation of the multiplication of the grid cell embeddings over the 2d space of 1000×1000 locations, with their corresponding gates for a particular frequency, obtained after maximizing <xref ref-type="disp-formula" rid="ed6">Equation 6</xref> for each grid cell frequency.</title><p>The left, middle, and right panels show results for the lowest, middle, and highest grid cell frequencies, respectively, of the 9 used in the model. Lighter color in each panel corresponds to greater responsiveness of grid cells at that particular location in the 2d space.</p></caption>
<graphic xlink:href="2305.18417v3_fig21.tif" mimetype="image" mime-subtype="tiff"/>
</fig>
</sec>
</app>
</app-group>
<fn-group>
<fn id="fn0001"><label>1</label><p>Temporal context normalization (<xref ref-type="bibr" rid="c70">Webb et al., 2020</xref>) is a normalization procedure proposed for use in training a neural network, similar to batch normalization (<xref ref-type="bibr" rid="c38">Ioffe &amp; Szegedy, 2015</xref>), in which tensor normalization is applied over the temporal instead of the batch dimension, which is shown to help with OOD generalization. It is unrelated to the temporal context model (<xref ref-type="bibr" rid="c37">Howard et al., 2005</xref>), which is a computational model that proposes a role for temporal coding in the functions of the medial temporal lobe in support of episodic recall, and spatial navigation.</p></fn>
<fn id="fn0002"><label>2</label><p>We transformed by the same amount along both dimensions so that the OOD generalization regimes are similar to <xref ref-type="bibr" rid="c70">Webb et al. (2020)</xref>.</p></fn>
<fn id="fn0003"><label>3</label><p><ext-link ext-link-type="uri" xlink:href="https://github.com/bicanski/VisualGridsRecognitionMem">https://github.com/bicanski/VisualGridsRecognitionMem</ext-link></p></fn>
<fn id="fn0004"><label>4</label><p>It seems likely that the use of grid cell code for abstraction in human cognition requires a considerably greater number of states <italic>S</italic> than that used by the rodent for sensory encoding. However, given exponential scaling, the total number of frequencies is expected to remain low, increasing as a logarithm of <italic>S</italic>.</p></fn>
<fn id="fn0005"><label>5</label><p><ext-link ext-link-type="uri" xlink:href="https://github.com/insuhan/fastdppmap/blob/db7a28c38ce654bdbfd5ab1128d3d5910b68df6b/test_greedy.m#L123">https://github.com/insuhan/fastdppmap/blob/db7a28c38ce654bdbfd5ab1128d3d5910b68df6b/test_greedy.m#L123</ext-link>. <italic>S</italic> need not be a square matrix in our case, whose second dimension <italic>M</italic> is the size of the training region. <italic>L_kernel</italic> is same as <italic><bold>V</bold></italic>.</p></fn>
</fn-group>
</back>
<sub-article id="sa0" article-type="editor-report">
<front-stub>
<article-id pub-id-type="doi">10.7554/eLife.89911.2.sa1</article-id>
<title-group>
<article-title>eLife Assessment</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author">
<name>
<surname>Schapiro</surname>
<given-names>Anna C</given-names>
</name>
<role specific-use="editor">Reviewing Editor</role>
<aff>
<institution-wrap>
<institution>University of Pennsylvania</institution>
</institution-wrap>
<city>Philadelphia</city>
<country>United States of America</country>
</aff>
</contrib>
</contrib-group>
<kwd-group kwd-group-type="evidence-strength">
<kwd>Compelling</kwd>
</kwd-group>
<kwd-group kwd-group-type="claim-importance">
<kwd>Important</kwd>
</kwd-group>
</front-stub>
<body>
<p>This <bold>important</bold> modeling work demonstrates out-of-distribution generalization using a grid cell coding scheme combined with an attentional mechanism that operates over these representations (Determinantal Point Process Attention). The simulations provide <bold>compelling</bold> evidence that the model can improve generalization performance for analogies, addition, and multiplication. The paper is significant in demonstrating how neural grid codes can support human-like generalization capabilities in analogy and arithmetic tasks, which has been a challenge for prior models.</p>
</body>
</sub-article>
<sub-article id="sa1" article-type="referee-report">
<front-stub>
<article-id pub-id-type="doi">10.7554/eLife.89911.2.sa0</article-id>
<title-group>
<article-title>Reviewer #1 (Public Review):</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author">
<anonymous/>
<role specific-use="referee">Reviewer</role>
</contrib>
</contrib-group>
</front-stub>
<body>
<p>This paper presents a cognitive model of out-of-distribution generalisation, where the representational basis is grid-cell codes. In particular, the authors consider the tasks of analogies, addition, and multiplication, and the out-of-distribution tests are shifting or scaling the input domain. The authors utilise grid cell codes, which are multi-scale as well as translationally invariant due to their periodicity. To allow for domain adaptation, the authors use DPP-A which is, in this context, a mechanism of adapting to input scale changes. The authors present simulations results demonstrating this model can perform out-of-distribution generalisation to input translations and re-scaling, whereas other models fail.</p>
<p>This paper makes the point it sets out to - that there are some underlying representational bases, like grid cells, that when combined with a domain adaptation mechanism, like DPP-A, can facilitate out-of-generalisation. I don't have any issues with the technical details.</p>
<p>The paper nicely demonstrates how neural codes can be transformed into a common representational space so that analogies, and presumably other useful tasks/computations, can be performed.</p>
</body>
</sub-article>
<sub-article id="sa2" article-type="author-comment">
<front-stub>
<article-id pub-id-type="doi">10.7554/eLife.89911.2.sa2</article-id>
<title-group>
<article-title>Author Response</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author">
<name>
<surname>Mondal</surname>
<given-names>Shanka Subhra</given-names>
</name>
<role specific-use="author">Author</role>
</contrib>
<contrib contrib-type="author">
<name>
<surname>Frankland</surname>
<given-names>Steven</given-names>
</name>
<role specific-use="author">Author</role>
</contrib>
<contrib contrib-type="author">
<name>
<surname>Webb</surname>
<given-names>Taylor W.</given-names>
</name>
<role specific-use="author">Author</role>
</contrib>
<contrib contrib-type="author">
<name>
<surname>Cohen</surname>
<given-names>Jonathan D.</given-names>
</name>
<role specific-use="author">Author</role>
</contrib>
</contrib-group>
</front-stub>
<body>
<p>The following is the authors’ response to the original reviews.</p>
<disp-quote content-type="editor-comment">
<p><bold>Major comments (Public Reviews)</bold></p>
</disp-quote>
<p>Generality of grid cells</p>
<p>We appreciate the reviewers’ concern regarding the generality of our approach, and in particular for analogies in nonlinear spaces. In that regard, there are at least two potential directions that could be pursued. One is to directly encode nonlinear structures (such as trees, rings, etc.) with grid cells, to which DPP-A could be applied as described in our model. The TEM model [1] suggests that grid cells in the medial entorhinal may form a basis set that captures structural knowledge for such nonlinear spaces, such as social hierarchies and transitive inference when formalized as a connected graph. Another would be to use eigen-decomposition of the successor representation [2], a learnable predictive representation of possible future states that has been shown by Stachenfield et al. [3] to provide an abstract structured representation of a space that is analogous to the grid cell code. This general-purpose mechanism could be applied to represent analogies in nonlinear spaces [4], for which there may not be a clear factorization in terms of grid cells (i.e., distinct frequencies and multiple phases within each frequency). Since the DPP-A mechanism, as we have described it, requires representations to be factored in this way it would need to be modified for such purpose. Either of these approaches, if successful, would allow our model to be extended to domains containing nonlinear forms of structure. To the extent that different coding schemes (i.e., basis sets) are needed for different forms of structure, the question of how these are identified and engaged for use in a given setting is clearly an important one, that is not addressed by the current work. We imagine that this is likely subserved by monitoring and selection mechanisms proposed to underlie the capacity for selective attention and cognitive control [5], though the specific computational mechanisms that underlie this function remain an important direction for future research. We have added a discussion of these issues in Section 6 of the updated manuscript.</p>
<p>(1) Whittington, J.C., Muller, T.H., Mark, S., Chen, G., Barry, C., Burgess, N. and Behrens, T.E., 2020. The Tolman-Eichenbaum machine: unifying space and relational memory through generalization in the hippocampal formation. Cell, 183(5), pp.1249-1263.</p>
<p>(2) Dayan, P., 1993. Improving generalization for temporal difference learning: The successor representation. Neural computation, 5(4), pp.613-624.</p>
<p>(3) Stachenfeld, K.L., Botvinick, M.M. and Gershman, S.J., 2017. The hippocampus as a predictive map. Nature neuroscience, 20(11), pp.1643-1653.</p>
<p>(4) Frankland, S., Webb, T.W., Petrov, A.A., O'Reilly, R.C. and Cohen, J., 2019. Extracting and Utilizing Abstract, Structured Representations for Analogy. In CogSci (pp. 1766-1772).</p>
<p>(5) Shenhav, A., Botvinick, M.M. and Cohen, J.D., 2013. The expected value of control: an integrative theory of anterior cingulate cortex function. Neuron, 79(2), pp.217-240.
Biological plausibility of DPP-A</p>
<p>We appreciate the reviewers’ interest in the biological plausibility of our model, and in particular the question of whether and how DPP-A might be implemented in a neural network. In that regard, Bozkurt et al. [1] recently proposed a biologically plausible neural network algorithm using a weighted similarity matrix approach to implement a determinant maximization criterion, which is the core idea underlying the objective function we use for DPP-A, suggesting that the DPP-A mechanism we describe may also be biologically plausible. This could be tested experimentally by exposing individuals (e.g., rodents or humans) to a task that requires consistent exposure to a subregion, and evaluating the distribution of activity over the grid cells. Our model predicts that high frequency grid cells should increase their firing rate more than low frequency cells, since the high frequency grid cells maximize the determinant of the covariance matrix of the grid cell embeddings. It is also worth noting that Frankland et al. [2] have suggested that the use of DPPs may also help explain a mutual exclusivity bias observed in human word learning and reasoning. While this is not direct evidence of biological plausibility, it is consistent with the idea that the human brain selects representations for processing that maximize the volume of the representational space, which can be achieved by maximizing the DPP-A objective function defined in Equation 6. We have added a comment to this effect in Section 6 of the updated manuscript.</p>
<p>(1) Bozkurt, B., Pehlevan, C. and Erdogan, A., 2022. Biologically-plausible determinant maximization neural networks for blind separation of correlated sources. Advances in Neural Information Processing Systems, 35, pp.13704-13717.</p>
<p>(2) Frankland, S. and Cohen, J., 2020. Determinantal Point Processes for Memory and Structured Inference. In CogSci.</p>
<p>Simplicity of analogical problem and comparison to other models using this task</p>
<p>First, we would like to point out that analogical reasoning is a signatory feature of human cognition, which supports flexible and efficient adaptation to novel inputs that remains a challenge for most current neural network architectures. While humans can exhibit complex and sophisticated forms of analogical reasoning [1, 2, 3], here we focused on a relatively simple form, that was inspired by Rumelhart’s parallelogram model of analogy [4,5] that has been used to explain traditional human verbal analogies (e.g., “king is to what as man is to woman?”). Our model, like that one, seeks to explain analogical reasoning in terms of the computation of simple Euclidean distances (i.e., A - B = C - D, where A, B, C, D are vectors in 2D space). We have now noted this in Section 2.1.1 of the updated manuscript. It is worth noting that, despite the seeming simplicity of this construction, we show that standard neural network architectures (e.g., LSTMs and transformers) struggle to generalize on such tasks without the use of the DPP-A mechanism.</p>
<p>Second, we are not aware of any previous work other than Frankland et al. [6] cited in the first paragraph of Section 2.2.1, that has examined the capacity of neural network architectures to perform even this simple form of analogy. The models in that study were hardcoded to perform analogical reasoning, whereas we trained models to learn to perform analogies. That said, clearly a useful line of future work would be to scale our model further to deal with more complex forms of representation and analogical reasoning tasks [1,2,3]. We have noted this in Section 6 of the updated manuscript.</p>
<p>(1) Holyoak, K.J., 2012. Analogy and relational reasoning. The Oxford handbook of thinking and reasoning, pp.234-259.</p>
<p>(2) Webb, T., Fu, S., Bihl, T., Holyoak, K.J. and Lu, H., 2023. Zero-shot visual reasoning through probabilistic analogical mapping. Nature Communications, 14(1), p.5144.</p>
<p>(3) Lu, H., Ichien, N. and Holyoak, K.J., 2022. Probabilistic analogical mapping with semantic relation networks. Psychological review.</p>
<p>(4) Rumelhart, D.E. and Abrahamson, A.A., 1973. A model for analogical reasoning. Cognitive Psychology, 5(1), pp.1-28.</p>
<p>(5) Mikolov, T., Chen, K., Corrado, G. and Dean, J., 2013. Efficient estimation of word representations in vector space. arXiv preprint arXiv:1301.3781.</p>
<p>(6) Frankland, S., Webb, T.W., Petrov, A.A., O'Reilly, R.C. and Cohen, J., 2019. Extracting and Utilizing Abstract, Structured Representations for Analogy. In CogSci (pp. 1766-1772).</p>
<p>Clarification of DPP-A attentional modulation</p>
<p>We would like to clarify several concerns regarding the DPP-A attentional modulation. First, we would like to make it clear that ω is not meant to correspond to synaptic weights, and thank the reviewer for noting the possibility for confusion on this point. It is also distinct from a biasing input, which is often added to the product of the input features and weights. Rather, in our model ω is a vector, and diag (ω) converts it into a matrix with ω as the diagonal of the matrix, and the rest entries are zero. In Equation 6, diag(ω) is matrix multiplied with the covariance matrix V, which results in elementwise multiplication of ω with column vectors of V, and hence   acts more like gates. We have noted this in Section 2.2.2 and have changed all instances of “weights (ω)” to “gates (ɡ)” in the updated manuscript. We have also rewritten the definition of Equation 6 and uses of it (as in Algorithm 1) to depict the use of sigmoid nonlinearity (σ) to , so that the resulting values are always between 0 and 1.</p>
<p>Second, we would like to clarify that we don’t compute the inner product between the gates ɡ and the grid cell embeddings x anywhere in our model. The gates within each frequency
were optimized (independent of the task inputs), according to Equation 6, to compute the approximate maximum log determinant of the covariance matrix over the grid cell embeddings individually for each frequency. We then used the grid cell embeddings belonging to the frequency that had the maximum within-frequency log determinant for training the inference module, which always happened to be grid cells within the top three frequencies. Author response image 1 (also added to the Appendix, Section 7.10 of the updated manuscript) shows the approximate maximum log determinant (on the y-axis) for the different frequencies (on the x-axis).</p>
<fig id="sa2fig1">
<label>Author response image 1.</label>
<caption>
<title>Approximate maximum log determinant of the covariance matrix over the grid cell embeddings (y-axis) for each frequency (x-axis), obtained after maximizing Equation 6.</title>
</caption>
<graphic mime-subtype="jpg" xlink:href="elife-89911-sa2-fig1.jpg" mimetype="image"/>
</fig>
<p>Third, we would like to clarify our interpretation of why DPP-A identified grid cell embeddings corresponding to the highest spatial frequencies, and why this produced the best OOD generalization (i.e., extrapolation on our analogy tasks). It is because those grid cell embeddings exhibited greater variance over the training data than the lower frequency embeddings, while at the same time the correlations among those grid cell embeddings were lower than the correlations among the lower frequency grid cell embeddings. The determinant of the covariance matrix of the grid cell embeddings is maximized when the variances of the grid cell embeddings are high (they are “expressive”) and the correlation among the grid cell embeddings is low (they “cover the representational space”). As a result, the higher frequency grid cell embeddings more efficiently covered the representational space of the training data, allowing them to efficiently capture the same relational structure across training and test distributions which is required for OOD generalization. We have added some clarification to the second paragraph of Section 2.2.2 in the updated manuscript. Furthermore, to illustrate this graphically, Author response image 2 (added to the Appendix, Section 7.10 of the updated manuscript) shows the results after the summation of the multiplication of the grid cell embeddings over the 2d space of 1000x1000 locations, with their corresponding gates for 3 representative frequencies (left, middle and right panels showing results for the lowest, middle and highest grid cell frequencies, respectively, of the 9 used in the model), obtained after maximizing Equation 6 for each grid cell frequency. The color code indicates the responsiveness of the grid cells to different X and Y locations in the input space (lighter color corresponding to greater responsiveness). Note that the dark blue area (denoting regions of least responsiveness to any grid cell) is greatest for the lowest frequency and nearly zero for the highest frequency, illustrating that grid cell embeddings belonging to the highest frequency more efficiently cover the representational space which allows them to capture the same relational structure across training and test distributions as required for OOD generalization.</p>
<fig id="sa2fig2">
<label>Author response image 2.</label>
<caption>
<title>Each panel shows the results after summation of the multiplication of the grid cell embeddings over the 2d space of 1000x1000 locations, with their corresponding gates for a particular frequency, obtained after maximizing Equation 6 for each grid cell frequency.</title>
<p>The left, middle, and right panels show results for the lowest, middle, and highest grid cell frequencies, respectively, of the 9 used in the model. Lighter color in each panel corresponds to greater responsiveness of grid cells at that particular location in the 2d space.</p>
</caption>
<graphic mime-subtype="jpg" xlink:href="elife-89911-sa2-fig2.jpg" mimetype="image"/>
</fig>
<p>Finally, we would like to clarify how the DPP-A attentional mechanism is different from the attentional mechanism in the transformer module, and why both are needed for strong OOD generalization. Use of the standard self-attention mechanism in transformers over the inputs (i.e., A, B, C, and D for the analogy task) in place of DPP-A would lead to weightings of grid cell embeddings over all frequencies and phases. The objective function for the DPP-A represents an inductive bias, that selectively assigns the greatest weight to all grid cell embeddings (i.e., for all phases) of the frequency for which the determinant of the covariance matrix is greatest computed over the training space. The transformer inference module then attends over the inputs with the selected grid cell embeddings based on the DPP-A objective. We have added a discussion of this point in Section 6 of the updated manuscript.</p>
<p>We would like to thank the reviewers for their recommendations. We have tried our best to incorporate them into our updated manuscript. Below we provide a detailed response to each of the recommendations grouped for each reviewer.</p>
<disp-quote content-type="editor-comment">
<p><bold>Reviewer #1 (Recommendations for the authors)</bold></p>
<p>(1) It would be helpful to see some equations for R in the main text.</p>
</disp-quote>
<p>We thank the reviewer for this suggestion. We have now added some equations explaining the working of R in Section 2.2.3 of the updated manuscript.</p>
<disp-quote content-type="editor-comment">
<p>(2) Typo: p 11 'alongwith' -&gt; 'along with'</p>
</disp-quote>
<p>We have changed all instances of ‘alongwith’ to ‘along with’ in the updated manuscript.</p>
<disp-quote content-type="editor-comment">
<p>(3) Presumably, this is related to equivariant ML - it would be helpful to comment on this.</p>
</disp-quote>
<p>Yes, this is related to equivariant ML, since the properties of equivariance hold for our model. Specifically, the probability distribution after applying softmax remains the same when the transformation (translation or scaling) is applied to the scores for each of the answer choices obtained from the output of the inference module, and when the same transformation is applied to the stimuli for the task and all the answer choices before presenting as input to the inference module to obtain the scores. We have commented on this in Section 2.2.3 of the updated manuscript.</p>
<disp-quote content-type="editor-comment">
<p><bold>Reviewer #2 (Recommendations for the authors)</bold></p>
<p>(1) Page 2 - &quot;Webb et al.&quot; temporal context - they should also cite and compare this to work by Marc Howard on generalization based on multi-scale temporal context.</p>
</disp-quote>
<p>While we appreciate the important contributions that have been made by Marc Howard and his colleagues to temporal coding and its role in episodic memory and hippocampal function, we would like to clarify that his temporal context model is unrelated to the temporal context normalization developed by Webb et al. (2020) and mentioned on Page 2. The former (Temporal Context Model) is a computational model that proposes a role for temporal coding in the functions of the medial temporal lobe in support of episodic recall, and spatial navigation. The latter (temporal context normalization) is a normalization procedure proposed for use in training a neural network, similar to batch normalization [1], in which tensor normalization is applied over the temporal instead of the batch dimension, which is shown to help with OOD generalization. We apologize for any confusion engendered by the similarity of these terms, and failure to clarify the difference between these, that we have now attempted to do in a footnote on Page 2.</p>
<p>Ioffe, S. and Szegedy, C., 2015, June. Batch normalization: Accelerating deep network training by reducing internal covariate shift. In International conference on machine learning (pp. 448-456). pmlr.</p>
<disp-quote content-type="editor-comment">
<p>(2) page 3 - &quot;known to be implemented in entorhinal&quot; - It's odd that they seem to avoid citing the actual biology papers on grid cells. They should cite more of the grid cell recording papers when they mention the entorhinal cortex (i.e. Hafting et al., 2005; Barry et al., 2007; Stensola et al., 2012; Giocomo et al., 2011; Brandon et al., 2011).</p>
</disp-quote>
<p>We have now cited the references mentioned below, on page 3 after the phrase “known to be implemented in entohinal cortex”.</p>
<p>(1) Barry, C., Hayman, R., Burgess, N. and Jeffery, K.J., 2007. Experience-dependent rescaling of entorhinal grids. Nature neuroscience, 10(6), pp.682-684.</p>
<p>(2) Stensola, H., Stensola, T., Solstad, T., Frøland, K., Moser, M.B. and Moser, E.I., 2012. The entorhinal grid map is discretized. Nature, 492(7427), pp.72-78.</p>
<p>(3) Giocomo, L.M., Hussaini, S.A., Zheng, F., Kandel, E.R., Moser, M.B. and Moser, E.I., 2011. Grid cells use HCN1 channels for spatial scaling. Cell, 147(5), pp.1159-1170.</p>
<p>(4) Brandon, M.P., Bogaard, A.R., Libby, C.P., Connerney, M.A., Gupta, K. and Hasselmo, M.E., 2011. Reduction of theta rhythm dissociates grid cell spatial periodicity from directional tuning. Science, 332(6029), pp.595-599.</p>
<disp-quote content-type="editor-comment">
<p>(3) To enhance the connection to biological systems, they should cite more of the experimental and modeling work on grid cell coding (for example on page 2 where they mention relational coding by grid cells). Currently, they tend to cite studies of grid cell relational representations that are very indirect in their relationship to grid cell recordings (i.e. indirect fMRI measures by Constaninescu et al., 2016 or the very abstract models by Whittington et al., 2020). They should cite more papers on actual neurophysiological recordings of grid cells that suggest relational/metric representations, and they should cite more of the previous modeling papers that have addressed relational representations. This could include work on using grid cell relational coding to guide spatial behavior (e.g. Erdem and Hasselmo, 2014; Bush, Barry, Manson, Burges, 2015). This could also include other papers on the grid cell code beyond the paper by Wei et al., 2015 - they could also cite work on the efficiency of coding by Sreenivasan and Fiete and by Mathis, Herz, and Stemmler.</p>
</disp-quote>
<p>We thank the reviewer for bringing the additional references to our attention. We have cited the references mentioned below on page 2 of the updated manuscript.</p>
<p>(1) Erdem, U.M. and Hasselmo, M.E., 2014. A biologically inspired hierarchical goal directed navigation model. Journal of Physiology-Paris, 108(1), pp.28-37.</p>
<p>(2) Sreenivasan, S. and Fiete, I., 2011. Grid cells generate an analog error-correcting code for singularly precise neural computation. Nature neuroscience, 14(10), pp.1330-1337.</p>
<p>(3) Mathis, A., Herz, A.V. and Stemmler, M., 2012. Optimal population codes for space: grid cells outperform place cells. Neural computation, 24(9), pp.2280-2317.</p>
<p>(4) Bush, D., Barry, C., Manson, D. and Burgess, N., 2015. Using grid cells for navigation. Neuron, 87(3), pp.507-520</p>
<disp-quote content-type="editor-comment">
<p>(4) Page 3 - &quot;Determinantal Point Processes (DPPs)&quot; - it is rather annoying that DPP is defined after DPP-A is defined. There ought to be a spot where the definition of DPP-A is clearly stated in a single location.</p>
</disp-quote>
<p>We agree it makes more sense to define Determinantal Point Process (DPP) before DPP-A. We have now rephrased the sentences accordingly. In the “Abstract”, the sentence now reads “Second, we propose an attentional mechanism that operates over the grid cell code using Determinantal Point Process (DPP), which we call DPP attention (DPP-A) - a transformation that ensures maximum sparseness in the coverage of that space.” We have also modified the second paragraph of the “Introduction”. The modified portion now reads “b) an attentional objective inspired from Determinantal Point Processes (DPPs), which are probabilistic models of repulsion arising in quantum physics [1], to attend to abstract representations that have maximum variance and minimum correlation among them, over the training data. We refer to this as DPP attention or DPP-A.” Due to this change, we removed the last sentence of the fifth paragraph of the “Introduction”.</p>
<p>(1) Macchi, O., 1975. The coincidence approach to stochastic point processes. Advances in Applied Probability, 7(1), pp.83-122.</p>
<disp-quote content-type="editor-comment">
<p>(5) Page 3 - &quot;the inference module R&quot; - there should be some discussion about how this component using LSTM or transformers could relate to the function of actual brain regions interacting with entorhinal cortex. Or if there is no biological connection, they should state that this is not seen as a biological model and that only the grid cell code is considered biological.</p>
</disp-quote>
<p>While we agree that the model is not construed to be as specific about the implementation of the R module, we assume that — as a standard deep learning component — it is likely to map onto neocortical structures that interact with the entorhinal cortex and, in particular, regions of the prefrontal-posterior parietal network widely believed to be involved in abstract relational processes [1,2,3,4]. In particular, the role of the prefrontal cortex in the encoding and active maintenance of abstract information needed for task performance (such as rules and relations) has often been modeled using gated recurrent networks, such as LSTMs [5,6], and the posterior parietal cortex has long been known to support “maps” that may provide an important substrate for computing complex relations [4]. We have added some discussion about this in Section 2.2.3 of the updated manuscript.</p>
<p>(1) Waltz, J.A., Knowlton, B.J., Holyoak, K.J., Boone, K.B., Mishkin, F.S., de Menezes Santos, M., Thomas, C.R. and Miller, B.L., 1999. A system for relational reasoning in human prefrontal cortex. Psychological science, 10(2), pp.119-125.</p>
<p>(2) Christoff, K., Prabhakaran, V., Dorfman, J., Zhao, Z., Kroger, J.K., Holyoak, K.J. and Gabrieli, J.D., 2001. Rostrolateral prefrontal cortex involvement in relational integration during reasoning. Neuroimage, 14(5), pp.1136-1149.</p>
<p>(3) Knowlton, B.J., Morrison, R.G., Hummel, J.E. and Holyoak, K.J., 2012. A neurocomputational system for relational reasoning. Trends in cognitive sciences, 16(7), pp.373-381.</p>
<p>(4) Summerfield, C., Luyckx, F. and Sheahan, H., 2020. Structure learning and the posterior parietal cortex. Progress in neurobiology, 184, p.101717.</p>
<p>(5) Frank, M.J., Loughry, B. and O’Reilly, R.C., 2001. Interactions between frontal cortex and basal ganglia in working memory: a computational model. Cognitive, Affective, &amp; Behavioral Neuroscience, 1, pp.137-160.</p>
<p>(6) Braver, T.S. and Cohen, J.D., 2000. On the control of control: The role of dopamine in regulating prefrontal function and working memory. Control of cognitive processes: Attention and performance XVIII, (2000).</p>
<disp-quote content-type="editor-comment">
<p>(6) Page 4 - &quot;Learned weighting w&quot; - it is somewhat confusing to use &quot;w&quot; as that is commonly used for synaptic weights, whereas I understand this to be an attentional modulation vector with the same dimensionality as the grid cell code. It seems more similar to a neural network bias input than a weight matrix.</p>
</disp-quote>
<p>We refer to the first paragraph of our response above to the topic “Clarification of DPP-A attentional modulation” under “Major comments (Public Reviews)”, which contains our response to this issue.</p>
<disp-quote content-type="editor-comment">
<p>(7) Page 4 - &quot;parameterization of w... by two loss functions over the training set.&quot; - I realize that this has been stated here, but to emphasize the significance to a naïve reader, I think they should emphasize that the learning is entirely focused on the initial training space, and there is NO training done in the test spaces. It's very impressive that the parameterization is allowing generalization to translated or scaled spaces without requiring ANY training on the translated or scaled spaces.</p>
</disp-quote>
<p>We have added the sentence “Note that learning of parameter   occurs only over the training space and is not further modified during testing (i.e. over the test spaces)” to the updated manuscript.</p>
<disp-quote content-type="editor-comment">
<p>(8) Page 4 - &quot;The first,&quot; - This should be specific - &quot;The first loss function&quot;</p>
</disp-quote>
<p>We have changed it to “The first loss function” in the updated manuscript.</p>
<disp-quote content-type="editor-comment">
<p>(9) Page 4 - The analogy task seems rather simplistic when first presented (i.e. just a spatial translation to different parts of a space, which has already been shown to work in simulations of spatial behavior such as Erdem and Hasselmo, 2014 or Bush, Barry, Manson, Burgess, 2015). To make the connection to analogy, they might provide a brief mention of how this relates to the analogy space created by word2vec applied to traditional human verbal analogies (i.e. king-man+woman=queen).</p>
</disp-quote>
<p>We agree that the analogy task is simple, and recognize that grid cells can be used to navigate to different parts of space over which the test analogies are defined when those are explicitly specified, as shown by Erdem and Hasselmo (2014) and Bush, Barry, Manson, and Burgess (2015). However, for the analogy task, the appropriate set of grid cell embeddings must be identified that capture the same relational structure between training and test analogies to demonstrate strong OOD generalization, and that is achieved by the attentional mechanism DPP-A. As suggested by the reviewer’s comment, our analogy task is inspired by Rumelhart’s parallelogram model of analogy [1,2] (and therefore similar to traditional human verbal analogies) in as much as it involves differences (i.e A - B = C - D, where A, B, C, D are vectors in 2D space). We have now noted this in Section 2.1.1 of the updated manuscript.</p>
<p>(1) Rumelhart, D.E. and Abrahamson, A.A., 1973. A model for analogical reasoning. Cognitive Psychology, 5(1), pp.1-28.</p>
<p>(2) Mikolov, T., Chen, K., Corrado, G. and Dean, J., 2013. Efficient estimation of word representations in vector space. arXiv preprint arXiv:1301.3781.</p>
<disp-quote content-type="editor-comment">
<p>(10) Page 5 - The variable &quot;KM&quot; is a bit confusing when it first appears. It would be good to re-iterate that K and M are separate points and KM is the vector between these points.</p>
</disp-quote>
<p>We apologize for the confusion on this point. KM is meant to refer to an integer value, obtained by multiplying K and M, which is added to both dimensions of A, B, C and D, which are points in ℤ2, to translate them to a different region of the space. K is an integer value ranging from 1 to 9 and M is also an integer value denoting the size of the training region, which in our implementation is 100. We have clarified this in Section 2.1.1 of the updated manuscript.</p>
<disp-quote content-type="editor-comment">
<p>(11) Page 5 - &quot;two continuous dimensions (Constantinescu et al._)&quot; - this ought to give credit to the original study showing the abstract six-fold rotational symmetry for spatial coding (Doeller, Barry and Burgess).</p>
</disp-quote>
<p>We have now cited the original work by Doeller et al. [1] along with Constantinescu et al. (2016) in the updated manuscript after the phrase “two continuous dimensions” on page 5.</p>
<p>(1) Doeller, C.F., Barry, C. and Burgess, N., 2010. Evidence for grid cells in a human memory network. Nature, 463(7281), pp.657-661.</p>
<disp-quote content-type="editor-comment">
<p>(12) Page 6 - Np=100. This is done later, but it would be clearer if they right away stated that Np*Nf=900 in this first presentation.</p>
</disp-quote>
<p>We have now added this sentence after Np=100. “Hence Np*Nf=900, which denotes the number of grid cells.”</p>
<disp-quote content-type="editor-comment">
<p>(13) Page 6 - They provide theorem 2.1 on the determinant of the covariance matrix of the grid code, but they ought to cite this the first time this is mentioned.</p>
</disp-quote>
<p>We have cited Gilenwater et al. (2012) before mentioning theorem 2.1. The sentence just before that reads “We use the following theorem from Gillenwater et al. (2012) to construct  :”</p>
<disp-quote content-type="editor-comment">
<p>(14) Page 6 - It would greatly enhance the impact of the paper if they could give neuroscientists some sense of how the maximization of the determinant of the covariance matrix of the grid cell code could be implemented by a biological circuit. OR at least to show an example of the output of this algorithm when it is used as an inner product with the grid cell code. This would require plotting the grid cell code in the spatial domain rather than the 900 element vector.</p>
</disp-quote>
<p>We refer to our response above to the topic “Biological plausibility of DPP-A” and second, third, and fourth paragraphs of our response above to the topic “Clarification of DPP-A attentional modulation” under “Major comments (Public Reviews)”, which contain our responses to this issue.</p>
<disp-quote content-type="editor-comment">
<p>(15) Page 6 - &quot;That encode higher spatial frequencies...&quot; This seems intuitive, but it would be nice to give a more intuitive description of how this is related to the determinant of the covariance matrix.</p>
</disp-quote>
<p>We refer to the third paragraph of our response above to the topic “Clarification of DPP-A attentional modulation” under “Major comments (Public Reviews)”, which contains our response to this issue.</p>
<disp-quote content-type="editor-comment">
<p>(16) Page 7 - log of both sides... Nf is number of frequencies... Would be good to mention here that they are referring to equation 6 which is only mentioned later in the paragraph.</p>
</disp-quote>
<p>As suggested, we now refer to Equation 6 in the updated manuscript. The sentence now reads “This is achieved by maximizing the determinant of the covariance matrix over the within frequency grid cell embeddings of the training data, and Equation 6 is obtained by applying the log on both sides of Theorem 2.1, and in our case where  refers to grid cells of a particular frequency.”</p>
<disp-quote content-type="editor-comment">
<p>(17) Page 7 - Equation 6 - They should discuss how this is proposed to be implemented in brain circuits.</p>
</disp-quote>
<p>We refer to our response above to the topic “Biological plausibility of DPP-A” under “Major comments (Public Reviews)”, which contains our response to this issue.</p>
<disp-quote content-type="editor-comment">
<p>1. Page 9 - &quot;egeneralize&quot; - presumably this is a typo?</p>
</disp-quote>
<p>Yes. We have corrected it to “generalize” in the updated manuscript.</p>
<disp-quote content-type="editor-comment">
<p>(19) Page 9 - &quot;biologically plausible encoding scheme&quot; - This is valid for the grid cell code, but they should be clear that this is not valid for other parts of the model, or specify how other parts of the model such as DPP-A could be biologically plausible.</p>
</disp-quote>
<p>We refer to our response above to the topic “Biological plausibility of DPP-A” under “Major comments (Public Reviews)”, which contains our response to this issue.</p>
<disp-quote content-type="editor-comment">
<p>(20) Page 12 - Figure 7 - comparsion to one-hots or smoothed one-hots. The text should indicate whether the smoothed one-hots are similar to place cell coding. This is the most relevant comparison of coding for those knowledgeable about biological coding schemes.</p>
</disp-quote>
<p>Yes, smoothed one-hots are similar to place cell coding. We now mention this in Section 5.3 of the updated manuscript.</p>
<disp-quote content-type="editor-comment">
<p>(21) Page 12 - They could compare to a broader range of potential biological coding schemes for the overall space. This could include using coding based on the boundary vector cell coding of the space, band cell coding (one dimensional input to grid cells), or egocentric boundary cell coding.</p>
</disp-quote>
<p>We appreciate these useful suggestions, which we now mention as potentially valuable directions for future work in the second paragraph of Section 6 of the updated manuscript.</p>
<disp-quote content-type="editor-comment">
<p>(22) Page 13 - &quot;transformers are particularly instructive&quot; - They mention this as a useful comparison, but they might discuss further why a much better function is obtained when attention is applied to the system twice (once by DPP-A and then by a transformer in the inference module).</p>
</disp-quote>
<p>We refer to the last paragraph of our response above to the topic “Clarification of DPP-A attentional modulation” under “Major comments (Public Reviews)”, which contains our response to this issue.</p>
<disp-quote content-type="editor-comment">
<p>(23) Page 13 - &quot;Section 5.1 for analogy and Section 5.2 for arithmetic&quot; - it would be clearer if they perhaps also mentioned the specific figures (Figure 4 and Figure 6) presenting the results for the transformer rather than the LSTM.</p>
</disp-quote>
<p>We have now rephrased to also refer to the figures in the updated manuscript. The phrase now reads “a transformer (Figure 4 in Section 5.1 for analogy and Figure 6 in Section 5.2 for arithmetic tasks) failed to achieve the same level of OOD generalization as the network that used DPP-A.”</p>
<disp-quote content-type="editor-comment">
<p>(24) Page 14 - &quot;statistics of the training data&quot; - The most exciting feature of this paper is that learning during the training space analogies can so effectively generalize to other spaces based on the right attention DPP-A, but this is not really made intuitive. Again, they should illustrate the result of the xT w inner product to demonstrate why this work so effectively!</p>
</disp-quote>
<p>We refer to the second, third, and fourth paragraphs of our response above to the topic “Clarification of DPP-A attentional modulation” under “Major comments (Public Reviews)”, which contains our response to this issue.</p>
<disp-quote content-type="editor-comment">
<p>(25) Bibliography - Silver et al., go paper - journal name &quot;nature&quot; should be capitalized. There are other journal titles that should be capitalized. Also, I believe eLife lists family names first.</p>
</disp-quote>
<p>We have made the changes to the bibliography of the updated manuscript suggested by the reviewer.</p>
</body>
</sub-article>
</article>