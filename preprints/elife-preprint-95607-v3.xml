<?xml version="1.0" ?><!DOCTYPE article PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Archiving and Interchange DTD v1.3 20210610//EN"  "JATS-archivearticle1-mathml3.dtd"><article xmlns:ali="http://www.niso.org/schemas/ali/1.0/" xmlns:xlink="http://www.w3.org/1999/xlink" article-type="research-article" dtd-version="1.3" xml:lang="en">
<front>
<journal-meta>
<journal-id journal-id-type="nlm-ta">elife</journal-id>
<journal-id journal-id-type="publisher-id">eLife</journal-id>
<journal-title-group>
<journal-title>eLife</journal-title>
</journal-title-group>
<issn publication-format="electronic" pub-type="epub">2050-084X</issn>
<publisher>
<publisher-name>eLife Sciences Publications, Ltd</publisher-name>
</publisher>
</journal-meta>
<article-meta>
<article-id pub-id-type="publisher-id">95607</article-id>
<article-id pub-id-type="doi">10.7554/eLife.95607</article-id>
<article-id pub-id-type="doi" specific-use="version">10.7554/eLife.95607.3</article-id>
<article-version-alternatives>
<article-version article-version-type="publication-state">reviewed preprint</article-version>
<article-version article-version-type="preprint-version">1.3</article-version>
</article-version-alternatives>
<article-categories><subj-group subj-group-type="heading">
<subject>Neuroscience</subject>
</subj-group>
</article-categories><title-group>
<article-title>ElectroPhysiomeGAN: Generation of Biophysical Neuron Model Parameters from Recorded Electrophysiological Responses</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">http://orcid.org/0000-0002-5597-5142</contrib-id>
<name>
<surname>Kim</surname>
<given-names>Jimin</given-names>
</name>
<xref ref-type="aff" rid="a1">1</xref>
</contrib>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">http://orcid.org/0000-0003-0419-3543</contrib-id>
<name>
<surname>Peng</surname>
<given-names>Minxian</given-names>
</name>
<xref ref-type="aff" rid="a3">3</xref>
</contrib>
<contrib contrib-type="author">
<name>
<surname>Chen</surname>
<given-names>Shuqi</given-names>
</name>
<xref ref-type="aff" rid="a3">3</xref>
</contrib>
<contrib contrib-type="author" corresp="yes">
<contrib-id contrib-id-type="orcid">http://orcid.org/0000-0002-9232-1420</contrib-id>
<name>
<surname>Liu</surname>
<given-names>Qiang</given-names>
</name>
<xref ref-type="aff" rid="a3">3</xref>
<email>qiangliuemail@gmail.com</email>
</contrib>
<contrib contrib-type="author" corresp="yes">
<contrib-id contrib-id-type="orcid">http://orcid.org/0000-0002-3136-4531</contrib-id>
<name>
<surname>Shlizerman</surname>
<given-names>Eli</given-names>
</name>
<xref ref-type="aff" rid="a1">1</xref>
<xref ref-type="aff" rid="a2">2</xref>
<email>shlizee@uw.edu</email>
</contrib>
<aff id="a1"><label>1</label><institution-wrap><institution-id institution-id-type="ror">https://ror.org/00cvxb145</institution-id><institution>Department of Electrical and Computer Engineering, University of Washington</institution></institution-wrap>, <city>Seattle</city>, <country country="US">United States</country></aff>
<aff id="a2"><label>2</label><institution-wrap><institution-id institution-id-type="ror">https://ror.org/00cvxb145</institution-id><institution>Department of Applied Mathematics, University of Washington</institution></institution-wrap>, <city>Seattle</city>, <country country="US">United States</country></aff>
<aff id="a3"><label>3</label><institution-wrap><institution-id institution-id-type="ror">https://ror.org/03q8dnn23</institution-id><institution>Department of Neuroscience, City University of Hong Kong</institution></institution-wrap>, <city>Hong Kong</city>, <country country="HK">Hong Kong</country></aff>
</contrib-group>
<contrib-group content-type="section">
<contrib contrib-type="editor">
<name>
<surname>Bhalla</surname>
<given-names>Upinder Singh</given-names>
</name>
<role>Reviewing Editor</role>
<aff>
<institution-wrap>
<institution>National Centre for Biological Sciences</institution>
</institution-wrap>
<city>Bangalore</city>
<country country="IN">India</country>
</aff>
</contrib>
<contrib contrib-type="senior_editor">
<name>
<surname>Poirazi</surname>
<given-names>Panayiota</given-names>
</name>
<role>Senior Editor</role>
<aff>
<institution-wrap>
<institution>FORTH Institute of Molecular Biology and Biotechnology</institution>
</institution-wrap>
<city>Heraklion</city>
<country country="GR">Greece</country>
</aff>
</contrib>
</contrib-group>
<author-notes>
<fn fn-type="coi-statement"><p>Competing interests: No competing interests declared</p></fn>
</author-notes>
<pub-date date-type="original-publication" iso-8601-date="2024-06-13">
<day>13</day>
<month>06</month>
<year>2024</year>
</pub-date>
<pub-date date-type="update" iso-8601-date="2025-08-21">
<day>21</day>
<month>08</month>
<year>2025</year>
</pub-date>
<volume>13</volume>
<elocation-id>RP95607</elocation-id>
<history>
<date date-type="sent-for-review" iso-8601-date="2024-01-29">
<day>29</day>
<month>01</month>
<year>2024</year>
</date>
</history>
<pub-history>
<event>
<event-desc>Preprint posted</event-desc>
<date date-type="preprint" iso-8601-date="2023-12-20">
<day>20</day>
<month>12</month>
<year>2023</year>
</date>
<self-uri content-type="preprint" xlink:href="https://doi.org/10.1101/2023.12.19.572452"/>
</event>
<event>
<event-desc>Reviewed preprint v1</event-desc>
<date date-type="reviewed-preprint" iso-8601-date="2024-06-13">
<day>13</day>
<month>06</month>
<year>2024</year>
</date>
<self-uri content-type="reviewed-preprint" xlink:href="https://doi.org/10.7554/eLife.95607.1"/>
<self-uri content-type="editor-report" xlink:href="https://doi.org/10.7554/eLife.95607.1.sa2">eLife assessment</self-uri>
<self-uri content-type="referee-report" xlink:href="https://doi.org/10.7554/eLife.95607.1.sa1">Reviewer #1 (Public Review):</self-uri>
<self-uri content-type="referee-report" xlink:href="https://doi.org/10.7554/eLife.95607.1.sa0">Reviewer #2 (Public Review):</self-uri>
</event>
<event>
<event-desc>Reviewed preprint v2</event-desc>
<date date-type="reviewed-preprint" iso-8601-date="2025-02-13">
<day>13</day>
<month>02</month>
<year>2025</year>
</date>
<self-uri content-type="reviewed-preprint" xlink:href="https://doi.org/10.7554/eLife.95607.2"/>
<self-uri content-type="editor-report" xlink:href="https://doi.org/10.7554/eLife.95607.2.sa3">eLife Assessment</self-uri>
<self-uri content-type="referee-report" xlink:href="https://doi.org/10.7554/eLife.95607.2.sa2">Reviewer #1 (Public review):</self-uri>
<self-uri content-type="referee-report" xlink:href="https://doi.org/10.7554/eLife.95607.2.sa1">Reviewer #2 (Public review):</self-uri>
<self-uri content-type="author-comment" xlink:href="https://doi.org/10.7554/eLife.95607.2.sa0">Author response:</self-uri>
</event>
</pub-history>
<permissions>
<copyright-statement>© 2024, Kim et al</copyright-statement>
<copyright-year>2024</copyright-year>
<copyright-holder>Kim et al</copyright-holder>
<ali:free_to_read/>
<license xlink:href="https://creativecommons.org/licenses/by/4.0/">
<ali:license_ref>https://creativecommons.org/licenses/by/4.0/</ali:license_ref>
<license-p>This article is distributed under the terms of the <ext-link ext-link-type="uri" xlink:href="https://creativecommons.org/licenses/by/4.0/">Creative Commons Attribution License</ext-link>, which permits unrestricted use and redistribution provided that the original author and source are credited.</license-p>
</license>
</permissions>
<self-uri content-type="pdf" xlink:href="elife-preprint-95607-v3.pdf"/>
<abstract>
<title>Abstract</title>
<p>Recent advances in connectomics, biophysics, and neuronal electrophysiology warrant modeling of neurons with further details in both network interaction and cellular dynamics. Such models may be referred to as ElectroPhysiome, as they incorporate the connectome and individual neuron electrophysiology to simulate neuronal activities. The nervous system of <italic>C. elegans</italic> is considered a viable framework for such ElectroPhysiome studies due to advances in connectomics of its somatic nervous system and electrophysiological recordings of neuron responses. In order to achieve a simulated ElectroPhysiome, the set of parameters involved in modeling individual neurons need to be estimated from electrophysiological recordings. Here, we address this challenge by developing a deep generative estimation method called ElectroPhysiomeGAN (EP-GAN), which once trained, can instantly generate parameters associated with the Hodgkin-Huxley neuron model (HH-model) for multiple neurons with graded potential response. The method combines Generative Adversarial Network (GAN) architecture with Recurrent Neural Network (RNN) Encoder and can generate an extensive number of parameters (&gt;170) given the neuron’s membrane potential responses and steady-state current profiles. We validate our method by estimating HH-model parameters for 200 simulated neurons with graded membrane potential followed by 9 experimentally recorded neurons (where 6 of them newly recorded) in the nervous system of <italic>C. elegans</italic>. Comparison of EP-GAN with existing estimation methods shows EP-GAN advantage in the accuracy of estimated parameters and inference speed for both small and large number of parameters being inferred. In addition, the architecture of EP-GAN permits input with arbitrary clamping protocols, allowing inference of parameters even when partial membrane potential and steady-state currents profile are given as inputs. EP-GAN is designed to leverage the generative capability of GAN to align with the dynamical structure of HH-model, and thus able to achieve such performance.</p>
</abstract>
<custom-meta-group>
<custom-meta specific-use="meta-only">
<meta-name>publishing-route</meta-name>
<meta-value>prc</meta-value>
</custom-meta>
</custom-meta-group>
</article-meta>
<notes>
<fn-group content-type="summary-of-updates">
<title>Summary of Updates:</title>
<fn fn-type="update"><p>Major revisions on Result and Methods section to address following aspects from the previous version:
1. Transient responses
Made improvements to the training data generation and architecture of EP-GAN to improve its overall accuracy with predicted membrane potential responses. (Methods section, page 15)
2. RMSE time range choice for membrane potential baselines
Supplemented the membrane potential regression loss with errors computed for 3 intervals (Figure 2, 3, Table S2, S3).
3. Introducing a richer set of metrics than RMSE
Added ground truth vs predicted steady-state current responses plots into the main manuscript alongside with comparisons of membrane potential responses (Table 1,2,3, Figure 5, Table, S1, S2, S3)
4. Better comparison with existing methods
Supplemented the optimization setup for existing methods (GDE3, NSDE, DEMO, and NSGA2) by incorporating steady-state response constraints as the initial selection process. Also expanded the testing scenarios by evaluating all methods w.r.t. both small and large HH-model estimation.</p></fn>
</fn-group>
</notes>
</front>
<body>
<sec id="s1">
<title>Introduction</title>
<p>Models of the nervous system aim to achieve biologically detailed simulations of large-scale neuronal activity through the incorporation of both structural connectomes (connectivity maps) and individual neural dynamics. The nervous system of <italic>Caenorhabditis elegans</italic> (<italic>C. elegans</italic>) is considered a framework for such a model as the connectome of its somatic nervous system for multiple types of interaction is mapped [<xref ref-type="bibr" rid="c1">1</xref>, <xref ref-type="bibr" rid="c2">2</xref>, <xref ref-type="bibr" rid="c3">3</xref>]. In addition to the connectome, advances in electrophysiological methodology allow the recording of whole-cell responses of individual neurons. These advances provide biophysically relevant details of individual neuro-dynamical properties and warrant a type of model for the <italic>C. elegans</italic> nervous system incorporating both the connectomes and individual biophysical processes of neurons. Such a model could be referred to as <italic>ElectroPhysiome</italic>, as it incorporates a layer of individual neural dynamics on top of the layer of inter-cellular interactions facilitated by the connectome.</p>
<p>The development of nervous system models that are further biophysically descriptive for each neuron, i.e., modeling neurons using the Hodgkin-Huxley type equations (HH-model), requires fitting a large number of parameters associated with ion channels found in the system. For a typical single neuron, these parameters could be tuned via local optimizations of individual ion channel parameters estimated separately to fit their respective <italic>in-vivo</italic> channel recordings such as activation/inactivation curves [<xref ref-type="bibr" rid="c4">4</xref>, <xref ref-type="bibr" rid="c5">5</xref>, <xref ref-type="bibr" rid="c6">6</xref>, <xref ref-type="bibr" rid="c7">7</xref>, <xref ref-type="bibr" rid="c8">8</xref>, <xref ref-type="bibr" rid="c9">9</xref>]. Such method requires multiple experiments to collect each channel data and when such experiments are infeasible, the parameters are often estimated through hand-tuning. In the context of developing the ElectroPhysiome of <italic>C. elegans</italic>, the method would have to model approximately 300 neurons each including an order of hundreds of parameters associated with up to 15 to 20 ionic current terms (with some of them having unknown ion channel composition), which would require large experimental studies [<xref ref-type="bibr" rid="c7">7</xref>]. Furthermore, the fitted model may not be the unique solution as different HH-parameters can produce similar neuron activity [<xref ref-type="bibr" rid="c10">10</xref>, <xref ref-type="bibr" rid="c11">11</xref>, <xref ref-type="bibr" rid="c12">12</xref>, <xref ref-type="bibr" rid="c13">13</xref>]. As these limitations also apply for general neuron modeling tasks beyond <italic>C. elegans</italic> neurons, there has been an increasing search for alternative fitting methods requiring less experimental data and manual interventions.</p>
<p>A promising direction in associating model parameters with neurons has been the simultaneous estimation of all parameters of an individual neuron given only electrophysiological responses of cells, such as membrane potential responses and steady-state current profiles. Such an approach requires significantly less experimental data per neuron and offers more flexibility with respect to trainable parameters. The primary aim of this approach is to model macroscopic cell behaviors in an automated fashion. Indeed, several methods adopting the approach have been introduced. Buhry et al 2012 and Laredo et al 2022 utilized the Differential Evolution (DE) method to simultaneously estimate the parameters of a 3-channel HH-model given a whole-cell membrane potential responses recording [<xref ref-type="bibr" rid="c14">14</xref>, <xref ref-type="bibr" rid="c15">15</xref>]. Naudin et al 2022 further developed the DE approach and introduced the Multi-objective Differential Evolution (DEMO) method to estimate 22 HH-parameters of 3 non-spiking neurons in <italic>C. elegans</italic> given their whole-cell membrane potential responses and steady-state current profiles [<xref ref-type="bibr" rid="c16">16</xref>]. The study was a significant step toward modeling whole-cell behaviors of <italic>C. elegans</italic> neurons in a systematic manner. From a statistical standpoint, Wang et al 2022 used the Markov-Chain-Monte-Carlo method to obtain the posterior distribution of channel parameters for HH-models featuring 3 and 8 ion channels (2 and 9 parameters respectively) given the simulated membrane potential responses data [<xref ref-type="bibr" rid="c17">17</xref>]. From an analytic standpoint, Valle et al 2022 suggested an iterative gradient descent based method that directly manipulates HH-model to infer 3 conductance parameters and 3 exponents of activation functions given the measurements of membrane potential responses [<xref ref-type="bibr" rid="c18">18</xref>]. Recent advances in machine learning gave rise to deep learning based methods which infer steady-state activation functions and posterior distributions of 3-channel HH-model parameters inferred by an artificial neural network model given the membrane potential responses data [<xref ref-type="bibr" rid="c19">19</xref>, <xref ref-type="bibr" rid="c20">20</xref>].</p>
<p>While these methods suggest that simultaneous parameter estimation from macroscopic cell data is indeed possible through a variety of techniques, it is largely unclear whether they can be extended to fit more detailed HH-models featuring a large number of channels and parameters (e.g., <italic>C. elegans</italic> neurons) [<xref ref-type="bibr" rid="c7">7</xref>]. Furthermore, for most of the above methods, the algorithms require an independent (from scratch) optimization process for fitting each individual neuron, making them difficult to scale up the task toward a large number of neurons.</p>
<p>Here we propose a new machine learning approach that aims to address these aspects for the class of non-spiking neurons, which constitute the majority of neurons in <italic>C. elegans</italic> nervous system [<xref ref-type="bibr" rid="c21">21</xref>]. Specifically, we develop a deep generative neural network model (GAN) combined with a recurrent neural network (RNN) encoder called ElectroPhysiomeGAN (EP-GAN), which directly maps electrophysiological recordings of a neuron, e.g., membrane potential responses and steady-state current profiles, to HH-model parameters of arbitrary dimensions (<xref rid="fig1" ref-type="fig">Figure 1</xref>). EP-GAN can be trained with simulation data informed by a generic HH-model encompassing a large set of arbitrary ionic current terms and thus can generalize its modeling capability to multiple neurons. Unlike typical GAN architecture trained solely with adversarial losses, we propose to implement additional regression loss for reconstructing the given membrane potential responses and current profiles from generated parameters, thus improving the accuracy of the generative model. In addition, due to the RNN component of EP-GAN, the approach supports input data with missing features such as incomplete membrane potential responses and current profiles.</p>
<fig id="fig1" position="float" fig-type="figure">
<label>Figure 1:</label>
<caption><title>Estimation of HH-model parameters from membrane potential and steady-state current profiles.</title>
<p>Given the membrane potential responses (V) and steady-state current profiles (IV) of a neuron, the task is to predict biophysical parameters of Hodgkin-Huxley type neuron model (Left). We use Encoder-Generator approach to predict the parameters (Right)</p></caption>
<graphic xlink:href="572452v3_fig1.tif" mimetype="image" mime-subtype="tiff"/>
</fig>
<p>We validate our method to estimate HH-model parameters of 200 simulated non-spiking neurons followed by applying it to three previously recorded non-spiking neurons of <italic>C. elegans</italic>, namely RIM, AFD, and AIY. Studies have shown that membrane potential responses of these neurons can be well modeled with typical HH-model formulations with 22 parameters [<xref ref-type="bibr" rid="c16">16</xref>, <xref ref-type="bibr" rid="c22">22</xref>]. We show that when trained with a more detailed HH-model consisting of 16 ionic current terms resulting in</p>
<p>175 trainable parameters, EP-GAN can predict parameters reproducing their membrane potential responses with higher accuracy in the reconstruction of membrane potential with significantly faster inference speed than existing algorithms such as Multi-Objective DE and Genetic Algorithms. Through ablation studies on input data, we show that EP-GAN retains its prediction capability when provided with incomplete membrane potential responses and steady-state current profiles. We also perform ablation studies on the model architecture components to elucidate each component’s contributions toward the accuracy of the predicted parameters. To further test EP-GAN, we estimate HH-model parameters for 6 newly recorded non-spiking <italic>C. elegans</italic> neurons: AWB, AWC, URX, RIS, DVC, and HSN, whose membrane potential responses were not previously modeled.</p>
<p>Our results suggest that EP-GAN can learn a translation from electrophysiologically recorded responses and propose projections of them to parameter space. EP-GAN method is currently limited to non-spiking neurons in <italic>C. elegans</italic> as it was designed and trained with HH-model describing the ion channels of these neurons. EP-GAN applications can be potentially extended toward resolving neuron parameters in other organisms since non-spiking neurons are found within animals across different species [<xref ref-type="bibr" rid="c23">23</xref>, <xref ref-type="bibr" rid="c24">24</xref>, <xref ref-type="bibr" rid="c25">25</xref>, <xref ref-type="bibr" rid="c26">26</xref>, <xref ref-type="bibr" rid="c27">27</xref>, <xref ref-type="bibr" rid="c28">28</xref>, <xref ref-type="bibr" rid="c29">29</xref>, <xref ref-type="bibr" rid="c30">30</xref>].</p>
</sec>
<sec id="s2">
<title>Results</title>
<p>We evaluate EP-GAN with respect to 4 existing evolutionary algorithms introduced for general parameter estimation: NSGA2, DEMO, GDE3, and NSDE. Specifically, NSGA2 is a variant of the Genetic Algorithm that uses a non-dominated sorting survival strategy, and is a commonly used benchmark algorithm for multiobjective optimization problems that include HH model fitting [<xref ref-type="bibr" rid="c31">31</xref>, <xref ref-type="bibr" rid="c32">32</xref>, <xref ref-type="bibr" rid="c33">33</xref>]. DEMO, GDE3, and NSDE are variants of multi-objective differential evolution (DE) algorithms that combine DE mutation with pareto-based ranking and crowding distance sorting applied in NSGA2’s survival strategy [<xref ref-type="bibr" rid="c34">34</xref>, <xref ref-type="bibr" rid="c35">35</xref>, <xref ref-type="bibr" rid="c36">36</xref>]. These methods have been proposed as more effective methods than direct DE for estimation of HH-model parameters [<xref ref-type="bibr" rid="c16">16</xref>, <xref ref-type="bibr" rid="c37">37</xref>, <xref ref-type="bibr" rid="c38">38</xref>, <xref ref-type="bibr" rid="c39">39</xref>]. In particular, DEMO has been successfully applied to estimate HH-model parameters for non-spiking neurons in <italic>C. elegans</italic> [<xref ref-type="bibr" rid="c16">16</xref>]. All 4 methods support multi-objective optimization over large parameter space allowing them to have similar setups as EP-GAN. All 4 methods were implemented in Python where DEMO uses the algorithm proposed in [<xref ref-type="bibr" rid="c16">16</xref>] whereas NSGA2, GDE3 and NSDE were implemented using Pymoo package [<xref ref-type="bibr" rid="c40">40</xref>].</p>
<p>For the HH-model to be estimated, we use the formulation introduced in [<xref ref-type="bibr" rid="c7">7</xref>, <xref ref-type="bibr" rid="c41">41</xref>]. The model features 16 ion channels that were found in <italic>C. elegans</italic> and other organisms expressing homologous channels and is considered the most detailed neuron model for the organism. The model has a total of <bold>203</bold> parameters, of which we identify 175 of them have approximate ranges with lower and upper bounds that can be inferred from the literature [<xref ref-type="bibr" rid="c8">8</xref>, <xref ref-type="bibr" rid="c22">22</xref>, <xref ref-type="bibr" rid="c42">42</xref>]. We thus target these 175 parameters as trainable parameters for all methods. For a detailed list of all 203 parameters included in the model and 175 parameters used for training, see [<xref ref-type="bibr" rid="c41">41</xref>] and the included table <italic>predicted parameters</italic> in supplementary files.</p>
<sec id="s2a">
<title>Predictions on simulated neurons</title>
<p>We first validate EP-GAN by training and testing using simulated neurons. Each simulated neuron training sample consists of two inputs: i.) Simulated membrane potential traces concatenated with associated external stimuli traces and ii.) Steady-state currents across 18 voltage points. For each neuron, the output is the set of 175 HH-parameters to be inferred. Each membrane potential trace is simulated for 15 seconds for a given stimulus according to current-clamp protocol where the stimulation is applied for 5 seconds at [<xref ref-type="bibr" rid="c5">5</xref>, <xref ref-type="bibr" rid="c10">10</xref>] seconds and no stimulation is applied at <italic>t</italic> = [0, 5) and <italic>t</italic> = (10, 15]. These time intervals are chosen to ensure sufficient stabilization periods before and after stimulation. For the membrane potential input, the responses during <italic>t</italic> = (4, 11) interval are used consistent with the time interval used by experimental recordings. Similarly, steady-state currents are computed across 18 voltage states according to voltage-clamp protocol (see <xref rid="tbl4" ref-type="table">Table 4</xref> for detailed current/voltage clamp protocols used for simulated neurons). The output HH-parameters are of the simulated neurons chosen randomly from lower and upper bounds as previously described. For training EP-GAN, we simulate a total of 32,000 (32k) neurons where EP-GAN achieves both good predictive performance and training time. Specifically, 32k is a training data size in which membrane potential errors from the test set are within the mean RMSE recording error (<italic>∼</italic> 4.8mV, averaged over pre-, mid-, post-activation periods) obtained from experimental neurons with multiple membrane potential recording data. For more details on generating simulated neuron training samples, see <italic>Generating Training Data</italic> under the <italic>Methods</italic> section.</p>
<p>To initially test EP-GAN performance, we evaluate EP-GAN predicted parameters for 200 simulated neurons outside of the training set (test set). To emulate <italic>C. elegans</italic>’ neuronal diversity, neurons in test set are divided into 3 response types - i) Transient outward rectifier type, ii) Outward rectifier type, and iii) Bistable type - that are currently found in non-spiking neurons of <italic>C. elegans</italic> according to their steady-state responses (<xref rid="fig2" ref-type="fig">Figure 2</xref>) [<xref ref-type="bibr" rid="c8">8</xref>, <xref ref-type="bibr" rid="c16">16</xref>]. For a given neuron being evaluated, EP-GAN predicted HH-parameters are obtained as follows: For each training epoch, EP-GAN generates a set of HH-parameters for the neuron and at the end of the training, the parameter set which achieved the lowest Root Mean Square Error (RMSE) of membrane potential responses averaged across three time intervals - pre-activation (4, 5] seconds, mid-activation [<xref ref-type="bibr" rid="c5">5</xref>, <xref ref-type="bibr" rid="c10">10</xref>] seconds, post-activation [10, 11) seconds - with respect to ground truths is reported (detailed descriptions of its calculation provided in supplementary and <xref rid="fig5" ref-type="fig">Figure 5A</xref>). In the case of multiple <italic>N</italic> -neurons being evaluated, the same procedure is followed except EP-GAN generates <italic>N</italic> -parameter sets in parallel at each epoch. Such multi-inference is possible due to EP-GAN being a neural network, where parallel processing of inputs can be done with minimal impact on inference speed. Using these procedures, EP-GAN predicted HH-parameters result in mean membrane potential RMSE error of <bold>2.37mV</bold> for test set (See <xref rid="fig2" ref-type="fig">Figure 2</xref> for representative samples and Table S1 for the detailed breakdown of the errors). These errors are within the mean recording RMSE error of 4.8mV obtained from experimental neurons and their distributions were skewed uni-modal type where the majority of the errors fall within 4mV (Figure S1).</p>
<fig id="fig2" position="float" fig-type="figure">
<label>Figure 2:</label>
<caption><title>EP-GAN (32k) predictions on simulated neurons.</title>
<p><bold>A</bold>: EP-GAN predicted membrane potential traces and steady-state currents (Red) overlaid on top of groundtruth counterparts (black) for Transient outward rectifier neuron type. <bold>B</bold>: Outward rectifier neuron type. <bold>C</bold>: Bistable neuron type.</p></caption>
<graphic xlink:href="572452v3_fig2.tif" mimetype="image" mime-subtype="tiff"/>
</fig>
<fig id="fig5" position="float" fig-type="figure">
<label>Figure 5:</label>
<caption><title>Bar plot showing the mean RMSE errors for membrane potential responses (pre-, mid-, post-activation periods, averaged error) and steady-state currents for 9 experimental neurons.</title>
<p><bold>A</bold>: Membrane potential responses (left) and steady-state currents (right) diagrams showing the time and voltage intervals of which the RMSE errors are computed. <bold>B</bold>: Bar plots showing RMSE errors for membrane potential responses and steady-state currents for small HH-model scenarios (Top) and Large HH-model prediction scenarios (Bottom). All methods use 32k sample size for both scenarios.</p></caption>
<graphic xlink:href="572452v3_fig5.tif" mimetype="image" mime-subtype="tiff"/>
</fig>
</sec>
<sec id="s2b">
<title>Predictions on experimental neurons</title>
<p>We apply EP-GAN trained and tested on simulated data to predict HH-parameters for 9 experimentally recorded non-spiking neurons found in <italic>C. elegans</italic> - RIM, AFD, AIY, AWB, AWC, URX, RIS, DVC, HSN. Among these neurons, AWB, AWC, URX, RIS, DVC, HSN are novel recording data and were not previously modeled, whereas RIM, AIY and AFD neurons are publicly available and their modeling descriptions were elaborated by previous works [<xref ref-type="bibr" rid="c16">16</xref>, <xref ref-type="bibr" rid="c22">22</xref>, <xref ref-type="bibr" rid="c43">43</xref>]. Similar to prediction scenario on simulated neurons, we categorize experimental neurons into different response types according to their steady-state current responses. In particular, we classify (RIM, DVN, HSN) as transient outward rectifier type, (AIY, URX, RIS) as Outward rectifier type, and (AFD, AWB, AWC) as Bistable type.</p>
<p>We compare the performance of EP-GAN with 4 existing parameter inference methods: NSGA2, DEMO, GDE3, and NSDE. Unlike EP-GAN which can optimize multiple neurons in parallel, these are evolutionary methods where the optimization is done <bold>from scratch</bold> for each neuron. We therefore evaluate their respective performances relative to EP-GAN by normalizing on the <italic>total number of simulated neuron samples</italic> during the entire optimization task. Specifically, for all methods, we set the maximum number of neuron samples used during optimization to equal sizes. e.g., if EP-GAN is trained with 32k neuron samples to predict 9 neurons, NSGA2, DEMO, GDE3, and NSDE are each allocated with up to 3.5k samples during the search phase of HH-parameters for each neuron, thus adding up to a total of <italic>∼</italic> 32k samples for all 9 neurons. To test how the performance of each method scales with the amount of samples during optimization, we evaluate each method with both 32k and 64k total neuron samples.</p>
<p>The parameter selection process for NSGA2, DEMO, GDE3 and NSDE is as follows: During the search phase for each neuron, the parameter set candidates (i.e., population) are recorded at each iteration. At the end of the search phase, steady-state current profile of each parameter set candidate is evaluated with respect to the experimentally known bifurcation structure (i.e., <italic>dI/dV</italic>) of the neuron being inferred (e.g., bistable type). Upon evaluation, only the parameter sets satisfying the <italic>dI/dV</italic> bound constraints (<italic>∼</italic> 98% confidence interval) are kept. Such initial selection process is similar to the ones employed by previous methods utilizing evolutionary algorithms [<xref ref-type="bibr" rid="c16">16</xref>]. The <italic>dI/dV</italic> bound constraints are also used for generating EP-GAN training data (see <italic>Generating Training Data</italic> in <italic>Methods</italic> for more detail). The final parameter set is then chosen by selecting the one with the lowest RMSE membrane potential responses error averaged across pre-, mid- and post-activation periods identical to that of EP-GAN parameter selection process. For Multi-objective DE methods (DEMO, GDE3 and NSDE2), we follow the same configurations used in the literature to set their optimization scheme [<xref ref-type="bibr" rid="c16">16</xref>]. Specifically, we set crossover parameter CR and scale factor F to 0.3 and 1.5 respectively. For all 4 methods, NP (population size) is set to 600 with total 6 and 12 iterations (i.e., <italic>∼</italic>3.6<italic>k</italic> and <italic>∼</italic>6.2<italic>k</italic> samples per neuron for 32k and 64k total neuron samples respectively). For all methods, loss functions identical to the ones used for EP-GAN training (mean absolute errors, see <italic>Methods</italic> section for detail) are used for calculating the errors for membrane potential responses and steady-state currents for multi-objective optimization.</p>
</sec>
<sec id="s2c">
<title>Small HH-model scenarios (47 parameters)</title>
<p>We first test EP-GAN and existing methods with a “smaller” version of HH-model of 47 parameters where the individual channel parameters (<italic>n</italic> = 129) are frozen to default values given by [<xref ref-type="bibr" rid="c41">41</xref>]. The considered parameters consist of 16 conductance parameters of each channel (<italic>g</italic><sub><italic>Ch</italic></sub>), 4 reversal potentials for calcium, potassium, sodium and leak channels (<italic>V</italic><sub><italic>Ca</italic></sub>, <italic>V</italic><sub><italic>K</italic></sub>, <italic>V</italic><sub><italic>Na</italic></sub>, <italic>V</italic><sub><italic>L</italic></sub>), 1 cell capacitance <italic>C</italic>, and 26 initial conditions for membrane potential <italic>V</italic><sub>0</sub> and channel activation variables (<italic>m</italic><sub>0</sub>, <italic>h</italic><sub>0</sub>). Such a parameter set is commonly targeted when fitting HH-models for individual neurons [<xref ref-type="bibr" rid="c7">7</xref>, <xref ref-type="bibr" rid="c41">41</xref>]. For all methods, we test both 32k and 64k total sample sizes for the inference of 9 experimental neurons. <xref rid="fig3" ref-type="fig">Figure 3</xref> illustrates that EP-GAN can reconstruct membrane potential responses close to ground truth responses. Indeed, upon inspecting the RMSE error for membrane potential responses (averaged over pre-, mid- and post-activation), EP-GAN (32k) median error of 2.5<italic>mV</italic> over 9 neurons is <italic>∼</italic> 50% lower than that of NSGA2 (64k) 4.3<italic>mV</italic> followed by DEMO (64k) 4.8<italic>mV</italic>, NSDE (64k) 5.5<italic>mV</italic> and GDE3 (64k) 6.0<italic>mV</italic> (<xref rid="tbl1" ref-type="table">Table 1</xref>, Table S2, <xref rid="fig5" ref-type="fig">Figure 5B</xref>). Among all 9 neurons being inferred, EP-GAN (32k) showed the best accuracy for HSN with 1.6<italic>mV</italic> and lowest accuracy for AFD with 4.9<italic>mV</italic>. With EP-GAN (64k), the median error further decreased (2.5<italic>mV →</italic> 2.4<italic>mV</italic>) where URX and RIS errors improved by 0.3<italic>mV</italic> and AFD error improved by 1.5<italic>mV</italic> over their 32k counterparts. Interestingly we note that the high accuracy of EP-GAN in predicting membrane potential is not necessarily complemented with steady-state currents (<xref rid="tbl1" ref-type="table">Table 1</xref>, <xref rid="fig5" ref-type="fig">Figure 5B</xref>). EP-GAN’s overall steady-state currents errors are generally higher than those of existing methods. A possible reason could be that the majority of these errors stems from lower and upper voltage ranges where the recording variations are high and thus could conflict with membrane potential responses optimization. Such competitive nature between membrane potential vs steady-state current optimizations has indeed been reported in previous works [<xref ref-type="bibr" rid="c16">16</xref>].</p>
<table-wrap id="tbl1" orientation="portrait" position="float">
<label>Table 1:</label>
<caption><title>Small HH-model scenarios RMSE errors for predicted membrane potential responses and steady-state currents.</title>
<p>Each method is tested with 32k or 64k total sample sizes where the top row shows membrane potential responses RMSE errors averaged across pre-activation, mid-activation, post-activation periods and the bottom row shows steady-state currents RMSE errors across 18 voltage values.</p></caption>
<graphic xlink:href="572452v3_tbl1.tif" mimetype="image" mime-subtype="tiff"/>
</table-wrap>
<fig id="fig3" position="float" fig-type="figure">
<label>Figure 3:</label>
<caption><title>EP-GAN (32k) Prediction on experimental neurons (small HH-model).</title>
<p><bold>A</bold>: EP-GAN predicted membrane potential traces and steady-state currents (Red) overlaid on top of groundtruth counterparts (black) for Transient outward rectifier neuron type (RIM, DVC, HSN). <bold>B</bold>: Outward rectifier neuron type (AIY, URX, RIS). <bold>C</bold>: Bistable neuron type (AFD, AWB, AWC).</p></caption>
<graphic xlink:href="572452v3_fig3.tif" mimetype="image" mime-subtype="tiff"/>
</fig>
</sec>
<sec id="s2d">
<title>Large HH-model scenarios (175 parameters)</title>
<p>We expand the domain of parameters being inferred by testing with respect to all 175 HH-model’s trainable parameters including the 47 parameters from the previous scenario + 129 channel parameters. The inclusion of channel parameters allows methods to further fine tune the HH-model. The minimum and maximum values for channel parameters are set to <italic>±</italic>50% from their default values (See <italic>Generating Training Data</italic> under <italic>Methods</italic> for more detail). Such a task introduces further challenges as the methods need to estimate <italic>×</italic>3 more parameters compared to the small HH-model scenario. From <xref rid="fig4" ref-type="fig">Figure 4</xref>, <xref rid="fig5" ref-type="fig">Figure 5B</xref>, <xref rid="tbl2" ref-type="table">Table 2</xref>, and Table S3 we see that while EP-GAN (32k) median membrane potential error increases slightly from 2.5<italic>mV</italic> to 2.7<italic>mV</italic>, its performance gaps over existing methods widen with <italic>∼</italic> 60% lower error than NSGA2 (64k) 7.5<italic>mV</italic>, followed by NSDE (64k) 8.6<italic>mV</italic> and DEMO (64k), GDE3 (64k) 10.5<italic>mV</italic>. EP-GAN trained for large HH-model also slightly improved overall steady-state current error (13.8<italic>pA →</italic> 12.4<italic>pA</italic>) alongside with membrane potential errors for RIM (3.4<italic>mV →</italic> 3.2<italic>mV</italic>) and URX (3.2<italic>mV →</italic> 3.0<italic>mV</italic>) indicating different selectivity for individual neurons for small vs large HH-model. Further increasing the sample size to 64k improved median errors of both membrane potential (2.7<italic>mV →</italic> 2.6<italic>mV</italic>) and steady-states responses (12.4<italic>pA →</italic> 8.6<italic>pA</italic>). Taken together, these results show EP-GAN predicting capabilities for HH-parameters with higher membrane potential responses accuracy and its ability to generalize to a larger parameter space with minimal performance loss.</p>
<table-wrap id="tbl2" orientation="portrait" position="float">
<label>Table 2:</label>
<caption><title>Large HH-model scenarios RMSE errors for predicted membrane potential responses and steady-state currents.</title>
<p>Each method is tested with 32k or 64k total sample sizes where the top row shows membrane potential responses RMSE errors averaged across pre-activation, mid-activation, post-activation periods and the bottom row shows steady-state currents RMSE errors across 18 voltage values.</p></caption>
<graphic xlink:href="572452v3_tbl2.tif" mimetype="image" mime-subtype="tiff"/>
</table-wrap>
<fig id="fig4" position="float" fig-type="figure">
<label>Figure 4:</label>
<caption><title>EP-GAN (32k) Prediction on experimental neurons (large HH-model).</title>
<p><bold>A</bold>: EP-GAN predicted membrane potential traces and steady-state currents (Red) overlaid on top of groundtruth counterparts (black) for Transient outward rectifier neuron type (RIM, DVC, HSN). <bold>B</bold>: Outward rectifier neuron type (AIY, URX, RIS). <bold>C</bold>: Bistable neuron type (AFD, AWB, AWC).</p></caption>
<graphic xlink:href="572452v3_fig4.tif" mimetype="image" mime-subtype="tiff"/>
</fig>
</sec>
<sec id="s2e">
<title>Ablation studies</title>
<p>EP-GAN architecture also allows its membrane potential inputs to have arbitrary current-clamp protocol due to its RNN encoder component. To test the robustness of EP-GAN when incomplete input data is given, we provide the model with membrane potential responses and steady-state current inputs with missing data points. For each membrane potential responses and current profile, the data is reduced by 25%, 50%, and 75% each. For membrane potential responses data, the ablation is done on stimulus space where a 50% reduction corresponds to removing the upper half of the membrane potential responses traces each associated with a stimulus. For steady-state current profile, we remove the first <italic>n</italic>-data points where they are instead extrapolated using linear interpolation with existing data points.</p>
<p>Our results show that EP-GAN largely preserves accuracy even when both membrane potential and steady-state current inputs are masked (<xref rid="fig6" ref-type="fig">Figure 6</xref>, <xref rid="tbl3" ref-type="table">Table 3</xref>, Figure S4 (predicted steady-state currents)). In particular, EP-GAN preserves median membrane potential error (3.3<italic>mV</italic>) up to a 50% remaining in its inputs but becomes less accurate when up to 25% input remain (3.3<italic>mV →</italic> 5.4<italic>mV</italic>). Surprisingly, AFD neuron membrane potential error is improved when only 50% of input data is considered (5.2<italic>mV →</italic> 4.5<italic>mV</italic>). These results could be attributed to the random input masking employed during EP-GAN training (see <italic>Methods</italic> section for detail), which allows EP-GAN to make robust predictions even when conditioned with varying degrees of masked inputs.</p>
<table-wrap id="tbl3" orientation="portrait" position="float">
<label>Table 3:</label>
<caption><title>Ablation studies.</title>
<p><bold>Top</bold>: membrane potential responses and steady-state current errors achieved for EP-GAN (32k) when provided with incomplete input data. <bold>Bottom</bold>: membrane potential responses and steady-state current errors achieved for EP-GAN upon using only adversarial loss (Adv) and using adversarial + current reconstruction loss (Adv + Steady state) and all three loss components (Adv + Steady state + Membrane potential)</p></caption>
<graphic xlink:href="572452v3_tbl3.tif" mimetype="image" mime-subtype="tiff"/>
</table-wrap>
<fig id="fig6" position="float" fig-type="figure">
<label>Figure 6:</label>
<caption><title>Input data ablation on EP-GAN (32k).</title>
<p><bold>Left</bold>: Reconstructed membrane potential responses for RIM, AIY and AFD when given with incomplete membrane potential responses data. Percentages in parenthesis represent the remaining portion of input membrane potential responses trajectories. <bold>Right</bold>: Reconstructed membrane potential responses for RIM, AIY, and AFD when given with incomplete steady-state current input.</p></caption>
<graphic xlink:href="572452v3_fig6.tif" mimetype="image" mime-subtype="tiff"/>
</fig>
<p>We also performed ablation studies on model architecture by removing each loss component of the Generator module, allowing us to evaluate the relative contribution of each loss to accuracy. From <xref rid="tbl3" ref-type="table">Table 3</xref> bottom, we see that removing the membrane potential loss term (V) results in a loss in performance for RIM and AIY but increase in accuracy for AFD. The result is consistent with input data ablation scenarios indicating AFD’s higher dependence on steady-state responses for good EP-GAN prediction. Upon removing the steady-state current reconstruction loss term (IV) in addition to the membrane potential reconstruction loss, we see further reduction in overall performance. These results highlight the significance of the reconstruction losses in aligning the Generator to produce the desired outputs.</p>
</sec>
<sec id="s2f">
<title>Parameter inference time</title>
<p>We also evaluate EP-GAN for its scalability by assessing its overall inference time and computational cost and comparing these to existing methods. Indeed, for estimation tasks involving many neurons, it is essential that the method is scalable so that the predictions are done within a reasonable time. In particular, for EP-GAN, the total time <italic>T</italic> needed for modeling <italic>N</italic> neurons including data generation and training time can be written as
<disp-formula id="ueqn1">
<graphic xlink:href="572452v3_ueqn1.gif" mimetype="image" mime-subtype="gif"/>
</disp-formula>
whereas for existing methods, the <italic>T</italic> (<italic>N</italic>) follows the form
<disp-formula id="ueqn2">
<graphic xlink:href="572452v3_ueqn2.gif" mimetype="image" mime-subtype="gif"/>
</disp-formula>
which increases linearly as <italic>N</italic> increases. Since <italic>T</italic><sub><italic>Inference</italic></sub> for EP-GAN is nearly instantaneous, it has a strong advantage in parameter prediction task involving multiple neurons. As an example, given a hypothetical task of modeling all 279 somatic neurons in the <italic>C. elegans</italic> nervous system, it would take DEMO, GDE3, NSDE or NSGA2 more than 44 days (assuming 7.2k samples per neuron, and our available computing environment) whereas, for EP-GAN, the process would be done within a day under a similar training setup. For a larger number of neurons, computational requirement of existing methods would grow linearly while EP-GAN would require constant time to complete the inference. Such scalability largely benefits from neural network being an inherently parallel architecture, allowing it to take multiple neuron profiles and output corresponding parameters in a single forward pass [<xref ref-type="bibr" rid="c44">44</xref>].</p>
</sec>
</sec>
<sec id="s3">
<title>Methods</title>
<p>We divide the methods section into two parts. In the first part we describe the detailed architecture of EP-GAN including its sub-modules with the simulation protocol used during training. In the second part, we describe the dataset and experimental protocol of novel neuron recording of AWB, AWC, URX, RIS, DVC, and HSN from <italic>C. elegans</italic> nervous system.</p>
<sec id="s3a">
<title>Architecture of EP-GAN</title>
<sec id="s3a1">
<title>Deep Generative Model for Parameter Prediction</title>
<p>EP-GAN receives neuronal recording data such as membrane potential responses and steady-state current profiles and generates a set of parameters that are associated with them in terms of simulating the inferred HH-model and comparing the simulated result with the inputs (<xref rid="fig1" ref-type="fig">Figure 1</xref>,<xref rid="fig7" ref-type="fig">7</xref>). We choose a deep generative model approach, specifically Generative Adversarial Network (GAN) as a base architecture of EP-GAN. The key advantage of GAN is in its ability to generate artificial data that closely resembles real data. The generative nature of GAN is advantageous for addressing the one-to-many nature of our problem, where there exists multiple parameter solutions for a given neuron recording. Indeed, several computational works attempting to solve inverse HH-model noted the ill-posed nature of the parameter solutions [<xref ref-type="bibr" rid="c5">5</xref>, <xref ref-type="bibr" rid="c10">10</xref>, <xref ref-type="bibr" rid="c11">11</xref>, <xref ref-type="bibr" rid="c12">12</xref>, <xref ref-type="bibr" rid="c13">13</xref>, <xref ref-type="bibr" rid="c18">18</xref>, <xref ref-type="bibr" rid="c45">45</xref>, <xref ref-type="bibr" rid="c46">46</xref>]. Our approach is therefore leveraging GAN to learn a <italic>domain of parameter sets</italic> compatible with neuron recording instead of mapping directly onto a single solution. GAN consists of two separate networks, Generator and Discriminator. The goal of the Generator is to generate outputs that are indistinguishable from real data whereas the Discriminator’s goal is to distinguish outputs that are generated by the generator against real data. Throughout training, the Generator and the Discriminator engage in zero-sum game until they both converge to optimal states (i.e. Nash equilibrium) [<xref ref-type="bibr" rid="c47">47</xref>]. The particular architecture we use is Wasserstein GAN with gradient penalty (WGAN-GP), a variant of GAN architecture offering more stable training and faster convergence [<xref ref-type="bibr" rid="c48">48</xref>].</p>
<fig id="fig7" position="float" fig-type="figure">
<label>Figure 7:</label>
<caption><title>Architecture of EP-GAN.</title>
<p>The architecture consists of an Encoder, Generator and Discriminator. Encoder compresses the membrane potential responses into a 1D vector (i.e., latent space) which is then concatenated with 1D steady-state current profile to be used as an input to both generator and discriminator. Generator translates the latent space vector into a vector of parameters <inline-formula><inline-graphic xlink:href="572452v3_inline25.gif" mimetype="image" mime-subtype="gif"/></inline-formula> and the Discriminator outputs a scalar measuring the similarity between generated parameters <inline-formula><inline-graphic xlink:href="572452v3_inline26.gif" mimetype="image" mime-subtype="gif"/></inline-formula> and ground truths <inline-formula><inline-graphic xlink:href="572452v3_inline27.gif" mimetype="image" mime-subtype="gif"/></inline-formula>. The Generator is trained with adversarial loss supplemented by reconstruction losses for both membrane potential responses and steady-state current profiles. The Discriminator is trained with discriminator adversarial loss only. Generator and Discriminator follow the architecture of Wasserstein GAN with gradient penalty (WGAN-GP) for more stable learning. During training, random masking is applied to input membrane potential responses which gradually decreases toward as the training continues.</p></caption>
<graphic xlink:href="572452v3_fig7.tif" mimetype="image" mime-subtype="tiff"/>
</fig>
</sec>
<sec id="s3a2">
<title>Encoder Module</title>
<p>In addition to Generator and Discriminator, we implement Encoder module which pre-processes the input membrane potential responses for Generator and Discriminator. (<xref rid="fig7" ref-type="fig">Figure 7</xref> left). Specifically, the encoder serves two roles: i) compression of membrane potential responses traces along the stimulus space, thus reducing its dimension from 2-dimensional to 1-dimensional, and ii) translation of membrane potential responses traces into a latent space encodinga meaningful internal representation for the Discriminator and Generator. The Encoder module uses Gated Recurrent Units (GRU) architecture, a variant of Recurrent Neural Network (RNN) to perform this task [<xref ref-type="bibr" rid="c49">49</xref>]. Each input sequence to a GRU cell at step <italic>k</italic> corresponds to the entire membrane potential response of size 350 (i.e., 350 time points, representing <italic>t</italic> = [4<italic>s</italic>, 11<italic>s</italic>]) concatenated with the associated stimulus trace of equal size of 350. Since GRU is agnostic to the number of steps in input sequence, such input structure allows EP-GAN to process a set of membrane potential traces with arbitrary current-clamp protocol. The output of the Encoder is a latent space vector of size 1024 encoding membrane potential responses information. The latent space vector is then concatenated with a 1D vector representing steady-state current profile which is used as an input to both Generator and Discriminator. During training, we randomly mask membrane potential traces to aid in better generalization in prediction [<xref ref-type="bibr" rid="c50">50</xref>, <xref ref-type="bibr" rid="c51">51</xref>]. Specifically, we initially set the masking rate to 75% (i.e., 75% of membrane potential traces are randomly masked) and linearly decreases to 0% toward the end of training.</p>
</sec>
<sec id="s3a3">
<title>Discriminator Module</title>
<p>The goal of the Discriminator is given the input membrane potential responses and current profiles, to distinguish generated parameters from real ground truth parameters. The Discriminator receives as input the latent space vector from Encoder concatenated with generated or ground truth parameter vector and outputs a scalar representing the relative distance between two parameter sets (<xref rid="fig7" ref-type="fig">Figure 7</xref>, <xref ref-type="disp-formula" rid="eqn1">Eqn 1</xref>). Such a quantity is called Wasserstein distance or Wasserstein loss and differs from vanilla GAN Discriminator which only outputs 0 or 1. Wasserstein loss is known to remedy several common issues that arise from vanilla GAN such as vanishing gradient and mode collapse, leading to more stable training [<xref ref-type="bibr" rid="c48">48</xref>]. To further improve the training of WGAN architecture we supplement Wasserstein loss with a gradient penalty term, which ensures that the gradients of the Discriminator’s output with respect to the input has unit norms [<xref ref-type="bibr" rid="c52">52</xref>]. This condition is called Lipschitz continuity and prevents Discriminator outputs from having large variations when there is only small variations in the inputs [<xref ref-type="bibr" rid="c52">52</xref>, <xref ref-type="bibr" rid="c53">53</xref>]. Combined together, the Discriminator is trained with the following loss:
<disp-formula id="eqn1">
<graphic xlink:href="572452v3_eqn1.gif" mimetype="image" mime-subtype="gif"/>
</disp-formula>
where <inline-formula><inline-graphic xlink:href="572452v3_inline1.gif" mimetype="image" mime-subtype="gif"/></inline-formula> and <inline-formula><inline-graphic xlink:href="572452v3_inline2.gif" mimetype="image" mime-subtype="gif"/></inline-formula> are the mean values of Discriminator outputs with respect to generated samples <inline-formula><inline-graphic xlink:href="572452v3_inline3.gif" mimetype="image" mime-subtype="gif"/></inline-formula> and real samples <inline-formula><inline-graphic xlink:href="572452v3_inline4.gif" mimetype="image" mime-subtype="gif"/></inline-formula> respectively and <inline-formula><inline-graphic xlink:href="572452v3_inline5.gif" mimetype="image" mime-subtype="gif"/></inline-formula> is the gradient penalty term modulated by <italic>λ</italic> where <inline-formula><inline-graphic xlink:href="572452v3_inline6.gif" mimetype="image" mime-subtype="gif"/></inline-formula> is the interpolation between generated and real samples with 0 <italic>≤ t ≤</italic> 1.</p>
</sec>
<sec id="s3a4">
<title>Generator Module</title>
<p>Being an adversary network of Discriminator, the goal of Generator is to fool the Discriminator by generating parameters that are indistinguishable from the real parameters. The Generator receives as input the concatenated vector from the Encoder and outputs a parameter vector (<xref rid="fig7" ref-type="fig">Figure 7</xref>). The module consists of 4 fully connected layers with layer normalization applied after the first two layers for improved model convergence [<xref ref-type="bibr" rid="c54">54</xref>]. Each parameter in the output vector is scaled between -1 and 1 which is then scaled back to the parameters’ original scales. The module is trained using 3 loss terms: i) Generator adversarial loss, ii) Membrane potential responses reconstruction loss and iii) Steady-state current reconstruction loss as follows:
<disp-formula id="eqn2">
<graphic xlink:href="572452v3_eqn2.gif" mimetype="image" mime-subtype="gif"/>
</disp-formula>
<disp-formula id="eqn3">
<graphic xlink:href="572452v3_eqn3.gif" mimetype="image" mime-subtype="gif"/>
</disp-formula>
<disp-formula id="eqn4">
<graphic xlink:href="572452v3_eqn4.gif" mimetype="image" mime-subtype="gif"/>
</disp-formula>
</p>
<fig id="fig8" position="float" fig-type="figure">
<label>Figure 8:</label>
<caption><title>Description of membrane potential responses and current reconstruction losses for the Generator.</title>
<p>Generated parameter vector <inline-formula><inline-graphic xlink:href="572452v3_inline28.gif" mimetype="image" mime-subtype="gif"/></inline-formula> is used to evaluate membrane potential responses derivatives <italic>dV/dt</italic> at <italic>n</italic> time points sampled with fixed interval given the ground truth <inline-formula><inline-graphic xlink:href="572452v3_inline29.gif" mimetype="image" mime-subtype="gif"/></inline-formula> at those time points. The evaluated membrane potential responses derivatives are then used to reconstruct <inline-formula><inline-graphic xlink:href="572452v3_inline30.gif" mimetype="image" mime-subtype="gif"/></inline-formula> using the forward integration operation <italic>∇</italic><sup>−1</sup>. The reconstructed <inline-formula><inline-graphic xlink:href="572452v3_inline31.gif" mimetype="image" mime-subtype="gif"/></inline-formula> is then compared with ground truth <inline-formula><inline-graphic xlink:href="572452v3_inline32.gif" mimetype="image" mime-subtype="gif"/></inline-formula> to evaluate the membrane potential responses reconstruction loss <inline-formula><inline-graphic xlink:href="572452v3_inline33.gif" mimetype="image" mime-subtype="gif"/></inline-formula>. Current reconstruction is computed in a similar way via evaluating the currents at defined membrane potential responses steps <italic>V</italic> given generated parameters <inline-formula><inline-graphic xlink:href="572452v3_inline34.gif" mimetype="image" mime-subtype="gif"/></inline-formula> as inputs.</p></caption>
<graphic xlink:href="572452v3_fig8.tif" mimetype="image" mime-subtype="tiff"/>
</fig>
<p>where <inline-formula><inline-graphic xlink:href="572452v3_inline7.gif" mimetype="image" mime-subtype="gif"/></inline-formula> is Generator adversarial loss which is reciprocal of the mean Discriminator outputs with respect to generated samples and <inline-formula><inline-graphic xlink:href="572452v3_inline8.gif" mimetype="image" mime-subtype="gif"/></inline-formula> and <inline-formula><inline-graphic xlink:href="572452v3_inline9.gif" mimetype="image" mime-subtype="gif"/></inline-formula> are <italic>L</italic><sub>1</sub> regression loss for reconstructed membrane potential responses and current profiles respectively. It’s important to note that <inline-formula><inline-graphic xlink:href="572452v3_inline10.gif" mimetype="image" mime-subtype="gif"/></inline-formula> and <inline-formula><inline-graphic xlink:href="572452v3_inline11.gif" mimetype="image" mime-subtype="gif"/></inline-formula> are part of Generator’s computation graph and thus force Generator to optimize them on top of adversarial loss (<xref rid="fig7" ref-type="fig">Figure 7</xref>). The composite loss function of Generator makes EP-GAN a “model-informed” GAN as HH-model itself becomes part of the training process. Such networks have shown to be more data efficient during training as they don’t rely solely on training data to learn effective strategy [<xref ref-type="bibr" rid="c55">55</xref>, <xref ref-type="bibr" rid="c56">56</xref>]. The mathematical description of membrane potential responses and current reconstruction from generated parameter set <inline-formula><inline-graphic xlink:href="572452v3_inline12.gif" mimetype="image" mime-subtype="gif"/></inline-formula> is as follows:
<disp-formula id="eqn5">
<graphic xlink:href="572452v3_eqn5.gif" mimetype="image" mime-subtype="gif"/>
</disp-formula>
Here <inline-formula><inline-graphic xlink:href="572452v3_inline13.gif" mimetype="image" mime-subtype="gif"/></inline-formula> is the right-hand-side function of HH-model which computes the membrane potential responses derivative at time <italic>t</italic> given the membrane potential responses <inline-formula><inline-graphic xlink:href="572452v3_inline14.gif" mimetype="image" mime-subtype="gif"/></inline-formula> and parameter set <inline-formula><inline-graphic xlink:href="572452v3_inline15.gif" mimetype="image" mime-subtype="gif"/></inline-formula> and <inline-formula><inline-graphic xlink:href="572452v3_inline16.gif" mimetype="image" mime-subtype="gif"/></inline-formula> is the function that evaluates neuron’s current <italic>I</italic> given the membrane potential states <inline-formula><inline-graphic xlink:href="572452v3_inline17.gif" mimetype="image" mime-subtype="gif"/></inline-formula> and parameter set <inline-formula><inline-graphic xlink:href="572452v3_inline18.gif" mimetype="image" mime-subtype="gif"/></inline-formula>. Membrane potential responses are reconstructed by first evaluating their derivatives with respect to ground truth membrane potential responses and generated parameters <inline-formula><inline-graphic xlink:href="572452v3_inline19.gif" mimetype="image" mime-subtype="gif"/></inline-formula> at regularly sampled time points. This is followed by forward integration operation <italic>∇</italic><sup>−1</sup> similar to Euler’s method to approximate <inline-formula><inline-graphic xlink:href="572452v3_inline20.gif" mimetype="image" mime-subtype="gif"/></inline-formula> at sampled time points given the initial condition <inline-formula><inline-graphic xlink:href="572452v3_inline21.gif" mimetype="image" mime-subtype="gif"/></inline-formula>:
<disp-formula id="eqn6">
<graphic xlink:href="572452v3_eqn6.gif" mimetype="image" mime-subtype="gif"/>
</disp-formula>
where <italic>h</italic> is the time interval between sampled derivatives. <inline-formula><inline-graphic xlink:href="572452v3_inline22.gif" mimetype="image" mime-subtype="gif"/></inline-formula> can be selected at any time point within the ground truth membrane potential state (e.g., pre-activation, mid-activation, post-activation) to reconstruct different membrane potential features. Notably, all computation steps consisting of forward integration process are expected to be differentiable. This is necessary to incorporate forward integration process as part of the generator network that requires full differentiability and thus trainable via back-propagation algorithm [<xref ref-type="bibr" rid="c57">57</xref>]. Computationally, we achieve this by manually implementing the forward integration process with discrete array operations that support auto-differentiation and vectorization (e.g. PyTorch Tensors) instead of simulating the membrane potential with ODE solvers [<xref ref-type="bibr" rid="c58">58</xref>]. The variable <italic>h</italic> can also be adjusted to increase the accuracy of the membrane potential responses reconstruction in exchange for the increased computational cost. The current profile is reconstructed by directly evaluating <inline-formula><inline-graphic xlink:href="572452v3_inline23.gif" mimetype="image" mime-subtype="gif"/></inline-formula> which uses the generated parameter set <inline-formula><inline-graphic xlink:href="572452v3_inline24.gif" mimetype="image" mime-subtype="gif"/></inline-formula> over the range of membrane potential responses values. We show in <xref rid="tbl3" ref-type="table">Table 3</xref> that reconstruction losses are essential for the accuracy of predicted parameters.</p>
</sec>
<sec id="s3a5">
<title>Generating Training Data</title>
<p>For a successful training of a neural network model, the training data must be of sufficient number of samples, denoised, and diverse. To ensure these conditions are met with a simulated dataset, we employ a three-step process for generating training data (<xref rid="fig9" ref-type="fig">Figure 9</xref>).</p>
<fig id="fig9" position="float" fig-type="figure">
<label>Figure 9:</label>
<caption><title>Training data generation.</title>
<p>In Step 1, each parameter is initially sampled from biologically plausible ranges using both skewed gaussian (channel conductance) and uniform sampling. A parameter set consists of 175 parameters spanning 16 known ion channels in <italic>C. elegans</italic> and similar organisms. In Step 2 and 3, steady-state currents and membrane potential responses are evaluated for each set to ensure they satisfy the predefined constraints such as bifurcation structure represented by <italic>dI/dV</italic> bounds and minimum-maximum membrane potential across current-clamp protocols. Only parameter sets that meet both constraints are included in the training set.</p></caption>
<graphic xlink:href="572452v3_fig9.tif" mimetype="image" mime-subtype="tiff"/>
</fig>
<p><bold>Step 1</bold>. Randomly generate parameter sets by sampling each parameter within a pre-defined distribution. This distribution is skewed normal distribution for channel conductance parameters and uniform distributions for other parameters. The range is determined according to the biologically feasible ranges reported in the literature (See table <italic>predicted parameters</italic> in supplementary files for explicit range used for each parameter) [<xref ref-type="bibr" rid="c8">8</xref>, <xref ref-type="bibr" rid="c22">22</xref>, <xref ref-type="bibr" rid="c42">42</xref>]. In particular, search ranges for channel parameters are set to baseline <italic>±</italic>50% where baseline parameters are default parameters given by [<xref ref-type="bibr" rid="c41">41</xref>].</p>
<p><bold>Step 2</bold>. Simulate steady-state current traces for each sampled parameter set followed by imposing bifurcation structure constraints on each of them. This is done by calculating the first derivative of the currents <italic>dI/dV</italic> with respect to voltage states and ensuring they are within the 98% confidence intervals of experimentally obtained <italic>dI/dV</italic> bounds. Specifically, we evaluate each parameter set with respect to the 3 neuron types that are found within <italic>C. elegans</italic> non-spiking neurons - Type 1: Transient outward rectifier (RIM, DVC, HSN), Type 2: Outward rectifier type (AIY, URX, RIS), and Type 3: Bistable type (AFD, AWB, AWC). During data generation, approximately same number of neurons are generated for each type to ensure balance between all neuron types. The step can be further extended with new neuron types by incorporating additional <italic>dI/dV</italic> bounds.</p>
<table-wrap id="tbl4" orientation="portrait" position="float">
<label>Table 4:</label>
<caption><title>Simulation protocols for simulated and experimental neurons.</title></caption>
<graphic xlink:href="572452v3_tbl4.tif" mimetype="image" mime-subtype="tiff"/>
</table-wrap>
<p><bold>Step 3</bold>. Impose (minimum, maximum) constraints on the membrane potential response across current-clamp protocol. These values are set to (−100mV, 150mV) respectively for (−15pA, 35pA) current-clamp range. Parameter sets that do not satisfy the steady-state currents (Step 2) and membrane potential responses constraints are then removed from the training set. These constraints serve two purposes: i) remove parameter sets that result in non-realistic membrane potential responses/steady-state current profiles from the training set and ii) serve as an initial data augmentation process for the model. The constraints can also be extended or adjusted if deemed necessary for the improvement of the training process. Once constraints are applied, Gaussian noise is added to the membrane potential responses training data to mimic the measurement noises in experimental membrane potential responses recording data.</p>
</sec>
</sec>
<sec id="s3b">
<title>Experimental Protocol</title>
<sec id="s3b1">
<title><italic>C. elegans</italic> Culture and Strains</title>
<p>All animals used in this study were maintained at room temperature (22-23°C) on nematode growth medium (NGM) plates seeded with E. coli OP50 bacteria as a food source [<xref ref-type="bibr" rid="c59">59</xref>]. Strains used in this study were: CX7893 kyIs405 (AWB), CX3695 kyIs140 (AWC), ZG611 iaIs19 (URX), EG1285 lin-15B(n765);oxIs12 (RIS), UL2650 leEx2650 (DVC) and CX4857 kyIs179 (HSN).</p>
</sec>
<sec id="s3b2">
<title>Electrophysiology</title>
<p>Electrophysiological recordings were performed on young adult hermaphrodites (<italic>∼</italic>3-days old) at room temperature as previously described [<xref ref-type="bibr" rid="c8">8</xref>]. The gluing and dissection were performed under an Olympus SZX16 stereomicroscope equipped with a 1X Plan Apochromat objective and widefield 10X eyepieces. Briefly, an adult animal was immobilized on a Sylgard-coated (Sylgard 184, Dow Corning) glass coverslip in a small drop of DPBS (D8537; Sigma) by applying a cyanoacrylate adhesive (Vetbond tissue adhesive; 3M) along one side of the body. A puncture in the cuticle away from the incision site was made to relieve hydrostatic pressure. A small longitudinal incision was then made using a diamond dissecting blade (Type M-DL 72029 L; EMS) along the glue line adjacent to the neuron of interest. The cuticle flap was folded back and glued to the coverslip with GLUture Topical Adhesive (Abbott Laboratories), exposing the neuron to be recorded. The coverslip with the dissected preparation was then placed into a custom-made open recording chamber (<italic>∼</italic>1.5 ml volume) and treated with 1 mg/ml collagenase (type IV; Sigma) for <italic>∼</italic>10 s by hand pipetting. The recording chamber was subsequently perfused with the standard extracellular solution using a custom-made gravity-feed perfusion system for <italic>∼</italic>10 ml.</p>
<p>All electrophysiological recordings were performed with the bath at room temperature under an upright microscope (Axio Examiner; Carl Zeiss, Inc) equipped with a 40X water immersion lens and 16X eyepieces. Neurons of interest were identified by fluorescent markers and their anatomical positions. Preparations were then switched to the differential interference contrast (DIC) setting for patch-clamp. Electrodes with resistance (RE) of 15-25 MΩ were made from borosilicate glass pipettes (BF100-58-10; Sutter Instruments) using a laser pipette puller (P-2000; Sutter Instruments) and fire-polished with a microforge (MF-830; Narishige). We used a motorized micromanipulator (PatchStar Micromanipulator; Scientifica) to control the electrodes back filled with standard intracellular solution. The standard pipette solution was (all concentrations in mM): [K-gluconate 115; KCl 15; KOH 10; MgCl2 5; CaCl2 0.1; Na2ATP 5; NaGTP 0.5; Na-cGMP 0.5; cAMP 0.5; BAPTA 1; Hepes 10; Sucrose 50], with pH adjusted with KOH to 7.2, osmolarity 320–330 mOsm. The standard extracellular solution was: [NaCl 140; NaOH 5; KCL 5; CaCl2 2; MgCl2 5; Sucrose 15; Hepes 15; Dextrose 25], with pH adjusted with NaOH to 7.3, osmolarity 330–340 mOsm. Liquid junction potentials were calculated and corrected before recording. Whole-cell current clamp and voltage-clamp experiments were conducted on an EPC-10 amplifier (EPC-10 USB; Heka) using PatchMaster software (Heka). Two-component capacitive compensation was optimized at rest, and series resistance was compensated to 50%. Analog data were filtered at 2 kHz and digitized at 10 kHz. Current-injection and voltage-clamp steps were applied through the recording electrode.</p>
</sec>
</sec>
</sec>
<sec id="s4">
<title>Discussion</title>
<p>In this work, we introduce a novel deep generative method and system called ElectroPhysiomeGAN (EP-GAN), for estimating Hodgkin-Huxley model (HH-model) parameters given the recordings of neurons with graded potential (non-spiking). The proposed system encompasses RNN Encoder layer to process the neural recordings information such as membrane potential responses and steady-state current profiles and Generator layer to generate a large number of HH-model parameters in the order of 100s. The system can be trained entirely on simulation data informed by an arbitrary HH-model. When applied to neurons in <italic>C. elegans</italic>, EP-GAN generates parameters of HH-model which membrane potential responses are closer to ground truth responses than previous methods such as Differential Evolution and Genetic Algorithms. The advantage of EP-GAN is in the accuracy and inference speed achieved through fewer simulated samples than the previous methods for general parameter inference and is generic such that it doesn’t depend on the number of neurons for which inference is to be performed [<xref ref-type="bibr" rid="c7">7</xref>, <xref ref-type="bibr" rid="c16">16</xref>, <xref ref-type="bibr" rid="c41">41</xref>]. In addition, the method also largely preserves performance when provided with input data with partial information such as missing membrane potential responses (up to 50% missing) or steady-state current traces (up to 75% missing).</p>
<p>While EP-GAN is a step forward toward ElectroPhysiome model of <italic>C. elegans</italic>, its inability to support neurons with spiking membrane potential responses remains a limitation. The reason stems from the fact that neurons with spiking membrane potential responses are rare during the generation of training data of HH 16 ionic channels model without associated neuron channels, making their translation strategies to parameter space difficult to learn. A similar limitation is present with bi-stable membrane potential responses, e.g., AFD, AWB and AWC, although to a lesser extent. While the limitations for these profiles can be partially remedied through more training samples of their neuron types, their relative sparseness in the training data tends to cause lower quality of predicted parameters. Indeed, previous studies of <italic>C. elegans</italic> nervous system found that the majority of neurons exhibit graded membrane potential response instead of spiking [<xref ref-type="bibr" rid="c7">7</xref>, <xref ref-type="bibr" rid="c21">21</xref>]. Furthermore, the limitation could also lie within the current architecture of EP-GAN as it currently processes data directly without a component that discerns and processes spiking membrane potential responses.</p>
<p>Improving the sampling strategy for training data alongside enhancement of network architecture could address these limitations in the future.</p>
<p>As discussed in the <italic>Methods</italic> section, it’s worth noting that EP-GAN does not necessarily recover the ground truth parameters that are associated with the input membrane potential responses and steady-state current profiles. This is mainly due to the fact that there may exist multiple parameter regimes for the HH-model which support the given inputs [<xref ref-type="bibr" rid="c5">5</xref>, <xref ref-type="bibr" rid="c10">10</xref>, <xref ref-type="bibr" rid="c11">11</xref>, <xref ref-type="bibr" rid="c12">12</xref>, <xref ref-type="bibr" rid="c13">13</xref>, <xref ref-type="bibr" rid="c18">18</xref>, <xref ref-type="bibr" rid="c45">45</xref>, <xref ref-type="bibr" rid="c46">46</xref>]. The parameters generated by a single forward pass of EP-GAN (i.e., a single flow of information from the input to the output) could thus be interpreted as a one-time sampling from such a regime and a small perturbation to inputs may result in a different set of parameters. Such sensitivity to perturbation could be adjusted by supplementing the training samples or inputs with additional recording data (e.g., multiple recording data per neuron).</p>
<p>EP-GAN allows additional modifications to accommodate different configurations of the problem. For instance, update to HH-model would only require retraining of the network without changes to its architecture. Indeed, neuronal genome of <italic>C. elegans</italic> indicates additional voltage-gated channels that could be further incorporated to HH-models introduced in [<xref ref-type="bibr" rid="c7">7</xref>, <xref ref-type="bibr" rid="c41">41</xref>] to improve its modeling accuracy of membrane potential dynamics [<xref ref-type="bibr" rid="c60">60</xref>]. Extending the inputs to include additional data, e.g., channel activation profiles, can also be done in a straightforward manner by concatenating them to the input vectors of the encoder network. Extending EP-GAN prediction capabilities to new neuron types can also be done by simply incorporating additional constraints during training data generation.</p>
<p>Despite its primary focus on <italic>C. elegans</italic> neurons, we believe EP-GAN and its future extension could be viable for modeling a variety of neurons in other organisms. Indeed, there are increasing advances in resolving connectomes of more complex organisms and techniques for large-scale neural activities [<xref ref-type="bibr" rid="c61">61</xref>, <xref ref-type="bibr" rid="c62">62</xref>, <xref ref-type="bibr" rid="c63">63</xref>, <xref ref-type="bibr" rid="c64">64</xref>]. As neurons in these organisms can be described by a generic HH-model or similar differential equation model, EP-GAN is expected to be applicable and make contributions toward developing the biologically detailed nervous system models of neurons in these organisms.</p>
</sec>

</body>
<back>
<ack>
<title>Acknowledgements</title>
<p>This work was supported in part by National Science Foundation grant CRCNS IIS-2113003 (JK,ES), Washington Research Fund (ES), CRCNS IIS-2113120 (QL), Kavli NSI Pilot Grant (QL), CityU New Research Initiatives/Infrastructure Support from Central APRC 9610587 (QL), the General Research Fund (GRF) and Early Career Scheme (ECS) Award from Hong Kong Research Grants Council RGC (CityU 21103522, CityU 11104123, CityU 11100524) (QL), and Chan Zuckerberg Initiative (to Cori Bargmann). Authors also acknowledge the partial support by the Departments of Electrical Computer Engineering (JK,ES), Applied Mathematics (ES), the Center of Computational Neuroscience (ES), and the eScience Institute (ES,JK) at the University of Washington. In addition, we thank Cori Bargmann and Ian Hope for <italic>C. elegans</italic> strains. Some strains were provided by the CGC, which is funded by NIH Office of Research Infrastructure Programs (P40 OD010440). We thank Saba Heravi for discussions regarding parameter inference for electrophysiological recordings.</p>
</ack>
<sec id="suppd1e1736" sec-type="supplementary-material">
<title>Additional files</title>
<supplementary-material id="d1e1727">
<label>Supplementary Text</label>
<media xlink:href="supplements/572452_file02.pdf"/>
</supplementary-material>
</sec>
<ref-list>
<title>References</title>
<ref id="c1"><label>[1]</label><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><given-names>John G</given-names> <surname>White</surname></string-name>, <string-name><given-names>Eileen</given-names> <surname>Southgate</surname></string-name>, J <string-name><given-names>Nichol</given-names> <surname>Thomson</surname></string-name>, <string-name><given-names>Sydney</given-names> <surname>Brenner</surname></string-name>, <etal>et al.</etal></person-group> <article-title>The structure of the nervous system of the nematode caenorhabditis elegans</article-title>. <source>Philos Trans R Soc Lond B Biol Sci</source>, <volume>314</volume>(<issue>1165</issue>):<fpage>1</fpage>–<lpage>340</lpage>, <year>1986</year>.</mixed-citation></ref>
<ref id="c2"><label>[2]</label><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><given-names>Lav R</given-names> <surname>Varshney</surname></string-name>, <string-name><given-names>Beth L</given-names> <surname>Chen</surname></string-name>, <string-name><given-names>Eric</given-names> <surname>Paniagua</surname></string-name>, <string-name><given-names>David H</given-names> <surname>Hall</surname></string-name>, and <string-name><given-names>Dmitri B</given-names> <surname>Chklovskii</surname></string-name></person-group>. <article-title>Structural properties of the caenorhabditis elegans neuronal network</article-title>. <source>PLoS computational biology</source>, <volume>7</volume>(<issue>2</issue>):<fpage>e1001066</fpage>, <year>2011</year>.</mixed-citation></ref>
<ref id="c3"><label>[3]</label><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><given-names>Steven J</given-names> <surname>Cook</surname></string-name>, <string-name><given-names>Travis A</given-names> <surname>Jarrell</surname></string-name>, <string-name><given-names>Christopher A</given-names> <surname>Brittin</surname></string-name>, <string-name><given-names>Yi</given-names> <surname>Wang</surname></string-name>, <string-name><given-names>Adam E</given-names> <surname>Bloniarz</surname></string-name>, <string-name><given-names>Maksim A</given-names> <surname>Yakovlev</surname></string-name>, <string-name><given-names>Ken CQ</given-names> <surname>Nguyen</surname></string-name>, <string-name><given-names>Leo T-H</given-names> <surname>Tang</surname></string-name>, <string-name><given-names>Emily A</given-names> <surname>Bayer</surname></string-name>, <string-name><given-names>Janet S</given-names> <surname>Duerr</surname></string-name>, <etal>et al.</etal></person-group> <article-title>Whole-animal connectomes of both caenorhabditis elegans sexes</article-title>. <source>Nature</source>, <volume>571</volume>(<issue>7763</issue>):<fpage>63</fpage>–<lpage>71</lpage>, <year>2019</year>.</mixed-citation></ref>
<ref id="c4"><label>[4]</label><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><given-names>Alan L</given-names> <surname>Hodgkin</surname></string-name> and <string-name><given-names>Andrew F</given-names> <surname>Huxley</surname></string-name></person-group>. <article-title>A quantitative description of membrane current and its application to conduction and excitation in nerve</article-title>. <source>The Journal of physiology</source>, <volume>117</volume>(<issue>4</issue>):<fpage>500</fpage>, <year>1952</year>.</mixed-citation></ref>
<ref id="c5"><label>[5]</label><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><given-names>Allan R</given-names> <surname>Willms</surname></string-name></person-group>. <article-title>Neurofit: software for fitting hodgkin–huxley models to voltage-clamp data</article-title>. <source>Journal of neuroscience methods</source>, <volume>121</volume>(<issue>2</issue>):<fpage>139</fpage>–<lpage>150</lpage>, <year>2002</year>.</mixed-citation></ref>
<ref id="c6"><label>[6]</label><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><given-names>Allan R</given-names> <surname>Willms</surname></string-name>, <string-name><given-names>Deborah J</given-names> <surname>Baro</surname></string-name>, <string-name><given-names>Ronald M</given-names> <surname>Harris-Warrick</surname></string-name>, and <string-name><given-names>John</given-names> <surname>Guckenheimer</surname></string-name></person-group>. <article-title>An improved parameter estimation method for hodgkin-huxley models</article-title>. <source>Journal of computational neuroscience</source>, <volume>6</volume>:<fpage>145</fpage>–<lpage>168</lpage>, <year>1999</year>.</mixed-citation></ref>
<ref id="c7"><label>[7]</label><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><given-names>Martina</given-names> <surname>Nicoletti</surname></string-name>, <string-name><given-names>Alessandro</given-names> <surname>Loppini</surname></string-name>, <string-name><given-names>Letizia</given-names> <surname>Chiodo</surname></string-name>, <string-name><given-names>Viola</given-names> <surname>Folli</surname></string-name>, <string-name><given-names>Giancarlo</given-names> <surname>Ruocco</surname></string-name>, and <string-name><given-names>Simonetta</given-names> <surname>Filippi</surname></string-name></person-group>. <article-title>Biophysical modeling of c. elegans neurons: Single ion currents and whole-cell dynamics of awcon and rmd</article-title>. <source>PloS one</source>, <volume>14</volume>(<issue>7</issue>):<fpage>e0218738</fpage>, <year>2019</year>.</mixed-citation></ref>
<ref id="c8"><label>[8]</label><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><given-names>Qiang</given-names> <surname>Liu</surname></string-name>, <string-name><given-names>Philip B</given-names> <surname>Kidd</surname></string-name>, <string-name><given-names>May</given-names> <surname>Dobosiewicz</surname></string-name>, and <string-name><given-names>Cornelia I</given-names> <surname>Bargmann</surname></string-name></person-group>. <article-title>C. elegans awa olfactory neurons fire calcium-mediated all-or-none action potentials</article-title>. <source>Cell</source>, <volume>175</volume>(<issue>1</issue>):<fpage>57</fpage>–<lpage>70</lpage>, <year>2018</year>.</mixed-citation></ref>
<ref id="c9"><label>[9]</label><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><given-names>Jingyuan</given-names> <surname>Jiang</surname></string-name>, <string-name><given-names>Yifan</given-names> <surname>Su</surname></string-name>, <string-name><given-names>Ruilin</given-names> <surname>Zhang</surname></string-name>, <string-name><given-names>Haiwen</given-names> <surname>Li</surname></string-name>, <string-name><given-names>Louis</given-names> <surname>Tao</surname></string-name>, and <string-name><given-names>Qiang</given-names> <surname>Liu</surname></string-name></person-group>. <article-title>C. elegans enteric motor neurons fire synchronized action potentials underlying the defecation motor program</article-title>. <source>Nature communications</source>, <volume>13</volume>(<issue>1</issue>):<fpage>2783</fpage>, <year>2022</year>.</mixed-citation></ref>
<ref id="c10"><label>[10]</label><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><given-names>Eve</given-names> <surname>Marder</surname></string-name> and <string-name><given-names>Jean-Marc</given-names> <surname>Goaillard</surname></string-name></person-group>. <article-title>Variability, compensation and homeostasis in neuron and network function</article-title>. <source>Nature Reviews Neuroscience</source>, <volume>7</volume>(<issue>7</issue>):<fpage>563</fpage>–<lpage>574</lpage>, <year>2006</year>.</mixed-citation></ref>
<ref id="c11"><label>[11]</label><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><given-names>Eve</given-names> <surname>Marder</surname></string-name> and <string-name><given-names>Adam L</given-names> <surname>Taylor</surname></string-name></person-group>. <article-title>Multiple models to capture the variability in biological neurons and networks</article-title>. <source>Nature neuroscience</source>, <volume>14</volume>(<issue>2</issue>):<fpage>133</fpage>–<lpage>138</lpage>, <year>2011</year>.</mixed-citation></ref>
<ref id="c12"><label>[12]</label><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><given-names>Astrid A</given-names> <surname>Prinz</surname></string-name>, <string-name><given-names>Cyrus P</given-names> <surname>Billimoria</surname></string-name>, and <string-name><given-names>Eve</given-names> <surname>Marder</surname></string-name></person-group>. <article-title>Alternative to hand-tuning conductance-based models: construction and analysis of databases of model neurons</article-title>. <source>Journal of neurophysiology</source>, <year>2003</year>.</mixed-citation></ref>
<ref id="c13"><label>[13]</label><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><given-names>Astrid A</given-names> <surname>Prinz</surname></string-name>, <string-name><given-names>Dirk</given-names> <surname>Bucher</surname></string-name>, and <string-name><given-names>Eve</given-names> <surname>Marder</surname></string-name></person-group>. <article-title>Similar network activity from disparate circuit parameters</article-title>. <source>Nature neuroscience</source>, <volume>7</volume>(<issue>12</issue>):<fpage>1345</fpage>–<lpage>1352</lpage>, <year>2004</year>.</mixed-citation></ref>
<ref id="c14"><label>[14]</label><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><given-names>Laure</given-names> <surname>Buhry</surname></string-name>, <string-name><given-names>Michele</given-names> <surname>Pace</surname></string-name>, and <string-name><given-names>Sylvain</given-names> <surname>Saïghi</surname></string-name></person-group>. <article-title>Global parameter estimation of an hodgkin– huxley formalism using membrane voltage recordings: Application to neuro-mimetic analog integrated circuits</article-title>. <source>Neurocomputing</source>, <volume>81</volume>:<fpage>75</fpage>–<lpage>85</lpage>, <year>2012</year>.</mixed-citation></ref>
<ref id="c15"><label>[15]</label><mixed-citation publication-type="confproc"><person-group person-group-type="author"><string-name><given-names>Juan</given-names> <surname>Luis</surname></string-name> <string-name><given-names>Jiménez</given-names> <surname>Laredo</surname></string-name>, <string-name><given-names>Loïs</given-names> <surname>Naudin</surname></string-name>, <string-name><given-names>Nathalie</given-names> <surname>Corson</surname></string-name>, and <string-name><given-names>Carlos M</given-names> <surname>Fernandes</surname></string-name></person-group>. <article-title>A methodology for determining ion channels from membrane potential neuronal recordings</article-title>. In <conf-name>Applications of Evolutionary Computation: 25th European Conference</conf-name>, pages <fpage>15</fpage>–<lpage>29</lpage>. <publisher-name>Springer</publisher-name>, <year>2022</year>.</mixed-citation></ref>
<ref id="c16"><label>[16]</label><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><given-names>Loïs</given-names> <surname>Naudin</surname></string-name>, <string-name><given-names>Juan</given-names> <surname>Luis</surname></string-name> <string-name><given-names>Jiménez</given-names> <surname>Laredo</surname></string-name>, <string-name><given-names>Qiang</given-names> <surname>Liu</surname></string-name>, and <string-name><given-names>Nathalie</given-names> <surname>Corson</surname></string-name></person-group>. <article-title>Systematic generation of biophysically detailed models with generalization capability for non-spiking neurons</article-title>. <source>PloS one</source>, <volume>17</volume>(<issue>5</issue>):<fpage>e0268380</fpage>, <year>2022</year>.</mixed-citation></ref>
<ref id="c17"><label>[17]</label><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><given-names>Y Curtis</given-names> <surname>Wang</surname></string-name>, <string-name><given-names>Johann</given-names> <surname>Rudi</surname></string-name>, <string-name><given-names>James</given-names> <surname>Velasco</surname></string-name>, <string-name><given-names>Nirvik</given-names> <surname>Sinha</surname></string-name>, <string-name><given-names>Gideon</given-names> <surname>Idumah</surname></string-name>, <string-name><given-names>Randall K</given-names> <surname>Powers</surname></string-name>, <string-name><given-names>Charles J</given-names> <surname>Heckman</surname></string-name>, and <string-name><given-names>Matthieu K</given-names> <surname>Chardon</surname></string-name></person-group>. <article-title>Multimodal parameter spaces of a complex multi-channel neuron model</article-title>, <source>Front Syst Neurosci</source>. <year>2022</year>.</mixed-citation></ref>
<ref id="c18"><label>[18]</label><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><given-names>Jemy A Mandujano</given-names> <surname>Valle</surname></string-name> and <string-name><given-names>Alexandre L</given-names> <surname>Madureira</surname></string-name></person-group>. <article-title>Parameter identification problem in the hodgkin-huxley model</article-title>. <source>Neural Computation</source>, <volume>34</volume>(<issue>4</issue>):<fpage>939</fpage>–<lpage>970</lpage>, <year>2022</year>.</mixed-citation></ref>
<ref id="c19"><label>[19]</label><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><given-names>Pedro J</given-names> <surname>Gonçalves</surname></string-name>, <string-name><given-names>Jan-Matthis</given-names> <surname>Lueckmann</surname></string-name>, <string-name><given-names>Michael</given-names> <surname>Deistler</surname></string-name>, <string-name><given-names>Marcel</given-names> <surname>Nonnenmacher</surname></string-name>, <string-name><given-names>Kaan</given-names> <surname>Öcal</surname></string-name>, <string-name><given-names>Giacomo</given-names> <surname>Bassetto</surname></string-name>, <string-name><given-names>Chaitanya</given-names> <surname>Chintaluri</surname></string-name>, <string-name><given-names>William F</given-names> <surname>Podlaski</surname></string-name>, <string-name><given-names>Sara A</given-names> <surname>Haddad</surname></string-name>, <string-name><given-names>Tim P</given-names> <surname>Vogels</surname></string-name>, <etal>et al.</etal></person-group> <article-title>Training deep neural density estimators to identify mechanistic models of neural dynamics</article-title>. <source>eLife</source>, <volume>9</volume>:<elocation-id>e56261</elocation-id>, <year>2020</year>. <pub-id pub-id-type="doi">10.7554/eLife.56261</pub-id></mixed-citation></ref>
<ref id="c20"><label>[20]</label><mixed-citation publication-type="confproc"><person-group person-group-type="author"><string-name><given-names>Lautaro</given-names> <surname>Estienne</surname></string-name></person-group>. <article-title>Towards an hybrid hodgkin-huxley action potential generation model</article-title>. In <conf-name>2021 XIX Workshop on Information Processing and Control (RPIC)</conf-name>, pages <fpage>1</fpage>–<lpage>6</lpage>. <publisher-name>IEEE</publisher-name>, <year>2021</year>.</mixed-citation></ref>
<ref id="c21"><label>[21]</label><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><given-names>Miriam B</given-names> <surname>Goodman</surname></string-name>, <string-name><given-names>David H</given-names> <surname>Hall</surname></string-name>, <string-name><given-names>Leon</given-names> <surname>Avery</surname></string-name>, and <string-name><given-names>Shawn R</given-names> <surname>Lockery</surname></string-name></person-group>. <article-title>Active currents regulate sensitivity and dynamic range in c. elegans neurons</article-title>. <source>Neuron</source>, <volume>20</volume>(<issue>4</issue>):<fpage>763</fpage>–<lpage>772</lpage>, <year>1998</year>.</mixed-citation></ref>
<ref id="c22"><label>[22]</label><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><given-names>Loïs</given-names> <surname>Naudin</surname></string-name>, <string-name><given-names>Nathalie</given-names> <surname>Corson</surname></string-name>, <string-name><given-names>MA</given-names> <surname>Aziz-Alaoui</surname></string-name>, <string-name><given-names>Juan</given-names> <surname>Luis</surname></string-name> <string-name><given-names>Jimenez</given-names> <surname>Laredo</surname></string-name>, and <string-name><given-names>Thibaut</given-names> <surname>Démare</surname></string-name></person-group>. <article-title>On the modeling of the three types of non-spiking neurons of the caenorhabditis elegans</article-title>. <source>International Journal of Neural Systems</source>, <volume>31</volume>(<issue>02</issue>):<fpage>2050063</fpage>, <year>2021</year>.</mixed-citation></ref>
<ref id="c23"><label>[23]</label><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><given-names>Kristin</given-names> <surname>Koch</surname></string-name>, <string-name><given-names>Judith</given-names> <surname>McLean</surname></string-name>, <string-name><given-names>Ronen</given-names> <surname>Segev</surname></string-name>, <string-name><given-names>Michael A</given-names> <surname>Freed</surname></string-name>, <string-name><given-names>Michael J</given-names> <surname>Berry</surname></string-name>, <string-name><given-names>Vijay</given-names> <surname>Balasubramanian</surname></string-name>, and <string-name><given-names>Peter</given-names> <surname>Sterling</surname></string-name></person-group>. <article-title>How much the eye tells the brain</article-title>. <source>Current biology</source>, <volume>16</volume>(<issue>14</issue>):<fpage>1428</fpage>–<lpage>1434</lpage>, <year>2006</year>.</mixed-citation></ref>
<ref id="c24"><label>[24]</label><mixed-citation publication-type="book"><person-group person-group-type="author"><string-name><given-names>Alan</given-names> <surname>Roberts</surname></string-name> and <string-name><given-names>Brian MH</given-names> <surname>Bush</surname></string-name></person-group>. <source>Neurones without impulses: their significance for vertebrate and invertebrate nervous systems</source>, volume <volume>6</volume>. <publisher-name>Cambridge University Press</publisher-name>, <year>1981</year>.</mixed-citation></ref>
<ref id="c25"><label>[25]</label><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><given-names>RE</given-names> <surname>Davis</surname></string-name> and <string-name><given-names>AO</given-names> <surname>Stretton</surname></string-name></person-group>. <article-title>Passive membrane properties of motorneurons and their role in long-distance signaling in the nematode ascaris</article-title>. <source>Journal of Neuroscience</source>, <volume>9</volume>(<issue>2</issue>):<fpage>403</fpage>–<lpage>414</lpage>, <year>1989</year>.</mixed-citation></ref>
<ref id="c26"><label>[26]</label><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><given-names>Ralph E</given-names> <surname>Davis</surname></string-name> and <string-name><given-names>AO</given-names> <surname>Stretton</surname></string-name></person-group>. <article-title>Signaling properties of ascaris motorneurons: graded active responses, graded synaptic transmission, and tonic transmitter release</article-title>. <source>Journal of Neuroscience</source>, <volume>9</volume>(<issue>2</issue>):<fpage>415</fpage>–<lpage>425</lpage>, <year>1989</year>.</mixed-citation></ref>
<ref id="c27"><label>[27]</label><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><given-names>M</given-names> <surname>Burrows</surname></string-name>, <string-name><given-names>GJ</given-names> <surname>Laurent</surname></string-name>, and <string-name><given-names>LH</given-names> <surname>Field</surname></string-name></person-group>. <article-title>Proprioceptive inputs to nonspiking local interneurons contribute to local reflexes of a locust hindleg</article-title>. <source>Journal of Neuroscience</source>, <volume>8</volume>(<issue>8</issue>):<fpage>3085</fpage>–<lpage>3093</lpage>, <year>1988</year>.</mixed-citation></ref>
<ref id="c28"><label>[28]</label><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><given-names>Gilles</given-names> <surname>Laurent</surname></string-name> and <string-name><given-names>Malcolm</given-names> <surname>Burrows</surname></string-name></person-group>. <article-title>Distribution of intersegmental inputs to nonspiking local interneurons and motor neurons in the locust</article-title>. <source>Journal of Neuroscience</source>, <volume>9</volume>(<issue>9</issue>):<fpage>3019</fpage>–<lpage>3029</lpage>, <year>1989</year>.</mixed-citation></ref>
<ref id="c29"><label>[29]</label><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><given-names>Gilles</given-names> <surname>Laurent</surname></string-name></person-group> and M Burrows. <article-title>Intersegmental interneurons can control the gain of reflexes in adjacent segments of the locust by their action on nonspiking local interneurons</article-title>. <source>Journal of Neuroscience</source>, <volume>9</volume>(<issue>9</issue>):<fpage>3030</fpage>–<lpage>3039</lpage>, <year>1989</year>.</mixed-citation></ref>
<ref id="c30"><label>[30]</label><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><given-names>Loïs</given-names> <surname>Naudin</surname></string-name></person-group>. <article-title>Biological emergent properties in non-spiking neural networks</article-title>. <source>AIMS Mathematics</source>, <volume>7</volume>(<issue>10</issue>):<fpage>19415</fpage>–<lpage>19439</lpage>, <year>2022</year>.</mixed-citation></ref>
<ref id="c31"><label>[31]</label><mixed-citation publication-type="confproc"><person-group person-group-type="author"><string-name><given-names>Kalyanmoy</given-names> <surname>Deb</surname></string-name>, <string-name><given-names>Samir</given-names> <surname>Agrawal</surname></string-name>, <string-name><given-names>Amrit</given-names> <surname>Pratap</surname></string-name>, and <string-name><given-names>Tanaka</given-names> <surname>Meyarivan</surname></string-name></person-group>. <article-title>A fast elitist nondominated sorting genetic algorithm for multi-objective optimization: Nsga-ii</article-title>. In <conf-name>Parallel Problem Solving from Nature PPSN VI</conf-name>, pages <fpage>849</fpage>–<lpage>858</lpage>. <publisher-name>Springer</publisher-name>, <year>2000</year>.</mixed-citation></ref>
<ref id="c32"><label>[32]</label><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><given-names>Etay</given-names> <surname>Hay</surname></string-name>, <string-name><given-names>Sean</given-names> <surname>Hill</surname></string-name>, Felix Schürmann, <string-name><given-names>Henry</given-names> <surname>Markram</surname></string-name>, and <string-name><given-names>Idan</given-names> <surname>Segev</surname></string-name></person-group>. <article-title>Models of neocortical layer 5b pyramidal cells capturing a wide range of dendritic and perisomatic active properties</article-title>. <source>PLoS computational biology</source>, <volume>7</volume>(<issue>7</issue>):<fpage>e1002107</fpage>, <year>2011</year>.</mixed-citation></ref>
<ref id="c33"><label>[33]</label><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><given-names>Werner</given-names> <surname>Van Geit</surname></string-name>, <string-name><given-names>Erik</given-names> <surname>De Schutter</surname></string-name>, and <string-name><given-names>Pablo</given-names> <surname>Achard</surname></string-name></person-group>. <article-title>Automated neuron model optimization techniques: a review</article-title>. <source>Biological cybernetics</source>, <volume>99</volume>:<fpage>241</fpage>–<lpage>251</lpage>, <year>2008</year>.</mixed-citation></ref>
<ref id="c34"><label>[34]</label><mixed-citation publication-type="confproc"><person-group person-group-type="author"><string-name><given-names>Tea</given-names> <surname>Robič</surname></string-name> and <string-name><given-names>Bogdan</given-names> <surname>Filipič</surname></string-name></person-group>. <article-title>Differential evolution for multiobjective optimization</article-title>. In <conf-name>Evolutionary Multi-Criterion Optimization</conf-name>, pages <fpage>520</fpage>–<lpage>533</lpage>. <publisher-name>Springer</publisher-name>, <year>2005</year>.</mixed-citation></ref>
<ref id="c35"><label>[35]</label><mixed-citation publication-type="confproc"><person-group person-group-type="author"><string-name><given-names>Saku</given-names> <surname>Kukkonen</surname></string-name> and <string-name><given-names>Jouni</given-names> <surname>Lampinen</surname></string-name></person-group>. <article-title>Gde3: The third evolution step of generalized differential evolution</article-title>. In <conf-name>2005 IEEE congress on evolutionary computation</conf-name>, pages <fpage>443</fpage>–<lpage>450</lpage>. <publisher-name>IEEE</publisher-name>, <year>2005</year>.</mixed-citation></ref>
<ref id="c36"><label>[36]</label><mixed-citation publication-type="confproc"><person-group person-group-type="author"><string-name><given-names>Rakesh</given-names> <surname>Angira</surname></string-name> and <string-name><given-names>BV</given-names> <surname>Babu</surname></string-name></person-group>. <article-title>Non-dominated sorting differential evolution (nsde): An extension of differential evolution for multi-objective optimization</article-title>. In <conf-name>Proceedings of the 2nd Indian International Conference on Artificial Intelligence</conf-name>, pages <fpage>1428</fpage>–<lpage>1443</lpage>, <year>2005</year>.</mixed-citation></ref>
<ref id="c37"><label>[37]</label><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><given-names>Timothy H</given-names> <surname>Rumbell</surname></string-name>, <string-name><given-names>Danel</given-names> <surname>Draguljić</surname></string-name>, <string-name><given-names>Aniruddha</given-names> <surname>Yadav</surname></string-name>, <string-name><given-names>Patrick R</given-names> <surname>Hof</surname></string-name>, <string-name><given-names>Jennifer I</given-names> <surname>Luebke</surname></string-name>, and <string-name><given-names>Christina M</given-names> <surname>Weaver</surname></string-name></person-group>. <article-title>Automated evolutionary optimization of ion channel conductances and kinetics in models of young and aged rhesus monkey pyramidal neurons</article-title>. <source>Journal of computational neuroscience</source>, <volume>41</volume>:<fpage>65</fpage>–<lpage>90</lpage>, <year>2016</year>.</mixed-citation></ref>
<ref id="c38"><label>[38]</label><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><given-names>J Christopher</given-names> <surname>Octeau</surname></string-name>, <string-name><given-names>Mohitkumar R</given-names> <surname>Gangwani</surname></string-name>, <string-name><given-names>Sushmita L</given-names> <surname>Allam</surname></string-name>, <string-name><given-names>Duy</given-names> <surname>Tran</surname></string-name>, <string-name><given-names>Shuhan</given-names> <surname>Huang</surname></string-name>, <string-name><given-names>Tuan M</given-names> <surname>Hoang-Trong</surname></string-name>, <string-name><given-names>Peyman</given-names> <surname>Golshani</surname></string-name>, <string-name><given-names>Timothy H</given-names> <surname>Rumbell</surname></string-name>, <string-name><given-names>James R</given-names> <surname>Kozloski</surname></string-name>, and <string-name><given-names>Baljit S</given-names> <surname>Khakh</surname></string-name></person-group>. <article-title>Transient, consequential increases in extracellular potassium ions accompany channelrhodopsin2 excitation</article-title>. <source>Cell reports</source>, <volume>27</volume>(<issue>8</issue>):<fpage>2249</fpage>–<lpage>2261</lpage>, <year>2019</year>.</mixed-citation></ref>
<ref id="c39"><label>[39]</label><mixed-citation publication-type="confproc"><person-group person-group-type="author"><string-name><given-names>Laure</given-names> <surname>Buhry</surname></string-name>, <string-name><given-names>Audrey</given-names> <surname>Giremus</surname></string-name>, <string-name><given-names>Eric</given-names> <surname>Grivel</surname></string-name>, <string-name><given-names>Sylvain</given-names> <surname>Saïghi</surname></string-name>, and <string-name><given-names>Sylvie</given-names> <surname>Renaud</surname></string-name></person-group>. <article-title>New variants of the differential evolution algorithm: application for neuroscientists</article-title>. In <conf-name>2009 17th European Signal Processing Conference</conf-name>, pages <fpage>2352</fpage>–<lpage>2356</lpage>. <publisher-name>IEEE</publisher-name>, <year>2009</year>.</mixed-citation></ref>
<ref id="c40"><label>[40]</label><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><given-names>Julian</given-names> <surname>Blank</surname></string-name> and <string-name><given-names>Kalyanmoy</given-names> <surname>Deb</surname></string-name></person-group>. <article-title>Pymoo: Multi-objective optimization in python</article-title>. <source>IEEE Access</source>, <volume>8</volume>:<fpage>89497</fpage>–<lpage>89509</lpage>, <year>2020</year>.</mixed-citation></ref>
<ref id="c41"><label>[41]</label><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><given-names>Martina</given-names> <surname>Nicoletti</surname></string-name>, <string-name><given-names>Letizia</given-names> <surname>Chiodo</surname></string-name>, <string-name><given-names>Alessandro</given-names> <surname>Loppini</surname></string-name>, <string-name><given-names>Qiang</given-names> <surname>Liu</surname></string-name>, <string-name><given-names>Viola</given-names> <surname>Folli</surname></string-name>, <string-name><given-names>Giancarlo</given-names> <surname>Ruocco</surname></string-name>, and <string-name><given-names>Simonetta</given-names> <surname>Filippi</surname></string-name></person-group>. <article-title>Biophysical modeling of the whole-cell dynamics of c. elegans motor and interneurons families</article-title>. <source>Plos one</source>, <volume>19</volume>(<issue>3</issue>):<fpage>e0298105</fpage>, <year>2024</year>.</mixed-citation></ref>
<ref id="c42"><label>[42]</label><mixed-citation publication-type="book"><person-group person-group-type="author"><string-name><given-names>Eugene M</given-names> <surname>Izhikevich</surname></string-name></person-group>. <source>Dynamical systems in neuroscience</source>. <publisher-name>MIT press</publisher-name>, <year>2007</year>.</mixed-citation></ref>
<ref id="c43"><label>[43]</label><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><given-names>Loïs</given-names> <surname>Naudin</surname></string-name>, <string-name><given-names>Juan</given-names> <surname>Luis</surname></string-name> <string-name><given-names>Jiménez</given-names> <surname>Laredo</surname></string-name>, and <string-name><given-names>Nathalie</given-names> <surname>Corson</surname></string-name></person-group>. <article-title>A simple model of nonspiking neurons</article-title>. <source>Neural Computation</source>, <volume>34</volume>(<issue>10</issue>):<fpage>2075</fpage>–<lpage>2101</lpage>, <year>2022</year>.</mixed-citation></ref>
<ref id="c44"><label>[44]</label><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><given-names>Jinming</given-names> <surname>Zou</surname></string-name>, <string-name><given-names>Yi</given-names> <surname>Han</surname></string-name>, and <string-name><given-names>Sung-Sau</given-names> <surname>So</surname></string-name></person-group>. <article-title>Overview of artificial neural networks</article-title>. <source>Methods Mol Biol</source>, pages <fpage>14</fpage>–<lpage>22</lpage>, <year>2009</year>.</mixed-citation></ref>
<ref id="c45"><label>[45]</label><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><given-names>Ashley E</given-names> <surname>Raba</surname></string-name>, <string-name><given-names>Jonathan M</given-names> <surname>Cordeiro</surname></string-name>, <string-name><given-names>Charles</given-names> <surname>Antzelevitch</surname></string-name>, and <string-name><given-names>Jacques</given-names> <surname>Beaumont</surname></string-name></person-group>. <article-title>Extending the conditions of application of an inversion of the hodgkin–huxley gating model</article-title>. <source>Bulletin of mathematical biology</source>, <volume>75</volume>:<fpage>752</fpage>–<lpage>773</lpage>, <year>2013</year>.</mixed-citation></ref>
<ref id="c46"><label>[46]</label><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><given-names>Loïs</given-names> <surname>Naudin</surname></string-name></person-group>. <article-title>Different parameter solutions of a conductance-based model that behave identically are not necessarily degenerate</article-title>. <source>Journal of Computational Neuroscience</source>, pages <fpage>1</fpage>–<lpage>6</lpage>, <year>2023</year>.</mixed-citation></ref>
<ref id="c47"><label>[47]</label><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><given-names>Ian</given-names> <surname>Goodfellow</surname></string-name>, <string-name><given-names>Jean</given-names> <surname>Pouget-Abadie</surname></string-name>, <string-name><given-names>Mehdi</given-names> <surname>Mirza</surname></string-name>, <string-name><given-names>Bing</given-names> <surname>Xu</surname></string-name>, <string-name><given-names>David</given-names> <surname>Warde-Farley</surname></string-name>, <string-name><given-names>Sherjil</given-names> <surname>Ozair</surname></string-name>, <string-name><given-names>Aaron</given-names> <surname>Courville</surname></string-name>, and <string-name><given-names>Yoshua</given-names> <surname>Bengio</surname></string-name></person-group>. <article-title>Generative adversarial networks</article-title>. <source>Communications of the ACM</source>, <volume>63</volume>(<issue>11</issue>):<fpage>139</fpage>–<lpage>144</lpage>, <year>2020</year>.</mixed-citation></ref>
<ref id="c48"><label>[48]</label><mixed-citation publication-type="confproc"><person-group person-group-type="author"><string-name><given-names>Martin</given-names> <surname>Arjovsky</surname></string-name>, <string-name><given-names>Soumith</given-names> <surname>Chintala</surname></string-name>, and <string-name><given-names>Léon</given-names> <surname>Bottou</surname></string-name></person-group>. <article-title>Wasserstein generative adversarial networks</article-title>. In <conf-name>34th International conference on machine learning</conf-name>, pages <fpage>214</fpage>–<lpage>223</lpage>. <publisher-name>PMLR</publisher-name>, <year>2017</year>.</mixed-citation></ref>
<ref id="c49"><label>[49]</label><mixed-citation publication-type="preprint"><person-group person-group-type="author"><string-name><given-names>Kyunghyun</given-names> <surname>Cho</surname></string-name>, <string-name><given-names>Bart Van</given-names> <surname>Merriënboer</surname></string-name>, <string-name><given-names>Caglar</given-names> <surname>Gulcehre</surname></string-name>, <string-name><given-names>Dzmitry</given-names> <surname>Bahdanau</surname></string-name>, <string-name><given-names>Fethi</given-names> <surname>Bougares</surname></string-name>, <string-name><given-names>Holger</given-names> <surname>Schwenk</surname></string-name>, and <string-name><given-names>Yoshua</given-names> <surname>Bengio</surname></string-name></person-group>. <article-title>Learning phrase representations using rnn encoder-decoder for statistical machine translation</article-title>. <source>arXiv</source> <pub-id pub-id-type="arxiv">1406.1078</pub-id>, <year>2014</year>.</mixed-citation></ref>
<ref id="c50"><label>[50]</label><mixed-citation publication-type="confproc"><person-group person-group-type="author"><string-name><given-names>Huiwen</given-names> <surname>Chang</surname></string-name>, <string-name><given-names>Han</given-names> <surname>Zhang</surname></string-name>, <string-name><given-names>Lu</given-names> <surname>Jiang</surname></string-name>, <string-name><given-names>Ce</given-names> <surname>Liu</surname></string-name>, and <string-name><given-names>William T</given-names> <surname>Freeman</surname></string-name></person-group>. <article-title>Maskgit: Masked generative image transformer</article-title>. In <conf-name>Proceedings of the IEEE/CVF conference on computer vision and pattern recognition</conf-name>, pages <fpage>11315</fpage>–<lpage>11325</lpage>, <year>2022</year>.</mixed-citation></ref>
<ref id="c51"><label>[51]</label><mixed-citation publication-type="preprint"><person-group person-group-type="author"><string-name><given-names>Xiulong</given-names> <surname>Liu</surname></string-name>, <string-name><given-names>Kun</given-names> <surname>Su</surname></string-name>, and <string-name><given-names>Eli</given-names> <surname>Shlizerman</surname></string-name></person-group>. <article-title>Tell what you hear from what you see–video to audio generation through text</article-title>. <source>arXiv</source> <pub-id pub-id-type="arxiv">2411.05679</pub-id>, <year>2024</year>.</mixed-citation></ref>
<ref id="c52"><label>[52]</label><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><given-names>Ishaan</given-names> <surname>Gulrajani</surname></string-name>, <string-name><given-names>Faruk</given-names> <surname>Ahmed</surname></string-name>, <string-name><given-names>Martin</given-names> <surname>Arjovsky</surname></string-name>, <string-name><given-names>Vincent</given-names> <surname>Dumoulin</surname></string-name>, and <string-name><given-names>Aaron C</given-names> <surname>Courville</surname></string-name></person-group>. <article-title>Improved training of wasserstein gans</article-title>. <source>Advances in neural information processing systems</source>, <volume>30</volume>, <year>2017</year>.</mixed-citation></ref>
<ref id="c53"><label>[53]</label><mixed-citation publication-type="confproc"><person-group person-group-type="author"><string-name><given-names>Aladin</given-names> <surname>Virmaux</surname></string-name> and <string-name><given-names>Kevin</given-names> <surname>Scaman</surname></string-name></person-group>. <article-title>Lipschitz regularity of deep neural networks: analysis and efficient estimation</article-title>. <conf-name>Advances in Neural Information Processing Systems, 31</conf-name>, <year>2018</year>.</mixed-citation></ref>
<ref id="c54"><label>[54]</label><mixed-citation publication-type="preprint"><person-group person-group-type="author"><string-name><given-names>Jimmy Lei</given-names> <surname>Ba</surname></string-name>, <string-name><given-names>Jamie Ryan</given-names> <surname>Kiros</surname></string-name>, and <string-name><given-names>Geoffrey E</given-names> <surname>Hinton</surname></string-name></person-group>. <article-title>Layer normalization</article-title>. <source>arXiv</source> <pub-id pub-id-type="arxiv">1607.06450</pub-id>, <year>2016</year>.</mixed-citation></ref>
<ref id="c55"><label>[55]</label><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><given-names>George Em</given-names> <surname>Karniadakis</surname></string-name>, <string-name><given-names>Ioannis G</given-names> <surname>Kevrekidis</surname></string-name>, <string-name><given-names>Lu</given-names> <surname>Lu</surname></string-name>, <string-name><given-names>Paris</given-names> <surname>Perdikaris</surname></string-name>, <string-name><given-names>Sifan</given-names> <surname>Wang</surname></string-name>, and <string-name><given-names>Liu</given-names> <surname>Yang</surname></string-name></person-group>. <article-title>Physics-informed machine learning</article-title>. <source>Nature Reviews Physics</source>, <volume>3</volume>(<issue>6</issue>):<fpage>422</fpage>–<lpage>440</lpage>, <year>2021</year>.</mixed-citation></ref>
<ref id="c56"><label>[56]</label><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><given-names>Maziar</given-names> <surname>Raissi</surname></string-name>, <string-name><given-names>Paris</given-names> <surname>Perdikaris</surname></string-name>, and <string-name><given-names>George E</given-names> <surname>Karniadakis</surname></string-name></person-group>. <article-title>Physics-informed neural networks: A deep learning framework for solving forward and inverse problems involving nonlinear partial differential equations</article-title>. <source>Journal of Computational physics</source>, <volume>378</volume>:<fpage>686</fpage>–<lpage>707</lpage>, <year>2019</year>.</mixed-citation></ref>
<ref id="c57"><label>[57]</label><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><given-names>David E</given-names> <surname>Rumelhart</surname></string-name>, <string-name><given-names>Geoffrey E</given-names> <surname>Hinton</surname></string-name>, and <string-name><given-names>Ronald J</given-names> <surname>Williams</surname></string-name></person-group>. <article-title>Learning representations by back-propagating errors</article-title>. <source>nature</source>, <volume>323</volume>(<issue>6088</issue>):<fpage>533</fpage>–<lpage>536</lpage>, <year>1986</year>.</mixed-citation></ref>
<ref id="c58"><label>[58]</label><mixed-citation publication-type="confproc"><person-group person-group-type="author"><string-name><given-names>Adam</given-names> <surname>Paszke</surname></string-name>, <string-name><given-names>Sam</given-names> <surname>Gross</surname></string-name>, <string-name><given-names>Francisco</given-names> <surname>Massa</surname></string-name>, <string-name><given-names>Adam</given-names> <surname>Lerer</surname></string-name>, <string-name><given-names>James</given-names> <surname>Bradbury</surname></string-name>, <string-name><given-names>Gregory</given-names> <surname>Chanan</surname></string-name>, <string-name><given-names>Trevor</given-names> <surname>Killeen</surname></string-name>, <string-name><given-names>Zeming</given-names> <surname>Lin</surname></string-name>, <string-name><given-names>Natalia</given-names> <surname>Gimelshein</surname></string-name>, <string-name><given-names>Luca</given-names> <surname>Antiga</surname></string-name>, <etal>et al.</etal></person-group> <article-title>Pytorch: An imperative style, high-performance deep learning library</article-title>. <conf-name>Advances in neural information processing systems, 32</conf-name>, <year>2019</year>.</mixed-citation></ref>
<ref id="c59"><label>[59]</label><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><given-names>Sydney</given-names> <surname>Brenner</surname></string-name></person-group>. <article-title>The genetics of caenorhabditis elegans</article-title>. <source>Genetics</source>, <volume>77</volume>(<issue>1</issue>):<fpage>71</fpage>–<lpage>94</lpage>, <year>1974</year>.</mixed-citation></ref>
<ref id="c60"><label>[60]</label><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><given-names>Oliver</given-names> <surname>Hobert</surname></string-name></person-group>. <article-title>The neuronal genome of caenorhabditis elegans</article-title>. <source>WormBook: The online review of C. elegans biology</source>, <year>2013</year>.</mixed-citation></ref>
<ref id="c61"><label>[61]</label><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><given-names>Paul</given-names> <surname>Brooks</surname></string-name>, <string-name><given-names>Andrew</given-names> <surname>Champion</surname></string-name>, and <string-name><given-names>Marta</given-names> <surname>Costa</surname></string-name></person-group>. <article-title>Mapping of the zebrafish brain takes shape</article-title>. <source>Nature Methods</source>, pages <fpage>1</fpage>–<lpage>2</lpage>, <year>2022</year>.</mixed-citation></ref>
<ref id="c62"><label>[62]</label><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><given-names>Michael</given-names> <surname>Winding</surname></string-name>, <string-name><given-names>Benjamin D</given-names> <surname>Pedigo</surname></string-name>, <string-name><given-names>Christopher L</given-names> <surname>Barnes</surname></string-name>, <string-name><given-names>Heather G</given-names> <surname>Patsolic</surname></string-name>, <string-name><given-names>Youngser</given-names> <surname>Park</surname></string-name>, <string-name><given-names>Tom</given-names> <surname>Kazimiers</surname></string-name>, <string-name><given-names>Akira</given-names> <surname>Fushiki</surname></string-name>, <string-name><given-names>Ingrid V</given-names> <surname>Andrade</surname></string-name>, <string-name><given-names>Avinash</given-names> <surname>Khandelwal</surname></string-name>, <string-name><given-names>Javier</given-names> <surname>Valdes-Aleman</surname></string-name>, <etal>et al.</etal></person-group> <article-title>The connectome of an insect brain</article-title>. <source>Science</source>, <volume>379</volume>(<issue>6636</issue>):<fpage>eadd9330</fpage>, <year>2023</year>.</mixed-citation></ref>
<ref id="c63"><label>[63]</label><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><given-names>Seung Wook</given-names> <surname>Oh</surname></string-name>, <string-name><given-names>Julie A</given-names> <surname>Harris</surname></string-name>, <string-name><given-names>Lydia</given-names> <surname>Ng</surname></string-name>, <string-name><given-names>Brent</given-names> <surname>Winslow</surname></string-name>, <string-name><given-names>Nicholas</given-names> <surname>Cain</surname></string-name>, <string-name><given-names>Stefan</given-names> <surname>Mihalas</surname></string-name>, <string-name><given-names>Quanxin</given-names> <surname>Wang</surname></string-name>, <string-name><given-names>Chris</given-names> <surname>Lau</surname></string-name>, <string-name><given-names>Leonard</given-names> <surname>Kuan</surname></string-name>, <string-name><given-names>Alex M</given-names> <surname>Henry</surname></string-name>, <etal>et al.</etal></person-group> <article-title>A mesoscale connectome of the mouse brain</article-title>. <source>Nature</source>, <volume>508</volume>(<issue>7495</issue>):<fpage>207</fpage>–<lpage>214</lpage>, <year>2014</year>.</mixed-citation></ref>
<ref id="c64"><label>[64]</label><mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><given-names>Nicholas James</given-names> <surname>Sofroniew</surname></string-name>, <string-name><given-names>Daniel</given-names> <surname>Flickinger</surname></string-name>, <string-name><given-names>Jonathan</given-names> <surname>King</surname></string-name>, and <string-name><given-names>Karel</given-names> <surname>Svoboda</surname></string-name></person-group>. <article-title>A large field of view two-photon mesoscope with subcellular resolution for in vivo imaging</article-title>. <source>eLife</source>, <volume>5</volume>:<elocation-id>e14472</elocation-id>, <year>2016</year>. <pub-id pub-id-type="doi">10.7554/eLife.14472</pub-id></mixed-citation></ref>
</ref-list>
</back>
<sub-article id="sa0" article-type="editor-report">
<front-stub>
<article-id pub-id-type="doi">10.7554/eLife.95607.3.sa2</article-id>
<title-group>
<article-title>eLife Assessment</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author">
<name>
<surname>Bhalla</surname>
<given-names>Upinder Singh</given-names>
</name>
<role specific-use="editor">Reviewing Editor</role>
<aff>
<institution-wrap>
<institution>National Centre for Biological Sciences</institution>
</institution-wrap>
<city>Bangalore</city>
<country>India</country>
</aff>
</contrib>
</contrib-group>
<kwd-group kwd-group-type="evidence-strength">
<kwd>Solid</kwd>
</kwd-group>
<kwd-group kwd-group-type="claim-importance">
<kwd>Valuable</kwd>
</kwd-group>
</front-stub>
<body>
<p>This study is a <bold>valuable</bold> contribution to the field of neuronal modeling by way of providing a method for rapidly obtaining neuronal physiology parameters from electrophysiological recordings. The method is <bold>solid</bold> as the generated models reproduce both ground-truth simulated data and empirical data, and there is now a quantitative comparison with other approaches.</p>
</body>
</sub-article>
<sub-article id="sa1" article-type="referee-report">
<front-stub>
<article-id pub-id-type="doi">10.7554/eLife.95607.3.sa1</article-id>
<title-group>
<article-title>Reviewer #2 (Public review):</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author">
<anonymous/>
<role specific-use="referee">Reviewer</role>
</contrib>
</contrib-group>
</front-stub>
<body>
<p>Summary:</p>
<p>Developing biophysically detailed computational models that accurately capture the characteristic physiological properties of neurons across diverse cell types is a key challenge in computational neuroscience. A major obstacle lies in determining the large number of model parameters, which are notoriously difficult to fit such that the model faithfully reproduces the empirically observed electrophysiological responses. Existing approaches require substantial computational resources to generate models for even a single neuron. Generating models for additional neurons typically requires starting from scratch, with no reuse of previous computations - making the process just as computationally expensive each time.</p>
<p>Kim et al. introduce an innovative approach based on a Generative Adversarial Network (GAN) to overcome these limitations. Once trained, the network takes empirically observed electrophysiological responses as input and predicts the biophysical parameters with which a Hodgkin-Huxley model can reproduce these responses. The authors demonstrate this for nine non-spiking neurons in C. elegans. The resulting models generally provide a good fit to the empirical data. As the GAN has learned general relationships between biophysical parameters and the resulting electrophysiology, it can be used to generate models of diverse cell types without retraining - enabling model generation at low computational cost.</p>
<p>Strengths:</p>
<p>The authors address an important and technically challenging problem. A noteworthy strength of their approach is that, once trained, the GAN can generate models from new empirical data at low computational cost. The generated models reproduce the responses to current injections well.</p>
<p>The authors have addressed all of my previous major concerns and have significantly improved their method:</p>
<p>(1) Most importantly, the generated models reproduce both ground-truth simulated and empirical data well. Responses - including resting membrane potentials - are now well captured.</p>
<p>(2) The comparison with other approaches has been extended to be more quantitative and rigorous.</p>
<p>(3) The authors now convincingly demonstrate that the improved EP-GAN is relatively robust to data ablation.</p>
<p>Weaknesses:</p>
<p>Slow dynamics (e.g., slow ramps) are still not reliably captured. However, as the approach excels at other frontiers - the generation of models for diverse cell types at low computational cost - I consider this to be a relatively minor limitation.</p>
</body>
</sub-article>
<sub-article id="sa2" article-type="author-comment">
<front-stub>
<article-id pub-id-type="doi">10.7554/eLife.95607.3.sa0</article-id>
<title-group>
<article-title>Author response:</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author">
<name>
<surname>Kim</surname>
<given-names>Jimin</given-names>
</name>
<role specific-use="author">Author</role>
<contrib-id contrib-id-type="orcid">http://orcid.org/0000-0002-5597-5142</contrib-id></contrib>
<contrib contrib-type="author">
<name>
<surname>Peng</surname>
<given-names>Minxian</given-names>
</name>
<role specific-use="author">Author</role>
<contrib-id contrib-id-type="orcid">http://orcid.org/0000-0003-0419-3543</contrib-id></contrib>
<contrib contrib-type="author">
<name>
<surname>Chen</surname>
<given-names>Shuqi</given-names>
</name>
<role specific-use="author">Author</role>
</contrib>
<contrib contrib-type="author">
<name>
<surname>Liu</surname>
<given-names>Qiang</given-names>
</name>
<role specific-use="author">Author</role>
<contrib-id contrib-id-type="orcid">http://orcid.org/0000-0002-9232-1420</contrib-id></contrib>
<contrib contrib-type="author">
<name>
<surname>Shlizerman</surname>
<given-names>Eli</given-names>
</name>
<role specific-use="author">Author</role>
<contrib-id contrib-id-type="orcid">http://orcid.org/0000-0002-3136-4531</contrib-id></contrib>
</contrib-group>
</front-stub>
<body>
<p>The following is the authors’ response to the previous reviews</p>
<disp-quote content-type="editor-comment">
<p><bold>Reviewer #1 (Public review):</bold></p>
<p>(1) The bad equilibria of the model still remain a concern, as well as other features like the transient overshoots that do not match with the data. I think they could achieve more accuracy here by assigning more weight to such specific features, through adding these as separate objectives for the generator explicitly. The traces contain a five-second current steps, and one second before and one second after the training step. This means that in the RMSE, the current step amplitude will dominate as a feature, as this is simply the state for which the data trace contains most time-points. Note that this is further exacerbated by using the IV curve as an auxiliary objective. I believe a better exploration of specific response features, incorporated as independently weighted loss terms for the generator, could improve the fit. E.g. an auxiliary term could be the equilibrium before and after the current step, another term could penalise response traces that do not converge back to their initial equilibrium, etc.</p>
</disp-quote>
<p>We thank the reviewer for the suggestion. We supplemented the membrane potential regression loss with errors computed for 3 intervals: pre- post- and mid- stimulation time intervals, improving the accuracy of EP-GAN for baseline membrane potential responses (Figure 2, 3, Table S2, S3). We also changed the simulation protocols for generated parameters by allowing a longer simulation time of 15 seconds, where the stimulation is applied during [5, 10] seconds and no stimulation at t = [0, 5) (pre-stimulation) and t = (10, 15] (post-stimulation). These time intervals are chosen to ensure sufficient stabilization periods before and after stimulation.</p>
<disp-quote content-type="editor-comment">
<p>(2) The explanation of what the authors mean with 'inverse gradient operation' is clear now. However, this term is mathematically imprecise, as the inverse gradient does not exist because the gradient operator is not injective. The method is simply forward integration under the assumption that the derivate of the voltage is known at the grid time-points, and should be described as such.</p>
</disp-quote>
<p>We thank the reviewer for the clarification on inverse gradient operation terminology. In the Methods section, we changed the term describing the inverse gradient operation to ‘forward integration’ which is a more accurate description describing the process.</p>
<disp-quote content-type="editor-comment">
<p>(3) I appreciate that the authors' method provides parameters of models at a minimal computational cost compared to running an evolutionary optimization for every new recording. I also believe that with some tweaking of the objective, the method could improve in accuracy. However, I share reviewer 2's concerns that the evolutionary baseline methods are not sufficiently explored, as these methods have been used to successfully fit considerably more complex response patterns. One way out of the dilemma is to show that the EP-GAN estimated parameters provide an initial guess that considerably narrows the search space for the evolutionary algorithm. In this context, the authors should also discuss the recent gradient based methods such as Deistler et al. (<ext-link ext-link-type="uri" xlink:href="https://doi.org/10.1101/2024.08.21.608979">https://doi.org/10.1101/2024.08.21.608979</ext-link>) or Jones et al (<ext-link ext-link-type="uri" xlink:href="https://doi.org/10.48550/arXiv.2407.04025">https://doi.org/10.48550/arXiv.2407.04025</ext-link>).</p>
</disp-quote>
<p>We supplemented the optimization setup for existing methods (GDE3, NSDE, DEMO, and NSGA2) by incorporating steady-state response constraints as the initial selection process. The process is similar to that of EP-GAN training data generation and DEMO parameter selection process [16] (see Results section, page 6 for detail). We also expanded the testing scenarios by evaluating all methods with respect to both small and large HH-model estimation. The small HH-model scenario estimates 47 parameters consisting of channel conductance, reversal potentials and initial conditions with the channel parameters (n = 129) frozen to default values in [41]. Large HH-model includes estimating channel parameters (i.e. 129) in addition to the 47 parameters by considering +-50% variations from their default values. For both small and large HH-model scenarios, we test total sample sizes of both 32k and 64k for all methods to evaluate their scalability with the number of simulated samples given during optimization. The results show that existing methods show good performances for small HH-model scenarios that scale with sample size consistent with literature. EP-GAN on the other hand shows overall better performance in predicting membrane potential responses on both small and large HH-model scenarios.</p>
<disp-quote content-type="editor-comment">
<p><bold>Reviewer #2 (Public review):</bold></p>
<p>Major 1: Models do not faithfully capture empirical responses. While the models generated with EPGAN reproduce the average voltage during current injections reasonably well, the dynamics of the response are generally not well captured. For example, for the neuron labeled RIM (Figure 2), the most depolarized voltage traces show an initial 'overshoot' of depolarization, i.e. they depolarize strongly within the first few hundred milliseconds but then fall back to a less depolarized membrane potential. In contrast, the empirical recording shows no such overshoot. Similarly, for the neuron labeled AFD, all empirically recorded traces slowly ramp up over time. In contrast, the simulated traces are mostly flat. Furthermore, all empirical traces return to the pre-stimulus membrane potential, but many of the simulated voltage traces remain significantly depolarized, far outside of the ranges of empirically observed membrane potentials. The authors trained an additional GAN (EPGAN Extended) to improve the fit to the resting membrane potential. Interestingly, for one neuron (AWB), this improved the response during stimulation, which now reproduced the slowly raising membrane potentials observed empirically, however, the neuron still does not reliably return to its resting membrane potential. For the other two neurons, the authors report a decrease in accuracy in comparison to EP-GAN. While such deviations may appear small in the Root mean Square Error (RMSE), they likely indicate a large mismatch between the model and the electrophysiological properties of the biological neuron. The authors added a second metric during the revision - percentages of predicted membrane potential trajectories within empirical range. I appreciate this additional analysis. As the empirical ranges across neurons are far larger than the magnitude of dynamical properties of the response ('slow ramps', etc.), this metric doesn't seem to be well suited to quantify to which degree these dynamical properties are captured by the models.</p>
</disp-quote>
<p>We made improvements to the training data generation and architecture of EP-GAN to improve its overall accuracy with predicted membrane potential responses. In particular, we divided training data generation into three neuron types found in C. elegans non-spiking neurons: 1) Transient outward rectifier, 2) Outward rectifier and 3) Bistable [8, 16]. Each randomly generated training sample is categorized into one of 3 types by evaluating its steady-state currents with respect to experimental dI/dV bound constraints (See generating training data section under Methods for more detail). The process is then followed by imposing minimum-maximum constraints on simulated membrane potential responses. The setup allows generations of training samples that are of closer distribution to experimentally recorded neurons. This is further described in Section Methods page 15 in the revised manuscript.</p>
<p>We also improved the EP-GAN training process by incorporating random masking of input membrane potential responses. The masking forces EP-GAN to make predictions even with missing voltage traces, improving overall accuracy and allowing EP-GAN to use membrane potential inputs with arbitrary clamping protocol (see Methods page 13 for more detail). For the training loss functions, we further supplemented the membrane potential regression loss with errors computed for 2 intervals: pre- and post-stimulation time intervals to improve EP-GAN prediction capabilities for baseline membrane potentials.</p>
<p>Taken together, these modifications improved EP-GAN’s overall ability to better capture empirical membrane potential responses and we show the results in Figure 2 – 5, Table S2, S3.</p>
<disp-quote content-type="editor-comment">
<p>Major 2: Comparison with other approaches is potentially misleading. Throughout the manuscript, the authors claim that their approach outperforms the other approaches tested. But compare the responses of the models in the present manuscript (neurons RIM, AFD, AIY) to the ones provided for the same neurons in Naudin et al. 2022 (<ext-link ext-link-type="uri" xlink:href="https://doi.org/10.1371/journal">https://doi.org/10.1371/journal</ext-link>. pone.0268380). Naudin et al. present models that seem to match empirical data far more accurately than any model presented in the current study. Naudin et al. achieved this using DEMO, an algorithm that in the present manuscript is consistently shown to be among the worst of all algorithms tested. I therefore strongly disagree with the authors claim that a &quot;Comparison of EP-GAN with existing estimation methods shows EP-GAN advantage in the accuracy of estimated parameters&quot;. This may be true in the context of the benchmark performed in the study (i.e., a condition of very limited compute resources - 18 generations with a population size of 600, compare that to 2000 generations recommended in Naudin et al.), but while EP-GAN wins under these specific conditions (and yes, here the authors convincingly show that their EP-GAN produces by far the best results!), other approaches seem to win with respect to the quality of the models they can ultimately generate.</p>
</disp-quote>
<p>We thank the reviewer for the feedback regarding the comparison with existing methods. We have revised the optimization setup for existing methods (GDE3, NSDE, DEMO, and NSGA2) by incorporating steady-state response constraints as the initial selection process. The process is similar to that of EP-GAN training data generation and DEMO parameter selection process [16] (see Results section, page 6 for detail). Incorporating this process has improved the accuracy of existing methods especially for small HH-model scenarios where DEMO stood out with the best performance alongside NSGA2 (Figure 5, Table 1, 2).</p>
<p>We also expanded the testing scenarios by evaluating all methods with respect to both small and large HH-model estimation. The small HH-model scenario estimates 47 parameters consisting of channel conductance, reversal potentials and initial conditions with the channel parameters (n = 129) frozen to default values in [41]. Large HH-model includes estimating channel parameters (i.e. 129) in addition to the 47 parameters by considering +-50% variations from their default values. For both small and large HH-model scenarios, we test total sample sizes of both 32k and 64k for all methods to evaluate their scalability with the number of simulated samples given during optimization. The results show that existing methods show good performances for small HH-model scenarios that scale with sample size. EP-GAN on the other hand shows overall better performance in predicting membrane potential responses on both small and large HH-model scenarios.</p>
<p>In particular, with extended membrane potential error including pre-, mid- , post-activation periods, EP-GAN (trained with 32k samples, large HH-model, 9 neurons) mean membrane potential responses error of 2.82mV was lower than that of DEMO (12.2mV, 64k samples) trained on identical setup (Table 2) and DEMO (7.78mV, using 36,000k samples, 3 neurons) applied to simpler HHmodel in [16]. With respect to DEMO performance in [16], under identical simulation protocol (i.e., no stimulation during (0, 5s), (10, 15s) and stimulation during (5, 10s)), EP-GAN predicted RIM (large HH-model) showed membrane potential accuracy on par with that of DEMO (simpler HH-model) and EP-GAN predicted AFD showed better accuracy for post-activation membrane potential response where DEMO predicted membrane potentials overshoot above the baseline (not shown in the paper).</p>
<disp-quote content-type="editor-comment">
<p>Major 3: As long as the quality of the models generated by the EP-GAN cannot be significantly improved, I am doubtful that it indeed can contribute to the 'ElectroPhysiome', as it seems likely that dynamics that are currently poorly captured, like slow ramps, or the ability of the neuron to return to its resting membrane potential, will critically affect network computations. If the authors want to motivate their study based on this very ambitious goal, they should illustrate that single neuron model generation with their approach is robust enough to warrant well-constrained network dynamics. Based on the currently presented results, I find the framing of the manuscript far too bold.</p>
</disp-quote>
<p>We thank the reviewer for the feedback regarding the paper's scope. With revised methods, the overall quality of EP-GAN models is improved with the most significant improvements in baseline membrane potential accuracy. While high quality neuron models could be attained with existing methods given sufficient sample size, our results suggest EP-GAN can predict models with enhanced quality with significantly fewer sample size without a need for retraining, thus complementing the main drawback of evolutionary based methods. While EP-GAN still has limitations (e.g., difficulty in predicting slow ramps) that need to be addressed in the future, we believe its overall performance combined with fast inference speed and flexibility in its input data format (e.g., missing membrane potential traces) is a step forward in the large-scale neuron modeling tasks that can contribute to network models.</p>
<disp-quote content-type="editor-comment">
<p>Major 4: The conclusion of the ablation study 'In addition the architecture of EP-GAN permits inference of parameters even when partial membrane potential and steady-state currents profile are given as inputs' does not seem to be justified given the voltage traces shown in Figure 3. For example, for RIM, the resting membrane potential stays around 0 mV, but all empirical traces are around -40mV. For AFD, all simulated traces have a negative slope during the depolarizing stimuli, but a positive slope in all empirically observed traces. For AIY, the shape of hyperpolarized traces is off. While it may be that by their metric neurons in the 25% category are classified as 'preserving baseline accuracy', this doesn't seem justified given the voltage traces presented in the manuscript. It appears the metric is not strict enough.</p>
</disp-quote>
<p>We improved EP-GAN’s training process by incorporating random masking of input membrane potential responses. The masking forces EP-GAN to make predictions even with missing voltage traces, improving overall accuracy and allowing EP-GAN to use membrane potential inputs with arbitrary clamping protocol.</p>
<p>Such input masking during training has improved the results with ablation studies where EP-GAN now retains baseline membrane potential error (3.3mV, averaged across pre-, mid-, post-activation periods) up to 50% of membrane potential inputs remaining (3.5mV) and up to 25% of steady-state currents remaining (3.5mV).</p>
</body>
</sub-article>
</article>