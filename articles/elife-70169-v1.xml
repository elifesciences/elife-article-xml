<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE article PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Archiving and Interchange DTD with MathML3 v1.2 20190208//EN"  "JATS-archivearticle1-mathml3.dtd"><article xmlns:ali="http://www.niso.org/schemas/ali/1.0/" xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" article-type="research-article" dtd-version="1.2"><front><journal-meta><journal-id journal-id-type="nlm-ta">elife</journal-id><journal-id journal-id-type="publisher-id">eLife</journal-id><journal-title-group><journal-title>eLife</journal-title></journal-title-group><issn publication-format="electronic" pub-type="epub">2050-084X</issn><publisher><publisher-name>eLife Sciences Publications, Ltd</publisher-name></publisher></journal-meta><article-meta><article-id pub-id-type="publisher-id">70169</article-id><article-id pub-id-type="doi">10.7554/eLife.70169</article-id><article-categories><subj-group subj-group-type="display-channel"><subject>Research Article</subject></subj-group><subj-group subj-group-type="heading"><subject>Biochemistry and Chemical Biology</subject></subj-group><subj-group subj-group-type="heading"><subject>Physics of Living Systems</subject></subj-group></article-categories><title-group><article-title>Recovering mixtures of fast-diffusing states from short single-particle trajectories</article-title></title-group><contrib-group><contrib contrib-type="author" corresp="yes" id="author-237738"><name><surname>Heckert</surname><given-names>Alec</given-names></name><contrib-id authenticated="true" contrib-id-type="orcid">https://orcid.org/0000-0001-8748-6645</contrib-id><email>alecheckert@gmail.com</email><xref ref-type="aff" rid="aff1">1</xref><xref ref-type="other" rid="fund1"/><xref ref-type="fn" rid="con1"/><xref ref-type="fn" rid="conf1"/></contrib><contrib contrib-type="author" id="author-238332"><name><surname>Dahal</surname><given-names>Liza</given-names></name><xref ref-type="aff" rid="aff1">1</xref><xref ref-type="aff" rid="aff2">2</xref><xref ref-type="fn" rid="con2"/><xref ref-type="fn" rid="conf2"/></contrib><contrib contrib-type="author" id="author-196405"><name><surname>Tijan</surname><given-names>Robert</given-names></name><xref ref-type="aff" rid="aff2">2</xref><xref ref-type="aff" rid="aff3">3</xref><xref ref-type="other" rid="fund2"/><xref ref-type="fn" rid="con3"/><xref ref-type="fn" rid="conf1"/></contrib><contrib contrib-type="author" corresp="yes" id="author-3967"><name><surname>Darzacq</surname><given-names>Xavier</given-names></name><contrib-id authenticated="true" contrib-id-type="orcid">https://orcid.org/0000-0003-2537-8395</contrib-id><email>darzacq@berkeley.edu</email><xref ref-type="aff" rid="aff1">1</xref><xref ref-type="other" rid="fund3"/><xref ref-type="fn" rid="con4"/><xref ref-type="fn" rid="conf2"/></contrib><aff id="aff1"><label>1</label><institution-wrap><institution-id institution-id-type="ror">https://ror.org/01an7q238</institution-id><institution>Department of Molecular and Cell Biology, Li Ka Shing Center for Biomedical and Health Sciences, University of California, Berkeley</institution></institution-wrap><addr-line><named-content content-type="city">Berkeley</named-content></addr-line><country>United States</country></aff><aff id="aff2"><label>2</label><institution-wrap><institution-id institution-id-type="ror">https://ror.org/01an7q238</institution-id><institution>CIRM Center of Excellence, University of California, Berkeley</institution></institution-wrap><addr-line><named-content content-type="city">Berkeley</named-content></addr-line><country>United States</country></aff><aff id="aff3"><label>3</label><institution-wrap><institution-id institution-id-type="ror">https://ror.org/006w34k90</institution-id><institution>Howard Hughes Medical Institute</institution></institution-wrap><addr-line><named-content content-type="city">Berkeley</named-content></addr-line><country>United States</country></aff></contrib-group><contrib-group content-type="section"><contrib contrib-type="editor"><name><surname>Smal</surname><given-names>Ihor</given-names></name><role>Reviewing Editor</role><aff><institution-wrap><institution-id institution-id-type="ror">https://ror.org/03r4m3349</institution-id><institution>Erasmus University Medical Center</institution></institution-wrap><country>Netherlands</country></aff></contrib><contrib contrib-type="senior_editor"><name><surname>Akhmanova</surname><given-names>Anna</given-names></name><role>Senior Editor</role><aff><institution-wrap><institution-id institution-id-type="ror">https://ror.org/04pp8hn57</institution-id><institution>Utrecht University</institution></institution-wrap><country>Netherlands</country></aff></contrib></contrib-group><pub-date publication-format="electronic" date-type="publication"><day>06</day><month>09</month><year>2022</year></pub-date><pub-date pub-type="collection"><year>2022</year></pub-date><volume>11</volume><elocation-id>e70169</elocation-id><history><date date-type="received" iso-8601-date="2021-05-07"><day>07</day><month>05</month><year>2021</year></date><date date-type="accepted" iso-8601-date="2022-08-04"><day>04</day><month>08</month><year>2022</year></date></history><pub-history><event><event-desc>This manuscript was published as a preprint at bioRxiv.</event-desc><date date-type="preprint" iso-8601-date="2021-05-04"><day>04</day><month>05</month><year>2021</year></date><self-uri content-type="preprint" xlink:href="https://doi.org/10.1101/2021.05.03.442482"/></event></pub-history><permissions><copyright-statement>© 2022, Heckert et al</copyright-statement><copyright-year>2022</copyright-year><copyright-holder>Heckert et al</copyright-holder><ali:free_to_read/><license xlink:href="http://creativecommons.org/licenses/by/4.0/"><ali:license_ref>http://creativecommons.org/licenses/by/4.0/</ali:license_ref><license-p>This article is distributed under the terms of the <ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/licenses/by/4.0/">Creative Commons Attribution License</ext-link>, which permits unrestricted use and redistribution provided that the original author and source are credited.</license-p></license></permissions><self-uri content-type="pdf" xlink:href="elife-70169-v1.pdf"/><self-uri content-type="figures-pdf" xlink:href="elife-70169-figures-v1.pdf"/><abstract><p>Single-particle tracking (SPT) directly measures the dynamics of proteins in living cells and is a powerful tool to dissect molecular mechanisms of cellular regulation. Interpretation of SPT with fast-diffusing proteins in mammalian cells, however, is complicated by technical limitations imposed by fast image acquisition. These limitations include short trajectory length due to photobleaching and shallow depth of field, high localization error due to the low photon budget imposed by short integration times, and cell-to-cell variability. To address these issues, we investigated methods inspired by Bayesian nonparametrics to infer distributions of state parameters from SPT data with short trajectories, variable localization precision, and absence of prior knowledge about the number of underlying states. We discuss the advantages and disadvantages of these approaches relative to other frameworks for SPT analysis.</p></abstract><kwd-group kwd-group-type="author-keywords"><kwd>mammalian cell culture</kwd><kwd>U2OS osteosarcoma</kwd><kwd>single-particle tracking</kwd></kwd-group><kwd-group kwd-group-type="research-organism"><title>Research organism</title><kwd>Human</kwd></kwd-group><funding-group><award-group id="fund1"><funding-source><institution-wrap><institution-id institution-id-type="FundRef">http://dx.doi.org/10.13039/100000002</institution-id><institution>National Institutes of Health</institution></institution-wrap></funding-source><award-id>GM098218</award-id><principal-award-recipient><name><surname>Heckert</surname><given-names>Alec</given-names></name></principal-award-recipient></award-group><award-group id="fund2"><funding-source><institution-wrap><institution-id institution-id-type="FundRef">http://dx.doi.org/10.13039/100000011</institution-id><institution>Howard Hughes Medical Institute</institution></institution-wrap></funding-source><award-id>CC34430</award-id><principal-award-recipient><name><surname>Tijan</surname><given-names>Robert</given-names></name></principal-award-recipient></award-group><award-group id="fund3"><funding-source><institution-wrap><institution-id institution-id-type="FundRef">http://dx.doi.org/10.13039/100000002</institution-id><institution>National Institutes of Health</institution></institution-wrap></funding-source><award-id>1U54CA231641</award-id><principal-award-recipient><name><surname>Darzacq</surname><given-names>Xavier</given-names></name></principal-award-recipient></award-group><funding-statement>The funders had no role in study design, data collection and interpretation, or the decision to submit the work for publication.</funding-statement></funding-group><custom-meta-group><custom-meta specific-use="meta-only"><meta-name>Author impact statement</meta-name><meta-value>Tracking proteins in live cells is challenging due to technical limitations and biological complexity, but approaches based in Bayesian nonparametrics stand a decent chance at recovering a target protein's dynamic profile from noisy data.</meta-value></custom-meta></custom-meta-group></article-meta></front><body><sec id="s1" sec-type="intro"><title>Introduction</title><p>Biological processes are driven by interactions between molecules. To understand the role of a molecular species in a process, a central challenge is to measure subpopulations of the molecule engaged in distinct interactions without perturbing the living system. Some interactions – such as complex formation – cause changes in a molecule’s mobility. As a result, live-cell single-particle tracking (SPT), by separately observing the motion of individual molecules, is a promising tool to meet this challenge (<xref ref-type="bibr" rid="bib70">Shen et al., 2017</xref>).</p><p>While SPT originally targeted proteins on cellular membranes, advances in the past two decades led to intracellular applications (<xref ref-type="bibr" rid="bib4">Barak and Webb, 1982</xref>, <xref ref-type="bibr" rid="bib21">Ghosh and Webb, 1994</xref>, <xref ref-type="bibr" rid="bib41">Kubitscheck et al., 2000</xref>, <xref ref-type="bibr" rid="bib24">Goulian and Simon, 2000</xref>). These include the use of stochastic labeling to isolate a single emitter’s path (<xref ref-type="bibr" rid="bib48">Manley et al., 2008</xref>), a principle that can be extended into intracellular settings with genetically encoded photoconvertible proteins (<xref ref-type="bibr" rid="bib2">Ando et al., 2002</xref>, <xref ref-type="bibr" rid="bib75">Wiedenmann et al., 2004</xref>) or cell-permeable dyes (<xref ref-type="bibr" rid="bib25">Grimm et al., 2015</xref>, <xref ref-type="bibr" rid="bib26">Grimm et al., 2016</xref>). Another advance is pulsed or ‘stroboscopic’ excitation, which reduces blur associated with fast-diffusing emitters (<xref ref-type="bibr" rid="bib16">Elf et al., 2007</xref>). Together with modifications of TIRF microscopes (<xref ref-type="bibr" rid="bib74">Tokunaga et al., 2008</xref>), these techniques have facilitated the application of SPT to intracellular settings with fast-moving subpopulations (<xref ref-type="bibr" rid="bib17">English et al., 2011</xref>, <xref ref-type="bibr" rid="bib64">Persson et al., 2013</xref>, <xref ref-type="bibr" rid="bib38">Izeddin et al., 2014</xref>, <xref ref-type="bibr" rid="bib62">Normanno et al., 2015</xref>, <xref ref-type="bibr" rid="bib27">Hansen et al., 2017</xref>). Following <xref ref-type="bibr" rid="bib48">Manley et al., 2008</xref>, we refer to this experiment as ‘sptPALM’ (<xref ref-type="fig" rid="fig1">Figure 1A</xref>, <xref ref-type="video" rid="video1">Video 1</xref>).</p><fig-group><fig id="fig1" position="float"><label>Figure 1.</label><caption><title>Overview of sptPALM.</title><p>(<bold>A</bold>) Schematic of experimental setup. An inclined illumination source is used in combination with a high-numerical aperture (NA) objective to resolve molecules in a thin slice in a cell. The excitation laser is pulsed to limit motion blur. Tracking yields a set of short trajectories (mean track length 3–5 frames). Trajectories shown are from a 7.48 ms tracking movie with retinoic acid receptor α-HaloTag (RARA-HaloTag) labeled with photoactivatable JF549 in U2OS nuclei. Asterisks in the movie frames mark particles at the edge of the focus. (<bold>B</bold>) Schematic of our inference problem. Each trajectory’s state is assumed to be a random draw from a distribution of state parameters. The goal is to recover this distribution from the observed trajectories. (<bold>C</bold>) Effects of particle mobility on trajectory length. RARA-HaloTag trajectories from U2OS nuclei were binned into five groups based on their mean squared displacement (MSD). Individual data points are the mean trajectory length of each group for three distinct knock-in clones of RARA-HaloTag (c156: 36961 trajectories, c239: 27543 trajectories, c258: 60347 trajectories); bar heights are the means across clones.</p></caption><graphic mimetype="image" mime-subtype="tiff" xlink:href="elife-70169-fig1-v1.tif"/></fig><fig id="fig1s1" position="float" specific-use="child-fig"><label>Figure 1—figure supplement 1.</label><caption><title>Demonstrations of the effect of motion blur on the sptPALM measurement.</title><p>(<bold>A</bold>) Illustration of motion blur. Because a fluorescent emitter has non-negligible movement during a single excitation pulse, the observed intensity distribution is not representative of a point source. Any pointwise estimate of its position, including those used in this article, incurs some error. (<bold>B</bold>) Mean displacement of a 2D Brownian motion during a single excitation pulse (<inline-formula><mml:math id="inf1"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mrow><mml:mo>⟨</mml:mo><mml:mi>R</mml:mi><mml:mo>⟩</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:msqrt><mml:mi>π</mml:mi><mml:mi>D</mml:mi><mml:mi mathvariant="normal">Δ</mml:mi><mml:mi>t</mml:mi></mml:msqrt></mml:mrow></mml:mstyle></mml:math></inline-formula>). The black dotted line is the image pixel size used in the experiments in this manuscript (0.16 μm), while the red dotted line is a typical range of localization error for fixed cell PALM and STORM (10–30 nm). (<bold>C</bold>) Examples of simulated Brownian emitters with 2 ms excitation pulses. Imaging was simulated using the sptPALMsim package for a paraxial optical system (‘Materials and methods’). Also see <xref ref-type="video" rid="video5">Video 5</xref>. (<bold>D</bold>) Quantification of localization error for Brownian emitters simulated as in (<bold>C</bold>). Error was defined as the root mean squared deviation of the estimated position from the mean of the particle’s path during each pulse. (<bold>E</bold>) Scaling of estimated localization error with diffusion coefficient in real sptPALM. Trajectories were categorized according to their mean squared displacement (MSD) and for each category the localization error was estimated as the root negative covariance between sequential jumps. Individual data points in the graph represent biological replicates; each datapoint represents <italic>gt</italic><sub>19000</sub> trajectories on a separate coverslip in a separate biological clone (RARA-HT) or transfection (H2B-HT, HaloTag-NLS, HaloTag).</p></caption><graphic mimetype="image" mime-subtype="tiff" xlink:href="elife-70169-fig1-figsupp1-v1.tif"/></fig></fig-group><media mimetype="video" mime-subtype="mp4" id="video1" xlink:href="elife-70169-video1.mp4"><label>Video 1.</label><caption><title>Example of sptPALM data.</title><p>NPM1-HaloTag in U2OS osteosarcoma nuclei was labeled with 100 nM PA-JFX549-HTL for 5 min followed by washes (‘Materials and methods’), then imaged with a HiLo setup at 7.48 ms frame intervals with 1.5 ms excitation pulses. The pixel size after accounting for magnification is 160 nm. Dots and lines indicate the output of the detection and tracking algorithm; each trajectory has been given a distinct color.</p></caption></media><p>sptPALM experiments on fast-moving emitters in 3D settings pose several challenges for analysis (<xref ref-type="bibr" rid="bib28">Hansen et al., 2018</xref>). First, apparent motion in sptPALM reflects both the true motion of the emitter and error associated with the estimate for its position (‘localization error’) (<xref ref-type="bibr" rid="bib51">Martin et al., 2002</xref>, <xref ref-type="bibr" rid="bib53">Matsuoka et al., 2009</xref>). Like fixed cell PALM and STORM microscopies (<xref ref-type="bibr" rid="bib6">Betzig et al., 2006</xref>, <xref ref-type="bibr" rid="bib68">Rust et al., 2006</xref>), the magnitude of localization error in sptPALM depends on the number of photons collected from each emitter (<xref ref-type="bibr" rid="bib73">Thompson et al., 2002</xref>). But unlike fixed cell microscopies, sptPALM has another component of error due to <italic>motion blur</italic>, the convolution of the microscope’s point spread function with the path of the emitter. This component of error is not trivial: the mean 2D displacement of a Brownian particle with diffusion coefficient 10 μm<sup>2</sup> s<sup>-1</sup> during a 1 ms integration is ~180 nm, substantially larger than typical localization error in fixed cell PALM/STORM (<xref ref-type="fig" rid="fig1s1">Figure 1—figure supplement 1B</xref>). Consequently, localization error in sptPALM depends on both the emitter’s mobility and its distance from the focus and is not simple to measure (<xref ref-type="bibr" rid="bib41">Kubitscheck et al., 2000</xref>, <xref ref-type="bibr" rid="bib5">Berglund, 2010</xref>, <xref ref-type="bibr" rid="bib57">Michalet and Berglund, 2012</xref>). Pulsed excitation can be used to reduce motion blur (<xref ref-type="bibr" rid="bib16">Elf et al., 2007</xref>), but because the laser pulse still has nonzero duration (usually ≥1 ms), motion blur remains an important part of the measurement (<xref ref-type="bibr" rid="bib15">Deschout et al., 2012</xref>, <xref ref-type="bibr" rid="bib45">Lindén et al., 2017</xref>).</p><p>Second, the high numerical aperture (NA) objectives required to resolve single emitters induce short depths of field, typically less than a micron. Whereas bacteria such as <italic>Escherichia coli</italic> are often small enough to fit into the resulting focal volume, mammalian cells – with depths ≥5–10 μm – cannot. As a result, intracellular SPT experiments only capture short transits of emitters through the focal volume, a behavior termed <italic>defocalization</italic> (<xref ref-type="fig" rid="fig1">Figure 1C</xref>, <xref ref-type="video" rid="video2">Video 2</xref>, <xref ref-type="video" rid="video3">Video 3</xref>; <xref ref-type="bibr" rid="bib42">Kues and Kubitscheck, 2002</xref>, <xref ref-type="bibr" rid="bib54">Mazza et al., 2012</xref>, <xref ref-type="bibr" rid="bib28">Hansen et al., 2018</xref>). The duration of each transit depends on the emitter’s mobility. This creates a sampling problem: slow particles with long residences inside the focal volume contribute a few long trajectories, while fast particles with short residences contribute many short trajectories. Mean trajectory length is often as little as 3–4 frames, severely limiting the ability to infer dynamic parameters (such as diffusion coefficient) from any single trajectory. Fast multifocal imaging may mitigate this problem (<xref ref-type="bibr" rid="bib1">Abrahamsson et al., 2013</xref>), but such methods currently require higher photon budgets and are not yet applicable to fast-diffusing targets with high motion blur. Meanwhile, the use of cylindrical optics to encode axial position in PSF astigmatism (<xref ref-type="bibr" rid="bib39">Kao and Verkman, 1994</xref>), while popular in fixed cell PALM/STORM, is complicated in sptPALM by its resemblance to motion blur.</p><media mimetype="video" mime-subtype="mp4" id="video2" xlink:href="elife-70169-video2.mp4"><label>Video 2.</label><caption><title>Illustration of defocalization for a single regular Brownian state.</title><p>Trajectories were simulated in a 5 × 5 × 10 μm ellipsoid μm using the Euler–Maruyama scheme for regular Brownian motions with specular reflections at the ellipsoid boundaries. The diffusion coefficient for all trajectories was held constant at 2.0 μm<sup>2</sup> s<sup>-1</sup>, while trajectories were randomly photoactivated at any point in the sphere and were subject to Poisson bleaching at 14 Hz. The left panel shows the 3D context of the trajectories, with dotted lines indicating the boundaries of the focal volume. The depth of the focal volume was 700 nm, which is roughly equivalent to the measured depth of field for our oil immersion objectives. The right panel shows the projection of the trajectories that coincide with the focal volume onto a hypothetical idealized camera. Notice that particles may make multiple transits through the focal volume that manifest as distinct trajectories.</p></caption></media><media mimetype="video" mime-subtype="mp4" id="video3" xlink:href="elife-70169-video3.mp4"><label>Video 3.</label><caption><title>Illustration of defocalization for multistate regular Brownian motion.</title><p>Trajectories were drawn from two states – a fast state with diffusion coefficient 5.0 μm<sup>2</sup> and a slow state with diffusion coefficient 0.05 μm<sup>2</sup> s<sup>-1</sup> – and simulated with a spherical nucleus with 5 μm radius. The left panel shows the trajectories in their native three dimensions while the right panel shows trajectories projected through the focal volume.</p></caption></media><p>Third, the true number of dynamic subpopulations or ‘states’ for a protein of interest is usually unknown a priori. Proteins often participate in many complexes with distinct dynamics. Model-dependent analyses that assume a fixed number of states (<xref ref-type="bibr" rid="bib54">Mazza et al., 2012</xref>, <xref ref-type="bibr" rid="bib27">Hansen et al., 2017</xref>, <xref ref-type="bibr" rid="bib28">Hansen et al., 2018</xref>), while powerful when combined with complementary measurements (<xref ref-type="bibr" rid="bib38">Izeddin et al., 2014</xref>, <xref ref-type="bibr" rid="bib29">Hansen et al., 2020</xref>), are limited to measuring coefficients of known models. To compound model complexity, a protein may behave differently in distinct subcellular environments. Indeed, although sptPALM directly observes the spatial context for each trajectory (<xref ref-type="bibr" rid="bib76">Xiang et al., 2020</xref>), analyses such as jump distribution modeling often discard this information by aggregating jumps across all subcellular locations.</p><p>The central problem for sptPALM analysis is to recover the underlying dynamic states for a protein of interest given a set of observed trajectories in the presence of these three challenges.</p><p>A common approach to recover subpopulations from sptPALM is to construct histograms of the mean squared displacement (MSD), the maximum likelihood estimator for the diffusion coefficient in the absence of localization error. The MSD is highly variable for short trajectories and, when used to estimate diffusion coefficient, becomes especially error-prone when the variance of localization error is unknown (<xref ref-type="bibr" rid="bib57">Michalet and Berglund, 2012</xref>). More problematically, MSD histograms assume that sampling from slow and fast states with equal occupation produces the same number of trajectories, which leads to severe state biases in the presence of defocalization (<xref ref-type="bibr" rid="bib54">Mazza et al., 2012</xref>, <xref ref-type="bibr" rid="bib28">Hansen et al., 2018</xref>). Common preprocessing steps to select for long trajectories compound the problem by introducing biases for slow emitters that remain in focus.</p><p>Methods based on least-squares fitting of the jump length cumulative distribution function (CDF) have interpreted sptPALM data with two- and three-state models while accounting for defocalization (<xref ref-type="bibr" rid="bib54">Mazza et al., 2012</xref>, <xref ref-type="bibr" rid="bib28">Hansen et al., 2018</xref>), but extend poorly to more complex models due to overfitting and do not provide a way to select between competing models.</p><p>A different approach to model selection is represented by vbSPT, a variational Bayesian framework for reaction-diffusion models (<xref ref-type="bibr" rid="bib64">Persson et al., 2013</xref>). vbSPT relies on the evidence lower bound to identify the number of states, and it excels at recovering occupations and transition rates for a small number of diffusing states from short trajectories. However, it is not appropriate to apply in situations where the target’s dynamic profile is not discrete and does not consider defocalization or localization error, although it can be complemented with a separate estimate of localization error (<xref ref-type="bibr" rid="bib45">Lindén et al., 2017</xref>). As such, there is a need for methods that combine the advantages of Bayesian methods like vbSPT with a model that can accommodate nondiscrete dynamic profiles, while accounting for biases induced by sptPALM imaging geometry.</p><p>Here, we examine two alternative methods for recovering an sptPALM target’s dynamic profile. The first is based on a Dirichlet process mixture model (DPMM) and the second on a finite state approximation to the DPMM that we refer to as a state array (SA). Exploring these techniques on simulated and real datasets, we find that although both DPMMs and SAs recover complex mixtures of states and can be applied to nondiscrete distributions of diffusion coefficients, SAs far outperform DPMMs due to their robustness to variable localization error variance. Both methods share the limitation that they do not deal with transitions between states. We investigate how this limitation affects apparent state occupations recovered with these methods.</p><p>The SA method is publicly available as the <monospace>pip</monospace>-installable Python package <monospace>saspt</monospace> (source: <ext-link ext-link-type="uri" xlink:href="https://github.com/alecheckert/saspt">https://github.com/alecheckert/saspt</ext-link>; <xref ref-type="bibr" rid="bib33">Heckert, 2022c</xref> documentation: <ext-link ext-link-type="uri" xlink:href="https://saspt.readthedocs.io/en/latest/">https://saspt.readthedocs.io/en/latest/</ext-link>).</p></sec><sec id="s2" sec-type="results"><title>Results</title><sec id="s2-1"><title>Two approaches to infer subpopulations in sptPALM datasets</title><p>We considered how to infer dynamic subpopulations from the short, fragmented trajectories produced by sptPALM in a manner robust to the effects of localization error and defocalization (<xref ref-type="fig" rid="fig1">Figure 1</xref>).</p><p>A simple and popular approach to this problem is to make a separate estimate for the parameters of each trajectory, then compile a histogram of the results. In the case of Brownian motion, we refer to this method as the ‘MSD histogram’ approach since the MSD is the maximum likelihood estimator for the diffusion coefficient of a Brownian motion with no localization error.</p><p>Real estimates of a particle’s position, however, are invariably associated with localization error. In sptPALM, this problem is more significant due to motion blur, which increases the magnitude of the error (<xref ref-type="fig" rid="fig1s1">Figure 1—figure supplement 1</xref>). To incorporate these effects, we refer to the combination of regular Brownian motion with normally distributed, mean-zero localization error as ‘RBME’ (‘Materials and methods’). Each RBME is characterized by two parameters: the diffusion coefficient and the localization error variance. (For brevity, we refer to the latter simply as ‘localization error.’) Importantly, the increments of RBME are only Markovian when the localization error is zero (<xref ref-type="bibr" rid="bib51">Martin et al., 2002</xref>; <xref ref-type="fig" rid="fig1s1">Figure 1—figure supplement 1</xref>).</p><p>Because individual trajectories produced by sptPALM are usually too short to estimate localization error, and because it does not take into account other effects like defocalization, the MSD histogram approach is prone to large systematic biases (<xref ref-type="bibr" rid="bib57">Michalet and Berglund, 2012</xref>, <xref ref-type="bibr" rid="bib28">Hansen et al., 2018</xref>). While techniques exist to mitigate some biases of MSD fitting (<xref ref-type="bibr" rid="bib40">Kepten et al., 2015</xref>), most are difficult to apply at the single trajectory level due to the small number of points per trajectory.</p><p>A distinct approach is represented by Bayesian finite state mixture models (<xref ref-type="bibr" rid="bib49">Marin et al., 2005</xref>, <xref ref-type="bibr" rid="bib55">McLachlan et al., 2019</xref>; <xref ref-type="fig" rid="fig2">Figure 2A</xref>, <xref ref-type="fig" rid="fig2s1">Figure 2—figure supplement 1A</xref>). Such models are comprised of a collection of <italic>states</italic> labeled <inline-formula><mml:math id="inf2"><mml:mrow><mml:mi>k</mml:mi><mml:mo>=</mml:mo><mml:mrow><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mi mathvariant="normal">…</mml:mi><mml:mo>,</mml:mo><mml:mi>K</mml:mi></mml:mrow></mml:mrow></mml:math></inline-formula>. Each state is associated with an occupation <inline-formula><mml:math id="inf3"><mml:msub><mml:mi>τ</mml:mi><mml:mi>k</mml:mi></mml:msub></mml:math></inline-formula> (describing the probability to observe trajectories from that state) and a vector of state parameters <inline-formula><mml:math id="inf4"><mml:msub><mml:mi mathvariant="bold-italic">θ</mml:mi><mml:mi>k</mml:mi></mml:msub></mml:math></inline-formula> (describing the kind of trajectories produced by that state). Importantly, <inline-formula><mml:math id="inf5"><mml:msub><mml:mi mathvariant="bold-italic">θ</mml:mi><mml:mi>k</mml:mi></mml:msub></mml:math></inline-formula> can also incorporate measurement parameters like the localization error. The probability to observe a particular trajectory <inline-formula><mml:math id="inf6"><mml:mi>x</mml:mi></mml:math></inline-formula> is then <inline-formula><mml:math id="inf7"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:munderover><mml:mo>∑</mml:mo><mml:mrow><mml:mi>k</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mi>K</mml:mi></mml:mrow></mml:munderover><mml:msub><mml:mi>τ</mml:mi><mml:mrow><mml:mi>k</mml:mi></mml:mrow></mml:msub><mml:msub><mml:mi>p</mml:mi><mml:mrow><mml:mi>X</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:mi>x</mml:mi><mml:mrow><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:msub><mml:mi mathvariant="bold-italic">θ</mml:mi><mml:mrow><mml:mi>k</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mstyle></mml:math></inline-formula>, where <inline-formula><mml:math id="inf8"><mml:mrow><mml:msub><mml:mi>p</mml:mi><mml:mi>X</mml:mi></mml:msub><mml:mo>⁢</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi>x</mml:mi><mml:mo lspace="2.5pt" rspace="2.5pt" stretchy="false">|</mml:mo><mml:msub><mml:mi mathvariant="bold-italic">θ</mml:mi><mml:mi>k</mml:mi></mml:msub></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula> is a distribution over trajectories produced by state <inline-formula><mml:math id="inf9"><mml:mi>k</mml:mi></mml:math></inline-formula> and depends on the type of motion being considered. The goal is to infer <inline-formula><mml:math id="inf10"><mml:msub><mml:mi>τ</mml:mi><mml:mi>k</mml:mi></mml:msub></mml:math></inline-formula> and <inline-formula><mml:math id="inf11"><mml:msub><mml:mi mathvariant="bold-italic">θ</mml:mi><mml:mi>k</mml:mi></mml:msub></mml:math></inline-formula> for each state given some observed set of trajectories <inline-formula><mml:math id="inf12"><mml:mi mathvariant="bold-italic">F</mml:mi></mml:math></inline-formula>. A challenge with such methods is choosing the number of states <inline-formula><mml:math id="inf13"><mml:mi>K</mml:mi></mml:math></inline-formula> as well as the high computational cost when <inline-formula><mml:math id="inf14"><mml:mrow><mml:msub><mml:mi>p</mml:mi><mml:mi>X</mml:mi></mml:msub><mml:mo>⁢</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi>x</mml:mi><mml:mo lspace="2.5pt" rspace="2.5pt" stretchy="false">|</mml:mo><mml:mi mathvariant="bold-italic">θ</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula> is nonconjugate to the prior over <inline-formula><mml:math id="inf15"><mml:mi mathvariant="bold-italic">θ</mml:mi></mml:math></inline-formula>.</p><fig-group><fig id="fig2" position="float"><label>Figure 2.</label><caption><title>Schematic comparison of finite state mixtures, Dirichlet process mixtures, and state arrays (SAs).</title><p>(<bold>A</bold>) Finite state mixture models use a discrete set of <inline-formula><mml:math id="inf16"><mml:mi>K</mml:mi></mml:math></inline-formula> states. Challenges include estimating <inline-formula><mml:math id="inf17"><mml:mi>K</mml:mi></mml:math></inline-formula> and producing intelligible output when the underlying dynamic profile is not discrete. (<bold>B</bold>) Dirichlet process mixture models (DPMMs) address the problem of nondiscrete dynamic profiles by using a continuous distribution over state parameters. Inference routines are slow, so in this work we use approximative motion models. (<bold>C</bold>) SAs, a special case of the finite state mixture. SAs approximate DPMMs by using a discrete grid of state parameters and have a faster inference routine. Challenges with SAs include the choice of the parameter grid.</p></caption><graphic mimetype="image" mime-subtype="tiff" xlink:href="elife-70169-fig2-v1.tif"/></fig><fig id="fig2s1" position="float" specific-use="child-fig"><label>Figure 2—figure supplement 1.</label><caption><title>Probabilistic graphical models for finite state mixtures, Dirichlet process mixtures, and state arrays.</title><p>Open circles indicate random variables, shaded circles represented random variables that are observed in the sptPALM experiment, solid circles indicate constants, and arrows indicate conditional dependence (<xref ref-type="bibr" rid="bib7">Bishop, 2006</xref>). (<bold>A</bold>) Graphical model for finite state mixtures. α is the concentration parameter for a Dirichlet prior over the state occupations. The usual goal is to infer the posterior <inline-formula><mml:math id="inf18"><mml:mrow><mml:mi>p</mml:mi><mml:mo>⁢</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="bold-italic">Z</mml:mi><mml:mo>,</mml:mo><mml:mi mathvariant="bold-italic">τ</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mi mathvariant="bold-italic">θ</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:mi mathvariant="normal">…</mml:mi><mml:mo>,</mml:mo><mml:mrow><mml:msub><mml:mi mathvariant="bold-italic">θ</mml:mi><mml:mi>K</mml:mi></mml:msub><mml:mo lspace="2.5pt" rspace="2.5pt" stretchy="false">|</mml:mo><mml:mi mathvariant="bold-italic">F</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula>. (<bold>B</bold>) Graphical model for Dirichlet process mixtures. α and <inline-formula><mml:math id="inf19"><mml:mi>H</mml:mi></mml:math></inline-formula> are the parameters to a Dirichlet process <inline-formula><mml:math id="inf20"><mml:mrow><mml:mi>D</mml:mi><mml:mo>⁢</mml:mo><mml:mi>P</mml:mi><mml:mo>⁢</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>α</mml:mi><mml:mo>,</mml:mo><mml:mi>H</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula> used to generate candidate distributions <inline-formula><mml:math id="inf21"><mml:mi>G</mml:mi></mml:math></inline-formula>. The usual goal is to infer the posterior <inline-formula><mml:math id="inf22"><mml:mrow><mml:mi>p</mml:mi><mml:mo>⁢</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi mathvariant="bold-italic">θ</mml:mi><mml:mo lspace="2.5pt" rspace="2.5pt" stretchy="false">|</mml:mo><mml:mi mathvariant="bold-italic">F</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula>. (<bold>C</bold>) Graphical model for state arrays. Notice that this is a special case of (<bold>A</bold>) when the state parameters are treated as constant. The goal is to infer <inline-formula><mml:math id="inf23"><mml:mrow><mml:mi>p</mml:mi><mml:mo>⁢</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="bold-italic">Z</mml:mi><mml:mo>,</mml:mo><mml:mrow><mml:mi mathvariant="bold-italic">τ</mml:mi><mml:mo lspace="2.5pt" rspace="2.5pt" stretchy="false">|</mml:mo><mml:mi mathvariant="bold-italic">F</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula>.</p></caption><graphic mimetype="image" mime-subtype="tiff" xlink:href="elife-70169-fig2-figsupp1-v1.tif"/></fig></fig-group><p>Potential solutions can be found in the Bayesian nonparametric class of methods. These approaches begin with a single model comprising a very large or infinite collection of states. A Bayesian inference algorithm is then used to prune away superfluous complexity, leaving a sparse subset of states sufficient to explain the observed trajectories. The foundational example is the DPMM (<xref ref-type="bibr" rid="bib19">Ferguson, 1973</xref>), which has the distinct advantage of being able to approximate essentially any mixture of states, discrete or continuous (<xref ref-type="bibr" rid="bib60">Neal, 1992</xref>, <xref ref-type="bibr" rid="bib72">Teh, 2010</xref>; <xref ref-type="fig" rid="fig2">Figure 2B</xref>). Its disadvantage is the high computational cost associated with inference, which becomes especially severe when considering types of motion with multiple parameters (such as RBME) (<xref ref-type="bibr" rid="bib61">Neal, 2000</xref>, <xref ref-type="bibr" rid="bib3">Andrieu et al., 2003</xref>).</p><p>We considered two responses to this challenge. First, we constructed a DPMM that uses a cheap approximation to RBME by treating the RBME as a Markov process (<xref ref-type="bibr" rid="bib52">Matsuda et al., 2018</xref>; <xref ref-type="fig" rid="fig3">Figure 3C</xref>). This assumption is strictly true only when the localization error is zero and is the same assumption used to estimate diffusion coefficient via the MSD (<xref ref-type="bibr" rid="bib57">Michalet and Berglund, 2012</xref>). Because localization error is never actually zero, we were curious to see when and how this method breaks down.</p><fig-group><fig id="fig3" position="float"><label>Figure 3.</label><caption><title>Application of state arrays and Dirichlet process mixture models (DPMMs) to mixtures of Brownian motions.</title><p>(<bold>A</bold>) Regular Brownian motion with localization error (RBME) is a motion model that involves two parameters: diffusion coefficient and localization error variance. (For brevity, we refer to the latter simply as ‘localization error.’) Unlike pure Brownian motion, RBME has correlations between sequential jumps due to the influence of localization error. (<bold>B</bold>) State array inference for RBMEs. The naive occupation estimate is the initial estimate for the posterior, which is subsequently refined through variational inference. At the end of inference, we marginalize out localization error to yield 1D distributions over the diffusion coefficient. (<bold>C</bold>) DPMM inference for mixtures of Brownian motions. Because the Gibbs sampling routine for a pure DPMM is slow, we use an approximative motion model that neglects the off-diagonal terms of the covariance matrix in (<bold>A</bold>). (<bold>D</bold>) Example of state arrays evaluated on simulated sptPALM. Tracking was simulated in a spherical nucleus with 700 nm focal depth, uniform photoactivation probability, 14 Hz bleaching rate, 7.48 ms frame intervals, and variable localization error. The lines represent the state array posterior mean occupations for independent replicates of the same simulation.</p></caption><graphic mimetype="image" mime-subtype="tiff" xlink:href="elife-70169-fig3-v1.tif"/></fig><fig id="fig3s1" position="float" specific-use="child-fig"><label>Figure 3—figure supplement 1.</label><caption><title>Challenges distinguishing between diffusion and localization error.</title><p>(<bold>A</bold>) The variance of the jumps of a regular Brownian motion with localization error (RBME) depends on both real diffusion and localization error. (<bold>B</bold>) Naive state occupation estimates for two experimental sptPALM datasets. Dotted white lines indicate contours in the state space with constant jump variance. (<bold>C</bold>) Illustration of the difficulty in coinference of diffusion coefficient and localization error for a simulated sptPALM dataset with four states. (<bold>D</bold>) Illustration of the danger of misestimating the localization error for the Dirichlet process mixture model (DPMM) method with simulated mixtures of three RBME states. In this case, the assumed localization error in the DPMM algorithm was held constant at 30 nm. Because state arrays (SAs) naturally incorporate uncertainty about localization error, inference is more stable with respect to changes in the experimental localization error. Note that this has a stronger effect on slower-moving states.</p></caption><graphic mimetype="image" mime-subtype="tiff" xlink:href="elife-70169-fig3-figsupp1-v1.tif"/></fig><fig id="fig3s2" position="float" specific-use="child-fig"><label>Figure 3—figure supplement 2.</label><caption><title>Accounting for the influence of defocalization on state occupations.</title><p>(<bold>A</bold>) Demonstration of the effect of defocalization on trajectory length. 340,727 Brownian trajectories were simulated in a 5 μm radius nucleus with a 700 nm focal depth and 14 Hz bleaching rate. The diffusion coefficients for each trajectory were drawn with equal probability from a slow state (0.05 μm<sup>2</sup> s<sup>-1</sup>) and a fast state (5 μm<sup>2</sup> s<sup>-1</sup>). Tracking was simulated without gaps, so that particles outside the focal volume at any frame interval are considered ‘lost’ for all subsequent frames. For each observed trajectory length, we quantified the fraction of trajectories with that length in the fast state. (<bold>B</bold>) Approach used to calculate the fraction of defocalized trajectories. Two possible initial probability densities for the particle in <inline-formula><mml:math id="inf24"><mml:mi>z</mml:mi></mml:math></inline-formula> are shown. The Green’s function for the diffusion model is used to propagate the probability density. At each frame interval, the density that lies outside the focal volume (corresponding to particles that are not observed) is set to zero. (<bold>C</bold>) Comparison of the algorithm in (<bold>B</bold>) with the defocalized fraction from simulated data. Trajectories were initialized in a slab with thickness <inline-formula><mml:math id="inf25"><mml:mrow><mml:mi mathvariant="normal">Δ</mml:mi><mml:mo>⁢</mml:mo><mml:mi>z</mml:mi></mml:mrow></mml:math></inline-formula> and infinite XY extent, then tracked without gaps. The fraction of trajectories remaining was quantified at each frame interval. Each black dot corresponds to a simulation with 100,000 trajectories, while the lines correspond to the output of the algorithm in (<bold>B</bold>).</p></caption><graphic mimetype="image" mime-subtype="tiff" xlink:href="elife-70169-fig3-figsupp2-v1.tif"/></fig></fig-group><p>The second approach we explored is a model we refer to as a ‘state array’ (SA). This model is a special case of the finite state mixture, obtained by selecting a large number of states <inline-formula><mml:math id="inf26"><mml:mi>K</mml:mi></mml:math></inline-formula> and fixing the state parameters to the vertices of an ‘array’ that spans some target parameter space (<xref ref-type="fig" rid="fig2">Figure 2C</xref>, <xref ref-type="fig" rid="fig2s1">Figure 2—figure supplement 1</xref>). For example, the array for RBME might span a range of biologically plausible diffusion coefficients and localization error variances. An array for an anomalous diffusion model may also incorporate one or more anomaly parameters. The occupation of each ‘state’ in this array is inferred through a variational Bayesian algorithm, driving the occupation of most states to zero to leave a minimal set sufficient to explain the observations (‘Materials and methods’). Importantly, SAs jointly infer a ‘global’ distribution over the state parameters along with ‘individual’ distributions for each trajectory. The nature of the variational inference algorithm means that the ‘global’ distribution is always a weighted mean of these ‘individual’ distributions. We focus our attention on the global distribution in this article, with some consideration of the individual distributions for each trajectory at the end.</p><p>Because the parameters for each state in an SA are fixed, the most expensive computations can be cached and reused throughout inference. As a result, SAs can handle more complex models than DPMMs. In this article, we use a 2D SA for RBME spanning a range of diffusion coefficients and localization error variances. After inference, we marginalize out the localization error part to yield 1D functions of the diffusion coefficient (<xref ref-type="fig" rid="fig3">Figure 3B</xref>). This procedure naturally incorporates uncertainty about localization error variance, rendering SAs more robust to variations in localization error than DPMMs (<xref ref-type="fig" rid="fig3s1">Figure 3—figure supplement 1</xref>).</p><p>DPMMs and SAs work best with thousands to tens of thousands of trajectories. This often requires aggregating trajectories across multiple cells, which can mask cell-to-cell variability. To assess cell-to-cell variability, we also found it useful to have a ‘cheap and dirty’ estimate of state occupation that works with a smaller number (100 s) of trajectories. This is derived from the SA calculation and is simply the sum of the normalized RBME likelihood function across all of the trajectories observed in a cell. We refer to this as the ‘naive occupation estimate.’ Functionally it behaves like a less precise version of the SA method (‘Materials and methods’).</p><p>Finally, to account for defocalization we developed a method applicable to the posterior distributions of both DPMMs and SAs (<xref ref-type="fig" rid="fig3s2">Figure 3—figure supplement 2</xref>, ‘Materials and methods’).</p></sec><sec id="s2-2"><title>Evaluating DPMMs and SAs on simulated sptPALM data</title><p>As the target for inference, we considered a mixture of RBMEs enclosed in a spherical membrane with a thin focal volume bisecting the sphere, with dimensions similar to a mammalian cell nucleus. Emitters photoactivate and photobleach throughout the sphere and are only observed when their positions coincide with the focal volume. Because no gaps are allowed during tracking, the result is a highly fragmented set of trajectories with mean length 3–5 frames. We chose simulation settings to approximate real sptPALM experiments, with bleaching rates ≥10 Hz, diffusion coefficients in the range 0–100 μm<sup>2</sup> s<sup>-1</sup>, and localization error variances between 0<sup>2</sup> and 0.06<sup>2</sup>μm<sup>2</sup>.</p><p>We compared the ability of DPMMs, SAs, and MSD histograms to recover the underlying distribution of diffusion coefficients from this data. We divided these simulations into four classes with increasing difficulty. In class 1, localization error for all states was provided as a known constant to the algorithms (<xref ref-type="fig" rid="fig4">Figure 4A</xref>, <xref ref-type="fig" rid="fig4s1">Figure 4—figure supplement 1A</xref>). In class 2, localization error was held constant for all states but was unknown to the algorithms (<xref ref-type="fig" rid="fig4">Figure 4B</xref>, <xref ref-type="fig" rid="fig4s1">Figure 4—figure supplement 1B</xref>). In class 3, localization error was allowed to vary between diffusive states and was also unknown to the algorithms (<xref ref-type="fig" rid="fig4">Figure 4C</xref>, <xref ref-type="fig" rid="fig4s1">Figure 4—figure supplement 1C</xref>). Finally, for class 4 we simulated full sptPALM-like movies that incorporate heterogeneous localization error, motion blur, camera noise, tracking errors, and defocus (<xref ref-type="fig" rid="fig4s5">Figure 4—figure supplement 5</xref>, <xref ref-type="fig" rid="fig4s6">Figure 4—figure supplement 6</xref>). In these simulations, the localization error is unique for each emitter and depends on the emitter’s axial position, the stochastic number of photons it emits during each integration, and its pattern of motion blur (<xref ref-type="video" rid="video4">Video 4</xref>, <xref ref-type="video" rid="video5">Video 5</xref>).</p><fig-group><fig id="fig4" position="float"><label>Figure 4.</label><caption><title>Comparison of the mean squared displacement (MSD) histogram, Dirichlet process mixture model (DPMM), and state array (SA) methods to recover dynamic profiles from trajectory simulations.</title><p>(<bold>A–C</bold>) Mixtures of diffusing states were simulated in a 700 nm focal volume with 7.48 ms frame intervals. Simulations were divided into three classes of increasing difficulty based on the treatment of localization error as described in the text. For each replicate, exactly 12,800 trajectories were simulated. Estimated occupations for five independent replicates are overlaid on each subplot. (<bold>D</bold>) Accuracy of state occupation estimates for each method as a function of sample size. Each method was run on trajectory simulations generated from an underlying three-state dynamic model (0.02 μm<sup>2</sup> s<sup>-1</sup> [20%], 0.5 μm<sup>2</sup> s<sup>-1</sup> [30%], 5.0 μm<sup>2</sup> s<sup>-1</sup> [50%]), then occupations were estimated by integrating the distribution produced by each method. Limits of integration were set to 0–0.08 μm<sup>2</sup> s<sup>-1</sup> (state 1), 0.08–1.5 μm<sup>2</sup> s<sup>-1</sup> (state 2), or 1.5–40 μm<sup>2</sup> s<sup>-1</sup> (state 3). 20 replicates were run per condition. (<bold>E</bold>) Mean absolute error (MAE) in state occupation estimates for the simulations in (<bold>D</bold>). Each value is the average MAE across all replicates. (<bold>F</bold>) Inferring mixtures of diffusing states with similar diffusion coefficients using SAs. For each replicate, a total of 6400 trajectories were simulated with the indicated underlying state distribution. (<bold>G</bold>) Effect of state transitions on the MSD, DPMM, and SA approaches. We varied the first-order transition rate constant between two diffusing states, simulating 6400 trajectories per replicate.</p></caption><graphic mimetype="image" mime-subtype="tiff" xlink:href="elife-70169-fig4-v1.tif"/></fig><fig id="fig4s1" position="float" specific-use="child-fig"><label>Figure 4—figure supplement 1.</label><caption><title>Comparison of Dirichlet process mixture models (DPMMs), state arrays (SAs), and mean squared displacement (MSD) histograms to estimate state occupations for several kinds of trajectory simulation.</title><p>In all panels, the y-axis represents the probability (or inferred probability) of a particular diffusion coefficient. In detail: for the ground truth, the y-axis is the probability of simulating a particular diffusion coefficient. For the MSD approach, the y-axis is the proportion of trajectories with estimated diffusion coefficients that fall into the corresponding bin. For the DPMM and SA methods, the y-axis is the posterior probability of each of a discrete set of diffusion coefficient bins spanning 0.01–100.0 μm<sup>2</sup> s<sup>-1</sup>. In the case of SA, this posterior probability has been marginalized over the localization error component. Five independent replicates are overlaid on each subplot. (<bold>A</bold>) ‘Class 1’ simulations with known and constant localization error (standard deviation 30 nm). (<bold>B</bold>) ‘Class 2’ simulations with constant but unknown localization error (standard deviation 30 nm). In the cases of DPMM and MSD, the localization error was first inferred using jump covariance and then held constant when estimating the distribution over the diffusion coefficient. In the case of SA, the localization error is jointly inferred with the diffusion coefficient. (<bold>C</bold>) ‘Class 3’ simulations with variable and unknown localization error. Inference proceeded as in (<bold>B</bold>), but in the case of the MSD approach, the localization error and diffusion coefficient were jointly inferred for each trajectory.</p></caption><graphic mimetype="image" mime-subtype="tiff" xlink:href="elife-70169-fig4-figsupp1-v1.tif"/></fig><fig id="fig4s2" position="float" specific-use="child-fig"><label>Figure 4—figure supplement 2.</label><caption><title>Quantitative comparison of the results in <xref ref-type="fig" rid="fig4s1">Figure 4—figure supplement 1</xref>.</title><p>Accuracy of the mean squared displacement (MSD) histogram, Dirichlet process mixture model (DPMM), and state array (SA) methods for estimating dynamic profiles. The trajectory simulations were the same as in <xref ref-type="fig" rid="fig4s1">Figure 4—figure supplement 1</xref> using 12,800 simulated trajectories. (<bold>A</bold>) In order to compare the simulated ground truth profile (which could be discrete or continuous) with the output of each method, we quantified the root mean squared deviation (RMSD) of the estimated cumulative distribution function (CDF) from the ground truth CDF. (<bold>B</bold>) Accuracies of each method in terms of CDF RMSD. Each value is the average CDF RMSD over five replicates. (<bold>C</bold>) Scatterplot of CDF RMSDs for each simulation replicate in (<bold>B</bold>). Each dot represents a replicate of the same simulation.</p></caption><graphic mimetype="image" mime-subtype="tiff" xlink:href="elife-70169-fig4-figsupp2-v1.tif"/></fig><fig id="fig4s3" position="float" specific-use="child-fig"><label>Figure 4—figure supplement 3.</label><caption><title>Effect of sample size on accuracy and precision of the mean squared displacement (MSD) histogram, Dirichlet process mixture model (DPMM), and state array (SA) methods using two-state trajectory simulations.</title><p>(<bold>A</bold>) Trajectories were simulated with two distinct diffusion coefficients (0.1 μm<sup>2</sup> s<sup>-1</sup> [40% occupation] and 5.0 μm<sup>2</sup> s<sup>-1</sup> [60% occupation]) in a 5 μm sphere with specular reflections, 7.48 ms frame intervals, 14 Hz bleaching rate, and a 700 nm focal depth (‘Materials and methods’). Occupation estimates were derived by integrating the normalized histogram (for the MSD method) or the mean of the posterior distribution (for DPMM and SA methods). The limits of integration for each state were identical for all methods: 0–1 μm<sup>2</sup> s<sup>-1</sup> (state 1) and 1–40 μm<sup>2</sup> s<sup>-1</sup> (state 2). (<bold>B</bold>) Estimated occupations for each state according to each method (20 replicates per sample size). (<bold>C</bold>) Mean absolute error (MAE) of state occupation estimates for each replicate in (<bold>B</bold>). (<bold>D</bold>) Tabular presentation of the data in (<bold>C</bold>). Each number is the MAE averaged across all replicates for that simulation.</p></caption><graphic mimetype="image" mime-subtype="tiff" xlink:href="elife-70169-fig4-figsupp3-v1.tif"/></fig><fig id="fig4s4" position="float" specific-use="child-fig"><label>Figure 4—figure supplement 4.</label><caption><title>Effect of sample size on accuracy and precision of the mean squared displacement (MSD) histogram, Dirichlet process mixture model (DPMM), and state array (SA) methods using four-state trajectory simulations.</title><p>(<bold>A</bold>) Trajectories were simulated with four distinct diffusion coefficients: 0.02 μm<sup>2</sup> s<sup>-1</sup> (10% occupation), 0.2 μm<sup>2</sup> s<sup>-1</sup> (40% occupation), 1.0 μm<sup>2</sup> s-<sup>1</sup> (20% occupation), or 8.0 μm<sup>2</sup> s<sup>-1</sup> (30% occupation). Apart from the dynamic model, the simulation was performed as in <xref ref-type="fig" rid="fig4s3">Figure 4—figure supplement 3</xref>. Occupation estimates were derived by integrating the normalized histogram (for the MSD method) or the mean of the posterior distribution (for DPMM and SA methods). The limits of integration for each state were identical for all methods: 0.0–0.08 μm<sup>2</sup> s-<sup>1</sup> (state 1), 0.08–0.5 μm<sup>2</sup> s-<sup>1</sup> (state 2), 0.5–3 μm<sup>2</sup> s<sup>-1</sup> (state 3), and 3–40 μm<sup>2</sup> s-<sup>1</sup> (state 4). (<bold>B</bold>) Estimated occupations for each state according to each method (20 replicates per sample size). (<bold>C</bold>) Mean absolute error of state occupation estimates for each replicate in (<bold>B</bold>). (<bold>D</bold>) Tabular presentation of the data in (<bold>C</bold>). Each number is the average across all replicates for that simulation.</p></caption><graphic mimetype="image" mime-subtype="tiff" xlink:href="elife-70169-fig4-figsupp4-v1.tif"/></fig><fig id="fig4s5" position="float" specific-use="child-fig"><label>Figure 4—figure supplement 5.</label><caption><title>State array and Dirichlet process mixture model (DPMM) performance on optical–dynamical simulations of sptPALM movies with two diffusing states.</title><p>(<bold>A</bold>) Summary of approach. We simulated a paraxial imaging system and generated SPT movies by systematically varying the state occupations and fast diffusion coefficients for a two-state Brownian model (‘Materials and methods’). After simulation, we ran tracking and state array or DPMM inference, then compared the recovered state occupations with the simulated ground truth. About 5000 trajectories were identified by the tracking algorithm per condition. (<bold>B</bold>) Posterior mean occupations for each simulated condition. Each row corresponds to a distinct value for <inline-formula><mml:math id="inf27"><mml:msub><mml:mi>D</mml:mi><mml:mtext>fast</mml:mtext></mml:msub></mml:math></inline-formula> and each color to a distinct slow state occupation; arrows indicate the simulated ground truth states.</p></caption><graphic mimetype="image" mime-subtype="tiff" xlink:href="elife-70169-fig4-figsupp5-v1.tif"/></fig><fig id="fig4s6" position="float" specific-use="child-fig"><label>Figure 4—figure supplement 6.</label><caption><title>State array and Dirichlet process mixture model (DPMM) accuracy 2.</title><p>Quantitative evaluation of state array and DPMM performance on optical–dynamical simulations from <xref ref-type="fig" rid="fig4s5">Figure 4—figure supplement 5</xref>. (<bold>A</bold>) Accuracy of state occupation retrieval. The ‘slow fraction’ was defined as the integrated posterior occupation below 0.04 μm<sup>2</sup> s<sup>-1</sup> and compared against the ground truth. (<bold>B</bold>) Accuracy of fast diffusion coefficient estimation. The fast diffusion coefficient (‘<inline-formula><mml:math id="inf28"><mml:msub><mml:mi>D</mml:mi><mml:mtext>fast</mml:mtext></mml:msub></mml:math></inline-formula>’) was defined as the mean diffusion coefficient above 0.04 μm<sup>2</sup> s<sup>-1</sup>.</p></caption><graphic mimetype="image" mime-subtype="tiff" xlink:href="elife-70169-fig4-figsupp6-v1.tif"/></fig><fig id="fig4s7" position="float" specific-use="child-fig"><label>Figure 4—figure supplement 7.</label><caption><title>Effect of state transitions on Dirichlet process mixture model (DPMM) and state array (SA) methods.</title><p>(<bold>A</bold>) State diagram for two-state regular Brownian motion with first-order state transitions. The transition rate constant <inline-formula><mml:math id="inf29"><mml:mi>k</mml:mi></mml:math></inline-formula> was identical for both transitions. (<bold>B</bold>) Settings for the state transition simulations. Under these conditions, the mean trajectory length was 7 frames. 6400 trajectories were used for each run. (<bold>C</bold>) Outcome of the simulations. The y-axis corresponds to the occupation or occupation estimate for a particular diffusion coefficient. Specifically, for the ground truth column, the y-axis is the probability to simulate a particular diffusion coefficient; for mean squared displacement (MSD), it is the fraction of trajectories with estimated diffusion coefficients that fall into the respective bin; for the DPMM and SA methods, it is the posterior mean occupation estimate. For both DPMMs and SAs, we used a maximum trajectory length of 12 frames. For the MSD, DPMM, and SA methods, the result of inference with five independent replicates is overlaid on each subplot.</p></caption><graphic mimetype="image" mime-subtype="tiff" xlink:href="elife-70169-fig4-figsupp7-v1.tif"/></fig><fig id="fig4s8" position="float" specific-use="child-fig"><label>Figure 4—figure supplement 8.</label><caption><title>Performance of Dirichlet process mixture model (DPMM) and state array (SA) methods on states with diffusion coefficients slower than the minimum diffusion coefficient included in the support.</title><p>(<bold>A</bold>) Schematic of approach. We performed a trajectory simulation with two states, including one with a diffusion coefficient (10<sup>-4</sup> μm<sup>2</sup> s<sup>-1</sup>) smaller than the smallest supported diffusion coefficient for the three methods (10<sup>-2</sup> μm<sup>2</sup> s<sup>-1</sup>). Five replicates are overlaid on each subplot. (<bold>B</bold>) State occupations were estimated by integrating the posterior mean over the peaks. Note that a peak appears at 10<sup>-2</sup> rather than the simulated 10<sup>-4</sup>. (<bold>C</bold>) Estimates for the occupation of the slow and fast states with each method. (<bold>D</bold>) Mean absolute error of the state occupation estimates in (<bold>C</bold>). The value reported is the mean of the mean absolute error over the five replicates.</p></caption><graphic mimetype="image" mime-subtype="tiff" xlink:href="elife-70169-fig4-figsupp8-v1.tif"/></fig><fig id="fig4s9" position="float" specific-use="child-fig"><label>Figure 4—figure supplement 9.</label><caption><title>Performance of Dirichlet process mixture model (DPMM) and state array (SA) algorithms on clusters of states with similar diffusion coefficients.</title><p>(<bold>A</bold>) Schematic of approach. We performed a trajectory simulation with three clusters of states with similar diffusion coefficients, then analyzed these simulations with the mean squared displacement (MSD) histogram, DPMM, or SA methods. Five replicates are overlaid on each subplot. Notice that none of the three methods could distinguish the states within each cluster. (<bold>B</bold>) Occupation estimates for each of the three clusters were estimated by integrating the posterior mean over the following ranges: 0–0.2 μm<sup>2</sup> s<sup>-1</sup>, 0.2–2.5 μm<sup>2</sup> s<sup>-1</sup>, and 2.5–40 μm<sup>2</sup> s<sup>-1</sup>. (<bold>C</bold>) Estimates for the occupation of each cluster of states. (<bold>D</bold>) Mean absolute error of the state occupation estimates in (<bold>C</bold>). The value reported is the mean of the mean absolute error over the five replicates.</p></caption><graphic mimetype="image" mime-subtype="tiff" xlink:href="elife-70169-fig4-figsupp9-v1.tif"/></fig><fig id="fig4s10" position="float" specific-use="child-fig"><label>Figure 4—figure supplement 10.</label><caption><title>Comparison of state arrays with vbSPT with optical–dynamical simulations.</title><p>(<bold>A</bold>) Schematic of approach. sptPALM movies were simulated with an underlying multistate Brownian motion model. These were tracked and analyzed with state arrays and vbSPT. We do not consider the ability of vbSPT to estimate transition rates, and no state transitions were included in the simulation. (<bold>B</bold>) Comparison of vbSPT and state array accuracy on models with two states. Because the number of states returned by vbSPT is variable (between 2 and 7 for this data), we estimated <inline-formula><mml:math id="inf30"><mml:msub><mml:mi>D</mml:mi><mml:mtext>fast</mml:mtext></mml:msub></mml:math></inline-formula> as the state closest to the true <inline-formula><mml:math id="inf31"><mml:msub><mml:mi>D</mml:mi><mml:mtext>fast</mml:mtext></mml:msub></mml:math></inline-formula>. For state arrays, <inline-formula><mml:math id="inf32"><mml:msub><mml:mi>D</mml:mi><mml:mtext>fast</mml:mtext></mml:msub></mml:math></inline-formula> was estimated as the mode of the posterior distribution above 0.02 μm<sup>2</sup> s<sup>-1</sup>. For both methods, the slow fraction was estimated as the sum of the occupation of all states below 1.0 μm<sup>2</sup> s<sup>-1</sup>. (<bold>C</bold>) Comparison of vbSPT and state arrays on various dynamic models. Each row corresponds to a particular dynamic model, as shown in the left column. The <inline-formula><mml:math id="inf33"><mml:mi>y</mml:mi></mml:math></inline-formula>-axis corresponds to true occupation for the ‘Ground truth’ column, occupation of the best model for vbSPT, and the mean posterior occupation for state arrays. On average, 5510 trajectories were tracked in each simulation. In the table at the right, the numbers in parentheses are the deviation from the true number of simulated states.</p></caption><graphic mimetype="image" mime-subtype="tiff" xlink:href="elife-70169-fig4-figsupp10-v1.tif"/></fig><fig id="fig4s11" position="float" specific-use="child-fig"><label>Figure 4—figure supplement 11.</label><caption><title>State arrays applied to fractional Brownian motion with localization error (FBME) using optical–dynamical simulations.</title><p>(<bold>A</bold>) Example FBME trajectories. The two parameters of interest are the modified scaling coefficient <inline-formula><mml:math id="inf34"><mml:mover accent="true"><mml:mi>S</mml:mi><mml:mo>¯</mml:mo></mml:mover></mml:math></inline-formula> (parameterizing the size of the increments, analogous to the diffusion coefficient) and the Hurst parameter <inline-formula><mml:math id="inf35"><mml:mi>H</mml:mi></mml:math></inline-formula> (parameterizing correlations between increments). (<bold>B</bold>) Increment covariance matrices and angular distributions for the three main regimes of FBME. Notice that the localization error term contributes to the off-diagonal terms in the covariance, resulting in a departure from pure FBM. (<bold>C</bold>) Schematic of state array for FBME. The state array is comprised of a 3D parameter array of <inline-formula><mml:math id="inf36"><mml:mover accent="true"><mml:mi>S</mml:mi><mml:mo>¯</mml:mo></mml:mover></mml:math></inline-formula>, <inline-formula><mml:math id="inf37"><mml:mi>H</mml:mi></mml:math></inline-formula>, and localization error variance. After inference, the posterior is marginalized over localization error to yield 2D functions of <inline-formula><mml:math id="inf38"><mml:mover accent="true"><mml:mi>S</mml:mi><mml:mo>¯</mml:mo></mml:mover></mml:math></inline-formula> and <inline-formula><mml:math id="inf39"><mml:mi>H</mml:mi></mml:math></inline-formula>. (<bold>D</bold>) Posterior occupation for various simulated multistate FBM models. SPT movies were simulated with the sptPALMsim package (‘Materials and methods’); red crosshairs indicate the ground truth simulated states.</p></caption><graphic mimetype="image" mime-subtype="tiff" xlink:href="elife-70169-fig4-figsupp11-v1.tif"/></fig><fig id="fig4s12" position="float" specific-use="child-fig"><label>Figure 4—figure supplement 12.</label><caption><title>Systematic errors in fractional Brownian motion with localization error (FBME) parameter retrieval due to motion blur.</title><p>(<bold>A</bold>) State array posterior distributions for single-state FBME models, simulated as in <xref ref-type="fig" rid="fig4s11">Figure 4—figure supplement 11</xref>. Each subplot represents the posterior distribution for simulations of one motion model. The ground truth model’s Hurst parameter is indicated with a horizontal gray dotted line and the scaling coefficient with a vertical white dotted line. (<bold>B</bold>) Rationalization of the effect in panel (<bold>A</bold>). The ‘true path’ is a simulated FBM, the red bars indicate the simulated excitation laser pulses, and ‘mean in pulse’ is the mean position of each particle during each excitation laser pulse. Motion blur may exert a more significant effect for low Hurst parameters because the corresponding FBMEs have more motion in the higher temporal frequencies, which is averaged out over each pulse.</p></caption><graphic mimetype="image" mime-subtype="tiff" xlink:href="elife-70169-fig4-figsupp12-v1.tif"/></fig></fig-group><media mimetype="video" mime-subtype="mp4" id="video4" xlink:href="elife-70169-video4.mp4"><label>Video 4.</label><caption><title>Example of a simulated SPT movie.</title><p>Two Brownian states with diffusion coefficients 0.01 and 5.0 μm<sup>2</sup> s<sup>-1</sup> were simulated; imaging was simulated with settings similar to our experimental SPT system including an objective with numerical aperture 1.49, immersion medium with refractive index 1.515, image pixel size 0.16 μm, frame interval 7.48 ms, and 2 ms excitation pulses. Simulations were performed using the sptPALMsim package.</p></caption></media><media mimetype="video" mime-subtype="mp4" id="video5" xlink:href="elife-70169-video5.mp4"><label>Video 5.</label><caption><title>Simulated SPT movies at variable excitation pulse widths.</title><p>Mixtures of Brownian motions were simulated as in <xref ref-type="video" rid="video4">Video 4</xref>, except we used 0.5, 2.0, or 8.0 ms excitation pulses and a frame interval of 20 ms. The mixture had four diffusing states with the following diffusion coefficients: 0.1 μm<sup>2</sup> s<sup>-1</sup> (10% occupation), 2.5 μm<sup>2</sup> s<sup>-1</sup> (20% occupation), 9.0 μm<sup>2</sup> s<sup>-1</sup> (30% occupation), and 20.0 μm<sup>2</sup> s<sup>-1</sup> (40% occupation).</p></caption></media><p>DPMMs and SAs both recovered the dynamic profile for simulations in class 1 with a resolution that exceeded the MSD histogram approach. With large samples of trajectories, DPMMs and SAs inferred even nondiscrete distributions of states (<xref ref-type="fig" rid="fig4">Figure 4A</xref>, <xref ref-type="fig" rid="fig4s1">Figure 4—figure supplement 1A</xref>).</p><p>When knowledge of the localization error was removed (classes 2 and 3), the SA approach outperformed both the MSD and DPMM approaches. The DPMM’s performance was especially poor when the contributions of diffusion and error to jump variance were similar (<inline-formula><mml:math id="inf40"><mml:mrow><mml:mrow><mml:mi>D</mml:mi><mml:mo>⁢</mml:mo><mml:mi mathvariant="normal">Δ</mml:mi><mml:mo>⁢</mml:mo><mml:mi>t</mml:mi></mml:mrow><mml:mo>≈</mml:mo><mml:msubsup><mml:mi>σ</mml:mi><mml:mtext>loc</mml:mtext><mml:mn>2</mml:mn></mml:msubsup></mml:mrow></mml:math></inline-formula>), likely due to its simplistic treatment of localization error. Meanwhile, the dynamic profile estimated by SAs was unperturbed by variations in the localization error (<xref ref-type="fig" rid="fig4">Figure 4B and C</xref>, <xref ref-type="fig" rid="fig4s1">Figure 4—figure supplement 1B and C</xref>). Comparing the results from simulations in class 3 numerically, we found that the root mean squared deviation of the estimated CDF from the true CDF was ≤ 5% for SAs, while it was 5–20% for both the MSD histogram and DPMM approaches (<xref ref-type="fig" rid="fig4s2">Figure 4—figure supplement 2</xref>).</p><p>The dynamic profiles produced by the MSD, DPMM, and SA approaches can be integrated to yield occupation estimates over particular diffusion coefficient ranges. We compared the accuracy and precision of these estimates with discrete two-, three-, or four-state models (<xref ref-type="fig" rid="fig4">Figure 4D</xref>, <xref ref-type="fig" rid="fig4s3">Figure 4—figure supplement 3</xref>, <xref ref-type="fig" rid="fig4s4">Figure 4—figure supplement 4</xref>). As the number of trajectories increased, occupations estimated by DPMMs and SAs converted to within 3% of the true values. In contrast, the MSD approach was associated with large systematic errors, an effect previously reported (<xref ref-type="bibr" rid="bib54">Mazza et al., 2012</xref>, <xref ref-type="bibr" rid="bib28">Hansen et al., 2018</xref>).</p><p>On full optical and dynamic simulations in class 4, SAs also outperformed the DPMM approach (<xref ref-type="fig" rid="fig4s5">Figure 4—figure supplement 5</xref>, <xref ref-type="fig" rid="fig4s6">Figure 4—figure supplement 6</xref>). Again, the difference was particularly pronounced for small diffusion coefficients, for which the DPMM state occupation estimates were severely inaccurate. Both methods had difficulty recovering the fastest diffusion coefficient tested (<xref ref-type="fig" rid="fig4s5">Figure 4—figure supplement 5B</xref>), possibly due to the restrictive conditions on the maximum jump distance used during tracking.</p><p>A central limitation of DPMMs and SAs is that they do not account for transitions between diffusive states. To determine the effect of state transitions on the output of these algorithms, we simulated mixtures of two diffusive states with increasing transition rates (<xref ref-type="fig" rid="fig4">Figure 4G</xref>, <xref ref-type="fig" rid="fig4s7">Figure 4—figure supplement 7</xref>). While slow transition rates had a negligible effect on the estimated state profile, transition rates approaching the frame interval appeared as single state with intermediate diffusion coefficient (<xref ref-type="fig" rid="fig4s7">Figure 4—figure supplement 7C</xref>), consistent with a result from reaction-diffusion systems (<xref ref-type="bibr" rid="bib13">Crank, 1975</xref>). The shift from the two-state to single-state regime occurred in a narrow window of mean state dwell times between 0.05 and 0.5 frame intervals.</p><p>In this article, we restricted DPMM/SA inference to a range of diffusion coefficients from 10<sup>-2</sup> to 10<sup>2</sup> μm<sup>2</sup> s<sup>-1</sup>. We also explored what happens when the true diffusion coefficient lies outside this range. DPMMs and SAs still recovered the correct state occupations by using the closest diffusion coefficient in their respective supports (<xref ref-type="fig" rid="fig4s8">Figure 4—figure supplement 8</xref>).</p><p>In the presence of multiple diffusing states with similar diffusion coefficients, both DPMMs and SAs tended to identify a single population with occupation equal to the sum of the occupations for each true state (<xref ref-type="fig" rid="fig4">Figure 4F</xref>, <xref ref-type="fig" rid="fig4s9">Figure 4—figure supplement 9</xref>).</p><p>We compared the performance of SAs and vbSPT (<xref ref-type="bibr" rid="bib64">Persson et al., 2013</xref>) using simulated SPT movies with different dynamic models (<xref ref-type="fig" rid="fig4s10">Figure 4—figure supplement 10</xref>). Both methods had comparable accuracy on simple two-state models (<xref ref-type="fig" rid="fig4s10">Figure 4—figure supplement 10B</xref>). On more complex models (<xref ref-type="fig" rid="fig4s10">Figure 4—figure supplement 10C</xref>), both methods encountered distinct difficulties, with vbSPT tending to overestimate and SAs tending to underestimate the number of states. For clusters of states with similar parameters (<xref ref-type="fig" rid="fig4s10">Figure 4—figure supplement 10C</xref>, bottom), SAs tend to produce a ‘smear’ of state occupations over a range of diffusion coefficients, while vbSPT tended to produce a different cluster of states in the same region of parameter space. vbSPT was noticeably less accurate at recovering slow-moving states with small diffusion coefficients (&lt;0.1 μm<sup>2</sup> s<sup>-1</sup>). We concluded that both approaches are useful and may provide complementary information.</p><p>While our investigation focused primarily on Brownian motion, SAs can be applied to any motion model parameterized by a likelihood function. To explore applications of SAs outside of Brownian motion, we applied it to fractional Brownian motion (FBM), a generalization of Brownian motion capable of producing anomalous diffusion (<xref ref-type="bibr" rid="bib47">Mandelbrot and Van Ness, 1968</xref>). Whereas Brownian motion’s sole parameter is the diffusion coefficient, FBM parameterizes both the magnitude (via a scaling coefficient) and the temporal correlations (via the Hurst parameter) of a particle’s increments. As with Brownian motion, we simulated sptPALM movies with fraction Brownian particles with variable diffusion coefficient and Hurst parameter (<xref ref-type="video" rid="video6">Video 6</xref>). To construct a state array for FBM, we used a 3D array over scaling coefficient, Hurst parameter, and localization error variance (<xref ref-type="fig" rid="fig4s11">Figure 4—figure supplement 11C</xref>). As with the RBME array, we marginalized out localization error after inference. While the SA accurately recovered the diffusion coefficient and Hurst parameter for multistate FBM models (<xref ref-type="fig" rid="fig4s11">Figure 4—figure supplement 11D</xref>), we noted a systematic error in the estimation of low (subdiffusive) Hurst parameters due to motion blur (<xref ref-type="fig" rid="fig4s12">Figure 4—figure supplement 12</xref>).</p><media mimetype="video" mime-subtype="mp4" id="video6" xlink:href="elife-70169-video6.mp4"><label>Video 6.</label><caption><title>Simulated SPT movies with fractional Brownian motion (FBM).</title><p>FBMs with different Hurst parameters were simulated under conditions similar to <xref ref-type="video" rid="video4">Video 4</xref> with either 0 ms (instantaneous) or 2 ms excitation pulses and a frame interval of 7.48 ms. The scaling coefficients were modified to maintain the same jump variance between frames for all of the motions (‘Materials and methods’).</p></caption></media></sec><sec id="s2-3"><title>Performance of state arrays on experimental sptPALM</title><p>After observing that SAs outperformed DPMMs on simulations, we proceeded to evaluate SAs on real data. We acquired an sptPALM dataset in U2OS osteosarcoma nuclei with endogenously tagged retinoic acid receptor-α-HaloTag (RARA-HT) (<xref ref-type="bibr" rid="bib66">Pontén and Saksela, 1967</xref>, <xref ref-type="bibr" rid="bib46">Los et al., 2008</xref>; (<xref ref-type="fig" rid="fig5s1">Figure 5—figure supplement 1</xref>). RARA-HT is a type II nuclear receptor that heterodimerizes via its ligand-binding domain (LBD) with the retinoid X receptor (RXR) to form a complex competent to bind chromatin and regulate target genes <xref ref-type="bibr" rid="bib23">Giguere et al., 1987</xref>, <xref ref-type="bibr" rid="bib65">Petkovich et al., 1987</xref>, <xref ref-type="bibr" rid="bib9">Brand et al., 1988</xref>, <xref ref-type="bibr" rid="bib77">Yu et al., 1991</xref>, <xref ref-type="bibr" rid="bib12">Bugge et al., 1992</xref>, <xref ref-type="bibr" rid="bib50">Marks et al., 1992</xref>, <xref ref-type="bibr" rid="bib44">Leid et al., 1992</xref>; reviewed in <xref ref-type="bibr" rid="bib18">Evans and Mangelsdorf, 2014</xref>). In addition, association of coregulator complexes with the RAR/RXR heterodimer has been shown to influence the dimer’s dynamics in FCS studies (<xref ref-type="bibr" rid="bib10">Brazda et al., 2011</xref>, <xref ref-type="bibr" rid="bib11">Brazda et al., 2014</xref>). As such, RARA-HT is expected to inhabit a variety of dynamic states in sptPALM.</p><p>For comparison, we also performed identical sptPALM experiments with histone H2B-HaloTag (H2B-HT), a protein with a high-occupation immobile state (<xref ref-type="bibr" rid="bib27">Hansen et al., 2017</xref>, <xref ref-type="bibr" rid="bib56">McSwiggen et al., 2019</xref>), as well as HaloTag and HaloTag-NLS (HT and HT-NLS), which are fast-diffusing proteins with low immobile fractions.</p><p>The four proteins presented distinct dynamic profiles (<xref ref-type="fig" rid="fig5">Figure 5A</xref>). For both HT and HT-NLS, the SA identified a single highly mobile state. In agreement with previous reports (<xref ref-type="bibr" rid="bib76">Xiang et al., 2020</xref>), we observed that addition of the NLS reduces HaloTag’s diffusion coefficient by two- to threefold. In contrast, both RARA-HT and H2B-HT had substantial immobile fractions, accounting for roughly 40 and 70% of their total populations, respectively (<xref ref-type="fig" rid="fig5">Figure 5C</xref>). SAs identified stark differences in the mobile subpopulations for RARA-HT and H2B-HT. Whereas H2B-HT presented a fast population at 8–10 μm<sup>2</sup> s<sup>-1</sup>, RARA-HT inhabited a broad spectrum of diffusing states ranging from 0.3 to 10.0 μm<sup>2</sup> s<sup>-1</sup>. Biological replicates gave similar results (<xref ref-type="fig" rid="fig5s2">Figure 5—figure supplement 2A</xref>).</p><fig-group><fig id="fig5" position="float"><label>Figure 5.</label><caption><title>State arrays (SAs) applied to experimental sptPALM.</title><p>All sptPALM experiments were performed with the photoactivatable dye PA-JFX549 using a TIRF microscope with HiLo illumination, 7.48 ms frame intervals, and 1 ms excitation pulses. (<bold>A</bold>) Naive and SA occupations for four different tracking targets. The upper two panels are the naive occupations for each nucleus in each of two biological replicates. Biological replicates correspond to separate knock-in clones for RARA-HaloTag or separate transfections for the other constructs (mean 1627 trajectories per nucleus). The bottom panel displays the SA occupations for a run of the SA algorithm on trajectories pooled from a single biological replicate (mean 17,899 trajectories per biological replicate). Asterisks for RARA-HaloTag and H2B-HaloTag indicate that the immobile fraction for these constructs has been truncated to visualize the faster-moving states. (<bold>B</bold>) Naive occupation estimate for RARA-HaloTag constructs bearing domain deletions or point mutations. ‘Exogenously expressed’ constructs were expressed from a nucleofected PiggyBac vector under an L30 promoter. (<bold>C</bold>) Quantification of the immobile fractions and mean free diffusion coefficients for the four constructs in (<bold>A</bold>). The ‘immobile fraction’ was defined as the total occupation below 0.05 μm<sup>2</sup> s<sup>-1</sup>, while the mean free diffusion coefficient was the posterior mean diffusion coefficient above this threshold. Each dot represents a biological replicate (a different knock-in clone for RARA-HT or a different nucleofection for H2B-HT, HT-NLS, and HT).</p><p><supplementary-material id="fig5sdata1"><label>Figure 5—source data 1.</label><caption><title>Raw and labeled RARA-HaloTag Western blots used in <xref ref-type="fig" rid="fig5">Figure 5</xref>.</title></caption><media mimetype="application" mime-subtype="zip" xlink:href="elife-70169-fig5-data1-v1.zip"/></supplementary-material></p></caption><graphic mimetype="image" mime-subtype="tiff" xlink:href="elife-70169-fig5-v1.tif"/></fig><fig id="fig5s1" position="float" specific-use="child-fig"><label>Figure 5—figure supplement 1.</label><caption><title>Validation of endogenously tagged U2OS RARA-HaloTag cell lines.</title><p>In all subpanels, ‘a<italic>t</italic>RA’ refers to all-<italic>trans</italic> retinoic acid. (<bold>A</bold>) Western blots for endogenous RARA-HaloTag knock-ins in U2OS cells. The expected molecular weight of RARA-HaloTag-3xFLAG is 97 kDa. (<bold>B</bold>) Luciferase assays with a retinoic acid-responsive promoter with wildtype or RARA-HaloTag knock-in U2OS cell lines. (<bold>C</bold>) Luciferase assays with transfected RARA constructs to assess the effect of tagging on transactivation of a retinoic acid response element-driven luciferase gene. RARA(WT) indicates a transgene bearing the wildtype version of RARA, and C88G is a DNA-binding mutant. (<bold>D</bold>) Spinning disk confocal microscopy images of endogenously tagged RARA-HaloTag cell lines labeled with TMR-HaloTag ligand. The intensities for all three images have been scaled to the same min/max in arbitrary intensity units.</p></caption><graphic mimetype="image" mime-subtype="tiff" xlink:href="elife-70169-fig5-figsupp1-v1.tif"/></fig><fig id="fig5s2" position="float" specific-use="child-fig"><label>Figure 5—figure supplement 2.</label><caption><title>Assessing variability of state arrays (SAs) on experimental sptPALM by subsampling.</title><p>(<bold>A</bold>) Biological replicates of each of the tracking experiments shown in <xref ref-type="fig" rid="fig5">Figure 5A</xref>. Tracking was performed on an inverted TIRF setup with 7.48 ms frame intervals and 1 ms stroboscopic excitation with the dye PAJFX549-HaloTag ligand. RARA-HT cells were knock-ins as described in <xref ref-type="fig" rid="fig5s1">Figure 5—figure supplement 1</xref>, H2B-HaloTag cells were previously described (<xref ref-type="bibr" rid="bib56">McSwiggen et al., 2019</xref>), and HT and HT-NLS were expressed from a nucleofected PiggyBac vector under an EF1α promoter. (<bold>B</bold>) Resampling experiment to evaluate the sources of variability in DPMM/SA runs on RARA-HaloTag trajectories. RARA-HaloTag trajectories from one tracking dataset were sampled according to one of three schemes, then analyzed with the Dirichlet process mixture model (DPMM) and SA methods. 20 replicates were performed for each condition, and the Kullback–Leibler divergence of the posterior occupation of each replicate from the cross-replicate posterior occupation was used to quantify variability.</p></caption><graphic mimetype="image" mime-subtype="tiff" xlink:href="elife-70169-fig5-figsupp2-v1.tif"/></fig></fig-group><p>To determine the origins of the dynamic states observed for RARA-HT, we performed domain deletions (<xref ref-type="fig" rid="fig5">Figure 5B</xref>). Removal of either the DNA-binding domain (DBD) or LBD resulted in loss of the immobile population. Because both the DBD and LBD are required for chromatin binding by the RAR/RXR heterodimer, this suggests that the immobile fraction represents chromatin-bound molecules. To confirm this, we introduced a point mutation (C88G) in the zinc fingers for the RARA-HT DBD that abolishes DNA-binding in vitro (<xref ref-type="bibr" rid="bib78">Zhu et al., 1999</xref>). This led to loss of the immobile fraction (<xref ref-type="fig" rid="fig5">Figure 5B</xref>). Deletion of the unstructured N-terminal domain (NTD) or C-terminal domain (CTD) had a milder effect, suggesting that these domains are not the primary determinants of the dynamic behavior of RARA-HT.</p><p>To understand the origins of heterogeneity in the diffusive profile, we performed three variants of bootstrap aggregation (<xref ref-type="fig" rid="fig5s2">Figure 5—figure supplement 2B</xref>). The primary origins of variability for both DPMMs and SAs were cell-to-cell rather than clone-to-clone variability or intrinsic variability due to finite sample sizes.</p></sec><sec id="s2-4"><title>Spatiotemporal context of cellular protein dynamics</title><p>In the process of inferring the global distribution over state parameters for an sptPALM dataset, SAs jointly infer individual distributions for each trajectory. Up to this point, we have analyzed the global distribution. However, it is also possible to aggregate the individual distribution for each trajectory as a function of space or time, yielding, for instance, separate dynamic profiles for every spatial location in an experiment. This approach offers a potential route to understand spatiotemporal variation in the dynamics of a protein target.</p><p>We explored this aspect of SAs with a U2OS nucleophosmin-HaloTag (NPM1-HT) sptPALM dataset. NPM1-HT exhibits partial nucleolar localization (<xref ref-type="fig" rid="fig6s1">Figure 6—figure supplement 1B</xref>) and distinct dynamic behavior inside and outside nucleoli (<xref ref-type="bibr" rid="bib58">Mitrea et al., 2018</xref>). The SA identified a broad range of diffusion coefficients for NPM1-HT, with three modes including an effectively immobile population (<xref ref-type="fig" rid="fig6">Figure 6A</xref>). Selecting four ranges of diffusion coefficients for analysis (<xref ref-type="fig" rid="fig6">Figure 6A</xref>), we visualized the posterior distribution as a function of space, calculating local fractional occupations for each range (<xref ref-type="fig" rid="fig6">Figure 6B</xref>, <xref ref-type="fig" rid="fig6s1">Figure 6—figure supplement 1C</xref>). This analysis revealed that some populations (including a slow-moving mobile population at 0.23 μm<sup>2</sup> s<sup>-1</sup>) are enriched in nucleoli, while others (for instance, a fast-moving population at 4 μm<sup>2</sup> s<sup>-1</sup>) are depleted and still others show no preference (<xref ref-type="fig" rid="fig6">Figure 6C</xref>). Notably, these preferences are apparent even in the naive occupations for trajectories in each compartment (<xref ref-type="fig" rid="fig6s1">Figure 6—figure supplement 1D</xref>).</p><fig-group><fig id="fig6" position="float"><label>Figure 6.</label><caption><title>Spatiotemporal variation in the state array posterior distribution.</title><p>(<bold>A</bold>) Posterior occupations for a state array evaluated on NPM1-HaloTag trajectories in U2OS nuclei. The ranges labeled i, ii, iii, and iv indicate parts of the dynamic profile isolated for analysis in subsequent panels. (<bold>B</bold>) Spatial distribution of the posterior probability in (<bold>A</bold>) for NPM1-HaloTag trajectories in a single U2OS nucleus. The posterior model over the diffusion coefficient was evaluated for each of the origin trajectories, and these points were then used to perform a kernel density estimate (KDE) with a 100 nm Gaussian kernel. For the local normalized occupation, these KDEs were normalized to estimate the relative fractions of molecules in each state. (<bold>C</bold>) Quantification of the analysis in (<bold>B</bold>) for 15 nuclei. ‘Nucleoplasmic’ trajectories were defined as trajectories outside nucleoli but inside the nucleus. (<bold>D</bold>) Temporal variation in the posterior distribution.</p></caption><graphic mimetype="image" mime-subtype="tiff" xlink:href="elife-70169-fig6-v1.tif"/></fig><fig id="fig6s1" position="float" specific-use="child-fig"><label>Figure 6—figure supplement 1.</label><caption><title>Validation of U2OS NPM1-HaloTag lines.</title><p>(<bold>A</bold>) Western blots of heterozygously tagged NPM1-HaloTag-3xFLAG in U2OS nuclei. (<bold>B</bold>) U2OS NPM1-HaloTag cells stained with 100 nM TMR-HaloTag ligand and imaged on a spinning disk confocal microscope. (<bold>C</bold>) Additional examples of cells quantified as in <xref ref-type="fig" rid="fig6">Figure 6B</xref>. The local occupation estimate is the fraction of particles in each neighborhood estimated to have the corresponding range of diffusion coefficients, as indicated in <xref ref-type="fig" rid="fig6">Figure 6B</xref>. To aid visualization, both localization density and local occupations were smoothed via convolution with a 2D isotropic Gaussian kernel of sigma 100 nm. (<bold>D</bold>) Naive occupation estimate for trajectories in different subcellular compartments. Trajectories were classified as either inside nucleoli, ‘nucleoplasmic’ (outside nucleoli but inside the nucleus), or extranuclear. The regular Brownian motion with localization error (RBME) likelihood function was evaluated on each set of trajectories, aggregated across trajectories and plotted as a function of the diffusion coefficient. Each row in the plot is separate nucleus, and the occupation estimates have been scaled for each compartment by the total number of trajectories.</p><p><supplementary-material id="fig6s1sdata1"><label>Figure 6—figure supplement 1—source data 1.</label><caption><title>Raw and labeled NPM1-HaloTag Western blots.</title></caption><media mimetype="application" mime-subtype="zip" xlink:href="elife-70169-fig6-figsupp1-data1-v1.zip"/></supplementary-material></p></caption><graphic mimetype="image" mime-subtype="tiff" xlink:href="elife-70169-fig6-figsupp1-v1.tif"/></fig></fig-group><p>The NPM1-HT tracking experiments were performed with an acquisition sequence comprising several phases with distinct levels of photoactivation. As a result, the localization density varied temporally in each movie. To understand the effect of localization density on the diffusion coefficient likelihoods, we aggregated the naive state occupations over 100-frame temporal blocks (<xref ref-type="fig" rid="fig6">Figure 6D</xref>). These experiments demonstrated that high localization densities led to a deflation in the occupation of slower-moving states, probably due to tracking errors. As a result, only phases with low localization density were used for posterior estimation. This demonstrates how the temporal perspective on the posterior may be useful as a guide for subsequent analysis, including quality control in SPT experiments.</p></sec></sec><sec id="s3" sec-type="discussion"><title>Discussion</title><p>Intracellular sptPALM with fast-diffusing proteins presents unique challenges for analysis. In particular, the issues of state bias arising from imaging geometry, limited information available from any single trajectory, and variable localization error must be addressed prior to biological interpretation of sptPALM data.</p><p>The two methods investigated here, DPMMs and SAs, represent distinct approaches to this problem inspired by Bayesian nonparametrics. These methods identify sparse explanatory models from more complex alternatives, similar to other popular SPT approaches like vbSPT, but can use a broader range of dynamic models and are applicable when the dynamic profile is not comprised of discrete states. Between the two methods, SAs far outperformed DPMMs.</p><p>When evaluated on real sptPALM data, SAs revealed previously unappreciated features of the dynamic profile for RARA-HaloTag and H2B-HaloTag. In particular, RARA-HaloTag exhibited a broad spectrum of diffusive states that stands in contrast to the more discretized profile of H2B-HaloTag or HaloTag-NLS. The ability to identify the presence or absence of discrete diffusing states is a major advantage of SAs over existing methods, which are generally premised on the existence of discrete states. We found that SAs were especially useful when complemented with the naive occupation estimate to visualize cell-to-cell and movie-to-movie variability. A Python tool that implements SAs can be found at <ext-link ext-link-type="uri" xlink:href="https://github.com/alecheckert/saspt">https://github.com/alecheckert/saspt</ext-link> with documentation at <ext-link ext-link-type="uri" xlink:href="https://saspt.readthedocs.io">https://saspt.readthedocs.io</ext-link>.</p><p>DPMMs and SAs have several limitations. DPMMs require prior measurement of the localization error, while SAs require selection of a parameter grid with spacing fine enough to avoid discretization artifacts. The <monospace>saSPT</monospace> package uses default parameter grids that satisfy this requirement for regular and FBM. However, the grid needs to be reevaluated for any new types of motion to which SAs are applied. Additionally, neither DPMMs nor SAs consider transitions between states, a major shortcoming of these methods.</p><p>Our experiments used a fixed range of diffusion coefficients from 10<sup>-2</sup> to 10<sup>2</sup> μm<sup>2</sup> s<sup>-1</sup>. Even when the true diffusion coefficient was outside this range, SAs accurately estimated state occupations by using the nearest available diffusion coefficient (<xref ref-type="fig" rid="fig4s8">Figure 4—figure supplement 8</xref>). Our experimental SPT results, with large spikes at the lowest diffusion coefficient, suggest this is common in real data for SPT targets with very slow or immobile populations. A potential area for future improvement is to extend the support iteratively until the slowest and fastest states are captured. Such an approach would need to contend with the increased difficulty in estimating the diffusion coefficient when it is much smaller than the localization error variance (<xref ref-type="fig" rid="fig3s1">Figure 3—figure supplement 1C</xref>).</p><p>While we have only investigated the application of SAs to regular Brownian motion (and, briefly, FBM) in this article, the model could be extended to any type of motion parameterized by a likelihood function. We highlight two potential challenges for any such work. First, the SA’s size scales with the number of parameters of the motion, meaning that more complex models are more computationally expensive. This could be addressed at the implementation level; for instance, by porting SA inference to graphical processing units. The second and more fundamental challenge is the similarity of the various flavors of anomalous diffusion to localization and tracking errors. For instance, both the Hurst parameter in FBM and the localization error primarily manifest as negative off-diagonal components of the trajectory increment covariance matrix (<xref ref-type="fig" rid="fig4s11">Figure 4—figure supplement 11B</xref>). Likewise, the erratic jumps of Levy flights have similarities to tracking errors. These issues are likely to become more significant when the sptPALM is lower in quality or highly heterogeneous (due to motion blur, defocus, and nonstationary camera noise).</p><p>In a recent objective evaluation of methods to measure anomalous diffusion (<xref ref-type="bibr" rid="bib59">Muñoz-Gil et al., 2021</xref>), even top-performing methods (including recent machine learning approaches) were associated with mean absolute error <italic>gt</italic><sub>0.3</sub> when estimating anomaly parameters for short trajectories (&lt;10 frames). Because SAs create mixture models out of any underlying set of motion models, they could potentially be combined with such approaches (rather than the raw RBME likelihood function we use here) to boost their performance when run on large collections of short sptPALM trajectories.</p><p>Neither DPMMs nor SAs have any built-in mechanism to distinguish true jumps from tracking errors. Both rely on trajectories produced by another algorithm. It may be possible to combine both tracking and state occupation estimation into a single inference step using a model defining a joint distribution over states and possible links between detected particles.</p></sec><sec id="s4" sec-type="materials|methods"><title>Materials and methods</title><sec id="s4-1"><title>Plasmids</title><p>Unless otherwise noted, all PCRs were performed with New England Biosciences Phusion High-Fidelity DNA polymerase (M0530S), and Gibson assemblies (<xref ref-type="bibr" rid="bib22">Gibson et al., 2009</xref>) were performed with New England Biosciences Gibson Assembly Master Mix (E2611S) following the manufacturer’s instructions. Cloning and expression of plasmids was performed in <italic>E. coli</italic> DH5α using the Inoue protocol (<xref ref-type="bibr" rid="bib37">Im et al., 2011</xref>). Plasmids used for nucleofections were purified with Zymo midiprep kit (Zymo D4200) and concentrations were quantified by absorption at 260 nm. Cloning primers were synthesized by Integrated DNA Technologies as 25 nmol DNA oligos with standard desalting, and sequences were verified by Sanger sequencing at the UC Berkeley DNA Sequencing Facility. A complete list of the primers used in this article is provided in <xref ref-type="supplementary-material" rid="supp1">Supplementary file 1</xref>, and a complete list of the plasmids used in this article is provided in <xref ref-type="supplementary-material" rid="supp2">Supplementary file 2</xref>.</p><p>We produced the vector PB PGKp-PuroR L30p MCS-GDGAGLIN-HaloTag-3xFLAG by amplifying the human L30 promoter with prAH675 and prAH676 and assembling into AsiSI- (NEB R0630) and XbaI- (NEB R0145) digested PB PGKp-PuroR EF1a MCS-GDGAGLIN-HaloTag-3xFLAG. For the expression plasmid PB PGKp-PuroR EF1a 3x-FLAG-HaloTag-GDGAGLIN, we cloned three tandem copies of the SV40 nuclear localization sequence into XbaI- and BamHI-HF (NEB R3136)-digested PB PGKp-PuroR EF1a 3xFLAG-HaloTag-MCS using Gibson assembly.</p><p>For constructs expressing RARA-HaloTag domain deletions and point mutations, we first cloned the RARA coding sequence out of U2OS cDNA by extracting RNA from cycling U2OS cells with a QIAGEN RNeasy kit (QIAGEN 74104), preparing cDNA with the iScript Reverse Transcription Supermix (Bio-Rad 1708840), amplifying the CDS with prAH495 and prAH496, then assembling into an XbaI- and NotI-HF- (NEB R3189) digested PB PGKp-PuroR EF1a MCS-GDGAGLIN-HaloTag-3xFLAG using Gibson assembly. Next, to produce the mutants, we amplified parts of the RARA coding sequence in PCR fragments while introducing point mutations or domain deletions at the intersections of the fragments. PCR fragments were assembled into XbaI- and BamHI-HF-digested PB PGKp-PuroR L30p-MCS-GDGAGLIN-HaloTag-3xFLAG using Gibson assembly. The primers used for each construct were as follows: for PB PGKp-PuroR EF1a RARA[ΔNTD]-HaloTag-GDGAGLIN-3xFLAG, PCR fragment 1 was produced with prAH1111 and prAH1112; for PB PGKp-PuroR EF1a RARA[ΔCTD]-HaloTag-GDGAGLIN-3xFLAG, PCR fragment 1 was produced with prAH1113 and prAH1114; for PB PGKp-PuroR EF1a RARA[ΔNTD,ΔCTD]-HaloTag-GDGAGLIN-3xFLAG, PCR fragment 1 was produced with prAH1111 and prAH1114; for PB PGKp-PuroR EF1a RARA[C88G]-HaloTag-GDGAGLIN-3xFLAG, PCR fragment 1 was produced with prAH1113 and prAH1069 and PCR fragment 2 was produced with prAH1112 and prAH1070; for PB PGKp-PuroR EF1a RARA[ΔDBD]-HaloTag-GDGAGLIN-3xFLAG, PCR fragment 1 was produced with prAH596 and prAH704 and PCR fragment 2 was produced with prAH597 and prAH705; for PB PGKp-PuroR EF1a RARA[ΔLBD]-HaloTag-GDGAGLIN-3xFLAG, PCR fragment 1 was produced with prAH596 and prAH706 and PCR fragment 2 was produced with prAH597 and prAH707.</p><p>To generate the plasmid-based homology repair donor for gene editing at the human RARA exon 9 locus, we assembled the following fragments by Gibson assembly. For fragment 1, we digested the pUC57 vector with EcoRI and HindIII. For fragment 2, we amplified the left homology arm out of U2OS genomic DNA with prAH599 and prAH600. For fragment 3, we amplified the GDGAGLIN-HaloTag-3xFLAG insert out of the plasmid PB PGKp-PuroR L30p MCS-GDGAGLIN-HaloTag-3xFLAG with prAH601 and prAH602. For fragment 4, we amplified the right homology arm out of U2OS genomic DNA with prAH603 and prAH604.</p><p>To generate guide RNA/Cas9 expression plasmids for gene editing at the human RARA exon 9 locus, we cloned the two guide RNA sequences under a U6 promoter in a vector that coexpresses the sgRNA, mVenus, and <italic>S. pyogenes</italic> Cas9, which has been previously described (<xref ref-type="bibr" rid="bib27">Hansen et al., 2017</xref>).</p><p>In luciferase assays, we used the retinoic acid-responsive firefly luciferase expression vector pGL3-RARE-luciferase (Addgene plasmid #13458; <ext-link ext-link-type="uri" xlink:href="http://n2t.net/addgene:13458">http://n2t.net/addgene:13458</ext-link>; RRID:<ext-link ext-link-type="uri" xlink:href="https://identifiers.org/RRID/RRID:Addgene_13458">Addgene_13458</ext-link>), a gift from T. Michael Underhill (<xref ref-type="bibr" rid="bib36">Hoffman et al., 2006</xref>). Renilla luciferase was expressed from pRL CMV Renilla (Promega E2261).</p></sec><sec id="s4-2"><title>Cell lines</title><p>Human U2OS cells (female, 15 years old, osteosarcoma) obtained from the UC Berkeley Cell Culture Facility were cultured under 5% CO<sub>2</sub> at 37°C in DMEM containing 4.5 g/L glucose supplemented with 10% fetal bovine serum and 10 U/mL penicillin-streptomycin. Cells were subpassaged at a ratio of 1:6 every 3–4 days. The stable cell line expressing H2B-HaloTag-SNAPf was described previously (<xref ref-type="bibr" rid="bib27">Hansen et al., 2017</xref>, <xref ref-type="bibr" rid="bib56">McSwiggen et al., 2019</xref>). We induced exogenous expression of HaloTag, HaloTag-NLS, and point mutants and domain deletions of RARA-HaloTag by nucleofection of PiggyBac vectors containing the proteins under EF1a promoters. Expression of wildtype RARA-HaloTag and NPM1-HaloTag was induced by endogenous gene editing, as described in the ‘CRISPR/Cas9-mediated gene editing’ section. The U2OS cell line used here was validated by whole-genome sequencing as described in <xref ref-type="bibr" rid="bib27">Hansen et al., 2017</xref>, and mycoplasma testing was performed by DAPI staining.</p><p>For sptPALM experiments, cells were grown on 25 mm circular No. 1.5 H coverglasses (Marienfeld, Germany, High-Precision 0117650) that were first sonicated in ethanol for 10 min, plasma-cleaned, then stored in isopropanol until use. U2OS cells were grown directly on the coverglasses in regular culture medium. The medium was changed after dye labeling and immediately before imaging into phenol red-free medium.</p></sec><sec id="s4-3"><title>Nucleofection</title><p>For all imaging experiments involving exogenous expression, we used the Lonza Amaxa II Nucleofector System with Cell Line Nucleofector Kit V reagent (Lonza VCA-1003). Briefly, U2OS cells were grown in 10 cm plates (Thermo Fisher) for 2 days prior to nucleofection, trypsinized, spun down at 1200 rpm for 5 min, combined with vector and Kit V reagent according to the manufacturer’s instructions, and nucleofected with program X-001 on an Lonza Amaxa II Nucleofector. After nucleofection, cells were immediately resuspended in regular culture medium at 37°C and plated onto coverslips. In all imaging experiments involving nucleofection, imaging was performed within 24 hr of plating.</p></sec><sec id="s4-4"><title>CRISPR/Cas9-mediated gene editing</title><p>Endogenous tagging of RARA in U2OS cells was performed with a protocol roughly following <xref ref-type="bibr" rid="bib27">Hansen et al., 2017</xref> with some modifications. A complete list of the plasmids used in gene editing is provided in <xref ref-type="supplementary-material" rid="supp2">Supplementary file 2</xref>, and a list of the guide sequences is provided in <xref ref-type="supplementary-material" rid="supp3">Supplementary file 3</xref>.</p><p>For U2OS cells, we nucleofected cells with plasmid expressing 3xFLAG-SV40NLS-pSpCas9 from a CBh promoter (<xref ref-type="bibr" rid="bib67">Ran et al., 2013</xref>), mVenus from a PGK promoter, and guide RNA from a U6 promoter (pU6_sgRNA_CBh_Cas9_PGK_Venus_anti-RARA-C_terminus_1 and pU6_sgRNA_CBh_Cas9_PGK_Venus_anti-RARA-C_terminus_2), along with a second plasmid encoding the homology repair donor (pUC57_homRep_RARA-HaloTag). The homology repair donor was built in a pUC57 backbone modified to contain HaloTag-3xFLAG with ~500 base pairs of homologous genomic sequence on either side. Synonymous mutations were introduced at the cut site to prevent retargeting by Cas9. Each of the two guide RNA plasmids were nucleofected into separate populations of cells to be pooled for subsequent analysis. Then, 24 hr after the initial nucleofection, we screened for mVenus-expressing cells using FACS and pooled these mVenus-positive cells in 10 cm plates. Then, 5 days after plating, we labeled cells with HTL-TMR (Promega G8251) and screened for TMR-positive, mVenus-negative cells. Cells were diluted to single clones and plated in 96-well plates for a 2–3-week outgrowth step, during which the medium was replaced every 3 days. The 96-well plates were then screened for wells containing single colonies of U2OS cells, which were split by manual passage into two replicate wells in separate 96-well plates. One of these replicates was used to subpassage, while the other was used to harvest genomic DNA for PCR and sequencing-based screening for the correct homology repair product. In PCR-based genotyping, we used three primer sets: (A) primers external to the homology repair arms, expected to amplify both the wildtype allele and the edited allele (‘PCR1’), (B) a primer internal to HaloTag and another external to it on the 5′ side, expected to amplify only the edited allele (‘PCR2’), and (C) a primer internal to HaloTag and another external to it on the 3′ side, expected to amplify only the edited allele (‘PCR3’). The primer sets for each target were the following. For RARA-GDGAGLIN-HaloTag-3xFLAG, we used prAH586 and prAH761 for PCR1, prAH761 and prAH762 for PCR2, and prAH763 and prAH764 for PCR3. For NPM1-GDGAGLIN-HaloTag-3xFLAG, we used prAH1092 and prAH1093 for PCR1, prAH1093 and prAH377 for PCR2, and prAH1092 and prAH373 for PCR3. U2OS cDNA from selected clones was isolated with DirectPCR Lysis Reagent (Viagen 101T), treated with 0.5 mg/mL proteinase K for 15 min, incubated at 95°C for 1 hr, then subjected to PCRs 1–3 using Phusion polymerase in the presence of 5% DMSO. Amplicons from candidate clones were gel-purified (QIAGEN 28704) and Sanger sequenced; only clones with the correct target sequence were kept for continued screening. A subset of these clones were chosen for characterization by Western blot, imaging, and luciferase assays.</p><p>For NPM1-GDGAGLIN-HaloTag-3xFLAG knock-in cell lines, we used a different strategy relying on nucleofected <italic>Streptococcus pyogenes</italic> Cas9 sgRNPs and linear dsDNA homology repair donors. The target insert (GDGAGLIN-HaloTag-3xFLAG from the vector PB PGKp-PuroR L30p MCS-GDGAGLIN-HaloTag-3xFLAG) was first amplified with ultramers encoding 120 bp homology arms (prAH867 and prAH868; IDT) using KAPA2G Robust HotStart polymerase (Kapa Biosystems KR0379) for 12 cycles. A small volume of this reaction was then used to seed a PCR reaction using primers prAH869 and prAH870 in Q5 High-Fidelity 2X Master Mix (QIAGEN M0492). Products were purified by RNAClean XP magnetic beads (Beckman-Coulter A63987) and further cleaned by ethanol precipitation, followed by resuspension in a small volume of RNase-free water. For guides, we performed a three-primer PCR using prAH2000 and prAH2001 along with a unique oligo encoding the spacer (either prAH979 or prAH980) to produce a linear dsDNA product encoding the sgRNA preceded by a T7 promoter. We then used T7 RNA polymerase (NEB E2040S) to transcribe sgRNA from this template and purified the sgRNA with RNAClean XP magnetic beads according to the manufacturer’s instructions. To assemble the sgRNP, we incubated 80 pmol sgRNA with 40 pmol purified SpyCas9-NLS (UC Berkeley Macrolab) for 15 min at 37°C in 20 mM HEPES pH 7.5, 150 mM KCl, 10 mM MgCl<sub>2</sub>, and 5% glycerol. sgRNPs were subsequent kept on ice and combined with donor immediately before nucleofection. For each nucleofection, we used 40 pmol sgRNP and 5 pmol dsDNA donor template suspended in &lt;10 μL with Lonza Amaxa Nucleofector II protocol X-001 in Lonza Kit V reagent. Roughly 1 million cells were used for nucleofection. Sorting for labeled cells, subcloning, and genotyping proceeded as previously described for RARA-GDGAGLIN-HaloTag-3xFLAG.</p></sec><sec id="s4-5"><title>Western blots</title><p>Antibodies were as follows (the ratio indicates the dilution factors used for Western blot): human TBP, Abcam Ab51841, 1:2500 (mouse); FLAG, Sigma-Aldrich F3165, 1:2000 (mouse).</p><p>For Western blots, cells were scraped from plates in ice-cold PBS then pelleted. Pellets were resuspended in lysis buffer (0.15 M NaCl, 1% NP-40, 50 mM Tris–HCl [pH 8.0], and a cocktail of protease inhibitors [Sigma-Aldrich 11697498001 dissolved in PBS with supplemented PMSF, aprotinin, and benzamidine]), agitated for 30 min at 4°C, then centrifuged for 20 min at 12,000 rpm, 4°C. The supernatant was then mixed with 2× Laemmli (to final 1×), boiled for 5 min, then run on 12.5% SDS-PAGE. After transfer to nitrocellulose, the membrane was blocked with 10% condensed milk in TBST (500 mM NaCl, 10 mM Tris–HCl [pH 7.4], 0.1% Tween-20) for 1 hr at room temperature. Antibodies were suspended in 5% condensed milk in TBST at the dilutions indicated above and incubated rocking at 4°C overnight. After primary hybridization, the membrane was washed three times for 10 min with TBST at room temperature, hybridized with an anti-mouse HRP secondary antibody in 5% condensed milk in TBST for 60 min at room temperature, washed three more times with TBST for 10 min, then visualized with Western Lightning Plus-ECL reagent (PerkinElmer NEL103001) according to the manufacturer’s instructions and imaged on a Bio-Rad ChemiDoc imaging system. Different exposure times were used for each antibody. The raw Western blots images for RARA-HaloTag and NPM1-HaloTag are provided as <xref ref-type="supplementary-material" rid="fig5sdata1">Figure 5—source data 1</xref> and <xref ref-type="supplementary-material" rid="fig6s1sdata1">Figure 6—figure supplement 1—source data 1</xref> , respectively.</p></sec><sec id="s4-6"><title>Luciferase assays</title><p>All luciferase assays used pGL3-RARE-luciferase, a reporter containing firefly luciferase driven by an SV40 promoter with three retinoic acid response elements (RAREs). pGL3-RARE-luciferase was a gift from T. Michael Underhill (Addgene plasmid 13458; <ext-link ext-link-type="uri" xlink:href="http://n2t.net/addgene:13458">http://n2t.net/addgene:13458</ext-link>; RRID:<ext-link ext-link-type="uri" xlink:href="https://identifiers.org/RRID/RRID:Addgene_13458">Addgene_13458</ext-link>; <xref ref-type="bibr" rid="bib36">Hoffman et al., 2006</xref>). Luciferase assays were performed on cells cultivated in 6-well plates. Cells were transfected with 100 ng pGL3-RARE-luciferase and 10 ng pRL Renilla (Promega E2261) using Mirus TransIT-2020 Transfection Reagent (Mirus MIR 5404). Transfection was performed 1 day before assaying luciferase expression with the Dual-Luciferase Reporter Assay System (Promega E1910) according to <ext-link ext-link-type="uri" xlink:href="http://n2t.net/addgene:13458">http://n2t.net/addgene:13458</ext-link> the manufacturer’s instructions. Readout was performed on a GloMax luminometer (Promega).</p></sec><sec id="s4-7"><title>Cell dye labeling</title><p>For sptPALM experiments, cells were labeled with one of two methods, depending on the dye. For non-photoactivatable fluorescent dyes including TMR-HTL (tetramethylrhodamine-HaloTag ligand; Promega G8251), we stained cells with 100 nM dye in regular culture medium for 10 min, then performed three 10 min incubations in dye-free culture medium separated by PBS washes. All PBS and culture medium was incubated at 37°C between medium changes and washes.</p><p>For experiments with photoactivatable dyes, which have lower cell permeability and slower wash-in/wash-out kinetics, we labeled cells with 100 nM dye in regular culture medium for 10–20 min, followed by four 30 min incubations in dye-free culture medium at 37°C. Between each incubation, we washed twice with PBS at 37°C. After the final incubation, cells were changed into phenol red-free medium for imaging.</p></sec><sec id="s4-8"><title>sptPALM</title><p>sptPALM experiments were performed with a custom-built Nikon TI microscope equipped with a ×100/NA 1.49 oil-immersion TIRF objective (Nikon apochromat CFI Apo TIRF 100X Oil), an EMCCD camera (Andor iXon Ultra 897), a perfect focus system to account for axial drift, an incubation chamber maintaining a humidified 37°C atmosphere with 5% CO<sub>2</sub>, and a laser launch with 405 nm (140 mW, OBIS, Coherent), 488 nm, 561 nm, and 633 nm (all 1 W, Genesis Coherent) laser lines. Laser intensities were controlled by an acousto-optic Tunable Filter (AA Opto-Electronic, AOTFnC-VIS-TN) and triggered with the camera TTL exposure output signal. Lasers were directed to the microscope by an optical fiber, reflected using a multi-band dichroic (405 nm/488 nm/561 nm/633 nm quad-band, Semrock) and focused in the back focal plane of the objective. The angle of incident laser was adjusted for highly inclined laminated optical sheet (HiLo) conditions (<xref ref-type="bibr" rid="bib74">Tokunaga et al., 2008</xref>). Emission light was filtered using single band-pass filters (Semrock 593/40 nm for PAJFX549 and Semrock 676/37 nm for PAJF646). Hardware was controlled with the Nikon NIS-Elements software.</p><p>For stroboscopic illumination, the excitation laser (561 nm or 633 nm) was pulsed for 1–2 ms (most commonly 1 ms) at maximum (1 W) power at the beginning of the frame interval, while the photoactivation laser (405 nm) was pulsed during the ~447 μs camera transition time, so that the background contribution from the photoactivation laser is not integrated. For all sptPALM, we used an EMCCD vertical shift speed of 0.9 μs and conversion gain setting 2. On our setup, the pixel size after magnification is 160 nm and the photon-to-grayscale gain is 109. A total of 15,000–30,000 frames with this sequence were collected per nucleus, during which the 405 nm intensity was manually tuned to maintain low density of fluorescent particles per frame.</p></sec><sec id="s4-9"><title>Localization and tracking</title><p>To produce trajectories from raw sptPALM movies, we used a custom sptPALM tracking pipeline publicly available on GitHub (<ext-link ext-link-type="uri" xlink:href="https://github.com/alecheckert/quot">https://github.com/alecheckert/quot</ext-link>, <ext-link ext-link-type="uri" xlink:href="https://archive.softwareheritage.org/swh:1:dir:08ea47f009f96e3adb116e5a9841c93753d15d34;origin=https://github.com/alecheckert/quot;visit=swh:1:snp:eaa0b998f6b0d3774db4cfe5a8a8429e0b748dad;anchor=swh:1:rev:1adf7a0574c62f38140f1dec2d14555bfc03b9a7">swh:1:rev:1adf7a0574c62f38140f1dec2d14555bfc03b9a7</ext-link>, <xref ref-type="bibr" rid="bib32">Heckert, 2022b</xref>). All localization and tracking for this article was performed with the following settings:</p><list list-type="bullet"><list-item><p>Detection: Generalized log likelihood ratio test (<xref ref-type="bibr" rid="bib69">Sergé et al., 2008</xref>) with a 2D Gaussian kernel with <inline-formula><mml:math id="inf41"><mml:mrow><mml:mi>σ</mml:mi><mml:mo>=</mml:mo><mml:mn>190</mml:mn></mml:mrow></mml:math></inline-formula> nm (detection method ”llr” with k = 1.2, a 15 pixel window size [w = 15], and a log ratio threshold of 16.0 [t = 16.0]).</p></list-item><list-item><p>Subpixel localization: Levenberg–Marquardt fitting of a 2D integrated Gaussian point spread function model (localization method “ls_int_gaussian”) with fixed <inline-formula><mml:math id="inf42"><mml:mrow><mml:mi>σ</mml:mi><mml:mo>=</mml:mo><mml:mn>190</mml:mn></mml:mrow></mml:math></inline-formula> nm, window size 9 pixels, maximum 20 iterations per PSF, with a damping term of 0.3 for parameter updates. The 2D integrated Gaussian PSF model is described in <xref ref-type="bibr" rid="bib71">Smith et al., 2010</xref> and the Levenberg–Marquardt routine in <xref ref-type="bibr" rid="bib43">Laurence and Chromy, 2010</xref>. We used the radial symmetry method (<xref ref-type="bibr" rid="bib63">Parthasarathy, 2012</xref>) to make the initial guess used to start the Levenberg–Marquardt algorithm.</p></list-item><list-item><p>Tracking: We used the tracking algorithm “conservative” in quot with a 1.2 µm search radius. This simple algorithm searches for particle–particle reconnections that are ‘unambiguous’ in the sense that no other reconnections are possible within the specified search radius. These reconnections are then used to synthesize trajectories, while ‘ambiguous’ connections are discarded.</p></list-item></list><p>After localization and tracking, all trajectories in the first 1000 frames of each movie were discarded. Localization density tends to be high in these frames, so they can contribute tracking errors that compromise accuracy. The mean localization density for most movies in the remaining set of frames was less than one emitter per frame.</p><p>For experiments involving HaloTag or HaloTag-NLS, which have high mobility, we used a broader search radius at 2.5 μm. All other settings were kept the same.</p><p>All trajectories from real sptPALM experiments used in this article are publicly accessible as a Dryad dataset (<ext-link ext-link-type="uri" xlink:href="https://doi.org/10.6078/D13H6N">https://doi.org/10.6078/D13H6N</ext-link>).</p></sec><sec id="s4-10"><title>Spinning disk confocal imaging</title><p>Experiments using spinning disk confocal imaging were performed at the UC Berkeley High-Throughput Screening Facility on a Perkin Elmer Opera Phenix equipped with a controller for 37°C and 5% CO<sub>2</sub>, using a built-in 40x water immersion objective.</p></sec><sec id="s4-11"><title>Simulations</title><p>All simulations in this article belong to one of two categories:</p><list list-type="bullet"><list-item><p>Trajectory simulations: Individual trajectories are simulated in a HiLo-like geometry, then localization error and defocalization are injected as detailed below. The output of each simulation is a set of trajectories. This type of simulation does not incorporate tracking errors. These include the simulations in <xref ref-type="fig" rid="fig3">Figure 3</xref>, <xref ref-type="fig" rid="fig4">Figure 4</xref>, <xref ref-type="fig" rid="fig4s1">Figure 4—figure supplement 1</xref>, <xref ref-type="fig" rid="fig4s2">Figure 4—figure supplement 2</xref>, <xref ref-type="fig" rid="fig4s3">Figure 4—figure supplement 3</xref>, <xref ref-type="fig" rid="fig4s4">Figure 4—figure supplement 4</xref>, <xref ref-type="fig" rid="fig4s7">Figure 4—figure supplement 7</xref>, <xref ref-type="fig" rid="fig4s8">Figure 4—figure supplement 8</xref>, and <xref ref-type="fig" rid="fig4s9">Figure 4—figure supplement 9</xref>.</p></list-item><list-item><p>Optical–dynamical simulations: Starting from a dynamical model and an approximation to sptPALM imaging system, we simulate full SPT movies. The output is a stack of images similar to that acquired on a real sptPALM system. Analysis follows the same steps as for real SPT data: we recover trajectories using a localization and tracking algorithm, which are subjected to the relevant downstream analyses. These include the simulations in <xref ref-type="fig" rid="fig1s1">Figure 1—figure supplement 1</xref>, <xref ref-type="fig" rid="fig4s5">Figure 4—figure supplement 5</xref>, <xref ref-type="fig" rid="fig4s6">Figure 4—figure supplement 6</xref>, <xref ref-type="fig" rid="fig4s10">Figure 4—figure supplement 10</xref>, <xref ref-type="fig" rid="fig4s11">Figure 4—figure supplement 11</xref>, and <xref ref-type="fig" rid="fig4s12">Figure 4—figure supplement 12</xref>.</p></list-item></list><p>Both types of simulation are important. Trajectory simulations allow us to separate the accuracy of the tracking algorithm from the accuracy of the SA/DPMM algorithm in a tightly controlled setting, while optical–dynamical simulations are ‘end-to-end’ tests that also incorporate realistic features such as motion blur, camera noise, and tracking errors.</p><sec id="s4-11-1"><title>Trajectory simulations</title><p>All trajectory simulations were performed with a simple publicly available sptPALM simulation tool (<monospace>strobesim</monospace>; <ext-link ext-link-type="uri" xlink:href="https://github.com/alecheckert/strobesim">https://github.com/alecheckert/strobesim</ext-link>, <xref ref-type="bibr" rid="bib35">Heckert, 2022e</xref>). This tool generates trajectories for different types of motion and simulates the act of observation in a thin focal plane.</p><p>Unless otherwise noted, simulated trajectories were confined to a sphere with radius 5 μm and a focal plane with 700 nm depth bisecting the sphere. Simulated particles were subject to photoactivation and photobleaching throughout the sphere and were only observed when their positions coincided with the focal volume. We simulated sparse tracking without gaps, so that if an emitter passed twice through the focal volume, it counted as two separate trajectories. At the sparsity used for these simulations, tracking is unambiguous and so tracking errors do not contribute to the outcome.</p><p>For discrete-state trajectory simulations, the number of particles in each state was modeled as a multinomial random variable drawn from the underlying state occupancies. As a result, there is an inherent variability associated with the ‘true’ fractional occupations for each simulation replicate, exactly as would be expected in sptPALM experiments.</p><p>For trajectory simulations with state transitions, we modeled the particles as two-state Markov chains with identical transition rates between the states. Each state was associated with a constant diffusion coefficient. These Markov chains were simulated on subframes grained at 100 iterations per frame interval. For instance, for simulations with 7.48 ms frame intervals, the underlying Markov chain was simulated on subframes of 74.8 μs. During each subframe, the state of the MC was assumed to be constant and we simulated diffusion according to the Euler–Maruyama scheme with the current diffusion coefficient. The positions of the particle at the frame interval were recorded.</p></sec><sec id="s4-11-2"><title>Optical–dynamical simulations</title><p>The simulations in <xref ref-type="fig" rid="fig1s1">Figure 1—figure supplement 1</xref>, <xref ref-type="fig" rid="fig4s5">Figure 4—figure supplement 5</xref>, <xref ref-type="fig" rid="fig4s6">Figure 4—figure supplement 6</xref>, <xref ref-type="fig" rid="fig4s10">Figure 4—figure supplement 10</xref>, <xref ref-type="fig" rid="fig4s11">Figure 4—figure supplement 11</xref>, and <xref ref-type="fig" rid="fig4s12">Figure 4—figure supplement 12</xref> were produced with a software package (<monospace>sptPALMsim</monospace>, <ext-link ext-link-type="uri" xlink:href="https://github.com/alecheckert/sptpalmsim">https://github.com/alecheckert/sptpalmsim</ext-link>, <xref ref-type="bibr" rid="bib34">Heckert, 2022d</xref>) that performs both dynamical and optical simulations to incorporate effects such as defocus, camera noise, motion blur, and tracking errors. The dynamic simulations are identical to those described in the previous section. Here, we outline the optical simulations. A more detailed discussion can be found, for instance, in <xref ref-type="bibr" rid="bib30">Hanser et al., 2004</xref>.</p><p>We assume that the observed intensity <inline-formula><mml:math id="inf43"><mml:msub><mml:mi>I</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>⁢</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:math></inline-formula> on pixel <inline-formula><mml:math id="inf44"><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:math></inline-formula> is produced by a linear gain model with read noise and shot noise:<disp-formula id="equ1"><label>(1)</label><mml:math id="m1"><mml:mrow><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mtable columnalign="left left" rowspacing="4pt" columnspacing="1em"><mml:mtr><mml:mtd><mml:msub><mml:mi>I</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:mtd><mml:mtd><mml:mo>=</mml:mo><mml:mi>b</mml:mi><mml:mo>+</mml:mo><mml:mi>g</mml:mi><mml:msub><mml:mi>n</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:msub><mml:mi>r</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:msub><mml:mi>n</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:mtd><mml:mtd><mml:mo>∼</mml:mo><mml:mtext>Poisson</mml:mtext><mml:mrow><mml:mo>(</mml:mo><mml:msub><mml:mi>A</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>)</mml:mo></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:msub><mml:mi>r</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:mtd><mml:mtd><mml:mo>∼</mml:mo><mml:mrow><mml:mi mathvariant="script">N</mml:mi></mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mn>0</mml:mn><mml:mo>,</mml:mo><mml:msubsup><mml:mi>σ</mml:mi><mml:mrow><mml:mtext>read noise</mml:mtext></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msubsup></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mstyle></mml:mrow></mml:math></disp-formula></p><p>The offset <inline-formula><mml:math id="inf45"><mml:mi>b</mml:mi></mml:math></inline-formula>, gain <inline-formula><mml:math id="inf46"><mml:mi>g</mml:mi></mml:math></inline-formula>, and read noise variance <inline-formula><mml:math id="inf47"><mml:msubsup><mml:mi>σ</mml:mi><mml:mtext>read noise</mml:mtext><mml:mn>2</mml:mn></mml:msubsup></mml:math></inline-formula> are assumed to be the same for all pixels in the camera with values similar to an Andor iXon 897 EMCCD (<inline-formula><mml:math id="inf48"><mml:mrow><mml:mi>b</mml:mi><mml:mo>=</mml:mo><mml:mn>470</mml:mn></mml:mrow></mml:math></inline-formula>, <inline-formula><mml:math id="inf49"><mml:mrow><mml:mi>g</mml:mi><mml:mo>=</mml:mo><mml:mn>109</mml:mn></mml:mrow></mml:math></inline-formula>, and <inline-formula><mml:math id="inf50"><mml:mrow><mml:msubsup><mml:mi>σ</mml:mi><mml:mtext>read noise</mml:mtext><mml:mn>2</mml:mn></mml:msubsup><mml:mo>=</mml:mo><mml:msup><mml:mn>3</mml:mn><mml:mn>2</mml:mn></mml:msup></mml:mrow></mml:math></inline-formula>). The function <inline-formula><mml:math id="inf51"><mml:msub><mml:mi>A</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>⁢</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:math></inline-formula> defines the rate of photon arrivals at pixel <inline-formula><mml:math id="inf52"><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:math></inline-formula> and depends on the distribution of fluorescent emitters in the sample.</p><p>We assume that the photon arrival rate <inline-formula><mml:math id="inf53"><mml:msub><mml:mi>A</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>⁢</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:math></inline-formula> is related to the distribution of emitters in the source plane <inline-formula><mml:math id="inf54"><mml:mrow><mml:mi>f</mml:mi><mml:mo>⁢</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>x</mml:mi><mml:mo>,</mml:mo><mml:mi>y</mml:mi><mml:mo>,</mml:mo><mml:mi>z</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula> via<disp-formula id="equ2"><label>(2)</label><mml:math id="m2"><mml:mrow><mml:msub><mml:mi>A</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:munder><mml:mo>∬</mml:mo><mml:mrow><mml:mtext>pixel</mml:mtext><mml:mspace width="mediummathspace"/><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:munder><mml:mtext>d</mml:mtext><mml:mi>x</mml:mi><mml:mspace width="mediummathspace"/><mml:mtext>d</mml:mtext><mml:mi>y</mml:mi><mml:munderover><mml:mo>∫</mml:mo><mml:mrow><mml:mo>−</mml:mo><mml:mi mathvariant="normal">Δ</mml:mi><mml:mi>z</mml:mi><mml:mrow><mml:mo>/</mml:mo></mml:mrow><mml:mn>2</mml:mn></mml:mrow><mml:mrow><mml:mo>+</mml:mo><mml:mi mathvariant="normal">Δ</mml:mi><mml:mi>z</mml:mi><mml:mrow><mml:mo>/</mml:mo></mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:munderover><mml:mtext>d</mml:mtext><mml:mi>z</mml:mi><mml:mspace width="mediummathspace"/><mml:mi>f</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>x</mml:mi><mml:mo>,</mml:mo><mml:mi>y</mml:mi><mml:mo>,</mml:mo><mml:mi>z</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>∗</mml:mo><mml:mtext>PSF</mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:mi>x</mml:mi><mml:mo>,</mml:mo><mml:mi>y</mml:mi><mml:mo>,</mml:mo><mml:mi>z</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></disp-formula></p><p>* denotes convolution. The <inline-formula><mml:math id="inf55"><mml:mi>z</mml:mi></mml:math></inline-formula>-integral runs over the depth of the simulation (in this article, this is always from <inline-formula><mml:math id="inf56"><mml:mrow><mml:mi>z</mml:mi><mml:mo>=</mml:mo><mml:mrow><mml:mo>-</mml:mo><mml:mn>2</mml:mn></mml:mrow></mml:mrow></mml:math></inline-formula> μm to <inline-formula><mml:math id="inf57"><mml:mrow><mml:mi>z</mml:mi><mml:mo>=</mml:mo><mml:mrow><mml:mo>+</mml:mo><mml:mn>2</mml:mn></mml:mrow></mml:mrow></mml:math></inline-formula> μm). <inline-formula><mml:math id="inf58"><mml:mrow><mml:mtext>PSF</mml:mtext><mml:mo>⁢</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>x</mml:mi><mml:mo>,</mml:mo><mml:mi>y</mml:mi><mml:mo>,</mml:mo><mml:mi>z</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula> is assumed to be given by the squared magnitude of a complex-valued function <inline-formula><mml:math id="inf59"><mml:mrow><mml:msub><mml:mtext>PSF</mml:mtext><mml:mi>A</mml:mi></mml:msub><mml:mo>⁢</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>x</mml:mi><mml:mo>,</mml:mo><mml:mi>y</mml:mi><mml:mo>,</mml:mo><mml:mi>z</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula> such that (<xref ref-type="bibr" rid="bib30">Hanser et al., 2004</xref>):<disp-formula id="equ3"><label>(3)</label><mml:math id="m3"><mml:mrow><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mtable columnalign="left left" rowspacing="4pt" columnspacing="1em"><mml:mtr><mml:mtd><mml:msub><mml:mtext>PSF</mml:mtext><mml:mrow><mml:mi>A</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:mi>x</mml:mi><mml:mo>,</mml:mo><mml:mi>y</mml:mi><mml:mo>,</mml:mo><mml:mi>z</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mtd><mml:mtd><mml:mo>=</mml:mo><mml:munder><mml:mo>∬</mml:mo><mml:mrow><mml:mtext>pupil</mml:mtext></mml:mrow></mml:munder><mml:mi>P</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>k</mml:mi><mml:mrow><mml:mi>x</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>k</mml:mi><mml:mrow><mml:mi>y</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:msup><mml:mi>e</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>k</mml:mi><mml:mrow><mml:mi>x</mml:mi></mml:mrow></mml:msub><mml:mi>x</mml:mi><mml:mo>+</mml:mo><mml:msub><mml:mi>k</mml:mi><mml:mrow><mml:mi>y</mml:mi></mml:mrow></mml:msub><mml:mi>y</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msup><mml:msup><mml:mi>e</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:msub><mml:mi>k</mml:mi><mml:mrow><mml:mi>z</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>k</mml:mi><mml:mrow><mml:mi>x</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>k</mml:mi><mml:mrow><mml:mi>y</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mi>z</mml:mi></mml:mrow></mml:msup><mml:mspace width="thinmathspace"/><mml:mtext>d</mml:mtext><mml:msub><mml:mi>k</mml:mi><mml:mrow><mml:mi>x</mml:mi></mml:mrow></mml:msub><mml:mtext>d</mml:mtext><mml:msub><mml:mi>k</mml:mi><mml:mrow><mml:mi>y</mml:mi></mml:mrow></mml:msub></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:msub><mml:mi>k</mml:mi><mml:mrow><mml:mi>z</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>k</mml:mi><mml:mrow><mml:mi>x</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>k</mml:mi><mml:mrow><mml:mi>y</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mtd><mml:mtd><mml:mo>=</mml:mo><mml:msqrt><mml:msup><mml:mrow><mml:mo>(</mml:mo><mml:mfrac><mml:mrow><mml:mn>2</mml:mn><mml:mi>π</mml:mi><mml:mi>n</mml:mi></mml:mrow><mml:mi>λ</mml:mi></mml:mfrac><mml:mo>)</mml:mo></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msup><mml:mo>−</mml:mo><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msubsup><mml:mi>k</mml:mi><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msubsup><mml:mo>+</mml:mo><mml:msubsup><mml:mi>k</mml:mi><mml:mrow><mml:mi>y</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msubsup></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:msqrt></mml:mtd></mml:mtr></mml:mtable></mml:mstyle></mml:mrow></mml:math></disp-formula></p><p>where <inline-formula><mml:math id="inf60"><mml:mrow><mml:mi>P</mml:mi><mml:mo>⁢</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>k</mml:mi><mml:mi>x</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>k</mml:mi><mml:mi>y</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula> is the complex-valued microscope pupil function and <inline-formula><mml:math id="inf61"><mml:msup><mml:mi>e</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>⁢</mml:mo><mml:msub><mml:mi>k</mml:mi><mml:mi>z</mml:mi></mml:msub><mml:mo>⁢</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>k</mml:mi><mml:mi>x</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>k</mml:mi><mml:mi>y</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>⁢</mml:mo><mml:mi>z</mml:mi></mml:mrow></mml:msup></mml:math></inline-formula> is a ‘defocus kernel,’ accounting for the phase profile of light exiting the pupil plane. The limits of the integral run over the circular microscope aperture <inline-formula><mml:math id="inf62"><mml:mrow><mml:mrow><mml:msubsup><mml:mi>k</mml:mi><mml:mi>y</mml:mi><mml:mn>2</mml:mn></mml:msubsup><mml:mo>+</mml:mo><mml:msubsup><mml:mi>k</mml:mi><mml:mi>x</mml:mi><mml:mn>2</mml:mn></mml:msubsup></mml:mrow><mml:mo>≤</mml:mo><mml:msup><mml:mrow><mml:mo>(</mml:mo><mml:mfrac><mml:mtext>NA</mml:mtext><mml:mi>λ</mml:mi></mml:mfrac><mml:mo>)</mml:mo></mml:mrow><mml:mn>2</mml:mn></mml:msup></mml:mrow></mml:math></inline-formula>, where λ is the emission wavelength. In all simulations, we use an ‘ideal’ pupil function with phase 0 and amplitude 1 over the microscope aperture.</p><p>For our purposes, the integral in 3 is replaced with a sum over a grid with finer spatial grain than the camera pixel size.</p><p>Altogether, the optical simulations proceeded in the following way:</p><list list-type="order"><list-item><p>First, the paths of fluorescent emitters are simulated with fine temporal grain (such as 10<sup>4</sup> Hz) according to a particular dynamic model.</p></list-item><list-item><p>For each laser pulse:</p><list list-type="alpha-lower"><list-item><p>The parts of the emitter paths that temporally coincide with the laser pulse are aggregated into a single distribution <inline-formula><mml:math id="inf63"><mml:mrow><mml:mi>f</mml:mi><mml:mo>⁢</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>x</mml:mi><mml:mo>,</mml:mo><mml:mi>y</mml:mi><mml:mo>,</mml:mo><mml:mi>z</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula>.</p></list-item><list-item><p>The photon arrival rates at the camera is simulated according to <xref ref-type="disp-formula" rid="equ2">Equation 2</xref>.</p></list-item><list-item><p>Shot noise and read noise are introduced according to <xref ref-type="disp-formula" rid="equ1">Equation 1</xref>.</p></list-item></list></list-item><list-item><p>Images for all laser pulses are concatenated to yield the simulated SPT movie.</p></list-item></list><p>The product of these simulations are SPT movies that are subsequently tracked (see ‘Localization and tracking’). Except where otherwise indicated, the settings for these simulations were as follows: numerical aperture 1.49, immersion media refractive index 1.515, emission wavelength 670 nm, frame interval 7.48 ms, image pixel size 0.16 μm, excitation pulse width 2 ms, bleach rate 0.2 Hz, read noise variance 3<sup>2</sup> grayvalues<sup>2</sup>, offset 470.0 grayvalues, and gain 109.0 grayvalues per photon. The mean number of photons detected per emitter per frame was 150, although the actual number is random due to the randomness of photon emission and detection (<xref ref-type="disp-formula" rid="equ1">Equation 1</xref>). The scripts used to generate the simulations are publicly available at the <monospace>sptPALMsim</monospace> repo (<ext-link ext-link-type="uri" xlink:href="https://github.com/alecheckert/sptpalmsim">https://github.com/alecheckert/sptpalmsim</ext-link>). <xref ref-type="video" rid="video4">Video 4</xref> shows an example of a movie simulated with these settings.</p></sec></sec><sec id="s4-12"><title>State arrays and Dirichlet process mixture models</title><p>This section describes the SA and DPMM used in this article. We begin with a classic Bayesian finite state mixture model, then introduce modifications that lead to SAs and DPMMs. The finite state mixture has been reviewed in detail elsewhere (<xref ref-type="bibr" rid="bib49">Marin et al., 2005</xref>, <xref ref-type="bibr" rid="bib55">McLachlan et al., 2019</xref>), so here we keep details to a minimum.</p></sec><sec id="s4-13"><title>Finite state mixtures</title><p>A finite state mixture is a collection of ‘states’ <inline-formula><mml:math id="inf64"><mml:mrow><mml:mi>k</mml:mi><mml:mo>=</mml:mo><mml:mrow><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mi mathvariant="normal">…</mml:mi><mml:mo>,</mml:mo><mml:mi>K</mml:mi></mml:mrow></mml:mrow></mml:math></inline-formula>, each of which is associated with an occupation <inline-formula><mml:math id="inf65"><mml:msub><mml:mi>τ</mml:mi><mml:mi>k</mml:mi></mml:msub></mml:math></inline-formula> and a vector of state parameters <inline-formula><mml:math id="inf66"><mml:msub><mml:mi mathvariant="bold-italic">θ</mml:mi><mml:mi>k</mml:mi></mml:msub></mml:math></inline-formula>. (Where convenient, we let <inline-formula><mml:math id="inf67"><mml:mrow><mml:mi mathvariant="bold">θ</mml:mi><mml:mo>=</mml:mo><mml:mrow><mml:mo>(</mml:mo><mml:msub><mml:mi mathvariant="bold-italic">θ</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:mi mathvariant="normal">…</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mi mathvariant="bold-italic">θ</mml:mi><mml:mi>K</mml:mi></mml:msub><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula> be the collection of parameters for all states.) Each state generates trajectories <inline-formula><mml:math id="inf68"><mml:mi>X</mml:mi></mml:math></inline-formula> according to some distribution <inline-formula><mml:math id="inf69"><mml:mrow><mml:msub><mml:mi>p</mml:mi><mml:mi>X</mml:mi></mml:msub><mml:mo>⁢</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi>x</mml:mi><mml:mo lspace="2.5pt" rspace="2.5pt" stretchy="false">|</mml:mo><mml:msub><mml:mi mathvariant="bold-italic">θ</mml:mi><mml:mi>k</mml:mi></mml:msub></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula>. The overall generative process for each trajectory is:</p><list list-type="order"><list-item><p>Randomly select a state <inline-formula><mml:math id="inf70"><mml:mi>k</mml:mi></mml:math></inline-formula> with probability <inline-formula><mml:math id="inf71"><mml:msub><mml:mi>τ</mml:mi><mml:mi>k</mml:mi></mml:msub></mml:math></inline-formula>.</p></list-item><list-item><p>Randomly generate a trajectory <inline-formula><mml:math id="inf72"><mml:mi>X</mml:mi></mml:math></inline-formula> from that state according to <inline-formula><mml:math id="inf73"><mml:mrow><mml:msub><mml:mi>p</mml:mi><mml:mi>X</mml:mi></mml:msub><mml:mo>⁢</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi>x</mml:mi><mml:mo lspace="2.5pt" rspace="2.5pt" stretchy="false">|</mml:mo><mml:msub><mml:mi mathvariant="bold-italic">θ</mml:mi><mml:mi>k</mml:mi></mml:msub></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula>.</p></list-item></list><p>The probability to generate a particular trajectory <inline-formula><mml:math id="inf74"><mml:mi>X</mml:mi></mml:math></inline-formula> is then<disp-formula id="equ4"><mml:math id="m4"><mml:mrow><mml:mi>p</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>X</mml:mi><mml:mrow><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:mi mathvariant="bold-italic">τ</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mi mathvariant="bold-italic">θ</mml:mi><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:mo>.</mml:mo><mml:mo>.</mml:mo><mml:mo>.</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi mathvariant="bold-italic">θ</mml:mi><mml:mrow><mml:mi>K</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:munderover><mml:mo movablelimits="false">∑</mml:mo><mml:mrow><mml:mi>k</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mi>K</mml:mi></mml:mrow></mml:munderover><mml:msub><mml:mi>τ</mml:mi><mml:mrow><mml:mi>k</mml:mi></mml:mrow></mml:msub><mml:msub><mml:mi>p</mml:mi><mml:mrow><mml:mi>X</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:mi>x</mml:mi><mml:mrow><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:msub><mml:mi mathvariant="bold-italic">θ</mml:mi><mml:mrow><mml:mi>k</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></disp-formula></p><p>To represent the origin state for each trajectory, we use a 1-of-<inline-formula><mml:math id="inf75"><mml:mi>K</mml:mi></mml:math></inline-formula> encoding <inline-formula><mml:math id="inf76"><mml:mrow><mml:msub><mml:mi mathvariant="bold-italic">Z</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>∈</mml:mo><mml:msup><mml:mrow><mml:mo>{</mml:mo><mml:mn>0</mml:mn><mml:mo>,</mml:mo><mml:mn>1</mml:mn><mml:mo>}</mml:mo></mml:mrow><mml:mi>K</mml:mi></mml:msup></mml:mrow></mml:math></inline-formula> so that <inline-formula><mml:math id="inf77"><mml:mrow><mml:msub><mml:mi>Z</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>⁢</mml:mo><mml:mi>k</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:math></inline-formula> if trajectory <inline-formula><mml:math id="inf78"><mml:mi>i</mml:mi></mml:math></inline-formula> originates from state <inline-formula><mml:math id="inf79"><mml:mi>k</mml:mi></mml:math></inline-formula> and <inline-formula><mml:math id="inf80"><mml:mrow><mml:msub><mml:mi>Z</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>⁢</mml:mo><mml:mi>k</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mn>0</mml:mn></mml:mrow></mml:math></inline-formula> otherwise. For a dataset with <inline-formula><mml:math id="inf81"><mml:mi>N</mml:mi></mml:math></inline-formula> trajectories, we let <inline-formula><mml:math id="inf82"><mml:mrow><mml:mi mathvariant="bold-italic">Z</mml:mi><mml:mo>∈</mml:mo><mml:msup><mml:mrow><mml:mo>{</mml:mo><mml:mn>0</mml:mn><mml:mo>,</mml:mo><mml:mn>1</mml:mn><mml:mo>}</mml:mo></mml:mrow><mml:mrow><mml:mi>N</mml:mi><mml:mo>×</mml:mo><mml:mi>K</mml:mi></mml:mrow></mml:msup></mml:mrow></mml:math></inline-formula> be the matrix such that the <italic>i</italic>th row is <inline-formula><mml:math id="inf83"><mml:msub><mml:mi mathvariant="bold-italic">Z</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:math></inline-formula>.</p><p>Finally, we specify priors over <inline-formula><mml:math id="inf84"><mml:mi mathvariant="bold-italic">τ</mml:mi></mml:math></inline-formula> and <inline-formula><mml:math id="inf85"><mml:msub><mml:mi mathvariant="bold-italic">θ</mml:mi><mml:mi>k</mml:mi></mml:msub></mml:math></inline-formula>. The full Bayesian finite state mixture can then be written as<disp-formula id="equ5"> <label>(4)</label><mml:math id="m5"><mml:mrow><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mtable columnalign="left left" rowspacing="4pt" columnspacing="1em"><mml:mtr><mml:mtd><mml:mi mathvariant="bold-italic">τ</mml:mi></mml:mtd><mml:mtd><mml:mo>∼</mml:mo><mml:mtext>Dirichlet</mml:mtext><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mfrac><mml:mi>α</mml:mi><mml:mi>K</mml:mi></mml:mfrac><mml:mo>,</mml:mo><mml:mo>.</mml:mo><mml:mo>.</mml:mo><mml:mo>.</mml:mo><mml:mo>,</mml:mo><mml:mfrac><mml:mi>α</mml:mi><mml:mi>K</mml:mi></mml:mfrac></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:msub><mml:mi mathvariant="bold-italic">θ</mml:mi><mml:mrow><mml:mi>k</mml:mi></mml:mrow></mml:msub></mml:mtd><mml:mtd><mml:mo>∼</mml:mo><mml:mi>H</mml:mi></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:msub><mml:mi mathvariant="bold-italic">Z</mml:mi><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mrow><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:mi mathvariant="bold-italic">τ</mml:mi></mml:mtd><mml:mtd><mml:mo>∼</mml:mo><mml:mtext>Multinomial</mml:mtext><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mi mathvariant="bold-italic">τ</mml:mi><mml:mo>,</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:msub><mml:mi>X</mml:mi><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mrow><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:msub><mml:mi>Z</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>k</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:msub><mml:mi mathvariant="bold-italic">θ</mml:mi><mml:mrow><mml:mi>k</mml:mi></mml:mrow></mml:msub></mml:mtd><mml:mtd><mml:mo>∼</mml:mo><mml:msub><mml:mi>p</mml:mi><mml:mrow><mml:mi>X</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:mi>x</mml:mi><mml:mrow><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:msub><mml:mi mathvariant="bold-italic">θ</mml:mi><mml:mrow><mml:mi>k</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mtd></mml:mtr></mml:mtable></mml:mstyle></mml:mrow></mml:math></disp-formula></p><p>where <inline-formula><mml:math id="inf86"><mml:mi>H</mml:mi></mml:math></inline-formula> is the prior over the parameters <inline-formula><mml:math id="inf87"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msub><mml:mi mathvariant="bold-italic">θ</mml:mi><mml:mrow><mml:mi>k</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mstyle></mml:math></inline-formula>, usually chosen to be conjugate to <inline-formula><mml:math id="inf88"><mml:mrow><mml:msub><mml:mi>p</mml:mi><mml:mi>X</mml:mi></mml:msub><mml:mo>⁢</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi>x</mml:mi><mml:mo lspace="2.5pt" rspace="2.5pt" stretchy="false">|</mml:mo><mml:msub><mml:mi mathvariant="bold-italic">θ</mml:mi><mml:mi>k</mml:mi></mml:msub></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula>.</p><p>This corresponds to the first graphical model in <xref ref-type="fig" rid="fig2s1">Figure 2—figure supplement 1</xref>. The objective is to infer the posterior distribution <inline-formula><mml:math id="inf89"><mml:mrow><mml:mi>p</mml:mi><mml:mo>⁢</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="bold-italic">Z</mml:mi><mml:mo>,</mml:mo><mml:mi mathvariant="bold-italic">τ</mml:mi><mml:mo>,</mml:mo><mml:mrow><mml:mi mathvariant="bold">θ</mml:mi><mml:mo lspace="2.5pt" rspace="2.5pt" stretchy="false">|</mml:mo><mml:mi mathvariant="bold-italic">F</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula>, where <inline-formula><mml:math id="inf90"><mml:mi mathvariant="bold-italic">F</mml:mi></mml:math></inline-formula> represents some observed set of trajectories.</p></sec><sec id="s4-14"><title>State arrays</title><p>Three common challenges with the finite state mixture 4 are:</p><list list-type="order"><list-item><p>Choosing <inline-formula><mml:math id="inf91"><mml:mi>K</mml:mi></mml:math></inline-formula>, the number of states. Because <inline-formula><mml:math id="inf92"><mml:mi>K</mml:mi></mml:math></inline-formula> is a hyperparameter in 4, some kind of meta-algorithm is required to infer it, and this process can be fraught (<xref ref-type="bibr" rid="bib49">Marin et al., 2005</xref>).</p></list-item><list-item><p>Choosing <inline-formula><mml:math id="inf93"><mml:mi>H</mml:mi></mml:math></inline-formula>, the prior over <inline-formula><mml:math id="inf94"><mml:msub><mml:mi mathvariant="bold-italic">θ</mml:mi><mml:mi>k</mml:mi></mml:msub></mml:math></inline-formula>. Ideally the prior is chosen to be conjugate to <inline-formula><mml:math id="inf95"><mml:mrow><mml:msub><mml:mi>p</mml:mi><mml:mi>X</mml:mi></mml:msub><mml:mo>⁢</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi>x</mml:mi><mml:mo lspace="2.5pt" rspace="2.5pt" stretchy="false">|</mml:mo><mml:msub><mml:mi mathvariant="bold-italic">θ</mml:mi><mml:mi>k</mml:mi></mml:msub></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula>, but this is only possible for the simplest forms of <inline-formula><mml:math id="inf96"><mml:mrow><mml:msub><mml:mi>p</mml:mi><mml:mi>X</mml:mi></mml:msub><mml:mo>⁢</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi>x</mml:mi><mml:mo lspace="2.5pt" rspace="2.5pt" stretchy="false">|</mml:mo><mml:msub><mml:mi mathvariant="bold-italic">θ</mml:mi><mml:mi>k</mml:mi></mml:msub></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula>.</p></list-item><list-item><p>Computing <inline-formula><mml:math id="inf97"><mml:mrow><mml:msub><mml:mi>p</mml:mi><mml:mi>X</mml:mi></mml:msub><mml:mo>⁢</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi>x</mml:mi><mml:mo lspace="2.5pt" rspace="2.5pt" stretchy="false">|</mml:mo><mml:msub><mml:mi mathvariant="bold-italic">θ</mml:mi><mml:mi>k</mml:mi></mml:msub></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula> is often expensive, especially if it needs to be evaluated repeatedly during inference.</p></list-item></list><p>SAs are a special case of finite mixture models designed in response to these issues. Rather than equating <inline-formula><mml:math id="inf98"><mml:mi>K</mml:mi></mml:math></inline-formula> with the true number of states, SAs instead choose a large, fixed value of <inline-formula><mml:math id="inf99"><mml:mi>K</mml:mi></mml:math></inline-formula> and constant values for each <inline-formula><mml:math id="inf100"><mml:msub><mml:mi mathvariant="bold-italic">θ</mml:mi><mml:mi>k</mml:mi></mml:msub></mml:math></inline-formula>. A Bayesian routine is then used to drive the occupation of most states to zero, leaving minimal models sufficient to explain the observations. (The ability of Bayesian inference to identify sparse explanatory models in the presence of more complex alternatives is the same property that drives automatic relevance determination [ARD] in machine learning with Bayesian models.)</p><p>Because the state parameters are constant, the only parameters left to infer are <inline-formula><mml:math id="inf101"><mml:mi mathvariant="bold-italic">Z</mml:mi></mml:math></inline-formula> and <inline-formula><mml:math id="inf102"><mml:mi mathvariant="bold-italic">τ</mml:mi></mml:math></inline-formula>. Together, this simplified model is<disp-formula id="equ6"><label>(5)</label><mml:math id="m6"><mml:mrow><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mtable columnalign="left left" rowspacing="4pt" columnspacing="1em"><mml:mtr><mml:mtd><mml:mi mathvariant="bold-italic">τ</mml:mi></mml:mtd><mml:mtd><mml:mo>∼</mml:mo><mml:mtext>Dirichlet</mml:mtext><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mfrac><mml:mi>α</mml:mi><mml:mi>K</mml:mi></mml:mfrac><mml:mo>,</mml:mo><mml:mo>.</mml:mo><mml:mo>.</mml:mo><mml:mo>.</mml:mo><mml:mo>,</mml:mo><mml:mfrac><mml:mi>α</mml:mi><mml:mi>K</mml:mi></mml:mfrac></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:msub><mml:mi mathvariant="bold-italic">Z</mml:mi><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mtext> </mml:mtext><mml:mrow><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:mtext> </mml:mtext><mml:mi mathvariant="bold-italic">τ</mml:mi></mml:mtd><mml:mtd><mml:mo>∼</mml:mo><mml:mtext>Multinomial</mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="bold-italic">τ</mml:mi><mml:mo>,</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:msub><mml:mi>X</mml:mi><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mtext> </mml:mtext><mml:mrow><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:mtext> </mml:mtext><mml:msub><mml:mi>Z</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>k</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mtd><mml:mtd><mml:mo>∼</mml:mo><mml:msub><mml:mi>p</mml:mi><mml:mrow><mml:mi>X</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:mi>x</mml:mi><mml:mrow><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:msub><mml:mi mathvariant="bold-italic">θ</mml:mi><mml:mrow><mml:mi>k</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mtd></mml:mtr></mml:mtable></mml:mstyle></mml:mrow></mml:math></disp-formula></p><p>This corresponds to the third graphical model shown in <xref ref-type="fig" rid="fig2">Figure 2A</xref>. Notice that since each <inline-formula><mml:math id="inf103"><mml:msub><mml:mi>X</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:math></inline-formula> and <inline-formula><mml:math id="inf104"><mml:msub><mml:mi mathvariant="bold-italic">θ</mml:mi><mml:mi>k</mml:mi></mml:msub></mml:math></inline-formula> are constant, <inline-formula><mml:math id="inf105"><mml:mrow><mml:msub><mml:mi>p</mml:mi><mml:mi>X</mml:mi></mml:msub><mml:mo>⁢</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:msub><mml:mi>X</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo lspace="2.5pt" rspace="2.5pt" stretchy="false">|</mml:mo><mml:msub><mml:mi mathvariant="bold-italic">θ</mml:mi><mml:mi>k</mml:mi></mml:msub></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula> is also constant and only needs to be evaluated once during inference.</p><p>To infer the posterior distribution <inline-formula><mml:math id="inf106"><mml:mrow><mml:mi>p</mml:mi><mml:mo>⁢</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="bold-italic">Z</mml:mi><mml:mo>,</mml:mo><mml:mrow><mml:mi mathvariant="bold-italic">τ</mml:mi><mml:mo lspace="2.5pt" rspace="2.5pt" stretchy="false">|</mml:mo><mml:mi mathvariant="bold-italic">F</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula>, we take a variational approach, constructing an approximation <inline-formula><mml:math id="inf107"><mml:mrow><mml:mrow><mml:mi>q</mml:mi><mml:mo>⁢</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="bold-italic">Z</mml:mi><mml:mo>,</mml:mo><mml:mi mathvariant="bold-italic">τ</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow><mml:mo>≈</mml:mo><mml:mrow><mml:mi>p</mml:mi><mml:mo>⁢</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="bold-italic">Z</mml:mi><mml:mo>,</mml:mo><mml:mrow><mml:mi mathvariant="bold-italic">τ</mml:mi><mml:mo lspace="2.5pt" rspace="2.5pt" stretchy="false">|</mml:mo><mml:mi mathvariant="bold-italic">F</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula> such that<disp-formula id="equ7"><label>(6)</label><mml:math id="m7"><mml:mrow><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mtable columnalign="left left" rowspacing="4pt" columnspacing="1em"><mml:mtr><mml:mtd><mml:mi>q</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="bold-italic">Z</mml:mi><mml:mo>,</mml:mo><mml:mi mathvariant="bold-italic">τ</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mtd><mml:mtd><mml:mo>=</mml:mo><mml:mi>q</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="bold-italic">Z</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mi>q</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="bold-italic">τ</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mi>q</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="bold-italic">Z</mml:mi><mml:mo>,</mml:mo><mml:mi mathvariant="bold-italic">τ</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mtd><mml:mtd><mml:mo>=</mml:mo><mml:munder><mml:mtext>argmax</mml:mtext><mml:mrow><mml:mi mathvariant="bold-italic">Z</mml:mi><mml:mo>,</mml:mo><mml:mi mathvariant="bold-italic">τ</mml:mi></mml:mrow></mml:munder><mml:mspace width="thinmathspace"/><mml:mi>L</mml:mi><mml:mo stretchy="false">[</mml:mo><mml:mi>q</mml:mi><mml:mo stretchy="false">]</mml:mo></mml:mtd></mml:mtr></mml:mtable></mml:mstyle></mml:mrow></mml:math></disp-formula></p><p>where <inline-formula><mml:math id="inf108"><mml:mrow><mml:mi>L</mml:mi><mml:mo>⁢</mml:mo><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:mi>q</mml:mi><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula> is the variational lower bound:<disp-formula id="equ8"><label>(7)</label><mml:math id="m8"><mml:mrow><mml:mi>L</mml:mi><mml:mo stretchy="false">[</mml:mo><mml:mi>q</mml:mi><mml:mo stretchy="false">]</mml:mo><mml:mo>=</mml:mo><mml:munder><mml:mo movablelimits="false">∑</mml:mo><mml:mrow><mml:mi mathvariant="bold-italic">Z</mml:mi></mml:mrow></mml:munder><mml:mo>∫</mml:mo><mml:mi>q</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="bold-italic">Z</mml:mi><mml:mo>,</mml:mo><mml:mi mathvariant="bold-italic">τ</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mi>log</mml:mi><mml:mo>⁡</mml:mo><mml:mrow><mml:mo>[</mml:mo><mml:mfrac><mml:mrow><mml:mi>p</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="bold-italic">X</mml:mi><mml:mo>,</mml:mo><mml:mi mathvariant="bold-italic">Z</mml:mi><mml:mo>,</mml:mo><mml:mi mathvariant="bold-italic">τ</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mrow><mml:mi>q</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="bold-italic">Z</mml:mi><mml:mo>,</mml:mo><mml:mi mathvariant="bold-italic">τ</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mfrac><mml:mo>]</mml:mo></mml:mrow><mml:mspace width="thinmathspace"/><mml:mtext>d</mml:mtext><mml:mi mathvariant="bold-italic">τ</mml:mi></mml:mrow></mml:math></disp-formula></p><p> </p><p>Motivation for the variational lower bound is discussed in detail elsewhere (<xref ref-type="bibr" rid="bib7">Bishop, 2006</xref>). Here, we only remark that maximization of <inline-formula><mml:math id="inf109"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mi>L</mml:mi><mml:mo stretchy="false">[</mml:mo><mml:mi>q</mml:mi><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:mstyle></mml:math></inline-formula> minimizes the Kullback–Leibler divergence between the approximation and the true posterior. The factorability criterion in 6 enables an expectation-maximization routine (<xref ref-type="bibr" rid="bib14">Dempster et al., 1977</xref>) by iteratively evaluating.<disp-formula id="equ9"><label>(8)</label><mml:math id="m9"><mml:mrow><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mtable columnalign="left left" rowspacing="4pt" columnspacing="1em"><mml:mtr><mml:mtd><mml:mi>log</mml:mi><mml:mo>⁡</mml:mo><mml:mi>q</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="bold-italic">Z</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mtd><mml:mtd><mml:mo>=</mml:mo><mml:msub><mml:mrow><mml:mi>E</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="bold-italic">τ</mml:mi><mml:mo>∼</mml:mo><mml:mi>q</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="bold-italic">τ</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msub><mml:mrow><mml:mo>[</mml:mo><mml:mrow><mml:mi>log</mml:mi><mml:mo>⁡</mml:mo><mml:mi>p</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="bold-italic">X</mml:mi><mml:mo>,</mml:mo><mml:mi mathvariant="bold-italic">Z</mml:mi><mml:mo>,</mml:mo><mml:mi mathvariant="bold-italic">τ</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>]</mml:mo></mml:mrow><mml:mo>+</mml:mo><mml:mtext>constant</mml:mtext></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mi>log</mml:mi><mml:mo>⁡</mml:mo><mml:mi>q</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="bold-italic">τ</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mtd><mml:mtd><mml:mo>=</mml:mo><mml:msub><mml:mrow><mml:mi>E</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="bold-italic">Z</mml:mi><mml:mo>∼</mml:mo><mml:mi>q</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="bold-italic">Z</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msub><mml:mrow><mml:mo>[</mml:mo><mml:mrow><mml:mi>log</mml:mi><mml:mo>⁡</mml:mo><mml:mi>p</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="bold-italic">X</mml:mi><mml:mo>,</mml:mo><mml:mi mathvariant="bold-italic">Z</mml:mi><mml:mo>,</mml:mo><mml:mi mathvariant="bold-italic">τ</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>]</mml:mo></mml:mrow><mml:mo>+</mml:mo><mml:mtext>constant</mml:mtext></mml:mtd></mml:mtr></mml:mtable></mml:mstyle></mml:mrow></mml:math></disp-formula></p><p>The constants are chosen so that each factor, <inline-formula><mml:math id="inf110"><mml:mrow><mml:mi>q</mml:mi><mml:mo>⁢</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="bold-italic">Z</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula> or <inline-formula><mml:math id="inf111"><mml:mrow><mml:mi>q</mml:mi><mml:mo>⁢</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="bold-italic">τ</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula>, is normalized. Combining <xref ref-type="disp-formula" rid="equ9">Equations 8</xref> for model 5 yields the solution<disp-formula id="equ10"><label>(9)</label><mml:math id="m10"><mml:mrow><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mtable columnalign="left left" rowspacing="4pt" columnspacing="1em"><mml:mtr><mml:mtd><mml:mi>q</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="bold-italic">Z</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mtd><mml:mtd><mml:mo>=</mml:mo><mml:munderover><mml:mo movablelimits="false">∏</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mi>N</mml:mi></mml:mrow></mml:munderover><mml:munderover><mml:mo movablelimits="false">∏</mml:mo><mml:mrow><mml:mi>k</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mi>K</mml:mi></mml:mrow></mml:munderover><mml:msubsup><mml:mi>r</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>k</mml:mi></mml:mrow><mml:mrow><mml:msub><mml:mi>Z</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>k</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msubsup></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mi>q</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="bold-italic">τ</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mtd><mml:mtd><mml:mo>=</mml:mo><mml:mtext>Dirichlet</mml:mtext><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msub><mml:mi>n</mml:mi><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:mo>.</mml:mo><mml:mo>.</mml:mo><mml:mo>.</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>n</mml:mi><mml:mrow><mml:mi>K</mml:mi></mml:mrow></mml:msub></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:msub><mml:mi>r</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>k</mml:mi></mml:mrow></mml:msub></mml:mtd><mml:mtd><mml:mo>=</mml:mo><mml:mfrac><mml:mrow><mml:msub><mml:mi>A</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>k</mml:mi></mml:mrow></mml:msub><mml:msup><mml:mi>e</mml:mi><mml:mrow><mml:mi>ψ</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>n</mml:mi><mml:mrow><mml:mi>k</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msup></mml:mrow><mml:mrow><mml:munderover><mml:mo movablelimits="false">∑</mml:mo><mml:mrow><mml:mi>j</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mi>K</mml:mi></mml:mrow></mml:munderover><mml:msub><mml:mi>A</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:msup><mml:mi>e</mml:mi><mml:mrow><mml:mi>ψ</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>n</mml:mi><mml:mrow><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msup></mml:mrow></mml:mfrac></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:msub><mml:mi>n</mml:mi><mml:mrow><mml:mi>k</mml:mi></mml:mrow></mml:msub></mml:mtd><mml:mtd><mml:mo>=</mml:mo><mml:mfrac><mml:mi>α</mml:mi><mml:mi>K</mml:mi></mml:mfrac><mml:mo>+</mml:mo><mml:munderover><mml:mo movablelimits="false">∑</mml:mo><mml:mrow><mml:mi>k</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mi>K</mml:mi></mml:mrow></mml:munderover><mml:msub><mml:mi>L</mml:mi><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:msub><mml:mi>r</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>k</mml:mi></mml:mrow></mml:msub></mml:mtd></mml:mtr></mml:mtable></mml:mstyle></mml:mrow></mml:math></disp-formula></p><p>where <inline-formula><mml:math id="inf112"><mml:msub><mml:mi>L</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:math></inline-formula> is the number of jumps in trajectory <inline-formula><mml:math id="inf113"><mml:mi>i</mml:mi></mml:math></inline-formula> and <inline-formula><mml:math id="inf114"><mml:mrow><mml:mi>ψ</mml:mi><mml:mo>⁢</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>n</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula> is the digamma function. For brevity here, the derivation of <xref ref-type="disp-formula" rid="equ10">Equation 9</xref> is placed in its own section below.</p><p><inline-formula><mml:math id="inf115"><mml:mrow><mml:mi>q</mml:mi><mml:mo>⁢</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="bold-italic">Z</mml:mi><mml:mo>,</mml:mo><mml:mi mathvariant="bold-italic">τ</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula> is parameterized by <inline-formula><mml:math id="inf116"><mml:mi mathvariant="bold-italic">n</mml:mi></mml:math></inline-formula> and <inline-formula><mml:math id="inf117"><mml:mi mathvariant="bold-italic">r</mml:mi></mml:math></inline-formula>. These can be inferred with a simple EM algorithm:</p><list list-type="order"><list-item><p>Initialize a matrix <inline-formula><mml:math id="inf118"><mml:mrow><mml:mi mathvariant="bold-italic">A</mml:mi><mml:mo>∈</mml:mo><mml:msup><mml:mi>R</mml:mi><mml:mrow><mml:mi>N</mml:mi><mml:mo>×</mml:mo><mml:mi>K</mml:mi></mml:mrow></mml:msup></mml:mrow></mml:math></inline-formula> by setting <inline-formula><mml:math id="inf119"><mml:mrow><mml:msub><mml:mi>A</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>⁢</mml:mo><mml:mi>k</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:mi>p</mml:mi><mml:mo>⁢</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:msub><mml:mi>X</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo lspace="2.5pt" rspace="2.5pt" stretchy="false">|</mml:mo><mml:msub><mml:mi mathvariant="bold-italic">θ</mml:mi><mml:mi>k</mml:mi></mml:msub></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula>.</p></list-item><list-item><p>Initialize a matrix <inline-formula><mml:math id="inf120"><mml:mrow><mml:msup><mml:mi mathvariant="bold-italic">r</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mn>0</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msup><mml:mo>∈</mml:mo><mml:msup><mml:mi>R</mml:mi><mml:mrow><mml:mi>N</mml:mi><mml:mo>×</mml:mo><mml:mi>K</mml:mi></mml:mrow></mml:msup></mml:mrow></mml:math></inline-formula> such that <inline-formula><mml:math id="inf121"><mml:mrow><mml:msubsup><mml:mi>r</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>⁢</mml:mo><mml:mi>k</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mn>0</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msubsup><mml:mo>=</mml:mo><mml:mfrac><mml:msub><mml:mi>A</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>⁢</mml:mo><mml:mi>k</mml:mi></mml:mrow></mml:msub><mml:mrow><mml:mstyle displaystyle="false"><mml:munderover><mml:mo largeop="true" movablelimits="false" symmetric="true">∑</mml:mo><mml:mrow><mml:mi>j</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>K</mml:mi></mml:munderover></mml:mstyle><mml:msub><mml:mi>A</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>⁢</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mfrac></mml:mrow></mml:math></inline-formula>.</p></list-item><list-item><p>For each iteration <inline-formula><mml:math id="inf122"><mml:mrow><mml:mi>t</mml:mi><mml:mo>=</mml:mo><mml:mrow><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mn>2</mml:mn><mml:mo>,</mml:mo><mml:mi mathvariant="normal">…</mml:mi></mml:mrow></mml:mrow></mml:math></inline-formula>:</p><list list-type="alpha-lower"><list-item><p>For each state <inline-formula><mml:math id="inf123"><mml:mi>k</mml:mi></mml:math></inline-formula>, evaluate <inline-formula><mml:math id="inf124"><mml:mrow><mml:msubsup><mml:mi>n</mml:mi><mml:mi>k</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>t</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msubsup><mml:mo>=</mml:mo><mml:mrow><mml:mfrac><mml:mi>α</mml:mi><mml:mi>K</mml:mi></mml:mfrac><mml:mo>+</mml:mo><mml:mrow><mml:munderover><mml:mo largeop="true" movablelimits="false" symmetric="true">∑</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>N</mml:mi></mml:munderover><mml:mrow><mml:msub><mml:mi>L</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>⁢</mml:mo><mml:msubsup><mml:mi>r</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>⁢</mml:mo><mml:mi>k</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi>t</mml:mi><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msubsup></mml:mrow></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula>.</p></list-item><list-item><p>Evaluate the matrix <inline-formula><mml:math id="inf125"><mml:msup><mml:mi mathvariant="bold-italic">r</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>t</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msup></mml:math></inline-formula> such that</p></list-item></list></list-item></list><list list-type="simple"><list-item><p><inline-formula><mml:math id="inf126"><mml:mrow><mml:msubsup><mml:mi>r</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>⁢</mml:mo><mml:mi>k</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>t</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msubsup><mml:mo>=</mml:mo><mml:mfrac><mml:mrow><mml:msub><mml:mi>A</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>⁢</mml:mo><mml:mi>k</mml:mi></mml:mrow></mml:msub><mml:mo>⁢</mml:mo><mml:msup><mml:mi>e</mml:mi><mml:mrow><mml:mi>ψ</mml:mi><mml:mo>⁢</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msubsup><mml:mi>n</mml:mi><mml:mi>k</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>t</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msubsup><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:msup></mml:mrow><mml:mrow><mml:munderover><mml:mo largeop="true" movablelimits="false" symmetric="true">∑</mml:mo><mml:mrow><mml:mi>j</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>K</mml:mi></mml:munderover><mml:mrow><mml:msub><mml:mi>A</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>⁢</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>⁢</mml:mo><mml:msup><mml:mi>e</mml:mi><mml:mrow><mml:mi>ψ</mml:mi><mml:mo>⁢</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msubsup><mml:mi>n</mml:mi><mml:mi>j</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>t</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msubsup><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:msup></mml:mrow></mml:mrow></mml:mfrac></mml:mrow></mml:math></inline-formula></p></list-item></list><list list-type="order"><list-item><p>After convergence of <inline-formula><mml:math id="inf127"><mml:mi mathvariant="bold-italic">n</mml:mi></mml:math></inline-formula> and <inline-formula><mml:math id="inf128"><mml:mi mathvariant="bold-italic">r</mml:mi></mml:math></inline-formula>, we can summarize the posterior distribution by taking its mean:</p><list list-type="simple"><list-item><p><disp-formula id="equ11"><label>(10)</label><mml:math id="m11"><mml:mrow><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mtable columnalign="left left" rowspacing="4pt" columnspacing="1em"><mml:mtr><mml:mtd><mml:mrow><mml:mi>E</mml:mi></mml:mrow><mml:mrow><mml:mo>[</mml:mo><mml:msub><mml:mi>Z</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>k</mml:mi></mml:mrow></mml:msub><mml:mo>]</mml:mo></mml:mrow></mml:mtd><mml:mtd><mml:mo>=</mml:mo><mml:msub><mml:mi>r</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>k</mml:mi></mml:mrow></mml:msub></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mrow><mml:mi>E</mml:mi></mml:mrow><mml:mrow><mml:mo>[</mml:mo><mml:msub><mml:mi>τ</mml:mi><mml:mrow><mml:mi>k</mml:mi></mml:mrow></mml:msub><mml:mo>]</mml:mo></mml:mrow></mml:mtd><mml:mtd><mml:mo>=</mml:mo><mml:mfrac><mml:msub><mml:mi>n</mml:mi><mml:mrow><mml:mi>k</mml:mi></mml:mrow></mml:msub><mml:mrow><mml:munderover><mml:mo movablelimits="false">∑</mml:mo><mml:mrow><mml:mi>j</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mi>K</mml:mi></mml:mrow></mml:munderover><mml:msub><mml:mi>n</mml:mi><mml:mrow><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mfrac></mml:mtd></mml:mtr></mml:mtable></mml:mstyle></mml:mrow></mml:math></disp-formula></p></list-item></list></list-item><list-item><p>Finally, we perform two postprocessing steps on the posterior mean:</p><list list-type="alpha-lower"><list-item><p>If localization error is a parameter, we marginalize it out by projecting through that axis of the array.</p></list-item><list-item><p>We adjust the posterior mean to account for defocalization biases, as described in <italic>‘</italic>Defocalization’.</p></list-item></list></list-item></list><p>Throughout this article, we always report occupations for the SA model as the mean of <inline-formula><mml:math id="inf129"><mml:mrow><mml:mi>q</mml:mi><mml:mo>⁢</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="bold-italic">τ</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula> according to <xref ref-type="disp-formula" rid="equ11">Equation 10</xref>, twith localization error marginalized out and the appropriate defocalization correction applied.</p></sec><sec id="s4-15"><title>Naive state occupations</title><p>Inference of the SA posterior works optimally with thousands to tens of thousands of trajectories. We also found it useful to have a cheap, dirty estimate for state occupations that can be evaluated on a small number of trajectories to visualize nuclei-to-nuclei variability (for instance, in <xref ref-type="fig" rid="fig5">Figure 5A</xref>).</p><p>For these purposes, we define the ‘naive occupation estimate’ <inline-formula><mml:math id="inf130"><mml:msub><mml:mi mathvariant="bold-italic">τ</mml:mi><mml:mtext>naive</mml:mtext></mml:msub></mml:math></inline-formula> such that<disp-formula id="equ12"><label>(11)</label><mml:math id="m12"><mml:mrow><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mtable columnalign="left left" rowspacing="4pt" columnspacing="1em"><mml:mtr><mml:mtd><mml:msub><mml:mi>τ</mml:mi><mml:mrow><mml:mtext>naive</mml:mtext><mml:mo>,</mml:mo><mml:mi>k</mml:mi></mml:mrow></mml:msub></mml:mtd><mml:mtd><mml:mo>=</mml:mo><mml:mfrac><mml:mrow><mml:munderover><mml:mo movablelimits="false">∑</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mi>N</mml:mi></mml:mrow></mml:munderover><mml:msub><mml:mi>L</mml:mi><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:msubsup><mml:mi>r</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>k</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mn>0</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msubsup></mml:mrow><mml:mrow><mml:munderover><mml:mo movablelimits="false">∑</mml:mo><mml:mrow><mml:mi>j</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mi>K</mml:mi></mml:mrow></mml:munderover><mml:munderover><mml:mo movablelimits="false">∑</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mi>N</mml:mi></mml:mrow></mml:munderover><mml:msub><mml:mi>L</mml:mi><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:msubsup><mml:mi>r</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mn>0</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msubsup></mml:mrow></mml:mfrac></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:msubsup><mml:mi>r</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>k</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mn>0</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msubsup></mml:mtd><mml:mtd><mml:mo>=</mml:mo><mml:mfrac><mml:mrow><mml:msub><mml:mi>p</mml:mi><mml:mrow><mml:mi>X</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mrow><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:msub><mml:mi mathvariant="bold-italic">θ</mml:mi><mml:mrow><mml:mi>k</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mrow><mml:munderover><mml:mo movablelimits="false">∑</mml:mo><mml:mrow><mml:mi>j</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mi>K</mml:mi></mml:mrow></mml:munderover><mml:msub><mml:mi>p</mml:mi><mml:mrow><mml:mi>X</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mrow><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:msub><mml:mi mathvariant="bold-italic">θ</mml:mi><mml:mrow><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mfrac></mml:mtd></mml:mtr></mml:mtable></mml:mstyle></mml:mrow></mml:math></disp-formula></p><p>Notice that this is just the posterior occupations based on the initial value for <inline-formula><mml:math id="inf131"><mml:mi mathvariant="bold-italic">r</mml:mi></mml:math></inline-formula> in the algorithm for SA inference. We use the same postprocessing steps for <inline-formula><mml:math id="inf132"><mml:msub><mml:mi mathvariant="bold-italic">τ</mml:mi><mml:mtext>naive</mml:mtext></mml:msub></mml:math></inline-formula> as for SAs, including marginalizing out localization error and correcting for defocalization.</p></sec><sec id="s4-16"><title>State arrays for regular Brownian motion</title><p>In the above section, we have left <inline-formula><mml:math id="inf133"><mml:mrow><mml:msub><mml:mi>p</mml:mi><mml:mi>X</mml:mi></mml:msub><mml:mo>⁢</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi>x</mml:mi><mml:mo lspace="2.5pt" rspace="2.5pt" stretchy="false">|</mml:mo><mml:msub><mml:mi mathvariant="bold-italic">θ</mml:mi><mml:mi>k</mml:mi></mml:msub></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula> unspecified as it depends on the type of motion being considered. This section states the form of <inline-formula><mml:math id="inf134"><mml:mrow><mml:msub><mml:mi>p</mml:mi><mml:mi>X</mml:mi></mml:msub><mml:mo>⁢</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi>x</mml:mi><mml:mo lspace="2.5pt" rspace="2.5pt" stretchy="false">|</mml:mo><mml:msub><mml:mi mathvariant="bold-italic">θ</mml:mi><mml:mi>k</mml:mi></mml:msub></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula> for RBME, the type of motion considered in this article.</p><p>Suppose that trajectory <inline-formula><mml:math id="inf135"><mml:mi>i</mml:mi></mml:math></inline-formula> is constructed by measuring the position of a Brownian particle over sequential frame intervals of duration <inline-formula><mml:math id="inf136"><mml:mrow><mml:mi mathvariant="normal">Δ</mml:mi><mml:mo>⁢</mml:mo><mml:mi>t</mml:mi></mml:mrow></mml:math></inline-formula>, and that each measured position has some error associated with it. We assume that this error is normally distributed with mean zero and variance <inline-formula><mml:math id="inf137"><mml:msubsup><mml:mi>σ</mml:mi><mml:mtext>loc</mml:mtext><mml:mn>2</mml:mn></mml:msubsup></mml:math></inline-formula>.</p><p>We refer to the change in the particle’s position over each frame interval as a ‘jump.’ If there are <inline-formula><mml:math id="inf138"><mml:msub><mml:mi>L</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:math></inline-formula> total jumps, let <inline-formula><mml:math id="inf139"><mml:mrow><mml:mrow><mml:mi mathvariant="bold-italic">x</mml:mi><mml:mo>,</mml:mo><mml:mi mathvariant="bold-italic">y</mml:mi></mml:mrow><mml:mo>∈</mml:mo><mml:msup><mml:mi>R</mml:mi><mml:msub><mml:mi>L</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:msup></mml:mrow></mml:math></inline-formula> be the displacements of these jumps along the <inline-formula><mml:math id="inf140"><mml:mi>x</mml:mi></mml:math></inline-formula> and <inline-formula><mml:math id="inf141"><mml:mi>y</mml:mi></mml:math></inline-formula> axes, respectively. Then, the probability density over <inline-formula><mml:math id="inf142"><mml:mi mathvariant="bold-italic">x</mml:mi></mml:math></inline-formula> and <inline-formula><mml:math id="inf143"><mml:mi mathvariant="bold-italic">y</mml:mi></mml:math></inline-formula> is<disp-formula id="equ13"><label>(12)</label><mml:math id="m13"><mml:mrow><mml:msub><mml:mi>p</mml:mi><mml:mrow><mml:mi>X</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="bold-italic">x</mml:mi><mml:mo>,</mml:mo><mml:mi mathvariant="bold-italic">y</mml:mi><mml:mrow><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:mi>D</mml:mi><mml:mo>,</mml:mo><mml:msubsup><mml:mi>σ</mml:mi><mml:mrow><mml:mtext>loc</mml:mtext></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msubsup><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mfrac><mml:mrow><mml:mi>exp</mml:mi><mml:mo>⁡</mml:mo><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mo>−</mml:mo><mml:mfrac><mml:mn>1</mml:mn><mml:mn>2</mml:mn></mml:mfrac><mml:mrow><mml:mo>[</mml:mo><mml:mrow><mml:msup><mml:mi mathvariant="bold-italic">x</mml:mi><mml:mrow><mml:mi>T</mml:mi></mml:mrow></mml:msup><mml:msup><mml:mi mathvariant="bold">Γ</mml:mi><mml:mrow><mml:mo>−</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msup><mml:mi mathvariant="bold-italic">x</mml:mi><mml:mo>+</mml:mo><mml:msup><mml:mi mathvariant="bold-italic">y</mml:mi><mml:mrow><mml:mi>T</mml:mi></mml:mrow></mml:msup><mml:msup><mml:mi mathvariant="bold">Γ</mml:mi><mml:mrow><mml:mo>−</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msup><mml:mi mathvariant="bold-italic">y</mml:mi></mml:mrow><mml:mo>]</mml:mo></mml:mrow></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow><mml:mrow><mml:mn>2</mml:mn><mml:mi>π</mml:mi><mml:mspace width="mediummathspace"/><mml:mtext>det</mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="bold">Γ</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mfrac></mml:mrow></mml:math></disp-formula></p><p>where <inline-formula><mml:math id="inf144"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mi mathvariant="bold">Γ</mml:mi><mml:mo>∈</mml:mo><mml:msup><mml:mrow><mml:mi>R</mml:mi></mml:mrow><mml:mrow><mml:msub><mml:mi>L</mml:mi><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mo>×</mml:mo><mml:msub><mml:mi>L</mml:mi><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msup></mml:mrow></mml:mstyle></mml:math></inline-formula> is the covariance matrix defined by<disp-formula id="equ14"><mml:math id="m14"><mml:mrow><mml:msub><mml:mi mathvariant="normal">Γ</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>⁢</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:mo>{</mml:mo><mml:mtable columnspacing="5pt" displaystyle="true" rowspacing="0pt"><mml:mtr><mml:mtd columnalign="left"><mml:mrow><mml:mrow><mml:mn>2</mml:mn><mml:mo>⁢</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mrow><mml:mi>D</mml:mi><mml:mo>⁢</mml:mo><mml:mi mathvariant="normal">Δ</mml:mi><mml:mo>⁢</mml:mo><mml:mi>t</mml:mi></mml:mrow><mml:mo>+</mml:mo><mml:msubsup><mml:mi>σ</mml:mi><mml:mtext>loc</mml:mtext><mml:mn>2</mml:mn></mml:msubsup></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow><mml:mo separator="true">  </mml:mo></mml:mrow></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mrow><mml:mtext>if </mml:mtext><mml:mo>⁢</mml:mo><mml:mi>i</mml:mi></mml:mrow><mml:mo>=</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="left"><mml:mrow><mml:mrow><mml:mo>-</mml:mo><mml:msubsup><mml:mi>σ</mml:mi><mml:mtext>loc</mml:mtext><mml:mn>2</mml:mn></mml:msubsup></mml:mrow><mml:mo separator="true">  </mml:mo></mml:mrow></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mrow><mml:mtext>if </mml:mtext><mml:mo>⁢</mml:mo><mml:mrow><mml:mo>|</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>-</mml:mo><mml:mi>j</mml:mi></mml:mrow><mml:mo>|</mml:mo></mml:mrow></mml:mrow><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="left"><mml:mrow><mml:mn>0</mml:mn><mml:mo separator="true">  </mml:mo></mml:mrow></mml:mtd><mml:mtd columnalign="left"><mml:mtext>otherwise</mml:mtext></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:mrow></mml:math></disp-formula></p><p>where <inline-formula><mml:math id="inf145"><mml:mi>D</mml:mi></mml:math></inline-formula> is the diffusion coefficient and <inline-formula><mml:math id="inf146"><mml:msubsup><mml:mi>σ</mml:mi><mml:mtext>loc</mml:mtext><mml:mn>2</mml:mn></mml:msubsup></mml:math></inline-formula> is the localization error (<xref ref-type="bibr" rid="bib57">Michalet and Berglund, 2012</xref>). Due to the contribution of the localization error to the off-diagonal terms of the covariance matrix, the jumps of an RBME are not a Markov process except when <inline-formula><mml:math id="inf147"><mml:mrow><mml:msubsup><mml:mi>σ</mml:mi><mml:mtext>loc</mml:mtext><mml:mn>2</mml:mn></mml:msubsup><mml:mo>=</mml:mo><mml:mn>0</mml:mn></mml:mrow></mml:math></inline-formula>.</p><p>The SA for RBME uses a 2D grid of diffusion coefficients and localization errors. In this grid, the diffusion coefficients <inline-formula><mml:math id="inf148"><mml:mi>D</mml:mi></mml:math></inline-formula> are log-spaced between 10<sup>-2</sup> and 10<sup>2</sup> μm<sup>2</sup> s<sup>-1</sup>, while the localization errors <inline-formula><mml:math id="inf149"><mml:msub><mml:mi>σ</mml:mi><mml:mtext>loc</mml:mtext></mml:msub></mml:math></inline-formula> are linearly spaced between 0 and 0.06 μm.</p></sec><sec id="s4-17"><title>State arrays for fractional Brownian motion</title><p>In <xref ref-type="fig" rid="fig4s11">Figure 4—figure supplement 11</xref> and <xref ref-type="fig" rid="fig4s12">Figure 4—figure supplement 12</xref>, we consider a generalization of RBME that we refer to as fractional Brownian motion with localization error (FBME). This is a simple modification of Mandelbrot and Van Ness’s FBM (<xref ref-type="bibr" rid="bib47">Mandelbrot and Van Ness, 1968</xref>) that incorporates localization error.</p><p>We define 1D FBME as a mean-zero Gaussian process <inline-formula><mml:math id="inf150"><mml:msub><mml:mi>X</mml:mi><mml:mi>t</mml:mi></mml:msub></mml:math></inline-formula> with the covariance function<disp-formula id="equ15"><mml:math id="m15"><mml:mrow><mml:mrow><mml:mtext>Cov</mml:mtext><mml:mo>⁢</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mi>t</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mi>s</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow><mml:mo>=</mml:mo><mml:mrow><mml:mrow><mml:mi>S</mml:mi><mml:mo>⁢</mml:mo><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mrow><mml:msup><mml:mrow><mml:mo>|</mml:mo><mml:mi>t</mml:mi><mml:mo>|</mml:mo></mml:mrow><mml:mrow><mml:mn>2</mml:mn><mml:mo>⁢</mml:mo><mml:mi>H</mml:mi></mml:mrow></mml:msup><mml:mo>+</mml:mo><mml:msup><mml:mrow><mml:mo>|</mml:mo><mml:mi>s</mml:mi><mml:mo>|</mml:mo></mml:mrow><mml:mrow><mml:mn>2</mml:mn><mml:mo>⁢</mml:mo><mml:mi>H</mml:mi></mml:mrow></mml:msup></mml:mrow><mml:mo>-</mml:mo><mml:msup><mml:mrow><mml:mo>|</mml:mo><mml:mrow><mml:mi>t</mml:mi><mml:mo>-</mml:mo><mml:mi>s</mml:mi></mml:mrow><mml:mo>|</mml:mo></mml:mrow><mml:mrow><mml:mn>2</mml:mn><mml:mo>⁢</mml:mo><mml:mi>H</mml:mi></mml:mrow></mml:msup></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow><mml:mo>+</mml:mo><mml:mrow><mml:msub><mml:mi>I</mml:mi><mml:mrow><mml:mi>t</mml:mi><mml:mo>=</mml:mo><mml:mi>s</mml:mi></mml:mrow></mml:msub><mml:mo>⁢</mml:mo><mml:msubsup><mml:mi>σ</mml:mi><mml:mtext>loc</mml:mtext><mml:mn>2</mml:mn></mml:msubsup></mml:mrow></mml:mrow></mml:mrow></mml:math></disp-formula></p><p>where <inline-formula><mml:math id="inf151"><mml:mi>S</mml:mi></mml:math></inline-formula> is the scaling coefficient, <inline-formula><mml:math id="inf152"><mml:mi>H</mml:mi></mml:math></inline-formula> is the Hurst parameter (<inline-formula><mml:math id="inf153"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mn>0</mml:mn><mml:mo>&lt;</mml:mo><mml:mi>H</mml:mi><mml:mo>&lt;</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:mstyle></mml:math></inline-formula>), <inline-formula><mml:math id="inf154"><mml:msubsup><mml:mi>σ</mml:mi><mml:mtext>loc</mml:mtext><mml:mn>2</mml:mn></mml:msubsup></mml:math></inline-formula> is the variance of the localization error, and <inline-formula><mml:math id="inf155"><mml:msub><mml:mi>I</mml:mi><mml:mrow><mml:mi>t</mml:mi><mml:mo>=</mml:mo><mml:mi>s</mml:mi></mml:mrow></mml:msub></mml:math></inline-formula> is the indicator function (1 if <inline-formula><mml:math id="inf156"><mml:mrow><mml:mi>t</mml:mi><mml:mo>=</mml:mo><mml:mi>s</mml:mi></mml:mrow></mml:math></inline-formula> and 0 otherwise). Because we always measure the position at regular frame intervals of duration <inline-formula><mml:math id="inf157"><mml:mrow><mml:mi mathvariant="normal">Δ</mml:mi><mml:mo>⁢</mml:mo><mml:mi>t</mml:mi></mml:mrow></mml:math></inline-formula>, we let <inline-formula><mml:math id="inf158"><mml:mrow><mml:mi>t</mml:mi><mml:mo>=</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>⁢</mml:mo><mml:mi mathvariant="normal">Δ</mml:mi><mml:mo>⁢</mml:mo><mml:mi>t</mml:mi></mml:mrow></mml:mrow></mml:math></inline-formula> and <inline-formula><mml:math id="inf159"><mml:mrow><mml:mi>s</mml:mi><mml:mo>=</mml:mo><mml:mrow><mml:mi>j</mml:mi><mml:mo>⁢</mml:mo><mml:mi mathvariant="normal">Δ</mml:mi><mml:mo>⁢</mml:mo><mml:mi>t</mml:mi></mml:mrow></mml:mrow></mml:math></inline-formula> so that this can be written as<disp-formula id="equ16"><mml:math id="m16"><mml:mrow><mml:mrow><mml:mtext>Cov</mml:mtext><mml:mo>⁢</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>⁢</mml:mo><mml:mi mathvariant="normal">Δ</mml:mi><mml:mo>⁢</mml:mo><mml:mi>t</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mrow><mml:mi>j</mml:mi><mml:mo>⁢</mml:mo><mml:mi mathvariant="normal">Δ</mml:mi><mml:mo>⁢</mml:mo><mml:mi>t</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow><mml:mo>=</mml:mo><mml:mrow><mml:mrow><mml:mi>S</mml:mi><mml:mo>⁢</mml:mo><mml:mi mathvariant="normal">Δ</mml:mi><mml:mo>⁢</mml:mo><mml:msup><mml:mi>t</mml:mi><mml:mrow><mml:mn>2</mml:mn><mml:mo>⁢</mml:mo><mml:mi>H</mml:mi></mml:mrow></mml:msup><mml:mo>⁢</mml:mo><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mrow><mml:msup><mml:mrow><mml:mo>|</mml:mo><mml:mi>i</mml:mi><mml:mo>|</mml:mo></mml:mrow><mml:mrow><mml:mn>2</mml:mn><mml:mo>⁢</mml:mo><mml:mi>H</mml:mi></mml:mrow></mml:msup><mml:mo>+</mml:mo><mml:msup><mml:mrow><mml:mo>|</mml:mo><mml:mi>j</mml:mi><mml:mo>|</mml:mo></mml:mrow><mml:mrow><mml:mn>2</mml:mn><mml:mo>⁢</mml:mo><mml:mi>H</mml:mi></mml:mrow></mml:msup></mml:mrow><mml:mo>-</mml:mo><mml:msup><mml:mrow><mml:mo>|</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>-</mml:mo><mml:mi>j</mml:mi></mml:mrow><mml:mo>|</mml:mo></mml:mrow><mml:mrow><mml:mn>2</mml:mn><mml:mo>⁢</mml:mo><mml:mi>H</mml:mi></mml:mrow></mml:msup></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow><mml:mo>+</mml:mo><mml:mrow><mml:msub><mml:mi>I</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>=</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>⁢</mml:mo><mml:msubsup><mml:mi>σ</mml:mi><mml:mtext>loc</mml:mtext><mml:mn>2</mml:mn></mml:msubsup></mml:mrow></mml:mrow></mml:mrow></mml:math></disp-formula></p><p>The corresponding increment process <inline-formula><mml:math id="inf160"><mml:mrow><mml:msub><mml:mover accent="true"><mml:mi>X</mml:mi><mml:mo stretchy="false">~</mml:mo></mml:mover><mml:mi>i</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:msub><mml:mi>X</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>⁢</mml:mo><mml:mi mathvariant="normal">Δ</mml:mi><mml:mo>⁢</mml:mo><mml:mi>t</mml:mi></mml:mrow></mml:msub><mml:mo>-</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>⁢</mml:mo><mml:mi mathvariant="normal">Δ</mml:mi><mml:mo>⁢</mml:mo><mml:mi>t</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> is a mean-zero Gaussian process with the covariance function<disp-formula id="equ17"><label>(13)</label><mml:math id="m17"><mml:mrow><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mtable columnalign="left left" rowspacing="4pt" columnspacing="1em"><mml:mtr><mml:mtd><mml:mtext>Cov</mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mrow><mml:mover><mml:mi>X</mml:mi><mml:mo stretchy="false">~</mml:mo></mml:mover></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mrow><mml:mover><mml:mi>X</mml:mi><mml:mo stretchy="false">~</mml:mo></mml:mover></mml:mrow><mml:mrow><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mtd><mml:mtd><mml:mo>=</mml:mo><mml:mi>S</mml:mi><mml:mi mathvariant="normal">Δ</mml:mi><mml:msup><mml:mi>t</mml:mi><mml:mrow><mml:mn>2</mml:mn><mml:mi>H</mml:mi></mml:mrow></mml:msup><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msup><mml:mrow><mml:mo>|</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>−</mml:mo><mml:mi>j</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mo>|</mml:mo></mml:mrow><mml:mrow><mml:mn>2</mml:mn><mml:mi>H</mml:mi></mml:mrow></mml:msup><mml:mo>+</mml:mo><mml:msup><mml:mrow><mml:mo>|</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>−</mml:mo><mml:mi>j</mml:mi><mml:mo>−</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mo>|</mml:mo></mml:mrow><mml:mrow><mml:mn>2</mml:mn><mml:mi>H</mml:mi></mml:mrow></mml:msup><mml:mo>−</mml:mo><mml:mn>2</mml:mn><mml:msup><mml:mrow><mml:mo>|</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>−</mml:mo><mml:mi>j</mml:mi></mml:mrow><mml:mo>|</mml:mo></mml:mrow><mml:mrow><mml:mn>2</mml:mn><mml:mi>H</mml:mi></mml:mrow></mml:msup></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd/><mml:mtd><mml:mspace width="2em"/><mml:mo>+</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mn>2</mml:mn><mml:msubsup><mml:mi>σ</mml:mi><mml:mrow><mml:mtext>loc</mml:mtext></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msubsup><mml:mo stretchy="false">)</mml:mo><mml:msub><mml:mrow><mml:mi>I</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>=</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>−</mml:mo><mml:msubsup><mml:mi>σ</mml:mi><mml:mrow><mml:mtext>loc</mml:mtext></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msubsup><mml:msub><mml:mrow><mml:mi>I</mml:mi></mml:mrow><mml:mrow><mml:mrow><mml:mo>|</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>−</mml:mo><mml:mi>j</mml:mi></mml:mrow><mml:mo>|</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub></mml:mtd></mml:mtr></mml:mtable></mml:mstyle></mml:mrow></mml:math></disp-formula></p><p>2D and 3D FBMEs are constructed with independent 1D FBMEs along each spatial axis.</p><p>In <xref ref-type="disp-formula" rid="equ17">Equation 13</xref>, the scaling coefficient has units of <inline-formula><mml:math id="inf161"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mrow><mml:mo>μ</mml:mo></mml:mrow><mml:msup><mml:mi mathvariant="normal">m</mml:mi><mml:mn>2</mml:mn></mml:msup><mml:msup><mml:mi mathvariant="normal">s</mml:mi><mml:mrow><mml:mo>−</mml:mo><mml:mn>2</mml:mn><mml:mi mathvariant="normal">H</mml:mi></mml:mrow></mml:msup></mml:mrow></mml:mstyle></mml:math></inline-formula>. As a result, its magnitude is highly dependent on <inline-formula><mml:math id="inf162"><mml:mi>H</mml:mi></mml:math></inline-formula>. Because we often want to parameterize the magnitude of the particle’s jumps separately from the covariance between jumps, in this article we use a ‘modified’ scaling parameter <inline-formula><mml:math id="inf163"><mml:mover accent="true"><mml:mi>S</mml:mi><mml:mo>¯</mml:mo></mml:mover></mml:math></inline-formula> defined by<disp-formula id="equ18"><label>(14)</label><mml:math id="m18"><mml:mrow><mml:mover accent="true"><mml:mi>S</mml:mi><mml:mo>¯</mml:mo></mml:mover><mml:mo>=</mml:mo><mml:mrow><mml:mi>S</mml:mi><mml:mo>⁢</mml:mo><mml:mi mathvariant="normal">Δ</mml:mi><mml:mo>⁢</mml:mo><mml:msup><mml:mi>t</mml:mi><mml:mrow><mml:mrow><mml:mn>2</mml:mn><mml:mo>⁢</mml:mo><mml:mi>H</mml:mi></mml:mrow><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msup></mml:mrow></mml:mrow></mml:math></disp-formula></p><p>As a result, the jump variance is <inline-formula><mml:math id="inf164"><mml:mrow><mml:mrow><mml:mtext>Var</mml:mtext><mml:mo>⁢</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mover accent="true"><mml:mi>X</mml:mi><mml:mo stretchy="false">~</mml:mo></mml:mover><mml:mi>i</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow><mml:mo>=</mml:mo><mml:mrow><mml:mn>2</mml:mn><mml:mo>⁢</mml:mo><mml:mover accent="true"><mml:mi>S</mml:mi><mml:mo>¯</mml:mo></mml:mover><mml:mo>⁢</mml:mo><mml:mi mathvariant="normal">Δ</mml:mi><mml:mo>⁢</mml:mo><mml:mi>t</mml:mi></mml:mrow></mml:mrow></mml:math></inline-formula>, regardless of the Hurst parameter. While <inline-formula><mml:math id="inf165"><mml:mover accent="true"><mml:mi>S</mml:mi><mml:mo>¯</mml:mo></mml:mover></mml:math></inline-formula> is much easier to work with for one dataset, since it is dependent on <inline-formula><mml:math id="inf166"><mml:mrow><mml:mi mathvariant="normal">Δ</mml:mi><mml:mo>⁢</mml:mo><mml:mi>t</mml:mi></mml:mrow></mml:math></inline-formula> it must not be compared across datasets with different frame intervals and should first be converted to <inline-formula><mml:math id="inf167"><mml:mi>S</mml:mi></mml:math></inline-formula> with <xref ref-type="disp-formula" rid="equ18">Equation 14</xref>.</p></sec><sec id="s4-18"><title>Derivation of Equation 9</title><p>Here, we derive the SA posterior (<xref ref-type="disp-formula" rid="equ10">Equation 9</xref>) by substituting model 5 into <xref ref-type="disp-formula" rid="equ9">Equation 8</xref> and imposing some additional physical constraints.</p><p>First, let <inline-formula><mml:math id="inf168"><mml:mrow><mml:msub><mml:mi>A</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>⁢</mml:mo><mml:mi>k</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:msub><mml:mi>p</mml:mi><mml:mi>X</mml:mi></mml:msub><mml:mo>⁢</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:msub><mml:mi>X</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo lspace="2.5pt" rspace="2.5pt" stretchy="false">|</mml:mo><mml:msub><mml:mi mathvariant="bold-italic">θ</mml:mi><mml:mi>k</mml:mi></mml:msub></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula>. Then factor <inline-formula><mml:math id="inf169"><mml:mrow><mml:mrow><mml:mi>log</mml:mi><mml:mo>⁡</mml:mo><mml:mi>p</mml:mi></mml:mrow><mml:mo>⁢</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="bold-italic">F</mml:mi><mml:mo>,</mml:mo><mml:mi mathvariant="bold-italic">Z</mml:mi><mml:mo>,</mml:mo><mml:mi mathvariant="bold-italic">τ</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula> as<disp-formula id="equ19"><label>(15)</label><mml:math id="m19"><mml:mrow><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mtable columnalign="left left" rowspacing="4pt" columnspacing="1em"><mml:mtr><mml:mtd><mml:mi>log</mml:mi><mml:mo>⁡</mml:mo><mml:mi>p</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="bold-italic">X</mml:mi><mml:mo>,</mml:mo><mml:mi mathvariant="bold-italic">Z</mml:mi><mml:mo>,</mml:mo><mml:mi mathvariant="bold-italic">τ</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mtd><mml:mtd><mml:mo>=</mml:mo><mml:mi>log</mml:mi><mml:mo>⁡</mml:mo><mml:mi>p</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="bold-italic">X</mml:mi><mml:mrow><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:mi mathvariant="bold-italic">Z</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>+</mml:mo><mml:mi>log</mml:mi><mml:mo>⁡</mml:mo><mml:mi>p</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="bold-italic">Z</mml:mi><mml:mrow><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:mi mathvariant="bold-italic">τ</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>+</mml:mo><mml:mi>log</mml:mi><mml:mo>⁡</mml:mo><mml:mi>p</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="bold-italic">τ</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mtd></mml:mtr><mml:mtr><mml:mtd/><mml:mtd><mml:mo>=</mml:mo><mml:munderover><mml:mo movablelimits="false">∑</mml:mo><mml:mrow><mml:mi>k</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mi>K</mml:mi></mml:mrow></mml:munderover><mml:munderover><mml:mo movablelimits="false">∑</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mi>N</mml:mi></mml:mrow></mml:munderover><mml:msub><mml:mi>Z</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>k</mml:mi></mml:mrow></mml:msub><mml:mi>log</mml:mi><mml:mo>⁡</mml:mo><mml:msub><mml:mi>A</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>k</mml:mi></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:munderover><mml:mo movablelimits="false">∑</mml:mo><mml:mrow><mml:mi>k</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mi>K</mml:mi></mml:mrow></mml:munderover><mml:munderover><mml:mo movablelimits="false">∑</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mi>N</mml:mi></mml:mrow></mml:munderover><mml:msub><mml:mi>Z</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>k</mml:mi></mml:mrow></mml:msub><mml:mi>log</mml:mi><mml:mo>⁡</mml:mo><mml:msub><mml:mi>τ</mml:mi><mml:mrow><mml:mi>k</mml:mi></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:munderover><mml:mo movablelimits="false">∑</mml:mo><mml:mrow><mml:mi>k</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mi>K</mml:mi></mml:mrow></mml:munderover><mml:mo stretchy="false">(</mml:mo><mml:mi>α</mml:mi><mml:mo>−</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">)</mml:mo><mml:mi>log</mml:mi><mml:mo>⁡</mml:mo><mml:msub><mml:mi>τ</mml:mi><mml:mrow><mml:mi>k</mml:mi></mml:mrow></mml:msub></mml:mtd></mml:mtr><mml:mtr><mml:mtd/><mml:mtd><mml:mspace width="2em"/><mml:mo>+</mml:mo><mml:mtext>constant</mml:mtext></mml:mtd></mml:mtr></mml:mtable></mml:mstyle></mml:mrow></mml:math></disp-formula></p><p>where the constant accounts for normalization factors. Plugging this into the second equation in Equation 8, we have<disp-formula id="equ20"><mml:math id="m20"><mml:mrow><mml:mrow><mml:mrow><mml:mi>log</mml:mi><mml:mo>⁡</mml:mo><mml:mi>q</mml:mi></mml:mrow><mml:mo>⁢</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>τ</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow><mml:mo>=</mml:mo><mml:mrow><mml:mrow><mml:munderover><mml:mo largeop="true" movablelimits="false" symmetric="true">∑</mml:mo><mml:mrow><mml:mi>k</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>K</mml:mi></mml:munderover><mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mrow><mml:mfrac><mml:mi>α</mml:mi><mml:mi>K</mml:mi></mml:mfrac><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mo>+</mml:mo><mml:mrow><mml:munderover><mml:mo largeop="true" movablelimits="false" symmetric="true">∑</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>N</mml:mi></mml:munderover><mml:mrow><mml:msub><mml:mi>E</mml:mi><mml:mrow><mml:mi>Z</mml:mi><mml:mo>∼</mml:mo><mml:mrow><mml:mi>q</mml:mi><mml:mo>⁢</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>Z</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:msub><mml:mo>⁢</mml:mo><mml:mrow><mml:mo>[</mml:mo><mml:msub><mml:mi>Z</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>⁢</mml:mo><mml:mi>k</mml:mi></mml:mrow></mml:msub><mml:mo>]</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>⁢</mml:mo><mml:mrow><mml:mi>log</mml:mi><mml:mo>⁡</mml:mo><mml:msub><mml:mi>τ</mml:mi><mml:mi>k</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:mrow><mml:mo>+</mml:mo><mml:mtext>constant</mml:mtext></mml:mrow></mml:mrow></mml:math></disp-formula></p><p>We have collected terms that do not depend on <inline-formula><mml:math id="inf170"><mml:mi mathvariant="bold-italic">τ</mml:mi></mml:math></inline-formula> into the constant. In this article, we choose to weight the contribution of each trajectory to <inline-formula><mml:math id="inf171"><mml:mrow><mml:mrow><mml:mi>log</mml:mi><mml:mo>⁡</mml:mo><mml:mi>q</mml:mi></mml:mrow><mml:mo>⁢</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="bold-italic">τ</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula> by the number of jumps in the trajectory. This is equivalent to treating jumps (rather than trajectories) as individual observations and is more robust to issues arising from the shallow observation depth of most sptPALM setups. It results in the modified equation<disp-formula id="equ21"><mml:math id="m21"><mml:mrow><mml:mrow><mml:mrow><mml:mi>log</mml:mi><mml:mo>⁡</mml:mo><mml:mi>q</mml:mi></mml:mrow><mml:mo>⁢</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>τ</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow><mml:mo>=</mml:mo><mml:mrow><mml:mrow><mml:munderover><mml:mo largeop="true" movablelimits="false" symmetric="true">∑</mml:mo><mml:mrow><mml:mi>k</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>K</mml:mi></mml:munderover><mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mrow><mml:mfrac><mml:mi>α</mml:mi><mml:mi>K</mml:mi></mml:mfrac><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mo>+</mml:mo><mml:mrow><mml:munderover><mml:mo largeop="true" movablelimits="false" symmetric="true">∑</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>N</mml:mi></mml:munderover><mml:mrow><mml:msub><mml:mi>L</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>⁢</mml:mo><mml:msub><mml:mi>E</mml:mi><mml:mrow><mml:mi>Z</mml:mi><mml:mo>∼</mml:mo><mml:mrow><mml:mi>q</mml:mi><mml:mo>⁢</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>Z</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:msub><mml:mo>⁢</mml:mo><mml:mrow><mml:mo>[</mml:mo><mml:msub><mml:mi>Z</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>⁢</mml:mo><mml:mi>k</mml:mi></mml:mrow></mml:msub><mml:mo>]</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>⁢</mml:mo><mml:mrow><mml:mi>log</mml:mi><mml:mo>⁡</mml:mo><mml:msub><mml:mi>τ</mml:mi><mml:mi>k</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:mrow><mml:mo>+</mml:mo><mml:mtext>constant</mml:mtext></mml:mrow></mml:mrow></mml:math></disp-formula></p><p>where <inline-formula><mml:math id="inf172"><mml:msub><mml:mi>L</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:math></inline-formula> is the number of jumps in trajectory <inline-formula><mml:math id="inf173"><mml:mi>i</mml:mi></mml:math></inline-formula>. We recognize this as a log Dirichlet distribution, so that<disp-formula id="equ22"><label>(16)</label><mml:math id="m22"><mml:mrow><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mtable columnalign="left left" rowspacing="4pt" columnspacing="1em"><mml:mtr><mml:mtd><mml:mi>q</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="bold-italic">τ</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mtd><mml:mtd><mml:mo>=</mml:mo><mml:mtext>Dirichlet</mml:mtext><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msub><mml:mi>n</mml:mi><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:mo>.</mml:mo><mml:mo>.</mml:mo><mml:mo>.</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>n</mml:mi><mml:mrow><mml:mi>K</mml:mi></mml:mrow></mml:msub></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:msub><mml:mi>n</mml:mi><mml:mrow><mml:mi>k</mml:mi></mml:mrow></mml:msub></mml:mtd><mml:mtd><mml:mo>=</mml:mo><mml:mfrac><mml:mi>α</mml:mi><mml:mi>K</mml:mi></mml:mfrac><mml:mo>+</mml:mo><mml:munderover><mml:mo movablelimits="false">∑</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mi>N</mml:mi></mml:mrow></mml:munderover><mml:msub><mml:mi>L</mml:mi><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mrow><mml:mi>E</mml:mi></mml:mrow><mml:mrow><mml:mo>[</mml:mo><mml:msub><mml:mi>Z</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>k</mml:mi></mml:mrow></mml:msub><mml:mo>]</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mstyle></mml:mrow></mml:math></disp-formula></p><p>Next, we substitute <xref ref-type="disp-formula" rid="equ19">Equation 15</xref> into the first equation in Equation 8, giving<disp-formula id="equ23"><mml:math id="m23"><mml:mrow><mml:mrow><mml:mrow><mml:mi>log</mml:mi><mml:mo>⁡</mml:mo><mml:mi>q</mml:mi></mml:mrow><mml:mo>⁢</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>Z</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow><mml:mo>=</mml:mo><mml:mrow><mml:munderover><mml:mo largeop="true" movablelimits="false" symmetric="true">∑</mml:mo><mml:mrow><mml:mi>k</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>K</mml:mi></mml:munderover><mml:mrow><mml:munderover><mml:mo largeop="true" movablelimits="false" symmetric="true">∑</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>N</mml:mi></mml:munderover><mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mrow><mml:mi>log</mml:mi><mml:mo>⁡</mml:mo><mml:msub><mml:mi>A</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>⁢</mml:mo><mml:mi>k</mml:mi></mml:mrow></mml:msub></mml:mrow><mml:mo>+</mml:mo><mml:mrow><mml:msub><mml:mi>E</mml:mi><mml:mrow><mml:mi>τ</mml:mi><mml:mo>∼</mml:mo><mml:mrow><mml:mi>q</mml:mi><mml:mo>⁢</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>τ</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:msub><mml:mo>⁢</mml:mo><mml:mrow><mml:mo>[</mml:mo><mml:mrow><mml:mi>log</mml:mi><mml:mo>⁡</mml:mo><mml:msub><mml:mi>τ</mml:mi><mml:mi>k</mml:mi></mml:msub></mml:mrow><mml:mo>]</mml:mo></mml:mrow></mml:mrow></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>⁢</mml:mo><mml:msub><mml:mi>Z</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>⁢</mml:mo><mml:mi>k</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:mrow></mml:mrow></mml:math></disp-formula></p><p>Since <inline-formula><mml:math id="inf174"><mml:mrow><mml:mi>q</mml:mi><mml:mo>⁢</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="bold-italic">τ</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula> is the Dirichlet distribution given by Equation 16,<disp-formula id="equ24"><mml:math id="m24"><mml:mrow><mml:mrow><mml:msub><mml:mi>E</mml:mi><mml:mrow><mml:mi>τ</mml:mi><mml:mo>∼</mml:mo><mml:mrow><mml:mi>q</mml:mi><mml:mo>⁢</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>τ</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:msub><mml:mo>⁢</mml:mo><mml:mrow><mml:mo>[</mml:mo><mml:mrow><mml:mi>log</mml:mi><mml:mo>⁡</mml:mo><mml:msub><mml:mi>τ</mml:mi><mml:mi>k</mml:mi></mml:msub></mml:mrow><mml:mo>]</mml:mo></mml:mrow></mml:mrow><mml:mo>=</mml:mo><mml:mrow><mml:mrow><mml:mi>ψ</mml:mi><mml:mo>⁢</mml:mo><mml:mrow><mml:mo>(</mml:mo><mml:msub><mml:mi>n</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:mo>)</mml:mo></mml:mrow></mml:mrow><mml:mo>-</mml:mo><mml:mrow><mml:mi>ψ</mml:mi><mml:mo>⁢</mml:mo><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:munderover><mml:mo largeop="true" movablelimits="false" symmetric="true">∑</mml:mo><mml:mrow><mml:mi>j</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>K</mml:mi></mml:munderover><mml:msub><mml:mi>n</mml:mi><mml:mi>j</mml:mi></mml:msub></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:mrow></mml:math></disp-formula></p><p>where <inline-formula><mml:math id="inf175"><mml:mrow><mml:mi>ψ</mml:mi><mml:mo>⁢</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>x</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula> is the digamma function. Normalizing over the states for each trajectory <inline-formula><mml:math id="inf176"><mml:mi>i</mml:mi></mml:math></inline-formula>, we have<disp-formula id="equ25"><label>(17)</label><mml:math id="m25"><mml:mrow><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mtable columnalign="left left" rowspacing="4pt" columnspacing="1em"><mml:mtr><mml:mtd><mml:mi>q</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="bold-italic">Z</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mtd><mml:mtd><mml:mo>=</mml:mo><mml:munderover><mml:mo movablelimits="false">∏</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mi>N</mml:mi></mml:mrow></mml:munderover><mml:munderover><mml:mo movablelimits="false">∏</mml:mo><mml:mrow><mml:mi>k</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mi>K</mml:mi></mml:mrow></mml:munderover><mml:msubsup><mml:mi>r</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>k</mml:mi></mml:mrow><mml:mrow><mml:msub><mml:mi>Z</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>k</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msubsup></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:msub><mml:mi>r</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>k</mml:mi></mml:mrow></mml:msub></mml:mtd><mml:mtd><mml:mo>=</mml:mo><mml:mfrac><mml:mrow><mml:msub><mml:mi>A</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>k</mml:mi></mml:mrow></mml:msub><mml:msup><mml:mi>e</mml:mi><mml:mrow><mml:mi>ψ</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>n</mml:mi><mml:mrow><mml:mi>k</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msup></mml:mrow><mml:mrow><mml:munderover><mml:mo movablelimits="false">∑</mml:mo><mml:mrow><mml:mi>j</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mi>K</mml:mi></mml:mrow></mml:munderover><mml:msub><mml:mi>A</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:msup><mml:mi>e</mml:mi><mml:mrow><mml:mi>ψ</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>n</mml:mi><mml:mrow><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msup></mml:mrow></mml:mfrac></mml:mtd></mml:mtr></mml:mtable></mml:mstyle></mml:mrow></mml:math></disp-formula></p><p>Together, <xref ref-type="disp-formula" rid="equ22 equ25">Equations 16 and 17</xref> constitute the result in Equation 9.</p></sec><sec id="s4-19"><title>Dirichlet process mixture model</title><p>As mentioned above, a fundamental challenge with the finite state mixture (<xref ref-type="disp-formula" rid="equ5">Equation 4</xref>) is determining the number of states. SAs deal with this issue by selecting a large, finite value for <inline-formula><mml:math id="inf177"><mml:mi>K</mml:mi></mml:math></inline-formula> and relying on an inference routine that selects sparse subsets of states from a <inline-formula><mml:math id="inf178"><mml:mi>K</mml:mi></mml:math></inline-formula>-dimensional initial model.</p><p>DPMMs are more extreme, taking the limit <inline-formula><mml:math id="inf179"><mml:mrow><mml:mi>K</mml:mi><mml:mo>→</mml:mo><mml:mi mathvariant="normal">∞</mml:mi></mml:mrow></mml:math></inline-formula> (<xref ref-type="bibr" rid="bib19">Ferguson, 1973</xref>). In this limit, the discrete vector of state occupations is replaced by a continuous distribution over the entire space of state parameters. The generative process for each trajectory is,</p><list list-type="order"><list-item><p>Randomly draw some state parameters <inline-formula><mml:math id="inf180"><mml:mrow><mml:msub><mml:mi mathvariant="bold-italic">θ</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>∼</mml:mo><mml:mi>H</mml:mi></mml:mrow></mml:math></inline-formula>, where <inline-formula><mml:math id="inf181"><mml:mi>H</mml:mi></mml:math></inline-formula> is a continuous distribution over the space of state parameters.</p></list-item><list-item><p>Randomly generate a trajectory <inline-formula><mml:math id="inf182"><mml:mi>X</mml:mi></mml:math></inline-formula> from that state according to <inline-formula><mml:math id="inf183"><mml:mrow><mml:msub><mml:mi>p</mml:mi><mml:mi>X</mml:mi></mml:msub><mml:mo>⁢</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi>x</mml:mi><mml:mo lspace="2.5pt" rspace="2.5pt" stretchy="false">|</mml:mo><mml:msub><mml:mi mathvariant="bold-italic">θ</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula>.</p></list-item></list><p>This process is formalized by replacing the Dirichlet distribution in Equation 4 with the Dirichlet process <inline-formula><mml:math id="inf184"><mml:mrow><mml:mtext>DP</mml:mtext><mml:mo>⁢</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>α</mml:mi><mml:mo>,</mml:mo><mml:mi>H</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula>, its infinite-dimensional analog. Here, α has the same function as in the finite mixture (defining the relative strength of the prior) and <inline-formula><mml:math id="inf185"><mml:mi>H</mml:mi></mml:math></inline-formula> is the ‘base distribution’ over state parameters. The full DPMM is then<disp-formula id="equ26"><label>(18)</label><mml:math id="m26"><mml:mrow><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mtable columnalign="left left" rowspacing="4pt" columnspacing="1em"><mml:mtr><mml:mtd><mml:mi>G</mml:mi></mml:mtd><mml:mtd><mml:mo>∼</mml:mo><mml:mtext>DP</mml:mtext><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mi>α</mml:mi><mml:mo>,</mml:mo><mml:mi>H</mml:mi></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:msub><mml:mi mathvariant="bold-italic">θ</mml:mi><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mtext> </mml:mtext><mml:mrow><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:mtext> </mml:mtext><mml:mi>G</mml:mi></mml:mtd><mml:mtd><mml:mo>∼</mml:mo><mml:mi>G</mml:mi></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:msub><mml:mi>X</mml:mi><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub></mml:mtd><mml:mtd><mml:mo>∼</mml:mo><mml:msub><mml:mi>p</mml:mi><mml:mrow><mml:mi>X</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:mi>x</mml:mi><mml:mrow><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:msub><mml:mi mathvariant="bold-italic">θ</mml:mi><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mtd></mml:mtr></mml:mtable></mml:mstyle></mml:mrow></mml:math></disp-formula></p><p>This corresponds to the second graphical model in <xref ref-type="fig" rid="fig2">Figure 2A</xref>. Each draw <inline-formula><mml:math id="inf186"><mml:mi>G</mml:mi></mml:math></inline-formula> is a discrete probability distribution over part of the parameter space (<xref ref-type="bibr" rid="bib8">Blackwell, 1973</xref>). This formalism is discussed in detail in <xref ref-type="bibr" rid="bib72">Teh, 2010</xref> or <xref ref-type="bibr" rid="bib60">Neal, 1992</xref>. Here, we only remark that recovering the posterior <inline-formula><mml:math id="inf187"><mml:mrow><mml:mi>p</mml:mi><mml:mo>⁢</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi mathvariant="bold-italic">θ</mml:mi><mml:mo lspace="2.5pt" rspace="2.5pt" stretchy="false">|</mml:mo><mml:mi mathvariant="bold-italic">F</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula> requires marginalizing over <inline-formula><mml:math id="inf188"><mml:mi>G</mml:mi></mml:math></inline-formula>, yielding a continuous distribution over the parameter space.</p><p>To estimate the posterior distribution <inline-formula><mml:math id="inf189"><mml:mrow><mml:mi>p</mml:mi><mml:mo>⁢</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi mathvariant="bold-italic">θ</mml:mi><mml:mo lspace="2.5pt" rspace="2.5pt" stretchy="false">|</mml:mo><mml:mi mathvariant="bold-italic">F</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula>, we take the Gibbs sampling approach introduced by Neal (Algorithm 8 in <xref ref-type="bibr" rid="bib61">Neal, 2000</xref>). This involves sampling each <inline-formula><mml:math id="inf190"><mml:msub><mml:mi mathvariant="bold-italic">θ</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:math></inline-formula> while hold the other <inline-formula><mml:math id="inf191"><mml:msub><mml:mi mathvariant="bold-italic">θ</mml:mi><mml:mrow><mml:mi>j</mml:mi><mml:mo>≠</mml:mo><mml:mi>i</mml:mi></mml:mrow></mml:msub></mml:math></inline-formula> constant, yielding samples from the posterior distribution (<xref ref-type="bibr" rid="bib20">Geman and Geman, 1984</xref>). To counter autocorrelation in the samples, Neal also endowed the sampler with additional Metropolis–Hastings nudges to the candidate state parameters between rounds of Gibbs sampling. For these nudges, we use a Gaussian proposal distribution.</p><p>In the case of RBME, the state parameters are <inline-formula><mml:math id="inf192"><mml:mrow><mml:mi mathvariant="bold-italic">θ</mml:mi><mml:mo>=</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>D</mml:mi><mml:mo>,</mml:mo><mml:msubsup><mml:mi>σ</mml:mi><mml:mtext>loc</mml:mtext><mml:mn>2</mml:mn></mml:msubsup><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula>. Even with Neal’s sampler, a large number of samples are required to estimate the posterior over this 2D space, potentially requiring hours of computational time per dataset.</p><p>To make the problem more tractable, we replace this 2D space with a 1D approximation by neglecting the off-diagonal terms in the covariance matrix for RBME (<xref ref-type="disp-formula" rid="equ13">Equation 12</xref>). With this approximation, <xref ref-type="disp-formula" rid="equ13">Equation 12</xref> can be rewritten as the log gamma density as<disp-formula id="equ27"> <label>(19)</label><mml:math id="m27"><mml:mrow><mml:mrow><mml:mrow><mml:mi>log</mml:mi><mml:mo>⁡</mml:mo><mml:msub><mml:mi>p</mml:mi><mml:mi>X</mml:mi></mml:msub></mml:mrow><mml:mo>⁢</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:msub><mml:mi>X</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo lspace="2.5pt" rspace="2.5pt" stretchy="false">|</mml:mo><mml:mi>ϕ</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow><mml:mo>∝</mml:mo><mml:mrow><mml:mrow><mml:mo>-</mml:mo><mml:mrow><mml:msub><mml:mi>S</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>⁢</mml:mo><mml:msup><mml:mi>e</mml:mi><mml:mrow><mml:mo>-</mml:mo><mml:mi>ϕ</mml:mi></mml:mrow></mml:msup></mml:mrow></mml:mrow><mml:mo>-</mml:mo><mml:mrow><mml:msub><mml:mi>L</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>⁢</mml:mo><mml:mi>ϕ</mml:mi></mml:mrow></mml:mrow></mml:mrow></mml:math></disp-formula></p><p>where <inline-formula><mml:math id="inf193"><mml:mrow><mml:mi>ϕ</mml:mi><mml:mo>=</mml:mo><mml:mrow><mml:mi>log</mml:mi><mml:mo>⁡</mml:mo><mml:mrow><mml:mo>[</mml:mo><mml:mrow><mml:mn>4</mml:mn><mml:mo>⁢</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mrow><mml:mi>D</mml:mi><mml:mo>⁢</mml:mo><mml:mi mathvariant="normal">Δ</mml:mi><mml:mo>⁢</mml:mo><mml:mi>t</mml:mi></mml:mrow><mml:mo>+</mml:mo><mml:msubsup><mml:mi>σ</mml:mi><mml:mtext>loc</mml:mtext><mml:mn>2</mml:mn></mml:msubsup></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow><mml:mo>]</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula>, <inline-formula><mml:math id="inf194"><mml:msub><mml:mi>S</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:math></inline-formula> is the sum of squared 2D jumps in trajectory <inline-formula><mml:math id="inf195"><mml:mi>i</mml:mi></mml:math></inline-formula>, and <inline-formula><mml:math id="inf196"><mml:msub><mml:mi>L</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:math></inline-formula> is the number of jumps. Notice that we cannot distinguish the contributions of <inline-formula><mml:math id="inf197"><mml:mi>D</mml:mi></mml:math></inline-formula> and <inline-formula><mml:math id="inf198"><mml:msubsup><mml:mi>σ</mml:mi><mml:mtext>loc</mml:mtext><mml:mn>2</mml:mn></mml:msubsup></mml:math></inline-formula> to <inline-formula><mml:math id="inf199"><mml:mi>ϕ</mml:mi></mml:math></inline-formula> without measuring <inline-formula><mml:math id="inf200"><mml:msubsup><mml:mi>σ</mml:mi><mml:mtext>loc</mml:mtext><mml:mn>2</mml:mn></mml:msubsup></mml:math></inline-formula> by some other method, such as averaging the negative sequential jump covariance across all trajectories in the dataset. This is the price we pay for a tractable DPMM and is the major disadvantage of this model (see, for instance, <xref ref-type="fig" rid="fig3">Figure 3A</xref>).</p><p>The complete Gibbs sampling routine for our DPMM is the following, which is essentially a modified version of Algorithm 8 from <xref ref-type="bibr" rid="bib61">Neal, 2000</xref>:</p><list list-type="order"><list-item><p>Draw a random sample <inline-formula><mml:math id="inf201"><mml:mrow><mml:msup><mml:mi mathvariant="bold-italic">ϕ</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mn>0</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msup><mml:mo>=</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>ϕ</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:mi mathvariant="normal">…</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mi>ϕ</mml:mi><mml:msub><mml:mi>m</mml:mi><mml:mn>0</mml:mn></mml:msub></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula> from a uniform distribution on the interval <inline-formula><mml:math id="inf202"><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:msub><mml:mi>ϕ</mml:mi><mml:mtext>min</mml:mtext></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>ϕ</mml:mi><mml:mtext>max</mml:mtext></mml:msub><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:math></inline-formula>, where the interval is selected to span the parameter space of interest. Each element of the vector <inline-formula><mml:math id="inf203"><mml:msup><mml:mi mathvariant="bold-italic">ϕ</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mn>0</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msup></mml:math></inline-formula> represents a candidate ‘state.’ At each iteration, we will add or remove states from this vector as the sampler explores the posterior.</p></list-item><list-item><p>Assign each trajectory <inline-formula><mml:math id="inf204"><mml:mi>i</mml:mi></mml:math></inline-formula> to a state <inline-formula><mml:math id="inf205"><mml:mrow><mml:mi>k</mml:mi><mml:mo>∈</mml:mo><mml:mrow><mml:mo>{</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mi mathvariant="normal">…</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mi>m</mml:mi><mml:mn>0</mml:mn></mml:msub><mml:mo>}</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula> with log probability proportional to <inline-formula><mml:math id="inf206"><mml:mrow><mml:mrow><mml:mi>log</mml:mi><mml:mo>⁡</mml:mo><mml:msub><mml:mi>p</mml:mi><mml:mi>X</mml:mi></mml:msub></mml:mrow><mml:mo>⁢</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:msub><mml:mi>X</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo lspace="2.5pt" rspace="2.5pt" stretchy="false">|</mml:mo><mml:msub><mml:mi>ϕ</mml:mi><mml:mi>k</mml:mi></mml:msub></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula>. Let this assignment be <inline-formula><mml:math id="inf207"><mml:msubsup><mml:mi>Z</mml:mi><mml:mi>i</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mn>0</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msubsup></mml:math></inline-formula>.</p></list-item><list-item><p>For each iteration <inline-formula><mml:math id="inf208"><mml:mrow><mml:mi>t</mml:mi><mml:mo>=</mml:mo><mml:mrow><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mn>2</mml:mn><mml:mo>,</mml:mo><mml:mi mathvariant="normal">…</mml:mi></mml:mrow></mml:mrow></mml:math></inline-formula></p><list list-type="alpha-lower"><list-item><p>For each trajectory <inline-formula><mml:math id="inf209"><mml:mrow><mml:mi>i</mml:mi><mml:mo>=</mml:mo><mml:mrow><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mn>2</mml:mn><mml:mo>,</mml:mo><mml:mi mathvariant="normal">…</mml:mi></mml:mrow></mml:mrow></mml:math></inline-formula>, either set <inline-formula><mml:math id="inf210"><mml:msubsup><mml:mi>Z</mml:mi><mml:mi>i</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>t</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msubsup></mml:math></inline-formula> to a state in the current set <inline-formula><mml:math id="inf211"><mml:msup><mml:mi mathvariant="bold-italic">ϕ</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi>t</mml:mi><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msup></mml:math></inline-formula> with probability <inline-formula><mml:math id="inf212"><mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi>N</mml:mi><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>/</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mrow><mml:mi>α</mml:mi><mml:mo>+</mml:mo><mml:mi>N</mml:mi></mml:mrow><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula>, or create a new state with probability <inline-formula><mml:math id="inf213"><mml:mrow><mml:mi>α</mml:mi><mml:mo>/</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mrow><mml:mi>α</mml:mi><mml:mo>+</mml:mo><mml:mi>N</mml:mi></mml:mrow><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula>.</p><list list-type="roman-lower"><list-item><p>If setting to an existing state, choose state <inline-formula><mml:math id="inf214"><mml:mi>k</mml:mi></mml:math></inline-formula> with log probability proportional to <inline-formula><mml:math id="inf215"><mml:mrow><mml:mrow><mml:mi>log</mml:mi><mml:mo>⁡</mml:mo><mml:msub><mml:mi>n</mml:mi><mml:mi>k</mml:mi></mml:msub></mml:mrow><mml:mo>+</mml:mo><mml:mrow><mml:mrow><mml:mi>log</mml:mi><mml:mo>⁡</mml:mo><mml:msub><mml:mi>p</mml:mi><mml:mi>X</mml:mi></mml:msub></mml:mrow><mml:mo>⁢</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:msub><mml:mi>X</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo lspace="2.5pt" rspace="2.5pt" stretchy="false">|</mml:mo><mml:msub><mml:mi>ϕ</mml:mi><mml:mi>k</mml:mi></mml:msub></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula>, where <italic>n</italic><sub><italic>k</italic></sub> is the number of jumps already assigned to state <inline-formula><mml:math id="inf216"><mml:mi>k</mml:mi></mml:math></inline-formula>.</p></list-item><list-item><p>If creating a new state, pick <italic>m</italic><sub>0</sub> values of <inline-formula><mml:math id="inf217"><mml:mi>ϕ</mml:mi></mml:math></inline-formula> from the interval <inline-formula><mml:math id="inf218"><mml:mrow><mml:mo>[</mml:mo><mml:msub><mml:mi>ϕ</mml:mi><mml:mtext>min</mml:mtext></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>ϕ</mml:mi><mml:mtext>max</mml:mtext></mml:msub><mml:mo>]</mml:mo></mml:mrow></mml:math></inline-formula>. Among these, accept a particular value <inline-formula><mml:math id="inf219"><mml:msup><mml:mi>ϕ</mml:mi><mml:mo>′</mml:mo></mml:msup></mml:math></inline-formula> with log probability proportional to <inline-formula><mml:math id="inf220"><mml:mrow><mml:mrow><mml:mi>log</mml:mi><mml:mo>⁡</mml:mo><mml:msub><mml:mi>p</mml:mi><mml:mi>X</mml:mi></mml:msub></mml:mrow><mml:mo>⁢</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:msub><mml:mi>X</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo lspace="2.5pt" rspace="2.5pt" stretchy="false">|</mml:mo><mml:msup><mml:mi>ϕ</mml:mi><mml:mo>′</mml:mo></mml:msup></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula>. Add a new state with this parameter to the set of current states <inline-formula><mml:math id="inf221"><mml:msup><mml:mi mathvariant="bold-italic">ϕ</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi>t</mml:mi><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msup></mml:math></inline-formula>.</p></list-item></list></list-item><list-item><p>For each state <inline-formula><mml:math id="inf222"><mml:mi>k</mml:mi></mml:math></inline-formula>, if there are no trajectories currently assigned to it, remove it from consideration. Otherwise add it to <inline-formula><mml:math id="inf223"><mml:msup><mml:mi mathvariant="bold-italic">ϕ</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>t</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msup></mml:math></inline-formula>, the next set of states, and update its parameter according to a Metropolis–Hastings step as follows:</p><list list-type="roman-lower"><list-item><p>Propose a new <inline-formula><mml:math id="inf224"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msup><mml:mi>ϕ</mml:mi><mml:mrow><mml:mi mathvariant="normal">′</mml:mi></mml:mrow></mml:msup><mml:mo>∼</mml:mo><mml:mrow><mml:mi mathvariant="script">N</mml:mi></mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msubsup><mml:mi>ϕ</mml:mi><mml:mrow><mml:mi>k</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>t</mml:mi><mml:mo>−</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msubsup><mml:mo>,</mml:mo><mml:msup><mml:mi>ν</mml:mi><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msup></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mstyle></mml:math></inline-formula> (resampling if <inline-formula><mml:math id="inf225"><mml:msup><mml:mi>ϕ</mml:mi><mml:mo>′</mml:mo></mml:msup></mml:math></inline-formula> is outside the range <inline-formula><mml:math id="inf226"><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:msub><mml:mi>ϕ</mml:mi><mml:mtext>min</mml:mtext></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>ϕ</mml:mi><mml:mtext>max</mml:mtext></mml:msub><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:math></inline-formula>).</p></list-item><list-item><p>Evaluate the likelihood ratio</p><list list-type="simple"><list-item><p><disp-formula id="equ28"><mml:math id="m28"><mml:mrow><mml:mi>r</mml:mi><mml:mo>=</mml:mo><mml:mfrac><mml:mrow><mml:munderover><mml:mo movablelimits="false">∏</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mi>N</mml:mi></mml:mrow></mml:munderover><mml:msub><mml:mi>p</mml:mi><mml:mrow><mml:mi>X</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mrow><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:msup><mml:mi>ϕ</mml:mi><mml:mrow><mml:mi mathvariant="normal">′</mml:mi></mml:mrow></mml:msup><mml:msup><mml:mo stretchy="false">)</mml:mo><mml:mrow><mml:msub><mml:mi>I</mml:mi><mml:mrow><mml:msub><mml:mi>Z</mml:mi><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mi>k</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msup></mml:mrow><mml:mrow><mml:munderover><mml:mo movablelimits="false">∏</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mi>N</mml:mi></mml:mrow></mml:munderover><mml:msub><mml:mi>p</mml:mi><mml:mrow><mml:mi>X</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mrow><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:msubsup><mml:mi>ϕ</mml:mi><mml:mrow><mml:mi>k</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>t</mml:mi><mml:mo>−</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msubsup><mml:msup><mml:mo stretchy="false">)</mml:mo><mml:mrow><mml:msub><mml:mi>I</mml:mi><mml:mrow><mml:msub><mml:mi>Z</mml:mi><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mi>k</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msup></mml:mrow></mml:mfrac><mml:mfrac><mml:mrow><mml:mi mathvariant="normal">Φ</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mfrac><mml:mrow><mml:msub><mml:mi>ϕ</mml:mi><mml:mrow><mml:mtext>max</mml:mtext></mml:mrow></mml:msub><mml:mo>−</mml:mo><mml:msubsup><mml:mi>ϕ</mml:mi><mml:mrow><mml:mi>k</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>t</mml:mi><mml:mo>−</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msubsup></mml:mrow><mml:mi>ν</mml:mi></mml:mfrac><mml:mo>)</mml:mo></mml:mrow><mml:mo>−</mml:mo><mml:mi mathvariant="normal">Φ</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mfrac><mml:mrow><mml:msub><mml:mi>ϕ</mml:mi><mml:mrow><mml:mtext>min</mml:mtext></mml:mrow></mml:msub><mml:mo>−</mml:mo><mml:msubsup><mml:mi>ϕ</mml:mi><mml:mrow><mml:mi>k</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>t</mml:mi><mml:mo>−</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msubsup></mml:mrow><mml:mi>ν</mml:mi></mml:mfrac><mml:mo>)</mml:mo></mml:mrow></mml:mrow><mml:mrow><mml:mi mathvariant="normal">Φ</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mfrac><mml:mrow><mml:msub><mml:mi>ϕ</mml:mi><mml:mrow><mml:mtext>max</mml:mtext></mml:mrow></mml:msub><mml:mo>−</mml:mo><mml:msup><mml:mi>ϕ</mml:mi><mml:mrow><mml:mi mathvariant="normal">′</mml:mi></mml:mrow></mml:msup></mml:mrow><mml:mi>ν</mml:mi></mml:mfrac><mml:mo>)</mml:mo></mml:mrow><mml:mo>−</mml:mo><mml:mi mathvariant="normal">Φ</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mfrac><mml:mrow><mml:msub><mml:mi>ϕ</mml:mi><mml:mrow><mml:mtext>min</mml:mtext></mml:mrow></mml:msub><mml:mo>−</mml:mo><mml:msup><mml:mi>ϕ</mml:mi><mml:mrow><mml:mi mathvariant="normal">′</mml:mi></mml:mrow></mml:msup></mml:mrow><mml:mi>ν</mml:mi></mml:mfrac><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mfrac></mml:mrow></mml:math></disp-formula></p></list-item></list></list-item><list-item><p>Draw <inline-formula><mml:math id="inf227"><mml:mrow><mml:mi>u</mml:mi><mml:mo>∼</mml:mo><mml:mrow><mml:mtext>Uniform</mml:mtext><mml:mo>⁢</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mn>0</mml:mn><mml:mo>,</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula>. If <inline-formula><mml:math id="inf228"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mi>r</mml:mi><mml:mo>&lt;</mml:mo><mml:mi>u</mml:mi></mml:mrow></mml:mstyle></mml:math></inline-formula>, set <inline-formula><mml:math id="inf229"><mml:mrow><mml:msubsup><mml:mi>ϕ</mml:mi><mml:mi>k</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>t</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msubsup><mml:mo>=</mml:mo><mml:msup><mml:mi>ϕ</mml:mi><mml:mo>′</mml:mo></mml:msup></mml:mrow></mml:math></inline-formula>. Otherwise set <inline-formula><mml:math id="inf230"><mml:mrow><mml:msubsup><mml:mi>ϕ</mml:mi><mml:mi>k</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>t</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msubsup><mml:mo>=</mml:mo><mml:msubsup><mml:mi>ϕ</mml:mi><mml:mi>k</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi>t</mml:mi><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msubsup></mml:mrow></mml:math></inline-formula>.</p></list-item></list></list-item></list></list-item><list-item><p>The posterior mean can be estimated by making a histogram of the samples <inline-formula><mml:math id="inf231"><mml:msup><mml:mi mathvariant="bold-italic">ϕ</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>t</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msup></mml:math></inline-formula> weighted by their occupations <inline-formula><mml:math id="inf232"><mml:msup><mml:mi mathvariant="bold-italic">n</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>t</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msup></mml:math></inline-formula>, where <inline-formula><mml:math id="inf233"><mml:msubsup><mml:mi>n</mml:mi><mml:mi>k</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>t</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msubsup></mml:math></inline-formula> is the number of jumps assigned to the state with parameter <inline-formula><mml:math id="inf234"><mml:msubsup><mml:mi>ϕ</mml:mi><mml:mi>k</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>t</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msubsup></mml:math></inline-formula> at iteration <inline-formula><mml:math id="inf235"><mml:mi>t</mml:mi></mml:math></inline-formula>.</p></list-item><list-item><p>Finally, we account for defocalization as discussed in ‘Defocalization.’</p></list-item></list><p>In this algorithm, <inline-formula><mml:math id="inf236"><mml:mrow><mml:mi mathvariant="normal">Φ</mml:mi><mml:mo>⁢</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>x</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula> is the unit Gaussian CDF and its contribution to <inline-formula><mml:math id="inf237"><mml:mi>r</mml:mi></mml:math></inline-formula> is required to make an unbiased proposal distribution for the Metropolis–Hastings updates given that <inline-formula><mml:math id="inf238"><mml:mi>ϕ</mml:mi></mml:math></inline-formula> is confined to the range <inline-formula><mml:math id="inf239"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:msub><mml:mi>ϕ</mml:mi><mml:mrow><mml:mtext>min</mml:mtext></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>ϕ</mml:mi><mml:mrow><mml:mtext>max</mml:mtext></mml:mrow></mml:msub><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:mstyle></mml:math></inline-formula>. <inline-formula><mml:math id="inf240"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msub><mml:mi>I</mml:mi><mml:mrow><mml:msub><mml:mi>Z</mml:mi><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mi>k</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mstyle></mml:math></inline-formula> is the indicator function and is 1 if <inline-formula><mml:math id="inf241"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msub><mml:mi>Z</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mi>k</mml:mi></mml:mrow></mml:mstyle></mml:math></inline-formula> and 0 otherwise.</p><p>While the gamma approximation 19 is what makes DPMMs computationally scalable, it also means that in order to disambiguate the contributions of diffusion and localization error to <inline-formula><mml:math id="inf242"><mml:mi>ϕ</mml:mi></mml:math></inline-formula> we need to measure localization error by a different method. This is particularly relevant when accounting for defocalization, which relies on knowledge of <inline-formula><mml:math id="inf243"><mml:mi>D</mml:mi></mml:math></inline-formula> independent of <inline-formula><mml:math id="inf244"><mml:msubsup><mml:mi>σ</mml:mi><mml:mtext>loc</mml:mtext><mml:mn>2</mml:mn></mml:msubsup></mml:math></inline-formula>. In this article, we always use the mean negative covariance between sequential jumps to estimate localization error prior to launching the Gibbs sampler above. However, this means that the DPMM is only as good as our estimate of <inline-formula><mml:math id="inf245"><mml:msubsup><mml:mi>σ</mml:mi><mml:mtext>loc</mml:mtext><mml:mn>2</mml:mn></mml:msubsup></mml:math></inline-formula> – and as demonstrated in <xref ref-type="fig" rid="fig3">Figure 3</xref> and <xref ref-type="fig" rid="fig3s1">Figure 3—figure supplement 1</xref>, our estimate of <inline-formula><mml:math id="inf246"><mml:msubsup><mml:mi>σ</mml:mi><mml:mtext>loc</mml:mtext><mml:mn>2</mml:mn></mml:msubsup></mml:math></inline-formula> can be quite noisy with small numbers of trajectories and starts to fail completely when localization error varies a lot between states. SAs, although they require discretizing the parameter space, handle the problem of localization error in a more graceful manner than DPMMs.</p></sec><sec id="s4-20"><title>Accounting for defocalization</title><p>We use ‘defocalization’ to refer to the axial movement of fluorescent emitters out of the microscope’s focus during an sptPALM acquisition. Because fluorescent emitters move quickly, defocalization is rapid and often limits trajectory length to a few frames. Due to defocalization, the probability to observe a jump from a fast-moving particle is less than that of a slow-moving particle because the jumps of a fast-moving particle are more likely to land outside the microscope’s focus.</p><p>Defocalization was considered as an experimental avenue to measure diffusion by <xref ref-type="bibr" rid="bib42">Kues and Kubitscheck, 2002</xref>. In the jump histogram modeling frameworks of <xref ref-type="bibr" rid="bib54">Mazza et al., 2012</xref> and <xref ref-type="bibr" rid="bib28">Hansen et al., 2018</xref>, who investigated the effect in detail, it appears as a correction term. The latter two sets of authors evaluated the defocalization probability by treating the microscope’s focal volume as a slab with absorbing boundaries and using the solution to the diffusion equation within these boundaries. Because the boundaries for the focal volume are not actually absorbing, both sets of authors then applied a correction term derived from Monte Carlo simulations of regular Brownian motion to ‘correct’ their correction.</p><p>Here, we provide a simpler alternative that is not based on Monte Carlo simulations, enables nonuniform probabilities of detection in the axial detection, and extends to a broader class of diffusion processes than regular Brownian motion. Although the framework can be extended to tracking with gaps, here we consider the case without gaps in tracking (all jumps are strictly between sequential frames).</p><p>Let <inline-formula><mml:math id="inf247"><mml:mrow><mml:mi>f</mml:mi><mml:mo>⁢</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mrow><mml:mi>z</mml:mi><mml:mo>,</mml:mo><mml:mi>t</mml:mi></mml:mrow><mml:mo>=</mml:mo><mml:mn>0</mml:mn></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula> be the initial profile of particles in the axial direction of the microscope, and let <inline-formula><mml:math id="inf248"><mml:mrow><mml:mi>g</mml:mi><mml:mo>⁢</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>z</mml:mi><mml:mo>,</mml:mo><mml:mrow><mml:mi mathvariant="normal">Δ</mml:mi><mml:mo>⁢</mml:mo><mml:mi>t</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula> be the Green’s function for the diffusion process at this frame interval. For regular Brownian motion, <inline-formula><mml:math id="inf249"><mml:mrow><mml:mrow><mml:mi>g</mml:mi><mml:mo>⁢</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>z</mml:mi><mml:mo>,</mml:mo><mml:mrow><mml:mi mathvariant="normal">Δ</mml:mi><mml:mo>⁢</mml:mo><mml:mi>t</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow><mml:mo>=</mml:mo><mml:mrow><mml:msup><mml:mi>e</mml:mi><mml:mrow><mml:mo>-</mml:mo><mml:mrow><mml:mrow><mml:msup><mml:mi>z</mml:mi><mml:mn>2</mml:mn></mml:msup><mml:mo>/</mml:mo><mml:mn>4</mml:mn></mml:mrow><mml:mo>⁢</mml:mo><mml:mi>D</mml:mi><mml:mo>⁢</mml:mo><mml:mi mathvariant="normal">Δ</mml:mi><mml:mo>⁢</mml:mo><mml:mi>t</mml:mi></mml:mrow></mml:mrow></mml:msup><mml:mo>/</mml:mo><mml:msqrt><mml:mrow><mml:mn>4</mml:mn><mml:mo>⁢</mml:mo><mml:mi>π</mml:mi><mml:mo>⁢</mml:mo><mml:mi>D</mml:mi><mml:mo>⁢</mml:mo><mml:mi mathvariant="normal">Δ</mml:mi><mml:mo>⁢</mml:mo><mml:mi>t</mml:mi></mml:mrow></mml:msqrt></mml:mrow></mml:mrow></mml:math></inline-formula>. Then the axial probability density for the particle after one frame interval can be obtained by convolving its initial profile with the Green’s function:<disp-formula id="equ29"> <mml:math id="m29"><mml:mrow><mml:mtext>axial profile after 1 frame interval</mml:mtext><mml:mo>=</mml:mo><mml:mrow><mml:mrow><mml:mrow><mml:mi>f</mml:mi><mml:mo>⁢</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>z</mml:mi><mml:mo>,</mml:mo><mml:mn>0</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow><mml:mo>∗</mml:mo><mml:mi>g</mml:mi></mml:mrow><mml:mo>⁢</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>z</mml:mi><mml:mo>,</mml:mo><mml:mrow><mml:mi mathvariant="normal">Δ</mml:mi><mml:mo>⁢</mml:mo><mml:mi>t</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:math></disp-formula></p><p>To account for defocalization, we multiply this density with an appropriate transmission function. For example, if our focal volume is a slab with depth <inline-formula><mml:math id="inf250"><mml:mrow><mml:mi mathvariant="normal">Δ</mml:mi><mml:mo>⁢</mml:mo><mml:mi>z</mml:mi></mml:mrow></mml:math></inline-formula>, infinite XY extent, and perfect recall at any point inside the slab (i.e., all particles inside the slab are detected and no particles outside are detected), then our transmission function <inline-formula><mml:math id="inf251"><mml:mi>T</mml:mi></mml:math></inline-formula> is<disp-formula id="equ30"><mml:math id="m30"><mml:mrow><mml:mi>T</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>z</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mrow><mml:mo>{</mml:mo><mml:mtable columnalign="left left" rowspacing=".2em" columnspacing="1em" displaystyle="false"><mml:mtr><mml:mtd><mml:mn>1</mml:mn><mml:mspace width="2em"/></mml:mtd><mml:mtd><mml:mtext>if </mml:mtext><mml:mi>z</mml:mi><mml:mo>∈</mml:mo><mml:mrow><mml:mo>[</mml:mo><mml:mrow><mml:mo>−</mml:mo><mml:mfrac><mml:mrow><mml:mi mathvariant="normal">Δ</mml:mi><mml:mi>z</mml:mi></mml:mrow><mml:mn>2</mml:mn></mml:mfrac><mml:mo>,</mml:mo><mml:mfrac><mml:mrow><mml:mi mathvariant="normal">Δ</mml:mi><mml:mi>z</mml:mi></mml:mrow><mml:mn>2</mml:mn></mml:mfrac></mml:mrow><mml:mo>]</mml:mo></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mn>0</mml:mn><mml:mspace width="2em"/></mml:mtd><mml:mtd><mml:mtext>otherwise</mml:mtext></mml:mtd></mml:mtr></mml:mtable><mml:mo fence="true" stretchy="true" symmetric="true"/></mml:mrow></mml:mrow></mml:math></disp-formula></p><p>(This is the transmission function considered by <xref ref-type="bibr" rid="bib54">Mazza et al., 2012</xref> and <xref ref-type="bibr" rid="bib28">Hansen et al., 2018</xref>.) The resulting axial profile is<disp-formula id="equ31"><mml:math id="m31"><mml:mrow><mml:mrow><mml:mi>f</mml:mi><mml:mo>⁢</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>z</mml:mi><mml:mo>,</mml:mo><mml:mrow><mml:mi mathvariant="normal">Δ</mml:mi><mml:mo>⁢</mml:mo><mml:mi>t</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow><mml:mo>=</mml:mo><mml:mrow><mml:mi>T</mml:mi><mml:mo>⁢</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>z</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>⁢</mml:mo><mml:mrow><mml:mo>[</mml:mo><mml:mrow><mml:mrow><mml:mrow><mml:mi>f</mml:mi><mml:mo>⁢</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>z</mml:mi><mml:mo>,</mml:mo><mml:mn>0</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow><mml:mo>∗</mml:mo><mml:mi>g</mml:mi></mml:mrow><mml:mo>⁢</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>z</mml:mi><mml:mo>,</mml:mo><mml:mrow><mml:mi mathvariant="normal">Δ</mml:mi><mml:mo>⁢</mml:mo><mml:mi>t</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow><mml:mo>]</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:math></disp-formula></p><p>To calculate the axial profile after <inline-formula><mml:math id="inf252"><mml:mi>n</mml:mi></mml:math></inline-formula> frame intervals, we repeat this process iteratively:<disp-formula id="equ32"><mml:math id="m32"><mml:mrow><mml:mrow><mml:mi>f</mml:mi><mml:mo>⁢</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>z</mml:mi><mml:mo>,</mml:mo><mml:mrow><mml:mi>n</mml:mi><mml:mo>⁢</mml:mo><mml:mi mathvariant="normal">Δ</mml:mi><mml:mo>⁢</mml:mo><mml:mi>t</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow><mml:mo>=</mml:mo><mml:mrow><mml:msup><mml:mtext>Diffuse</mml:mtext><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>n</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msup><mml:mo>⁢</mml:mo><mml:mrow><mml:mo>[</mml:mo><mml:mrow><mml:mi>f</mml:mi><mml:mo>⁢</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>z</mml:mi><mml:mo>,</mml:mo><mml:mn>0</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow><mml:mo>]</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:math></disp-formula></p><p>where <inline-formula><mml:math id="inf253"><mml:msup><mml:mtext>Diffuse</mml:mtext><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>n</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msup></mml:math></inline-formula> denotes <inline-formula><mml:math id="inf254"><mml:mi>n</mml:mi></mml:math></inline-formula> sequential applications of the function<disp-formula id="equ33"><mml:math id="m33"><mml:mrow><mml:mrow><mml:mtext>Diffuse</mml:mtext><mml:mo>⁢</mml:mo><mml:mrow><mml:mo>[</mml:mo><mml:mrow><mml:mi>f</mml:mi><mml:mo>⁢</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>z</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow><mml:mo>]</mml:mo></mml:mrow></mml:mrow><mml:mo>=</mml:mo><mml:mrow><mml:mi>T</mml:mi><mml:mo>⁢</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>z</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>⁢</mml:mo><mml:mrow><mml:mo>[</mml:mo><mml:mrow><mml:mrow><mml:mrow><mml:mi>f</mml:mi><mml:mo>⁢</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>z</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow><mml:mo>∗</mml:mo><mml:mi>g</mml:mi></mml:mrow><mml:mo>⁢</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>z</mml:mi><mml:mo>,</mml:mo><mml:mrow><mml:mi mathvariant="normal">Δ</mml:mi><mml:mo>⁢</mml:mo><mml:mi>t</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow><mml:mo>]</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:math></disp-formula></p><p>This scheme is illustrated in <xref ref-type="fig" rid="fig3s2">Figure 3—figure supplement 2A</xref>. The fraction of particles remaining in focus after <inline-formula><mml:math id="inf255"><mml:mi>n</mml:mi></mml:math></inline-formula> frame intervals can be found by integrating this density:<disp-formula id="equ34"><mml:math id="m34"><mml:mrow><mml:mrow><mml:mtext>fraction defocalized after </mml:mtext><mml:mrow><mml:mi>n</mml:mi></mml:mrow><mml:mtext> frames</mml:mtext></mml:mrow><mml:mo>=</mml:mo><mml:munderover><mml:mo>∫</mml:mo><mml:mrow><mml:mo>−</mml:mo><mml:mi mathvariant="normal">∞</mml:mi></mml:mrow><mml:mrow><mml:mo>+</mml:mo><mml:mi mathvariant="normal">∞</mml:mi></mml:mrow></mml:munderover><mml:msup><mml:mtext>Diffuse</mml:mtext><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>n</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msup><mml:mrow><mml:mo>[</mml:mo><mml:mrow><mml:mi>f</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>z</mml:mi><mml:mo>,</mml:mo><mml:mn>0</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>]</mml:mo></mml:mrow><mml:mtext>d</mml:mtext><mml:mi>z</mml:mi></mml:mrow></mml:math></disp-formula></p><p>In the SA and DPMM algorithms, we use this method to account for defocalization in the following way. Suppose that <inline-formula><mml:math id="inf256"><mml:msub><mml:mi>τ</mml:mi><mml:mi>k</mml:mi></mml:msub></mml:math></inline-formula> is the estimated occupation and <inline-formula><mml:math id="inf257"><mml:msub><mml:mi>D</mml:mi><mml:mi>k</mml:mi></mml:msub></mml:math></inline-formula> is the estimated diffusion coefficient for state <inline-formula><mml:math id="inf258"><mml:mi>k</mml:mi></mml:math></inline-formula>. Then, we define the corrected state occupations <inline-formula><mml:math id="inf259"><mml:msup><mml:mi mathvariant="bold-italic">τ</mml:mi><mml:mo>′</mml:mo></mml:msup></mml:math></inline-formula> such that<disp-formula id="equ35"><label>(20)</label><mml:math id="m35"><mml:mrow><mml:mtable rowspacing="4pt" columnspacing="1em"><mml:mtr><mml:mtd><mml:msubsup><mml:mi>τ</mml:mi><mml:mi>k</mml:mi><mml:mrow><mml:mo>′</mml:mo></mml:mrow></mml:msubsup><mml:mo>=</mml:mo><mml:mfrac><mml:mrow><mml:msub><mml:mi>τ</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:mrow><mml:mo>/</mml:mo></mml:mrow><mml:msub><mml:mi>η</mml:mi><mml:mi>k</mml:mi></mml:msub></mml:mrow><mml:mrow><mml:munderover><mml:mo movablelimits="false">∑</mml:mo><mml:mrow><mml:mi>j</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mi>k</mml:mi></mml:mrow></mml:munderover><mml:mrow><mml:msub><mml:mi>τ</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mrow><mml:mo>/</mml:mo></mml:mrow><mml:msub><mml:mi>η</mml:mi><mml:mi>j</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:mfrac></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:msub><mml:mi>η</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:msubsup><mml:mo>∫</mml:mo><mml:mrow><mml:mo>−</mml:mo><mml:mi mathvariant="normal">∞</mml:mi></mml:mrow><mml:mrow><mml:mo>+</mml:mo><mml:mi mathvariant="normal">∞</mml:mi></mml:mrow></mml:msubsup><mml:mrow><mml:mrow><mml:msup><mml:mrow><mml:mi mathvariant="normal">D</mml:mi><mml:mi mathvariant="normal">i</mml:mi><mml:mi mathvariant="normal">f</mml:mi><mml:mi mathvariant="normal">f</mml:mi><mml:mi mathvariant="normal">u</mml:mi><mml:mi mathvariant="normal">s</mml:mi><mml:mi mathvariant="normal">e</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msup><mml:mo stretchy="false">[</mml:mo><mml:mi mathvariant="normal">f</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msup><mml:mi mathvariant="normal">z</mml:mi><mml:mrow><mml:mo>′</mml:mo></mml:mrow></mml:msup><mml:mo>,</mml:mo><mml:mn>0</mml:mn><mml:mo stretchy="false">)</mml:mo><mml:mo stretchy="false">]</mml:mo><mml:mspace width="thinmathspace"/><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="normal">z</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mspace width="thinmathspace"/><mml:mi mathvariant="normal">d</mml:mi><mml:mi mathvariant="normal">z</mml:mi></mml:mrow></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math></disp-formula></p><p>where <inline-formula><mml:math id="inf260"><mml:msub><mml:mi>η</mml:mi><mml:mi>k</mml:mi></mml:msub></mml:math></inline-formula> is the probability for a Brownian motion to remain in focus after one frame interval and <inline-formula><mml:math id="inf261"><mml:mrow><mml:mi mathvariant="normal">Δ</mml:mi><mml:mo>⁢</mml:mo><mml:mi>z</mml:mi></mml:mrow></mml:math></inline-formula> is the focal depth. While defocalization can be incorporated explicitly into the models for SAs or DPMMs, in practice we find it makes little difference if it used as a final postprocessing step after inferring the posterior mean occupations.</p><p>To determine the focal depth <inline-formula><mml:math id="inf262"><mml:mrow><mml:mi mathvariant="normal">Δ</mml:mi><mml:mo>⁢</mml:mo><mml:mi>z</mml:mi></mml:mrow></mml:math></inline-formula>, we used the method described in <xref ref-type="bibr" rid="bib27">Hansen et al., 2017</xref>.</p></sec><sec id="s4-21"><title>Method availability</title><p>We have implemented SAs as a simple tool (<ext-link ext-link-type="uri" xlink:href="https://github.com/alecheckert/saspt">https://github.com/alecheckert/saspt</ext-link>, <xref ref-type="bibr" rid="bib33">Heckert, 2022c</xref>), available on the Python Package Index (PyPI) as <ext-link ext-link-type="uri" xlink:href="https://pypi.org/project/saspt/">https://pypi.org/project/saspt/</ext-link>. Documentation is also available at <ext-link ext-link-type="uri" xlink:href="https://saspt.readthedocs.io/en/latest/">https://saspt.readthedocs.io/en/latest/</ext-link>.</p><p>DPMMs for SPT analysis have a publicly accessible implementation at <ext-link ext-link-type="uri" xlink:href="https://github.com/alecheckert/dpsp">https://github.com/alecheckert/dpsp</ext-link>, (copy archived at <ext-link ext-link-type="uri" xlink:href="https://archive.softwareheritage.org/swh:1:dir:8de617b63fc4e10fecb4ec52f240c30a25e5537a;origin=https://github.com/alecheckert/dpsp;visit=swh:1:snp:f6df8046e3c87b8358e02495d77be5b5be1c7bb6;anchor=swh:1:rev:2f5196e4cae5943a5822be7c4493df50cd564a0c">swh:1:rev:2f5196e4cae5943a5822be7c4493df50cd564a0c</ext-link>, <xref ref-type="bibr" rid="bib31">Heckert, 2022a</xref>). As a result of the investigation in this article, we recommend that researchers looking to try these methods start with SAs due to their superior performance.</p></sec></sec></body><back><sec sec-type="additional-information" id="s5"><title>Additional information</title><fn-group content-type="competing-interest"><title>Competing interests</title><fn fn-type="COI-statement" id="conf1"><p>No competing interests declared</p></fn><fn fn-type="COI-statement" id="conf2"><p>No competing interests declared</p></fn></fn-group><fn-group content-type="author-contribution"><title>Author contributions</title><fn fn-type="con" id="con1"><p>Conceptualization, Software, Formal analysis, Investigation, Visualization, Methodology, Writing – original draft, Writing – review and editing</p></fn><fn fn-type="con" id="con2"><p>Validation, Investigation</p></fn><fn fn-type="con" id="con3"><p>Resources, Funding acquisition</p></fn><fn fn-type="con" id="con4"><p>Resources, Funding acquisition, Writing – review and editing</p></fn></fn-group></sec><sec sec-type="supplementary-material" id="s6"><title>Additional files</title><supplementary-material id="supp1"><label>Supplementary file 1.</label><caption><title>List of primers used in this article.</title></caption><media xlink:href="elife-70169-supp1-v1.csv" mimetype="application" mime-subtype="octet-stream"/></supplementary-material><supplementary-material id="supp2"><label>Supplementary file 2.</label><caption><title>List of plasmids used in this article.</title></caption><media xlink:href="elife-70169-supp2-v1.csv" mimetype="application" mime-subtype="octet-stream"/></supplementary-material><supplementary-material id="supp3"><label>Supplementary file 3.</label><caption><title>List of Cas9 guide sequences used in this article.</title></caption><media xlink:href="elife-70169-supp3-v1.csv" mimetype="application" mime-subtype="octet-stream"/></supplementary-material><supplementary-material id="transrepform"><label>Transparent reporting form</label><media xlink:href="elife-70169-transrepform1-v1.docx" mimetype="application" mime-subtype="docx"/></supplementary-material></sec><sec sec-type="data-availability" id="s7"><title>Data availability</title><p>The state array (SA) method is publicly available as the pip-installable package saspt (<ext-link ext-link-type="uri" xlink:href="https://github.com/alecheckert/saspt">https://github.com/alecheckert/saspt</ext-link>, copy archived at <ext-link ext-link-type="uri" xlink:href="https://archive.softwareheritage.org/swh:1:dir:cb385da805ca90ea88326766a7a0fc780d716052;origin=https://github.com/alecheckert/saspt;visit=swh:1:snp:6edbbb72218b476a4481b77a18959dd8d6cff012;anchor=swh:1:rev:773292fc245c01ceb8e1f7a7e50b475aa003f00c">swh:1:rev:773292fc245c01ceb8e1f7a7e50b475aa003f00c</ext-link>). The code to generate optical/dynamic simulations in this paper is publicly available as the GitHub repository sptPALMsim (<ext-link ext-link-type="uri" xlink:href="https://github.com/alecheckert/sptpalmsim">https://github.com/alecheckert/sptpalmsim</ext-link>, copy archived at <ext-link ext-link-type="uri" xlink:href="https://archive.softwareheritage.org/swh:1:dir:a1cd724976550c9dbe2b78a610e3525eab801056;origin=https://github.com/alecheckert/sptPALMsim;visit=swh:1:snp:76da6b68be5120060eec63d90970ed8ab024f173;anchor=swh:1:rev:a72f7fff6329813620354d1209d52c654c31f3fc">swh:1:rev:a72f7fff6329813620354d1209d52c654c31f3fc</ext-link>). The DPMM model has a publicly available implementation at <ext-link ext-link-type="uri" xlink:href="https://github.com/alecheckert/dpsp">https://github.com/alecheckert/dpsp</ext-link>, (copy archived at <ext-link ext-link-type="uri" xlink:href="https://archive.softwareheritage.org/swh:1:dir:8de617b63fc4e10fecb4ec52f240c30a25e5537a;origin=https://github.com/alecheckert/dpsp;visit=swh:1:snp:f6df8046e3c87b8358e02495d77be5b5be1c7bb6;anchor=swh:1:rev:2f5196e4cae5943a5822be7c4493df50cd564a0c">swh:1:rev:2f5196e4cae5943a5822be7c4493df50cd564a0c</ext-link>). All trajectories from SPT experiments used in this paper have been made available as a Dryad dataset (<ext-link ext-link-type="uri" xlink:href="https://doi.org/10.6078/D13H6N">https://doi.org/10.6078/D13H6N</ext-link>). Code used to generate SPT simulations has been organized as a publicly available GitHub repository (<ext-link ext-link-type="uri" xlink:href="https://github.com/alecheckert/strobesim">https://github.com/alecheckert/strobesim</ext-link>, copy archived at <ext-link ext-link-type="uri" xlink:href="https://archive.softwareheritage.org/swh:1:dir:ba724605fe0e76c539947e7ef7fede26bb018bcd;origin=https://github.com/alecheckert/strobesim;visit=swh:1:snp:19fa27b1b1547f312735bb1aed0fb170b7c8351a;anchor=swh:1:rev:ae3bdbf7ccd9740a249a30d9f20deab8ccceb448">swh:1:rev:ae3bdbf7ccd9740a249a30d9f20deab8ccceb448</ext-link>). Code used to create trajectories from spaSPT movies by detecting and tracking fluorescent emitters, along with a graphic user interface (GUI) for quality control, has been publicly available as a GitHub repository (<ext-link ext-link-type="uri" xlink:href="https://github.com/alecheckert/quot">https://github.com/alecheckert/quot</ext-link>, copy archived at <ext-link ext-link-type="uri" xlink:href="https://archive.softwareheritage.org/swh:1:dir:08ea47f009f96e3adb116e5a9841c93753d15d34;origin=https://github.com/alecheckert/quot;visit=swh:1:snp:eaa0b998f6b0d3774db4cfe5a8a8429e0b748dad;anchor=swh:1:rev:1adf7a0574c62f38140f1dec2d14555bfc03b9a7">swh:1:rev:1adf7a0574c62f38140f1dec2d14555bfc03b9a7</ext-link>). Raw gel images are provided as source data for this manuscript.</p><p>The following dataset was generated:</p><p><element-citation publication-type="data" specific-use="isSupplementedBy" id="dataset1"><person-group person-group-type="author"><name><surname>Heckert</surname><given-names>A</given-names></name><name><surname>Dahal</surname><given-names>L</given-names></name><name><surname>Tjian</surname><given-names>R</given-names></name><name><surname>Darzacq</surname><given-names>X</given-names></name></person-group><year iso-8601-date="2021">2021</year><data-title>Dataset from: Recovering mixtures of fast diffusing states from short single particle trajectories</data-title><source>Dryad Digital Repository</source><pub-id pub-id-type="doi">10.6078/D13H6N</pub-id></element-citation></p></sec><ack id="ack"><title>Acknowledgements</title><p>We thank Luke Lavis for generously synthesizing the Janelia Fluor dyes used in these experiments, Thomas Graham for his creative suggestions about the defocalization problem, Ana Robles for the monumental task of keeping our SPT microscopes in working order, and Anders Hansen and Maxime Woringer for insights and advice at the outset of the project. Claudia Cattoglio provided indispensable advice on Western blots. Portions of this work were performed on shared instrumentation at the UC Berkeley Cancer Research Laboratory Molecular Imaging Center (MIC), supported by The Gordon and Betty Moore Foundation. We thank MIC gurus Holly Aaron and Feather Ives for their assistance with shared microscopes. Sanger sequencing was performed at the UC Berkeley DNA Sequencing Facility. This work was supported by NIH grant 1U54CA231641 (XD) and the Howard Hughes Medical Institute (CC34430, RT). AH was supported by the NIH Stem Cell Biological Engineering predoctoral fellowship T32 GM098218. We would like to thank David Schaffer for his support and feedback throughout the project as a program director for the T32 fellowship.</p></ack><ref-list><title>References</title><ref id="bib1"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Abrahamsson</surname><given-names>S</given-names></name><name><surname>Chen</surname><given-names>J</given-names></name><name><surname>Hajj</surname><given-names>B</given-names></name><name><surname>Stallinga</surname><given-names>S</given-names></name><name><surname>Katsov</surname><given-names>AY</given-names></name><name><surname>Wisniewski</surname><given-names>J</given-names></name><name><surname>Mizuguchi</surname><given-names>G</given-names></name><name><surname>Soule</surname><given-names>P</given-names></name><name><surname>Mueller</surname><given-names>F</given-names></name><name><surname>Dugast Darzacq</surname><given-names>C</given-names></name><name><surname>Darzacq</surname><given-names>X</given-names></name><name><surname>Wu</surname><given-names>C</given-names></name><name><surname>Bargmann</surname><given-names>CI</given-names></name><name><surname>Agard</surname><given-names>DA</given-names></name><name><surname>Dahan</surname><given-names>M</given-names></name><name><surname>Gustafsson</surname><given-names>MGL</given-names></name></person-group><year iso-8601-date="2013">2013</year><article-title>Fast multicolor 3d imaging using aberration-corrected multifocus microscopy</article-title><source>Nature Methods</source><volume>10</volume><fpage>60</fpage><lpage>63</lpage><pub-id pub-id-type="doi">10.1038/nmeth.2277</pub-id><pub-id pub-id-type="pmid">23223154</pub-id></element-citation></ref><ref id="bib2"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Ando</surname><given-names>R</given-names></name><name><surname>Hama</surname><given-names>H</given-names></name><name><surname>Yamamoto-Hino</surname><given-names>M</given-names></name><name><surname>Mizuno</surname><given-names>H</given-names></name><name><surname>Miyawaki</surname><given-names>A</given-names></name></person-group><year iso-8601-date="2002">2002</year><article-title>An optical marker based on the uv-induced green-to-red photoconversion of a fluorescent protein</article-title><source>PNAS</source><volume>99</volume><fpage>12651</fpage><lpage>12656</lpage><pub-id pub-id-type="doi">10.1073/pnas.202320599</pub-id><pub-id pub-id-type="pmid">12271129</pub-id></element-citation></ref><ref id="bib3"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Andrieu</surname><given-names>C</given-names></name><name><surname>de Freitas</surname><given-names>N</given-names></name><name><surname>Doucet</surname><given-names>A</given-names></name><name><surname>Jordan</surname><given-names>MI</given-names></name></person-group><year iso-8601-date="2003">2003</year><article-title>An introduction to mcmc for machine learning</article-title><source>Machine Learning</source><volume>50</volume><fpage>5</fpage><lpage>43</lpage><pub-id pub-id-type="doi">10.1023/A:1020281327116</pub-id></element-citation></ref><ref id="bib4"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Barak</surname><given-names>LS</given-names></name><name><surname>Webb</surname><given-names>WW</given-names></name></person-group><year iso-8601-date="1982">1982</year><article-title>Diffusion of low density lipoprotein-receptor complex on human fibroblasts</article-title><source>The Journal of Cell Biology</source><volume>95</volume><fpage>846</fpage><lpage>852</lpage><pub-id pub-id-type="doi">10.1083/jcb.95.3.846</pub-id><pub-id pub-id-type="pmid">6296157</pub-id></element-citation></ref><ref id="bib5"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Berglund</surname><given-names>AJ</given-names></name></person-group><year iso-8601-date="2010">2010</year><article-title>Statistics of camera-based single-particle tracking</article-title><source>Physical Review. E, Statistical, Nonlinear, and Soft Matter Physics</source><volume>82</volume><elocation-id>011917</elocation-id><pub-id pub-id-type="doi">10.1103/PhysRevE.82.011917</pub-id><pub-id pub-id-type="pmid">20866658</pub-id></element-citation></ref><ref id="bib6"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Betzig</surname><given-names>E</given-names></name><name><surname>Patterson</surname><given-names>GH</given-names></name><name><surname>Sougrat</surname><given-names>R</given-names></name><name><surname>Lindwasser</surname><given-names>OW</given-names></name><name><surname>Olenych</surname><given-names>S</given-names></name><name><surname>Bonifacino</surname><given-names>JS</given-names></name><name><surname>Davidson</surname><given-names>MW</given-names></name><name><surname>Lippincott-Schwartz</surname><given-names>J</given-names></name><name><surname>Hess</surname><given-names>HF</given-names></name></person-group><year iso-8601-date="2006">2006</year><article-title>Imaging intracellular fluorescent proteins at nanometer resolution</article-title><source>Science</source><volume>313</volume><fpage>1642</fpage><lpage>1645</lpage><pub-id pub-id-type="doi">10.1126/science.1127344</pub-id><pub-id pub-id-type="pmid">16902090</pub-id></element-citation></ref><ref id="bib7"><element-citation publication-type="book"><person-group person-group-type="author"><name><surname>Bishop</surname><given-names>CM</given-names></name></person-group><year iso-8601-date="2006">2006</year><source>Pattern Recognition and Machine Learning</source><publisher-name>Springer</publisher-name></element-citation></ref><ref id="bib8"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Blackwell</surname><given-names>D</given-names></name></person-group><year iso-8601-date="1973">1973</year><article-title>Discreteness of ferguson selections</article-title><source>The Annals of Statistics</source><volume>1</volume><fpage>356</fpage><lpage>358</lpage><pub-id pub-id-type="doi">10.1214/aos/1176342373</pub-id></element-citation></ref><ref id="bib9"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Brand</surname><given-names>N</given-names></name><name><surname>Petkovich</surname><given-names>M</given-names></name><name><surname>Krust</surname><given-names>A</given-names></name><name><surname>Chambon</surname><given-names>P</given-names></name><name><surname>de Thé</surname><given-names>H</given-names></name><name><surname>Marchio</surname><given-names>A</given-names></name><name><surname>Tiollais</surname><given-names>P</given-names></name><name><surname>Dejean</surname><given-names>A</given-names></name></person-group><year iso-8601-date="1988">1988</year><article-title>Identification of a second human retinoic acid receptor</article-title><source>Nature</source><volume>332</volume><fpage>850</fpage><lpage>853</lpage><pub-id pub-id-type="doi">10.1038/332850a0</pub-id><pub-id pub-id-type="pmid">2833708</pub-id></element-citation></ref><ref id="bib10"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Brazda</surname><given-names>P</given-names></name><name><surname>Szekeres</surname><given-names>T</given-names></name><name><surname>Bravics</surname><given-names>B</given-names></name><name><surname>Tóth</surname><given-names>K</given-names></name><name><surname>Vámosi</surname><given-names>G</given-names></name><name><surname>Nagy</surname><given-names>L</given-names></name></person-group><year iso-8601-date="2011">2011</year><article-title>Live-cell fluorescence correlation spectroscopy dissects the role of coregulator exchange and chromatin binding in retinoic acid receptor mobility</article-title><source>Journal of Cell Science</source><volume>124</volume><fpage>3631</fpage><lpage>3642</lpage><pub-id pub-id-type="doi">10.1242/jcs.086082</pub-id><pub-id pub-id-type="pmid">22045737</pub-id></element-citation></ref><ref id="bib11"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Brazda</surname><given-names>P</given-names></name><name><surname>Krieger</surname><given-names>J</given-names></name><name><surname>Daniel</surname><given-names>B</given-names></name><name><surname>Jonas</surname><given-names>D</given-names></name><name><surname>Szekeres</surname><given-names>T</given-names></name><name><surname>Langowski</surname><given-names>J</given-names></name><name><surname>Tóth</surname><given-names>K</given-names></name><name><surname>Nagy</surname><given-names>L</given-names></name><name><surname>Vámosi</surname><given-names>G</given-names></name></person-group><year iso-8601-date="2014">2014</year><article-title>Ligand binding shifts highly mobile retinoid x receptor to the chromatin-bound state in a coactivator-dependent manner, as revealed by single-cell imaging</article-title><source>Molecular and Cellular Biology</source><volume>34</volume><fpage>1234</fpage><lpage>1245</lpage><pub-id pub-id-type="doi">10.1128/MCB.01097-13</pub-id><pub-id pub-id-type="pmid">24449763</pub-id></element-citation></ref><ref id="bib12"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Bugge</surname><given-names>TH</given-names></name><name><surname>Pohl</surname><given-names>J</given-names></name><name><surname>Lonnoy</surname><given-names>O</given-names></name><name><surname>Stunnenberg</surname><given-names>HG</given-names></name></person-group><year iso-8601-date="1992">1992</year><article-title>RXR alpha, a promiscuous partner of retinoic acid and thyroid hormone receptors</article-title><source>The EMBO Journal</source><volume>11</volume><fpage>1409</fpage><lpage>1418</lpage><pub-id pub-id-type="doi">10.1002/j.1460-2075.1992.tb05186.x</pub-id><pub-id pub-id-type="pmid">1314167</pub-id></element-citation></ref><ref id="bib13"><element-citation publication-type="book"><person-group person-group-type="author"><name><surname>Crank</surname><given-names>J</given-names></name></person-group><year iso-8601-date="1975">1975</year><source>The Mathematics of Diffusion</source><publisher-name>Clarendon Press</publisher-name></element-citation></ref><ref id="bib14"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Dempster</surname><given-names>AP</given-names></name><name><surname>Laird</surname><given-names>NM</given-names></name><name><surname>Rubin</surname><given-names>DB</given-names></name></person-group><year iso-8601-date="1977">1977</year><article-title>Maximum likelihood from incomplete data via the em algorithm</article-title><source>Journal of the Royal Statistical Society</source><volume>39</volume><fpage>1</fpage><lpage>22</lpage><pub-id pub-id-type="doi">10.1111/j.2517-6161.1977.tb01600.x</pub-id></element-citation></ref><ref id="bib15"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Deschout</surname><given-names>H</given-names></name><name><surname>Neyts</surname><given-names>K</given-names></name><name><surname>Braeckmans</surname><given-names>K</given-names></name></person-group><year iso-8601-date="2012">2012</year><article-title>The influence of movement on the localization precision of sub-resolution particles in fluorescence microscopy</article-title><source>Journal of Biophotonics</source><volume>5</volume><fpage>97</fpage><lpage>109</lpage><pub-id pub-id-type="doi">10.1002/jbio.201100078</pub-id><pub-id pub-id-type="pmid">22083848</pub-id></element-citation></ref><ref id="bib16"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Elf</surname><given-names>J</given-names></name><name><surname>Li</surname><given-names>GW</given-names></name><name><surname>Xie</surname><given-names>XS</given-names></name></person-group><year iso-8601-date="2007">2007</year><article-title>Probing transcription factor dynamics at the single-molecule level in a living cell</article-title><source>Science</source><volume>316</volume><fpage>1191</fpage><lpage>1194</lpage><pub-id pub-id-type="doi">10.1126/science.1141967</pub-id><pub-id pub-id-type="pmid">17525339</pub-id></element-citation></ref><ref id="bib17"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>English</surname><given-names>BP</given-names></name><name><surname>Hauryliuk</surname><given-names>V</given-names></name><name><surname>Sanamrad</surname><given-names>A</given-names></name><name><surname>Tankov</surname><given-names>S</given-names></name><name><surname>Dekker</surname><given-names>NH</given-names></name><name><surname>Elf</surname><given-names>J</given-names></name></person-group><year iso-8601-date="2011">2011</year><article-title>Single-molecule investigations of the stringent response machinery in living bacterial cells</article-title><source>PNAS</source><volume>108</volume><fpage>E365</fpage><lpage>E373</lpage><pub-id pub-id-type="doi">10.1073/pnas.1102255108</pub-id><pub-id pub-id-type="pmid">21730169</pub-id></element-citation></ref><ref id="bib18"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Evans</surname><given-names>RM</given-names></name><name><surname>Mangelsdorf</surname><given-names>DJ</given-names></name></person-group><year iso-8601-date="2014">2014</year><article-title>Nuclear receptors, rxr, and the big bang</article-title><source>Cell</source><volume>157</volume><fpage>255</fpage><lpage>266</lpage><pub-id pub-id-type="doi">10.1016/j.cell.2014.03.012</pub-id><pub-id pub-id-type="pmid">24679540</pub-id></element-citation></ref><ref id="bib19"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Ferguson</surname><given-names>TS</given-names></name></person-group><year iso-8601-date="1973">1973</year><article-title>A bayesian analysis of some nonparametric problems</article-title><source>The Annals of Statistics</source><volume>1</volume><fpage>209</fpage><lpage>230</lpage><pub-id pub-id-type="doi">10.1214/aos/1176342360</pub-id></element-citation></ref><ref id="bib20"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Geman</surname><given-names>S</given-names></name><name><surname>Geman</surname><given-names>D</given-names></name></person-group><year iso-8601-date="1984">1984</year><article-title>Stochastic relaxation, gibbs distributions, and the bayesian restoration of images</article-title><source>IEEE Transactions on Pattern Analysis and Machine Intelligence</source><volume>6</volume><fpage>721</fpage><lpage>741</lpage><pub-id pub-id-type="doi">10.1109/tpami.1984.4767596</pub-id><pub-id pub-id-type="pmid">22499653</pub-id></element-citation></ref><ref id="bib21"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Ghosh</surname><given-names>RN</given-names></name><name><surname>Webb</surname><given-names>WW</given-names></name></person-group><year iso-8601-date="1994">1994</year><article-title>Automated detection and tracking of individual and clustered cell surface low density lipoprotein receptor molecules</article-title><source>Biophysical Journal</source><volume>66</volume><fpage>1301</fpage><lpage>1318</lpage><pub-id pub-id-type="doi">10.1016/S0006-3495(94)80939-7</pub-id><pub-id pub-id-type="pmid">8061186</pub-id></element-citation></ref><ref id="bib22"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Gibson</surname><given-names>DG</given-names></name><name><surname>Young</surname><given-names>L</given-names></name><name><surname>Chuang</surname><given-names>RY</given-names></name><name><surname>Venter</surname><given-names>JC</given-names></name><name><surname>Hutchison</surname><given-names>CA</given-names></name><name><surname>Smith</surname><given-names>HO</given-names></name></person-group><year iso-8601-date="2009">2009</year><article-title>Enzymatic assembly of dna molecules up to several hundred kilobases</article-title><source>Nature Methods</source><volume>6</volume><fpage>343</fpage><lpage>345</lpage><pub-id pub-id-type="doi">10.1038/nmeth.1318</pub-id><pub-id pub-id-type="pmid">19363495</pub-id></element-citation></ref><ref id="bib23"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Giguere</surname><given-names>V</given-names></name><name><surname>Ong</surname><given-names>ES</given-names></name><name><surname>Segui</surname><given-names>P</given-names></name><name><surname>Evans</surname><given-names>RM</given-names></name></person-group><year iso-8601-date="1987">1987</year><article-title>Identification of a receptor for the morphogen retinoic acid</article-title><source>Nature</source><volume>330</volume><fpage>624</fpage><lpage>629</lpage><pub-id pub-id-type="doi">10.1038/330624a0</pub-id><pub-id pub-id-type="pmid">2825036</pub-id></element-citation></ref><ref id="bib24"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Goulian</surname><given-names>M</given-names></name><name><surname>Simon</surname><given-names>SM</given-names></name></person-group><year iso-8601-date="2000">2000</year><article-title>Tracking single proteins within cells</article-title><source>Biophysical Journal</source><volume>79</volume><fpage>2188</fpage><lpage>2198</lpage><pub-id pub-id-type="doi">10.1016/S0006-3495(00)76467-8</pub-id><pub-id pub-id-type="pmid">11023923</pub-id></element-citation></ref><ref id="bib25"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Grimm</surname><given-names>JB</given-names></name><name><surname>English</surname><given-names>BP</given-names></name><name><surname>Chen</surname><given-names>J</given-names></name><name><surname>Slaughter</surname><given-names>JP</given-names></name><name><surname>Zhang</surname><given-names>Z</given-names></name><name><surname>Revyakin</surname><given-names>A</given-names></name><name><surname>Patel</surname><given-names>R</given-names></name><name><surname>Macklin</surname><given-names>JJ</given-names></name><name><surname>Normanno</surname><given-names>D</given-names></name><name><surname>Singer</surname><given-names>RH</given-names></name><name><surname>Lionnet</surname><given-names>T</given-names></name><name><surname>Lavis</surname><given-names>LD</given-names></name></person-group><year iso-8601-date="2015">2015</year><article-title>A general method to improve fluorophores for live-cell and single-molecule microscopy</article-title><source>Nature Methods</source><volume>12</volume><fpage>244</fpage><lpage>250</lpage><pub-id pub-id-type="doi">10.1038/nmeth.3256</pub-id><pub-id pub-id-type="pmid">25599551</pub-id></element-citation></ref><ref id="bib26"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Grimm</surname><given-names>JB</given-names></name><name><surname>English</surname><given-names>BP</given-names></name><name><surname>Choi</surname><given-names>H</given-names></name><name><surname>Muthusamy</surname><given-names>AK</given-names></name><name><surname>Mehl</surname><given-names>BP</given-names></name><name><surname>Dong</surname><given-names>P</given-names></name><name><surname>Brown</surname><given-names>TA</given-names></name><name><surname>Lippincott-Schwartz</surname><given-names>J</given-names></name><name><surname>Liu</surname><given-names>Z</given-names></name><name><surname>Lionnet</surname><given-names>T</given-names></name><name><surname>Lavis</surname><given-names>LD</given-names></name></person-group><year iso-8601-date="2016">2016</year><article-title>Bright photoactivatable fluorophores for single-molecule imaging</article-title><source>Nature Methods</source><volume>13</volume><fpage>985</fpage><lpage>988</lpage><pub-id pub-id-type="doi">10.1038/nmeth.4034</pub-id><pub-id pub-id-type="pmid">27776112</pub-id></element-citation></ref><ref id="bib27"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Hansen</surname><given-names>AS</given-names></name><name><surname>Pustova</surname><given-names>I</given-names></name><name><surname>Cattoglio</surname><given-names>C</given-names></name><name><surname>Tjian</surname><given-names>R</given-names></name><name><surname>Darzacq</surname><given-names>X</given-names></name></person-group><year iso-8601-date="2017">2017</year><article-title>Ctcf and cohesin regulate chromatin loop stability with distinct dynamics</article-title><source>eLife</source><volume>6</volume><elocation-id>e25776</elocation-id><pub-id pub-id-type="doi">10.7554/eLife.25776</pub-id></element-citation></ref><ref id="bib28"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Hansen</surname><given-names>AS</given-names></name><name><surname>Woringer</surname><given-names>M</given-names></name><name><surname>Grimm</surname><given-names>JB</given-names></name><name><surname>Lavis</surname><given-names>LD</given-names></name><name><surname>Tjian</surname><given-names>R</given-names></name><name><surname>Darzacq</surname><given-names>X</given-names></name></person-group><year iso-8601-date="2018">2018</year><article-title>Robust model-based analysis of single-particle tracking experiments with spot-on</article-title><source>eLife</source><volume>7</volume><elocation-id>e33125</elocation-id><pub-id pub-id-type="doi">10.7554/eLife.33125</pub-id><pub-id pub-id-type="pmid">29300163</pub-id></element-citation></ref><ref id="bib29"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Hansen</surname><given-names>AS</given-names></name><name><surname>Amitai</surname><given-names>A</given-names></name><name><surname>Cattoglio</surname><given-names>C</given-names></name><name><surname>Tjian</surname><given-names>R</given-names></name><name><surname>Darzacq</surname><given-names>X</given-names></name></person-group><year iso-8601-date="2020">2020</year><article-title>Guided nuclear exploration increases ctcf target search efficiency</article-title><source>Nature Chemical Biology</source><volume>16</volume><fpage>257</fpage><lpage>266</lpage><pub-id pub-id-type="doi">10.1038/s41589-019-0422-3</pub-id><pub-id pub-id-type="pmid">31792445</pub-id></element-citation></ref><ref id="bib30"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Hanser</surname><given-names>BM</given-names></name><name><surname>Gustafsson</surname><given-names>MGL</given-names></name><name><surname>Agard</surname><given-names>DA</given-names></name><name><surname>Sedat</surname><given-names>JW</given-names></name></person-group><year iso-8601-date="2004">2004</year><article-title>Phase-retrieved pupil functions in wide-field fluorescence microscopy</article-title><source>Journal of Microscopy</source><volume>216</volume><fpage>32</fpage><lpage>48</lpage><pub-id pub-id-type="doi">10.1111/j.0022-2720.2004.01393.x</pub-id><pub-id pub-id-type="pmid">15369481</pub-id></element-citation></ref><ref id="bib31"><element-citation publication-type="software"><person-group person-group-type="author"><name><surname>Heckert</surname><given-names>A</given-names></name></person-group><year iso-8601-date="2022">2022a</year><data-title>Dpsp</data-title><version designator="swh:1:rev:2f5196e4cae5943a5822be7c4493df50cd564a0c">swh:1:rev:2f5196e4cae5943a5822be7c4493df50cd564a0c</version><source>Software Heritage</source><ext-link ext-link-type="uri" xlink:href="https://archive.softwareheritage.org/swh:1:dir:8de617b63fc4e10fecb4ec52f240c30a25e5537a;origin=https://github.com/alecheckert/dpsp;visit=swh:1:snp:f6df8046e3c87b8358e02495d77be5b5be1c7bb6;anchor=swh:1:rev:2f5196e4cae5943a5822be7c4493df50cd564a0c">https://archive.softwareheritage.org/swh:1:dir:8de617b63fc4e10fecb4ec52f240c30a25e5537a;origin=https://github.com/alecheckert/dpsp;visit=swh:1:snp:f6df8046e3c87b8358e02495d77be5b5be1c7bb6;anchor=swh:1:rev:2f5196e4cae5943a5822be7c4493df50cd564a0c</ext-link></element-citation></ref><ref id="bib32"><element-citation publication-type="software"><person-group person-group-type="author"><name><surname>Heckert</surname><given-names>A</given-names></name></person-group><year iso-8601-date="2022">2022b</year><data-title>Quot</data-title><version designator="swh:1:rev:1adf7a0574c62f38140f1dec2d14555bfc03b9a7">swh:1:rev:1adf7a0574c62f38140f1dec2d14555bfc03b9a7</version><source>Software Heritage</source><ext-link ext-link-type="uri" xlink:href="https://archive.softwareheritage.org/swh:1:dir:08ea47f009f96e3adb116e5a9841c93753d15d34;origin=https://github.com/alecheckert/quot;visit=swh:1:snp:eaa0b998f6b0d3774db4cfe5a8a8429e0b748dad;anchor=swh:1:rev:1adf7a0574c62f38140f1dec2d14555bfc03b9a7">https://archive.softwareheritage.org/swh:1:dir:08ea47f009f96e3adb116e5a9841c93753d15d34;origin=https://github.com/alecheckert/quot;visit=swh:1:snp:eaa0b998f6b0d3774db4cfe5a8a8429e0b748dad;anchor=swh:1:rev:1adf7a0574c62f38140f1dec2d14555bfc03b9a7</ext-link></element-citation></ref><ref id="bib33"><element-citation publication-type="software"><person-group person-group-type="author"><name><surname>Heckert</surname><given-names>A</given-names></name></person-group><year iso-8601-date="2022">2022c</year><data-title>Saspt</data-title><version designator="773292f">773292f</version><source>GitHub</source><ext-link ext-link-type="uri" xlink:href="https://github.com/alecheckert/saspt">https://github.com/alecheckert/saspt</ext-link></element-citation></ref><ref id="bib34"><element-citation publication-type="software"><person-group person-group-type="author"><name><surname>Heckert</surname><given-names>A</given-names></name></person-group><year iso-8601-date="2022">2022d</year><data-title>SptPALMsim (sps)</data-title><version designator="a72f7ff">a72f7ff</version><source>GitHub</source><ext-link ext-link-type="uri" xlink:href="https://github.com/alecheckert/sptpalmsim">https://github.com/alecheckert/sptpalmsim</ext-link></element-citation></ref><ref id="bib35"><element-citation publication-type="software"><person-group person-group-type="author"><name><surname>Heckert</surname><given-names>A</given-names></name></person-group><year iso-8601-date="2022">2022e</year><data-title>Strobesim</data-title><version designator="24afd2a">24afd2a</version><source>GitHub</source><ext-link ext-link-type="uri" xlink:href="https://github.com/alecheckert/strobesim">https://github.com/alecheckert/strobesim</ext-link></element-citation></ref><ref id="bib36"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Hoffman</surname><given-names>LM</given-names></name><name><surname>Garcha</surname><given-names>K</given-names></name><name><surname>Karamboulas</surname><given-names>K</given-names></name><name><surname>Cowan</surname><given-names>MF</given-names></name><name><surname>Drysdale</surname><given-names>LM</given-names></name><name><surname>Horton</surname><given-names>WA</given-names></name><name><surname>Underhill</surname><given-names>TM</given-names></name></person-group><year iso-8601-date="2006">2006</year><article-title>BMP action in skeletogenesis involves attenuation of retinoid signaling</article-title><source>The Journal of Cell Biology</source><volume>174</volume><fpage>101</fpage><lpage>113</lpage><pub-id pub-id-type="doi">10.1083/jcb.200604150</pub-id><pub-id pub-id-type="pmid">16818722</pub-id></element-citation></ref><ref id="bib37"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Im</surname><given-names>H</given-names></name><name><surname>Sambrook</surname><given-names>J</given-names></name><name><surname>Russell</surname><given-names>DW</given-names></name></person-group><year iso-8601-date="2011">2011</year><article-title>The inoue method for preparation and transformation of competent <italic>E. coli</italic>: “ultra competent” cells</article-title><source>BIO-PROTOCOL</source><volume>1</volume><elocation-id>143</elocation-id><pub-id pub-id-type="doi">10.21769/BioProtoc.143</pub-id></element-citation></ref><ref id="bib38"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Izeddin</surname><given-names>I</given-names></name><name><surname>Récamier</surname><given-names>V</given-names></name><name><surname>Bosanac</surname><given-names>L</given-names></name><name><surname>Cissé</surname><given-names>II</given-names></name><name><surname>Boudarene</surname><given-names>L</given-names></name><name><surname>Dugast-Darzacq</surname><given-names>C</given-names></name><name><surname>Proux</surname><given-names>F</given-names></name><name><surname>Bénichou</surname><given-names>O</given-names></name><name><surname>Voituriez</surname><given-names>R</given-names></name><name><surname>Bensaude</surname><given-names>O</given-names></name><name><surname>Dahan</surname><given-names>M</given-names></name><name><surname>Darzacq</surname><given-names>X</given-names></name></person-group><year iso-8601-date="2014">2014</year><article-title>Single-molecule tracking in live cells reveals distinct target-search strategies of transcription factors in the nucleus</article-title><source>eLife</source><volume>3</volume><elocation-id>e02230</elocation-id><pub-id pub-id-type="doi">10.7554/eLife.02230</pub-id><pub-id pub-id-type="pmid">24925319</pub-id></element-citation></ref><ref id="bib39"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Kao</surname><given-names>HP</given-names></name><name><surname>Verkman</surname><given-names>AS</given-names></name></person-group><year iso-8601-date="1994">1994</year><article-title>Tracking of single fluorescent particles in three dimensions: use of cylindrical optics to encode particle position</article-title><source>Biophysical Journal</source><volume>67</volume><fpage>1291</fpage><lpage>1300</lpage><pub-id pub-id-type="doi">10.1016/S0006-3495(94)80601-0</pub-id><pub-id pub-id-type="pmid">7811944</pub-id></element-citation></ref><ref id="bib40"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Kepten</surname><given-names>E</given-names></name><name><surname>Weron</surname><given-names>A</given-names></name><name><surname>Sikora</surname><given-names>G</given-names></name><name><surname>Burnecki</surname><given-names>K</given-names></name><name><surname>Garini</surname><given-names>Y</given-names></name></person-group><year iso-8601-date="2015">2015</year><article-title>Guidelines for the fitting of anomalous diffusion mean square displacement graphs from single particle tracking experiments</article-title><source>PLOS ONE</source><volume>10</volume><elocation-id>e0117722</elocation-id><pub-id pub-id-type="doi">10.1371/journal.pone.0117722</pub-id><pub-id pub-id-type="pmid">25680069</pub-id></element-citation></ref><ref id="bib41"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Kubitscheck</surname><given-names>U</given-names></name><name><surname>Kückmann</surname><given-names>O</given-names></name><name><surname>Kues</surname><given-names>T</given-names></name><name><surname>Peters</surname><given-names>R</given-names></name></person-group><year iso-8601-date="2000">2000</year><article-title>Imaging and tracking of single gfp molecules in solution</article-title><source>Biophysical Journal</source><volume>78</volume><fpage>2170</fpage><lpage>2179</lpage><pub-id pub-id-type="doi">10.1016/S0006-3495(00)76764-6</pub-id><pub-id pub-id-type="pmid">10733995</pub-id></element-citation></ref><ref id="bib42"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Kues</surname><given-names>T</given-names></name><name><surname>Kubitscheck</surname><given-names>U</given-names></name></person-group><year iso-8601-date="2002">2002</year><article-title>Single molecule motion perpendicular to the focal plane of a microscope: application to splicing factor dynamics within the cell nucleus</article-title><source>Single Molecules</source><volume>3</volume><fpage>218</fpage><lpage>224</lpage><pub-id pub-id-type="doi">10.1002/1438-5171(200208)3:4&lt;218::AID-SIMO218&gt;3.0.CO;2-C</pub-id></element-citation></ref><ref id="bib43"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Laurence</surname><given-names>TA</given-names></name><name><surname>Chromy</surname><given-names>BA</given-names></name></person-group><year iso-8601-date="2010">2010</year><article-title>Efficient maximum likelihood estimator fitting of histograms</article-title><source>Nature Methods</source><volume>7</volume><fpage>338</fpage><lpage>339</lpage><pub-id pub-id-type="doi">10.1038/nmeth0510-338</pub-id><pub-id pub-id-type="pmid">20431544</pub-id></element-citation></ref><ref id="bib44"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Leid</surname><given-names>M</given-names></name><name><surname>Kastner</surname><given-names>P</given-names></name><name><surname>Lyons</surname><given-names>R</given-names></name><name><surname>Nakshatri</surname><given-names>H</given-names></name><name><surname>Saunders</surname><given-names>M</given-names></name><name><surname>Zacharewski</surname><given-names>T</given-names></name><name><surname>Chen</surname><given-names>JY</given-names></name><name><surname>Staub</surname><given-names>A</given-names></name><name><surname>Garnier</surname><given-names>JM</given-names></name><name><surname>Mader</surname><given-names>S</given-names></name><name><surname>Chambon</surname><given-names>P</given-names></name></person-group><year iso-8601-date="1992">1992</year><article-title>Purification, cloning, and rxr identity of the hela cell factor with which rar or tr heterodimerizes to bind target sequences efficiently</article-title><source>Cell</source><volume>68</volume><fpage>377</fpage><lpage>395</lpage><pub-id pub-id-type="doi">10.1016/0092-8674(92)90478-U</pub-id><pub-id pub-id-type="pmid">1310259</pub-id></element-citation></ref><ref id="bib45"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Lindén</surname><given-names>M</given-names></name><name><surname>Ćurić</surname><given-names>V</given-names></name><name><surname>Amselem</surname><given-names>E</given-names></name><name><surname>Elf</surname><given-names>J</given-names></name></person-group><year iso-8601-date="2017">2017</year><article-title>Pointwise error estimates in localization microscopy</article-title><source>Nature Communications</source><volume>8</volume><elocation-id>15115</elocation-id><pub-id pub-id-type="doi">10.1038/ncomms15115</pub-id><pub-id pub-id-type="pmid">28466844</pub-id></element-citation></ref><ref id="bib46"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Los</surname><given-names>GV</given-names></name><name><surname>Encell</surname><given-names>LP</given-names></name><name><surname>McDougall</surname><given-names>MG</given-names></name><name><surname>Hartzell</surname><given-names>DD</given-names></name><name><surname>Karassina</surname><given-names>N</given-names></name><name><surname>Zimprich</surname><given-names>C</given-names></name><name><surname>Wood</surname><given-names>MG</given-names></name><name><surname>Learish</surname><given-names>R</given-names></name><name><surname>Ohana</surname><given-names>RF</given-names></name><name><surname>Urh</surname><given-names>M</given-names></name><name><surname>Simpson</surname><given-names>D</given-names></name><name><surname>Mendez</surname><given-names>J</given-names></name><name><surname>Zimmerman</surname><given-names>K</given-names></name><name><surname>Otto</surname><given-names>P</given-names></name><name><surname>Vidugiris</surname><given-names>G</given-names></name><name><surname>Zhu</surname><given-names>J</given-names></name><name><surname>Darzins</surname><given-names>A</given-names></name><name><surname>Klaubert</surname><given-names>DH</given-names></name><name><surname>Bulleit</surname><given-names>RF</given-names></name><name><surname>Wood</surname><given-names>KV</given-names></name></person-group><year iso-8601-date="2008">2008</year><article-title>HaloTag: a novel protein labeling technology for cell imaging and protein analysis</article-title><source>ACS Chemical Biology</source><volume>3</volume><fpage>373</fpage><lpage>382</lpage><pub-id pub-id-type="doi">10.1021/cb800025k</pub-id><pub-id pub-id-type="pmid">18533659</pub-id></element-citation></ref><ref id="bib47"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Mandelbrot</surname><given-names>BB</given-names></name><name><surname>Van Ness</surname><given-names>JW</given-names></name></person-group><year iso-8601-date="1968">1968</year><article-title>Fractional brownian motions, fractional noises and applications</article-title><source>SIAM Review</source><volume>10</volume><fpage>422</fpage><lpage>437</lpage><pub-id pub-id-type="doi">10.1137/1010093</pub-id></element-citation></ref><ref id="bib48"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Manley</surname><given-names>S</given-names></name><name><surname>Gillette</surname><given-names>JM</given-names></name><name><surname>Patterson</surname><given-names>GH</given-names></name><name><surname>Shroff</surname><given-names>H</given-names></name><name><surname>Hess</surname><given-names>HF</given-names></name><name><surname>Betzig</surname><given-names>E</given-names></name><name><surname>Lippincott-Schwartz</surname><given-names>J</given-names></name></person-group><year iso-8601-date="2008">2008</year><article-title>High-density mapping of single-molecule trajectories with photoactivated localization microscopy</article-title><source>Nature Methods</source><volume>5</volume><fpage>155</fpage><lpage>157</lpage><pub-id pub-id-type="doi">10.1038/nmeth.1176</pub-id><pub-id pub-id-type="pmid">18193054</pub-id></element-citation></ref><ref id="bib49"><element-citation publication-type="book"><person-group person-group-type="author"><name><surname>Marin</surname><given-names>JM</given-names></name><name><surname>Mengersen</surname><given-names>K</given-names></name><name><surname>Robert</surname><given-names>CP</given-names></name></person-group><year iso-8601-date="2005">2005</year><chapter-title>Bayesian modelling and inference on mixtures of distributions</chapter-title><person-group person-group-type="editor"><name><surname>Marin</surname><given-names>JM</given-names></name></person-group><source>Handbook of Statistics</source><publisher-name>eprints</publisher-name><fpage>459</fpage><lpage>507</lpage><pub-id pub-id-type="doi">10.1016/S0169-7161(05)25016-2</pub-id></element-citation></ref><ref id="bib50"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Marks</surname><given-names>MS</given-names></name><name><surname>Hallenbeck</surname><given-names>PL</given-names></name><name><surname>Nagata</surname><given-names>T</given-names></name><name><surname>Segars</surname><given-names>JH</given-names></name><name><surname>Appella</surname><given-names>E</given-names></name><name><surname>Nikodem</surname><given-names>VM</given-names></name><name><surname>Ozato</surname><given-names>K</given-names></name></person-group><year iso-8601-date="1992">1992</year><article-title>H-2riibp (rxr beta) heterodimerization provides a mechanism for combinatorial diversity in the regulation of retinoic acid and thyroid hormone responsive genes</article-title><source>The EMBO Journal</source><volume>11</volume><fpage>1419</fpage><lpage>1435</lpage><pub-id pub-id-type="doi">10.1002/j.1460-2075.1992.tb05187.x</pub-id><pub-id pub-id-type="pmid">1314168</pub-id></element-citation></ref><ref id="bib51"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Martin</surname><given-names>DS</given-names></name><name><surname>Forstner</surname><given-names>MB</given-names></name><name><surname>Käs</surname><given-names>JA</given-names></name></person-group><year iso-8601-date="2002">2002</year><article-title>Apparent subdiffusion inherent to single particle tracking</article-title><source>Biophysical Journal</source><volume>83</volume><fpage>2109</fpage><lpage>2117</lpage><pub-id pub-id-type="doi">10.1016/S0006-3495(02)73971-4</pub-id><pub-id pub-id-type="pmid">12324428</pub-id></element-citation></ref><ref id="bib52"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Matsuda</surname><given-names>Y</given-names></name><name><surname>Hanasaki</surname><given-names>I</given-names></name><name><surname>Iwao</surname><given-names>R</given-names></name><name><surname>Yamaguchi</surname><given-names>H</given-names></name><name><surname>Niimi</surname><given-names>T</given-names></name></person-group><year iso-8601-date="2018">2018</year><article-title>Estimation of diffusive states from single-particle trajectory in heterogeneous medium using machine-learning methods</article-title><source>Physical Chemistry Chemical Physics</source><volume>20</volume><fpage>24099</fpage><lpage>24108</lpage><pub-id pub-id-type="doi">10.1039/C8CP02566E</pub-id><pub-id pub-id-type="pmid">30204178</pub-id></element-citation></ref><ref id="bib53"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Matsuoka</surname><given-names>S</given-names></name><name><surname>Shibata</surname><given-names>T</given-names></name><name><surname>Ueda</surname><given-names>M</given-names></name></person-group><year iso-8601-date="2009">2009</year><article-title>Statistical analysis of lateral diffusion and multistate kinetics in single-molecule imaging</article-title><source>Biophysical Journal</source><volume>97</volume><fpage>1115</fpage><lpage>1124</lpage><pub-id pub-id-type="doi">10.1016/j.bpj.2009.06.007</pub-id><pub-id pub-id-type="pmid">19686659</pub-id></element-citation></ref><ref id="bib54"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Mazza</surname><given-names>D</given-names></name><name><surname>Abernathy</surname><given-names>A</given-names></name><name><surname>Golob</surname><given-names>N</given-names></name><name><surname>Morisaki</surname><given-names>T</given-names></name><name><surname>McNally</surname><given-names>JG</given-names></name></person-group><year iso-8601-date="2012">2012</year><article-title>A benchmark for chromatin binding measurements in live cells</article-title><source>Nucleic Acids Research</source><volume>40</volume><elocation-id>e119</elocation-id><pub-id pub-id-type="doi">10.1093/nar/gks701</pub-id><pub-id pub-id-type="pmid">22844090</pub-id></element-citation></ref><ref id="bib55"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>McLachlan</surname><given-names>GJ</given-names></name><name><surname>Lee</surname><given-names>SX</given-names></name><name><surname>Rathnayake</surname><given-names>SI</given-names></name></person-group><year iso-8601-date="2019">2019</year><article-title>Finite mixture models</article-title><source>Annual Review of Statistics and Its Application</source><volume>6</volume><fpage>355</fpage><lpage>378</lpage><pub-id pub-id-type="doi">10.1146/annurev-statistics-031017-100325</pub-id></element-citation></ref><ref id="bib56"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>McSwiggen</surname><given-names>DT</given-names></name><name><surname>Hansen</surname><given-names>AS</given-names></name><name><surname>Teves</surname><given-names>SS</given-names></name><name><surname>Marie-Nelly</surname><given-names>H</given-names></name><name><surname>Hao</surname><given-names>Y</given-names></name><name><surname>Heckert</surname><given-names>AB</given-names></name><name><surname>Umemoto</surname><given-names>KK</given-names></name><name><surname>Dugast-Darzacq</surname><given-names>C</given-names></name><name><surname>Tjian</surname><given-names>R</given-names></name><name><surname>Darzacq</surname><given-names>X</given-names></name></person-group><year iso-8601-date="2019">2019</year><article-title>Evidence for dna-mediated nuclear compartmentalization distinct from phase separation</article-title><source>eLife</source><volume>8</volume><elocation-id>e47098</elocation-id><pub-id pub-id-type="doi">10.7554/eLife.47098</pub-id></element-citation></ref><ref id="bib57"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Michalet</surname><given-names>X</given-names></name><name><surname>Berglund</surname><given-names>AJ</given-names></name></person-group><year iso-8601-date="2012">2012</year><article-title>Optimal diffusion coefficient estimation in single-particle tracking</article-title><source>Physical Review. E, Statistical, Nonlinear, and Soft Matter Physics</source><volume>85</volume><elocation-id>061916</elocation-id><pub-id pub-id-type="doi">10.1103/PhysRevE.85.061916</pub-id></element-citation></ref><ref id="bib58"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Mitrea</surname><given-names>DM</given-names></name><name><surname>Cika</surname><given-names>JA</given-names></name><name><surname>Stanley</surname><given-names>CB</given-names></name><name><surname>Nourse</surname><given-names>A</given-names></name><name><surname>Onuchic</surname><given-names>PL</given-names></name><name><surname>Banerjee</surname><given-names>PR</given-names></name><name><surname>Phillips</surname><given-names>AH</given-names></name><name><surname>Park</surname><given-names>C-G</given-names></name><name><surname>Deniz</surname><given-names>AA</given-names></name><name><surname>Kriwacki</surname><given-names>RW</given-names></name></person-group><year iso-8601-date="2018">2018</year><article-title>Self-interaction of npm1 modulates multiple mechanisms of liquid–liquid phase separation</article-title><source>Nature Communications</source><volume>9</volume><elocation-id>842</elocation-id><pub-id pub-id-type="doi">10.1038/s41467-018-03255-3</pub-id><pub-id pub-id-type="pmid">29483575</pub-id></element-citation></ref><ref id="bib59"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Muñoz-Gil</surname><given-names>G</given-names></name><name><surname>Volpe</surname><given-names>G</given-names></name><name><surname>Garcia-March</surname><given-names>MA</given-names></name><name><surname>Aghion</surname><given-names>E</given-names></name><name><surname>Argun</surname><given-names>A</given-names></name><name><surname>Hong</surname><given-names>CB</given-names></name><name><surname>Bland</surname><given-names>T</given-names></name><name><surname>Bo</surname><given-names>S</given-names></name><name><surname>Conejero</surname><given-names>JA</given-names></name><name><surname>Firbas</surname><given-names>N</given-names></name><name><surname>Garibo i Orts</surname><given-names>Ò</given-names></name><name><surname>Gentili</surname><given-names>A</given-names></name><name><surname>Huang</surname><given-names>Z</given-names></name><name><surname>Jeon</surname><given-names>J-H</given-names></name><name><surname>Kabbech</surname><given-names>H</given-names></name><name><surname>Kim</surname><given-names>Y</given-names></name><name><surname>Kowalek</surname><given-names>P</given-names></name><name><surname>Krapf</surname><given-names>D</given-names></name><name><surname>Loch-Olszewska</surname><given-names>H</given-names></name><name><surname>Lomholt</surname><given-names>MA</given-names></name><name><surname>Masson</surname><given-names>J-B</given-names></name><name><surname>Meyer</surname><given-names>PG</given-names></name><name><surname>Park</surname><given-names>S</given-names></name><name><surname>Requena</surname><given-names>B</given-names></name><name><surname>Smal</surname><given-names>I</given-names></name><name><surname>Song</surname><given-names>T</given-names></name><name><surname>Szwabiński</surname><given-names>J</given-names></name><name><surname>Thapa</surname><given-names>S</given-names></name><name><surname>Verdier</surname><given-names>H</given-names></name><name><surname>Volpe</surname><given-names>G</given-names></name><name><surname>Widera</surname><given-names>A</given-names></name><name><surname>Lewenstein</surname><given-names>M</given-names></name><name><surname>Metzler</surname><given-names>R</given-names></name><name><surname>Manzo</surname><given-names>C</given-names></name></person-group><year iso-8601-date="2021">2021</year><article-title>Objective comparison of methods to decode anomalous diffusion</article-title><source>Nature Communications</source><volume>12</volume><elocation-id>6253</elocation-id><pub-id pub-id-type="doi">10.1038/s41467-021-26320-w</pub-id><pub-id pub-id-type="pmid">34716305</pub-id></element-citation></ref><ref id="bib60"><element-citation publication-type="book"><person-group person-group-type="author"><name><surname>Neal</surname><given-names>RM</given-names></name></person-group><year iso-8601-date="1992">1992</year><chapter-title>Bayesian mixture modeling</chapter-title><person-group person-group-type="editor"><name><surname>Smith</surname><given-names>CR</given-names></name><name><surname>Erickson</surname><given-names>GJ</given-names></name><name><surname>Neudorfer</surname><given-names>PO</given-names></name></person-group><source>Maximum Entropy and Bayesian Methods. Fundamental Theories of Physics (An International Book Series on The Fundamental Theories of Physics: Their Clarification, Development, and Application)</source><publisher-loc>Dordrecht, Netherlands</publisher-loc><publisher-name>Springer</publisher-name><fpage>197</fpage><lpage>211</lpage></element-citation></ref><ref id="bib61"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Neal</surname><given-names>RM</given-names></name></person-group><year iso-8601-date="2000">2000</year><article-title>Markov chain sampling methods for dirichlet process mixture models</article-title><source>Journal of Computational and Graphical Statistics</source><volume>9</volume><fpage>249</fpage><lpage>265</lpage><pub-id pub-id-type="doi">10.1080/10618600.2000.10474879</pub-id></element-citation></ref><ref id="bib62"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Normanno</surname><given-names>D</given-names></name><name><surname>Boudarène</surname><given-names>L</given-names></name><name><surname>Dugast-Darzacq</surname><given-names>C</given-names></name><name><surname>Chen</surname><given-names>J</given-names></name><name><surname>Richter</surname><given-names>C</given-names></name><name><surname>Proux</surname><given-names>F</given-names></name><name><surname>Bénichou</surname><given-names>O</given-names></name><name><surname>Voituriez</surname><given-names>R</given-names></name><name><surname>Darzacq</surname><given-names>X</given-names></name><name><surname>Dahan</surname><given-names>M</given-names></name></person-group><year iso-8601-date="2015">2015</year><article-title>Probing the target search of dna-binding proteins in mammalian cells using tetr as model searcher</article-title><source>Nature Communications</source><volume>6</volume><elocation-id>7357</elocation-id><pub-id pub-id-type="doi">10.1038/ncomms8357</pub-id><pub-id pub-id-type="pmid">26151127</pub-id></element-citation></ref><ref id="bib63"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Parthasarathy</surname><given-names>R</given-names></name></person-group><year iso-8601-date="2012">2012</year><article-title>Rapid, accurate particle tracking by calculation of radial symmetry centers</article-title><source>Nature Methods</source><volume>9</volume><fpage>724</fpage><lpage>726</lpage><pub-id pub-id-type="doi">10.1038/nmeth.2071</pub-id><pub-id pub-id-type="pmid">22688415</pub-id></element-citation></ref><ref id="bib64"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Persson</surname><given-names>F</given-names></name><name><surname>Lindén</surname><given-names>M</given-names></name><name><surname>Unoson</surname><given-names>C</given-names></name><name><surname>Elf</surname><given-names>J</given-names></name></person-group><year iso-8601-date="2013">2013</year><article-title>Extracting intracellular diffusive states and transition rates from single-molecule tracking data</article-title><source>Nature Methods</source><volume>10</volume><fpage>265</fpage><lpage>269</lpage><pub-id pub-id-type="doi">10.1038/nmeth.2367</pub-id><pub-id pub-id-type="pmid">23396281</pub-id></element-citation></ref><ref id="bib65"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Petkovich</surname><given-names>M</given-names></name><name><surname>Brand</surname><given-names>NJ</given-names></name><name><surname>Krust</surname><given-names>A</given-names></name><name><surname>Chambon</surname><given-names>P</given-names></name></person-group><year iso-8601-date="1987">1987</year><article-title>A human retinoic acid receptor which belongs to the family of nuclear receptors</article-title><source>Nature</source><volume>330</volume><fpage>444</fpage><lpage>450</lpage><pub-id pub-id-type="doi">10.1038/330444a0</pub-id><pub-id pub-id-type="pmid">2825025</pub-id></element-citation></ref><ref id="bib66"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Pontén</surname><given-names>J</given-names></name><name><surname>Saksela</surname><given-names>E</given-names></name></person-group><year iso-8601-date="1967">1967</year><article-title>Two established in vitro cell lines from human mesenchymal tumours</article-title><source>International Journal of Cancer</source><volume>2</volume><fpage>434</fpage><lpage>447</lpage><pub-id pub-id-type="doi">10.1002/ijc.2910020505</pub-id><pub-id pub-id-type="pmid">6081590</pub-id></element-citation></ref><ref id="bib67"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Ran</surname><given-names>FA</given-names></name><name><surname>Hsu</surname><given-names>PD</given-names></name><name><surname>Wright</surname><given-names>J</given-names></name><name><surname>Agarwala</surname><given-names>V</given-names></name><name><surname>Scott</surname><given-names>DA</given-names></name><name><surname>Zhang</surname><given-names>F</given-names></name></person-group><year iso-8601-date="2013">2013</year><article-title>Genome engineering using the crispr-cas9 system</article-title><source>Nature Protocols</source><volume>8</volume><fpage>2281</fpage><lpage>2308</lpage><pub-id pub-id-type="doi">10.1038/nprot.2013.143</pub-id><pub-id pub-id-type="pmid">24157548</pub-id></element-citation></ref><ref id="bib68"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Rust</surname><given-names>MJ</given-names></name><name><surname>Bates</surname><given-names>M</given-names></name><name><surname>Zhuang</surname><given-names>X</given-names></name></person-group><year iso-8601-date="2006">2006</year><article-title>Sub-diffraction-limit imaging by stochastic optical reconstruction microscopy (storm)</article-title><source>Nature Methods</source><volume>3</volume><fpage>793</fpage><lpage>795</lpage><pub-id pub-id-type="doi">10.1038/nmeth929</pub-id><pub-id pub-id-type="pmid">16896339</pub-id></element-citation></ref><ref id="bib69"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Sergé</surname><given-names>A</given-names></name><name><surname>Bertaux</surname><given-names>N</given-names></name><name><surname>Rigneault</surname><given-names>H</given-names></name><name><surname>Marguet</surname><given-names>D</given-names></name></person-group><year iso-8601-date="2008">2008</year><article-title>Dynamic multiple-target tracing to probe spatiotemporal cartography of cell membranes</article-title><source>Nature Methods</source><volume>5</volume><fpage>687</fpage><lpage>694</lpage><pub-id pub-id-type="doi">10.1038/nmeth.1233</pub-id><pub-id pub-id-type="pmid">18604216</pub-id></element-citation></ref><ref id="bib70"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Shen</surname><given-names>H</given-names></name><name><surname>Tauzin</surname><given-names>LJ</given-names></name><name><surname>Baiyasi</surname><given-names>R</given-names></name><name><surname>Wang</surname><given-names>W</given-names></name><name><surname>Moringo</surname><given-names>N</given-names></name><name><surname>Shuang</surname><given-names>B</given-names></name><name><surname>Landes</surname><given-names>CF</given-names></name></person-group><year iso-8601-date="2017">2017</year><article-title>Single particle tracking: from theory to biophysical applications</article-title><source>Chemical Reviews</source><volume>117</volume><fpage>7331</fpage><lpage>7376</lpage><pub-id pub-id-type="doi">10.1021/acs.chemrev.6b00815</pub-id><pub-id pub-id-type="pmid">28520419</pub-id></element-citation></ref><ref id="bib71"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Smith</surname><given-names>CS</given-names></name><name><surname>Joseph</surname><given-names>N</given-names></name><name><surname>Rieger</surname><given-names>B</given-names></name><name><surname>Lidke</surname><given-names>KA</given-names></name></person-group><year iso-8601-date="2010">2010</year><article-title>Fast, single-molecule localization that achieves theoretically minimum uncertainty</article-title><source>Nature Methods</source><volume>7</volume><fpage>373</fpage><lpage>375</lpage><pub-id pub-id-type="doi">10.1038/nmeth.1449</pub-id><pub-id pub-id-type="pmid">20364146</pub-id></element-citation></ref><ref id="bib72"><element-citation publication-type="book"><person-group person-group-type="author"><name><surname>Teh</surname><given-names>YW</given-names></name></person-group><year iso-8601-date="2010">2010</year><chapter-title>Dirichlet process</chapter-title><person-group person-group-type="editor"><name><surname>Sammut</surname><given-names>C</given-names></name><name><surname>Webb</surname><given-names>GI</given-names></name></person-group><source>Encyclopedia of Machine Learning</source><publisher-loc>Boston, MA, USA</publisher-loc><publisher-name>Springer</publisher-name><fpage>280</fpage><lpage>287</lpage><pub-id pub-id-type="doi">10.1007/978-0-387-30164-8</pub-id></element-citation></ref><ref id="bib73"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Thompson</surname><given-names>RE</given-names></name><name><surname>Larson</surname><given-names>DR</given-names></name><name><surname>Webb</surname><given-names>WW</given-names></name></person-group><year iso-8601-date="2002">2002</year><article-title>Precise nanometer localization analysis for individual fluorescent probes</article-title><source>Biophysical Journal</source><volume>82</volume><fpage>2775</fpage><lpage>2783</lpage><pub-id pub-id-type="doi">10.1016/S0006-3495(02)75618-X</pub-id><pub-id pub-id-type="pmid">11964263</pub-id></element-citation></ref><ref id="bib74"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Tokunaga</surname><given-names>M</given-names></name><name><surname>Imamoto</surname><given-names>N</given-names></name><name><surname>Sakata-Sogawa</surname><given-names>K</given-names></name></person-group><year iso-8601-date="2008">2008</year><article-title>Highly inclined thin illumination enables clear single-molecule imaging in cells</article-title><source>Nature Methods</source><volume>5</volume><fpage>159</fpage><lpage>161</lpage><pub-id pub-id-type="doi">10.1038/nmeth1171</pub-id><pub-id pub-id-type="pmid">18176568</pub-id></element-citation></ref><ref id="bib75"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Wiedenmann</surname><given-names>J</given-names></name><name><surname>Ivanchenko</surname><given-names>S</given-names></name><name><surname>Oswald</surname><given-names>F</given-names></name><name><surname>Schmitt</surname><given-names>F</given-names></name><name><surname>Röcker</surname><given-names>C</given-names></name><name><surname>Salih</surname><given-names>A</given-names></name><name><surname>Spindler</surname><given-names>KD</given-names></name><name><surname>Nienhaus</surname><given-names>GU</given-names></name></person-group><year iso-8601-date="2004">2004</year><article-title>EosFP, a fluorescent marker protein with uv-inducible green-to-red fluorescence conversion</article-title><source>PNAS</source><volume>101</volume><fpage>15905</fpage><lpage>15910</lpage><pub-id pub-id-type="doi">10.1073/pnas.0403668101</pub-id><pub-id pub-id-type="pmid">15505211</pub-id></element-citation></ref><ref id="bib76"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Xiang</surname><given-names>L</given-names></name><name><surname>Chen</surname><given-names>K</given-names></name><name><surname>Yan</surname><given-names>R</given-names></name><name><surname>Li</surname><given-names>W</given-names></name><name><surname>Xu</surname><given-names>K</given-names></name></person-group><year iso-8601-date="2020">2020</year><article-title>Single-molecule displacement mapping unveils nanoscale heterogeneities in intracellular diffusivity</article-title><source>Nature Methods</source><volume>17</volume><fpage>524</fpage><lpage>530</lpage><pub-id pub-id-type="doi">10.1038/s41592-020-0793-0</pub-id><pub-id pub-id-type="pmid">32203387</pub-id></element-citation></ref><ref id="bib77"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Yu</surname><given-names>VC</given-names></name><name><surname>Delsert</surname><given-names>C</given-names></name><name><surname>Andersen</surname><given-names>B</given-names></name><name><surname>Holloway</surname><given-names>JM</given-names></name><name><surname>Devary</surname><given-names>OV</given-names></name><name><surname>Näär</surname><given-names>AM</given-names></name><name><surname>Kim</surname><given-names>SY</given-names></name><name><surname>Boutin</surname><given-names>JM</given-names></name><name><surname>Glass</surname><given-names>CK</given-names></name><name><surname>Rosenfeld</surname><given-names>MG</given-names></name></person-group><year iso-8601-date="1991">1991</year><article-title>RXR beta: a coregulator that enhances binding of retinoic acid, thyroid hormone, and vitamin d receptors to their cognate response elements</article-title><source>Cell</source><volume>67</volume><fpage>1251</fpage><lpage>1266</lpage><pub-id pub-id-type="doi">10.1016/0092-8674(91)90301-e</pub-id><pub-id pub-id-type="pmid">1662118</pub-id></element-citation></ref><ref id="bib78"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Zhu</surname><given-names>J</given-names></name><name><surname>Gianni</surname><given-names>M</given-names></name><name><surname>Kopf</surname><given-names>E</given-names></name><name><surname>Honoré</surname><given-names>N</given-names></name><name><surname>Chelbi-Alix</surname><given-names>M</given-names></name><name><surname>Koken</surname><given-names>M</given-names></name><name><surname>Quignon</surname><given-names>F</given-names></name><name><surname>Rochette-Egly</surname><given-names>C</given-names></name><name><surname>de Thé</surname><given-names>H</given-names></name></person-group><year iso-8601-date="1999">1999</year><article-title>Retinoic acid induces proteasome-dependent degradation of retinoic acid receptor alpha (raralpha) and oncogenic raralpha fusion proteins</article-title><source>PNAS</source><volume>96</volume><fpage>14807</fpage><lpage>14812</lpage><pub-id pub-id-type="doi">10.1073/pnas.96.26.14807</pub-id><pub-id pub-id-type="pmid">10611294</pub-id></element-citation></ref></ref-list></back><sub-article article-type="editor-report" id="sa0"><front-stub><article-id pub-id-type="doi">10.7554/eLife.70169.sa0</article-id><title-group><article-title>Editor's evaluation</article-title></title-group><contrib-group><contrib contrib-type="author"><name><surname>Smal</surname><given-names>Ihor</given-names></name><role specific-use="editor">Reviewing Editor</role><aff><institution-wrap><institution-id institution-id-type="ror">https://ror.org/03r4m3349</institution-id><institution>Erasmus University Medical Center</institution></institution-wrap><country>Netherlands</country></aff></contrib></contrib-group><related-object id="sa0ro1" object-id-type="id" object-id="10.1101/2021.05.03.442482" link-type="continued-by" xlink:href="https://sciety.org/articles/activity/10.1101/2021.05.03.442482"/></front-stub><body><p>This paper will be of interest to the cellular biologists who perform single-particle tracking experiments and develop new tracking methodologies. The authors investigate a new way of estimating an unknown number of diffusion states from short single-molecule trajectories. Ideas developed in the paper are likely to be used for further algorithm development. The authors give the users access to a repository on GitHub that contains comprehensive code that supports the paper.</p></body></sub-article><sub-article article-type="decision-letter" id="sa1"><front-stub><article-id pub-id-type="doi">10.7554/eLife.70169.sa1</article-id><title-group><article-title>Decision letter</article-title></title-group><contrib-group content-type="section"><contrib contrib-type="editor"><name><surname>Smal</surname><given-names>Ihor</given-names></name><role>Reviewing Editor</role><aff><institution-wrap><institution-id institution-id-type="ror">https://ror.org/03r4m3349</institution-id><institution>Erasmus University Medical Center</institution></institution-wrap><country>Netherlands</country></aff></contrib></contrib-group><contrib-group><contrib contrib-type="reviewer"><name><surname>Paul</surname><given-names>Maarten W</given-names></name><role>Reviewer</role><aff><institution-wrap><institution-id institution-id-type="ror">https://ror.org/03r4m3349</institution-id><institution>Oncode Institute, Erasmus MC Cancer Institute, Erasmus University Medical Center</institution></institution-wrap><country>Netherlands</country></aff></contrib></contrib-group></front-stub><body><boxed-text id="sa2-box1"><p>Our editorial process produces two outputs: (i) <ext-link ext-link-type="uri" xlink:href="https://sciety.org/articles/activity/10.1101/2021.05.03.442482">public reviews</ext-link> designed to be posted alongside <ext-link ext-link-type="uri" xlink:href="https://www.biorxiv.org/content/10.1101/2021.05.03.442482v1">the preprint</ext-link> for the benefit of readers; (ii) feedback on the manuscript for the authors, including requests for revisions, shown below. We also include an acceptance summary that explains what the editors found interesting or important about the work.</p></boxed-text><p><bold>Decision letter after peer review:</bold></p><p>Thank you for submitting your article &quot;Recovering mixtures of fast diffusing states from short single particle trajectories&quot; for consideration by <italic>eLife</italic>. Your article has been reviewed by 3 peer reviewers, one of whom is a member of our Board of Reviewing Editors, and the evaluation has been overseen by a Reviewing Editor and Anna Akhmanova as the Senior Editor. The following individual involved in review of your submission has agreed to reveal their identity: Maarten Paul (Reviewer #3).</p><p>The reviewers have discussed their reviews with one another, and the Reviewing Editor has drafted this to help you prepare a revised submission.</p><p>Essential revisions:</p><p>The authors are supposed to provide a point by point revision addressing the reviewers comments stated in this letter. The main directions for improvements can be summarized briefly as follows:</p><p>1) Rewriting or adding more information and explanations about the methodology, so it becomes accessible to a broader range of <italic>eLife</italic> readers.</p><p>2) Adding comparison with existing (alternative/similar) techniques mentioned by the reviewer as well as the case with non-Brownian motion.</p><p>3) Justifying the importance of the biologically relevant insights (see the reviewer’s comments) to fit the profile of the journal better.</p><p><italic>Reviewer #1 (Recommendations for the authors):</italic></p><p>The paper is well written and all the parts concerning the &quot;regular&quot; Brownian motion, as the authors also mention themselves, are validated with lots of experiments, covering all possible (parameter) dependencies. With the staring assumptions like that (the type of diffusion and the type of switching), it is difficult to ask for more. My concern is still about the applicability of these techniques to the data that contains anomalous diffusion. The typical experiments with H2B or any other protein binding events, where there is a switching between several types of motion, most of the time show that the &quot;slow&quot; components are always related to anomalous diffusion. In the typical cases, there are 2-3 components where only one most likely would correspond to the regular diffusion. With that respect, it would be interesting to know how the methods work (or break) with such data, for example in the simulations with 2-3 state fractional Brownian motions. The weakness that one can imagine is that the proposed techniques can distill the diffusion coefficients, but the bigger problem is that they cannot &quot;split&quot; the trajectories into the parts that correspond to those states with different parameter values. Such split is most of the time of a higher importance, because it allows for computation of residency times and other typical and intuitive parameters. Having the diffusion rates for the anomalous diffusion (which are only the &quot;apparent&quot; diffusion coefficients that do not have physical interpretation as clear as in the case of the regular Brownian motion). Also splitting trajectories in parts, according to different diffusion rates gives a possibility to create a spatial maps inside a cell/nucleus and observe, for example, where more transient binding is occurring. The attempt to present such type of information can be observed in Figure 5 but is it possible to compare these results with &quot;more classical&quot; approach (staring from SpotOn or any other techniques), that splits the trajectories into different parts, and see if the results produced by the proposed methods are unique and cannot be obtained otherwise. Splitting of the tracks with diffusion constants which are well separated (as in the paper) is not a big problem nowadays (see for example M. Arts, &quot;Particle Mobility Analysis Using Deep Learning and the Moment Scaling Spectrum&quot;, or A. Vega &quot;Multistep track segmentation and motion classification for transient mobility analysis&quot;). Those already work better than simple MSD analysis that does not keep track on the order of displacements within a track.</p><p><italic>Reviewer #2 (Recommendations for the authors):</italic></p><p>1. Accuracy and precision are two different things. I would recommend that the authors look up the definition of accuracy (i.e. bias) and precision.</p><p>2. Introduction paragraph 3, &quot;despite these advances several problems remain&quot;. This is very vague and I don't know what the authors tried to address with these advances. Please rephrase.</p><p>3. Introduction paragraph 3, &quot;stroboscopic illumination&quot;, do the authors mean stroboscopic activation of excitation?</p><p>4. &quot; but because camera integration times are never instantaneous, it cannot be removed entirely&quot;. Figure 1C should be supported with images from point spread functions (PSF) of real acquired single-molecules and histograms of intensity, background, and PSF width, which are related to the integration time of the camera to make this claim scientifically sound. Also for S1B, it would be easier to plot a 2D grid of pixels with a greyscale indicating the intensity (similar to Figure 1A, but zoomed-in). The paper misses too many details for their argumentation of the varying localization precision that the paper tries to address. This needs to be expanded so that the localization precision simulations match the reality.</p><p>5. The authors introduce a new acronym for sptPALM originally introduce in Manley, Nat. Meth, 2008. I don't see a reason for deviating from this.</p><p>6. The authors set out to address challenges by citing work from back in 2006 e.g. ref 19, 20. As the authors know a lot has happened since 2006, which should be discussed to describe an appropriate state-of-the-art. An example of this is the work from Linden Nat. Comm. 2017, which should be cited.</p><p>7. One of the major points of ref 30 is to be able to process short trajectories. Paragraph 4 suggests something else. Furthermore, a way to incorporate a changing localization precision over the field of view has been studied in the context of single-molecule kinetics Smith Nat. Com. 2019 and should be cited.</p><p>8. The paper contains a missing reference in figure S11 please correct it.</p><p>9. The authors introduce ref 30, but benchmark against much older ref 32. A comparison to the tracking methodology that was developed in the Elf lab would be useful for the general readership. The code is available on GitHub.</p><p>10. The authors make an approximation that is &quot;strictly true when the localization precision is zero&quot;. When does this approximation break down, since this is not a valid assumption (e.g. Figure 1C)?</p><p>11. How does a user know from the output if they obtain discretization artifacts from SAs?</p><p>12. It would be useful if the authors could quantify the error in figure S2 i.e. add a graph with error vs the number of trajectories. Furthermore, it would be useful to see the impact of a broad distribution that realistically models a varying localization precision (see point 1).</p><p>13. Figure S6 shows two distinct diffusion states. My impression is that ref 30 would work on this perfectly fine. I recommend the authors to benchmark against this approach. It would be interesting two see a broad distribution of diffusion coefficients where ref 30 would fail. Here also it would be useful if the authors could quantify the error vs the number of trajectories.</p><p>14. Wouldn't it be easier to address defocalization using e.g. an astigmatic lens so that the z position can be estimated? Or would the varying localization precision still be a problem? It would be great if the authors could make this point in the discussion.</p><p><italic>Reviewer #3 (Recommendations for the authors):</italic></p><p>– The first paragraph of the results and first figure nicely describes single-molecule data as a mixture of molecules of different diffusive states and how image acquisition biases the results. In the second paragraph the authors present their new model and Bayesian approaches in a technical way. I think it would be useful at this point to explain their Bayesian approach in such a way that is easier to understand for biologists.</p><p>– Introduction; Page 3; &quot;The central problem in spaSPT analysis…&quot; I think it would be useful to add here that it is not only problem to recover the underlying set of dynamic states, but also the transitions between those states. Although this is not really the focus of this study I think it is a relevant aspect of single-particle tracking that should be considered.</p><p>– Figure 2A: It is difficult for me to understand these schemes. Possibly some additional description in the figure legend explaining the different terms would help.</p><p>– Figure 2C and D: It is unclear to me which of the two methods are used in these figures. A heading above the figures could possible clarify this.</p><p>– On page 6: paragraph &quot;Performance of DPMMs and SAs on experimental spaSPT&quot; here biological results are written clearly; however I do miss a description on the performance of (DPMMs and SAs) methods on the biological data and what new features are uncovered with their method.</p><p>– It seems to me that the SA method is most applicable for biological data as it considers variable localization error depending on the diffusion coefficient of the molecules, whereas the DPMM method work very well in simulations with known localization error, which is unfortunately is not very realistic in cellular experiments. Could the authors directly compare SA and DPMM for their biological dataset (Figure 4A) and discuss possible differences in the results.</p><p>– Could the authors indicate, other than possibly providing more accurate results, what new biological insights are revealed with their method, that are not possible to obtain with MSD analysis. Possibly the authors can compare their experimental results (Figure 4 and 5) to MSD and Spot-On analysis in terms of obtained diffusion rates and fraction of different states. It would be useful to know how big the differences would be, compared to these previous methods.</p><p>– The authors mention in the discussion that their methods do not work well with non-Brownian motion. In many cases however confined motion types are relevant to describe the motion of proteins in cells, possibly also for the proteins they analyzed. Could the authors discuss in more detail how serious this limitation is, taking into account the types of anomalous diffusion that has been observed for several proteins for example in the cell nucleus.</p><p>– Unfortunately the software code from the State Array method was not available at the presented website (https://gitlab.com/alecheckert/saspt/). It is to praise that the authors plan to publish all their code and source data on publication, but it would be nice to have access this software during review. I think it is important to assure that the software is user-friendly and also accessible for biologists.</p><p>– If I understand correctly the experiments described in Figure 4B are done with cells expressing the different variants of RARA-HT from an exogenous promotor either transiently or by making use of stable cell lines. It would be useful if the authors indicate in the legend that this is different from the experiment in Figure 4A where they made use of a CRISPR/Cas9 knock-in. Additionally could the authors indicate the number of technical (cells) and biological replicates from these experiments.</p><p>– Finally, the paper is written rather technically, requiring at least some knowledge of Bayesian statistics. I do think it would be useful if the paper would be carefully evaluated to be more accessible for a broad audience and avoid technical terms whenever possible.</p><p>[Editors’ note: further revisions were suggested prior to acceptance, as described below.]</p><p>Thank you for resubmitting your work entitled &quot;Recovering mixtures of fast diffusing states from short single particle trajectories&quot; for further consideration by <italic>eLife</italic>. Your revised article has been evaluated by Anna Akhmanova (Senior Editor) and a Reviewing Editor.</p><p>The manuscript has been improved but there are some remaining issues that need to be addressed, as outlined below:</p><p>Essential revisions:</p><p>All the reviewers agree that the paper is well written and presents a very valuable data analysis technique but also that the paper has a very strong focus on rather complex and methodological developments, which might be far from the expertise of a general <italic>eLife</italic> reader.</p><p>We ask the authors to take into account the comments of Reviewer #4 who has several suggestions on how to improve the readability of the paper and also mentions other recent works presenting similar methods for single trajectory characterisation.</p><p><italic>Reviewer #1 (Recommendations for the authors):</italic></p><p>The authors revised the manuscript very elaborately, taking into account all the comments and adding useful supporting explanations and experiments. The paper is now in very good shape, and even though the description of the methodology is improved, it can still be a difficult read for a general reader of <italic>eLife</italic>, but it is difficult to simplify that even more because the underlying theory is indeed quite complex.</p><p><italic>Reviewer #3 (Recommendations for the authors):</italic></p><p>I think the revised manuscript has improved significantly and become a useful paper addressing important aspects of single-molecule tracking with useful novel analysis methods. The additional simulations will help potential users of these methods to assess the appropriate approach to analyze their SPT data.</p><p>I found one typo on line 106 varable-&gt; variable</p><p><italic>Reviewer #4 (Recommendations for the authors):</italic></p><p>I find the current manuscript clear and concise, correctly presenting the method developed as well as a variety of examples of use. The text is easily understandable and presents the different concepts and sections in a very ordered way. Also, the extensive number of figures helps to understand the extent of the method and its applicability to different experimental setups. Note that I have no background in Biology, hence my review is focused on the method and its application to simulated and experimental trajectories, and not on the details of the experimental setup (e.g. lines 257-268 and related figures/supplementary material).</p><p>My main concern relates to the benchmark of the method, as I miss an objective evaluation of the accuracy of the method. For instance, while the plots presented in Figure 3A, Figure 4A,…etc give a nice visual understanding of the power of SA, they do not allow for a rigorous comparison and evaluation of the method. In that sense, the plots presented in Figure 4 – Supplement2 C and D give a much better understanding of the accuracy of the method. Being this a rather technical paper focusing on a new method, giving a concise numerical metric (e.g. the mean absolute error) may be of interest to the community. It may also help compare objectively with other methods.</p><p>Another point which I found hard to understand was if the method was working at the 'single trajectory' level or in an ensemble of trajectories. From what I understand from line 296, the authors can give a prediction for every trajectory separately. I think that is an important and valuable feature, and perhaps should be highlighted earlier in the text. In this sense, it may also be worth pointing out in the text other recent works presenting similar methods for single trajectory characterization. Indeed, while the approach is slightly different, Ref A also proposes the use of Bayesian inference for extracting diffusion properties from trajectories. The use of machine learning has also been prominent recently for this purpose (see Ref C and the references therein) and may be worth adding a comment in the text. Indeed, in the latter reference, there are some approaches to trajectory segmentation, which may complement one of the flaws of the method stated in the text: dealing with transitions between states within a trajectory.</p></body></sub-article><sub-article article-type="reply" id="sa2"><front-stub><article-id pub-id-type="doi">10.7554/eLife.70169.sa2</article-id><title-group><article-title>Author response</article-title></title-group></front-stub><body><disp-quote content-type="editor-comment"><p>Essential revisions:</p><p>The authors are supposed to provide a point by point revision addressing the reviewers comments stated in this letter. The main directions for improvements can be summarized briefly as follows:</p><p>1) Rewriting or adding more information and explanations about the methodology, so it becomes accessible to a broader range of eLife readers.</p><p>2) Adding comparison with existing (alternative/similar) techniques mentioned by the reviewer as well as the case with non-Brownian motion.</p><p>3) Justifying the importance of the biologically relevant insights (see the reviewer’s comments) to fit the profile of the journal better.</p></disp-quote><p>We thank the reviewers for their insightful feedback on the content of this manuscript. Through the reviews, we identified numerous revisions that we believe had a strongly positive impact on the quality and clarity of this work. This letter summarizes the experiments and revisions prompted by these reviews.</p><p>The Editors identified three Essential Revisions for the manuscript:</p><p>1. Rewriting/adding more information about the methodology, to increase its accessibility to a broader range of readers;</p><p>2. Adding comparison with existing (alternative/similar) techniques mentioned by the reviewers as well as the case with non-Brownian motion;</p><p>3. Justifying the importance of the biologically relevant insights to fit the profile of the journal better.</p><p>In addition to these Essential Revisions, Reviewer #2 highlighted limitations of the simulations for localization error and motion blur in this manuscript. We feel that this is a vital point and it led to the design of a new simulation library (sptPALMsim) that we used in several of the other revisions.</p><p>As a result, we begin this document by discussing the issue of realistic simulation raised by Reviewer #2. This is followed by a discussion of the Essential Revisions. Finally, we identified several additional areas for improvement based on the reviewer’s comments, which we discuss at the end. Where included, figure numbers refer to the latest version of the paper.</p><disp-quote content-type="editor-comment"><p>Revision 1: Evaluating state arrays on more realistic sptPALM simulations</p></disp-quote><p>One characteristic of the state array (SA) method is that it infers state occupations in the joint space of diffusion coefficient and localization error. Localization error is then marginalized out in post-processing. The original manuscript claimed that this procedure was robust to heterogeneous localization error in the sample. However, Reviewer #2 highlighted an important limitation of the simulations used to support this assertion: while each simulation features a range of localization errors, the localization error for each state is assumed constant. In real experiments, localization error can be distinct for each individual particle due to effects like defocus, motion blur, and the intrinsically stochastic processes of photon emission and detection (“shot noise”).</p><p>To address this, we designed a series of more realistic dynamical and optical simulations of the sptPALM experiment. Whereas in the original manuscript we simulated the paths of particles with different types of motion (plus error), for these new simulations we generated images which are subsequently tracked. As a result, the simulations incorporate effects like defocus, shot noise, camera noise, tracking errors, and motion blur that were not present in the original simulations. We have included a new figure (Figure 4-figure supplement 2) that evaluates state arrays on this data, as well as an examples of movies simulated by this method (Video 4, Video 5, and Video 6). The source code to generate the simulations is publicly available as the sptPALMsim package (https://github.com/alecheckert/sptpalmsim). This package includes a library for general-purpose sptPALM simulation as well as scripts that specifically reproduce the data used in this manuscript.</p><p>Likewise, Reviewer #2 also highlighted that the claim about motion blur (“because camera integration times are never instantaneous, [motion blur] cannot be removed entirely”) is not substantiated with data from the manuscript proper. They recommended supporting this statement with images from experimentally observed point spread functions at different integration times.</p><p>We agree this point is important, and point to several places it has been made before in the literature (for example, Deschout et al. 2012 (doi:10.1002/jbio.201100078) and Linden et al. 2017 (doi:10.1038/ncomms15115) both provide detailed discussion along with experimental point spread functions). Because of this existing body of work, we did not feel that adding experimentally observed point spread functions would add anything to the paper that has not already been stated better.</p><p>Instead, to support the investigations here and address Reviewer #2’s comment, we investigated the magnitude of the effect of motion blur on localization by systematically evaluating our detection and localization pipeline on simulated point spread functions with variable pulse width (Figure 1-figure supplement 1). These investigations allowed us to determine that localization error scales with pulse width and is non-negligible for the pulse widths used in this study.</p><disp-quote content-type="editor-comment"><p>Essential Revision 1 (pt. 1): Methodology for non-specialists</p></disp-quote><p>A central point highlighted by the reviewers was the accessibility of the method for non-specialists. The original manuscript was not geared to the diverse range of backgrounds in eLife’s readership. As one example, Reviewer #3 highlighted the use of probabilistic graphical models in Figure 2. PGMs aren’t very useful for readers unfamiliar with them!</p><p>To address this issue, we made several major changes to the manuscript. First, we refactored/replaced Figure 2 with two new figures (now, Figure 2 and Figure 3). The first new figure compares the models in this manuscript with an intuitive, visual presentation geared toward non-specialists. The second new figure dives deeper into state arrays and DPMMs as applied to regular Brownian motion, and contains most of the information formerly in Figure 2. The graphical models from Figure 2 have been moved to their own figure (Figure 2-figure supplement 1). We believe this increases the intelligibility of the method for non-specialists, while retaining the original information for those versed in probabilistic models.</p><p>Additionally, we improved the exposition of methodology. This included two parts. First, we rewrote the first Results section describing the methods with an eye to eLife’s readership. The new version introduces the concept of a mixture model at a basic level, and follows by modifying this model to yield state arrays and DPMMs. We also devote more space to discussing how the design of state arrays and DPMMs is intended to address the fundamental problem of estimating a discrete or continuous dynamic profile.</p><p>The second part of our revision was an overhaul of the Methods. The new version is essentially a more detailed version of the first Results section, beginning with classic Bayesian finite state mixtures and deriving DPMMs and state arrays as an extension and special case, respectively. We have taken several steps to increase the accessibility of this material to non-specialists, including (1) removing unnecessary discussion of specialist topics, (2) breaking out long derivations to separate sections, and (3) algorithmic (step-by-step) perspectives of the different classes of mixture models discussed in the paper.</p><disp-quote content-type="editor-comment"><p>Essential Revision 1 (pt. 2): Method accessibility</p></disp-quote><p>The original manuscript linked to a GitLab repository implementing the methods described in the manuscript. That repo was fairly informal and suffered from sparse documentation, absence of a comprehensive testing suite, and some permissions issues identified by Reviewer #3.</p><p>To improve the accessibility of the method, we have reimplemented state arrays as the publicly available, pip-installable Python package saspt. This software includes a full testing suite, a flexible object API, and a comprehensive set of documentation (accessible here: https://saspt.readthedocs.io/en/latest/) that includes a guide for getting started running state arrays. This documentation has led to useful feedback from the current users of the method. We have linked to this package in the new version of the manuscript.</p><disp-quote content-type="editor-comment"><p>Essential Revision 2: Comparison with existing techniques</p></disp-quote><p>The state-of-the-art in finite-state sptPALM analysis is represented by the vbSPT tool (Persson et al. Nature Methods 2013). Reviewer #2 suggested a comparison between the state array method and vbSPT.</p><p>To compare vbSPT and state arrays, we performed two experiments using simulated sptPALM movies produced with the sptPALMsim package. First, we simulated a range of two-state Brownian models with variable diffusion coefficients and state occupations. In these comparisons, the simulated sptPALM movie was tracked with our usual pipeline (Localization and tracking, Methods), then the resulting trajectories were passed as input to both the state array and vbSPT methods. The results are summarized in a new figure (Figure 4-figure supplement 6).</p><p>Comparing the two methods is not entirely trivial because (1) vbSPT and state arrays have different outputs (vbSPT returns a variable number of discrete states, while state arrays return a distribution over an array of parameters), and (2) vbSPT frequently returned more states than the true number of simulated states. Consequently, we chose the following method for this comparison:</p><p>– To compare accuracy of diffusion coefficient retrieval: For state arrays, we took the diffusion coefficient corresponding to the fastest mode in the posterior distribution. For vbSPT, we took the state with the diffusion coefficient closest to the true diffusion coefficient.</p><p>– To compare accuracy of state occupation retrieval, we integrated the occupations of all states above or below 1.0 µm2 s-1 (for both methods).</p><p>The result was close agreement between the vbSPT and state array methods, both of which accurately recovered state occupation and diffusion coefficient for the two-state model (Figure 4-figure supplement 6B). We concluded that vbSPT and state arrays had similar performance for this simple model. We did not assess the accuracy of the transition rate matrix estimated by vbSPT (no transitions were allowed in this experiment).</p><p>For our second comparison, we compared the output of vbSPT and state arrays on 20 dynamic models of increasing complexity (Figure 4-figure supplement 6C). This included situations that we consider extremely challenging for any current method (including both state arrays and vbSPT), such as models with 10 diffusing states and “clusters” of diffusing states with similar state parameters. In this comparison, we compared the ability of vbSPT and state arrays to recover the number of diffusing states. We found that while both methods performed well on simple models, they were prone to distinct kinds of errors for more complex models (vbSPT tended to overestimate the number of states, while state arrays tended to underestimate). Additionally, vbSPT inaccurately retrieved the diffusion coefficients for slow-moving states, likely due to its treatment of localization error. We concluded that state arrays and vbSPT are likely complementary methods, with state arrays being more applicable to complex non-discrete dynamic profiles and vbSPT more appropriate to recover the transition rates for simple models.</p><disp-quote content-type="editor-comment"><p>Essential Revision: Non-Brownian motion.</p></disp-quote><p>Reviewers #1 and #3 inquired about the applicability of these methods to non-Brownian motion. Because the state array method is applicable to any kind of probabilistic motion model it extends naturally to non-Brownian motion, although the inference routine is more expensive because a higher-dimensional parameter grid is necessary.</p><p>To address the reviewers’ comments we implemented a state array for fractional Brownian motion (FBM), a popular anomalous diffusion model that generalizes regular Brownian motion to allow for subdiffusion and superdiffusion. In our version of this model, there are three parameters:</p><p>– A scaling coefficient parametrizing the magnitude of the jumps, similar to the diffusion coefficient for regular Brownian motion;</p><p>– The Hurst parameter, parametrizing temporal correlations in the jumps;</p><p>– Localization error variance.</p><p>To distinguish this modified model from the original FBM as introduced by Mandelbrot &amp; Van Ness SIAM Review 1968, we refer to it as “fractional Brownian motion with localization error” (FBME).</p><p>The state array for FBME is a 3-dimensional array over scaling coefficient, Hurst parameter, and localization error variance. As with the RBME state array, we marginalize out the localization error in post-processing. This yields a two-dimensional function of scaling coefficient and Hurst parameter (rather than the one-dimensional function over diffusion coefficient afforded by the RBME state array). We then proceeded to evaluate this state array’s ability to recover FBM model parameters from sptPALM movies simulated by the sptPALMsim package.</p><p>The results of these investigations are summarized in Figure 4-figure supplement 7 and Figure 4-figure supplement 8, with an accompanying movie (Video 6). With short pulse widths, this state array accurately recovered mixtures of FBM states (both subdiffusive and superdiffusive) (Figure 4-figure supplement 7). However, as we increased pulse width, we found that the state array systematically underestimated the scaling coefficient at low Hurst parameters (Figure 4-figure supplement 8A). This effect appears to be due to motion blur averaging out the high-frequency motion that characterizes FBM at low Hurst parameters (Figure 4-figure supplement 8B). This interaction between FBM and motion blur is unexpected and, as far as we are aware, previously unreported.</p><p>The state array used for this investigation is publicly available in the saspt package by passing the option likelihood_type = ‘fbme’.</p><disp-quote content-type="editor-comment"><p>Essential Revision 3: Biological insights</p></disp-quote><p>Reviewer #1 and #3 asked about the novel biological insights offered by these methods. These comments made us realize that the previous version of the manuscript included essentially no discussion of insights gleaned from the application of state arrays to real sptPALM data. While the purpose of the manuscript is to compare methods rather than investigate novel biology, we agree that this addition would help eLife’s readership understand better where these methods could be applicable.</p><p>To address this, we introduced a section in the discussion that focuses on the insights from these methods. We highlight that the dynamic profile for RARA-HaloTag unexpectedly displayed a non-discrete spectrum of diffusing states between 0.1 and 10.0 µm2 s-1, in contrast the more discrete profiles of HaloTag, HaloTag-NLS, or H2B-HaloTag. We feel that this serves as a demonstration of the ability of state arrays to approximate non-discrete profiles, which sets it apart from existing methods.</p><p>Here, we discuss other points raised by the reviewers that led to improvements in the manuscript.</p><p>1. In the original manuscript, we used the acronym “spaSPT” (stroboscopic photoactivated single particle tracking) to refer to the tracking experiment, following Hansen and Woringer et al., <italic>eLife</italic> 2018. Reviewer #2 felt that the acronym “sptPALM” (single particle tracking photoactivated localization microscopy), introduced by Manley et al., <italic>Nature Methods</italic> 2008, is preferable. We have no intrinsic attachment to either so we have changed all instances of “spaSPT” to “sptPALM” in the manuscript.</p><p>2. Reviewer #2 suggested a more explicit discussion of where the DPMM method breaks down, particularly where localization error is concerned. We had intended Figure 4 and its associated supplements to show that the DPMM breaks down when localization error is highly heterogeneous in the sample; this is the method’s major failing point (and the main reason why it is outperformed by state arrays). We have attempted to make this clearer in the text referring to these figures.</p><p>3. Reviewer #2 proposed quantifying the error in state occupation estimates as a function of the number of trajectories used. This is the main purpose of Figure 4—figure supplement 3, so we have attempted to make the reference to this figure clearer in the main text.</p><p>4. The original manuscript did not recommend any way to determine when and where discretization artefacts occur when using state arrays. We agree with Reviewer #2 that this would be a helpful addition. We have added a note about it in the Discussion. In this note, we also indicate that the saspt package includes “out-of-the-box” state arrays that have been selected to avoid discretization artefacts based on our own experiments.</p><p>5. Reviewer #3 included numerous helpful comments on figure clarity, including that (i) the original Figure 2C and Figure 2D did not indicate which method (DPMMs or SAs) were used, (ii) Figure 5B did not make it clear that which constructs were expressed from an exogenous promoter, (iii) the crosshairs in the original Figure 2D were difficult to see, (iv) Figure 5A-C does not state which method was used except in its caption, and (v) confusing labeling in Figure 6B. We have modified these figures in response to these comments by (i) adding a legend for Figure 2C/2D, (ii) marking the for constructs expressed from an exogenous promoter to Figure 5B, (iii) changing the color of the crosshairs in Figure 2D, (iv) stating that Figure 5A-C uses state arrays in the figure itself, and (v) rearranging Figure 6B so that each subpopulation is clearly connected to the original state array posterior distribution by an arrow.</p><p>6. Introducing point spread function (PSF) astigmatism via a cylindrical lens is a common way to estimate the z-position of emitters in fixed-cell PALM and STORM. Reviewer #2 suggested a discussion of the applicability of this method to tracking in the Introduction, and were especially interested in whether it could be used to address the defocalization problem. We have included two additional comments in the introduction, which are (1) astigmatism does not solve the issue of finite focal depth, since the focal depth with a cylindrical lens is still smaller than the depth of a typical eukaryotic cell, and (2) while astigmatism could potentially be a powerful tool for resolving three-dimensional motion in tracking, currently there do not exist subpixel localization methods that can effectively distinguish astigmatism from motion blur. (sptPALM differs from fixed-cell PALM and STORM methods in that the fixed-cell methods work with much higher numbers of photons and do not contend with motion blur.)</p><p>7. Reviewers #1 and #3 were both interested in the calculation of transition rates between diffusive states. They highlighted that although the methods presented do not infer transition rates, a more detailed discussion of this limitation would be appreciated. In addition to the existing Figures S4E and S7 (which compare the performance of SAs/DPMMs on simulations with transitions between diffusive states), we have added a discussion in the Introduction on this limitation of the state array method. This change makes it clearer that the methods investigated in this manuscript do <italic>not</italic> infer transitions between states, in contrast to methods like vbSPT.</p><p>8. Reviewer #2 identified ambiguity in the text between the usage of the words “accuracy” and “precision”. We have revised several parts of the manuscript to better elucidate where we discuss the accuracy (systematic deviations from the true underlying value) and precision (variation about the true value) of the inference methods.</p><p>9. Reviewer #2 raised a point about a potentially confusing part of the text: while the manuscript states that DPMMs and SAs deal with the issue of an unknown number of diffusive states, it appeared to this reviewer that “it is not possible to classify trajectory segments into a state”. We apologize for any ambiguity and wish to highlight that SAs do provide a posterior probability distribution over states for each trajectory; assignment of a trajectory to a given state can be accomplished through either the max a posteriori or mean posterior estimates. We have attempted to make this point clearer in the discussion of the method, and thank Reviewer #2 for pointing out this ambiguity.</p><p>10. Reviewer #2 highlighted a vague sentence in the introductory paragraph (“Despite these advances, several problems remain…”). We recognize that some of the confusion comes from the phrase “Despite these advances”, which was intended to refer to the contents of the previous paragraph (“Advances in the past two decades…”). We have removed this phrase and rephrased this paragraph and the following two for clarity. The intent of these paragraphs is to discuss current challenges with the sptPALM experiment.</p><p>11. Reviewer #2 pointed out that “stroboscopic illumination” is unclear. We have added a clarifying comment that this refers to pulses of the excitation laser, as shown in Figure 1A. In addition, Figure 1—figure supplement 1 provides additional illustrations of the motivation for stroboscopic illumination by investigating the effect of motion blur on localization precision in simulated SPT videos.</p><p>12. Reviewer #2 suggested rephrasing the discussion of reference #30 (Persson et al., 2013), particularly its applicability to short trajectories. We have highlighted explicitly that this method works with short trajectories in the Introduction. Additionally, the new comparisons on simulated sptPALM in Figure 4—figure supplement 6 show clearly that vbSPT accurately recovers state occupations and diffusion coefficients for simple models, given short trajectories.</p><p>[Editors' note: further revisions were suggested prior to acceptance, as described below.]</p><disp-quote content-type="editor-comment"><p>Reviewer #4 (Recommendations for the authors):</p><p>I find the current manuscript clear and concise, correctly presenting the method developed as well as a variety of examples of use. The text is easily understandable and presents the different concepts and sections in a very ordered way. Also, the extensive number of figures helps to understand the extent of the method and its applicability to different experimental setups. Note that I have no background in Biology, hence my review is focused on the method and its application to simulated and experimental trajectories, and not on the details of the experimental setup (e.g. lines 257-268 and related figures/supplementary material).</p><p>My main concern relates to the benchmark of the method, as I miss an objective evaluation of the accuracy of the method. For instance, while the plots presented in Figure 3A, Figure 4A,…etc give a nice visual understanding of the power of SA, they do not allow for a rigorous comparison and evaluation of the method. In that sense, the plots presented in Figure 4 – Supplement2 C and D give a much better understanding of the accuracy of the method. Being this a rather technical paper focusing on a new method, giving a concise numerical metric (e.g. the mean absolute error) may be of interest to the community. It may also help compare objectively with other methods.</p><p>Another point which I found hard to understand was if the method was working at the 'single trajectory' level or in an ensemble of trajectories. From what I understand from line 296, the authors can give a prediction for every trajectory separately. I think that is an important and valuable feature, and perhaps should be highlighted earlier in the text. In this sense, it may also be worth pointing out in the text other recent works presenting similar methods for single trajectory characterization. Indeed, while the approach is slightly different, Ref A also proposes the use of Bayesian inference for extracting diffusion properties from trajectories. The use of machine learning has also been prominent recently for this purpose (see Ref C and the references therein) and may be worth adding a comment in the text. Indeed, in the latter reference, there are some approaches to trajectory segmentation, which may complement one of the flaws of the method stated in the text: dealing with transitions between states within a trajectory.</p></disp-quote><p>A central part of the manuscript compares the ability of three methods – MSD histograms, Dirichlet process mixture models (DPMMs), and state arrays (SAs) – to recover state occupations on several kinds of simulated sptPALM datasets. While this comparison was intended to evaluate the performance of each method on data with known ground truth, the comparisons were mostly visual. Most of the original figures showed the dynamic profiles obtained from each of the three methods as line plots.</p><p>Reviewer #4's primary critique was a lack of clear objective, numerical benchmarks to ground these visual presentations. This issue was compounded by the lack of y-axis labels for many plots. Reviewer #4 suggested a concise numerical metric, such as mean absolute error (MAE), would be useful for readers. They also identified several related changes that could improve the clarity and improve the quantitative rigor of these comparisons.</p><p>After reviewing the manuscript, we agree with Reviewer #4 that this was a clear gap in the existing manuscript. We also feel that it would be helpful to have a single table of numerical accuracies for each method across a broad range of simulations (see note on the new Figure 4—figure supplement 2, below). As a result, we revised most of the figures that focus on method comparison.</p><p>First, in figures evaluating the accuracy of state occupation estimates, we have introduced tables of mean absolute errors for each of the methods being compared:</p><p>– Figure 4 has been expanded to include the MAE in occupation estimates for each of the three methods when evaluated on a 3-state model (Figure 4E), as shown visually in Figure 4D.</p><p>– Figure 4—figure supplement 3 has been split into two figures (Figure 4—figure supplement 3 and Figure 4—figure supplement 4), each of which now includes a table of numerical accuracies (MAE) evaluated against 2- or 4-state models, respectively. This also provides a quantitative comparison of how each methods' accuracy improves as a function of sample size, a point that was only made qualitatively in the previous version of the manuscript. We have also attempted to show the distribution of MAEs for each replicate of these simulations individually (Figure 4—figure supplement 3C and Figure 4—figure supplement 4C).</p><p>– Figure 4—figure supplement 5 has been split into two figures (Figure 4—figure supplement 8 and Figure 4—figure supplement 9) that each include tables of mean absolute error on their respective simulations. These is particularly important, given Reviewer #4's comments on Figure 4—figure supplement 5A.</p><p>Second, we have introduced a new figure (Figure 4—figure supplement 2) that focuses on numerical comparisons of accuracy between the three methods. This figure takes the simulations from Figure 4—figure supplement 1 (across six kinds of dynamic models) and evaluates a quantitative metric of error, summarizing the results as a table. Because these simulations include both discrete and continuous dynamic profiles, we opted to quantify accuracy as the root mean squared deviation of the estimated CDF from the ground truth CDF, as shown in Figure 4—figure supplement 2A. (This choice of error metric can be used, for instance, on the log uniform densities that cannot be separated into discrete states.) These experiments provide a quantitative demonstration of DPMM's inaccuracy when the localization error is variable. We also noted from these figures that even on ideal sptPALM data, an error rate of 0.01 to 0.05 CDF RMSD is to be expected for SAs.</p><p>Third, in Figure 4—figure supplement 10 (which compares state arrays against vbSPT), we have included a column for the error in the estimated number of states relative to the true number of states for each method.</p><p>As a result of these changes, the new version of the manuscript places more focus on quantitative comparisons of the three techniques and provides tables of accuracies that benchmark the performance improvements afforded by state arrays. We also feel they serve as a better illustration of the limits of state arrays – for instance, we rarely see the MAE in state occupation estimates drop below 1%, a point we make in the revised text.</p></body></sub-article></article>