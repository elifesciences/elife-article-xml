<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE article PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Archiving and Interchange DTD with MathML3 v1.2 20190208//EN"  "JATS-archivearticle1-mathml3.dtd"><article article-type="research-article" dtd-version="1.2" xmlns:ali="http://www.niso.org/schemas/ali/1.0/" xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink"><front><journal-meta><journal-id journal-id-type="nlm-ta">elife</journal-id><journal-id journal-id-type="publisher-id">eLife</journal-id><journal-title-group><journal-title>eLife</journal-title></journal-title-group><issn pub-type="epub" publication-format="electronic">2050-084X</issn><publisher><publisher-name>eLife Sciences Publications, Ltd</publisher-name></publisher></journal-meta><article-meta><article-id pub-id-type="publisher-id">67620</article-id><article-id pub-id-type="doi">10.7554/eLife.67620</article-id><article-categories><subj-group subj-group-type="display-channel"><subject>Research Article</subject></subj-group><subj-group subj-group-type="heading"><subject>Neuroscience</subject></subj-group></article-categories><title-group><article-title>Motor cortex activity across movement speeds is predicted by network-level strategies for generating muscle activity</article-title></title-group><contrib-group><contrib contrib-type="author" equal-contrib="yes" id="author-230994"><name><surname>Saxena</surname><given-names>Shreya</given-names></name><contrib-id authenticated="true" contrib-id-type="orcid">https://orcid.org/0000-0003-4655-7050</contrib-id><xref ref-type="aff" rid="aff1">1</xref><xref ref-type="aff" rid="aff2">2</xref><xref ref-type="aff" rid="aff3">3</xref><xref ref-type="aff" rid="aff4">4</xref><xref ref-type="aff" rid="aff5">5</xref><xref ref-type="fn" rid="equal-contrib1">†</xref><xref ref-type="other" rid="fund8"/><xref ref-type="other" rid="fund9"/><xref ref-type="fn" rid="con1"/><xref ref-type="fn" rid="conf1"/></contrib><contrib contrib-type="author" equal-contrib="yes" id="author-274538"><name><surname>Russo</surname><given-names>Abigail A</given-names></name><xref ref-type="aff" rid="aff2">2</xref><xref ref-type="aff" rid="aff6">6</xref><xref ref-type="fn" rid="equal-contrib1">†</xref><xref ref-type="other" rid="fund5"/><xref ref-type="fn" rid="con2"/><xref ref-type="fn" rid="conf2"/></contrib><contrib contrib-type="author" id="author-12309"><name><surname>Cunningham</surname><given-names>John</given-names></name><xref ref-type="aff" rid="aff2">2</xref><xref ref-type="aff" rid="aff3">3</xref><xref ref-type="aff" rid="aff4">4</xref><xref ref-type="aff" rid="aff5">5</xref><xref ref-type="other" rid="fund7"/><xref ref-type="fn" rid="con3"/><xref ref-type="fn" rid="conf2"/></contrib><contrib contrib-type="author" corresp="yes" id="author-18622"><name><surname>Churchland</surname><given-names>Mark M</given-names></name><contrib-id authenticated="true" contrib-id-type="orcid">https://orcid.org/0000-0001-9123-6526</contrib-id><email>mc3502@columbia.edu</email><xref ref-type="aff" rid="aff2">2</xref><xref ref-type="aff" rid="aff3">3</xref><xref ref-type="aff" rid="aff6">6</xref><xref ref-type="aff" rid="aff7">7</xref><xref ref-type="other" rid="fund1"/><xref ref-type="other" rid="fund2"/><xref ref-type="other" rid="fund3"/><xref ref-type="other" rid="fund4"/><xref ref-type="other" rid="fund6"/><xref ref-type="fn" rid="con4"/><xref ref-type="fn" rid="conf2"/></contrib><aff id="aff1"><label>1</label><institution-wrap><institution-id institution-id-type="ror">https://ror.org/02y3ad647</institution-id><institution>Department of Electrical and Computer Engineering, University of Florida</institution></institution-wrap><addr-line><named-content content-type="city">Gainesville</named-content></addr-line><country>United States</country></aff><aff id="aff2"><label>2</label><institution-wrap><institution-id institution-id-type="ror">https://ror.org/00hj8s172</institution-id><institution>Zuckerman Mind Brain Behavior Institute, Columbia University</institution></institution-wrap><addr-line><named-content content-type="city">New York</named-content></addr-line><country>United States</country></aff><aff id="aff3"><label>3</label><institution-wrap><institution-id institution-id-type="ror">https://ror.org/00hj8s172</institution-id><institution>Grossman Center for the Statistics of Mind, Columbia University</institution></institution-wrap><addr-line><named-content content-type="city">New York</named-content></addr-line><country>United States</country></aff><aff id="aff4"><label>4</label><institution-wrap><institution-id institution-id-type="ror">https://ror.org/00hj8s172</institution-id><institution>Center for Theoretical Neuroscience, Columbia University</institution></institution-wrap><addr-line><named-content content-type="city">New York</named-content></addr-line><country>United States</country></aff><aff id="aff5"><label>5</label><institution-wrap><institution-id institution-id-type="ror">https://ror.org/00hj8s172</institution-id><institution>Department of Statistics, Columbia University</institution></institution-wrap><addr-line><named-content content-type="city">New York</named-content></addr-line><country>United States</country></aff><aff id="aff6"><label>6</label><institution-wrap><institution-id institution-id-type="ror">https://ror.org/00hj8s172</institution-id><institution>Department of Neuroscience, Columbia University</institution></institution-wrap><addr-line><named-content content-type="city">New York</named-content></addr-line><country>United States</country></aff><aff id="aff7"><label>7</label><institution-wrap><institution-id institution-id-type="ror">https://ror.org/00hj8s172</institution-id><institution>Kavli Institute for Brain Science, Columbia University</institution></institution-wrap><addr-line><named-content content-type="city">New York</named-content></addr-line><country>United States</country></aff></contrib-group><contrib-group content-type="section"><contrib contrib-type="editor"><name><surname>Pruszynski</surname><given-names>J Andrew</given-names></name><role>Reviewing Editor</role><aff><institution-wrap><institution-id institution-id-type="ror">https://ror.org/02grkyz14</institution-id><institution>Western University</institution></institution-wrap><country>Canada</country></aff></contrib><contrib contrib-type="senior_editor"><name><surname>Gold</surname><given-names>Joshua I</given-names></name><role>Senior Editor</role><aff><institution-wrap><institution-id institution-id-type="ror">https://ror.org/00b30xv10</institution-id><institution>University of Pennsylvania</institution></institution-wrap><country>United States</country></aff></contrib></contrib-group><author-notes><fn fn-type="con" id="equal-contrib1"><label>†</label><p>These authors contributed equally to this work</p></fn></author-notes><pub-date date-type="publication" publication-format="electronic"><day>27</day><month>05</month><year>2022</year></pub-date><pub-date pub-type="collection"><year>2022</year></pub-date><volume>11</volume><elocation-id>e67620</elocation-id><history><date date-type="received" iso-8601-date="2021-02-17"><day>17</day><month>02</month><year>2021</year></date><date date-type="accepted" iso-8601-date="2022-05-26"><day>26</day><month>05</month><year>2022</year></date></history><pub-history><event><event-desc>This manuscript was published as a preprint at bioRxiv.</event-desc><date date-type="preprint" iso-8601-date="2021-02-02"><day>02</day><month>02</month><year>2021</year></date><self-uri content-type="preprint" xlink:href="https://doi.org/10.1101/2021.02.01.429168"/></event></pub-history><permissions><copyright-statement>© 2022, Saxena, Russo et al</copyright-statement><copyright-year>2022</copyright-year><copyright-holder>Saxena, Russo et al</copyright-holder><ali:free_to_read/><license xlink:href="http://creativecommons.org/licenses/by/4.0/"><ali:license_ref>http://creativecommons.org/licenses/by/4.0/</ali:license_ref><license-p>This article is distributed under the terms of the <ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/licenses/by/4.0/">Creative Commons Attribution License</ext-link>, which permits unrestricted use and redistribution provided that the original author and source are credited.</license-p></license></permissions><self-uri content-type="pdf" xlink:href="elife-67620-v2.pdf"/><self-uri content-type="figures-pdf" xlink:href="elife-67620-figures-v2.pdf"/><abstract><p>Learned movements can be skillfully performed at different paces. What neural strategies produce this flexibility? Can they be predicted and understood by network modeling? We trained monkeys to perform a cycling task at different speeds, and trained artificial recurrent networks to generate the empirical muscle-activity patterns. Network solutions reflected the principle that smooth well-behaved dynamics require low trajectory tangling. Network solutions had a consistent form, which yielded quantitative and qualitative predictions. To evaluate predictions, we analyzed motor cortex activity recorded during the same task. Responses supported the hypothesis that the dominant neural signals reflect not muscle activity, but network-level strategies for generating muscle activity. Single-neuron responses were better accounted for by network activity than by muscle activity. Similarly, neural population trajectories shared their organization not with muscle trajectories, but with network solutions. Thus, cortical activity could be understood based on the need to generate muscle activity via dynamics that allow smooth, robust control over movement speed.</p></abstract><kwd-group kwd-group-type="author-keywords"><kwd>motor cortex</kwd><kwd>speed</kwd><kwd>tangling</kwd><kwd>dynamical systems</kwd><kwd>neural networks</kwd><kwd>movement</kwd></kwd-group><kwd-group kwd-group-type="research-organism"><title>Research organism</title><kwd>Rhesus macaque</kwd></kwd-group><funding-group><award-group id="fund1"><funding-source><institution-wrap><institution>Grossman Center for the Statistics of Mind</institution></institution-wrap></funding-source><principal-award-recipient><name><surname>Churchland</surname><given-names>Mark M</given-names></name></principal-award-recipient></award-group><award-group id="fund2"><funding-source><institution-wrap><institution-id institution-id-type="FundRef">http://dx.doi.org/10.13039/100000879</institution-id><institution>Alfred P. Sloan Foundation</institution></institution-wrap></funding-source><award-id>FG-2015-65496</award-id><principal-award-recipient><name><surname>Churchland</surname><given-names>Mark M</given-names></name></principal-award-recipient></award-group><award-group id="fund3"><funding-source><institution-wrap><institution-id institution-id-type="FundRef">http://dx.doi.org/10.13039/100000893</institution-id><institution>Simons Foundation</institution></institution-wrap></funding-source><award-id>542963</award-id><principal-award-recipient><name><surname>Churchland</surname><given-names>Mark M</given-names></name></principal-award-recipient></award-group><award-group id="fund4"><funding-source><institution-wrap><institution>NIH</institution></institution-wrap></funding-source><award-id>1U19NS104649</award-id><principal-award-recipient><name><surname>Churchland</surname><given-names>Mark M</given-names></name></principal-award-recipient></award-group><award-group id="fund5"><funding-source><institution-wrap><institution>NIH</institution></institution-wrap></funding-source><award-id>5T32NS064929</award-id><principal-award-recipient><name><surname>Russo</surname><given-names>Abigail A</given-names></name></principal-award-recipient></award-group><award-group id="fund6"><funding-source><institution-wrap><institution-id institution-id-type="FundRef">http://dx.doi.org/10.13039/100001201</institution-id><institution>Kavli Foundation</institution></institution-wrap></funding-source><principal-award-recipient><name><surname>Churchland</surname><given-names>Mark M</given-names></name></principal-award-recipient></award-group><award-group id="fund7"><funding-source><institution-wrap><institution-id institution-id-type="FundRef">http://dx.doi.org/10.13039/100000893</institution-id><institution>Simons Foundation</institution></institution-wrap></funding-source><award-id>325171</award-id><principal-award-recipient><name><surname>Churchland</surname><given-names>Mark M</given-names></name><name><surname>Cunningham</surname><given-names>John</given-names></name></principal-award-recipient></award-group><award-group id="fund8"><funding-source><institution-wrap><institution>Swiss National Science Foundation</institution></institution-wrap></funding-source><award-id>P2SKP2 178197</award-id><principal-award-recipient><name><surname>Saxena</surname><given-names>Shreya</given-names></name></principal-award-recipient></award-group><award-group id="fund9"><funding-source><institution-wrap><institution>Swiss National Science Foundation</institution></institution-wrap></funding-source><award-id>P400P2 186759</award-id><principal-award-recipient><name><surname>Saxena</surname><given-names>Shreya</given-names></name></principal-award-recipient></award-group><funding-statement>The funders had no role in study design, data collection and interpretation, or the decision to submit the work for publication.</funding-statement></funding-group><custom-meta-group><custom-meta specific-use="meta-only"><meta-name>Author impact statement</meta-name><meta-value>While performing learned movements at different speeds, motor cortex population activity can be understood based on the need to generate muscle activity via smooth, well-behaved dynamics.</meta-value></custom-meta></custom-meta-group></article-meta></front><body><sec id="s1" sec-type="intro"><title>Introduction</title><p>We can often perform the same action at different speeds. This flexibility requires multiple adjustments: scaling the pace of muscle activity while also altering its magnitude and temporal pattern. Given that movement speed can typically be adjusted continuously, it seems unlikely that the brain employs a separate solution for each speed. What might a unified solution look like, and how might it be reflected in the structure of neural population activity?</p><p>How this question should be approached interacts with a more basic issue: our understanding of the relationship between cortical activity and movement. This understanding has recently been in flux. Hypotheses that regard neural responses primarily as representations of controlled variables (for example, hand velocity or muscle activity) have been challenged by hypotheses that view neural responses as reflecting the evolution of movement-generating dynamical systems (<xref ref-type="bibr" rid="bib8">Bruno et al., 2017</xref>; <xref ref-type="bibr" rid="bib33">Pandarinath et al., 2018</xref>; <xref ref-type="bibr" rid="bib53">Sussillo et al., 2015</xref>; <xref ref-type="bibr" rid="bib41">Russo et al., 2018</xref>; <xref ref-type="bibr" rid="bib30">Michaels et al., 2019</xref>; <xref ref-type="bibr" rid="bib9">Churchland et al., 2012</xref>; <xref ref-type="bibr" rid="bib24">Lillicrap and Scott, 2013</xref>; <xref ref-type="bibr" rid="bib47">Shenoy et al., 2013</xref>; <xref ref-type="bibr" rid="bib18">Hall et al., 2014</xref>). This ‘network-dynamics’ perspective seeks to explain neural activity in terms of the underlying computational mechanisms that generate outgoing commands. Based on observations in simulated networks, it is hypothesized that the dominant aspects of neural activity are shaped largely by the needs of the computation, with representational signals (for example, outgoing commands) typically being small enough that few neurons show activity that mirrors network outputs. The network-dynamics perspective explains multiple response features that are difficult to account for from a purely representational perspective (<xref ref-type="bibr" rid="bib9">Churchland et al., 2012</xref>; <xref ref-type="bibr" rid="bib53">Sussillo et al., 2015</xref>; <xref ref-type="bibr" rid="bib41">Russo et al., 2018</xref>; <xref ref-type="bibr" rid="bib29">Michaels et al., 2016</xref>). Yet the purely representational perspective did convey a practical advantage: it readily supplied predictions in new situations. For example, when movement speed increases, a neuron that represents velocity should simply reflect the increased velocity. A neuron that represents muscle activity should simply reflect the new pattern of muscle activity. Can the dynamical perspective make similarly clear (and presumably different) predictions?</p><p>Computations performed by artificial – and presumably real – networks can often be described by flow-fields in state space. Because these flow-fields shape population trajectories, and because empirical population trajectories are readily plotted and analyzed in state-space, this affords a means of comparing data with predictions. Goal-driven networks – that is, networks trained to perform a computation intended to be analogous to that performed by a biological neural population (<xref ref-type="bibr" rid="bib58">Zipser and Andersen, 1988</xref>; <xref ref-type="bibr" rid="bib56">Yamins et al., 2014</xref>; <xref ref-type="bibr" rid="bib26">Lindsay and Miller, 2018</xref>) – are increasingly used to model computations requiring internal or external feedback (<xref ref-type="bibr" rid="bib28">Mante et al., 2013</xref>; <xref ref-type="bibr" rid="bib53">Sussillo et al., 2015</xref>; <xref ref-type="bibr" rid="bib27">Maheswaranathan et al., 2019</xref>; <xref ref-type="bibr" rid="bib49">Sohn et al., 2019</xref>; <xref ref-type="bibr" rid="bib22">Kao et al., 2020</xref>; <xref ref-type="bibr" rid="bib30">Michaels et al., 2019</xref>; <xref ref-type="bibr" rid="bib39">Rajan et al., 2016</xref>; <xref ref-type="bibr" rid="bib35">Perich and Rajan, 2020</xref>). Although such models typically lack detailed anatomical realism, they yield solutions that can be understood through reverse engineering and afford comparisons with data. The continuous control of movement speed presents a situation where this approach might hope to generate particularly clear predictions because the range of possible solutions is likely to be constrained: network dynamics must be ‘well-behaved’ in some key ways. First, the network solution should change continuously with speed. The alternative – a distinct solution for each speed – is likely incompatible with the fact that speed can be continuously adjusted. Similarly, network solutions should gracefully interpolate between speeds used during training. Finally, noise should not cause large errors or the generation of the wrong speed. All these forms of robustness are expected to benefit from smoothly varying underlying dynamics, resulting in population activity with very low ‘trajectory tangling’ such that similar states are never associated with dissimilar derivatives (<xref ref-type="bibr" rid="bib41">Russo et al., 2018</xref>).</p><p>We sought to determine whether these constraints allow network solutions to predict empirical responses. We trained monkeys to perform a cycling task at different speeds, and trained recurrent neural networks to generate the observed muscle-activity patterns, with speed instructed by a graded input. All such networks adopted a strategy with two prominent characteristics. First, the network trajectory for every speed resembled an ellipse in the dominant two dimensions, and was strikingly invariant to the shape of the muscle-trajectory output. Second, individual-speed trajectories were separated by a translation in a third dimension. We confirmed that this structure reflected stable input-dependent limit cycles, maintained low trajectory tangling, and reflected the need for solution continuity. We then compared network solutions with population activity recorded from motor cortex. At both single-neuron and population levels, neural activity matched network activity more closely than it did muscle activity. Neural trajectories had the same within-speed and across-speed organization as network trajectories, and also displayed very low trajectory tangling. Thus, while the dominant structure of motor cortex activity does not resemble that of muscle activity, it closely matches solutions adopted by networks that employ dynamics to generate muscle activity. These findings demonstrate that features of good network-level solutions can provide strong and successful predictions regarding empirical neural activity.</p></sec><sec id="s2" sec-type="results"><title>Results</title><sec id="s2-1"><title>Task, behavior, muscle activity, and single neuron responses</title><p>We trained two rhesus macaque monkeys to grasp a pedal with their hand and cycle for juice reward (<xref ref-type="bibr" rid="bib41">Russo et al., 2018</xref>; <xref ref-type="bibr" rid="bib42">Russo et al., 2020</xref>). Cycling produced movement through a virtual landscape (<xref ref-type="fig" rid="fig1">Figure 1a</xref>). Landscape color indicated whether forward virtual movement required ‘forward’ cycling or ‘backward’ cycling, performed in alternating blocks. Monkeys cycled continuously to track a moving target, in contrast to <xref ref-type="bibr" rid="bib41">Russo et al., 2018</xref> and <xref ref-type="bibr" rid="bib42">Russo et al., 2020</xref> where targets were stationary. Target speed was constant within long (30 second) trials. There was natural within-trial variation in cycling speed. Monkeys would often slow down modestly for a few cycles, fall behind the target, then speed up modestly for a few cycles. As a result, there was an essentially continuous range of cycling speeds within each session. To allow analysis, data were divided into individual cycles, beginning and ending with the pedal oriented straight down. Cycles were classified into eight speed bins, spaced in ~0.2 Hz intervals. Bins were chosen to span the relevant range for each direction and monkey and are thus labeled by number (1–8, from ~0.8–2.1 Hz) rather than frequency. Cycles within a bin were scaled to have the same duration, but the values of key variables (e.g., velocity, firing rate) were computed before scaling and never altered. Cycles where there was a large change in speed were not analyzed, ensuring that trials within a bin had nearly identical velocity profiles (<xref ref-type="fig" rid="fig1">Figure 1b</xref>).</p><fig id="fig1" position="float"><label>Figure 1.</label><caption><title>Illustration of behavior and neural activity.</title><p>(<bold>a</bold>) Schematic of the task, which required cycling at a range of different speeds for juice reward. (<bold>b</bold>) Behavior and neural activity for one example neuron (C024a) and three cycling speeds. Data are for Monkey C, cycling forward. All data are plotted after temporal alignment within each speed bin. For visualization, plots show just over one cycle. Top: vertical hand velocity for every trial in the three speed bins. These overlap heavily, forming an envelope spanning trial-to-trial variability. Rasters show spikes for ~25 trials per speed bin. Color denotes speed bin, with faster speeds in <italic>red</italic> and slower in <italic>blue</italic>. Bottom: <italic>colored</italic> traces plot the trial-averaged firing rate. Shaded envelopes for firing rates indicate the standard error of the mean (SEM). Vertical calibration indicates 10 spikes/s.</p></caption><graphic mime-subtype="tiff" mimetype="image" xlink:href="elife-67620-fig1-v2.tif"/></fig><p>Well-isolated single units (49 and 52 neurons for Monkeys C and D) were sequentially recorded from motor cortex, including sulcal and surface primary motor cortex and the immediately adjacent aspect of dorsal premotor cortex. Cycling evoked particularly strong responses. Nearly all neurons that could be isolated were task-modulated. A clear, repeatable structure in spiking activity was apparent across single cycles (<xref ref-type="fig" rid="fig1">Figure 1b</xref>, raster plots). We computed the firing rate of each neuron by averaging across cycles within a speed bin (median of 84 and 80 trials, monkey C and D). This yielded a time-varying trial-averaged firing rate (<xref ref-type="fig" rid="fig1">Figure 1b</xref>, bottom) and standard error (envelopes are narrow and thus barely visible).</p><p>Neural responses were heterogeneous (<xref ref-type="fig" rid="fig2">Figure 2</xref>). In some cases, response magnitude was largest at the fastest cycling speeds (<xref ref-type="fig" rid="fig2">Figure 2a</xref>, <italic>top</italic>). In others it was largest for the slowest speeds (<xref ref-type="fig" rid="fig2">Figure 2c</xref>, <italic>bottom</italic>) or changed only modestly (<xref ref-type="fig" rid="fig2">Figure 2a</xref>, <italic>bottom</italic>). A given neuron could show different relationships with speed depending on cycling direction (<xref ref-type="fig" rid="fig2">Figure 2b</xref>). Response complexity was not due to noise; standard errors were typically small (flanking envelopes are narrow enough to often be barely visible). Across all neurons, 33 showed an increase in response magnitude with speed for both cycling directions, 24 showed a decrease for both, and 44 scaled oppositely. Responses could be monophasic or multiphasic depending on the neuron, cycling direction, and speed. Temporal response patterns were typically similar, other than temporal scaling, for neighboring speed bins. More dramatic changes in temporal response pattern could occur across the full range of speeds. For example, responses could be multiphasic at slow speeds but monophasic at faster speeds (<xref ref-type="fig" rid="fig2">Figure 2b</xref>, <italic>bottom</italic>). Responses of major upper-arm muscles were also heterogeneous (15 and 33 recordings in monkeys C and D; <xref ref-type="fig" rid="fig2">Figure 2d–f</xref>). A key question is whether neural activity reflects structure beyond that present in the muscles and, if so, whether that structure can be predicted by network-level solutions.</p><fig id="fig2" position="float"><label>Figure 2.</label><caption><title>Speed-dependent neural and muscle activity patterns during cycling.</title><p>(<bold>a–c</bold>) Neural and (<bold>d–f</bold>) muscle activity across all eight speeds. Mean across-trial firing rate (or mean across-trial muscle activity) is plotted versus time for each speed bin. Envelopes give SEM across trials. Each panel plots activity for one example neuron or muscle. In each panel, data for forward cycling is plotted on top and data for backward cycling is plotted on bottom. All data is for monkey C. Traces are colored red to blue according to speed. All vertical calibrations for neural activity are 10 spikes/s. Muscle activity scale is arbitrary but preserved across all traces for a given muscle.</p></caption><graphic mime-subtype="tiff" mimetype="image" xlink:href="elife-67620-fig2-v2.tif"/></fig></sec><sec id="s2-2"><title>Generating predictions using goal-driven modeling</title><p>We trained recurrent neural networks, via backpropagation through time, to produce the empirical patterns of muscle activity across speeds (<xref ref-type="fig" rid="fig3">Figure 3a</xref>). Target outputs were the projection of muscle population activity onto its top 6 principal components (PCs). Speed was instructed by the magnitude of a simple static input. This choice was made both for simplicity and by rough analogy to the locomotor system; spinal pattern generation can be modulated by constant inputs from supraspinal areas (<xref ref-type="bibr" rid="bib16">Grillner, 1997</xref>). Of course, cycling is very unlike locomotion and little is known regarding the source or nature of the commanding inputs. We thus explore other possible input choices below.</p><fig-group><fig id="fig3" position="float"><label>Figure 3.</label><caption><title>Goal-driven neural network solutions.</title><p>(<bold>a</bold>) Recurrent neural networks (RNNs) received a constant input whose level instructed cycling speed. Network-output targets were the top six muscle population factors (the projection of muscle population activity onto each of the top six PCs). Trajectories for the top three factors are plotted in state space, colored blue-to-red with increasing speed. Network outputs (not plotted for simplicity) were nearly identical to the target factors. (<bold>b</bold>) Example, for one neuron and all speeds, of fitting single-neuron activity with network factors (<italic>green</italic>) or muscle factors (<italic>brown</italic>). Fits were obtained by regressing the neuron’s activity against the top three factors (network or muscle). The R<sup>2</sup> values shown here correspond to the example neuron. For the analyses below, we computed the population R<sup>2</sup> across all neurons. The population R<sup>2</sup> is the mean R<sup>2</sup> across neurons, but taking into account response magnitudes (for example, a poor fit for a low-rate neuron has less impact). (<bold>c</bold>) Difference in population R<sup>2</sup> for every network. The two cycling directions and two monkeys provided four network-output targets. For each we trained many networks. For each such network, the difference in population R<sup>2</sup> for network-factor fits versus muscle-factor fits is plotted as a single point. The analysis was performed twice: once when fitting using two factors (<italic>black circles</italic>) and once when fitting using three factors (<italic>blue circles</italic>). Filled circles denote p&lt;0.05 (paired one-tailed t-test with n=8 speeds) when testing whether network factors provided significantly better decoding than muscle factors. (<bold>d</bold>) Network trajectories for four example networks projected onto global PCs 1, 2, and 3 (the dominant dimensions across all speeds). Networks employ non-identical solutions due to different weight initializations before training. (<bold>e</bold>) Network trajectories are stable. <italic>Left:</italic> The network was perturbed so that it started at different initial states. All trajectories converge to the same limit cycle. Network input corresponded to the slow speed. <italic>Right:</italic> Same, but repeated for all eight input levels. Trajectories converge to an input-dependent limit cycle. (<bold>f</bold>) Using perturbations to explore network strategy. We delivered two perturbations to the network state. The rhythm-generation perturbation (<italic>orange</italic>) was designed to strongly impact activity in the plane containing the elliptical path (the plane defined by the top two PCs for the speed being examined) while remaining orthogonal to the muscle readout. The muscle-generation perturbation (<italic>green</italic>) was designed to do the opposite: strongly impact activity in one of the muscle readout dimensions while remaining orthogonal to the top two PCs. Traces versus time (<italic>middle</italic>) show network output with no perturbation (<italic>black</italic>), and the two perturbations (<italic>orange</italic> and <italic>green</italic>). State-space trajectories (<italic>right</italic>) plot network population activity in the top two PCs, which capture the dominant elliptical trajectory. Trajectories begin at the time of the perturbation. Consistent with its design, the muscle-generation perturbation had no immediate impact in this plane: the <italic>green</italic> trajectory begins in the same location as the black (unperturbed) trajectory. This reflects the fact that the muscle-generation perturbation had a large impact in other dimensions, but almost no influence on the future evolution of the elliptical trajectory. In contrast, the rhythm-generation perturbation had a large immediate impact on the elliptical trajectory, and permanently altered its phase: the <italic>orange</italic> trajectory ends at an earlier phase than the <italic>black</italic> trajectory, even though both are plotted for the same time-span.</p></caption><graphic mime-subtype="tiff" mimetype="image" xlink:href="elife-67620-fig3-v2.tif"/></fig><fig id="fig3s1" position="float" specific-use="child-fig"><label>Figure 3—figure supplement 1.</label><caption><title>Trajectory tangling values for RNN trajectories vs EMG trajectories in the global (12 dimensional) subspace.</title><p>Each point shows tangling for one time point. Points are shown for all times during movement (sampled every 25ms) for all eight conditions. <italic>Black line</italic> indicates unity slope. Data are from one example network of the type shown in <xref ref-type="fig" rid="fig3">Figure 3a and d</xref>. Results are nearly identical across all networks of this type. Trajectory tanging was computed ‘globally’, both within and between different speeds.</p></caption><graphic mime-subtype="tiff" mimetype="image" xlink:href="elife-67620-fig3-figsupp1-v2.tif"/></fig><fig id="fig3s2" position="float" specific-use="child-fig"><label>Figure 3—figure supplement 2.</label><caption><title>Network trajectories for networks receiving input commands other than the graded-speed command used for the networks in <xref ref-type="fig" rid="fig3">Figure 3</xref>.</title><p>In all cases, target outputs were the same as in the original networks: the top six muscle-activity factors. (<bold>a</bold>) Illustration of networks that received forcing sinusoidal inputs: a sine and a cosine with the same period as the output targets. Example inputs are shown for slow (<italic>blue</italic>) and fast (<italic>red</italic>) cycling speeds. Each of these two inputs (the sine and cosine) was conveyed by a distinct input vector (inputs weight were initialized randomly). (<bold>b</bold>) Three example solutions for networks of this type, projected onto global PCs 1, 2, and 3. (<bold>c</bold>) Illustration of networks that received a distinct “one-hot encoded” input for each speed. The total number of inputs was equal to the number of trained speeds. Each input was conveyed by a distinct vector (initialized randomly, and thus close to orthogonal), with only one speed being ‘on’ for any given trial. (<bold>d</bold>) Three example network solutions for networks of this type.</p></caption><graphic mime-subtype="tiff" mimetype="image" xlink:href="elife-67620-fig3-figsupp2-v2.tif"/></fig></fig-group><p>Each network was trained to produce muscle activity for one cycling direction. Networks could readily be trained to produce muscle activity for both cycling directions by providing separate forward- and backward-commanding inputs (each structured as in <xref ref-type="fig" rid="fig3">Figure 3a</xref>). This simply yielded separate solutions for forward and backward, each similar to that seen when training only that direction. For simplicity, and because all analyses of data involve within-direction comparisons, we only consider networks trained to produce muscle activity for one direction at a time. Networks were trained across many simulated ‘trials’, each with an unpredictable number of cycles. This discouraged non-periodic solutions, which optimization might use if the number of cycles were fixed and small. We trained 25 networks for each monkey and direction (100 networks total). Of these, 96 successfully performed the task after 700,000 training iterations (24 and 25 for Monkey C, forward and backward; 22 and 25 for Monkey D, forward and backward). Success was defined as &lt;0.01 normalized mean-squared error between outputs and targets (i.e. an R<sup>2</sup> &gt;0.99). Because 6 PCs captured ~95% of the total variance in the muscle population (94.6% and 94.8% for monkey C and D), linear readouts of network activity yielded the activity of all recorded muscles with high fidelity. Networks differed in their initial random weights, and thus showed non-identical final solutions.</p><p>No attempt was made at detailed realism: networks employed a single cell type, all-to-all connections, and no differentiation between feedback due to local versus long-range or re-afferent sources. This allowed us to focus on the form of network-level solutions rather than their implementation. A natural first question regards the heterogenous single-neuron responses: does the network-based hypothesis provide improved explanatory power relative to the baseline hypothesis that neural activity is an upstream reflection of muscle activity? Regardless of whether this ‘muscle-encoding’ hypothesis is taken literally, it provides a stringent bar by which to judge model success, because neural and muscle activity naturally share many features.</p><p>Under both the network-based and muscle-encoding hypotheses, single-neuron responses are predicted to reflect a set of underlying factors: <inline-formula><mml:math id="inf1"><mml:msub><mml:mrow><mml:mi>r</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>)</mml:mo><mml:mo>=</mml:mo><mml:mrow><mml:msubsup><mml:mo>∑</mml:mo><mml:mrow><mml:mi>j</mml:mi></mml:mrow><mml:mrow/></mml:msubsup><mml:mrow><mml:msub><mml:mrow><mml:mi>w</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mi> </mml:mi><mml:msub><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula> , where <inline-formula><mml:math id="inf2"><mml:msub><mml:mrow><mml:mi>r</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>)</mml:mo></mml:math></inline-formula> is the time-varying response of the <inline-formula><mml:math id="inf3"><mml:msup><mml:mrow><mml:mi>i</mml:mi></mml:mrow><mml:mrow><mml:mi>t</mml:mi><mml:mi>h</mml:mi></mml:mrow></mml:msup></mml:math></inline-formula> neuron, <inline-formula><mml:math id="inf4"><mml:msub><mml:mrow><mml:mi>w</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:math></inline-formula> are weights, and <inline-formula><mml:math id="inf5"><mml:msub><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>)</mml:mo></mml:math></inline-formula> are the factors. The two hypotheses can be compared by regressing empirical neural activity versus the relevant underlying factors: network-based factors or muscle-based factors. To identify those factors, we applied Principal Component Analysis (PCA) to the relevant population (muscle or network) and considered the top two or three PCs. Within a cycling direction, three PCs explain &gt;80% of the variance in both muscles and networks. Projections onto the muscle-derived PCs capture the dominant factors within the muscle population (the signals most strongly shared amongst muscles). Similarly, projections onto the network-derived PCs capture the dominant factors within the simulated network. The coevolution of the top three muscle factors is shown in state-space in <xref ref-type="fig" rid="fig3">Figure 3a</xref> (<italic>right</italic>). Note that while muscle factors are target network outputs, they differ from the top network factors (<xref ref-type="fig" rid="fig3">Figure 3d</xref>). It is thus possible for a neuron’s response to be fit poorly by muscle factors but well by network factors (<xref ref-type="fig" rid="fig3">Figure 3b</xref>).</p><p>Neural responses were overall better accounted for by network factors (<xref ref-type="fig" rid="fig3">Figure 3c</xref>). This improvement, relative to the muscle factors, was statistically significant for the vast majority of individual networks (p&lt;0.05 for 90/96 networks, paired t-test with n=8 speeds, comparison using three PCs). This effect was clearest when considering the dominant signals (shown in <xref ref-type="fig" rid="fig3">Figure 3c</xref> for the first two PCs - <italic>black circles</italic> - and first three PCs - <italic>blue circles</italic>) but remained present when using more PCs. For example, when using six PCs, all networks provided an improvement over the muscles for monkey C, and all but one network provided an improvement for monkey D. These advantages were maintained if we assessed generalization <inline-formula><mml:math id="inf6"><mml:msup><mml:mrow><mml:mi>R</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msup></mml:math></inline-formula> (for left out conditions) to guard against overfitting.</p><p>Although network factors essentially always provided a better basis for explaining neural activity, the degree to which this was true varied across monkeys, cycling directions, and networks. For monkey C, the improvement in <inline-formula><mml:math id="inf7"><mml:msup><mml:mrow><mml:mi>R</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msup></mml:math></inline-formula> ranged from 0.03 to 0.12 for backward cycling and from 0.41 to 0.55 for forward cycling. For monkey D, <inline-formula><mml:math id="inf8"><mml:msup><mml:mrow><mml:mi>R</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msup></mml:math></inline-formula> differences ranged from 0.05 to 0.14 for both cycling directions. This range highlights that different networks found quantitatively different solutions. The same is presumably true of the biological networks in the two monkeys. The critical question is thus not whether factors match exactly, but whether the computationally important features of network solutions are shared with the neural population responses. To address this, we seek to understand what network solutions look like and why they are successful.</p></sec><sec id="s2-3"><title>Understanding network solutions</title><p>Recurrent-network solutions tend to have the following useful characteristic: a basic understanding does not require considering every unit and connection, but can be obtained by considering a smaller number of factors, each a weighted sum of the activity of all units (<xref ref-type="bibr" rid="bib52">Sussillo and Barak, 2013</xref>; <xref ref-type="bibr" rid="bib10">DePasquale et al., 2016</xref>; <xref ref-type="bibr" rid="bib27">Maheswaranathan et al., 2019</xref>; <xref ref-type="bibr" rid="bib28">Mante et al., 2013</xref>). By ascertaining how and why population trajectories behave in this ‘factor space’, one can often determine how the network solves the task. Assuming factors are defined wisely, the response of each individual unit is approximately a weighted sum of factors. Thus, if one understands the factors, individual-unit responses are no longer mysterious. There are many reasonable ways of obtaining factors, but PCA is commonly used because it ensures factors will be explanatory of single-unit responses (‘maximizing captured variance’ is equivalent to ‘minimizing single-neuron reconstruction error’). We used PCA above to identify network factors and show that they are explanatory not only of their own single-unit responses, but of empirical single-neuron responses as well. However, knowing that network factors are quantitatively explanatory means little unless one also understands why those factors behave as they do. Thus, we now turn to the task of understanding network solutions in the factor-space obtained by PCA.</p><p>The major structural features shared by all solutions were visible in the top three PCs (<xref ref-type="fig" rid="fig3">Figure 3d</xref>). The network trajectory for each speed always resembled an ellipse (revealed by the gray ‘shadows’). An elliptical trajectory is not inevitable; the rhythmic task ensures a repeating trajectory but not an ellipse. Indeed, muscle-factor trajectories (<xref ref-type="fig" rid="fig3">Figure 3a</xref>, <italic>right</italic>) were not particularly elliptical. For every network, trajectories were better fit by ellipses than were the corresponding muscle trajectories (p&lt;0.05; paired, one-sided Wilcoxon signed rank test comparing <inline-formula><mml:math id="inf9"><mml:msup><mml:mrow><mml:mi>R</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msup></mml:math></inline-formula> values). Elliptical network trajectories formed stable limit cycles with a period matching that of the muscle activity at each speed. We confirmed stability by altering network activity, something only rarely possible in physiological circuits (<xref ref-type="bibr" rid="bib8">Bruno et al., 2017</xref>). When the network state was moved off a cycle, the trajectory converged back to that cycle. For example, in <xref ref-type="fig" rid="fig3">Figure 3e</xref> (<italic>left</italic>) perturbations never caused the trajectory to permanently depart in some new direction or fall into some other limit cycle; each perturbed trajectory (<italic>blue</italic>) returned to the stable limit cycle (<italic>black</italic>).</p><p>The ability of elliptical network trajectories to generate non-elliptical muscle trajectories seems counter-intuitive but is expected (<xref ref-type="bibr" rid="bib41">Russo et al., 2018</xref>). Elliptical trajectories set the basic rhythm and provide the fundamental frequency, while additional ‘muscle-encoding’ signals that support complex outputs occupy dimensions beyond just the first three PCs. To illustrate, we consider a single cycling speed (<xref ref-type="fig" rid="fig3">Figure 3f</xref>) and perturb network activity in one of two directions. ‘Rhythm-generation perturbations’ (<italic>orange</italic>) overlapped with the plane of the elliptical trajectory but were orthogonal to the muscle readout. ‘Muscle-generation perturbations’ (<italic>green</italic>) overlapped with a muscle readout direction but were orthogonal to the elliptical trajectory (the perturbed direction involves PCs beyond the first three and is not the same direction that separates trajectories across speeds).</p><p>As expected, muscle-generation perturbations caused a large immediate change in muscle readout (middle subpanel, <italic>green</italic>). Readouts then rapidly returned to normal and the rhythm continued at its original phase. In the first two PCs, the elliptical neural trajectory was nearly unchanged following the perturbation (<italic>green</italic> and <italic>black</italic> trajectories overlap almost perfectly). Thus, muscle-generation perturbations impact a direction in network state-space that is critical for network outputs but interacts little with the dynamics that set the overall rhythm.</p><p>Rhythm-generation perturbations had only a small immediate effect on readouts, yet permanently altered the phase of network activity. This was reflected in both the readout (middle subpanel, <italic>orange</italic>) and the elliptical trajectory (right subpanel). Thus, the network solution involves two components. The phase of the elliptical trajectory sets the phase of the output. Muscle readouts draw from the elliptical trajectory, but also draw heavily from orthogonal dimensions that contain smaller higher frequency signals. These smaller off-ellipse features allow the network to generate non-sinusoidal activity patterns that differ across muscles. This is a natural strategy that allows a simple, stable, elliptical trajectory to generate multiple temporally structured outputs (<xref ref-type="bibr" rid="bib41">Russo et al., 2018</xref>; <xref ref-type="bibr" rid="bib25">Lindén et al., 2021</xref>). Trajectories are stable only when the speed-instructing input is present; trajectories return to baseline (along with readouts) when that input is extinguished (not shown).</p><p>For all networks, a translation separated limit cycles for different speeds. Network input determined which of these ‘stacked’ limit cycles was stable (<xref ref-type="fig" rid="fig3">Figure 3e</xref>, <italic>right</italic>). Stacking of elliptical trajectories is a natural strategy for adjusting speed (<xref ref-type="bibr" rid="bib27">Maheswaranathan et al., 2019</xref>; <xref ref-type="bibr" rid="bib52">Sussillo and Barak, 2013</xref>) for two reasons. First, unlike an arbitrary dynamical system, a recurrent network has no straightforward mechanism allowing an additive input to scale flow-field magnitude. Altering trajectory speed thus requires moving to a different region of state-space (<xref ref-type="bibr" rid="bib40">Remington et al., 2018</xref>). Second, the network’s target output (muscle activity) does not simply speed up for faster speeds; it changes magnitude and temporal pattern. It would thus be insufficient to traverse the same trajectory more rapidly, even if this were possible. By shifting the overall elliptical trajectory, the network can change both output frequency and output pattern.</p><p>The stacked-elliptical network solution can also be understood at a more abstract level: it provides low trajectory tangling. High trajectory tangling is defined as different moments sharing a similar location in state-space but with very different derivatives. In networks where the present state determines the future state via internal recurrence or external feedback (i.e. in a network that relies on strong dynamics) smooth noise-robust solutions require avoiding trajectory tangling (<xref ref-type="bibr" rid="bib41">Russo et al., 2018</xref>). Our networks had to rely on strong dynamics because their input lacked sufficient temporal structure to specify the output. Accordingly, all networks adopted solutions where network trajectory tangling was dramatically lower than muscle trajectory tangling (paired, one-tailed t-test; p&lt;10<sup>–10</sup> for every network; one example network shown in <xref ref-type="fig" rid="fig3s1">Figure 3—figure supplement 1</xref>). Elliptical limit cycles ensured low trajectory tangling within a given speed (a circle is the least-tangled rhythmic trajectory) and separation between limit cycles ensured low tangling between speeds. This latter fact can be appreciated by considering the implications of traversing the same trajectory at different speeds: the same set of states would be associated with different derivatives.</p><p>A natural solution for maintaining low tangling is thus elliptical limit cycles separated by a translation. We saw this solution in all networks described above and also when networks were trained in the presence of noise and thus forced to adopt noise-robust solutions. The solution not only conveys noise-robustness, it also allows continuous control of speed. Inputs between the trained input levels produced trajectories ‘between’ those shown in <xref ref-type="fig" rid="fig3">Figure 3d</xref>, which in turn generated outputs at intermediate frequencies. Similarly, a ramping input produced trajectories that steadily shifted and increased in speed (not shown). Thus, networks could adjust their speed anywhere within the trained range, and could even do so on the fly. In principle, networks did not have to find this unified solution. In practice, training on eight speeds was sufficient to always produce it. This is not necessarily expected. For example in <xref ref-type="bibr" rid="bib53">Sussillo et al., 2015</xref>, solutions were realistic only when multiple regularization terms encouraged dynamical smoothness. In contrast, for the present task, the stacked-elliptical structure consistently emerged regardless of whether we applied implicit regularization by training with noise. Presumably, the continuously valued input helped make the unified solution natural, such that optimization always found it.</p><p>The above interpretation is supported by the fact that the unified solution did not emerge if networks received unrelated inputs (that is, activation of a different input vector) for each speed. Those networks adopted distinct trajectories for each speed (and thus low tangling) but lacked any clear relationship between adjacent speeds (<xref ref-type="fig" rid="fig3s2">Figure 3—figure supplement 2c,d</xref>). Despite some disadvantages, in principle the nervous system could use a disjoint solution. Indeed, in some tasks we have observed distinct condition-specific solutions even when not obviously necessary (<xref ref-type="bibr" rid="bib54">Trautmann et al., 2022</xref>). To explore the dependence of the solution on inputs, we also simulated networks that received a different plausible input: simple rhythmic commands (two sinusoids in quadrature) to which networks had to phase-lock their output. Clear orderly stacking with speed was prominent in some networks but not others (<xref ref-type="fig" rid="fig3s2">Figure 3—figure supplement 2a,b</xref>). A likely reason for this solution variability is that rhythmic-input-receiving networks had two ‘choices’. First, they could use the same stacked-elliptical solution, and simply phase-lock that solution to their inputs. Second, they could adopt solutions with less-prominent stacking (e.g., they could rely primarily on ‘tilting’ into new dimensions, a strategy we discuss further in a subsequent section). In summary, the stacked-elliptical solution is not inevitable. There were some modeling choices for which the stacked-elliptical solution always occurred (the graded speed-specifying input), some for which it often occurred (simple rhythmic inputs) and some for which it never occurred (distinct speed-specifying inputs). Thus, there is no guarantee that the empirical data will display a stacked-elliptical structure, both because not all networks did, and because the network-based perspective might itself be incorrect.</p><p>Yet, while not inevitable, stacked-elliptical structure emerges as a strong prediction of the network perspective under two assumptions. First, that the brain wishes to employ a solution that affords continuity across speeds. Second, that motor cortex is a central participant in the dynamics that generate both the rhythm and the outgoing commands. Networks that embodied these assumptions always displayed the stacked-elliptical structure. As we will explore in a later section, this remained true under a variety of assumptions regarding potential sensory feedback. An important subtlety is that it was not the case that all networks with stacked elliptical structure were performing the identical computation. The flow-field could differ in its stability, and of course network output depended on the monkey / cycling direction. The stacked-elliptical structure is thus not evidence for a specific computation, but rather constitutes a motif that is observed consistently because it is beneficial regardless of the exact computation. This consistency yields straightforward predictions. Qualitatively, empirical neural trajectories should be dominated by elliptical structure within each speed, and separated by a translation across speeds. Quantitatively, this organization should yield trajectory tangling that is low within individual-speed trajectories, and remains low across speeds.</p></sec><sec id="s2-4"><title>Neural trajectories are elliptical</title><p>We first consider the simplest prediction: the dominant structure of the empirical neural population trajectory, for every speed, should be elliptical regardless of the structure of muscle activity. Neural population activity, for a given time and cycling speed, was a vector containing the trial-averaged response of every sequentially recorded neuron for that time and speed. Muscle population activity was defined analogously. The consistency of behavior (<xref ref-type="fig" rid="fig1">Figure 1b</xref>) made it reasonable to combine trial-averaged responses from sequentially recorded neurons (and muscles) into a unified population response. To identify the dominant shape of the trajectory for a given speed, we applied PCA to the population response for that condition only (that is, for only that speed and direction) and plotted the projection onto the first two PCs. This approach differs from the typical approach of applying PCA across multiple conditions (as was done in <xref ref-type="fig" rid="fig3">Figure 3</xref>) and allows us to focus on within-condition structure while ignoring (for now) across-condition structure.</p><p>Neural trajectories were approximately elliptical for every condition: all speeds, both cycling directions, and both monkeys (<xref ref-type="fig" rid="fig4">Figure 4</xref>). In contrast, muscle trajectories exhibited a variety of shapes across speeds and directions, reflecting the different patterns of muscle activity necessary to generate the differing movements. Neural trajectories were more elliptical than muscle trajectories for every condition. This difference was significant for both monkeys (p&lt;0.0001; paired, one-sided Wilcoxon signed rank test comparing <inline-formula><mml:math id="inf10"><mml:msup><mml:mrow><mml:mi>R</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msup></mml:math></inline-formula> values when fitting with an ellipse).</p><fig-group><fig id="fig4" position="float"><label>Figure 4.</label><caption><title>Comparison of individual-speed neural trajectories and muscle trajectories.</title><p>(<bold>a</bold>) Neural and muscle trajectories of monkey C. Trajectories were created by projecting the population response into the top two PCs, with PCs computed separately for each ‘condition’: that is, each speed bin and cycling direction. Each point within a trajectory corresponds to one time during the cycle for that condition. The time at which the pedal is at the top position is indicated by a black circle. Trajectories are shaded according to the instantaneous tangling value Q(t), computed for these two PCs and entirely within-speed (i.e. only tangling with other points within the same trajectory was considered). (<bold>b</bold>) Same analysis for monkey D.</p></caption><graphic mime-subtype="tiff" mimetype="image" xlink:href="elife-67620-fig4-v2.tif"/></fig><fig id="fig4s1" position="float" specific-use="child-fig"><label>Figure 4—figure supplement 1.</label><caption><title>Same as <xref ref-type="fig" rid="fig4">Figure 4</xref>, but trajectory tangling was computed in the top six PCs.</title><p>As in <xref ref-type="fig" rid="fig4">Figure 4</xref>, both PCA and tangling considered only a single speed at a time.</p></caption><graphic mime-subtype="tiff" mimetype="image" xlink:href="elife-67620-fig4-figsupp1-v2.tif"/></fig></fig-group><p>The network perspective predicts that neural trajectory tangling should remain low even if muscle trajectory tangling becomes high. The trajectories in <xref ref-type="fig" rid="fig4">Figure 4</xref> are colored according to their tangling at every time point, computed as:<disp-formula id="equ1"><mml:math id="m1"><mml:msub><mml:mrow><mml:mi>Q</mml:mi></mml:mrow><mml:mrow><mml:mi>s</mml:mi></mml:mrow></mml:msub><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>)</mml:mo><mml:mo>=</mml:mo><mml:munder><mml:mrow><mml:mi>m</mml:mi><mml:mi>a</mml:mi><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mi>t</mml:mi><mml:mi>`</mml:mi></mml:mrow></mml:munder><mml:mfrac><mml:mrow><mml:mo>|</mml:mo><mml:mo>|</mml:mo><mml:msub><mml:mrow><mml:mover accent="true"><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mo>˙</mml:mo></mml:mover></mml:mrow><mml:mrow><mml:mi>s</mml:mi></mml:mrow></mml:msub><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>)</mml:mo><mml:mo>-</mml:mo><mml:msub><mml:mrow><mml:mover accent="true"><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mo>˙</mml:mo></mml:mover></mml:mrow><mml:mrow><mml:mi>s</mml:mi></mml:mrow></mml:msub><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mi>`</mml:mi><mml:mo>)</mml:mo><mml:mo>|</mml:mo><mml:msup><mml:mrow><mml:msub><mml:mrow><mml:mo>|</mml:mo></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msub></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msup></mml:mrow><mml:mrow><mml:mo>|</mml:mo><mml:mo>|</mml:mo><mml:msub><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mi>s</mml:mi></mml:mrow></mml:msub><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>)</mml:mo><mml:mo>-</mml:mo><mml:msub><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mi>s</mml:mi></mml:mrow></mml:msub><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mi>`</mml:mi><mml:mo>)</mml:mo><mml:mo>|</mml:mo><mml:msup><mml:mrow><mml:msub><mml:mrow><mml:mo>|</mml:mo></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msub></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msup><mml:mo>+</mml:mo><mml:mi>ϵ</mml:mi></mml:mrow></mml:mfrac></mml:math></disp-formula></p><p>(<xref ref-type="disp-formula" rid="equ1">Equation 1</xref>) where <inline-formula><mml:math id="inf11"><mml:msub><mml:mrow><mml:mi>Q</mml:mi></mml:mrow><mml:mrow><mml:mi>s</mml:mi></mml:mrow></mml:msub><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>)</mml:mo></mml:math></inline-formula> is the tangling at time <inline-formula><mml:math id="inf12"><mml:mi>t</mml:mi></mml:math></inline-formula> for speed <inline-formula><mml:math id="inf13"><mml:mi>s</mml:mi></mml:math></inline-formula> and <inline-formula><mml:math id="inf14"><mml:msub><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mi>s</mml:mi></mml:mrow></mml:msub><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>)</mml:mo></mml:math></inline-formula> is the two-dimensional neural or muscle state. To focus on within-trajectory tangling, <inline-formula><mml:math id="inf15"><mml:mi>t</mml:mi><mml:mi>`</mml:mi></mml:math></inline-formula> indexes across times within the same cycling direction and speed. Muscle tangling was often high (<italic>purple</italic>) due to tightly kinked regions, trajectory crossings, or nearby segments traveling in opposing directions. Neural trajectory tangling was much lower. This was true for every condition and both monkeys (paired, one-tailed t-test; p&lt;0.001 for every comparison). This difference relates straightforwardly to the structure visible in the top two PCs; the effect is present when analyzing only those two PCs and remains similar when more PCs are considered (<xref ref-type="fig" rid="fig4s1">Figure 4—figure supplement 1</xref>). There is no straightforward relationship between high versus low trajectory tangling and high versus low dimensionality (<xref ref-type="bibr" rid="bib41">Russo et al., 2018</xref>). Instead, the degree of tangling depends primarily on the structure of trajectories in high-variance dimensions. Neural trajectories have lower tangling because their dominant structure is elliptical.</p></sec><sec id="s2-5"><title>Neural trajectories are similar across speeds</title><p>The dominant structure of neural activity was surprisingly insensitive to the details of muscle activity; neural trajectories had a similar shape for every speed, even though muscle trajectories did not. Ellipse eccentricity changed modestly across speeds but there was no strong or systematic tendency to elongate at higher speeds (for comparison, an approximately threefold elongation would be expected if one axis encoded cartesian velocity). We quantified trajectory-shape similarity among speeds within the same cycling direction (that is, within a column in <xref ref-type="fig" rid="fig4">Figure 4</xref>). Because PCA was applied per speed, trajectories have different bases, yet one can still ask whether they share the same shape. To do so, we take two trajectories, <inline-formula><mml:math id="inf16"><mml:msub><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mi>r</mml:mi><mml:mi>e</mml:mi><mml:mi>f</mml:mi></mml:mrow></mml:msub><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>)</mml:mo></mml:math></inline-formula> and <inline-formula><mml:math id="inf17"><mml:msub><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>)</mml:mo></mml:math></inline-formula>, apply the rigid rotation that maximizes their similarity, and measure that similarity. This procedure was performed for neural and muscle trajectories (<xref ref-type="fig" rid="fig5">Figure 5a and b</xref>). Similarity was defined as <inline-formula><mml:math id="inf18"><mml:msup><mml:mrow><mml:mi>R</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msup><mml:mo>(</mml:mo><mml:msub><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mi>r</mml:mi><mml:mi>e</mml:mi><mml:mi>f</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mo>)</mml:mo></mml:math></inline-formula>, the variance in <inline-formula><mml:math id="inf19"><mml:msub><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>)</mml:mo></mml:math></inline-formula> accounted for by <inline-formula><mml:math id="inf20"><mml:msub><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mi>r</mml:mi><mml:mi>e</mml:mi><mml:mi>f</mml:mi></mml:mrow></mml:msub><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>)</mml:mo></mml:math></inline-formula>, with no scaling or offset allowed. We defined <inline-formula><mml:math id="inf21"><mml:msub><mml:mrow><mml:msup><mml:mrow><mml:mi>R</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msup></mml:mrow><mml:mrow><mml:mi>k</mml:mi></mml:mrow></mml:msub></mml:math></inline-formula> as the average <inline-formula><mml:math id="inf22"><mml:msup><mml:mrow><mml:mi>R</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msup><mml:mo>(</mml:mo><mml:msub><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mi>r</mml:mi><mml:mi>e</mml:mi><mml:mi>f</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mo>)</mml:mo></mml:math></inline-formula> over all situations where <inline-formula><mml:math id="inf23"><mml:msub><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mi>r</mml:mi><mml:mi>e</mml:mi><mml:mi>f</mml:mi></mml:mrow></mml:msub><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>)</mml:mo></mml:math></inline-formula> and <inline-formula><mml:math id="inf24"><mml:msub><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>)</mml:mo></mml:math></inline-formula> were separated by <inline-formula><mml:math id="inf25"><mml:mi>k</mml:mi></mml:math></inline-formula> speed bins.</p><fig id="fig5" position="float"><label>Figure 5.</label><caption><title>Path similarity between trajectories at different speeds.</title><p>(<bold>a</bold>) Method for calculating neural path similarity. Comparison involved two-dimensional neural trajectories (projected onto PCs 1 and 2) for different speed bins within the same cycling direction. One speed bin (here 1.4 Hz) was chosen as the ‘reference trajectory’. Its trajectory path was compared with the trajectory path for each other speed bin (2 Hz is shown for illustration). Comparison of trajectory similarity (computation of R<sup>2</sup>) followed reflection and rotation, selected to maximize similarity. (<bold>b</bold>) Same as panel (<bold>a</bold>) but for muscle data. (<bold>c</bold>) Average path similarity as a function of speed-bin difference between the reference trajectory and the trajectory with which it is compared. For example, for a speed-bin difference of two, the plotted R<sup>2</sup> averages across all comparisons where the comparison trajectory differed from the reference trajectory by two speed bins. Shaded envelopes indicate the SEM. As noted above, the primary analyses compared paths in the top two PCs. For the neural data, we also compared paths in PCs 3 and 4 (dark dashed gray line) and PCs 5 and 6 (light dashed gray line). (<bold>d</bold>) Same as (<bold>c</bold>) but for monkey D.</p></caption><graphic mime-subtype="tiff" mimetype="image" xlink:href="elife-67620-fig5-v2.tif"/></fig><p><inline-formula><mml:math id="inf26"><mml:msub><mml:mrow><mml:msup><mml:mrow><mml:mi>R</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msup></mml:mrow><mml:mrow><mml:mi>k</mml:mi></mml:mrow></mml:msub></mml:math></inline-formula> is by definition unity for <inline-formula><mml:math id="inf27"><mml:mi>k</mml:mi></mml:math></inline-formula> = 0, and is expected to decline for larger values of <inline-formula><mml:math id="inf28"><mml:mi>k</mml:mi></mml:math></inline-formula>. That decline was modest for neural trajectories and steeper for muscle trajectories (<xref ref-type="fig" rid="fig5">Figure 5c and d</xref>). This confirms that neural trajectories had a consistent shape in the dominant two dimensions, while muscle-trajectory shapes were speed-specific. Yet if neural trajectories encode commands that generate muscle activity, there must be dimensions where neural trajectories have different shapes across speeds. This was indeed the case. We repeated the analysis using neural trajectories that were projections onto PCs three and four (top dashed gray curve) or five and six (bottom dashed gray curve). These aspects of the neural population response were less similar across speeds. For example, when considering neural PCs five and six, the decline in <inline-formula><mml:math id="inf29"><mml:msub><mml:mrow><mml:msup><mml:mrow><mml:mi>R</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msup></mml:mrow><mml:mrow><mml:mi>k</mml:mi></mml:mrow></mml:msub></mml:math></inline-formula> was comparable to that for the first two muscle PCs. This agrees with a fundamental feature of network solutions: output-encoding signals are ‘pushed’ into higher dimensions, allowing tangling to remain low in the dominant dimensions.</p></sec><sec id="s2-6"><title>Neural population trajectories across speeds</title><p>Network solutions generated two predictions regarding the organization of neural activity across speeds. Qualitatively, trajectories should be separated by a translation across speeds. Quantitatively, that separation should be large and consistent enough to yield low overall tangling (something not guaranteed only from average separation). We evaluated the first prediction by applying PCA jointly across all speeds for a given cycling direction. Unlike in the speed-specific projections above, a unified two-dimensional projection does not perfectly capture the elliptical trajectories because they unfold in somewhat speed-specific dimensions (as will be explored further below) and are thus modestly distorted when all projected into the same two dimensions. Nevertheless, the first two PCs did a reasonable job capturing the dominant elliptical structure, which was lacking in the muscle trajectories (<xref ref-type="fig" rid="fig6">Figure 6a</xref>). Employing three PCs revealed the predicted translation separating individual-speed neural trajectories (<xref ref-type="fig" rid="fig6">Figure 6b</xref>, <italic>left</italic>). Considered in three PCs, neural and muscle trajectories (<xref ref-type="fig" rid="fig6">Figure 6b</xref>, <italic>right</italic>) differed in much the same way as network and muscle trajectories. Neural trajectories were stacked ellipses, while muscle trajectories had a less clear organization.</p><fig-group><fig id="fig6" position="float"><label>Figure 6.</label><caption><title>Neural and muscle population trajectories across speeds, with trajectories for every speed projected into a common basis.</title><p>All data are for monkey C, forward condition. (<bold>a</bold>) Neural and muscle activity projected onto global PCs 1 and 2: the dominant dimensions when PCA was applied across all speeds for that cycling direction (<bold>b</bold>) Same as (<bold>a</bold>) but for PCs 1, 2, and 3. (<bold>c</bold>) Same as (<bold>a</bold>) but for PCs 1, 2, and the ‘speed axis’ (see text for how this was found). Trajectories in (<bold>c</bold>) are colored according to instantaneous tangling values, considering only tangling across conditions and ignoring any within-condition tangling. Tangling was computed in a twelve-dimensional PC space, computed by applying PCA to the data for all speeds for a given direction.</p></caption><graphic mime-subtype="tiff" mimetype="image" xlink:href="elife-67620-fig6-v2.tif"/></fig><fig id="fig6s1" position="float" specific-use="child-fig"><label>Figure 6—figure supplement 1.</label><caption><title>Same as <xref ref-type="fig" rid="fig6">Figure 6</xref> but for forward cycling for monkey D.</title></caption><graphic mime-subtype="tiff" mimetype="image" xlink:href="elife-67620-fig6-figsupp1-v2.tif"/></fig></fig-group><p>There is no particular reason that the ‘speed axis’, the dimension that best captures stacking across speeds, should align with the third PC. For monkey C, the third PC naturally revealed stacking, but that feature was clearer (<xref ref-type="fig" rid="fig6">Figure 6c</xref>) when we identified the speed axis directly. For monkey D, stacking was not particularly prevalent in the third PC, but was quite apparent when the speed axis was found directly (<xref ref-type="fig" rid="fig6s1">Figure 6—figure supplement 1</xref>). The speed axis was defined as the dimension where the mean neural state (averaged across times within a trajectory) provided the best decode of mean angular velocity (Materials and methods). In every plot, all dimensions share the same scale. The speed axis captured 4.94% and 4.37% of the total variance (Monkey C and D). This was only modestly less than the variance captured by the third PC (5.34% and 8.57%) which defines the maximum variance that could have been captured by the speed axis given that the first two PCs captured the dominant elliptical structure.</p><p>When considered in more than two dimensions, neural trajectories could depart from planar ellipses, sometimes tracing a pringle-like (hyperbolic paraboloid) shape. The same was true for many networks (e.g. <xref ref-type="fig" rid="fig3">Figure 3e</xref>). In principle such departures could increase trajectory tangling between speeds – neighboring trajectories could come close at moments where local path direction differs. Yet for both neurons and networks, this did not occur because neighboring trajectories tended to depart from planar in similar ways. This suggests agreement with a prediction derived from the networks: individual-trajectory shapes, combined with between-trajectory separation, should prevent across-speed tangling. To test this, we employed <xref ref-type="disp-formula" rid="equ1">Equation 1</xref> but with <inline-formula><mml:math id="inf30"><mml:mi>t</mml:mi><mml:mi>`</mml:mi></mml:math></inline-formula> indexing across times in all other speeds (and not within the same speed). This complements the within-speed tangling analysis above. Tangling was computed in 12 dimensions as these captured most of the variance within and between conditions (results were extremely similar if more dimensions were employed).</p><p>Neural trajectories had consistently low across-speed tangling (<xref ref-type="fig" rid="fig6">Figure 6c</xref>, <italic>left, green shading</italic> indicates low tangling). In contrast, muscle trajectories often displayed high across-speed tangling (<xref ref-type="fig" rid="fig6">Figure 6c</xref>, <italic>right, purple shading</italic> indicates high tangling). This difference was pronounced for both monkey C (<xref ref-type="fig" rid="fig6">Figure 6c</xref>) and D (<xref ref-type="fig" rid="fig6s1">Figure 6—figure supplement 1c</xref>). Muscle trajectories did display a rough ‘speed axis’ (more pronounced for monkey C, less so for monkey D) in the sense that the trajectory mean differed across speeds. Yet muscle-trajectory tangling was still high. This underscores the specificity of the network-derived prediction: neural trajectories should be separated not just on average, but in a consistent manner that maintains low tangling. This was true of the neural trajectories but not the muscle trajectories.</p></sec><sec id="s2-7"><title>Low global tangling depends upon inter-speed separation</title><p>As documented above, neural trajectory tangling was low when considering within-trajectory comparisons (<xref ref-type="fig" rid="fig4">Figure 4</xref>) and also when considering between-trajectory comparisons (<xref ref-type="fig" rid="fig6">Figure 6c</xref>). Muscle trajectory tangling was high in both cases. A reasonable inference is thus that global trajectory tangling – employing all comparisons within and between trajectories – should be much lower for neurons versus muscles. This was indeed the case (<xref ref-type="fig" rid="fig7">Figure 7</xref>, black dots). Each dot represents global trajectory tangling at one time for one speed, computed by allowing <inline-formula><mml:math id="inf31"><mml:mi>t</mml:mi><mml:mi>`</mml:mi></mml:math></inline-formula> in <xref ref-type="disp-formula" rid="equ1">equation 1</xref> to index across all times for all speeds. There were many moments when global trajectory tangling became high for the muscle populations. In contrast, global trajectory tangling never became high for the neural populations. The difference between neural and muscle trajectory tangling was not due to differences in intrinsic dimensionality; it was present whether we employed a matched number of dimensions for neural and muscle data (as in <xref ref-type="fig" rid="fig7">Figure 7</xref>), employed as many dimensions as needed to capture &gt;95% of the variance (typically more dimensions for the neural data), or employed no dimensionality reduction and simply computed tangling in the full-dimensional space (which yielded nearly identical results but was time-consuming).</p><fig-group><fig id="fig7" position="float"><label>Figure 7.</label><caption><title>Trajectory tangling values for purely within-speed comparisons and global comparisons (within and across all speeds for a given direction).</title><p>(<bold>a</bold>) Scatterplot of neural-trajectory tangling versus muscle-trajectory tangling (monkey C) for within-speed tangling (<italic>orange</italic>) and global tangling (<italic>black</italic>). Each point shows tangling for one moment (one time during one speed and one direction). Points are shown for all times during movement (sampled every 25ms) for all sixteen conditions. <italic>Gray / orange triangles</italic> indicate 99<sup>th</sup> percentile tangling. All tangling values (both within-speed and global) were computed in the same twelve-dimensional global space found by applying PCA to all the data (that is, all speeds) for that cycling direction. The difference in the within-speed versus global computations simply involved whether the computation of tangling included only the trajectory for the speed containing a given state, or included all other trajectories. Note that, by construction, global tangling must be at least as high as within-speed tangling. <bold>Inset</bold> plots 99<sup>th</sup> percentile tangling values for within-speed tangling and global tangling. Also shown are values obtained by manipulating the empirical data to create new data without separation between speeds. For the ‘artificially sped up’ manipulation, all trajectories were identical in path but evolved according to their original rates. For the ‘separation removed’ manipulation, all trajectories were given the same mean and forced to unfold in the same dimensions. <italic>Black dots</italic> show 99<sup>th</sup> percentile tangling values for bootstrapped data (Materials and methods). (<bold>b</bold>) Same as (<bold>a</bold>) but for Monkey D.</p></caption><graphic mime-subtype="tiff" mimetype="image" xlink:href="elife-67620-fig7-v2.tif"/></fig><fig id="fig7s1" position="float" specific-use="child-fig"><label>Figure 7—figure supplement 1.</label><caption><title>Similar to insets in <xref ref-type="fig" rid="fig7">Figure 7</xref>, but ‘neural’ tangling assesses the population response of an example RNN rather than recorded population activity.</title></caption><graphic mime-subtype="tiff" mimetype="image" xlink:href="elife-67620-fig7-figsupp1-v2.tif"/></fig></fig-group><p>For the simulated networks, global tangling was only slightly higher than within-speed tangling (<xref ref-type="fig" rid="fig7s1">Figure 7—figure supplement 1</xref>); global tangling was kept low by the separation of trajectories along the speed axis described above. For the neural data, it was similarly true that tangling was low when computed purely within speed (<italic>orange circles</italic> and <italic>bars</italic>) and rose very little when computed globally (<italic>black circles</italic> and <italic>bars</italic>). We used two methods to confirm that the lack of rise was due to trajectory separation between speeds. First, we constructed an artificially rescaled population response by taking the empirical neural trajectory at a reference speed and constructing a trajectory for every other speed by rescaling time. We ‘recorded’ single-neuron responses (spikes generated via a Poisson process) and analyzed the artificial population in the same way as the recorded neural data. This procedure yields trajectories that overlap but evolve at different speeds, increasing tangling (<italic>dark gray bars</italic>). Second, we took the empirical neural population response and removed both the separation between trajectory means and any separation created by tilting of trajectories into different dimensions (a feature documented below). This also led to an increase in global tangling (<italic>light gray bars</italic>). Thus, for both the cortical and network trajectories, the dominant elliptical structure ensures low within-speed tangling, and separation between trajectories maintains low global tangling.</p></sec><sec id="s2-8"><title>Organization of trajectory separation</title><p>Low tangling requires not just overall separation (different trajectory means) but consistent separation at all points along neighboring trajectories. The low global neural-trajectory tangling argues that such separation is present, but can it be confirmed directly? We calculated the distance between trajectories as a function of <inline-formula><mml:math id="inf32"><mml:mi>θ</mml:mi></mml:math></inline-formula>, the phase of the physical movement. We chose a middle speed (speed bin 4) as a ‘reference’ trajectory, and computed the Euclidean distance to all other trajectories at every phase (<xref ref-type="fig" rid="fig8">Figure 8a</xref>). To link with the analysis in <xref ref-type="fig" rid="fig4">Figure 4c</xref>, we also computed the distance between trajectory means. The distance between trajectory means behaved as anticipated: it grew monotonically as a function of the difference in speed from the reference trajectory (<xref ref-type="fig" rid="fig8">Figure 8b</xref>). A similar pattern was observed when distance was considered as a function of <inline-formula><mml:math id="inf33"><mml:mi>θ</mml:mi></mml:math></inline-formula> (<xref ref-type="fig" rid="fig8">Figure 8c</xref>). As speeds became more different from the reference speed, the corresponding trajectories became more distant. Most critically, there was never a value of <inline-formula><mml:math id="inf34"><mml:mi>θ</mml:mi></mml:math></inline-formula> where the distance became very small. Thus, no other trajectory, for any other speed, came ‘close’ to the reference trajectory. Moreover, distance generally grew monotonically with increasing differences in speed.</p><fig-group><fig id="fig8" position="float"><label>Figure 8.</label><caption><title>Quantification of separation between neural trajectories at different speeds.</title><p>(<bold>a</bold>) Illustration of the method for calculating distance as a function of phase. One speed bin was chosen to provide the reference trajectory. For the present analysis this was always speed bin 4, and the cartoon reference trajectory (<italic>light blue</italic>) is thus colored accordingly. We then took a trajectory from another speed bin (<italic>orange</italic>). We swept the phase, <inline-formula><mml:math id="inf35"><mml:mi>θ</mml:mi></mml:math></inline-formula>, of the reference trajectory, and for each phase computed the distance to the nearest point of the other trajectory. We also computed the distance between the trajectory means. (<bold>b</bold>) Distance between trajectory means, for each monkey and cycling direction. Speed bin 4 is the reference trajectory, and thus distance is zero. (<bold>c</bold>) Phase-dependent distance of the reference trajectory from each of the other trajectories. (<bold>d</bold>) Quantification of the degree to which elliptical trajectories unfold in the same set of dimensions across speeds. Slow PCs were the first two PCs based on speed bin 1, and fast PCs were the same based on speed bin 8. For each set of PCs, we computed the proportion of variance explained for each of the other speed bins. The analysis was performed separately for forward and backward cycling (<italic>solid</italic> and <italic>dashed lines</italic>, respectively). This analysis is repeated, using the top ten PCs, in <xref ref-type="fig" rid="fig8s2">Figure 8—figure supplement 2C, D</xref>. Data are for monkey C. (<bold>e</bold>) Same for monkey D.</p></caption><graphic mime-subtype="tiff" mimetype="image" xlink:href="elife-67620-fig8-v2.tif"/></fig><fig id="fig8s1" position="float" specific-use="child-fig"><label>Figure 8—figure supplement 1.</label><caption><title>Similar to <xref ref-type="fig" rid="fig8">Figure 8c</xref>, but using different speed bins for the reference trajectory.</title><p>(<bold>a</bold>) Results when the trajectory in speed bin 2 was the reference trajectory. (<bold>b</bold>) Results when the trajectory in speed bin 7 was the reference trajectory.</p></caption><graphic mime-subtype="tiff" mimetype="image" xlink:href="elife-67620-fig8-figsupp1-v2.tif"/></fig><fig id="fig8s2" position="float" specific-use="child-fig"><label>Figure 8—figure supplement 2.</label><caption><title>Analyses related to those in <xref ref-type="fig" rid="fig8">Figure 8d and e</xref>.</title><p>(<bold>a,b</bold>) Same as in <xref ref-type="fig" rid="fig8">Figure 8d and e</xref>, but the analysis is applied to the population response of RNNs (one line per trained network). (<bold>a,b</bold>) Same as in <xref ref-type="fig" rid="fig8">Figure 8d and e</xref>, but using more PCs (10 PCs, rather than 2).</p></caption><graphic mime-subtype="tiff" mimetype="image" xlink:href="elife-67620-fig8-figsupp2-v2.tif"/></fig></fig-group><p>The above remained true regardless of the speed chosen for the reference trajectory. This is worth noting because, in <xref ref-type="fig" rid="fig8">Figure 8c</xref>, traces corresponding to speeds distant from the reference speed occasionally touch (e.g. the blue traces at bottom). This could imply either that those trajectories lack separation, or simply that they are equidistant from the reference trajectory but in somewhat different directions. These possibilities can be distinguished by repeating the analysis with different speeds as the reference trajectory. For example, if we chose speed-bin 2 (corresponding to the traces second from the bottom in <xref ref-type="fig" rid="fig8">Figure 8c</xref>) as the reference trajectory, it was well separated from the trajectory for speed-bin 1 and 3 at all phases (<xref ref-type="fig" rid="fig8s1">Figure 8—figure supplement 1a</xref>). This organization resembles that observed during a cognitive task where intervals must be internally timed (<xref ref-type="bibr" rid="bib40">Remington et al., 2018</xref>), indicating that the geometry of neural activity can reflect the essence of a computational problem (adjusting the rate at which something is accomplished) across different tasks (cognitive versus motor) and brain areas (medial prefrontal versus motor cortex).</p></sec><sec id="s2-9"><title>Trajectories separate into different dimensions</title><p>All network solutions exhibited one additional feature: the plane that best captured the elliptical trajectory for the slowest speed was moderately different from that for the fastest speed, providing an additional form of separation between network trajectories (<xref ref-type="fig" rid="fig8s2">Figure 8—figure supplement 2a,b</xref>). Do empirical neural trajectories exhibit this same feature? One observation above suggests so: elliptical trajectories were more cleanly captured when PCA was applied to each speed separately (<xref ref-type="fig" rid="fig4">Figure 4</xref>) rather than all speeds together (<xref ref-type="fig" rid="fig6">Figure 6a</xref>). This suggests that the elliptical trajectories for different speeds are not perfectly parallel to one another (if they were, looking down on the stack should reveal each and every elliptical trajectory perfectly).</p><p>To test this prediction directly, we computed the top two PCs from the slowest-speed trajectory, which captured &gt;75% of the variance for that trajectory. We fixed these PCs and asked how much variance they explained for the other trajectories. Variance explained declined monotonically as speed increased, reaching a minimum of ~40% for the fastest speed. The same effect was observed in reverse if we computed the two PCs from the fastest trajectory and then considered slower trajectories (<xref ref-type="fig" rid="fig8">Figure 8d and e</xref>). This effect held even if we considered the top ten PCs (<xref ref-type="fig" rid="fig8s2">Figure 8—figure supplement 2c,d</xref>). Thus, trajectories unfolded in dimensions that overlapped but became progressively more different for larger differences in speed.</p><p>These findings are consistent with suggestions regarding how a circuit can generate multiple behaviors (<xref ref-type="bibr" rid="bib7">Briggman and Kristan, 2008</xref>) and with empirical and network solutions across distinct behaviors such as forward and backward cycling (<xref ref-type="bibr" rid="bib41">Russo et al., 2018</xref>) or cycling with one arm versus the other (<xref ref-type="bibr" rid="bib2">Ames and Churchland, 2019</xref>). The present results indicate that the same principle – ‘tilting’ into different dimensions to alter motor output – is operative when continuously adjusting a specific behavior (also see [<xref ref-type="bibr" rid="bib43">Sabatini and Kaufman, 2021</xref>]). Yet while the separation across individual-speed trajectories was sufficient to aid low tangling, it was modest enough to allow solutions to remain related. For example, the top PCs defined during the fastest speed still captured considerable variance at the slowest speed. Network simulations (see above) show both that this is a reasonable strategy and also that it isn’t inevitable; for some types of inputs, solutions can switch to completely different dimensions across speeds. The presence of modest tilting likely reflects a balance between tilting enough to alter the computation while still maintaining continuity of solutions.</p></sec><sec id="s2-10"><title>Generality of the network solution</title><p>Network optimization consistently found solutions whose structure resembled that of the empirical data, even though networks were unrealistic in many specifics. Networks lacked realistic cell-types; indeed their units did not even spike. Nevertheless, the dominant population-level factors were similar to factors estimated from real spiking neurons. This presumably occurs because the advantages of low trajectory tangling apply regardless of implementation. Recurrent networks with rate-based units intrinsically employ continuous-valued dynamics, but continuous-valued dynamical systems can also be instantiated by spiking networks (<xref ref-type="bibr" rid="bib6">Boerlin et al., 2013</xref>; <xref ref-type="bibr" rid="bib13">Eliasmith, 2005</xref>). Indeed, the same factor-level dynamics can be instantiated by both rate-based and spiking networks (<xref ref-type="bibr" rid="bib10">DePasquale et al., 2016</xref>), including networks with separate excitatory and inhibitory sub-populations. In such networks, dynamics display low-tangling at the level of the factors (though not at the level of spiking).</p><p>Considerable generality of solutions was also seen with respect to the particulars of network outputs. We trained networks to fit four sets of muscle activity (two monkeys and cycling directions) that differed considerably. The dominant stacked-elliptical structure persisted across networks (<xref ref-type="fig" rid="fig9s1">Figure 9—figure supplement 1</xref>). This matters because the modeling assumption that outgoing cortical commands are isomorphic with muscle activity is only an approximation. Meaningful transformations presumably occur between cortical outputs and motoneuron activity (<xref ref-type="bibr" rid="bib46">Shalit et al., 2011</xref>; <xref ref-type="bibr" rid="bib1">Albert et al., 2020</xref>), and motoneurons receive other sources of drive. One thus wishes to know that network predictions are relatively insensitive to assumptions regarding the exact output, and this was indeed the case. This insensitivity relates to the form of the solution. The dominant elliptical trajectory both ensures low tangling and can provide the fundamental output frequency. All other aspects of the output are built from smaller signals in dimensions orthogonal to the dominant trajectory. Thus, the stacked-elliptical solution does not instantiate the full computation. Rather, it is a scaffolding upon which a computation, i.e. an input-output relationship, can be built. The structure of the scaffolding reflects broad needs, such as the fact that motor output varies with phase and repeats once per cycle, and is thus largely independent of the details of the input-output relationship. That input-output relationship depends upon activity in lower-variance dimensions. For example, in our networks, for each muscle there exists a dimension where network activity encodes that muscle’s activity. These output-encoding signals are ‘representational’ in the sense that they have a consistent relationship with a concrete quantity. In contrast, the dominant stacked-elliptical structure exists to ensure a low-tangled scaffold and has no straightforward representational interpretation.</p><p>Given that stacked-elliptical structure can instantiate a variety of input-output relationships, a reasonable question is whether networks continue to adopt the stacked-elliptical solution if, like motor cortex, they receive continuously evolving sensory feedback. We found that they did. Networks exhibited the stacked-elliptical structure for a variety of forms of feedback (<xref ref-type="fig" rid="fig9">Figure 9b and c</xref>, <italic>top rows</italic>), consistent with prior results (<xref ref-type="bibr" rid="bib53">Sussillo et al., 2015</xref>). This relates to the observation that ‘expected’ sensory feedback (i.e. feedback that is consistent across trials) simply becomes part of the overall network dynamics (<xref ref-type="bibr" rid="bib34">Perich et al., 2020</xref>). Network solutions remained realistic unless the influence of feedback became so strong that it dominated network dynamics (<xref ref-type="fig" rid="fig9">Figure 9b and c</xref>, <italic>bottom rows</italic>).</p><fig-group><fig id="fig9" position="float"><label>Figure 9.</label><caption><title>Network solutions with and without simulated sensory feedback.</title><p>Network inputs and outputs were as in <xref ref-type="fig" rid="fig3">Figure 3</xref>, except some networks were supplied with an additional input conveying delayed sensory feedback related to prior motor output. All examples were trained to produce outputs based on the muscle activity of Monkey C during forward cycling. Training occurred in the presence of all relevant inputs (including feedback if present). (<bold>a</bold>) Networks with no explicitly simulated sensory feedback (similar to <xref ref-type="fig" rid="fig3">Figure 3d</xref>). (<bold>b</bold>) Networks supplied with delayed EMG feedback (PCs 1–6 of muscle activity; 60ms delay) at a gain of 0.1 (top) and a gain of 10 (bottom). (<bold>c</bold>) Networks supplied with delayed kinematic feedback (horizontal and vertical position and velocity signals; 60ms delay) at a gain of 0.1 gain (top), and a gain of 10 (bottom).</p></caption><graphic mime-subtype="tiff" mimetype="image" xlink:href="elife-67620-fig9-v2.tif"/></fig><fig id="fig9s1" position="float" specific-use="child-fig"><label>Figure 9—figure supplement 1.</label><caption><title>Same as in <xref ref-type="fig" rid="fig9">Figures 9a</xref> and <xref ref-type="fig" rid="fig3">3d</xref>, but with additional example networks for the other cycling direction and the other monkey.</title><p>All networks are of the type illustrated in <xref ref-type="fig" rid="fig3">Figure 3a</xref> (a single input whose magnitude instructs speed). (<bold>a</bold>) Four networks trained to produce the muscle activity of monkey C during forward cycling (top row) and four networks trained to do the same for backward cycling (bottom row). (<bold>b</bold>) Same but for monkey D.</p></caption><graphic mime-subtype="tiff" mimetype="image" xlink:href="elife-67620-fig9-figsupp1-v2.tif"/></fig></fig-group><p>We did not attempt to simulate feedback control that takes into account unpredictable sensory inputs and produces appropriate corrections (<xref ref-type="bibr" rid="bib50">Stavisky et al., 2017</xref>; <xref ref-type="bibr" rid="bib37">Pruszynski and Scott, 2012</xref>; <xref ref-type="bibr" rid="bib36">Pruszynski et al., 2011</xref>; <xref ref-type="bibr" rid="bib38">Pruszynski et al., 2014</xref>). However, there is no conflict between the need for feedback control and the general form of the solution observed in both networks and cortex. Consider an arbitrary feedback control policy:<disp-formula id="equ2"><mml:math id="m2"><mml:mi>z</mml:mi><mml:mo>=</mml:mo><mml:msub><mml:mrow><mml:mi>g</mml:mi></mml:mrow><mml:mrow><mml:mi>c</mml:mi></mml:mrow></mml:msub><mml:mo>(</mml:mo><mml:msub><mml:mrow><mml:mi>t</mml:mi><mml:mo>,</mml:mo><mml:mi>u</mml:mi></mml:mrow><mml:mrow><mml:mi>f</mml:mi></mml:mrow></mml:msub><mml:mo>)</mml:mo></mml:math></disp-formula></p><p>where <inline-formula><mml:math id="inf36"><mml:msub><mml:mrow><mml:mi>u</mml:mi></mml:mrow><mml:mrow><mml:mi>f</mml:mi></mml:mrow></mml:msub></mml:math></inline-formula> is time-varying sensory input arriving in cortex and <inline-formula><mml:math id="inf37"><mml:mi>z</mml:mi></mml:math></inline-formula> is a vector of outgoing commands. The networks we trained all embody special cases where <inline-formula><mml:math id="inf38"><mml:msub><mml:mrow><mml:mi>u</mml:mi></mml:mrow><mml:mrow><mml:mi>f</mml:mi></mml:mrow></mml:msub></mml:math></inline-formula> is either zero (most simulations) or predictable (<xref ref-type="fig" rid="fig9">Figure 9b and c</xref>) and the particulars of <inline-formula><mml:math id="inf39"><mml:mi>z</mml:mi></mml:math></inline-formula> vary with monkey and cycling direction. Stacked-elliptical structure was appropriate in all these cases and would likely continue to be an appropriate scaffolding for control policies with greater realism, although this remains to be explored.</p></sec></sec><sec id="s3" sec-type="discussion"><title>Discussion</title><p>The ability of animals to adjust movement speed provides a test for the network-dynamics perspective: can it explain the dominant structure of neural responses? We found that it could, at both the single-neuron and population levels. Single-neuron responses were better explained when regressing against network factors rather than muscle factors. This is notable because even qualitatively accurate network solutions are not guaranteed to provide quantitatively useful factors, especially when competing against muscle factors that naturally share features with neural responses. Yet network factors essentially always provided some improvement, and frequently provided large improvements. More deeply, network solutions anticipated the ‘stacked-elliptical-trajectory’ organization of neural population trajectories. That organization explained the seeming paradox that neural trajectories are elliptical, independent of muscle-trajectory shape. This disconnect would, from a traditional perspective, have argued against a tight relationship between neural and muscle activity. In fact, the opposite is true: this property is expected of a network that generates muscle commands (or more broadly, descending commands that will shortly be converted into muscle activity).</p><p>Network solutions and neural activity were also similar at a more abstract level. An emerging approach is to consider geometric properties above the level of individual-task responses. Certain classes of computation require or imply certain geometric properties (<xref ref-type="bibr" rid="bib41">Russo et al., 2018</xref>; <xref ref-type="bibr" rid="bib42">Russo et al., 2020</xref>; <xref ref-type="bibr" rid="bib5">Bernardi et al., 2018</xref>; <xref ref-type="bibr" rid="bib49">Sohn et al., 2019</xref>; <xref ref-type="bibr" rid="bib11">DiCarlo et al., 2012</xref>; <xref ref-type="bibr" rid="bib19">Hénaff et al., 2019</xref>). The level of geometry illuminates why neural activity likely employs stacked-elliptical structure: such structure maintains both low trajectory tangling and solution continuity. This perspective reveals commonalities among seemingly disparate features. Trajectories were separated by both a translation and by occupation of moderately different dimensions. These features seem unrelated at the single-neuron level: the translation produces firing-rate profiles with different offsets while the use of different dimensions yields speed-specific neuron-neuron correlations. Yet both help maintain low global tangling.</p><p>The desirability of low tangling holds across a broad range of situations (<xref ref-type="bibr" rid="bib41">Russo et al., 2018</xref>). Consistent with this, we observed stacked-elliptical structure in networks that received only speed-specifying commands, and in many of the networks that received rhythmic forcing inputs. Thus, the empirical population response is consistent with motor cortex receiving a variety of possible input commands from higher motor areas: a graded speed-specifying command, phase-instructing rhythmic commands, or both. The stacked-elliptical solution was also present in networks that received a variety of forms of simulated periodic feedback. We did not simulate networks that had to respond to unpredictable feedback, but we predict the dominant structure would remain similar – the need to maintain low tangling still holds. Yet the dominant stacked-elliptical structure was not an inevitable aspect of network solutions; networks used other strategies if different speeds were instructed by unrelated inputs, or if simulated feedback was so strong that it dominated network activity.</p><p>This second observation highlights an important subtlety. The dynamics shaping motor cortex population trajectories are widely presumed to reflect multiple forms of recurrence (<xref ref-type="bibr" rid="bib9">Churchland et al., 2012</xref>): intracortical, multi-area (<xref ref-type="bibr" rid="bib31">Middleton and Strick, 2000</xref>; <xref ref-type="bibr" rid="bib55">Wang et al., 2018</xref>; <xref ref-type="bibr" rid="bib17">Guo et al., 2017</xref>; <xref ref-type="bibr" rid="bib44">Sauerbrei et al., 2020</xref>) and sensory reafference (<xref ref-type="bibr" rid="bib24">Lillicrap and Scott, 2013</xref>; <xref ref-type="bibr" rid="bib37">Pruszynski and Scott, 2012</xref>). Both conceptually (<xref ref-type="bibr" rid="bib34">Perich et al., 2020</xref>) and in network models (<xref ref-type="bibr" rid="bib53">Sussillo et al., 2015</xref>), predictable sensory feedback becomes one component supporting the overall dynamics. Taken to an extreme, this might suggest that sensory feedback is the primary source of dynamics. Perhaps what appear to be ‘neural dynamics’ merely reflect incoming sensory feedback mixed with outgoing commands; a purely feedforward network could convert the former into the latter and might appear to have rich dynamics simply because the arm does (<xref ref-type="bibr" rid="bib21">Kalidindi et al., 2021</xref>). While plausible, this hypothesis strikes us as unlikely. It requires sensory feedback, on its own, to create low-tangled solutions across a broad range of tasks. Yet there exists no established property of sensory signals that can be counted on to do so. If anything the opposite is true: trajectory tangling during cycling is relatively high in somatosensory cortex even at a single speed (<xref ref-type="bibr" rid="bib41">Russo et al., 2018</xref>). The hypothesis of purely sensory-feedback-based dynamics is also unlikely because population dynamics begin unfolding before movement begins (<xref ref-type="bibr" rid="bib9">Churchland et al., 2012</xref>). To us, the most likely possibility is that internal neural recurrence (intra- and inter-area) is adjusted during learning to ensure that the overall dynamics (which will incorporate sensory feedback) provide good low-tangled solutions for each task. This would mirror what we observed in networks: when present at reasonable levels, sensory feedback influenced dynamics but did not determine its dominant structure. Instead, the stacked-elliptical solution emerged because it was a ‘good’ solution that optimization found by shaping recurrent connectivity.</p><p>The presence of low tangling in motor cortex, across many tasks, supports the hypothesis that dynamics rely in part on internal sources of recurrence that are adjusted to provide noise-robust solutions. Yet even in a network that relies on strong dynamics, low trajectory tangling is neither always desirable nor always expected. There can be moments where activity must be dominated by ‘unexpected’ inputs. Consider the standard delayed-reach task. Upon target onset, the neural state is driven in different directions depending on target location. This brief moment of high tangling is desirable – one does not want the system’s own state to determine its future state because target-specific inputs should do so. In the present study, networks can adjust cycling speed when their input changes, and swift changes would increase tangling. Similar considerations may explain why trajectory tangling is low (and dynamical fits good) in motor cortex during reaching but not during grasping (<xref ref-type="bibr" rid="bib51">Suresh et al., 2019</xref>). As suggested in that study, grasping may require a more continuous flow of guiding inputs from the rest of the brain.</p><p>Even when low tangling is desirable, it is desirable at the level of the full dynamical system, not necessarily within any given brain area. For example, somatosensory cortex exhibits high tangling (<xref ref-type="bibr" rid="bib41">Russo et al., 2018</xref>), as does motor neuron activity, even though both are part of a movement-generating dynamical system. Given this, it is not inevitable that trajectory tangling is low in motor cortex or that activity is well-described by autonomous dynamics. Indeed it is quite surprising; intrinsic motor cortex connectivity is presumably only partially responsible for the overall movement generating dynamics. A likely explanation is that the overall dynamics are often close to fully observable in motor cortex (<xref ref-type="bibr" rid="bib53">Sussillo et al., 2015</xref>; <xref ref-type="bibr" rid="bib45">Seely et al., 2016</xref>) because it forms a hub for multiple forms of internal (<xref ref-type="bibr" rid="bib44">Sauerbrei et al., 2020</xref>; <xref ref-type="bibr" rid="bib31">Middleton and Strick, 2000</xref>; <xref ref-type="bibr" rid="bib55">Wang et al., 2018</xref>; <xref ref-type="bibr" rid="bib17">Guo et al., 2017</xref>) and sensory recurrence (<xref ref-type="bibr" rid="bib37">Pruszynski and Scott, 2012</xref>). If neurons in motor cortex reflect most of the key system-wide state variables, then the motor cortex population response will be describable by <inline-formula><mml:math id="inf40"><mml:msub><mml:mrow><mml:mover accent="true"><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mo>˙</mml:mo></mml:mover></mml:mrow><mml:mrow/></mml:msub><mml:mo>=</mml:mo><mml:mi>f</mml:mi><mml:mo>(</mml:mo><mml:mi>x</mml:mi><mml:mo>)</mml:mo><mml:mi> </mml:mi><mml:mo>+</mml:mo><mml:mi> </mml:mi><mml:mi>u</mml:mi></mml:math></inline-formula> where the <inline-formula><mml:math id="inf41"><mml:mi>f</mml:mi><mml:mo>(</mml:mo><mml:mi>x</mml:mi><mml:mo>)</mml:mo></mml:math></inline-formula> term dominates. Conversely, a large <inline-formula><mml:math id="inf42"><mml:mi>u</mml:mi></mml:math></inline-formula> term would be needed in situations where not all key variables are reflected.</p><p>Such considerations may explain why (<xref ref-type="bibr" rid="bib14">Foster et al., 2014</xref>), studying cortical activity during locomotion at different speeds, observed stacked-elliptical structure with far less trajectory separation (&lt;1% of the population variance) which is unlikely to provide enough separation to minimize tangling. This agrees with the finding that speed-based modulation of motor cortex activity during locomotion is minimal (<xref ref-type="bibr" rid="bib3">Armstrong and Drew, 1984</xref>) or modest (<xref ref-type="bibr" rid="bib4">Beloozerova and Sirota, 1993</xref>). The difference between cycling and locomotion may reflect cortex playing a less-central role in the latter. During locomotion, cortical activity may reflect being ‘informed’ of the spinally generated rhythm for the purpose of generating gait corrections if necessary (<xref ref-type="bibr" rid="bib12">Drew and Marigold, 2015</xref>; <xref ref-type="bibr" rid="bib4">Beloozerova and Sirota, 1993</xref>). If so, cortical trajectories needn’t display low tangling as they would be largely input driven.</p><p>The observed continuity of neural solutions agrees with the finding that improving a motor skill at one speed generalizes well to other speeds (<xref ref-type="bibr" rid="bib48">Shmuelof et al., 2012</xref>). More broadly, stacked-elliptical structure is likely a common solution to the problem of adjusting the speed of a process or computation. Similar structure has been observed across artificial networks, with multiple architectures, trained to produce idealized periodic signals at different speeds (<xref ref-type="bibr" rid="bib27">Maheswaranathan et al., 2019</xref>). A similar solution is observed in a cognitive task, both for artificial networks and in frontal-cortex population activity (<xref ref-type="bibr" rid="bib40">Remington et al., 2018</xref>). This reinforces that the dominant features of network solutions often reflect the nature of a computational problem rather than the specific input-output function or the particular domain (e.g. motor versus cognitive). Similar trajectory geometries can even serve very different computational purposes. For example, in the supplementary motor area, trajectory cycles are separated during progress within a larger action (e.g., travelling seven cycles and then stopping), producing a helical trajectory. In motor cortex, our present model predicts helical trajectories when speed steadily increases (something we have informally observed during different experiments). The helical solutions in the supplementary motor area and in motor cortex have something high-level in common, yet the nature of the underlying computation is completely different (keeping track of progress, versus specifying speed).</p><p>This underscores that certain trajectory ‘motifs’ are broadly useful, and constrain but do not fully specify the underlying computation. Conversely, seemingly similar computational problems can require different solutions. Even the simple goal of ‘speeding up movement’ likely requires very different solutions depending on what it means to ‘speed up’. For example, generating a particularly fast reach does not involve shorter-duration muscle activity, but requires larger accelerations and decelerations, resulting in muscle activity with more prominent peaks and valleys in the ~2 Hz range. Consistent with this, motor cortex activity exhibits a higher-amplitude ~2 Hz oscillatory pattern during fast reaches (<xref ref-type="bibr" rid="bib9">Churchland et al., 2012</xref>). At the other end of the spectrum, movement sequences are accelerated by reducing the time between preserved events (<xref ref-type="bibr" rid="bib57">Zimnik and Churchland, 2021</xref>). Thus, there is no single strategy for speed-control across all behaviors. However, in all these cases – single reaches, reach sequences, and cycling – the network-dynamics perspective is helpful in comprehending the computational strategies employed to adjust speed.</p></sec><sec id="s4" sec-type="materials|methods"><title>Materials and methods</title><sec id="s4-1"><title>Experimental apparatus</title><p>Monkeys (C and D, two adult male rhesus macaques) were trained to perform a cycling task (<xref ref-type="bibr" rid="bib41">Russo et al., 2018</xref>). Animal protocols were approved by the Columbia University Institutional Animal Care and Use Committee (Protocol number AC-AABE3550). Experiments were controlled and data collected using the Speedgoat Real-time Target Machine. During experiments, monkeys sat in a customized chair with the head restrained via a surgical implant. Stimuli were displayed on a monitor in front of the monkey. A tube dispensed juice rewards. The left arm was loosely restrained using a tube and a cloth sling. With their right arm, monkeys manipulated a pedal-like device. The device consisted of a cylindrical rotating grip (the pedal), attached to a crank-arm, which rotated upon a main axle. That axle was connected to a motor and a rotary encoder that reported angular position with 1/8000 cycle precision. In real time, information about angular position and its derivatives was used to provide virtual mass and viscosity, with the desired forces delivered by the motor. The delay between encoder measurement and force production was 1ms.</p><p>Horizontal and vertical hand position were computed based on angular position and the length of the crank-arm (64 mm). To minimize extraneous movement of the wrist, the right wrist rested in a brace attached to the hand pedal. The motion of the pedal was thus almost entirely driven by the shoulder and elbow, with the wrist moving only slightly to maintain a comfortable posture. Wrist movements were monitored via two reflective spheres attached to the brace, which were tracked optically (Polaris system; Northern Digital, Waterloo, Ontario, Canada) and used to calculate wrist angle. The small wrist movements were highly stereotyped across cycles. Visual monitoring (via infrared camera) confirmed the same was true of the arm as a whole (e.g. the lateral position of the elbow was quite stereotyped across revolutions). Eye position and pupil dilation were monitored but are not analyzed here.</p></sec><sec id="s4-2"><title>Task</title><p>The monitor displayed a virtual landscape, generated by the Unity engine (Unity Technologies, San Francisco). Surface texture and landmarks to each side of a central path provided visual cues regarding movement through the landscape. A salient visual cue (landscape color) indicated whether pedaling must be ‘forward’ (the hand moved away from the body at the top of the cycle) or ‘backward’ (the hand moved toward from the body at the top of the cycle) to produce forward progress in the virtual world. Trials were blocked into forward and backward pedaling. Movement was along a linear path. One rotation of the pedal produced one arbitrary unit of movement. A target on the landscape moved continuously ‘away’ from the monkey’s first-person virtual location at a fixed speed, and thus needed to be ‘chased’. Reward was delivered every 550ms so long as the monkey’s virtual position was close to the target. Recordings were then divided into cycles based on the stereotypy of the x and y positions. The cycles were divided into eight speed bins for each of the two cycling directions, leading to a total of sixteen different conditions.</p><p>Artificial viscosity and mass were the same as in <xref ref-type="bibr" rid="bib41">Russo et al., 2018</xref>; <xref ref-type="bibr" rid="bib42">Russo et al., 2020</xref> and modestly supplemented the natural viscosity of the motor and inertia of the apparatus. With no added viscosity and mass the apparatus tended to feel slightly ‘slippery’ and ‘floppy’. We found the device felt more natural to manipulate with the effective viscosity and mass increased modestly. Because added viscosity was modest, it was not the primary limiting factor on top speed. Both when the monkeys performed the task and when we tried it, top speed appeared to be limited (to not much more than 3 Hz) by factors intrinsic to the neuromuscular control of the arm.</p></sec><sec id="s4-3"><title>Neural recordings</title><p>After initial training, we performed a sterile surgery during which monkeys were implanted with a head restraint. Cylinders (Crist Instruments, Hagerstown, MD) were centered over the border between caudal PMd and primary motor cortex, located according to a previous magnetic resonance imaging scan. Cylinders were placed normal to the cortical surface. The skull within the cylinder was left intact and covered with a thin layer of dental acrylic. Neural recordings were made using conventional single electrodes (Frederick Haer Company, Bowdoinham, ME) driven by a hydraulic microdrive (David Kopf Instruments, Tujunga, CA). Electrodes were introduced through small (3.5 mm diameter) burr holes drilled by hand through the acrylic and skull, under anesthesia. Sequential recording with conventional electrodes (as opposed to simultaneous recording with an array) allowed us to acquire recordings from a broader range of sites, including sulcal sites inaccessible to many array techniques. Recording locations were guided via microstimulation, light touch, and muscle palpation protocols to confirm the trademark properties of each region. Recordings were made from primary motor cortex (both surface and sulcal) and the adjacent (caudal) aspect of dorsal premotor cortex. For all analyses, these recordings are analyzed together as a single motor cortex population. Motor cortex recordings were restricted to regions where microstimulation elicited responses in shoulder, upper arm, chest and forearm.</p><p>Neural signals were amplified, filtered, and manually sorted using a Blackrock Microsystems Digital Hub and 128-channel Neural Signal Processor. A total of 126 isolations were made in monkeys C and D. Nearly all neurons that could be isolated in motor cortex were responsive during cycling. A number of isolations (25) were discarded due to low signal-to-noise ratios or insufficient trial counts. No further selection criteria were applied. For each trial, the spikes of the recorded neuron were filtered with a Gaussian (20ms SD) to produce an estimate of firing rate versus time. These were then averaged across trials as described below.</p></sec><sec id="s4-4"><title>EMG recordings</title><p>Intra-muscular EMG was recorded from the major muscles of the arm, shoulder, and chest using percutaneous pairs of hook-wire electrodes (30 mm x 27 gauge, Natus Neurology) inserted ~1 cm into the belly of the muscle for the duration of single recording sessions. Electrode voltages were amplified, bandpass filtered (10–500 Hz) and digitized at 1000 Hz. To ensure that recordings were of high quality, signals were visualized on an oscilloscope throughout the duration of the recording session. Recordings were aborted if they contained significant movement artifacts or weak signal. That muscle was then re-recorded later. Offline, EMG records were high-pass filtered at 40 Hz and rectified. Finally, EMG records were smoothed with a Gaussian (20ms standard deviation, same as neural data) and trial averaged (see below). Recordings were made from the following muscles: the three heads of the <italic>deltoid</italic>, the two heads of the <italic>biceps brachii</italic>, the three heads of the <italic>triceps brachii</italic>, <italic>trapezius</italic>, <italic>latissimus dorsi</italic>, <italic>pectoralis</italic>, <italic>brachioradialis</italic>, <italic>extensor carpi ulnaris</italic>, <italic>extensor carpi radialis</italic>, <italic>flexor carpi ulnaris</italic>, <italic>flexor carpi radialis</italic>, and <italic>pronator</italic>. Recordings were made from 1 to 8 muscles at a time, on separate days from neural recordings. We often made multiple recordings for a given muscle, especially those that we have previously noted can display responses that vary with recording location (e.g., the <italic>deltoid</italic>).</p></sec><sec id="s4-5"><title>Trial alignment and averaging</title><p>The average firing rate was computed across trials with nearly identical behavior. This was achieved by (1) training to a high level of stereotyped behavior, (2) discarding rare aberrant trials, and (3) ‘adaptive alignment’ of individual trials prior to averaging in each speed bin. First, trials were aligned so that vertical pedal orientation occurred at the same moment for every trial. The trials were then sorted into 1 of 8 total speed bins per cycling direction. Individual trials were then scaled so that all trials in a speed bin had the same duration (set to be the median duration across trials). Trials were not included if scaling changed the time-base by more than 15%. Because monkeys usually cycled at a consistent speed (within a given condition) this brought trials largely into alignment: for example, the top of each cycle occurred at nearly the same time for each trial. The adaptive alignment procedure was used to correct any remaining slight misalignments. The time-base for each trial was scaled so that the position trace on that trial closely matched the average position of all trials. This involved a slight non-uniform stretching, and resulted in the timing of all key moments – such as when the hand passed the top of the cycle – being nearly identical across trials. This ensured that high-frequency temporal response features were not lost to averaging. Any alignment procedure is necessarily imperfect; for example, the non-uniform stretching of time that best aligns position will be slightly different from the non-uniform stretching of time that best aligns velocity. In practice this was a minimal concern. For example, although alignment did not explicitly take into account velocity, velocity was still nicely aligned across trials (<xref ref-type="fig" rid="fig1">Figure 1b</xref>, top). The same alignment procedure was used for neural and EMG data.</p><p>All variables of interest (firing rate, hand position, hand velocity, EMG, etc.) were computed on each trial before adaptive alignment. Thus, the above procedure never alters the magnitude of these variables, but simply aligns when those values occur across trials. The adaptive procedure was used once to align trials within a condition on a given recording session, and again to align data across recording sessions. This allowed, for example, comparison of neural and muscle responses on a matched time-base.</p><p>To calculate the modulation of the firing rate as a function of speed, the dynamic range was first calculated for each neuron and speed by subtracting the minimum firing rate from the maximum firing rate over the course of the trajectory. Next, for each neuron, a line of best fit was fitted to explain how the dynamic range changed as a function of cycling speed. A positive (negative) slope indicated that firing rate increased (decreased) overall with speed.</p></sec><sec id="s4-6"><title>Preprocessing and PCA</title><p>Because PCA seeks to capture variance, it can be disproportionately influenced by differences in firing rate range (e.g. a neuron with a range of 100 spikes/s has 25 times the variance of a similarly responding neuron with a range of 20 spikes/s). This concern is larger still for EMG, where the scale is arbitrary and can differ greatly between recordings. The response of each neuron / muscle was thus normalized prior to application of PCA. EMG data were fully normalized: <inline-formula><mml:math id="inf43"><mml:mi>r</mml:mi><mml:mi>e</mml:mi><mml:mi>s</mml:mi><mml:mi>p</mml:mi><mml:mi>o</mml:mi><mml:mi>n</mml:mi><mml:mi>s</mml:mi><mml:mi>e</mml:mi><mml:mo>←</mml:mo><mml:mfrac><mml:mrow><mml:mi>r</mml:mi><mml:mi>e</mml:mi><mml:mi>s</mml:mi><mml:mi>p</mml:mi><mml:mi>o</mml:mi><mml:mi>n</mml:mi><mml:mi>s</mml:mi><mml:mi>e</mml:mi></mml:mrow><mml:mrow><mml:mi>r</mml:mi><mml:mi>a</mml:mi><mml:mi>n</mml:mi><mml:mi>g</mml:mi><mml:mi>e</mml:mi><mml:mo>(</mml:mo><mml:mi>r</mml:mi><mml:mi>e</mml:mi><mml:mi>s</mml:mi><mml:mi>p</mml:mi><mml:mi>o</mml:mi><mml:mi>n</mml:mi><mml:mi>s</mml:mi><mml:mi>e</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:mfrac></mml:math></inline-formula> , where the range is taken across all recorded times and conditions. Neural data were ‘soft’ normalized: <inline-formula><mml:math id="inf44"><mml:mi>r</mml:mi><mml:mi>e</mml:mi><mml:mi>s</mml:mi><mml:mi>p</mml:mi><mml:mi>o</mml:mi><mml:mi>n</mml:mi><mml:mi>s</mml:mi><mml:mi>e</mml:mi><mml:mo>←</mml:mo><mml:mfrac><mml:mrow><mml:mi>r</mml:mi><mml:mi>e</mml:mi><mml:mi>s</mml:mi><mml:mi>p</mml:mi><mml:mi>o</mml:mi><mml:mi>n</mml:mi><mml:mi>s</mml:mi><mml:mi>e</mml:mi></mml:mrow><mml:mrow><mml:mi>r</mml:mi><mml:mi>a</mml:mi><mml:mi>n</mml:mi><mml:mi>g</mml:mi><mml:mi>e</mml:mi><mml:mo>(</mml:mo><mml:mi>r</mml:mi><mml:mi>e</mml:mi><mml:mi>s</mml:mi><mml:mi>p</mml:mi><mml:mi>o</mml:mi><mml:mi>n</mml:mi><mml:mi>s</mml:mi><mml:mi>e</mml:mi><mml:mo>)</mml:mo><mml:mo>+</mml:mo><mml:mn>5</mml:mn></mml:mrow></mml:mfrac></mml:math></inline-formula> . This is a standard technique (<xref ref-type="bibr" rid="bib41">Russo et al., 2018</xref>) that balances the desire for PCA to explain the responses of all neurons with the desire that weak responses not contribute to the same degree as robust responses. In practice, most neurons had high firing rate ranges during cycling, making soft normalization similar to full normalization.</p><p>We used PCA for simplicity, and because it can be readily applied in the same way to neural and muscle recordings, aiding comparison. Related methods such as factor analysis become more appropriate when analyzing single-trial data because they can better model the ‘private’ spiking variability of each neuron. However, factor analysis provides no advantage over PCA for trial-averaged data that is recorded sequentially. For muscle activity it can be advantageous to use non-negative matrix factorization (<xref ref-type="bibr" rid="bib23">Krouchev et al., 2006</xref>) when activity occurs in relative discrete bursts. Non-negative matrix factorization can ensure that the inferred underlying ‘drives’ have a similar sensible structure. However, muscle activity was rarely burst-like during cycling; muscles were often modulated fairly continuously throughout the cycle. This makes PCA more natural, especially given the twin desires of capturing maximal variance in as few dimensions as possible, and comparing the resulting trajectories between neural, muscle, and network populations.</p></sec><sec id="s4-7"><title>PCA per speed</title><p>Neural data (the firing rate of every neuron) for each speed were formatted as a ‘full-dimensional’ matrix, <inline-formula><mml:math id="inf45"><mml:msup><mml:mrow><mml:msub><mml:mrow><mml:mi>X</mml:mi></mml:mrow><mml:mrow><mml:mi>s</mml:mi></mml:mrow></mml:msub></mml:mrow><mml:mrow><mml:mi>f</mml:mi><mml:mi>u</mml:mi><mml:mi>l</mml:mi><mml:mi>l</mml:mi></mml:mrow></mml:msup></mml:math></inline-formula> , of size <inline-formula><mml:math id="inf46"><mml:mi>n</mml:mi><mml:mo>×</mml:mo><mml:mi>T</mml:mi></mml:math></inline-formula>, where <inline-formula><mml:math id="inf47"><mml:mi>n</mml:mi></mml:math></inline-formula> is the number of neurons and <inline-formula><mml:math id="inf48"><mml:mi>t</mml:mi><mml:mo>∈</mml:mo><mml:mo>[</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mi>T</mml:mi><mml:mo>]</mml:mo></mml:math></inline-formula> indexes across all analyzed times in the trajectory during speed <inline-formula><mml:math id="inf49"><mml:mi>s</mml:mi></mml:math></inline-formula>. We similarly formatted muscle data as a matrix, <inline-formula><mml:math id="inf50"><mml:msup><mml:mrow><mml:msub><mml:mrow><mml:mi>Z</mml:mi></mml:mrow><mml:mrow><mml:mi>s</mml:mi></mml:mrow></mml:msub></mml:mrow><mml:mrow><mml:mi>f</mml:mi><mml:mi>u</mml:mi><mml:mi>l</mml:mi><mml:mi>l</mml:mi></mml:mrow></mml:msup></mml:math></inline-formula> , of size <inline-formula><mml:math id="inf51"><mml:mi>m</mml:mi><mml:mo>×</mml:mo><mml:mi>T</mml:mi></mml:math></inline-formula>, where <inline-formula><mml:math id="inf52"><mml:mi>m</mml:mi></mml:math></inline-formula> is the number of muscles. Because PCA operates on mean-centered data, we mean-centered <inline-formula><mml:math id="inf53"><mml:msup><mml:mrow><mml:msub><mml:mrow><mml:mi>X</mml:mi></mml:mrow><mml:mrow><mml:mi>s</mml:mi></mml:mrow></mml:msub></mml:mrow><mml:mrow><mml:mi>f</mml:mi><mml:mi>u</mml:mi><mml:mi>l</mml:mi><mml:mi>l</mml:mi></mml:mrow></mml:msup></mml:math></inline-formula> and <inline-formula><mml:math id="inf54"><mml:msup><mml:mrow><mml:msub><mml:mrow><mml:mi>Z</mml:mi></mml:mrow><mml:mrow><mml:mi>s</mml:mi></mml:mrow></mml:msub></mml:mrow><mml:mrow><mml:mi>f</mml:mi><mml:mi>u</mml:mi><mml:mi>l</mml:mi><mml:mi>l</mml:mi></mml:mrow></mml:msup></mml:math></inline-formula> so that every row had a mean value of zero. PCA was used to find <inline-formula><mml:math id="inf55"><mml:msub><mml:mrow><mml:mi>X</mml:mi></mml:mrow><mml:mrow><mml:mi>s</mml:mi></mml:mrow></mml:msub></mml:math></inline-formula> , a reduced-dimensional version of <inline-formula><mml:math id="inf56"><mml:msup><mml:mrow><mml:msub><mml:mrow><mml:mi>X</mml:mi></mml:mrow><mml:mrow><mml:mi>s</mml:mi></mml:mrow></mml:msub></mml:mrow><mml:mrow><mml:mi>f</mml:mi><mml:mi>u</mml:mi><mml:mi>l</mml:mi><mml:mi>l</mml:mi></mml:mrow></mml:msup></mml:math></inline-formula> with the property that <inline-formula><mml:math id="inf57"><mml:msup><mml:mrow><mml:msub><mml:mrow><mml:mi>X</mml:mi></mml:mrow><mml:mrow><mml:mi>s</mml:mi></mml:mrow></mml:msub></mml:mrow><mml:mrow><mml:mi>f</mml:mi><mml:mi>u</mml:mi><mml:mi>l</mml:mi><mml:mi>l</mml:mi></mml:mrow></mml:msup><mml:mo>≈</mml:mo><mml:msub><mml:mrow><mml:mi>V</mml:mi></mml:mrow><mml:mrow><mml:mi>s</mml:mi></mml:mrow></mml:msub><mml:msub><mml:mrow><mml:mi>X</mml:mi></mml:mrow><mml:mrow><mml:mi>s</mml:mi></mml:mrow></mml:msub></mml:math></inline-formula> , where <inline-formula><mml:math id="inf58"><mml:msub><mml:mrow><mml:mi>V</mml:mi></mml:mrow><mml:mrow><mml:mi>s</mml:mi></mml:mrow></mml:msub></mml:math></inline-formula> are the speed-specific principal components. PCA was similarly used to find <inline-formula><mml:math id="inf59"><mml:msub><mml:mrow><mml:mi>Z</mml:mi></mml:mrow><mml:mrow><mml:mi>s</mml:mi></mml:mrow></mml:msub></mml:math></inline-formula> , the reduced-dimensional version of <inline-formula><mml:math id="inf60"><mml:msup><mml:mrow><mml:msub><mml:mrow><mml:mi>Z</mml:mi></mml:mrow><mml:mrow><mml:mi>s</mml:mi></mml:mrow></mml:msub></mml:mrow><mml:mrow><mml:mi>f</mml:mi><mml:mi>u</mml:mi><mml:mi>l</mml:mi><mml:mi>l</mml:mi></mml:mrow></mml:msup></mml:math></inline-formula> .</p></sec><sec id="s4-8"><title>PCA across conditions</title><p>To calculate the ‘global subspace’, that is the subspace that explains response variance across all speeds, neural data were first formatted as a ‘full-dimensional’ matrix, <inline-formula><mml:math id="inf61"><mml:msup><mml:mrow><mml:mi>X</mml:mi></mml:mrow><mml:mrow><mml:mi>f</mml:mi><mml:mi>u</mml:mi><mml:mi>l</mml:mi><mml:mi>l</mml:mi></mml:mrow></mml:msup></mml:math></inline-formula> , of size <inline-formula><mml:math id="inf62"><mml:mi>n</mml:mi><mml:mo>×</mml:mo><mml:mi>T</mml:mi></mml:math></inline-formula>, where <inline-formula><mml:math id="inf63"><mml:mi>n</mml:mi></mml:math></inline-formula> is the number of neurons and <inline-formula><mml:math id="inf64"><mml:mi>t</mml:mi><mml:mo>∈</mml:mo><mml:mo>[</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mi>T</mml:mi><mml:mo>]</mml:mo></mml:math></inline-formula> indexes across all analyzed times and speeds. We mean-centered <inline-formula><mml:math id="inf65"><mml:msup><mml:mrow><mml:mi>X</mml:mi></mml:mrow><mml:mrow><mml:mi>f</mml:mi><mml:mi>u</mml:mi><mml:mi>l</mml:mi><mml:mi>l</mml:mi></mml:mrow></mml:msup></mml:math></inline-formula> and then used PCA to find <inline-formula><mml:math id="inf66"><mml:mi>X</mml:mi></mml:math></inline-formula>, a reduced-dimensional version of <inline-formula><mml:math id="inf67"><mml:msup><mml:mrow><mml:mi>X</mml:mi></mml:mrow><mml:mrow><mml:mi>f</mml:mi><mml:mi>u</mml:mi><mml:mi>l</mml:mi><mml:mi>l</mml:mi></mml:mrow></mml:msup></mml:math></inline-formula> with the property that <inline-formula><mml:math id="inf68"><mml:msup><mml:mrow><mml:mi>X</mml:mi></mml:mrow><mml:mrow><mml:mi>f</mml:mi><mml:mi>u</mml:mi><mml:mi>l</mml:mi><mml:mi>l</mml:mi></mml:mrow></mml:msup><mml:mo>≈</mml:mo><mml:mi>V</mml:mi><mml:mi>X</mml:mi></mml:math></inline-formula>, where <inline-formula><mml:math id="inf69"><mml:mi>V</mml:mi></mml:math></inline-formula> are now the ‘global’ principal components. We employed analogous methods for the muscle data to obtain <inline-formula><mml:math id="inf70"><mml:mi>Z</mml:mi></mml:math></inline-formula>, a reduced-dimensional version of <inline-formula><mml:math id="inf71"><mml:msup><mml:mrow><mml:mi>Z</mml:mi></mml:mrow><mml:mrow><mml:mi>f</mml:mi><mml:mi>u</mml:mi><mml:mi>l</mml:mi><mml:mi>l</mml:mi></mml:mrow></mml:msup></mml:math></inline-formula> .</p></sec><sec id="s4-9"><title>Recurrent neural networks</title><p>We trained recurrent neural networks (RNNs) to produce a target output consisting of the muscle data projected into its top 6 PCs. For most networks we examine, the input was static with a level indicating the target speed. Networks consisted of 50 units, roughly matching the number of neurons recorded in each monkey. Networks had the following dynamics:<disp-formula id="equ3"><mml:math id="m3"><mml:mi>r</mml:mi><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>+</mml:mo><mml:mi>Δ</mml:mi><mml:mi>t</mml:mi><mml:mo>,</mml:mo><mml:mi>c</mml:mi><mml:mo>)</mml:mo><mml:mo>=</mml:mo><mml:mi>r</mml:mi><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>,</mml:mo><mml:mi>c</mml:mi><mml:mo>)</mml:mo><mml:mo>+</mml:mo><mml:mfrac><mml:mrow><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mi>τ</mml:mi></mml:mrow></mml:mfrac><mml:mo>(</mml:mo><mml:mo>-</mml:mo><mml:mi>r</mml:mi><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>,</mml:mo><mml:mi>c</mml:mi><mml:mo>)</mml:mo><mml:mo>+</mml:mo><mml:mi>A</mml:mi><mml:mi>f</mml:mi><mml:mo>(</mml:mo><mml:mi>r</mml:mi><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>,</mml:mo><mml:mi>c</mml:mi><mml:mo>)</mml:mo><mml:mo>)</mml:mo><mml:mo>+</mml:mo><mml:mi>B</mml:mi><mml:mi>u</mml:mi><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>,</mml:mo><mml:mi>c</mml:mi><mml:mo>)</mml:mo><mml:mo>+</mml:mo><mml:mi>b</mml:mi><mml:mo>)</mml:mo></mml:math></disp-formula></p><p>where <inline-formula><mml:math id="inf72"><mml:mi mathvariant="bold-italic">r</mml:mi><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>,</mml:mo><mml:mi>c</mml:mi><mml:mo>)</mml:mo></mml:math></inline-formula> is the network state (the ‘firing rate’ of every unit) for time <inline-formula><mml:math id="inf73"><mml:mi>t</mml:mi></mml:math></inline-formula> and condition <inline-formula><mml:math id="inf74"><mml:mi>c</mml:mi></mml:math></inline-formula>. We used a timestep <inline-formula><mml:math id="inf75"><mml:mi>Δ</mml:mi><mml:mi>t</mml:mi></mml:math></inline-formula> of 4ms, with <inline-formula><mml:math id="inf76"><mml:mi>τ</mml:mi><mml:mo>=</mml:mo><mml:mn>10</mml:mn></mml:math></inline-formula> timesteps. The network was trained on eight conditions, each corresponding to one speed. Thus, <inline-formula><mml:math id="inf77"><mml:mi>c</mml:mi><mml:mo>∈</mml:mo><mml:mo>[</mml:mo><mml:mn>1,8</mml:mn><mml:mo>]</mml:mo></mml:math></inline-formula>. Each condition was presented in multiple ‘trials’ lasting 2000 timesteps (8 s). The function <inline-formula><mml:math id="inf78"><mml:mi>f</mml:mi><mml:mo>:</mml:mo><mml:mo>=</mml:mo><mml:mi> </mml:mi><mml:mi>t</mml:mi><mml:mi>a</mml:mi><mml:mi>n</mml:mi><mml:mi>h</mml:mi></mml:math></inline-formula> is an element-wise transfer function linking a unit’s input to its firing rate. The matrix <inline-formula><mml:math id="inf79"><mml:mi>A</mml:mi></mml:math></inline-formula> captures the connection weights between the network units, and <inline-formula><mml:math id="inf80"><mml:mi>B</mml:mi><mml:mi>u</mml:mi><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>,</mml:mo><mml:mi>c</mml:mi><mml:mo>)</mml:mo></mml:math></inline-formula> captures the effect of the external input. The vector <inline-formula><mml:math id="inf81"><mml:mi>b</mml:mi></mml:math></inline-formula> captures the bias for each unit. Network output is a linear readout of its firing rates:<disp-formula id="equ4"><mml:math id="m4"><mml:mi>y</mml:mi><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>,</mml:mo><mml:mi>s</mml:mi><mml:mo>)</mml:mo><mml:mo>=</mml:mo><mml:mi>C</mml:mi><mml:mi>f</mml:mi><mml:mo>(</mml:mo><mml:mi>r</mml:mi><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>,</mml:mo><mml:mi>c</mml:mi><mml:mo>)</mml:mo><mml:mo>)</mml:mo><mml:mo>+</mml:mo><mml:mi>d</mml:mi></mml:math></disp-formula></p><p>with <inline-formula><mml:math id="inf82"><mml:mi>d</mml:mi></mml:math></inline-formula> representing the bias vector for the output. The parameters <inline-formula><mml:math id="inf83"><mml:mi>A</mml:mi><mml:mo>,</mml:mo><mml:mi>B</mml:mi><mml:mo>,</mml:mo><mml:mi>C</mml:mi><mml:mo>,</mml:mo><mml:mi>b</mml:mi><mml:mo>,</mml:mo><mml:mi>d</mml:mi></mml:math></inline-formula> were optimized (using TensorFlow’s Adam optimizer) to minimize the mean squared error between the network output <inline-formula><mml:math id="inf84"><mml:mi>y</mml:mi></mml:math></inline-formula> and the target output <inline-formula><mml:math id="inf85"><mml:msub><mml:mrow><mml:mi>y</mml:mi></mml:mrow><mml:mrow><mml:mi>t</mml:mi><mml:mi>a</mml:mi><mml:mi>r</mml:mi><mml:mi>g</mml:mi></mml:mrow></mml:msub></mml:math></inline-formula> . The external speed-specifying input was of constant amplitude <inline-formula><mml:math id="inf86"><mml:mi>a</mml:mi></mml:math></inline-formula> that was a linear function of the speed: <inline-formula><mml:math id="inf87"><mml:mi>a</mml:mi><mml:mo>=</mml:mo><mml:mn>0.5</mml:mn><mml:mo>+</mml:mo><mml:mn>0.5</mml:mn><mml:mfrac><mml:mrow><mml:mi>c</mml:mi><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mn>8</mml:mn></mml:mrow></mml:mfrac></mml:math></inline-formula> . On each trial, the input was always zero for the first 800 timesteps (equivalent to 3.2 s), then ‘turned on’ (took on the value <inline-formula><mml:math id="inf88"><mml:mi>a</mml:mi></mml:math></inline-formula>) to instruct the network to begin to produce an output. After a variable time, the input ‘turned off’ (became zero), instructing the network to produce no output.</p><p>One concern, during training, is that networks may learn overly specific solutions if the number of cycles is small and stereotyped. For example, if only ever asked to produce three 500ms cycles, the network could learn a non-periodic 1500ms trajectory that nevertheless yields a periodic output. Such solutions are degenerate because a network that adopted that solution would be unable to continue producing the periodic output for larger numbers of cycles. To ensure networks could not adopt degenerate solutions, during training we varied the span of time over which the input instructed cycling, from 700 timesteps (2.8 s) to 1100 timesteps (4.4 s). Specifically, the input was of amplitude <inline-formula><mml:math id="inf89"><mml:mi>a</mml:mi></mml:math></inline-formula> from timestep 800 to <inline-formula><mml:math id="inf90"><mml:mi>n</mml:mi></mml:math></inline-formula>, where <inline-formula><mml:math id="inf91"><mml:mi>n</mml:mi></mml:math></inline-formula> was sampled from a uniform distribution between 1500 to 1900, that is, <inline-formula><mml:math id="inf92"><mml:mi>n</mml:mi><mml:mo>∼</mml:mo><mml:mi>U</mml:mi><mml:mo>[</mml:mo><mml:mn>1500,1900</mml:mn><mml:mo>]</mml:mo></mml:math></inline-formula>. The input was of amplitude 0 for the rest of the timesteps. The target output was of amplitude 0 when the input was 0. When the input was of amplitude <inline-formula><mml:math id="inf93"><mml:mi>a</mml:mi></mml:math></inline-formula>, the output was the muscle activity in the corresponding speed bin <inline-formula><mml:math id="inf94"><mml:mi>s</mml:mi></mml:math></inline-formula>, projected into the top 6 PCs and downsampled by a factor of 4 (to match the 4ms timestep). The muscle activity was repeated in time for as many cycles as necessary to fill the time period where the input was ‘on’ (anywhere from ~3 to~8 cycles). Inspection of both individual-unit responses and the PCs revealed that this training procedure was successful. All networks that learned the task used repeating trajectories, with a period that matched that of the periodic output. There was one exception but it is expected: the first cycle could differ slightly from all the rest, as it took time to settle into the stable limit cycle. This is typical of networks trained on this type of task, and is also observed empirically (<xref ref-type="bibr" rid="bib41">Russo et al., 2018</xref>). For this reason, analyses considered one of the middle cycles.</p><p>In the past, we have often found that encouraging noise-robust low tangled solutions requires training in the presence of noise, or the use of some other form of regularization that encourages well-behaved solutions (<xref ref-type="bibr" rid="bib53">Sussillo et al., 2015</xref>). In the present case this was not necessary; the same stacked-elliptical structure emerged in networks trained both in the presence and absence of noise. For networks where we included noise, noise was additive and Gaussian, with variance 0.01 (approximately 2% of the input on each timestep). This was done simply to verify that the same solution occurred in the presence of noise.</p></sec><sec id="s4-10"><title>Linear decoding of neural firing rates</title><p>Single-neuron firing rates were regressed against the muscle factors and the network factors separately. First, PCA was performed on muscle activity (across speeds and times for the relevant cycling direction) to produce two- or three- dimensional factors. Then, ridge regression was performed using the muscle factors to explain each neuron’s firing rate (performed separately for each neuron). The regularization parameter was chosen based on earlier exploration of cross-validation performance. To quantify fit quality, we computed the population <inline-formula><mml:math id="inf95"><mml:msup><mml:mrow><mml:mi>R</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msup></mml:math></inline-formula> : the average <inline-formula><mml:math id="inf96"><mml:msup><mml:mrow><mml:mi>R</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msup></mml:math></inline-formula> across neurons taking into account different response magnitudes. The above procedure was repeated using the network factors to explain single-neuron responses. For each network, we computed the difference in population <inline-formula><mml:math id="inf97"><mml:msup><mml:mrow><mml:mi>R</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msup></mml:math></inline-formula> when explaining neural activity with network factors versus muscle factors.</p></sec><sec id="s4-11"><title>Fit to ellipses</title><p>Trajectories were projected into their top 2 PCs. The ellipse that best fit the resulting 2D trajectory was found using least squares (<xref ref-type="bibr" rid="bib15">Gal, 2020</xref>). The <inline-formula><mml:math id="inf98"><mml:msup><mml:mrow><mml:mi>R</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msup></mml:math></inline-formula> of the elliptical fit was calculated by uniformly sampling this ellipse with the same number of time points as the trajectory, then calculating the population <inline-formula><mml:math id="inf99"><mml:msup><mml:mrow><mml:mi>R</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msup></mml:math></inline-formula> across timepoints. Some muscle trajectories did not have an ellipse as a solution, and were instead better fit by a hyperbola (e.g. in cases where the muscle trajectory was saddle-shaped, points were closer to a hyperbola than any ellipse). To be conservative, we discarded these in subsequent tests of the differences in <inline-formula><mml:math id="inf100"><mml:msup><mml:mrow><mml:mi>R</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msup></mml:math></inline-formula> .</p></sec><sec id="s4-12"><title>Understanding network structure</title><p>To ascertain the presence of a limit cycle, network trajectories were perturbed from their typical trajectory (for that speed input). Perturbations were in a random direction within the top two PCs, described by the random vector <inline-formula><mml:math id="inf101"><mml:mi>ϵ</mml:mi></mml:math></inline-formula>, where <inline-formula><mml:math id="inf102"><mml:mi>ϵ</mml:mi><mml:mo>∼</mml:mo><mml:mi>U</mml:mi><mml:mo>[</mml:mo><mml:mo>-</mml:mo><mml:mn>0.1,0.1</mml:mn><mml:mo>]</mml:mo></mml:math></inline-formula>. This two-dimensional perturbation was transformed into the full-dimensional space (one dimension per neuron) and the network was started from this initial state. The resulting network trajectory across the next 2000 time points was then transformed back into PC space, and it was verified that these returned back to the typical trajectory. This procedure was repeated for different speed inputs.</p><p>In a different set of explorations, the network state was perturbed from its typical trajectory in one of two directions. The first (rhythm-generation perturbation) was chosen to maximize impact on the trajectory in the first two PCs while minimizing impact on the muscle readout being examined. The second (muscle-generation perturbation) was chosen to do the opposite: minimize impact on the trajectory in the first two PCs while maximizing impact on that muscle readout.</p><p>We tested how networks responded to speed inputs that were not used during training but that were within the range of trained inputs. We tested static speed inputs with values between the eight input levels used during training. We also tested dynamic inputs whose value steadily increased from the smallest to the largest trained input in a continuous ramp.</p><p>To train networks that received unique inputs for each speed (<xref ref-type="fig" rid="fig3s2">Figure 3—figure supplement 2C, d</xref>), networks were trained with the same equations as above. However, the input <inline-formula><mml:math id="inf103"><mml:mi>u</mml:mi></mml:math></inline-formula> was now a one-hot encoding vector of dimension 8. that is, if the target output was the muscle activity for speed-bin 3, the static input was [0,0,1,0,0,0,0,0].</p></sec><sec id="s4-13"><title>Tangling</title><p>Trajectory tangling <italic>Q(t</italic>) is described in detail in <xref ref-type="bibr" rid="bib41">Russo et al., 2018</xref>, and is defined as<disp-formula id="equ5"><mml:math id="m5"><mml:mi>Q</mml:mi><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>)</mml:mo><mml:mo>=</mml:mo><mml:munder><mml:mrow><mml:mi>m</mml:mi><mml:mi>a</mml:mi><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mi>t</mml:mi><mml:mi>`</mml:mi></mml:mrow></mml:munder><mml:mfrac><mml:mrow><mml:mo>|</mml:mo><mml:mo>|</mml:mo><mml:mover accent="true"><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mo>˙</mml:mo></mml:mover><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>)</mml:mo><mml:mo>-</mml:mo><mml:mover accent="true"><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mo>˙</mml:mo></mml:mover><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mi>`</mml:mi><mml:mo>)</mml:mo><mml:mo>|</mml:mo><mml:msup><mml:mrow><mml:msub><mml:mrow><mml:mo>|</mml:mo></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msub></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msup></mml:mrow><mml:mrow><mml:mo>|</mml:mo><mml:mo>|</mml:mo><mml:mi>x</mml:mi><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>)</mml:mo><mml:mo>-</mml:mo><mml:mi>x</mml:mi><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mi>`</mml:mi><mml:mo>)</mml:mo><mml:mo>|</mml:mo><mml:msup><mml:mrow><mml:msub><mml:mrow><mml:mo>|</mml:mo></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msub></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msup><mml:mo>+</mml:mo><mml:mi>ϵ</mml:mi></mml:mrow></mml:mfrac></mml:math></disp-formula></p><p>Here, <inline-formula><mml:math id="inf104"><mml:mi>x</mml:mi><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>)</mml:mo></mml:math></inline-formula> is the neural state at time t, <inline-formula><mml:math id="inf105"><mml:mover accent="true"><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mo>˙</mml:mo></mml:mover><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>)</mml:mo></mml:math></inline-formula> is its temporal derivative, || . || is the Euclidean norm, and <inline-formula><mml:math id="inf106"><mml:mi>ϵ</mml:mi></mml:math></inline-formula> is a small constant that prevents division by 0. Briefly, the neural state, <inline-formula><mml:math id="inf107"><mml:mi>x</mml:mi><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>)</mml:mo></mml:math></inline-formula> is a vector comprised of the <inline-formula><mml:math id="inf108"><mml:msup><mml:mrow><mml:mi>t</mml:mi></mml:mrow><mml:mrow><mml:mi>t</mml:mi><mml:mi>h</mml:mi></mml:mrow></mml:msup></mml:math></inline-formula> column of <inline-formula><mml:math id="inf109"><mml:mi>X</mml:mi></mml:math></inline-formula>, where <inline-formula><mml:math id="inf110"><mml:mi>X</mml:mi></mml:math></inline-formula> is the neural activity projected into its principal components. Muscle tangling was computed analogously, based on <inline-formula><mml:math id="inf111"><mml:mi>Z</mml:mi></mml:math></inline-formula>. We computed the derivative of the state as <inline-formula><mml:math id="inf112"><mml:msub><mml:mrow><mml:mover accent="true"><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mo>˙</mml:mo></mml:mover></mml:mrow><mml:mrow><mml:mi>t</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mfrac><mml:mrow><mml:msub><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mi>t</mml:mi></mml:mrow></mml:msub><mml:mo>-</mml:mo><mml:msub><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mi>t</mml:mi><mml:mo>-</mml:mo><mml:mi>Δ</mml:mi><mml:mi>t</mml:mi></mml:mrow></mml:msub></mml:mrow><mml:mrow><mml:mi>Δ</mml:mi><mml:mi>t</mml:mi></mml:mrow></mml:mfrac></mml:math></inline-formula> , where <inline-formula><mml:math id="inf113"><mml:mi>Δ</mml:mi><mml:mi>t</mml:mi></mml:math></inline-formula> was 1ms. The constant <inline-formula><mml:math id="inf114"><mml:mi>ϵ</mml:mi></mml:math></inline-formula> (set to 0.1 times the variance of <inline-formula><mml:math id="inf115"><mml:mi>x</mml:mi></mml:math></inline-formula>) determines how small the denominator can become, which prevents the denominator from shrinking below 0.1 times the average squared distance from zero. To assess robustness, tangling was typically computed for different dimensionalities of <inline-formula><mml:math id="inf116"><mml:mi>X</mml:mi></mml:math></inline-formula> and <inline-formula><mml:math id="inf117"><mml:mi>Z</mml:mi></mml:math></inline-formula> and in some cases was computed in the full-dimensional space without applying PCA (in which case the neural state is simply a vector of firing rates and the muscle state is simply a vector of muscle-activity values).</p></sec><sec id="s4-14"><title>Path similarity</title><p>Path similarity was calculated in a two-dimensional subspace. Path similarity quantified the degree to which trajectory shape changed as one moved away from a ‘reference speed’. Analysis considered the trajectory for each of the eight speed bins. We refer to the two-dimensional trajectory (in the top two PCs) for a given speed bin as <inline-formula><mml:math id="inf118"><mml:msub><mml:mrow><mml:mi>X</mml:mi></mml:mrow><mml:mrow><mml:mi>s</mml:mi></mml:mrow></mml:msub></mml:math></inline-formula> . We picked a particular speed bin to provide the reference trajectory, <inline-formula><mml:math id="inf119"><mml:msub><mml:mrow><mml:mi>X</mml:mi></mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>s</mml:mi></mml:mrow><mml:mrow><mml:mi>r</mml:mi><mml:mi>e</mml:mi><mml:mi>f</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub></mml:math></inline-formula> . <inline-formula><mml:math id="inf120"><mml:msub><mml:mrow><mml:mi>X</mml:mi></mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>s</mml:mi></mml:mrow><mml:mrow><mml:mi>r</mml:mi><mml:mi>e</mml:mi><mml:mi>f</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub></mml:math></inline-formula> is of size <inline-formula><mml:math id="inf121"><mml:mn>2</mml:mn><mml:mo>×</mml:mo><mml:msub><mml:mrow><mml:mi>T</mml:mi></mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>s</mml:mi></mml:mrow><mml:mrow><mml:mi>r</mml:mi><mml:mi>e</mml:mi><mml:mi>f</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub></mml:math></inline-formula> , where <inline-formula><mml:math id="inf122"><mml:msub><mml:mrow><mml:mi>T</mml:mi></mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>s</mml:mi></mml:mrow><mml:mrow><mml:mi>r</mml:mi><mml:mi>e</mml:mi><mml:mi>f</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub></mml:math></inline-formula> are the number of milliseconds it took to complete a cycle for that speed bin. Because every speed bin necessarily had a different number of timepoints, once the reference trajectory was chosen, every other <inline-formula><mml:math id="inf123"><mml:msub><mml:mrow><mml:mi>X</mml:mi></mml:mrow><mml:mrow><mml:mi>s</mml:mi></mml:mrow></mml:msub></mml:math></inline-formula> was interpolated or compressed (along the time axis) to be of size <inline-formula><mml:math id="inf124"><mml:mn>2</mml:mn><mml:mo>×</mml:mo><mml:msub><mml:mrow><mml:mi>T</mml:mi></mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>s</mml:mi></mml:mrow><mml:mrow><mml:mi>r</mml:mi><mml:mi>e</mml:mi><mml:mi>f</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub></mml:math></inline-formula> . We then quantified the similarity of every <inline-formula><mml:math id="inf125"><mml:msub><mml:mrow><mml:mi>X</mml:mi></mml:mrow><mml:mrow><mml:mi>s</mml:mi></mml:mrow></mml:msub></mml:math></inline-formula> to <inline-formula><mml:math id="inf126"><mml:msub><mml:mrow><mml:mi>X</mml:mi></mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>s</mml:mi></mml:mrow><mml:mrow><mml:mi>r</mml:mi><mml:mi>e</mml:mi><mml:mi>f</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub></mml:math></inline-formula> , allowing for a rigid rotation of <inline-formula><mml:math id="inf127"><mml:msub><mml:mrow><mml:mi>X</mml:mi></mml:mrow><mml:mrow><mml:mi>s</mml:mi></mml:mrow></mml:msub></mml:math></inline-formula> to minimize the root mean squared (RMS) distance from the reference trajectory <inline-formula><mml:math id="inf128"><mml:msub><mml:mrow><mml:mi>X</mml:mi></mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>s</mml:mi></mml:mrow><mml:mrow><mml:mi>r</mml:mi><mml:mi>e</mml:mi><mml:mi>f</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub></mml:math></inline-formula> . To do so we found the rotation matrix <inline-formula><mml:math id="inf129"><mml:mi>R</mml:mi></mml:math></inline-formula> that minimized the cost function <inline-formula><mml:math id="inf130"><mml:munder><mml:mrow><mml:mi>m</mml:mi><mml:mi>i</mml:mi><mml:mi>n</mml:mi></mml:mrow><mml:mrow><mml:mi>R</mml:mi></mml:mrow></mml:munder><mml:mo>|</mml:mo><mml:mo>|</mml:mo><mml:msub><mml:mrow><mml:mi>X</mml:mi></mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>s</mml:mi></mml:mrow><mml:mrow><mml:mi>r</mml:mi><mml:mi>e</mml:mi><mml:mi>f</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub><mml:mo>-</mml:mo><mml:mi>R</mml:mi><mml:msub><mml:mrow><mml:mi>X</mml:mi></mml:mrow><mml:mrow><mml:mi>s</mml:mi></mml:mrow></mml:msub><mml:mo>|</mml:mo><mml:msup><mml:mrow><mml:msub><mml:mrow><mml:mo>|</mml:mo></mml:mrow><mml:mrow><mml:mi>F</mml:mi></mml:mrow></mml:msub></mml:mrow><mml:mrow/></mml:msup><mml:mi> </mml:mi><mml:mi>s</mml:mi><mml:mo>.</mml:mo><mml:mi>t</mml:mi><mml:mo>.</mml:mo><mml:mi> </mml:mi><mml:msup><mml:mrow><mml:mi>R</mml:mi></mml:mrow><mml:mrow><mml:mi>T</mml:mi></mml:mrow></mml:msup><mml:mi>R</mml:mi><mml:mo>=</mml:mo><mml:mi>I</mml:mi><mml:mo>,</mml:mo><mml:mi> </mml:mi><mml:mi>d</mml:mi><mml:mi>e</mml:mi><mml:mi>t</mml:mi><mml:mo>(</mml:mo><mml:mi>R</mml:mi><mml:mo>)</mml:mo><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:math></inline-formula>. The solution was implemented using singular value decomposition as in the Kabsch algorithm (<xref ref-type="bibr" rid="bib20">Kabsch, 1976</xref>). The coefficient of determination <inline-formula><mml:math id="inf131"><mml:msup><mml:mrow><mml:mi>R</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msup><mml:mo>(</mml:mo><mml:msub><mml:mrow><mml:mi>X</mml:mi></mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>s</mml:mi></mml:mrow><mml:mrow><mml:mi>r</mml:mi><mml:mi>e</mml:mi><mml:mi>f</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mrow><mml:mi>R</mml:mi><mml:mi>X</mml:mi></mml:mrow><mml:mrow><mml:mi>s</mml:mi></mml:mrow></mml:msub><mml:mo>)</mml:mo></mml:math></inline-formula> between the reference trajectory and the rotated trajectory was calculated. There was one such value of <inline-formula><mml:math id="inf132"><mml:msup><mml:mrow><mml:mi>R</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msup></mml:math></inline-formula> for every possible combination of <inline-formula><mml:math id="inf133"><mml:msub><mml:mrow><mml:mi>X</mml:mi></mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>s</mml:mi></mml:mrow><mml:mrow><mml:mi>r</mml:mi><mml:mi>e</mml:mi><mml:mi>f</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub></mml:math></inline-formula> and <inline-formula><mml:math id="inf134"><mml:msub><mml:mrow><mml:mi>X</mml:mi></mml:mrow><mml:mrow><mml:mi>s</mml:mi></mml:mrow></mml:msub></mml:math></inline-formula> . For each <inline-formula><mml:math id="inf135"><mml:msub><mml:mrow><mml:mi>s</mml:mi></mml:mrow><mml:mrow><mml:mi>d</mml:mi><mml:mi>i</mml:mi><mml:mi>f</mml:mi><mml:mi>f</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mo>{</mml:mo><mml:mo>±</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mi> </mml:mi><mml:mo>±</mml:mo><mml:mn>2</mml:mn><mml:mo>,</mml:mo><mml:mi> </mml:mi><mml:mo>.</mml:mo><mml:mo>.</mml:mo><mml:mo>.</mml:mo><mml:mi> </mml:mi><mml:mo>±</mml:mo><mml:mn>5</mml:mn><mml:mo>}</mml:mo></mml:math></inline-formula>, we computed the average (and standard error) of the <inline-formula><mml:math id="inf136"><mml:msup><mml:mrow><mml:mi>R</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msup></mml:math></inline-formula> values for all comparisons where <inline-formula><mml:math id="inf137"><mml:msub><mml:mrow><mml:mi>s</mml:mi></mml:mrow><mml:mrow><mml:mi>d</mml:mi><mml:mi>i</mml:mi><mml:mi>f</mml:mi><mml:mi>f</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mi> </mml:mi><mml:msub><mml:mrow><mml:mi>s</mml:mi><mml:mo>-</mml:mo><mml:mi>s</mml:mi></mml:mrow><mml:mrow><mml:mi>r</mml:mi><mml:mi>e</mml:mi><mml:mi>f</mml:mi></mml:mrow></mml:msub></mml:math></inline-formula> . For example, for <inline-formula><mml:math id="inf138"><mml:msub><mml:mrow><mml:mi>s</mml:mi></mml:mrow><mml:mrow><mml:mi>d</mml:mi><mml:mi>i</mml:mi><mml:mi>f</mml:mi><mml:mi>f</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mn>5</mml:mn></mml:math></inline-formula>, we averaged the <inline-formula><mml:math id="inf139"><mml:msup><mml:mrow><mml:mi>R</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msup></mml:math></inline-formula> values obtained when comparing speed bins 1 vs 6, 2 vs 7, and 3 vs 8. We repeated this analysis, for the neural data, using 2D subspaces defined by higher PCs.</p></sec><sec id="s4-15"><title>Speed axis</title><p>To create <xref ref-type="fig" rid="fig6">Figure 6c</xref>, we plotted the data projected into a three-dimensional space spanned by the top two PCs and a ‘speed axis’. The speed axis was calculated by finding the one-dimensional axis in the neural data that best decodes the mean angular velocity and is orthogonal to the first two PCs. To restrict analysis to dimensions that captured considerable variance, the neural data was first projected into its top 12 PCs (PCA was performed across all times and speeds). We used the data projected into PCs 3–12 to find the speed axis. We calculated the mean of the neural data in each speed <inline-formula><mml:math id="inf140"><mml:mi>s</mml:mi></mml:math></inline-formula> as <inline-formula><mml:math id="inf141"><mml:msub><mml:mrow><mml:mover accent="true"><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mo>̄</mml:mo></mml:mover></mml:mrow><mml:mrow><mml:mi>s</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mfrac><mml:mrow><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>T</mml:mi></mml:mrow><mml:mrow><mml:mi>s</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mfrac><mml:mrow><mml:msubsup><mml:mo>∑</mml:mo><mml:mrow><mml:mi>t</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>T</mml:mi></mml:mrow><mml:mrow><mml:mi>s</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msubsup><mml:mrow/></mml:mrow><mml:msub><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mi>s</mml:mi></mml:mrow></mml:msub><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>)</mml:mo></mml:math></inline-formula>, where <inline-formula><mml:math id="inf142"><mml:msub><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mi>s</mml:mi></mml:mrow></mml:msub><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>)</mml:mo></mml:math></inline-formula> is the data for speed <inline-formula><mml:math id="inf143"><mml:mi>s</mml:mi></mml:math></inline-formula> at time <inline-formula><mml:math id="inf144"><mml:mi>t</mml:mi></mml:math></inline-formula>, projected into the across-speed PCs 3–12 (and is thus of size 10 × 1). We found the linear decoder <inline-formula><mml:math id="inf145"><mml:mi>d</mml:mi></mml:math></inline-formula> of size 10 × 1 that minimizes the following cost function.<disp-formula id="equ6"><mml:math id="m6"><mml:mo>|</mml:mo><mml:mo>|</mml:mo><mml:mi> </mml:mi><mml:mo>[</mml:mo><mml:msub><mml:mrow><mml:mover accent="true"><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mo>̄</mml:mo></mml:mover></mml:mrow><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:msub><mml:mrow><mml:mi> </mml:mi><mml:mover accent="true"><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mo>̄</mml:mo></mml:mover></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msub><mml:mo>.</mml:mo><mml:mo>.</mml:mo><mml:mo>.</mml:mo><mml:mi> </mml:mi><mml:msub><mml:mrow><mml:mover accent="true"><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mo>̄</mml:mo></mml:mover></mml:mrow><mml:mrow><mml:mn>8</mml:mn></mml:mrow></mml:msub><mml:mo>]</mml:mo><mml:mi> </mml:mi><mml:mi>d</mml:mi><mml:mi> </mml:mi><mml:mo>-</mml:mo><mml:mi> </mml:mi><mml:mo>[</mml:mo><mml:msub><mml:mrow><mml:mover accent="true"><mml:mrow><mml:mi>v</mml:mi></mml:mrow><mml:mo>̄</mml:mo></mml:mover></mml:mrow><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:msub><mml:mrow><mml:mi> </mml:mi><mml:mover accent="true"><mml:mrow><mml:mi>v</mml:mi></mml:mrow><mml:mo>̄</mml:mo></mml:mover></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msub><mml:mo>.</mml:mo><mml:mo>.</mml:mo><mml:mo>.</mml:mo><mml:mi> </mml:mi><mml:msub><mml:mrow><mml:mover accent="true"><mml:mrow><mml:mi>v</mml:mi></mml:mrow><mml:mo>̄</mml:mo></mml:mover></mml:mrow><mml:mrow><mml:mn>8</mml:mn></mml:mrow></mml:msub><mml:mo>]</mml:mo><mml:mi> </mml:mi><mml:mo>|</mml:mo><mml:msub><mml:mrow><mml:mo>|</mml:mo></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msub></mml:math></disp-formula><disp-formula id="equ7"><mml:math id="m7"><mml:mi>s</mml:mi><mml:mo>.</mml:mo><mml:mi>t</mml:mi><mml:mo>.</mml:mo><mml:mi> </mml:mi><mml:mo>|</mml:mo><mml:mo>|</mml:mo><mml:mi>d</mml:mi><mml:mo>|</mml:mo><mml:msub><mml:mrow><mml:mo>|</mml:mo></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msub><mml:mi> </mml:mi><mml:mo>=</mml:mo><mml:mi> </mml:mi><mml:mn>1</mml:mn></mml:math></disp-formula></p><p>Here, <inline-formula><mml:math id="inf146"><mml:msub><mml:mrow><mml:mover accent="true"><mml:mrow><mml:mi>v</mml:mi></mml:mrow><mml:mo>̄</mml:mo></mml:mover></mml:mrow><mml:mrow><mml:mi>s</mml:mi></mml:mrow></mml:msub></mml:math></inline-formula> is the mean-centered mean angular velocity of the hand during speed bin <inline-formula><mml:math id="inf147"><mml:mi>s</mml:mi></mml:math></inline-formula>. Analogous methods were applied to the muscle data.</p></sec><sec id="s4-16"><title>Trajectories with artificially rescaled time</title><p>We wanted to test how high trajectory tangling would rise for neural data if trajectories were constrained to follow the same path for all speeds. To simulate such trajectories, we used the path taken during speed bin 6 as the reference path and rescaled time to generate the trajectories at all other speeds. To include the effect of biophysically based noise, we simulated spike trains for each neuron at each speed, using the trajectory as the conditional intensity function. The same number of trials were simulated as the original number of trials for that neuron. The thinning method was used to simulate spike trains; this simulates a point process given a bounded conditional intensity function (<xref ref-type="bibr" rid="bib32">Ogata, 1981</xref>). The same preprocessing steps were applied to these simulated spike trains as the neural recordings, and then trajectory tangling was computed as before. This process ensured that even though the ‘true’ trajectories were identical across speeds, the ’measured’ trajectories were not because they contained some realistic sampling error (without this, trajectory tangling could be inflated relative to real recorded data).</p></sec><sec id="s4-17"><title>Separation removed trajectories</title><p>Neural trajectories for different speeds differed (typically modestly) in shape and were separated by both a translation (a difference in their mean value) and by occupying different dimensions. To test whether these forms of separation were important for low tangling, we wished to remove them while maintaining trajectory shape. To do so, we used the speed bin 6 as the reference condition and interpolated or compressed the data in other speed bins such that they had the same number of time points as the reference condition. We then applied the optimal rotation to minimize RMS between the trajectories in all speed bins to the trajectory in the reference speed bin using the Kabsch algorithm, in the same way as described in the Path Similarity section of the Methods.</p></sec><sec id="s4-18"><title>Distance between trajectories</title><p>We chose one speed bin, <inline-formula><mml:math id="inf148"><mml:msub><mml:mrow><mml:mi>s</mml:mi></mml:mrow><mml:mrow><mml:mi>r</mml:mi><mml:mi>e</mml:mi><mml:mi>f</mml:mi></mml:mrow></mml:msub></mml:math></inline-formula> , as the reference condition (<inline-formula><mml:math id="inf149"><mml:msub><mml:mrow><mml:mi>s</mml:mi></mml:mrow><mml:mrow><mml:mi>r</mml:mi><mml:mi>e</mml:mi><mml:mi>f</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mn>4</mml:mn></mml:math></inline-formula> for the primary analysis). We interpolated or compressed the data in all other speed bins such that they had the same number of time points as the reference condition. Each time point corresponds to a phase <inline-formula><mml:math id="inf150"><mml:mi>θ</mml:mi></mml:math></inline-formula> describing the angular displacement of the pedal, with <inline-formula><mml:math id="inf151"><mml:mi>θ</mml:mi><mml:mo>=</mml:mo><mml:mn>0</mml:mn></mml:math></inline-formula> corresponding to the limb being in the vertical position. This allows us to define <inline-formula><mml:math id="inf152"><mml:msub><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>s</mml:mi></mml:mrow><mml:mrow><mml:mi>r</mml:mi><mml:mi>e</mml:mi><mml:mi>f</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub><mml:mo>(</mml:mo><mml:mi>θ</mml:mi><mml:mo>)</mml:mo></mml:math></inline-formula> to be the neural state in the reference trajectory when the pedal is at phase <inline-formula><mml:math id="inf153"><mml:mi>θ</mml:mi></mml:math></inline-formula>. For each other speed bin, we computed the phase-dependent distance between its trajectory and the reference trajectory as <inline-formula><mml:math id="inf154"><mml:msub><mml:mrow><mml:mi>Δ</mml:mi></mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mi>s</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub><mml:mo>(</mml:mo><mml:mi>θ</mml:mi><mml:mo>)</mml:mo><mml:mo>=</mml:mo><mml:mo>|</mml:mo><mml:mo>|</mml:mo><mml:msub><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>s</mml:mi></mml:mrow><mml:mrow><mml:mi>r</mml:mi><mml:mi>e</mml:mi><mml:mi>f</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub><mml:mo>(</mml:mo><mml:mi>θ</mml:mi><mml:mo>)</mml:mo><mml:mo>-</mml:mo><mml:msub><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mi>s</mml:mi></mml:mrow></mml:msub><mml:mo>(</mml:mo><mml:mi>θ</mml:mi><mml:mo>)</mml:mo><mml:mo>|</mml:mo><mml:msub><mml:mrow><mml:mo>|</mml:mo></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msub></mml:math></inline-formula> . The distance between the means was similarly calculated as <inline-formula><mml:math id="inf155"><mml:msub><mml:mrow><mml:mi>Δ</mml:mi></mml:mrow><mml:mrow><mml:mover accent="true"><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mo>̄</mml:mo></mml:mover></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mo>|</mml:mo><mml:mo>|</mml:mo><mml:msub><mml:mrow><mml:mover accent="true"><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mo>̄</mml:mo></mml:mover></mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>s</mml:mi></mml:mrow><mml:mrow><mml:mi>r</mml:mi><mml:mi>e</mml:mi><mml:mi>f</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub><mml:mo>-</mml:mo><mml:msub><mml:mrow><mml:mover accent="true"><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mo>̄</mml:mo></mml:mover></mml:mrow><mml:mrow><mml:mi>s</mml:mi></mml:mrow></mml:msub><mml:mo>|</mml:mo><mml:msub><mml:mrow><mml:mo>|</mml:mo></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msub></mml:math></inline-formula> , where <inline-formula><mml:math id="inf156"><mml:msub><mml:mrow><mml:mover accent="true"><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mo>̄</mml:mo></mml:mover></mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>s</mml:mi></mml:mrow><mml:mrow/></mml:msub></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mfrac><mml:mrow><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>T</mml:mi></mml:mrow><mml:mrow><mml:mi>s</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mfrac><mml:mrow><mml:msubsup><mml:mo>∑</mml:mo><mml:mrow><mml:mi>t</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>T</mml:mi></mml:mrow><mml:mrow><mml:mi>s</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msubsup><mml:mrow/></mml:mrow><mml:msub><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mi>s</mml:mi></mml:mrow></mml:msub><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>)</mml:mo></mml:math></inline-formula>.</p></sec></sec></body><back><sec id="s5" sec-type="additional-information"><title>Additional information</title><fn-group content-type="competing-interest"><title>Competing interests</title><fn fn-type="COI-statement" id="conf1"><p>No competing interests declared</p></fn><fn fn-type="COI-statement" id="conf2"><p>No competing interests declared</p></fn></fn-group><fn-group content-type="author-contribution"><title>Author contributions</title><fn fn-type="con" id="con1"><p>Conceptualization, Formal analysis, Investigation, Writing – original draft, Writing – review and editing</p></fn><fn fn-type="con" id="con2"><p>Conceptualization, Data curation, Formal analysis, Investigation, Methodology, Writing – original draft</p></fn><fn fn-type="con" id="con3"><p>Conceptualization, Supervision, Writing – original draft</p></fn><fn fn-type="con" id="con4"><p>Conceptualization, Funding acquisition, Investigation, Methodology, Project administration, Resources, Supervision, Visualization, Writing – original draft, Writing – review and editing</p></fn></fn-group><fn-group content-type="ethics-information"><title>Ethics</title><fn fn-type="other"><p>All protocols were in accord with the National Institutes of Health guidelines and approved by the Columbia University Institutional Animal Care and Use Committee. (Protocol number AC-AABE3550).</p></fn></fn-group></sec><sec id="s6" sec-type="supplementary-material"><title>Additional files</title><supplementary-material id="transrepform"><label>Transparent reporting form</label><media mime-subtype="docx" mimetype="application" xlink:href="elife-67620-transrepform1-v2.docx"/></supplementary-material></sec><sec id="s7" sec-type="data-availability"><title>Data availability</title><p>Neural and EMG data have been deposited in figshare: <ext-link ext-link-type="uri" xlink:href="https://figshare.com/s/b2a0557c239a1010d8ea">https://figshare.com/s/b2a0557c239a1010d8ea</ext-link>.</p><p>The following datasets were generated:</p><p><element-citation id="dataset1" publication-type="data" specific-use="isSupplementedBy"><person-group person-group-type="author"><name><surname>Russo</surname><given-names>AA</given-names></name><name><surname>Churchland</surname><given-names>MM</given-names></name></person-group><year iso-8601-date="2022">2022</year><data-title>Cousteau_cn_new.mat</data-title><source>figshare</source><pub-id pub-id-type="accession" xlink:href="https://figshare.com/s/b2a0557c239a1010d8ea?file=34512257">34512257</pub-id></element-citation></p><p><element-citation id="dataset2" publication-type="data" specific-use="isSupplementedBy"><person-group person-group-type="author"><name><surname>Russo</surname><given-names>AA</given-names></name><name><surname>Churchland</surname><given-names>MM</given-names></name></person-group><year iso-8601-date="2022">2022</year><data-title>Drake_cn_new.mat</data-title><source>figshare</source><pub-id pub-id-type="accession" xlink:href="https://figshare.com/s/b2a0557c239a1010d8ea?file=34512260">34512260</pub-id></element-citation></p></sec><ref-list><title>References</title><ref id="bib1"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Albert</surname><given-names>ST</given-names></name><name><surname>Hadjiosif</surname><given-names>AM</given-names></name><name><surname>Jang</surname><given-names>J</given-names></name><name><surname>Zimnik</surname><given-names>AJ</given-names></name><name><surname>Soteropoulos</surname><given-names>DS</given-names></name><name><surname>Baker</surname><given-names>SN</given-names></name><name><surname>Churchland</surname><given-names>MM</given-names></name><name><surname>Krakauer</surname><given-names>JW</given-names></name><name><surname>Shadmehr</surname><given-names>R</given-names></name></person-group><year iso-8601-date="2020">2020</year><article-title>Postural control of arm and fingers through integration of movement commands</article-title><source>eLife</source><volume>9</volume><elocation-id>e52507</elocation-id><pub-id pub-id-type="doi">10.7554/eLife.52507</pub-id><pub-id pub-id-type="pmid">32043973</pub-id></element-citation></ref><ref id="bib2"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Ames</surname><given-names>KC</given-names></name><name><surname>Churchland</surname><given-names>MM</given-names></name></person-group><year iso-8601-date="2019">2019</year><article-title>Motor cortex signals for each arm are mixed across hemispheres and neurons yet partitioned within the population response</article-title><source>eLife</source><volume>8</volume><elocation-id>e46159</elocation-id><pub-id pub-id-type="doi">10.7554/eLife.46159</pub-id><pub-id pub-id-type="pmid">31596230</pub-id></element-citation></ref><ref id="bib3"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Armstrong</surname><given-names>DM</given-names></name><name><surname>Drew</surname><given-names>T</given-names></name></person-group><year iso-8601-date="1984">1984</year><article-title>Discharges of pyramidal tract and other motor cortical neurones during locomotion in the cat</article-title><source>The Journal of Physiology</source><volume>346</volume><fpage>471</fpage><lpage>495</lpage><pub-id pub-id-type="doi">10.1113/jphysiol.1984.sp015036</pub-id><pub-id pub-id-type="pmid">6699782</pub-id></element-citation></ref><ref id="bib4"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Beloozerova</surname><given-names>IN</given-names></name><name><surname>Sirota</surname><given-names>MG</given-names></name></person-group><year iso-8601-date="1993">1993</year><article-title>The role of the motor cortex in the control of vigour of locomotor movements in the cat</article-title><source>The Journal of Physiology</source><volume>461</volume><fpage>27</fpage><lpage>46</lpage><pub-id pub-id-type="doi">10.1113/jphysiol.1993.sp019499</pub-id><pub-id pub-id-type="pmid">8350266</pub-id></element-citation></ref><ref id="bib5"><element-citation publication-type="preprint"><person-group person-group-type="author"><name><surname>Bernardi</surname><given-names>S</given-names></name><name><surname>Benna</surname><given-names>MK</given-names></name><name><surname>Rigotti</surname><given-names>M</given-names></name><name><surname>Munuera</surname><given-names>J</given-names></name><name><surname>Fusi</surname><given-names>S</given-names></name><name><surname>Salzman</surname><given-names>CD</given-names></name></person-group><year iso-8601-date="2018">2018</year><article-title>The Geometry of Abstraction in Hippocampus and Pre-Frontal Cortex</article-title><source>bioRxiv</source><pub-id pub-id-type="doi">10.1101/408633</pub-id></element-citation></ref><ref id="bib6"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Boerlin</surname><given-names>M</given-names></name><name><surname>Machens</surname><given-names>CK</given-names></name><name><surname>Denève</surname><given-names>S</given-names></name></person-group><year iso-8601-date="2013">2013</year><article-title>Predictive coding of dynamical variables in balanced spiking networks</article-title><source>PLOS Computational Biology</source><volume>9</volume><elocation-id>e1003258</elocation-id><pub-id pub-id-type="doi">10.1371/journal.pcbi.1003258</pub-id><pub-id pub-id-type="pmid">24244113</pub-id></element-citation></ref><ref id="bib7"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Briggman</surname><given-names>KL</given-names></name><name><surname>Kristan</surname><given-names>WB</given-names></name></person-group><year iso-8601-date="2008">2008</year><article-title>Multifunctional pattern-generating circuits</article-title><source>Annual Review of Neuroscience</source><volume>31</volume><fpage>271</fpage><lpage>294</lpage><pub-id pub-id-type="doi">10.1146/annurev.neuro.31.060407.125552</pub-id><pub-id pub-id-type="pmid">18558856</pub-id></element-citation></ref><ref id="bib8"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Bruno</surname><given-names>AM</given-names></name><name><surname>Frost</surname><given-names>WN</given-names></name><name><surname>Humphries</surname><given-names>MD</given-names></name></person-group><year iso-8601-date="2017">2017</year><article-title>A spiral attractor network drives rhythmic locomotion</article-title><source>eLife</source><volume>6</volume><elocation-id>e27342</elocation-id><pub-id pub-id-type="doi">10.7554/eLife.27342</pub-id><pub-id pub-id-type="pmid">28780929</pub-id></element-citation></ref><ref id="bib9"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Churchland</surname><given-names>MM</given-names></name><name><surname>Cunningham</surname><given-names>JP</given-names></name><name><surname>Kaufman</surname><given-names>MT</given-names></name><name><surname>Foster</surname><given-names>JD</given-names></name><name><surname>Nuyujukian</surname><given-names>P</given-names></name><name><surname>Ryu</surname><given-names>SI</given-names></name><name><surname>Shenoy</surname><given-names>KV</given-names></name></person-group><year iso-8601-date="2012">2012</year><article-title>Neural population dynamics during reaching</article-title><source>Nature</source><volume>487</volume><fpage>51</fpage><lpage>56</lpage><pub-id pub-id-type="doi">10.1038/nature11129</pub-id><pub-id pub-id-type="pmid">22722855</pub-id></element-citation></ref><ref id="bib10"><element-citation publication-type="preprint"><person-group person-group-type="author"><name><surname>DePasquale</surname><given-names>B</given-names></name><name><surname>Churchland</surname><given-names>MM</given-names></name><name><surname>Abbott</surname><given-names>LF</given-names></name></person-group><year iso-8601-date="2016">2016</year><article-title>Using Firing-Rate Dynamics to Train Recurrent Networks of Spiking Model Neurons</article-title><source>arXiv</source><ext-link ext-link-type="uri" xlink:href="https://arxiv.org/abs/1601.07620">https://arxiv.org/abs/1601.07620</ext-link></element-citation></ref><ref id="bib11"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>DiCarlo</surname><given-names>JJ</given-names></name><name><surname>Zoccolan</surname><given-names>D</given-names></name><name><surname>Rust</surname><given-names>NC</given-names></name></person-group><year iso-8601-date="2012">2012</year><article-title>How does the brain solve visual object recognition?</article-title><source>Neuron</source><volume>73</volume><fpage>415</fpage><lpage>434</lpage><pub-id pub-id-type="doi">10.1016/j.neuron.2012.01.010</pub-id><pub-id pub-id-type="pmid">22325196</pub-id></element-citation></ref><ref id="bib12"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Drew</surname><given-names>T</given-names></name><name><surname>Marigold</surname><given-names>DS</given-names></name></person-group><year iso-8601-date="2015">2015</year><article-title>Taking the next step: cortical contributions to the control of locomotion</article-title><source>Current Opinion in Neurobiology</source><volume>33</volume><fpage>25</fpage><lpage>33</lpage><pub-id pub-id-type="doi">10.1016/j.conb.2015.01.011</pub-id><pub-id pub-id-type="pmid">25643847</pub-id></element-citation></ref><ref id="bib13"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Eliasmith</surname><given-names>C</given-names></name></person-group><year iso-8601-date="2005">2005</year><article-title>A unified approach to building and controlling spiking attractor networks</article-title><source>Neural Computation</source><volume>17</volume><fpage>1276</fpage><lpage>1314</lpage><pub-id pub-id-type="doi">10.1162/0899766053630332</pub-id><pub-id pub-id-type="pmid">15901399</pub-id></element-citation></ref><ref id="bib14"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Foster</surname><given-names>JD</given-names></name><name><surname>Nuyujukian</surname><given-names>P</given-names></name><name><surname>Freifeld</surname><given-names>O</given-names></name><name><surname>Gao</surname><given-names>H</given-names></name><name><surname>Walker</surname><given-names>R</given-names></name><name><surname>I Ryu</surname><given-names>S</given-names></name><name><surname>H Meng</surname><given-names>T</given-names></name><name><surname>Murmann</surname><given-names>B</given-names></name><name><surname>J Black</surname><given-names>M</given-names></name><name><surname>Shenoy</surname><given-names>KV</given-names></name></person-group><year iso-8601-date="2014">2014</year><article-title>A freely-moving monkey treadmill model</article-title><source>Journal of Neural Engineering</source><volume>11</volume><elocation-id>046020</elocation-id><pub-id pub-id-type="doi">10.1088/1741-2560/11/4/046020</pub-id><pub-id pub-id-type="pmid">24995476</pub-id></element-citation></ref><ref id="bib15"><element-citation publication-type="software"><person-group person-group-type="author"><name><surname>Gal</surname><given-names>O</given-names></name></person-group><year iso-8601-date="2020">2020</year><data-title>fit_ellipse</data-title><version designator="1.0.0.0">1.0.0.0</version><publisher-name>MathWorks</publisher-name><ext-link ext-link-type="uri" xlink:href="https://www.mathworks.com/matlabcentral/fileexchange/3215-fit_ellipse">https://www.mathworks.com/matlabcentral/fileexchange/3215-fit_ellipse</ext-link></element-citation></ref><ref id="bib16"><element-citation publication-type="book"><person-group person-group-type="author"><name><surname>Grillner</surname><given-names>S</given-names></name></person-group><year iso-8601-date="1997">1997</year><chapter-title>Selection and Initiation of Motor Behavior</chapter-title><person-group person-group-type="editor"><name><surname>Katz</surname><given-names>PS</given-names></name></person-group><source>Neurons, Networks, and Motor Behavior</source><publisher-name>MIT Press</publisher-name><fpage>3</fpage><lpage>19</lpage></element-citation></ref><ref id="bib17"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Guo</surname><given-names>ZV</given-names></name><name><surname>Inagaki</surname><given-names>HK</given-names></name><name><surname>Daie</surname><given-names>K</given-names></name><name><surname>Druckmann</surname><given-names>S</given-names></name><name><surname>Gerfen</surname><given-names>CR</given-names></name><name><surname>Svoboda</surname><given-names>K</given-names></name></person-group><year iso-8601-date="2017">2017</year><article-title>Maintenance of persistent activity in a frontal thalamocortical loop</article-title><source>Nature</source><volume>545</volume><fpage>181</fpage><lpage>186</lpage><pub-id pub-id-type="doi">10.1038/nature22324</pub-id><pub-id pub-id-type="pmid">28467817</pub-id></element-citation></ref><ref id="bib18"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Hall</surname><given-names>TM</given-names></name><name><surname>de Carvalho</surname><given-names>F</given-names></name><name><surname>Jackson</surname><given-names>A</given-names></name></person-group><year iso-8601-date="2014">2014</year><article-title>A common structure underlies low-frequency cortical dynamics in movement, sleep, and sedation</article-title><source>Neuron</source><volume>83</volume><fpage>1185</fpage><lpage>1199</lpage><pub-id pub-id-type="doi">10.1016/j.neuron.2014.07.022</pub-id><pub-id pub-id-type="pmid">25132467</pub-id></element-citation></ref><ref id="bib19"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Hénaff</surname><given-names>OJ</given-names></name><name><surname>Goris</surname><given-names>RLT</given-names></name><name><surname>Simoncelli</surname><given-names>EP</given-names></name></person-group><year iso-8601-date="2019">2019</year><article-title>Perceptual straightening of natural videos</article-title><source>Nature Neuroscience</source><volume>22</volume><fpage>984</fpage><lpage>991</lpage><pub-id pub-id-type="doi">10.1038/s41593-019-0377-4</pub-id><pub-id pub-id-type="pmid">31036946</pub-id></element-citation></ref><ref id="bib20"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Kabsch</surname><given-names>W</given-names></name></person-group><year iso-8601-date="1976">1976</year><article-title>A solution for the best rotation to relate two sets of vectors</article-title><source>Acta Crystallographica Section A</source><volume>32</volume><fpage>922</fpage><lpage>923</lpage><pub-id pub-id-type="doi">10.1107/S0567739476001873</pub-id></element-citation></ref><ref id="bib21"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Kalidindi</surname><given-names>HT</given-names></name><name><surname>Cross</surname><given-names>KP</given-names></name><name><surname>Lillicrap</surname><given-names>TP</given-names></name><name><surname>Omrani</surname><given-names>M</given-names></name><name><surname>Falotico</surname><given-names>E</given-names></name><name><surname>Sabes</surname><given-names>PN</given-names></name><name><surname>Scott</surname><given-names>SH</given-names></name></person-group><year iso-8601-date="2021">2021</year><article-title>Rotational dynamics in motor cortex are consistent with a feedback controller</article-title><source>eLife</source><volume>10</volume><elocation-id>e67256</elocation-id><pub-id pub-id-type="doi">10.7554/eLife.67256</pub-id><pub-id pub-id-type="pmid">34730516</pub-id></element-citation></ref><ref id="bib22"><element-citation publication-type="preprint"><person-group person-group-type="author"><name><surname>Kao</surname><given-names>TC</given-names></name><name><surname>Sadabadi</surname><given-names>MS</given-names></name><name><surname>Hennequin</surname><given-names>G</given-names></name></person-group><year iso-8601-date="2020">2020</year><article-title>Optimal Anticipatory Control as A Theory of Motor Preparation: A Thalamo-Cortical Circuit Model</article-title><source>bioRxiv</source><pub-id pub-id-type="doi">10.1101/2020.02.02.931246</pub-id></element-citation></ref><ref id="bib23"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Krouchev</surname><given-names>N</given-names></name><name><surname>Kalaska</surname><given-names>JF</given-names></name><name><surname>Drew</surname><given-names>T</given-names></name></person-group><year iso-8601-date="2006">2006</year><article-title>Sequential activation of muscle synergies during locomotion in the intact cat as revealed by cluster analysis and direct decomposition</article-title><source>Journal of Neurophysiology</source><volume>96</volume><fpage>1991</fpage><lpage>2010</lpage><pub-id pub-id-type="doi">10.1152/jn.00241.2006</pub-id><pub-id pub-id-type="pmid">16823029</pub-id></element-citation></ref><ref id="bib24"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Lillicrap</surname><given-names>TP</given-names></name><name><surname>Scott</surname><given-names>SH</given-names></name></person-group><year iso-8601-date="2013">2013</year><article-title>Preference distributions of primary motor cortex neurons reflect control solutions optimized for limb biomechanics</article-title><source>Neuron</source><volume>77</volume><fpage>168</fpage><lpage>179</lpage><pub-id pub-id-type="doi">10.1016/j.neuron.2012.10.041</pub-id><pub-id pub-id-type="pmid">23312524</pub-id></element-citation></ref><ref id="bib25"><element-citation publication-type="preprint"><person-group person-group-type="author"><name><surname>Lindén</surname><given-names>H</given-names></name><name><surname>Petersen</surname><given-names>PC</given-names></name><name><surname>Vestergaard</surname><given-names>M</given-names></name><name><surname>Berg</surname><given-names>RW</given-names></name></person-group><year iso-8601-date="2021">2021</year><article-title>Movement Is Governed by Rotational Population Dynamics in Spinal Motor Networks</article-title><source>bioRxiv</source><pub-id pub-id-type="doi">10.1101/2021.08.31.458405</pub-id></element-citation></ref><ref id="bib26"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Lindsay</surname><given-names>GW</given-names></name><name><surname>Miller</surname><given-names>KD</given-names></name></person-group><year iso-8601-date="2018">2018</year><article-title>How biological attention mechanisms improve task performance in a large-scale visual system model</article-title><source>eLife</source><volume>7</volume><elocation-id>e38105</elocation-id><pub-id pub-id-type="doi">10.7554/eLife.38105</pub-id><pub-id pub-id-type="pmid">30272560</pub-id></element-citation></ref><ref id="bib27"><element-citation publication-type="preprint"><person-group person-group-type="author"><name><surname>Maheswaranathan</surname><given-names>N</given-names></name><name><surname>Williams</surname><given-names>AH</given-names></name><name><surname>Golub</surname><given-names>MD</given-names></name><name><surname>Ganguli</surname><given-names>S</given-names></name><name><surname>Sussillo</surname><given-names>D</given-names></name></person-group><year iso-8601-date="2019">2019</year><article-title>Universality and Individuality in Neural Dynamics across Large Populations of Recurrent Networks</article-title><source>arXiv</source><ext-link ext-link-type="uri" xlink:href="https://arxiv.org/abs/1907.08549v1">https://arxiv.org/abs/1907.08549v1</ext-link></element-citation></ref><ref id="bib28"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Mante</surname><given-names>V</given-names></name><name><surname>Sussillo</surname><given-names>D</given-names></name><name><surname>Shenoy</surname><given-names>KV</given-names></name><name><surname>Newsome</surname><given-names>WT</given-names></name></person-group><year iso-8601-date="2013">2013</year><article-title>Context-dependent computation by recurrent dynamics in prefrontal cortex</article-title><source>Nature</source><volume>503</volume><fpage>78</fpage><lpage>84</lpage><pub-id pub-id-type="doi">10.1038/nature12742</pub-id><pub-id pub-id-type="pmid">24201281</pub-id></element-citation></ref><ref id="bib29"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Michaels</surname><given-names>JA</given-names></name><name><surname>Dann</surname><given-names>B</given-names></name><name><surname>Scherberger</surname><given-names>H</given-names></name></person-group><year iso-8601-date="2016">2016</year><article-title>Neural Population Dynamics during Reaching Are Better Explained by a Dynamical System than Representational Tuning</article-title><source>PLOS Computational Biology</source><volume>12</volume><elocation-id>e1005175</elocation-id><pub-id pub-id-type="doi">10.1371/journal.pcbi.1005175</pub-id><pub-id pub-id-type="pmid">27814352</pub-id></element-citation></ref><ref id="bib30"><element-citation publication-type="preprint"><person-group person-group-type="author"><name><surname>Michaels</surname><given-names>JA</given-names></name><name><surname>Schaffelhofer</surname><given-names>S</given-names></name><name><surname>Agudelo-Toro</surname><given-names>A</given-names></name><name><surname>Scherberger</surname><given-names>H</given-names></name></person-group><year iso-8601-date="2019">2019</year><article-title>A Modular Neural Network Model of Grasp Movement Generation</article-title><source>bioRxiv</source><pub-id pub-id-type="doi">10.1101/742189</pub-id></element-citation></ref><ref id="bib31"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Middleton</surname><given-names>FA</given-names></name><name><surname>Strick</surname><given-names>PL</given-names></name></person-group><year iso-8601-date="2000">2000</year><article-title>Basal ganglia and cerebellar loops: motor and cognitive circuits</article-title><source>Brain Research. Brain Research Reviews</source><volume>31</volume><fpage>236</fpage><lpage>250</lpage><pub-id pub-id-type="doi">10.1016/s0165-0173(99)00040-5</pub-id><pub-id pub-id-type="pmid">10719151</pub-id></element-citation></ref><ref id="bib32"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Ogata</surname><given-names>Y</given-names></name></person-group><year iso-8601-date="1981">1981</year><article-title>On Lewis’ simulation method for point processes</article-title><source>IEEE Transactions on Information Theory</source><volume>27</volume><fpage>23</fpage><lpage>31</lpage><pub-id pub-id-type="doi">10.1109/TIT.1981.1056305</pub-id></element-citation></ref><ref id="bib33"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Pandarinath</surname><given-names>C</given-names></name><name><surname>O’Shea</surname><given-names>DJ</given-names></name><name><surname>Collins</surname><given-names>J</given-names></name><name><surname>Jozefowicz</surname><given-names>R</given-names></name><name><surname>Stavisky</surname><given-names>SD</given-names></name><name><surname>Kao</surname><given-names>JC</given-names></name><name><surname>Trautmann</surname><given-names>EM</given-names></name><name><surname>Kaufman</surname><given-names>MT</given-names></name><name><surname>Ryu</surname><given-names>SI</given-names></name><name><surname>Hochberg</surname><given-names>LR</given-names></name><name><surname>Henderson</surname><given-names>JM</given-names></name><name><surname>Shenoy</surname><given-names>KV</given-names></name><name><surname>Abbott</surname><given-names>LF</given-names></name><name><surname>Sussillo</surname><given-names>D</given-names></name></person-group><year iso-8601-date="2018">2018</year><article-title>Inferring single-trial neural population dynamics using sequential auto-encoders</article-title><source>Nature Methods</source><volume>15</volume><fpage>805</fpage><lpage>815</lpage><pub-id pub-id-type="doi">10.1038/s41592-018-0109-9</pub-id><pub-id pub-id-type="pmid">30224673</pub-id></element-citation></ref><ref id="bib34"><element-citation publication-type="preprint"><person-group person-group-type="author"><name><surname>Perich</surname><given-names>MG</given-names></name><name><surname>Conti</surname><given-names>S</given-names></name><name><surname>Badi</surname><given-names>M</given-names></name><name><surname>Bogaard</surname><given-names>A</given-names></name><name><surname>Barra</surname><given-names>B</given-names></name><name><surname>Wurth</surname><given-names>S</given-names></name><name><surname>Bloch</surname><given-names>J</given-names></name><name><surname>Courtine</surname><given-names>G</given-names></name><name><surname>Micera</surname><given-names>S</given-names></name><name><surname>Capogrosso</surname><given-names>M</given-names></name><name><surname>Milekovic</surname><given-names>T</given-names></name></person-group><year iso-8601-date="2020">2020</year><article-title>Motor Cortical Dynamics Are Shaped by Multiple Distinct Subspaces during Naturalistic Behavior</article-title><source>bioRxiv</source><pub-id pub-id-type="doi">10.1101/2020.07.30.228767</pub-id></element-citation></ref><ref id="bib35"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Perich</surname><given-names>MG</given-names></name><name><surname>Rajan</surname><given-names>K</given-names></name></person-group><year iso-8601-date="2020">2020</year><article-title>Rethinking brain-wide interactions through multi-region “network of networks” models</article-title><source>Current Opinion in Neurobiology</source><volume>65</volume><fpage>146</fpage><lpage>151</lpage><pub-id pub-id-type="doi">10.1016/j.conb.2020.11.003</pub-id><pub-id pub-id-type="pmid">33254073</pub-id></element-citation></ref><ref id="bib36"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Pruszynski</surname><given-names>JA</given-names></name><name><surname>Kurtzer</surname><given-names>I</given-names></name><name><surname>Nashed</surname><given-names>JY</given-names></name><name><surname>Omrani</surname><given-names>M</given-names></name><name><surname>Brouwer</surname><given-names>B</given-names></name><name><surname>Scott</surname><given-names>SH</given-names></name></person-group><year iso-8601-date="2011">2011</year><article-title>Primary motor cortex underlies multi-joint integration for fast feedback control</article-title><source>Nature</source><volume>478</volume><fpage>387</fpage><lpage>390</lpage><pub-id pub-id-type="doi">10.1038/nature10436</pub-id><pub-id pub-id-type="pmid">21964335</pub-id></element-citation></ref><ref id="bib37"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Pruszynski</surname><given-names>JA</given-names></name><name><surname>Scott</surname><given-names>SH</given-names></name></person-group><year iso-8601-date="2012">2012</year><article-title>Optimal feedback control and the long-latency stretch response</article-title><source>Experimental Brain Research</source><volume>218</volume><fpage>341</fpage><lpage>359</lpage><pub-id pub-id-type="doi">10.1007/s00221-012-3041-8</pub-id><pub-id pub-id-type="pmid">22370742</pub-id></element-citation></ref><ref id="bib38"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Pruszynski</surname><given-names>JA</given-names></name><name><surname>Omrani</surname><given-names>M</given-names></name><name><surname>Scott</surname><given-names>SH</given-names></name></person-group><year iso-8601-date="2014">2014</year><article-title>Goal-Dependent Modulation of Fast Feedback Responses in Primary Motor Cortex</article-title><source>Journal of Neuroscience</source><volume>34</volume><fpage>4608</fpage><lpage>4617</lpage><pub-id pub-id-type="doi">10.1523/JNEUROSCI.4520-13.2014</pub-id><pub-id pub-id-type="pmid">24672006</pub-id></element-citation></ref><ref id="bib39"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Rajan</surname><given-names>K</given-names></name><name><surname>Harvey</surname><given-names>CD</given-names></name><name><surname>Tank</surname><given-names>DW</given-names></name></person-group><year iso-8601-date="2016">2016</year><article-title>Recurrent Network Models of Sequence Generation and Memory</article-title><source>Neuron</source><volume>90</volume><fpage>128</fpage><lpage>142</lpage><pub-id pub-id-type="doi">10.1016/j.neuron.2016.02.009</pub-id><pub-id pub-id-type="pmid">26971945</pub-id></element-citation></ref><ref id="bib40"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Remington</surname><given-names>ED</given-names></name><name><surname>Narain</surname><given-names>D</given-names></name><name><surname>Hosseini</surname><given-names>EA</given-names></name><name><surname>Jazayeri</surname><given-names>M</given-names></name></person-group><year iso-8601-date="2018">2018</year><article-title>Flexible Sensorimotor Computations through Rapid Reconfiguration of Cortical Dynamics</article-title><source>Neuron</source><volume>98</volume><fpage>1005</fpage><lpage>1019</lpage><pub-id pub-id-type="doi">10.1016/j.neuron.2018.05.020</pub-id><pub-id pub-id-type="pmid">29879384</pub-id></element-citation></ref><ref id="bib41"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Russo</surname><given-names>AA</given-names></name><name><surname>Bittner</surname><given-names>SR</given-names></name><name><surname>Perkins</surname><given-names>SM</given-names></name><name><surname>Seely</surname><given-names>JS</given-names></name><name><surname>London</surname><given-names>BM</given-names></name><name><surname>Lara</surname><given-names>AH</given-names></name><name><surname>Miri</surname><given-names>A</given-names></name><name><surname>Marshall</surname><given-names>NJ</given-names></name><name><surname>Kohn</surname><given-names>A</given-names></name><name><surname>Jessell</surname><given-names>TM</given-names></name><name><surname>Abbott</surname><given-names>LF</given-names></name><name><surname>Cunningham</surname><given-names>JP</given-names></name><name><surname>Churchland</surname><given-names>MM</given-names></name></person-group><year iso-8601-date="2018">2018</year><article-title>Motor Cortex Embeds Muscle-like Commands in an Untangled Population Response</article-title><source>Neuron</source><volume>97</volume><fpage>953</fpage><lpage>966</lpage><pub-id pub-id-type="doi">10.1016/j.neuron.2018.01.004</pub-id><pub-id pub-id-type="pmid">29398358</pub-id></element-citation></ref><ref id="bib42"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Russo</surname><given-names>AA</given-names></name><name><surname>Khajeh</surname><given-names>R</given-names></name><name><surname>Bittner</surname><given-names>SR</given-names></name><name><surname>Perkins</surname><given-names>SM</given-names></name><name><surname>Cunningham</surname><given-names>JP</given-names></name><name><surname>Abbott</surname><given-names>LF</given-names></name><name><surname>Churchland</surname><given-names>MM</given-names></name></person-group><year iso-8601-date="2020">2020</year><article-title>Neural Trajectories in the Supplementary Motor Area and Motor Cortex Exhibit Distinct Geometries, Compatible with Different Classes of Computation</article-title><source>Neuron</source><volume>107</volume><fpage>745</fpage><lpage>758</lpage><pub-id pub-id-type="doi">10.1016/j.neuron.2020.05.020</pub-id><pub-id pub-id-type="pmid">32516573</pub-id></element-citation></ref><ref id="bib43"><element-citation publication-type="preprint"><person-group person-group-type="author"><name><surname>Sabatini</surname><given-names>DA</given-names></name><name><surname>Kaufman</surname><given-names>MT</given-names></name></person-group><year iso-8601-date="2021">2021</year><article-title>A Curved Manifold Orients Rotational Dynamics in Motor Cortex</article-title><source>bioRxiv</source><pub-id pub-id-type="doi">10.1101/2021.09.09.459647</pub-id></element-citation></ref><ref id="bib44"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Sauerbrei</surname><given-names>BA</given-names></name><name><surname>Guo</surname><given-names>J-Z</given-names></name><name><surname>Cohen</surname><given-names>JD</given-names></name><name><surname>Mischiati</surname><given-names>M</given-names></name><name><surname>Guo</surname><given-names>W</given-names></name><name><surname>Kabra</surname><given-names>M</given-names></name><name><surname>Verma</surname><given-names>N</given-names></name><name><surname>Mensh</surname><given-names>B</given-names></name><name><surname>Branson</surname><given-names>K</given-names></name><name><surname>Hantman</surname><given-names>AW</given-names></name></person-group><year iso-8601-date="2020">2020</year><article-title>Cortical pattern generation during dexterous movement is input-driven</article-title><source>Nature</source><volume>577</volume><fpage>386</fpage><lpage>391</lpage><pub-id pub-id-type="doi">10.1038/s41586-019-1869-9</pub-id><pub-id pub-id-type="pmid">31875851</pub-id></element-citation></ref><ref id="bib45"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Seely</surname><given-names>JS</given-names></name><name><surname>Kaufman</surname><given-names>MT</given-names></name><name><surname>Ryu</surname><given-names>SI</given-names></name><name><surname>Shenoy</surname><given-names>KV</given-names></name><name><surname>Cunningham</surname><given-names>JP</given-names></name><name><surname>Churchland</surname><given-names>MM</given-names></name></person-group><year iso-8601-date="2016">2016</year><article-title>Tensor Analysis Reveals Distinct Population Structure that Parallels the Different Computational Roles of Areas M1 and V1</article-title><source>PLOS Computational Biology</source><volume>12</volume><elocation-id>e1005164</elocation-id><pub-id pub-id-type="doi">10.1371/journal.pcbi.1005164</pub-id><pub-id pub-id-type="pmid">27814353</pub-id></element-citation></ref><ref id="bib46"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Shalit</surname><given-names>U</given-names></name><name><surname>Zinger</surname><given-names>N</given-names></name><name><surname>Joshua</surname><given-names>M</given-names></name><name><surname>Prut</surname><given-names>Y</given-names></name></person-group><year iso-8601-date="2011">2011</year><article-title>Descending Systems Translate Transient Cortical Commands into a Sustained Muscle Activation Signal</article-title><source>Cerebral Cortex</source><volume>22</volume><fpage>1904</fpage><lpage>1914</lpage><pub-id pub-id-type="doi">10.1093/cercor/bhr267</pub-id><pub-id pub-id-type="pmid">21965441</pub-id></element-citation></ref><ref id="bib47"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Shenoy</surname><given-names>KV</given-names></name><name><surname>Sahani</surname><given-names>M</given-names></name><name><surname>Churchland</surname><given-names>MM</given-names></name></person-group><year iso-8601-date="2013">2013</year><article-title>Cortical Control of Arm Movements: A Dynamical Systems Perspective</article-title><source>Annual Review of Neuroscience</source><volume>36</volume><fpage>337</fpage><lpage>359</lpage><pub-id pub-id-type="doi">10.1146/annurev-neuro-062111-150509</pub-id><pub-id pub-id-type="pmid">23725001</pub-id></element-citation></ref><ref id="bib48"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Shmuelof</surname><given-names>L</given-names></name><name><surname>Krakauer</surname><given-names>JW</given-names></name><name><surname>Mazzoni</surname><given-names>P</given-names></name></person-group><year iso-8601-date="2012">2012</year><article-title>How is a motor skill learned? Change and invariance at the levels of task success and trajectory control</article-title><source>Journal of Neurophysiology</source><volume>108</volume><fpage>578</fpage><lpage>594</lpage><pub-id pub-id-type="doi">10.1152/jn.00856.2011</pub-id><pub-id pub-id-type="pmid">22514286</pub-id></element-citation></ref><ref id="bib49"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Sohn</surname><given-names>H</given-names></name><name><surname>Narain</surname><given-names>D</given-names></name><name><surname>Meirhaeghe</surname><given-names>N</given-names></name><name><surname>Jazayeri</surname><given-names>M</given-names></name></person-group><year iso-8601-date="2019">2019</year><article-title>Bayesian Computation through Cortical Latent Dynamics</article-title><source>Neuron</source><volume>103</volume><fpage>934</fpage><lpage>947</lpage><pub-id pub-id-type="doi">10.1016/j.neuron.2019.06.012</pub-id><pub-id pub-id-type="pmid">31320220</pub-id></element-citation></ref><ref id="bib50"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Stavisky</surname><given-names>SD</given-names></name><name><surname>Kao</surname><given-names>JC</given-names></name><name><surname>Ryu</surname><given-names>SI</given-names></name><name><surname>Shenoy</surname><given-names>KV</given-names></name></person-group><year iso-8601-date="2017">2017</year><article-title>Motor Cortical Visuomotor Feedback Activity Is Initially Isolated from Downstream Targets in Output-Null Neural State Space Dimensions</article-title><source>Neuron</source><volume>95</volume><fpage>195</fpage><lpage>208</lpage><pub-id pub-id-type="doi">10.1016/j.neuron.2017.05.023</pub-id><pub-id pub-id-type="pmid">28625485</pub-id></element-citation></ref><ref id="bib51"><element-citation publication-type="preprint"><person-group person-group-type="author"><name><surname>Suresh</surname><given-names>AK</given-names></name><name><surname>Goodman</surname><given-names>JM</given-names></name><name><surname>Okorokova</surname><given-names>EV</given-names></name><name><surname>Kaufman</surname><given-names>MT</given-names></name><name><surname>Hatsopoulos</surname><given-names>NG</given-names></name><name><surname>Bensmaia</surname><given-names>SJ</given-names></name></person-group><year iso-8601-date="2019">2019</year><article-title>NEURAL POPULATION DYNAMICS IN MOTOR CORTEX ARE DIFFERENT FOR REACH AND GRASP</article-title><source>bioRxiv</source><pub-id pub-id-type="doi">10.1101/667196</pub-id></element-citation></ref><ref id="bib52"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Sussillo</surname><given-names>D</given-names></name><name><surname>Barak</surname><given-names>O</given-names></name></person-group><year iso-8601-date="2013">2013</year><article-title>Opening the black box: low-dimensional dynamics in high-dimensional recurrent neural networks</article-title><source>Neural Computation</source><volume>25</volume><fpage>626</fpage><lpage>649</lpage><pub-id pub-id-type="doi">10.1162/NECO_a_00409</pub-id><pub-id pub-id-type="pmid">23272922</pub-id></element-citation></ref><ref id="bib53"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Sussillo</surname><given-names>D</given-names></name><name><surname>Churchland</surname><given-names>MM</given-names></name><name><surname>Kaufman</surname><given-names>MT</given-names></name><name><surname>Shenoy</surname><given-names>KV</given-names></name></person-group><year iso-8601-date="2015">2015</year><article-title>A neural network that finds A naturalistic solution for the production of muscle activity</article-title><source>Nature Neuroscience</source><volume>18</volume><fpage>1025</fpage><lpage>1033</lpage><pub-id pub-id-type="doi">10.1038/nn.4042</pub-id><pub-id pub-id-type="pmid">26075643</pub-id></element-citation></ref><ref id="bib54"><element-citation publication-type="report"><person-group person-group-type="author"><name><surname>Trautmann</surname><given-names>E</given-names></name><name><surname>Amematsro</surname><given-names>E</given-names></name><name><surname>Escola</surname><given-names>S</given-names></name><name><surname>Wolpert</surname><given-names>D</given-names></name><name><surname>Marshall</surname><given-names>N</given-names></name><name><surname>Chen</surname><given-names>H</given-names></name><name><surname>Aliyari</surname><given-names>E</given-names></name><name><surname>Sacadura</surname><given-names>F</given-names></name><name><surname>Shadlen</surname><given-names>M</given-names></name><name><surname>Churchland</surname><given-names>M</given-names></name></person-group><year iso-8601-date="2022">2022</year><source>Motor Cortex Isolates Skill-Specific Dynamics in a Context Switching Task presented at the Cosyne Abstracts 2022</source><publisher-name>World-wide</publisher-name><ext-link ext-link-type="uri" xlink:href="https://www.world-wide.org/cosyne-22/motor-cortex-isolates-skillspecific-fb92de03/">https://www.world-wide.org/cosyne-22/motor-cortex-isolates-skillspecific-fb92de03/</ext-link></element-citation></ref><ref id="bib55"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Wang</surname><given-names>J</given-names></name><name><surname>Narain</surname><given-names>D</given-names></name><name><surname>Hosseini</surname><given-names>EA</given-names></name><name><surname>Jazayeri</surname><given-names>M</given-names></name></person-group><year iso-8601-date="2018">2018</year><article-title>Flexible timing by temporal scaling of cortical responses</article-title><source>Nature Neuroscience</source><volume>21</volume><fpage>102</fpage><lpage>110</lpage><pub-id pub-id-type="doi">10.1038/s41593-017-0028-6</pub-id><pub-id pub-id-type="pmid">29203897</pub-id></element-citation></ref><ref id="bib56"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Yamins</surname><given-names>DLK</given-names></name><name><surname>Hong</surname><given-names>H</given-names></name><name><surname>Cadieu</surname><given-names>CF</given-names></name><name><surname>Solomon</surname><given-names>EA</given-names></name><name><surname>Seibert</surname><given-names>D</given-names></name><name><surname>DiCarlo</surname><given-names>JJ</given-names></name></person-group><year iso-8601-date="2014">2014</year><article-title>Performance-optimized hierarchical models predict neural responses in higher visual cortex</article-title><source>PNAS</source><volume>111</volume><fpage>8619</fpage><lpage>8624</lpage><pub-id pub-id-type="doi">10.1073/pnas.1403112111</pub-id><pub-id pub-id-type="pmid">24812127</pub-id></element-citation></ref><ref id="bib57"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Zimnik</surname><given-names>AJ</given-names></name><name><surname>Churchland</surname><given-names>MM</given-names></name></person-group><year iso-8601-date="2021">2021</year><article-title>Independent generation of sequence elements by motor cortex</article-title><source>Nature Neuroscience</source><volume>24</volume><fpage>412</fpage><lpage>424</lpage><pub-id pub-id-type="doi">10.1038/s41593-021-00798-5</pub-id><pub-id pub-id-type="pmid">33619403</pub-id></element-citation></ref><ref id="bib58"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Zipser</surname><given-names>D</given-names></name><name><surname>Andersen</surname><given-names>RA</given-names></name></person-group><year iso-8601-date="1988">1988</year><article-title>A back-propagation programmed network that simulates response properties of A subset of posterior parietal neurons</article-title><source>Nature</source><volume>331</volume><fpage>679</fpage><lpage>684</lpage><pub-id pub-id-type="doi">10.1038/331679a0</pub-id><pub-id pub-id-type="pmid">3344044</pub-id></element-citation></ref></ref-list></back><sub-article article-type="editor-report" id="sa0"><front-stub><article-id pub-id-type="doi">10.7554/eLife.67620.sa0</article-id><title-group><article-title>Editor's evaluation</article-title></title-group><contrib-group><contrib contrib-type="author"><name><surname>Pruszynski</surname><given-names>J Andrew</given-names></name><role specific-use="editor">Reviewing Editor</role><aff><institution-wrap><institution-id institution-id-type="ror">https://ror.org/02grkyz14</institution-id><institution>Western University</institution></institution-wrap><country>Canada</country></aff></contrib></contrib-group><related-object id="sa0ro1" link-type="continued-by" object-id="10.1101/2021.02.01.429168" object-id-type="id" xlink:href="https://sciety.org/articles/activity/10.1101/2021.02.01.429168"/></front-stub><body><p>This elegant study furthers our understanding about the mechanisms by which distributed systems control rhythmic movements of different speeds. The authors trained an artificial recurrent neural network to produce muscle activity patterns similar to those that monkeys generate when performing an arm cycling task at different speeds. The dominant patterns in the neural network do not directly reflect muscle activity, and these dominant patterns do a better job than muscle activity at capturing key features of neural activity recorded from the monkey motor cortex in the same task. In addition to the main result, the study provides a particularly clear example of how thinking in terms of network dynamics can naturally explain empirical observations in terms of the computation being performed.</p></body></sub-article><sub-article article-type="decision-letter" id="sa1"><front-stub><article-id pub-id-type="doi">10.7554/eLife.67620.sa1</article-id><title-group><article-title>Decision letter</article-title></title-group><contrib-group content-type="section"><contrib contrib-type="editor"><name><surname>Pruszynski</surname><given-names>J Andrew</given-names></name><role>Reviewing Editor</role><aff><institution-wrap><institution-id institution-id-type="ror">https://ror.org/02grkyz14</institution-id><institution>Western University</institution></institution-wrap><country>Canada</country></aff></contrib></contrib-group></front-stub><body><boxed-text id="sa2-box1"><p>Our editorial process produces two outputs: i) <ext-link ext-link-type="uri" xlink:href="https://sciety.org/articles/activity/10.1101/2021.02.01.429168">public reviews</ext-link> designed to be posted alongside <ext-link ext-link-type="uri" xlink:href="https://www.biorxiv.org/content/10.1101/2021.02.01.429168v1">the preprint</ext-link> for the benefit of readers; ii) feedback on the manuscript for the authors, including requests for revisions, shown below. We also include an acceptance summary that explains what the editors found interesting or important about the work.</p></boxed-text><p><bold>Decision letter after peer review:</bold></p><p>Thank you for submitting your article &quot;Motor cortex activity across movement speeds is predicted by network-level strategies for generating muscle activity&quot; for consideration by <italic>eLife</italic>. Your article has been reviewed by 3 peer reviewers, and the evaluation has been overseen by Andrew Pruszynski as Reviewing Editor and Joshua Gold as Senior Editor. The reviewers have opted to remain anonymous.</p><p>The reviewers have discussed their reviews with one another, and the Reviewing Editor has drafted this to help you prepare a revised submission.</p><p>Essential revisions:</p><p>1) The reviewers raise a number of important points about the RNN, the characterization of its dynamics, and its relationship to the empirical data. This includes further details about the network and analysis but also a broader perspective on the interpretation. Three notable considerations along these lines are: (a) establishing whether strong interactions between the &quot;dominant&quot; dimensions generate the rhythm while muscle-related dimensions do not push on these dominant dimensions; (b) further consideration about the constant inputs into the network and the implications of this choice in terms of the observed relationship to M1 activity and overall interpretation; (c) explicitly laying out what muscle like commands would look like.</p><p>2) The long-term impact of this study could be increased by providing a more comprehensive high-level discussion about the relationship between the extracted PCs and the computations done in motor cortex. Use this as an opportunity to link the present work to more traditional concepts in the field like the representation of motor commands.</p><p><italic>Reviewer #1 (Recommendations for the authors):</italic></p><p>1. Was the torque applied by the animals to the handle measured at each speed and is an estimate of the handle's damping ratio available?</p><p>2. The authors state that data windows of variable length were used &quot;to avoid overly specific solutions.&quot; Was this done to enforce a return to a stable fixed point when the inputs switch to zero, independently of the movement phase at which this switch occurred?</p><p>3. The authors may wish to comment on whether the RNN dynamics in the dominant dimensions might be topologically equivalent to a simple canonical model. Intuitively, it looks like the network trajectories might obey something like θ' = cs, r' = r(1 – r^2), z' = s – z, where θ is the angle in the x-y plane, r is the radius, z is the vertical dimension, s is the speed input, and c is a constant. Establishing the existence of smooth transformations from the vector fields learned by the networks to a canonical model would bolster the claim that the networks have found the same general solution, but this analysis is not critical.</p><p>4. More details on the RNN and fitting could be provided in the Methods. What values were chosen for the time constant τ and time step Δt? If I understand correctly, the node state does not depend explicitly on speed, so the notation v(t,s) (line 754) was slightly confusing.</p><p><italic>Reviewer #2 (Recommendations for the authors):</italic></p><p>How do the stacked ellipses observed here resemble or not resemble the spiral trajectories observed in SMA during motor sequences?</p><p><italic>Reviewer #3 (Recommendations for the authors):</italic></p><p>This study is a further examination of the dynamical-systems (non-representational) view of the motor cortex, and its relation to motor execution and muscle activity. It combines modeling with single-electrode neural and EMG recordings in two monkeys, using the cycling paradigm that this group has developed over the last number of years. In particular, they examine the question how each of these signals (including modeled manifold solutions) change with the speed and direction of pedaling. The experiments are well designed and the paper is clearly written, with the occasional lapse into excessive neural or mathematical jargon. In addition to the central questions the authors pose, it provides a good discussion of the nature of these dynamical models, what we can learn from them, and what is still unknown. I have no major concerns.</p><p>The one methodical approach that should be presented more clearly is that of the &quot;population recordings&quot; from M1:</p><p>22: &quot;…we recorded motor cortex population activity during the same task.&quot;</p><p>76: &quot;We compared network solutions with empirical population activity recorded from motor cortex.</p><p>Describing post-hoc time-aligned single-electrode recordings this way is a bit of a stretch. I was actually confused for a while, assuming initially that the neural trajectories must all have been from the ANNs. It is compounded by the fact that there is no explicit discussion of this issue, which I would recommend adding. The same concern applies to the EMGs, though less so. I doubt there are any significant issues, but it should be acknowledged.</p><p>In a similar vein, I was occasionally lost, trying to figure out which results came from the artificial networks and which from electrodes. There is at least one reference to &quot;empirical&quot; networks, an adjective I've never found terribly useful as a reference to something in the brain as opposed to the computer (perhaps, &quot;recorded&quot;, &quot;actual&quot;?). This was mostly an issue when I was thinking the manifold responses must all from the networks, with comparisons make to only single electrodes, but it might help to make more explicit reference consistently to ANNs.</p><p>I find the relation between the initial (elliptical, non-muscle-like) PCs and the higher-order ones intriguing. Are the former &quot;pulling along&quot; the latter to produce a muscle-like output? Are they somehow doing separate computations? is it all just a computational trick that separates them?</p><p>One reference to the literature that gets swept aside to quickly is this:</p><p>485: &quot;For example, autonomous dynamics provide a poorer fit to the data during grasping…&quot;</p><p>To the extent that this comment reflects the effect of afferent input during object manipulation (&quot;Tangling will also be high when unpredictable external inputs dominate…&quot;), it should be noted that their data did not include contact. This observation remains an important one.</p></body></sub-article><sub-article article-type="reply" id="sa2"><front-stub><article-id pub-id-type="doi">10.7554/eLife.67620.sa2</article-id><title-group><article-title>Author response</article-title></title-group></front-stub><body><disp-quote content-type="editor-comment"><p>Essential revisions:</p><p>1) The reviewers raise a number of important points about the RNN, the characterization of its dynamics, and its relationship to the empirical data. This includes further details about the network and analysis but also a broader perspective on the interpretation. Three notable considerations along these lines are:</p><p>(a) establishing whether strong interactions between the &quot;dominant&quot; dimensions generate the rhythm while muscle-related dimensions do not push on these dominant dimensions;</p></disp-quote><p>We agree this is important to explore and have now added a new analysis to do so (Figure 3f). The results are very pretty. Things do indeed work as the reviewers state. Pushing the network in the dominant dimensions – i.e., along the elliptical limit cycle – primarily causes a change in the phase of the rhythm. In contrast, pushing the network in a muscle-related dimension causes an immediate large change in muscle activity that quickly dissipates, with no subsequent change in the phase of the rhythm. This is now explained in the text:</p><p>“The ability of elliptical network trajectories to generate non-elliptical muscle trajectories seems counter-intuitive but is expected (Russo et al. 2018). Elliptical trajectories set the basic rhythm and provide the fundamental frequency, while the ‘muscle-encoding’ signals that support complex outputs ‘live’ in dimensions beyond the first three PCs. To illustrate, we consider a single cycling speed (Figure 3f) and perturb network activity either along the elliptical path but orthogonal to the muscle readout (<italic>orange</italic>) or in a direction that overlaps with the muscle readouts but is orthogonal to the elliptical path (<italic>green</italic>; note that this direction involves PCs beyond the first three and is not the same direction that separates trajectories across speeds). As expected, perturbations that overlapped muscle readouts caused a large immediate change in muscle readout (<italic>green trace</italic>). Muscle readouts then rapidly returned to normal, after which the rhythm continued at its original phase. Thus, these dimensions are critical for network outputs, but interact little with the dynamics that set the overall rhythm. In contrast, perturbing along the elliptical trajectory created a much smaller immediate effect, but permanently altered output phase (<italic>orange trace</italic>). Thus, the network solution involves two components. The phase of the elliptical trajectory sets the phase of the output. Muscle readouts draw from the elliptical trajectory, but also draw heavily from orthogonal dimensions that contain smaller higher-frequency signals. It is these smaller off-ellipse features that allow the network to generate non-sinusoidal activity patterns that are different for each muscle. This is a natural strategy that allows a simple, stable, elliptical trajectory to generate multiple temporally structured outputs.”</p><disp-quote content-type="editor-comment"><p>(b) further consideration about the constant inputs into the network and the implications of this choice in terms of the observed relationship to M1 activity and overall interpretation;</p></disp-quote><p>We agree this is important. There are two classes of non-constant inputs to consider: (1) sensory feedback and (2) non-constant input commands from ‘higher’ motor areas. We have added simulations to explore both.</p><p>Regarding the first input type, M1 presumably receives continuous proprioceptive feedback throughout the cycle. It is thus critical to know that the stacked-elliptical solution continues to be relevant in the presence of such feedback. (Certainly it would complicate interpretation if a solution incompatible with feedback were present in a brain area that receives feedback).</p><p>We thus trained networks in the presence of simulated sensory feedback. Because the exact form of sensory feedback is unknown, we simulated a few potential forms. Networks continued to use the same stacked-elliptical solution in the presence of feedback. This ceased to be true only if feedback was so strong that it dominated activity. These results are intuitive and agree with prior observations. Modest levels of feedback simply become one more form of recurrence that contributes to the network’s dynamics, consistent with Sussillo et al. 2015. However, if feedback is overly strong, network activity effectively becomes a representation of sensory variables and solutions are no longer realistic. This agrees with the presence of high tangling in sensory areas including S1 (Russo et al. 2018). The new analysis is in Figure 9, and is discussed in the new section <italic>Generality of the network solution</italic>, and again in the Discussion.</p><p>Regarding the second input type, the incoming motor commands that ‘tell’ M1 what to do may not be static. For example, it is quite plausible that M1 receives a simple rhythm from SMA, to which it phase-locks its output. We thus simulated networks that received a pair of sinusoidal inputs (in phase quadrature) that implicitly specified speed via their frequency. Interpretation of these results is a bit complicated: networks did not consistently produce the empirical stacked-elliptical structure, but they often did. What can be logically concluded is the following. (1) The empirical data is certainly consistent with networks receiving a simple rhythm, because such networks often use the stacked-elliptical solution. (2) Given the data, one <italic>probably</italic> leans towards the idea of a static input, because such networks always produced the empirically realistic solution. These new simulations are discussed at the end of the section ‘<italic>Understanding network solutions</italic>’.</p><p>As an aside, there exist other possible inputs that could be worth exploring. For example, we suspect that realistic solutions would consistently emerge in networks that receive <italic>both</italic> a static speed-specifying command (as in our ‘main’ network simulations) and rhythmic commands (as discussed above). However, we decided we wished to avoid being pulled down this rabbit hole. Part of our point is that the empirical stacked-elliptical solution is expected under a broad range of reasonable assumptions. The upside of this generality is that it allows the network perspective to make clear predictions regarding the empirical data. The downside is that, when those predictions are confirmed, that confirmation supports the general hypothesis but doesn’t tightly constrain the exact modeling choices. There are a few choices that clearly <italic>won’t</italic> work (e.g., speed-specific inputs) but also many choices that work well. Further experiments (e.g., multi-area recordings) would be needed if one were to try and determine specifics regarding inputs.</p><disp-quote content-type="editor-comment"><p>(c) explicitly laying out what muscle like commands would look like.</p></disp-quote><p>We have removed the term ‘muscle-like’ from the manuscript. We had originally used this term to try and balance two things: (1) we think it likely that outgoing cortical commands effectively constitute commands for muscle activity, and also (2) this can’t be precisely true, because there will inevitably be transformations in the spinal cord. Because the nature and extent of that transformation is unknown, we had used the term ‘muscle-like’ as a hedge. Networks are trained to produce the actual empirical muscle activity, but we assume that this is simply a reasonable approximation. We used the term ‘muscle-like’ to try and convey this, but we agree it was a bit confusing. It thus seemed best to simply remove this term and say what we mean. For example, in the new section ‘<italic>Generality of the network solution</italic>’ we avoid the term muscle-like and instead say:</p><p>“Meaningful transformations presumably occur between cortical outputs and motoneuron activity (Shalit et al. 2012; Albert et al. 2020), and motoneurons receive other sources of drive. One thus wishes to know that network predictions are relatively insensitive to assumptions regarding the exact output, and this was indeed the case. This insensitivity relates to the form of the solution. The dominant elliptical trajectory ensures low tangling and can provide the fundamental frequency of the output. All other aspects of the output are built from smaller signals that lie in dimensions orthogonal to the dominant trajectory.”</p><disp-quote content-type="editor-comment"><p>2) The long-term impact of this study could be increased by providing a more comprehensive high-level discussion about the relationship between the extracted PCs and the computations done in motor cortex. Use this as an opportunity to link the present work to more traditional concepts in the field like the representation of motor commands.</p></disp-quote><p>There are a few possible interpretations of this request. We are a little unsure which was meant, but we like them all so we have made multiple changes.</p><p>First, the level of PCs can often seem abstract, in contrast to the seeming simplicity of representational explanations. This is a historical / sociological truth rather than an epistemic truth. But it is still true. We have thus added a paragraph to ground our motivation for the PCA based approach. The new paragraph is at the beginning of the section ‘<italic>Understanding network solutions</italic>’:</p><p>“Recurrent-network solutions tend to have the following useful characteristic: a basic understanding doesn’t require considering every unit and connection, but can be obtained by considering a smaller number of factors, each a weighted sum of the activity of all units (Sussillo and Barak 2013; DePasquale, Churchland, and Abbott 2016; Maheswaranathan et al. 2019; Mante et al. 2013). By ascertaining how and why network-state trajectories behave in this ‘factor space’, one can often determine how the network solves the task. If factors are defined wisely, the response of each individual unit is approximately a weighted sum of factors. Thus, if one understands the factors, individual-unit responses are no longer mysterious. There are many reasonable ways of obtaining factors, but PCA is commonly used because it ensures factors will be explanatory of single-unit responses (‘maximizing captured variance’ is equivalent to ‘minimizing single-neuron reconstruction error’). We used PCA above to identify the network factors, and show that they are explanatory not only of their own single-unit responses, but of empirical single-neuron responses as well. In contrast, purely representational muscle-based factors were less successful. However, knowing that network factors are explanatory means little if one doesn’t understand why those factors behave the way they do. Thus, we now turn to the task of understanding network solutions in the factor-space obtained by PCA.”</p><p>Second, while most aspects of network activity are not representational, networks definitely do still contain representations. After all, the network contains a representation of muscle activity that can be linearly read out! It is just that the representational signals are typically small in most networks; the top PCs are typically dominated by the need for well-behaved dynamics, and the smaller PCs do the ‘encoding’. We have made multiple changes to the manuscript to highlight this, including adding the following section:</p><p>“In our networks, each muscle has a corresponding network dimension where activity closely matches that muscle’s activity. These small output-encoding signals are ‘representational’ in the sense that they have a consistent relationship with a concrete decodable quantity. In contrast, the dominant stacked-elliptical structure exists to ensure a low-tangled scaffold and has no straightforward representational interpretation.”</p><p>Third, there exist other important traditional concepts in our field such as the idea of feedback control. (In our view feedback-control frameworks have been more explanatory, and certainly make far more sense, than purely representational frameworks). It is thus reasonable to want to link to feedback control ideas, and in particular to the modern conception that corrections are flexibly tailored to the needs of the present movement. We have thus added a paragraph on this topic:</p><p>“We did not attempt to simulate feedback control that takes into account unpredictable sensory inputs and produces appropriate corrections (Stavisky et al. 2017; Pruszynski and Scott 2012; Pruszynski et al. 2011; Pruszynski, Omrani, and Scott 2014). However, there is no conflict between the need for such control and the general form of the solution observed in both networks and cortex. Consider an arbitrary feedback control policy:<inline-formula><mml:math id="sa2m1"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mi>z</mml:mi><mml:mo>=</mml:mo><mml:msub><mml:mi>g</mml:mi><mml:mrow><mml:mi>c</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:mi>t</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mi>u</mml:mi><mml:mrow><mml:mi>f</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mstyle></mml:math></inline-formula> where <inline-formula><mml:math id="sa2m2"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msub><mml:mi>u</mml:mi><mml:mrow><mml:mi>f</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mstyle></mml:math></inline-formula> is time-varying sensory input arriving in cortex and is a vector of outgoing commands. The networks we trained all embody special cases of the control policy where <inline-formula><mml:math id="sa2m3"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msub><mml:mi>u</mml:mi><mml:mrow><mml:mi>f</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mstyle></mml:math></inline-formula> is either zero (most simulations) or predictable (Figure 9) and the particulars of <italic>z</italic> vary with monkey and cycling direction. The stacked-elliptical structure was appropriate in all these cases. Stacked-elliptical structure would likely continue to be an appropriate scaffolding for control policies with greater realism, although this remains to be explored.”</p><p>In ongoing work we have simulated networks that instantiate flexible feedback control. So we know this class of networks can do so. However, we do not include any of those simulations because they are beyond the scope of the present study.</p><disp-quote content-type="editor-comment"><p>Reviewer #1 (Recommendations for the authors):</p><p>1. Was the torque applied by the animals to the handle measured at each speed and is an estimate of the handle's damping ratio available?</p></disp-quote><p>We did initially use a torque sensor inline with the motor. However, we found torque records to be unhelpful in assessing what one really cares about: the force produced by the monkey’s own muscles. In retrospect this is kind of obvious. For example, on the way ‘back up’ to the top of the cycle, measured torque greatly underestimates muscle force, much of which is being ‘spent’ lifting the arm against gravity. The opposite happens on the way down. Our solution to this was simple: record the muscle activity itself.</p><p>Regarding viscosity, we assume the reviewer wishes to know because, if viscosity were high, that would make cycling very difficult at high speeds. This is a good point, and we should have clarified that the added viscosity was quite modest. We didn’t add viscosity to increase effort. Indeed, top speed is limited by neuromuscular control within the arm itself, rather than by the apparatus. We just added a little viscosity to make the pedal feel natural. One wants to feel a bit of resistance, else it feels like cycling on an ice rink. It is hard to explain without trying it yourself but it really does feel better with just a bit of added viscosity. Importantly, this was modest and wasn’t what limited the ability to cycle quickly. To clarify, we have added the following to the Methods:</p><p>“Artificial viscosity and mass were the same as in CITE RUSSO ET AL. 2018 and 2020 and modestly supplemented the natural viscosity of the motor and inertia of the apparatus. With no added viscosity and mass the apparatus tended to feel slightly ‘slippery’ and ‘floppy; we found the device felt more natural to manipulate with these added forces. Added viscosity was modest and thus not the primary limiting factor on top speed, which appeared (both in the monkeys and when we tried it) to be limited to not much more than 3 Hz by factors intrinsic to the neuromuscular control of the arm.”</p><p>The viscosity was the same as in Russo et al. 2018 and 2020. It was expressed in terms of volts (sent to the motor) per cycle/s, so it is hard to provide a number in terms of torque per degree/s. We also don’t know the internal viscosity of the motor and chain system. In principle one could attempt to measure this physically, but this would be involved. And of course the arm itself effectively has its own viscosity. For these reasons we just punted, and decided to always measure muscle activity.</p><disp-quote content-type="editor-comment"><p>2. The authors state that data windows of variable length were used &quot;to avoid overly specific solutions.&quot; Was this done to enforce a return to a stable fixed point when the inputs switch to zero, independently of the movement phase at which this switch occurred?</p></disp-quote><p>A good question, and closely related to comment 5 above. This is now clarified in the Results:</p><p>“Networks were trained across many trials, each of which had an unpredictable number of cycles. This ensured networks could not learn a non-periodic solution, which would be possible if the number of cycles were fixed and small.”</p><p>An improved unpacking of this reasoning is provided in the Methods.</p><disp-quote content-type="editor-comment"><p>3. The authors may wish to comment on whether the RNN dynamics in the dominant dimensions might be topologically equivalent to a simple canonical model. Intuitively, it looks like the network trajectories might obey something like θ' = cs, r' = r(1 – r^2), z' = s – z, where θ is the angle in the x-y plane, r is the radius, z is the vertical dimension, s is the speed input, and c is a constant. Establishing the existence of smooth transformations from the vector fields learned by the networks to a canonical model would bolster the claim that the networks have found the same general solution, but this analysis is not critical.</p></disp-quote><p>Yes, a simply canonical model like that is roughly right, although one would have to add another dimension or two into which the modest ‘tilt’ across speeds can happen. (We think this still matters topologically, although to be fair one of us is consistently confused by topology).</p><disp-quote content-type="editor-comment"><p>4. More details on the RNN and fitting could be provided in the Methods. What values were chosen for the time constant τ and time step Δt? If I understand correctly, the node state does not depend explicitly on speed, so the notation v(t,s) (line 754) was slightly confusing.</p></disp-quote><p>We agree this section was not well written and we apologize for not specifying tau or the timestep (the timestep was 4 ms, and the tau was ten timesteps and thus 40 ms). This section has been rewritten. The use of ‘s’ as an index has been changed to ‘c’. The use of ‘c’ denotes ‘condition’ (which is stated explicitly) which is a more natural index. (We agree that ‘s’, while formally correct, was indeed confusing).</p><disp-quote content-type="editor-comment"><p>Reviewer #2 (Recommendations for the authors):</p><p>How do the stacked ellipses observed here resemble or not resemble the spiral trajectories observed in SMA during motor sequences?</p></disp-quote><p>A great (and subtle) question. We have added the following to the Discussion:</p><p>This reinforces a point made above: the dominant features of network solutions often depend on the nature of a computational problem, rather than the specific input-output function or the particular domain (e.g., motor versus cognitive). Similar trajectory geometries can even serve very different computational purposes. For example, in the supplementary motor area, individual cycles are separated as a function of progress within a larger action (e.g., cycling exactly seven cycles and then stopping), producing a helical trajectory across time. In motor cortex, our present model predicts helical structure with steadily increasing speed (something we have informally observed empirically during different experiments). These helical solutions have something high-level in common, yet the nature of the underlying computation is of course completely different (keeping track of progress, versus specifying speed). This underscores that certain trajectory ‘motifs’ are broadly useful, and constrain but don’t fully specify the underlying computation.</p><disp-quote content-type="editor-comment"><p>Reviewer #3 (Recommendations for the authors):</p><p>This study is a further examination of the dynamical-systems (non-representational) view of the motor cortex, and its relation to motor execution and muscle activity. It combines modeling with single-electrode neural and EMG recordings in two monkeys, using the cycling paradigm that this group has developed over the last number of years. In particular, they examine the question how each of these signals (including modeled manifold solutions) change with the speed and direction of pedaling. The experiments are well designed and the paper is clearly written, with the occasional lapse into excessive neural or mathematical jargon. In addition to the central questions the authors pose, it provides a good discussion of the nature of these dynamical models, what we can learn from them, and what is still unknown. I have no major concerns.</p></disp-quote><p>We thank the reviewer for the supportive comments and nice summary.</p><disp-quote content-type="editor-comment"><p>The one methodical approach that should be presented more clearly is that of the &quot;population recordings&quot; from M1:</p><p>22: &quot;…we recorded motor cortex population activity during the same task.&quot;</p><p>76: &quot;We compared network solutions with empirical population activity recorded from motor cortex.</p><p>Describing post-hoc time-aligned single-electrode recordings this way is a bit of a stretch. I was actually confused for a while, assuming initially that the neural trajectories must all have been from the ANNs. It is compounded by the fact that there is no explicit discussion of this issue, which I would recommend adding. The same concern applies to the EMGs, though less so. I doubt there are any significant issues, but it should be acknowledged.</p></disp-quote><p>We agree that the term ‘population recordings’ evokes the idea of simultaneity and thus should be avoided when describing sequentially recorded populations. For that reason, we have edited both those sentences to remove the term “population”. We don’t think we ever used the term ‘population recordings’ but if there are any errant occurrences please note them and we will correct them. We agree that is not quite right. At the same time, it is certainly fair to talk about population analyses, so long as the method for constructing the population response is clearly laid out. We apologize that this was not clear. We have added the following to the section of the Results where population analyses are first applied:</p><p>“Neural population activity, for a given time and speed, was defined as the trial-averaged response of every recorded neuron for the relevant time within the relevant speed-bin. Muscle population activity was defined analogously. The consistency of behavior (Figure 1b) made it reasonable to combine trial-averaged responses from sequentially recorded neurons (and muscles) into a unified population response.”</p><p>Earlier in the Results we stated “Well-isolated single units… were sequentially recorded from motor cortex.” The new text clarifies how we get from single-neuron to population analyses. It is the identical procedure we would have used for simultaneous recordings.</p><p>As an aside, when responses are trial-averaged responses and behavior is consistent, we do not believe that one approach (simultaneous vs sequential) is necessarily better. Both are good ways of constructing a population response that can be fruitfully analyzed. Concerns about behavioral drift are reduced with simultaneous recordings, but isolation quality and curation tends to be better with sequential recordings (arguably this is less true with the advent of neuropixels, but it is very true w.r.t. implanted arrays). The key reason for calling something a population analysis, both in our opinion and given historical usage, is that one considers the joint response of many neurons to an identical set of stimuli. For example, this was the way the term was used in Churchland et al. 2001 (J. Neurosci) and w.r.t. the ‘population vector’ of Georgopoulos.</p><disp-quote content-type="editor-comment"><p>In a similar vein, I was occasionally lost, trying to figure out which results came from the artificial networks and which from electrodes. There is at least one reference to &quot;empirical&quot; networks, an adjective I've never found terribly useful as a reference to something in the brain as opposed to the computer (perhaps, &quot;recorded&quot;, &quot;actual&quot;?). This was mostly an issue when I was thinking the manifold responses must all from the networks, with comparisons make to only single electrodes, but it might help to make more explicit reference consistently to ANNs.</p></disp-quote><p>We apologize. We have changed that sentence to read:</p><p>“Goal-driven networks -- i.e., networks trained to perform a computation intended to be analogous to that performed by a biological neural population”.</p><p>We have adjusted the text throughout to avoid creating confusion. The text added in response to the comment above is already a large help, because it clarifies, at the key moment, what we are analyzing.</p><disp-quote content-type="editor-comment"><p>I find the relation between the initial (elliptical, non-muscle-like) PCs and the higher-order ones intriguing. Are the former &quot;pulling along&quot; the latter to produce a muscle-like output? Are they somehow doing separate computations? is it all just a computational trick that separates them?</p></disp-quote><p>These are great questions. We have added an analysis (of the network) to clarify this. This is in Figure 3f. (Also see response to Essential revisions 1a).</p><p>We fully endorse the idea that the relationship between the dominant and higher-order PCs is intriguing! Much of our present work involves attempting to more fully understand that relationship.</p><disp-quote content-type="editor-comment"><p>One reference to the literature that gets swept aside to quickly is this:</p><p>485: &quot;For example, autonomous dynamics provide a poorer fit to the data during grasping…&quot;</p><p>To the extent that this comment reflects the effect of afferent input during object manipulation (&quot;Tangling will also be high when unpredictable external inputs dominate…&quot;), it should be noted that their data did not include contact. This observation remains an important one.</p></disp-quote><p>A good point. Our wording didn’t properly convey the important difference between tangling that results from unpredictable sensory inputs and tangling that arises from incoming external ‘commands’. The relevant section has been revised and expanded.</p><p>“Yet even in a network that relies on strong dynamics, low trajectory tangling is neither always desirable nor always expected. There can be moments where it is necessary for activity to be dominated by ‘unexpected’ inputs… Similar considerations may explain why trajectory tangling is low (and dynamical fits good) in motor cortex during reaching but not during grasping (Suresh et al. 2019). As suggested in that study, grasping may require a more continuous flow of guiding inputs from the rest of the brain.”</p></body></sub-article></article>