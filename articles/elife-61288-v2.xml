<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE article PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Archiving and Interchange DTD v1.1 20151215//EN"  "JATS-archivearticle1.dtd"><article article-type="research-article" dtd-version="1.1" xmlns:ali="http://www.niso.org/schemas/ali/1.0/" xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink"><front><journal-meta><journal-id journal-id-type="nlm-ta">elife</journal-id><journal-id journal-id-type="publisher-id">eLife</journal-id><journal-title-group><journal-title>eLife</journal-title></journal-title-group><issn pub-type="epub" publication-format="electronic">2050-084X</issn><publisher><publisher-name>eLife Sciences Publications, Ltd</publisher-name></publisher></journal-meta><article-meta><article-id pub-id-type="publisher-id">61288</article-id><article-id pub-id-type="doi">10.7554/eLife.61288</article-id><article-categories><subj-group subj-group-type="display-channel"><subject>Tools and Resources</subject></subj-group><subj-group subj-group-type="heading"><subject>Cell Biology</subject></subj-group><subj-group subj-group-type="heading"><subject>Computational and Systems Biology</subject></subj-group></article-categories><title-group><article-title>Artistoo, a library to build, share, and explore simulations of cells and tissues in the web browser</article-title></title-group><contrib-group><contrib contrib-type="author" corresp="yes" id="author-138166"><name><surname>Wortel</surname><given-names>Inge MN</given-names></name><contrib-id authenticated="true" contrib-id-type="orcid">https://orcid.org/0000-0003-3362-5229</contrib-id><email>inge.wortel@ru.nl</email><xref ref-type="aff" rid="aff1">1</xref><xref ref-type="aff" rid="aff2">2</xref><xref ref-type="other" rid="fund3"/><xref ref-type="fn" rid="con1"/><xref ref-type="fn" rid="conf1"/><xref ref-type="fn" rid="pa1">†</xref></contrib><contrib contrib-type="author" corresp="yes" id="author-229254"><name><surname>Textor</surname><given-names>Johannes</given-names></name><contrib-id authenticated="true" contrib-id-type="orcid">https://orcid.org/0000-0002-0459-9458</contrib-id><email>johannes.textor@ru.nl</email><xref ref-type="aff" rid="aff1">1</xref><xref ref-type="aff" rid="aff2">2</xref><xref ref-type="other" rid="fund1"/><xref ref-type="other" rid="fund2"/><xref ref-type="fn" rid="con2"/><xref ref-type="fn" rid="conf1"/><xref ref-type="fn" rid="pa1">†</xref></contrib><aff id="aff1"><label>1</label><institution>Department of Tumor Immunology, Radboud Institute for Molecular Life Sciences</institution><addr-line><named-content content-type="city">Nijmegen</named-content></addr-line><country>Netherlands</country></aff><aff id="aff2"><label>2</label><institution>Institute for Computing and Information Sciences, Data Science, Radboud University</institution><addr-line><named-content content-type="city">Nijmegen</named-content></addr-line><country>Netherlands</country></aff></contrib-group><contrib-group content-type="section"><contrib contrib-type="senior_editor"><name><surname>Walczak</surname><given-names>Aleksandra M</given-names></name><role>Senior Editor</role><aff><institution>École Normale Supérieure</institution><country>France</country></aff></contrib><contrib contrib-type="editor"><name><surname>Buttenschoen</surname><given-names>Andreas</given-names></name><role>Reviewing Editor</role><aff><institution>University of British Columbia</institution><country>Canada</country></aff></contrib></contrib-group><author-notes><fn fn-type="present-address" id="pa1"><label>†</label><p>Data Science, Institute for Computing and Information Sciences, Radboud University, Nijmegen, Netherlands</p></fn></author-notes><pub-date date-type="publication" publication-format="electronic"><day>09</day><month>04</month><year>2021</year></pub-date><pub-date pub-type="collection"><year>2021</year></pub-date><volume>10</volume><elocation-id>e61288</elocation-id><history><date date-type="received" iso-8601-date="2020-07-21"><day>21</day><month>07</month><year>2020</year></date><date date-type="accepted" iso-8601-date="2021-04-08"><day>08</day><month>04</month><year>2021</year></date></history><permissions><copyright-statement>© 2021, Wortel and Textor</copyright-statement><copyright-year>2021</copyright-year><copyright-holder>Wortel and Textor</copyright-holder><ali:free_to_read/><license xlink:href="http://creativecommons.org/licenses/by/4.0/"><ali:license_ref>http://creativecommons.org/licenses/by/4.0/</ali:license_ref><license-p>This article is distributed under the terms of the <ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/licenses/by/4.0/">Creative Commons Attribution License</ext-link>, which permits unrestricted use and redistribution provided that the original author and source are credited.</license-p></license></permissions><self-uri content-type="pdf" xlink:href="elife-61288-v2.pdf"/><abstract><p>The cellular Potts model (CPM) is a powerful in silico method for simulating biological processes at tissue scale. Their inherently graphical nature makes CPMs very accessible in theory, but in practice, they are mostly implemented in specialised frameworks users need to master before they can run simulations. We here present Artistoo (Artificial Tissue Toolbox), a JavaScript library for building ‘explorable’ CPM simulations where viewers can change parameters interactively, exploring their effects in real time. Simulations run directly in the web browser and do not require third-party software, plugins, or back-end servers. The JavaScript implementation imposes no major performance loss compared to frameworks written in C++; Artistoo remains sufficiently fast for interactive, real-time simulations. Artistoo provides an opportunity to unlock CPM models for a broader audience: interactive simulations can be shared via a URL in a <italic>zero-install</italic> setting. We discuss applications in CPM research, science dissemination, open science, and education.</p></abstract><abstract abstract-type="executive-summary"><title>eLife digest</title><p>Understanding complex systems, such as the weather or the spread of a pandemic, often relies on computational models that can simulate what is happening and what will happen next. Models like these can also be used to investigate biological processes. For example, cellular Potts models (or CPMs for short) are regularly used to simulate how cells move, self-organise to form tissues and respond to their surroundings.</p><p>Computational biologists use a range of specialist skills and software to create these models. However, this can make it difficult for people who do not have programming experience to interact with these simulations and incorporate them in to their own research. If more people could engage with these models, this could help foster closer collaborations and ultimately lead to better models of biological systems.</p><p>To make CPMs more accessible, Wortel and Textor created a toolbox called Artistoo that allows users to view and interact with simulations using just an internet browser. These simulations are very easy to interact with, and do not require any prior programming knowledge or specialised software. Viewers can input different parameters in to the simulation and watch in real time to see how this affects the biological system being modelled. Wortel and Textor showed that this toolbox can be used to build a range of different biological models and works just as fast as other, more complex programming tools.</p><p>Artistoo has many potential applications and is a valuable education, learning, and collaboration tool. It may also encourage more open science, as having more accessible computational models could help with peer review and make it easier to collaborate across different research fields. A similar approach could be used to provide access to many other types of models in biology and beyond.</p></abstract><kwd-group kwd-group-type="author-keywords"><kwd>cellular Potts model</kwd><kwd>simulation</kwd><kwd>software</kwd><kwd>science communication</kwd><kwd>tissue-scale model</kwd></kwd-group><kwd-group kwd-group-type="research-organism"><title>Research organism</title><kwd>None</kwd></kwd-group><funding-group><award-group id="fund1"><funding-source><institution-wrap><institution-id institution-id-type="FundRef">http://dx.doi.org/10.13039/501100004622</institution-id><institution>KWF Kankerbestrijding</institution></institution-wrap></funding-source><award-id>Young Investigator Grant (10620)</award-id><principal-award-recipient><name><surname>Textor</surname><given-names>Johannes</given-names></name></principal-award-recipient></award-group><award-group id="fund2"><funding-source><institution-wrap><institution-id institution-id-type="FundRef">http://dx.doi.org/10.13039/501100003246</institution-id><institution>Nederlandse Organisatie voor Wetenschappelijk Onderzoek</institution></institution-wrap></funding-source><award-id>Vidi Grant (VI.Vidi.192.084)</award-id><principal-award-recipient><name><surname>Textor</surname><given-names>Johannes</given-names></name></principal-award-recipient></award-group><award-group id="fund3"><funding-source><institution-wrap><institution-id institution-id-type="FundRef">http://dx.doi.org/10.13039/501100006209</institution-id><institution>Radboud Universitair Medisch Centrum</institution></institution-wrap></funding-source><award-id>Master-PhD grant</award-id><principal-award-recipient><name><surname>Wortel</surname><given-names>Inge MN</given-names></name></principal-award-recipient></award-group><funding-statement>The funders had no role in study design, data collection and interpretation, or the decision to submit the work for publication.</funding-statement></funding-group><custom-meta-group><custom-meta specific-use="meta-only"><meta-name>Author impact statement</meta-name><meta-value>By letting users build interactive simulations directly in a web browser, Artistoo unlocks new ways to communicate, teach, and collaborate in computational biology research.</meta-value></custom-meta></custom-meta-group></article-meta></front><body><sec id="s1" sec-type="intro"><title>Introduction</title><p>A growing community of computational biologists uses simulation models to reason about complex processes in biological systems. The cellular Potts model (CPM, <xref ref-type="box" rid="box1">Box 1</xref>) is a well-established framework for simulating interacting cells. Originally proposed as a model for cell sorting (<xref ref-type="bibr" rid="bib7">Graner and Glazier, 1992</xref>), the CPM has since been extended with a plethora of biological processes such as proliferation, apoptosis, cell motion, and chemotaxis – allowing CPM users to model diverse phenomena ranging from slime mould formation to blood vessel development, tumour growth, and cell migration (<xref ref-type="bibr" rid="bib13">Marée et al., 2007</xref>; <xref ref-type="bibr" rid="bib22">Szabó and Merks, 2013</xref>; <xref ref-type="bibr" rid="bib10">Hirashima et al., 2017</xref>).</p><boxed-text id="box1"><label>Box 1.</label><caption><p>Cellular Potts models.</p></caption><p>Cellular Potts models (CPMs) model cells and tissues as collections of pixels on a 2D or 3D grid, where each pixel has an ‘identity’ linking it to a specific cell or to the empty background.</p><fig id="box1fig1" position="anchor"><label>Box 1—figure 1.</label><caption><title>An example CPM grid with pixels belonging to the background (identity 0) or to one of two cells (identities 1 and 2).</title></caption><graphic mime-subtype="tiff" mimetype="image" xlink:href="elife-61288-box1-fig1-v2.tif"/></fig><p>Model dynamics arise from stochastic attempts to change these identities, for which the success rate <inline-formula><mml:math id="inf1"><mml:msub><mml:mi>P</mml:mi><mml:mtext>change</mml:mtext></mml:msub></mml:math></inline-formula> is linked to the system’s <italic>global energy</italic> or <italic>Hamiltonian</italic>, <inline-formula><mml:math id="inf2"><mml:mi>H</mml:mi></mml:math></inline-formula>. The energetic effect <inline-formula><mml:math id="inf3"><mml:mrow><mml:mi mathvariant="normal">Δ</mml:mi><mml:mo>⁢</mml:mo><mml:mi>H</mml:mi></mml:mrow></mml:math></inline-formula> of the proposed change determines <inline-formula><mml:math id="inf4"><mml:msub><mml:mi>P</mml:mi><mml:mtext>change</mml:mtext></mml:msub></mml:math></inline-formula>: energetically favourable changes (<inline-formula><mml:math id="inf5"><mml:mrow><mml:mrow><mml:mi mathvariant="normal">Δ</mml:mi><mml:mo>⁢</mml:mo><mml:mi>H</mml:mi></mml:mrow><mml:mo>&lt;</mml:mo><mml:mn>0</mml:mn></mml:mrow></mml:math></inline-formula>) always succeed, while the success rate of unfavourable changes (<inline-formula><mml:math id="inf6"><mml:mrow><mml:mrow><mml:mi mathvariant="normal">Δ</mml:mi><mml:mo>⁢</mml:mo><mml:mi>H</mml:mi></mml:mrow><mml:mo>&gt;</mml:mo><mml:mn>0</mml:mn></mml:mrow></mml:math></inline-formula>) decays with the energetic ‘cost’: <inline-formula><mml:math id="inf7"><mml:mrow><mml:msub><mml:mi>P</mml:mi><mml:mtext>change</mml:mtext></mml:msub><mml:mo>=</mml:mo><mml:msup><mml:mi>e</mml:mi><mml:mrow><mml:mo>-</mml:mo><mml:mrow><mml:mrow><mml:mi mathvariant="normal">Δ</mml:mi><mml:mo>⁢</mml:mo><mml:mi>H</mml:mi></mml:mrow><mml:mo>/</mml:mo><mml:mi>T</mml:mi></mml:mrow></mml:mrow></mml:msup></mml:mrow></mml:math></inline-formula>. Here, the ‘temperature’ <inline-formula><mml:math id="inf8"><mml:mi>T</mml:mi></mml:math></inline-formula> is a model parameter controlling noise: a higher <inline-formula><mml:math id="inf9"><mml:mi>T</mml:mi></mml:math></inline-formula> allows more energetically unfavourable changes to succeed.</p><p>CPM dynamics are thus controlled by the Hamiltonian <inline-formula><mml:math id="inf10"><mml:mi>H</mml:mi></mml:math></inline-formula>, an energy function defined by the modeller. <inline-formula><mml:math id="inf11"><mml:mi>H</mml:mi></mml:math></inline-formula> can contain multiple terms to represent different biophysical processes, such as adhesion (interface energies) and shape elasticity (energetic penalties for cells stretching or compressing beyond a given size). One of the CPM’s strengths is that almost any desired behaviour can be encoded into the model, provided that the modeller can come up with a suitable energy term. Furthermore, model energies can be linked to other equations (e.g. diffusion of some signalling molecule), allowing even more flexibility in the processes a CPM can simulate. For further details on typical energy functions and model dynamics, we refer the reader to Interactive Simulation 1 in Appendix 1.</p><p>As pixels can only have one cell identity at the same time, the property of <italic>volume exclusion</italic> emerges naturally in the model. This allows cells to interact with each other automatically. This – together with its flexibility and ability to capture detailed cell shapes – has made the CPM a popular tool for modelling cell–cell interactions and the resulting tissue dynamics (<xref ref-type="bibr" rid="bib13">Marée et al., 2007</xref>; <xref ref-type="bibr" rid="bib22">Szabó and Merks, 2013</xref>; <xref ref-type="bibr" rid="bib10">Hirashima et al., 2017</xref>).</p><p>Nevertheless, like any model, CPMs have their limitations. For example, criticisms have included their lack of scalability, as well as difficulties in linking CPM parameters to measurable, real-world quantities. We note that ongoing developments in the field are addressing some of these concerns; for details on CPM strengths and limitations (and efforts to overcome these), we refer the reader elsewhere (<xref ref-type="bibr" rid="bib23">Tapia and D'Souza, 2011</xref>; <xref ref-type="bibr" rid="bib24">Van Liedekerke et al., 2015</xref>; <xref ref-type="bibr" rid="bib12">Magno et al., 2015</xref>; <xref ref-type="bibr" rid="bib17">Rens and Edelstein-Keshet, 2019</xref>; <xref ref-type="bibr" rid="bib2">Buttenschön and Edelstein-Keshet, 2020</xref>).</p></boxed-text><p>Nowadays, several mature modelling frameworks with CPM implementations exist, such as CompuCell3D (<xref ref-type="bibr" rid="bib21">Swat et al., 2012</xref>), Morpheus (<xref ref-type="bibr" rid="bib20">Starruß et al., 2014</xref>), Tissue Simulation Toolkit (<xref ref-type="bibr" rid="bib4">Daub and Merks, 2015</xref>), and CHASTE (<xref ref-type="bibr" rid="bib15">Mirams et al., 2013</xref>). Although CPMs are relatively efficient models, tissue-scale simulations still require substantial computational resources. For this reason, all of the abovementioned frameworks rely on the C++ programming language for computation steps, which requires them to be built for and installed on the user’s native operating system.</p><p>Here, we present ‘Artistoo’ (Artificial Tissue Toolbox), a CPM framework built entirely in JavaScript. Although interpreted languages like JavaScript have classically been deemed too inefficient for running simulations, we found that this no longer holds: investments by major tech companies have tremendously improved JavaScript engines over the past years, to the point that our CPM now has no major performance disadvantage compared to existing C++ frameworks.</p><p>The JavaScript implementation of Artistoo opens up new possibilities for rapid and low-barrier sharing of CPM simulations with students, collaborators, and readers or reviewers of a paper. Unlike existing frameworks, Artistoo allows building simulations that run in the web browser without the need to install any software: Artistoo models run on any platform providing a standards-compliant web browser – be it a desktop computer, a tablet, or a mobile phone. These simulations can be published on any web server or saved locally and do not rely on any back-end servers being available. They can be made explorable, enabling viewers to interact with the simulation and see the effect of changing model parameters in real time.</p><p>In this paper, we will first briefly explain the key design principles behind Artistoo. We will then highlight applications in teaching, research, science dissemination, and open science where we envision that the zero-install, web-based architecture of our framework could be particularly useful.</p></sec><sec id="s2" sec-type="results"><title>Results</title><sec id="s2-1"><title>Implementation</title><p>Artistoo is a JavaScript library implemented as an ECMAScript 6 module, which can be loaded into an HTML page or accessed from within a Node.js command line application. Artistoo is an open-source library released under the MIT license and is freely available on GitHub at <ext-link ext-link-type="uri" xlink:href="https://github.com/ingewortel/artistoo">https://github.com/ingewortel/artistoo</ext-link> (copy archived at <ext-link ext-link-type="uri" xlink:href="https://archive.softwareheritage.org/swh:1:dir:e452ca65f77905109d1a408191316ee8ab4fb604;origin=https://github.com/ingewortel/artistoo;visit=swh:1:snp:89cf36733e6cd7cf71819e4f91aa9e281677f1bd;anchor=swh:1:rev:551ee76c3a972e86ac72ed7e977356a75d091763">swh:1:rev:551ee76c3a972e86ac72ed7e977356a75d091763</ext-link>; <xref ref-type="bibr" rid="bib26">Wortel and Textor, 2020</xref>).</p><sec id="s2-1-1"><title>Design philosophy</title><p>Computational modelling research involves two important, but distinct categories of researchers that tend to have different types of expertise. On the one hand, there are the model <italic>builders</italic>, the scientists designing the models and performing the research; these are typically computational biologists with at least some basic programming skills. On the other hand, there are the model <italic>viewers</italic>, members of the broader research community who should be able to access and understand these models once they are built; this group may also include biologists and students without programming expertise.</p><p>A major challenge in the design of modelling software is to cater to both these groups at the same time. Tools revolving around a front-end graphical user interface (GUI) are ideal for viewers (no programming required), but tend to lose some of the flexibility desired by builders (anything not yet implemented in the GUI typically becomes harder to do, and it becomes more difficult to automate simulations and post-processing). Vice versa, a more flexible coding-based tool is comfortable for builders but rapidly becomes inaccessible for most viewers.</p><p>The implementation in JavaScript allows Artistoo to resolve this problem by presenting each user group with a different interface (<xref ref-type="fig" rid="fig1">Figure 1</xref>). Model <italic>viewers</italic> access an HTML page provided by the model builder, which contains a model visualisation and interactive access to the most important parameters (improving transparency because viewers are not distracted by an overload of options they do not need). Such HTML pages are accessible in a zero-install setting, explorable via parameter sliders, and remain highly accessible: no knowledge of the Artistoo framework or model details is required for viewers to operate them.</p><fig id="fig1" position="float"><label>Figure 1.</label><caption><title>Artistoo provides different levels of access depending on the audience.</title></caption><graphic mime-subtype="tiff" mimetype="image" xlink:href="elife-61288-fig1-v2.tif"/></fig><p>Model <italic>builders</italic> create these web applications using the Artistoo framework. They can do this at different levels of complexity: Artistoo <italic>users</italic> build models via simple changes to configuration objects (requiring very little knowledge of Artistoo or programming), or by incorporating the many available methods in a few simple lines of code; this requires no in-depth knowledge of the framework ‘under the hood’ architecture while still providing high flexibility. Finally, Artistoo <italic>developers</italic> have the ultimate freedom to add custom plugins to the existing framework where needed. Only this group requires in-depth knowledge of the framework and slightly more advanced JavaScript skills. The online documentation at <ext-link ext-link-type="uri" xlink:href="https://artistoo.net/">https://artistoo.net/</ext-link> helps both these groups to get started with the framework.</p></sec><sec id="s2-1-2"><title>Approachability</title><p>The methods currently implemented in the framework allow users to simulate, visualise, and analyse a wide range of CPM models (<xref ref-type="fig" rid="fig2">Figure 2A</xref>). Our Github repository contains example code for models of various biological processes (e.g. simulations of tissues, cell migration, and cell interactions). First-time users can download these HTML pages and modify parameters without needing to learn the implementation details of the framework, or to have programmed in JavaScript before. Alternatively, the Simulation class provides default methods for setting up and visualising simulations, allowing users to get started with the library without having to set up this ‘boilerplate’ code themselves. Advanced users can instead build simulations from scratch and customise them using the many available options and methods. Once they become accustomed with the framework, they can also develop and plug in their own code modules (see ‘Modularity and flexibility’ below). An example interactive HTML simulation (<xref ref-type="fig" rid="fig2">Figure 2B</xref>) is included in Appendix 1, Interactive Simulation 2. Full documentation and a user manual with step-by-step tutorials are available at <ext-link ext-link-type="uri" xlink:href="https://artistoo.net/">https://artistoo.net/</ext-link>.</p><fig-group><fig id="fig2" position="float"><label>Figure 2.</label><caption><title>Artistoo supports interactive, 'real time' simulations of diverse biological processes.</title><p>(<bold>A</bold>) Artistoo supports simulation of diverse biological processes; (<bold>B</bold>) users can interact with browser-based simulations via sliders, in real time. (<bold>C</bold>) Artistoo performance is comparable to that of the Morpheus framework. Data show wall times (mean ± SD of five runs) for four CPM models implemented in both frameworks (see Materials and methods for implementation details). (<bold>D</bold>) Scalability of the cell sorting simulation; simulation speed in Monte Carlo Steps per second (MCS/s) for different grid sizes (mean ± SD of five runs). Red line indicates 20 frames per second, a minimum speed required for a ‘real-time’ simulation for the human visual system. See also Appendix 1 for interactive versions of the simulations shown in (<bold>B)–</bold>(<bold>D</bold>). Artistoo Node.js scripts for the simulations in (<bold>C</bold>) and (<bold>D</bold>) are available on GitHub (<xref ref-type="bibr" rid="bib26">Wortel and Textor, 2020</xref>).</p></caption><graphic mime-subtype="tiff" mimetype="image" xlink:href="elife-61288-fig2-v2.tif"/></fig><fig id="fig2s1" position="float" specific-use="child-fig"><label>Figure 2—figure supplement 1.</label><caption><title>Alternative representation of <xref ref-type="fig" rid="fig2">Figure 2D</xref> showing scaling with domain size.</title><p>Different plot of the data from <xref ref-type="fig" rid="fig2">Figure 2D</xref> showing wall time (s) for the entire simulation of 2500 MCS at different domain sizes (mean ± SD of five runs); simulation duration scales linearly with the number of pixels on the grid.</p></caption><graphic mime-subtype="tiff" mimetype="image" xlink:href="elife-61288-fig2-figsupp1-v2.tif"/></fig></fig-group></sec><sec id="s2-1-3"><title>Modularity and flexibility</title><p>A typical CPM simulation consists of different types of components: the grid on which cells are simulated, the energy rules governing cell behaviour in the model, separate processes such as cell proliferation or diffusion, and the visualisation and quantification methods used to produce outputs. A key strength of the CPM is that it can be easily extended with custom terms to model specific processes. To facilitate such customisation, we have set up the code in a highly modular fashion. These modules can be combined freely to build a custom simulation. In addition, developers can supply their own custom modules – containing any of the aforementioned simulation components – to integrate with the framework and to share with other users.</p></sec><sec id="s2-1-4"><title>Performance and scalability</title><p>Although maximal performance is not a design goal of our framework per se, Artistoo should not be much slower than comparable frameworks either: running explorable simulations in real-time is only feasible if computations are reasonably efficient. Indeed, we implemented various simulations both in Artistoo and in Morpheus and found that both frameworks had similar performance (<xref ref-type="fig" rid="fig2">Figure 2C</xref>). In fact, Artistoo was slightly faster in all but one of these examples, although differences tended to be small; even in the case where Artistoo was slower (cell division), the difference in performance was not so large that real-time browser simulations became infeasible. Simulation speed scales linearly with the total number of pixels on the grid and does decrease for very large systems, but real-time simulations remain feasible for a reasonable range of grid sizes (<xref ref-type="fig" rid="fig2s1">Figure 2—figure supplement 1</xref>, <xref ref-type="fig" rid="fig2">Figure 2D</xref>). This would allow sharing of at least a reasonable prototype of larger-scale models.</p></sec><sec id="s2-1-5"><title>Portability</title><p>To make Artistoo more accessible for users familiar with other frameworks, we have built a prototype for an online tool that converts Morpheus model files into Artistoo code (<ext-link ext-link-type="uri" xlink:href="https://artistoo.net/converter.html">https://artistoo.net/converter.html</ext-link>). In some cases, models may not (yet) be fully portable due to differences in the types of models supported; in that case, the tool returns the closest possible analogue and logs any changes it had to make, providing suggestions to help users further. This tool offers a starting point for any users who wish to build Artistoo web applications from their existing models. A similar tool converts Artistoo models to Morpheus XML, allowing users to continue in another framework (e.g. for upscaling models, multiscale models, etc).</p></sec></sec><sec id="s2-2"><title>Applications</title><p>We here highlight a number of settings where Artistoo might complement other available modelling frameworks, focusing on the unique feature of Artistoo: it allows users to build and share explorable simulations in a <italic>zero-install</italic> setting. We discuss how this opens up novel opportunities of sharing CPM-based research and provide examples from our own work.</p><sec id="s2-2-1"><title>Teaching</title><p>When organising practical computer work in the context of classroom teaching, getting software to work on every student’s computer can consume a substantial amount of time and effort. Especially when teaching large classes in limited time, installing an entirely new modelling framework for a single-course assignment may not be appropriate. The <italic>zero-install</italic> feature of Artistoo might therefore be attractive for use of CPM modelling in the classroom. We frequently use the framework in teaching and found it feasible to let students run and understand CPM models in a workshop of just a few hours – even when students had no programming experience and were given just a single lecture on the CPM in advance. We provide an introductory assignment on the CPM in Application 1 in Appendix 2, which readers may use and adapt freely for their own courses, and refer to Interactive Simulation 1 in Appendix 1 for an interactive tutorial on the CPM.</p></sec><sec id="s2-2-2"><title>Communication and open science</title><p>While the move towards open science has prompted many to share their code with publications, understanding and using this code often remains challenging for readers who do not use similar models themselves. We envision that by sharing interactive Artistoo simulations via a simple URL, computational biologists can make their modelling research more accessible for the readers and reviewers of their papers; if readers can interact with model parameters themselves without the barrier of having to install special software, this may greatly improve the transparency of CPM research. This would allow others to evaluate these models more critically, as well as foster the exchange of ideas between scientists from different disciplines.</p><p>In addition, interactive simulations can help communicate CPM-based science at conferences or in classrooms. We frequently use the framework reveal.js (<xref ref-type="bibr" rid="bib9">Hattab and Contributors, 2020</xref>) to build slideshows in HTML, in which live, interactive Artistoo demonstrations help explain how models work. Similarly, interactive simulations can be shared on a conference poster via a QR code, which other attendees can explore on their mobile phone. We provide examples of both in the Supplementary Materials (Application 2, Application 3 in Appendix 2).</p></sec><sec id="s2-2-3"><title>Research and collaboration</title><p>Although the CPM is extremely flexible in the types of behaviours it can model, it can be difficult to find the parameter ranges where these behaviours occur. We found that an interactive web page with instantaneous feedback, where the effect of changing parameters is visible in real time (<xref ref-type="fig" rid="fig2">Figure 2</xref> and Interactive Simulation 7 in Appendix 1), can substantially speed up parameter selection. This visual approach also picks up on unpredicted behaviours and artefacts (e.g. cell breaking) that are difficult to detect from numerical outputs alone. Moreover, we note that sharing these interactive pages allows us to tune parameters in collaboration with experimental biologists, helping us improve our models at an early stage. Thus, building a web-based prototype of a simulation can speed up parameter tuning and help obtain higher quality models.</p><p>Once a web-based prototype has been built and tuned, it can easily be ported to the Node.js JavaScript interpreter. This allows users to run a simulation as a command line application and store any desired simulation output locally. The resulting images or statistics can then be opened in other programs for further postprocessing, as demonstrated by two examples (Application 4 in Appendix 2).</p></sec></sec></sec><sec id="s3" sec-type="discussion"><title>Discussion</title><p>The recent rise of the open science movement has changed the way research outputs are being shared and communicated. This may be especially important for computational models, which have classically been difficult to share because of the required software and coding skills. Transparent model sharing calls for new strategies to make models accessible for broader audiences.</p><p>Indeed, several such efforts have been made in recent years. The CPM framework CompuCell3D now hosts an online version on NanoHub, which users can access without installing software locally (<xref ref-type="bibr" rid="bib6">Gianlupi and Sego, 2021</xref>). Beyond the CPM field, modelling frameworks like Tellurium (<xref ref-type="bibr" rid="bib3">Choi et al., 2018</xref>) and PhysiCell (<xref ref-type="bibr" rid="bib5">Ghaffarizadeh et al., 2018</xref>) have also created online access through NanoHub; these frameworks have also shown how such online models can be made interactive by using (variations of) Jupyter notebooks (see, e.g., <xref ref-type="bibr" rid="bib11">Macklin and Heiland, 2020</xref>; <xref ref-type="bibr" rid="bib14">Medley et al., 2018</xref>; <xref ref-type="bibr" rid="bib19">Somogyi, 2019</xref>). The potential of explorable online web pages in communication and teaching is also demonstrated by the emerging practice to share R models in the form of Shiny apps (<xref ref-type="bibr" rid="bib18">Schönbrodt, 2014</xref>; <xref ref-type="bibr" rid="bib27">Zehetleitner and Schönbrodt, 2015</xref>; <xref ref-type="bibr" rid="bib8">Granjon, 2019</xref>). And finally, the online collection of ‘complexity explorables’ (<xref ref-type="bibr" rid="bib1">Brockmann, 2020</xref>) is a fantastic example of how to combine interactive online simulations with explanatory text to communicate modelling research.</p><p>With Artistoo, we now hope to open up this powerful avenue of model sharing for CPM research, allowing users to build online web pages and ‘explorables’ that combine interactive simulations with model explanations. We here show that the framework’s performance (similar to that of existing frameworks in C++) is sufficient to allow for interactive CPM simulations. We have been developing the library for more than 5 years, also using it for robust simulation work in our research; see, for example, <xref ref-type="bibr" rid="bib25">Wortel et al., 2020</xref>. We are continuing to develop the library for our own work and welcome suggestions and code contributions from the community.</p><p>We do not envision Artistoo to <italic>replace</italic> existing modelling software; rather, it can complement software directed at computational biologists and developers by letting users build explorable and sharable versions of a simulation. To facilitate this process, we have built a (prototype) tool to help users convert models between different frameworks (currently: Artistoo and Morpheus). Although Artistoo already offers a wide range of methods, it does not (yet) support all features of existing frameworks (Morpheus, CHASTE, CompuCell3D, Tissue Simulation Toolkit), such as solvers for reaction–diffusion equations or SBML-encoded intracellular signalling, or writing output in formats like VTK and HDF5. Nevertheless, Artistoo simulations are highly customisable, and a wide range of CPM models can already be constructed using the framework in its current state. The software’s modular structure also makes it easy for future developers to extend it with custom code.</p><p>In summary, to the best of our knowledge, Artistoo is the first CPM simulation framework supporting interactive simulations in the web browser that can be shared via a simple URL, without requiring installed software or back-end servers. We hope that this will unlock avenues of sharing and communicating (CPM) simulations to much larger audiences.</p></sec><sec id="s4" sec-type="materials|methods"><title>Materials and methods</title><table-wrap id="keyresource" position="anchor"><label>Key resources table</label><table frame="hsides" rules="groups"><thead><tr><th>Reagent type (species) <break/>or resource</th><th>Designation</th><th>Source or reference</th><th>Identifiers</th><th>Additional <break/>information</th></tr></thead><tbody><tr><td>Software, algorithm</td><td>Morpheus</td><td>Publication <break/><xref ref-type="bibr" rid="bib20">Starruß et al., 2014</xref></td><td>RRID:<ext-link ext-link-type="uri" xlink:href="https://scicrunch.org/resolver/SCR_014975">SCR_014975</ext-link></td><td>version 2.1.0</td></tr><tr><td>Software, algorithm</td><td>Artistoo</td><td>This paper, see also <ext-link ext-link-type="uri" xlink:href="https://artistoo.net">https://artistoo.net</ext-link></td><td>RRID:<ext-link ext-link-type="uri" xlink:href="https://scicrunch.org/resolver/SCR_020983">SCR_020983</ext-link></td><td>version 1.0.0</td></tr></tbody></table></table-wrap><p>This section contains implementation details of the simulations used to assess Artistoo (v1.0.0) performance. All simulations were run in the console mode (using Node.js, which contains the same JavaScript engine as the Chrome web browser). All Artistoo code is available in the repository <ext-link ext-link-type="uri" xlink:href="https://github.com/ingewortel/artistoo-supplements/">https://github.com/ingewortel/artistoo-supplements/</ext-link>, as are interactive HTML versions of each simulation. Please visit <ext-link ext-link-type="uri" xlink:href="https://ingewortel.github.io/artistoo-supplements/">https://ingewortel.github.io/artistoo-supplements/</ext-link> for a web interface to access interactive simulations online. We refer to the provided code for details of the implementation, but summarise the most important settings here.</p><sec id="s4-1"><title>Framework comparisons</title><p>To compare performance of Artistoo versus that of Morpheus (v2.1.0), we performed four different simulations in both frameworks. For this, we used the default examples provided with Morpheus and rebuilt similar simulations in Artistoo.</p><sec id="s4-1-1"><title>Game of life</title><p>This is an implementation of the Game of Life, a Cellular Automaton (CA) of John Conway (see also Interactive Simulation 3 in Appendix 1). The simulation was run on a 50 × 50 pixel grid with random initial conditions. The simulation was run for 500 steps, storing a PNG image every 20 steps. This simulation is the Morpheus example <italic>Miscellaneous/GameOfLife.xml</italic> (version 4).</p></sec></sec><sec id="s4-2"><title>Protrusion model</title><p>This model of a migrating cell implements an actin-inspired migration model (<xref ref-type="bibr" rid="bib16">Niculescu et al., 2015</xref>) (see also Interactive Simulation 4 in Appendix 1). A single cell was seeded in the middle of a 200 × 200 pixel grid. Two obstacles of radius 10 were placed at a distance of 50 pixels to the left and right of the cell, respectively. Simulations were run for 15,000 MCS, logging the cell’s centroid every 10 MCS and saving a PNG every 250 MCS. This simulation is the Morpheus example <italic>CPM/Protrusion_2D.xml</italic> (version 4).</p></sec><sec id="s4-3"><title>Cell sorting</title><p>This simulation implements the classical CPM model published by <xref ref-type="bibr" rid="bib7">Graner and Glazier, 1992</xref> (see also Interactive Simulation 5 in Appendix 1). Fifty cells each of two cell types were seeded on a 200 × 200 pixel grid within a circle of radius 67 from the grid midpoint. Simulations were run for 2000 MCS, logging statistics every 10 MCS and saving a PNG every 100 MCS. This simulation is the Morpheus example <italic>CPM/CellSorting_2D.xml</italic> (version 4), where the <italic>StopTime</italic> field was changed from 2.5e4 to 2000.</p></sec><sec id="s4-4"><title>Cell division</title><p>A CPM linked to cell division (see also Interactive Simulation 6 in Appendix 1) was simulated on a 500 × 500 pixel grid. The grid was initialised with 20 cells in a circle of radius 35 surrounding the grid midpoint. Simulations were run for 40,000 MCS, logging the number of cells every 100 MCS and saving a PNG every 1000 MCS. This simulation is the Morpheus example <italic>CPM/Proliferation_2D.xml</italic> (version 4).</p></sec><sec id="s4-5"><title>Scalability of cell sorting</title><p>For the scalability simulations, simulations were run without outputting images. This allowed us to investigate the simulation speed separately from the time it takes to draw the entire grid. Note that if the drawing step becomes a limiting factor for running the simulation, it is always possible to speed up the process by drawing only once every few steps, or by choosing a more efficient drawing method (e.g. drawing only cell borders rather than entire cells).</p><p>Simulations contained 1, 5, 10, 50, 100, 500, or 1000 cells per cell type. The grid dimensions were adaptively scaled such that <inline-formula><mml:math id="inf12"><mml:mrow><mml:mi>x</mml:mi><mml:mo>=</mml:mo><mml:mi>y</mml:mi><mml:mo>=</mml:mo><mml:msqrt><mml:mrow><mml:mn>1.5</mml:mn><mml:mo>⁢</mml:mo><mml:msub><mml:mi>P</mml:mi><mml:mtext>tot</mml:mtext></mml:msub></mml:mrow></mml:msqrt></mml:mrow></mml:math></inline-formula>, with <inline-formula><mml:math id="inf13"><mml:msub><mml:mi>P</mml:mi><mml:mtext>tot</mml:mtext></mml:msub></mml:math></inline-formula> the total number of pixels of all the cells. Cells were seeded within a radius <inline-formula><mml:math id="inf14"><mml:mrow><mml:mn>0.8</mml:mn><mml:mo>⁢</mml:mo><mml:msqrt><mml:mrow><mml:msub><mml:mi>P</mml:mi><mml:mtext>tot</mml:mtext></mml:msub><mml:mo>/</mml:mo><mml:mi>π</mml:mi></mml:mrow></mml:msqrt></mml:mrow></mml:math></inline-formula> from the grid midpoint. Other settings were the same as in the cell sorting simulation described under Framework comparisons.</p></sec></sec></body><back><ack id="ack"><title>Acknowledgements</title><p>The authors thank Nino van Halem and Ankur Ankan for their contributions to the code, Peter Linders for valuable feedback on an early version of the Artistoo manual, and Franka Buytenhuijs for thoroughly checking the interactive explorables. Funding This work was supported by KWF Kankerbestrijding (10620 to JT), a Vidi grant from NWO (192.084 to JT), and a PhD grant by the Radboudumc (to IW).</p></ack><sec id="s5" sec-type="additional-information"><title>Additional information</title><fn-group content-type="competing-interest"><title>Competing interests</title><fn fn-type="COI-statement" id="conf1"><p>No competing interests declared</p></fn></fn-group><fn-group content-type="author-contribution"><title>Author contributions</title><fn fn-type="con" id="con1"><p>Conceptualization, Data curation, Software, Formal analysis, Funding acquisition, Validation, Investigation, Visualization, Methodology, Writing - original draft, Project administration</p></fn><fn fn-type="con" id="con2"><p>Conceptualization, Resources, Data curation, Software, Formal analysis, Supervision, Funding acquisition, Validation, Investigation, Visualization, Methodology, Project administration, Writing - review and editing</p></fn></fn-group></sec><sec id="s6" sec-type="supplementary-material"><title>Additional files</title><supplementary-material id="transrepform"><label>Transparent reporting form</label><media mime-subtype="docx" mimetype="application" xlink:href="elife-61288-transrepform-v2.docx"/></supplementary-material></sec><sec id="s7" sec-type="data-availability"><title>Data availability</title><p>Source scripts have been provided for Figure 2.</p></sec><ref-list><title>References</title><ref id="bib1"><element-citation publication-type="web"><person-group person-group-type="author"><name><surname>Brockmann</surname> <given-names>D</given-names></name></person-group><year iso-8601-date="2020">2020</year><article-title>Complexity explorables</article-title><ext-link ext-link-type="uri" xlink:href="https://www.complexity-explorables.org">https://www.complexity-explorables.org</ext-link><date-in-citation iso-8601-date="2021-03-03">March 3, 2021</date-in-citation></element-citation></ref><ref id="bib2"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Buttenschön</surname> <given-names>A</given-names></name><name><surname>Edelstein-Keshet</surname> <given-names>L</given-names></name></person-group><year iso-8601-date="2020">2020</year><article-title>Bridging from single to collective cell migration: a review of models and links to experiments</article-title><source>PLOS Computational Biology</source><volume>16</volume><elocation-id>e1008411</elocation-id><pub-id pub-id-type="doi">10.1371/journal.pcbi.1008411</pub-id><pub-id pub-id-type="pmid">33301528</pub-id></element-citation></ref><ref id="bib3"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Choi</surname> <given-names>K</given-names></name><name><surname>Medley</surname> <given-names>JK</given-names></name><name><surname>König</surname> <given-names>M</given-names></name><name><surname>Stocking</surname> <given-names>K</given-names></name><name><surname>Smith</surname> <given-names>L</given-names></name><name><surname>Gu</surname> <given-names>S</given-names></name><name><surname>Sauro</surname> <given-names>HM</given-names></name></person-group><year iso-8601-date="2018">2018</year><article-title>Tellurium: an extensible python-based modeling environment for systems and synthetic biology</article-title><source>Biosystems</source><volume>171</volume><fpage>74</fpage><lpage>79</lpage><pub-id pub-id-type="doi">10.1016/j.biosystems.2018.07.006</pub-id><pub-id pub-id-type="pmid">30053414</pub-id></element-citation></ref><ref id="bib4"><element-citation publication-type="book"><person-group person-group-type="author"><name><surname>Daub</surname> <given-names>JT</given-names></name><name><surname>Merks</surname> <given-names>RMH</given-names></name></person-group><year iso-8601-date="2015">2015</year><source>Cell-based computational modeling of vascular morphogenesis using Tissue Simulation Toolkit</source><publisher-name>Springer</publisher-name><pub-id pub-id-type="doi">10.1007/978-1-4939-1462-3_6</pub-id></element-citation></ref><ref id="bib5"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Ghaffarizadeh</surname> <given-names>A</given-names></name><name><surname>Heiland</surname> <given-names>R</given-names></name><name><surname>Friedman</surname> <given-names>SH</given-names></name><name><surname>Mumenthaler</surname> <given-names>SM</given-names></name><name><surname>Macklin</surname> <given-names>P</given-names></name></person-group><year iso-8601-date="2018">2018</year><article-title>PhysiCell: an open source physics-based cell simulator for 3-D multicellular systems</article-title><source>PLOS Computational Biology</source><volume>14</volume><elocation-id>e1005991</elocation-id><pub-id pub-id-type="doi">10.1371/journal.pcbi.1005991</pub-id><pub-id pub-id-type="pmid">29474446</pub-id></element-citation></ref><ref id="bib6"><element-citation publication-type="software"><person-group person-group-type="author"><name><surname>Gianlupi</surname> <given-names>JF</given-names></name><name><surname>Sego</surname> <given-names>TJ</given-names></name></person-group><year iso-8601-date="2021">2021</year><source>Compucell3d <underline>V4 main tool</underline></source><ext-link ext-link-type="uri" xlink:href="https://doi.org/10.21981/NQKH-NS65">https://doi.org/10.21981/NQKH-NS65</ext-link></element-citation></ref><ref id="bib7"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Graner</surname> <given-names>F</given-names></name><name><surname>Glazier</surname> <given-names>JA</given-names></name></person-group><year iso-8601-date="1992">1992</year><article-title>Simulation of biological cell sorting using a two-dimensional extended Potts model</article-title><source>Physical Review Letters</source><volume>69</volume><fpage>2013</fpage><lpage>2016</lpage><pub-id pub-id-type="doi">10.1103/PhysRevLett.69.2013</pub-id><pub-id pub-id-type="pmid">10046374</pub-id></element-citation></ref><ref id="bib8"><element-citation publication-type="web"><person-group person-group-type="author"><name><surname>Granjon</surname> <given-names>D</given-names></name></person-group><year iso-8601-date="2019">2019</year><article-title>A virtual lab for teaching physiology</article-title><ext-link ext-link-type="uri" xlink:href="https://shiny.rstudio.com/gallery/teach-physiology.html">https://shiny.rstudio.com/gallery/teach-physiology.html</ext-link><date-in-citation iso-8601-date="2021-03-04">March 4, 2021</date-in-citation></element-citation></ref><ref id="bib9"><element-citation publication-type="web"><person-group person-group-type="author"><name><surname>Hattab</surname> <given-names>HE</given-names></name><collab>Contributors</collab></person-group><year iso-8601-date="2020">2020</year><article-title>Reveal.js: the HTML presentation framework</article-title><ext-link ext-link-type="uri" xlink:href="https://revealjs.com">https://revealjs.com</ext-link><date-in-citation iso-8601-date="2020-05-01">May 1, 2020</date-in-citation></element-citation></ref><ref id="bib10"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Hirashima</surname> <given-names>T</given-names></name><name><surname>Rens</surname> <given-names>EG</given-names></name><name><surname>Merks</surname> <given-names>RMH</given-names></name></person-group><year iso-8601-date="2017">2017</year><article-title>Cellular Potts modeling of complex multicellular behaviors in tissue morphogenesis</article-title><source>Development, Growth &amp; Differentiation</source><volume>59</volume><fpage>329</fpage><lpage>339</lpage><pub-id pub-id-type="doi">10.1111/dgd.12358</pub-id><pub-id pub-id-type="pmid">28593653</pub-id></element-citation></ref><ref id="bib11"><element-citation publication-type="data"><person-group person-group-type="author"><name><surname>Macklin</surname> <given-names>P</given-names></name><name><surname>Heiland</surname> <given-names>R</given-names></name></person-group><year iso-8601-date="2020">2020</year><data-title>PhysiCell cancer-immune model</data-title><source>Nanohub</source><pub-id pub-id-type="doi">10.21981/EA0R-3094</pub-id></element-citation></ref><ref id="bib12"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Magno</surname> <given-names>R</given-names></name><name><surname>Grieneisen</surname> <given-names>VA</given-names></name><name><surname>Marée</surname> <given-names>AF</given-names></name></person-group><year iso-8601-date="2015">2015</year><article-title>The biophysical nature of cells: potential cell behaviours revealed by analytical and computational studies of cell surface mechanics</article-title><source>BMC Biophysics</source><volume>8</volume><elocation-id>8</elocation-id><pub-id pub-id-type="doi">10.1186/s13628-015-0022-x</pub-id><pub-id pub-id-type="pmid">26023328</pub-id></element-citation></ref><ref id="bib13"><element-citation publication-type="book"><person-group person-group-type="author"><name><surname>Marée</surname> <given-names>AFM</given-names></name><name><surname>Grieneisen</surname> <given-names>VA</given-names></name><name><surname>Hogeweg</surname> <given-names>P</given-names></name></person-group><year iso-8601-date="2007">2007</year><source>The cellular Potts model and biophysical properties of cells, tissues and morphogenesis</source><publisher-name>Birkhäuser Basel</publisher-name><pub-id pub-id-type="doi">10.1007/978-3-7643-8123-3_5</pub-id></element-citation></ref><ref id="bib14"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Medley</surname> <given-names>JK</given-names></name><name><surname>Choi</surname> <given-names>K</given-names></name><name><surname>König</surname> <given-names>M</given-names></name><name><surname>Smith</surname> <given-names>L</given-names></name><name><surname>Gu</surname> <given-names>S</given-names></name><name><surname>Hellerstein</surname> <given-names>J</given-names></name><name><surname>Sealfon</surname> <given-names>SC</given-names></name><name><surname>Sauro</surname> <given-names>HM</given-names></name></person-group><year iso-8601-date="2018">2018</year><article-title>Tellurium notebooks-an environment for reproducible dynamical modeling in systems biology</article-title><source>PLOS Computational Biology</source><volume>14</volume><elocation-id>e1006220</elocation-id><pub-id pub-id-type="doi">10.1371/journal.pcbi.1006220</pub-id><pub-id pub-id-type="pmid">29906293</pub-id></element-citation></ref><ref id="bib15"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Mirams</surname> <given-names>GR</given-names></name><name><surname>Arthurs</surname> <given-names>CJ</given-names></name><name><surname>Bernabeu</surname> <given-names>MO</given-names></name><name><surname>Bordas</surname> <given-names>R</given-names></name><name><surname>Cooper</surname> <given-names>J</given-names></name><name><surname>Corrias</surname> <given-names>A</given-names></name><name><surname>Davit</surname> <given-names>Y</given-names></name><name><surname>Dunn</surname> <given-names>SJ</given-names></name><name><surname>Fletcher</surname> <given-names>AG</given-names></name><name><surname>Harvey</surname> <given-names>DG</given-names></name><name><surname>Marsh</surname> <given-names>ME</given-names></name><name><surname>Osborne</surname> <given-names>JM</given-names></name><name><surname>Pathmanathan</surname> <given-names>P</given-names></name><name><surname>Pitt-Francis</surname> <given-names>J</given-names></name><name><surname>Southern</surname> <given-names>J</given-names></name><name><surname>Zemzemi</surname> <given-names>N</given-names></name><name><surname>Gavaghan</surname> <given-names>DJ</given-names></name></person-group><year iso-8601-date="2013">2013</year><article-title>Chaste: an open source C++ library for computational physiology and biology</article-title><source>PLOS Computational Biology</source><volume>9</volume><elocation-id>e1002970</elocation-id><pub-id pub-id-type="doi">10.1371/journal.pcbi.1002970</pub-id><pub-id pub-id-type="pmid">23516352</pub-id></element-citation></ref><ref id="bib16"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Niculescu</surname> <given-names>I</given-names></name><name><surname>Textor</surname> <given-names>J</given-names></name><name><surname>de Boer</surname> <given-names>RJ</given-names></name></person-group><year iso-8601-date="2015">2015</year><article-title>Crawling and gliding: a computational model for shape-driven cell migration</article-title><source>PLOS Computational Biology</source><volume>11</volume><elocation-id>e1004280</elocation-id><pub-id pub-id-type="doi">10.1371/journal.pcbi.1004280</pub-id><pub-id pub-id-type="pmid">26488304</pub-id></element-citation></ref><ref id="bib17"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Rens</surname> <given-names>EG</given-names></name><name><surname>Edelstein-Keshet</surname> <given-names>L</given-names></name></person-group><year iso-8601-date="2019">2019</year><article-title>From energy to cellular forces in the cellular Potts model: an algorithmic approach</article-title><source>PLOS Computational Biology</source><volume>15</volume><elocation-id>e1007459</elocation-id><pub-id pub-id-type="doi">10.1371/journal.pcbi.1007459</pub-id><pub-id pub-id-type="pmid">31825952</pub-id></element-citation></ref><ref id="bib18"><element-citation publication-type="software"><person-group person-group-type="author"><name><surname>Schönbrodt</surname> <given-names>F</given-names></name></person-group><year iso-8601-date="2014">2014</year><source>Shinyapps: Experience Statistics</source><ext-link ext-link-type="uri" xlink:href="https://shinyapps.org/">https://shinyapps.org/</ext-link></element-citation></ref><ref id="bib19"><element-citation publication-type="software"><person-group person-group-type="author"><name><surname>Somogyi</surname> <given-names>AT</given-names></name></person-group><year iso-8601-date="2019">2019</year><source>Tellurium</source><ext-link ext-link-type="uri" xlink:href="https://doi.org/10.21981/EVG3-D766">https://doi.org/10.21981/EVG3-D766</ext-link></element-citation></ref><ref id="bib20"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Starruß</surname> <given-names>J</given-names></name><name><surname>de Back</surname> <given-names>W</given-names></name><name><surname>Brusch</surname> <given-names>L</given-names></name><name><surname>Deutsch</surname> <given-names>A</given-names></name></person-group><year iso-8601-date="2014">2014</year><article-title>Morpheus: a user-friendly modeling environment for multiscale and multicellular systems biology</article-title><source>Bioinformatics</source><volume>30</volume><fpage>1331</fpage><lpage>1332</lpage><pub-id pub-id-type="doi">10.1093/bioinformatics/btt772</pub-id><pub-id pub-id-type="pmid">24443380</pub-id></element-citation></ref><ref id="bib21"><element-citation publication-type="book"><person-group person-group-type="author"><name><surname>Swat</surname> <given-names>MH</given-names></name><name><surname>Thomas</surname> <given-names>GL</given-names></name><name><surname>Belmonte</surname> <given-names>JM</given-names></name><name><surname>Shirinifard</surname> <given-names>A</given-names></name><name><surname>Hmeljak</surname> <given-names>D</given-names></name><name><surname>Glazier</surname> <given-names>JA</given-names></name></person-group><year iso-8601-date="2012">2012</year><chapter-title>Multi-scale modeling of tissues using CompuCell3D</chapter-title><person-group person-group-type="editor"><name><surname>Asthagiri</surname> <given-names>A. R</given-names></name><name><surname>Arkin</surname> <given-names>A. P</given-names></name></person-group><source>Computational Methods in Cell Biology, Volume 110 of Methods in Cell Biology</source><publisher-name>Academic Press</publisher-name><fpage>325</fpage><lpage>366</lpage><pub-id pub-id-type="doi">10.1016/B978-0-12-388403-9.00013-8</pub-id></element-citation></ref><ref id="bib22"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Szabó</surname> <given-names>A</given-names></name><name><surname>Merks</surname> <given-names>RM</given-names></name></person-group><year iso-8601-date="2013">2013</year><article-title>Cellular Potts modeling of tumor growth, tumor invasion, and tumor evolution</article-title><source>Frontiers in Oncology</source><volume>3</volume><elocation-id>87</elocation-id><pub-id pub-id-type="doi">10.3389/fonc.2013.00087</pub-id><pub-id pub-id-type="pmid">23596570</pub-id></element-citation></ref><ref id="bib23"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Tapia</surname> <given-names>JJ</given-names></name><name><surname>D'Souza</surname> <given-names>RM</given-names></name></person-group><year iso-8601-date="2011">2011</year><article-title>Parallelizing the cellular Potts model on graphics processing units</article-title><source>Computer Physics Communications</source><volume>182</volume><fpage>857</fpage><lpage>865</lpage><pub-id pub-id-type="doi">10.1016/j.cpc.2010.12.011</pub-id></element-citation></ref><ref id="bib24"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Van Liedekerke</surname> <given-names>P</given-names></name><name><surname>Palm</surname> <given-names>MM</given-names></name><name><surname>Jagiella</surname> <given-names>N</given-names></name><name><surname>Drasdo</surname> <given-names>D</given-names></name></person-group><year iso-8601-date="2015">2015</year><article-title>Simulating tissue mechanics with agent-based models: concepts, perspectives and some novel results</article-title><source>Computational Particle Mechanics</source><volume>2</volume><fpage>401</fpage><lpage>444</lpage><pub-id pub-id-type="doi">10.1007/s40571-015-0082-3</pub-id></element-citation></ref><ref id="bib25"><element-citation publication-type="preprint"><person-group person-group-type="author"><name><surname>Wortel</surname> <given-names>IMN</given-names></name><name><surname>Niculescu</surname> <given-names>I</given-names></name><name><surname>Kolijn</surname> <given-names>PM</given-names></name><name><surname>Gov</surname> <given-names>N</given-names></name><name><surname>de Boer</surname> <given-names>RJ</given-names></name><name><surname>Textor</surname> <given-names>J</given-names></name></person-group><year iso-8601-date="2020">2020</year><article-title>Actin-inspired feedback couples speed and persistence in a cellular Potts model of cell migration</article-title><source>bioRxiv</source><pub-id pub-id-type="doi">10.1101/338459</pub-id></element-citation></ref><ref id="bib26"><element-citation publication-type="software"><person-group person-group-type="author"><name><surname>Wortel</surname> <given-names>IMN</given-names></name><name><surname>Textor</surname> <given-names>J</given-names></name></person-group><year iso-8601-date="2020">2020</year><source>Github repository: artistoo-supplements</source><version designator="3ea19b9">3ea19b9</version><ext-link ext-link-type="uri" xlink:href="https://github.com/ingewortel/artistoo-supplements">https://github.com/ingewortel/artistoo-supplements</ext-link></element-citation></ref><ref id="bib27"><element-citation publication-type="web"><person-group person-group-type="author"><name><surname>Zehetleitner</surname> <given-names>M</given-names></name><name><surname>Schönbrodt</surname> <given-names>F</given-names></name></person-group><year iso-8601-date="2015">2015</year><article-title>When does a significant p-value indicate a true effect?</article-title><ext-link ext-link-type="uri" xlink:href="https://shinyapps.org/apps/PPV/">https://shinyapps.org/apps/PPV/</ext-link><date-in-citation iso-8601-date="2021-03-04">March 4, 2021</date-in-citation></element-citation></ref></ref-list><app-group><app id="appendix-1"><title>Appendix 1</title><boxed-text><sec id="s8" sec-type="appendix"><title>Interactive simulations</title><p>To showcase how interactive simulations can be used in teaching and communication, we have prepared a number of ‘interactive simulations’ and ‘explorables’. These explain the CPM framework and the models used in <xref ref-type="fig" rid="fig2">Figure 2</xref>, and will also be made available on <ext-link ext-link-type="uri" xlink:href="http://artistoo.net">http://artistoo.net</ext-link> later.</p><p>All simulations described below are available on Github at <ext-link ext-link-type="uri" xlink:href="https://github.com/ingewortel/artistoo-supplements">https://github.com/ingewortel/artistoo-supplements</ext-link> (<xref ref-type="bibr" rid="bib26">Wortel and Textor, 2020</xref>), which also contains instructions on how to use these files from your computer. For easy access, interactive simulations and applications are also accessible directly via <ext-link ext-link-type="uri" xlink:href="https://ingewortel.github.io/artistoo-supplements/">https://ingewortel.github.io/artistoo-supplements/</ext-link>.</p><sec id="s8-1"><title>Interactive simulation 1</title><p>This explorable explains the algorithm and dynamics behind the CPM for readers unfamiliar with this type of model.</p></sec><sec id="s8-2"><title>Interactive simulation 2</title><p>This explorable describes a CPM extension that lets cells migrate actively (<xref ref-type="bibr" rid="bib16">Niculescu et al., 2015</xref>), as depicted in <xref ref-type="fig" rid="fig2">Figure 2b</xref>.</p></sec><sec id="s8-3"><title>Interactive simulation 3</title><p>This explorable describes a famous Cellular Automaton (CA) model called the ‘Game of Life’; the classic model by John Conway that is also mentioned in <xref ref-type="fig" rid="fig2">Figure 2c</xref>.</p></sec><sec id="s8-4"><title>Interactive simulation 4</title><p>Interactive version of the ‘Cell migration’ simulation in <xref ref-type="fig" rid="fig2">Figure 2c</xref>. This model once again depicts a migrating cell as defined in <xref ref-type="bibr" rid="bib16">Niculescu et al., 2015</xref> (see also Interactive Simulation two fur the full ‘explorable’ with an explanation of the model).</p></sec><sec id="s8-5"><title>Interactive simulation 5</title><p>Interactive version of the ‘Cell sorting’ simulation in <xref ref-type="fig" rid="fig2">Figure 2c</xref>. This classic model was the first CPM as developed by <xref ref-type="bibr" rid="bib7">Graner and Glazier, 1992</xref>. Two populations of cells spontaneously sort themselves.</p></sec><sec id="s8-6"><title>Interactive simulation 6</title><p>Interactive version of the ‘Dividing cells’ simulation in <xref ref-type="fig" rid="fig2">Figure 2c</xref>; the explorable shows what happens when we couple division dynamics to the spatial information in a CPM.</p></sec><sec id="s8-7"><title>Interactive simulation 7</title><p>Interactive simulation of ‘collective migration’. This simulation is an extension of Interactive Simulation 2, but now contains more than one cell and allows users to tune more different CPM parameters. See also Application 1 in Appendix 2. This simulation also serves as an example of how interactive CPM simulations can be used to tune parameters.</p></sec></sec></boxed-text></app><app id="appendix-2"><title>Appendix 2</title><boxed-text><sec id="s9" sec-type="appendix"><title>Applications</title><p>All applications described below are available on Github at <ext-link ext-link-type="uri" xlink:href="https://github.com/ingewortel/artistoo-supplements">https://github.com/ingewortel/artistoo-supplements</ext-link> (<xref ref-type="bibr" rid="bib26">Wortel and Textor, 2020</xref>). For easy access, interactive simulations and applications are also accessible directly via <ext-link ext-link-type="uri" xlink:href="https://ingewortel.github.io/artistoo-supplements/">https://ingewortel.github.io/artistoo-supplements/</ext-link>.</p><sec id="s9-1"><title>Application 1</title><p>An example exercise used to for teaching workshops on the CPM for beginning users. Readers are free to use this material in their own education. The file refers to an online simulation, but the same simulation is included as Interactive Simulation 7 in Appendix 1.</p></sec><sec id="s9-2"><title>Application 2</title><p>An example slideshow containing a live Artistoo simulation. The slides were built using the revealjs framework (<xref ref-type="bibr" rid="bib9">Hattab and Contributors, 2020</xref>), which allows users to build slidesets in HTML.</p></sec><sec id="s9-3"><title>Application 3</title><p>A website accompanying a conference poster, which can be shared via a QR code on the poster itself. Please visit <ext-link ext-link-type="uri" xlink:href="https://computational-immunology.org/inge/poster-cpmjs/">https://computational-immunology.org/inge/poster-cpmjs/</ext-link> to view this example.</p></sec><sec id="s9-4"><title>Application 4</title><p>Two examples of how to use the Node.js version of Artistoo to export numeric outputs and images and to process these for downstream analysis using other programs. Both are available from our Github repository at <ext-link ext-link-type="uri" xlink:href="https://github.com/ingewortel/artistoo-supplements">https://github.com/ingewortel/artistoo-supplements</ext-link> (<xref ref-type="bibr" rid="bib26">Wortel and Textor, 2020</xref>), see <ext-link ext-link-type="uri" xlink:href="https://github.com/ingewortel/artistoo-supplements/tree/master/applications">https://github.com/ingewortel/artistoo-supplements/tree/master/applications</ext-link> for usage instructions. The ‘analysing-data/’ folder contains a simulation of diffusion (so not a CPM); to show its numerical accuracy, the downstream analysis in R compares simulation output to an analytical solution. The ‘making-movies/’ folder contains a simulation of a migrating cell and shows how to make an animated movie of the produced images. Numerical outputs are also stored and used in a downstream R script to produce a cell track and a mean squared displacement curve.</p></sec></sec></boxed-text></app></app-group></back><sub-article article-type="decision-letter" id="sa1"><front-stub><article-id pub-id-type="doi">10.7554/eLife.61288.sa1</article-id><title-group><article-title>Decision letter</article-title></title-group><contrib-group><contrib contrib-type="editor"><name><surname>Buttenschoen</surname><given-names>Andreas</given-names></name><role>Reviewing Editor</role><aff><institution>University of British Columbia</institution><country>Canada</country></aff></contrib></contrib-group><contrib-group><contrib contrib-type="reviewer"><name><surname>Macklin</surname><given-names>Paul</given-names> </name><role>Reviewer</role><aff><institution>Indiana University</institution><country>United States</country></aff></contrib></contrib-group></front-stub><body><boxed-text><p>In the interests of transparency, eLife publishes the most substantive revision requests and the accompanying author responses.</p></boxed-text><p><bold>Acceptance summary:</bold></p><p>This well written paper presents Artistoo, a software package allowing tissue simulations using the Cellular Potts framework, that fills an interesting niche: interactive, real-time simulations of complex multicellular systems that can run in a web browser, without any need for users to install or configure software. This enables new modes of education, science communication, research and multidisciplinary collaboration. This fully open-source software is impressive, and the supplied examples and tutorials are clean and beautifully fluid. The work should be of considerable interest to the <italic>eLife</italic> readership, particularly computational biologists and educators. The addition of markup language support both Morpheus to Artistoo and vice versa is fantastic. This will undoubtedly increase the adoption of Artistoo by the community. This is to my knowledge the first example of standardization across open-source CPM software packages.</p><p><bold>Decision letter after peer review:</bold></p><p>Thank you for submitting your article &quot;Artistoo: build, share, and explore simulations of cells and tissues in the web browser&quot; for consideration by <italic>eLife</italic>. Your article has been reviewed by 2 peer reviewers, one of whom is a member of our Board of Reviewing Editors, and the evaluation has been overseen by Aleksandra Walczak as the Senior Editor. The following individual involved in review of your submission has agreed to reveal their identity: Paul Macklin (Reviewer #2).</p><p>The reviewers have discussed the reviews with one another and the Reviewing Editor has drafted this decision to help you prepare a revised submission.</p><p>We would like to draw your attention to changes in our policy on revisions we have made in response to COVID-19 (https://elifesciences.org/articles/57162). Specifically, when editors judge that a submitted work as a whole belongs in <italic>eLife</italic> but that some conclusions require a modest amount of additional new data, as they do with your paper, we are asking that the manuscript be revised to either limit claims to those supported by data in hand, or to explicitly state that the relevant conclusions require additional supporting data.</p><p>Our expectation is that the authors will eventually carry out the additional experiments and report on how they affect the relevant conclusions either in a preprint on bioRxiv or medRxiv, or if appropriate, as a Research Advance in <italic>eLife</italic>, either of which would be linked to the original paper.</p><p>Summary:</p><p>This is a well written paper that presents a software allowing tissue modelling using the Cellular Potts framework filling an interesting niche: interactive, real-time simulations of complex multicellular systems that can run in a web browser, without any need for users to install or configure software. As the authors describe, this enables new modes of education, science communication, and multidisciplinary collaboration. The software itself is impressive, and the supplied examples are clean and beautifully fluid. It is eye-opening that Javascript can run these models so well. The authors also did a fantastic and complete job in sharing their full source code, from the overall software down to individual scripts used to generate figures. The work should be of considerable interest to the <italic>eLife</italic> readership, particularly computational biologists and educators.</p><p>Essential revisions:</p><p>1. Suitability of the software for researchers:</p><p>a. Artistoo simulations do not appear to have any method to save data for external manipulation and archival. This makes their use somewhat less applicable to robust simulation-driven investigations, particularly where postprocessing and further analyses are required.</p><p>b. It is unclear if Artistoo-based models can be exported into other cellular Potts (CP) frameworks such as CC3D or Morpheus. This may leave researcher end users without a clear &quot;upgrade path&quot; after exploring model ideas in Artistoo and moving to larger simulations (e.g., larger or more complex domains), running simulations in high throughput on HPC resources, or adapting approximate Bayesian techniques for parameter estimation that require automating many simulation runs. Without an upgrade path, such users may wish to immediately begin in research-focused platforms rather than start with Artistoo and re-implement in another framework later.</p><p>c. Similarly, it is unclear if a model developed in Morpheus or CC3D can be directly imported into Artistoo. If such an import were possible rather than re-implementing models in Artistoo, research-focused users would be more likely to use Artistoo for scientific communication and outreach.</p><p>d. It would be fantastic if Artistoo would support the same markup language as Morpheus, allowing non-expert users to assemble complex models without writing a single line of code. If Artistoo would support the Morpheus ML, this would make all existing ``Morpheus models' also ``Artistoo models', meaning that Artistoo would become the standard for sharing CPM models with collaborators. Finally, adopting a common markup language between projects would be the first example of standardization across open-source CPM software packages.</p><p>2. Need for improved educational scaffolding:</p><p>The examples provided in the paper are excellent. However, they lack context on what the parameters mean or do. (For example, what are max<sub>act</sub> and λ<sub>act</sub> in the cell migration model?) This may limit the educational impact because users will be unclear on what to change, and how the parameters relate to cell biophysical processes.</p><p>The authors should include more background information with each model, define parameters, and give end users some idea of what to expect when parameters are changed. We have also found it useful to help guide a new user's exploration of a model by suggesting parameter sets and describing what they should see. This can serve as an educational scaffolding to help learners build and grow.</p><p>The authors' sample models should serve as a template to Artistoo users on best practices for communicating models to diverse audiences.</p><p>3. New developments in online cellular Potts simulators:</p><p>The authors should note that CompuCell3D has recently been ported to run interactively online in a web browser. See https://nanohub.org/resources/compucell3d. This recent development should be addressed in the paper.</p><p>4. Narrow review of interactive, &quot;zero install&quot; simulation frameworks:</p><p>The authors focus too narrowly by only comparing Artistoo with other cellular Potts frameworks, while the main use case for Artistoo is for interactively sharing and communicating complex simulation models online.</p><p>The authors should discuss non-CP frameworks that worked towards this, such as CC3D on nanoHUB (see above), online Tellurium (https://nanohub.org/resources/tellurium), current practice to share R models online as Shiny apps, and recent work to use xml2jupyter to automatically convert research-focused (command line) PhysiCell models to interactive Jupyter notebooks that can be shared as interactive webapps on nanoHUB (e.g., https://nanohub.org/tools/pc4cancerimmune). All of these serve similar purposes of creating zero-install, interactive versions of models for science education and communication. The authors should briefly discuss these to further contextualize their work.</p><p>5. While this is a more minor point, I would feel more comfortable if the supplementary information had convergence and accuracy testing. Are there limits on computational step sizes for numerically accurate simulations, particularly for large energies or when including diffusion processes?</p></body></sub-article><sub-article article-type="reply" id="sa2"><front-stub><article-id pub-id-type="doi">10.7554/eLife.61288.sa2</article-id><title-group><article-title>Author response</article-title></title-group></front-stub><body><disp-quote content-type="editor-comment"><p>Essential revisions:</p><p>1. Suitability of the software for researchers:</p><p>a. Artistoo simulations do not appear to have any method to save data for external manipulation and archival. This makes their use somewhat less applicable to robust simulation-driven investigations, particularly where postprocessing and further analyses are required.</p></disp-quote><p>We agree that the submitted manuscript did not explain well how Artistoo can be used by researchers. Artistoo simulations can not only be run in the web browser, but also in the command line using the Node.js JavaScript interpreter. Within Node.js, there are a huge amount of standard library functions and third-party packages (via the npm package manager) available that can be used to store data in a variety of different formats for further postprocessing. This is the recommended mode of operation for simulation-driven investigations, and we ourselves are regularly using Artistoo for complex simulation studies in our own work. To make this more clear, we have made the following changes:</p><p>– The manuscript now mentions this point explicitly in the section ”research and collaboration” (lines 203-207 on p6)</p><p>– Two examples have been added to the Supplementary Materials (Appendix 2, new Application S4) that show how to use Artistoo from Node.js to store data for further processing. In the Diffusion example, textual information is stored for further analysis in R. In the other example of a simulated migrating cell, PNG images are exported from Artistoo and further processed into a movie.</p><p>– We have added a citation to the manuscript (line 229 p7, Wortel et al. 2020) where we used Artistoo to perform thousands of simulations of migrating cells different 2D and 3D environments. Full source code for that work will soon be available at <ext-link ext-link-type="uri" xlink:href="https://github.com/ingewortel/2020-ucsp">https://github.com/ingewortel/2020-ucsp</ext-link>.</p><disp-quote content-type="editor-comment"><p>b. It is unclear if Artistoo-based models can be exported into other cellular Potts (CP) frameworks such as CC3D or Morpheus. This may leave researcher end users without a clear &quot;upgrade path&quot; after exploring model ideas in Artistoo and moving to larger simulations (e.g., larger or more complex domains), running simulations in high throughput on HPC resources, or adapting approximate Bayeseian techniques for parameter estimation that require automating many simulation runs. Without an upgrade path, such users may wish to immediately begin in research-focused platforms rather than start with Artistoo and re-implement in another framework later.</p></disp-quote><p>It is indeed important that users are aware of the existing upgrade paths so they can make an informed choice before they begin working with our framework. To address this point, we made the following changes:</p><p>– As described in point 1a, the manuscript now places more emphasis on the fact that users can easily port simulations from the web browser to the Node.js platform; this allows users to automate simulations, perform many simulations in parallel, perform parameter screens, export data in various formats etc.</p><p>– We have developed a conversion tool that exports Artistoo models to the Morpheus XML syntax. While such a conversion is not straightforward given that there are some Artistoo features do not have Morpheus equivalents, our first prototype can already convert many simulations completely (e.g. several of the examples provided on artistoo.net/examples.html), and it tries to produce at least a reasonable approximation in many other cases. The tool will also log any changes made in the process and offers suggestions where additional manual tuning may be required. This tool is available on <ext-link ext-link-type="uri" xlink:href="https://artistoo.net/converter.html">https://artistoo.net/converter.html</ext-link>, and is described in a new manuscript section “Portability” (lines 153-161 on p5)</p><disp-quote content-type="editor-comment"><p>c. Similarly, it is unclear if a model developed in Morpheus or CC3D can be directly imported into Artistoo. If such an import were possible rather than re-implementing models in Artistoo, research-focused users would be more likely to use Artistoo for scientific communication and outreach.</p></disp-quote><p>The reverse conversion from Morpheus XML to Artistoo is also covered by the new tool mentioned in point 1b; please see the response to 1b above. Generally, full conversion from Morpheus XML to Artistoo will only be feasible once our framework implements all features that are also supported by Morpheus, but our prototype can already convert some of the examples that are shipped with Morpheus and provides a good starting point for futher development.</p><disp-quote content-type="editor-comment"><p>d. It would be fantastic if Artistoo would support the same markup language as Morpheus, allowing non-expert users to assemble complex models without writing a single line of code. If Artistoo would support the Morpheus ML, this would make all existing ``Morpheus models' also ``Artistoo models', meaning that Artistoo would become the standard for sharing CPM models with collaborators. Finally, adopting a common markup language between projects would be the first example of standardization across open-source CPM software packages.</p></disp-quote><p>The online tool assists in translating Artistoo models into the Morpheus markup language and vice versa; please see the responses to 1b and 1c above.</p><disp-quote content-type="editor-comment"><p>2. Need for improved educational scaffolding:</p><p>The examples provided in the paper are excellent. However, they lack context on what the parameters mean or do. (For example, what are max<sub>act</sub> and λ<sub>act</sub> in the cell migration model?) This may limit the educational impact because users will be unclear on what to change, and how the parameters relate to cell biophysical processes.</p><p>The authors should include more background information with each model, define parameters, and give end users some idea of what to expect when parameters are changed. We have also found it useful to help guide a new user's exploration of a model by suggesting parameter sets and describing what they should see. This can serve as an educational scaffolding to help learners build and grow.</p><p>The authors' sample models should serve as a template to Artistoo users on best practices for communicating models to diverse audiences.</p></disp-quote><p>We agree with the reviewers that in the examples included with the manuscript, we missed the opportunity to showcase the full potential of an interactive model. We have therefore added the suggested context to the interactive simulations provided in the Supplementary Materials (Appendix 1 and see <ext-link ext-link-type="uri" xlink:href="https://ingewortel.github.io/artistoo-supplements/">https://ingewortel.github.io/artistoo-supplements/</ext-link> ), transforming them from standalone simulations to full ”explorables”. These explorables, beyond showing how to use the technology, now also serve as an example of how to communicate models to diverse audiences. They will soon also be made available on <ext-link ext-link-type="uri" xlink:href="https://artistoo.net">https://artistoo.net</ext-link> and may be used freely as a teaching resource.</p><disp-quote content-type="editor-comment"><p>3. New developments in online cellular Potts simulators:</p><p>The authors should note that CompuCell3D has recently been ported to run interactively online in a web browser. See https://nanohub.org/resources/compucell3d. This recent development should be addressed in the paper.</p></disp-quote><p>We thank the reviewers for bringing this to our attention and have now mentioned this in the manuscript discussion (lines 213-215 on p6).</p><disp-quote content-type="editor-comment"><p>4. Narrow review of interactive, &quot;zero install&quot; simulation frameworks:</p><p>The authors focus too narrowly by only comparing Artistoo with other cellular Potts frameworks, while the main use case for Artistoo is for interactively sharing and communicating complex simulation models online.</p><p>The authors should discuss non-CP frameworks that worked towards this, such as CC3D on nanoHUB (see above), online Tellurium (https://nanohub.org/resources/tellurium), current practice to share R models online as Shiny apps, and recent work to use xml2jupyter to automatically convert research-focused (command line) PhysiCell models to interactive Jupyter notebooks that can be shared as interactive webapps on nanoHUB (e.g., https://nanohub.org/tools/pc4cancerimmune). All of these serve similar purposes of creating zero-install, interactive versions of models for science education and communication. The authors should briefly discuss these to further contextualize their work.</p></disp-quote><p>The manuscript discussion now contains a more extensive review of sharing interactive models online (lines 213-223 on p6).</p><disp-quote content-type="editor-comment"><p>5. While this is a more minor point, I would feel more comfortable if the supplementary information had convergence and accuracy testing. Are there limits on computational step sizes for numerically accurate simulations, particularly for large energies or when including diffusion processes?</p></disp-quote><p>While numerical solution of continuous equation systems is not the main focus of Artistoo, it can be used to implement simple step-wise forward numerical solution schemes, if needed; it will then need to obey the same limits on step size and spatial resolution as other implementations of the same schemes. To illustrate this point, we have added a new example to the Supplementary Material (Appendix 2, Applicaton S4, accessible via <ext-link ext-link-type="uri" xlink:href="https://github.com/ingewortel/artistoo-supplements/tree/master/applications">https://github.com/ingewortel/artistoo-supplements/tree/master/applications</ext-link>, S4 &gt; “analysing-data”); there, we use Artistoo to solve a diffusion equation that has an analytical solution, and verify that the solution obtained by our simulation closely matches the analytical solution as long as the standard <ext-link ext-link-type="uri" xlink:href="https://en.wikipedia.org/wiki/Courant%E2%80%93Friedrichs%E2%80%93Lewy_condition">Courant-Friedrichs-Lewy stability condition</ext-link> is fulfilled and the grid is not too coarse. This example simultaneously also illustrates how one can export data from Artistoo simulations for downstream statistical analysis (point 1a)</p></body></sub-article></article>