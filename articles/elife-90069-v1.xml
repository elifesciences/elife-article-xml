<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE article PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Archiving and Interchange DTD with MathML3 v1.3 20210610//EN"  "JATS-archivearticle1-3-mathml3.dtd"><article xmlns:ali="http://www.niso.org/schemas/ali/1.0/" xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" article-type="research-article" dtd-version="1.3"><front><journal-meta><journal-id journal-id-type="nlm-ta">elife</journal-id><journal-id journal-id-type="publisher-id">eLife</journal-id><journal-title-group><journal-title>eLife</journal-title></journal-title-group><issn publication-format="electronic" pub-type="epub">2050-084X</issn><publisher><publisher-name>eLife Sciences Publications, Ltd</publisher-name></publisher></journal-meta><article-meta><article-id pub-id-type="publisher-id">90069</article-id><article-id pub-id-type="doi">10.7554/eLife.90069</article-id><article-id pub-id-type="doi" specific-use="version">10.7554/eLife.90069.3</article-id><article-categories><subj-group subj-group-type="display-channel"><subject>Research Article</subject></subj-group><subj-group subj-group-type="heading"><subject>Neuroscience</subject></subj-group></article-categories><title-group><article-title>Representational drift as a result of implicit regularization</article-title></title-group><contrib-group><contrib contrib-type="author" corresp="yes" id="author-322766"><name><surname>Ratzon</surname><given-names>Aviv</given-names></name><contrib-id authenticated="true" contrib-id-type="orcid">https://orcid.org/0009-0000-7648-9744</contrib-id><email>aviv.ratzon@hotmail.com</email><xref ref-type="aff" rid="aff1">1</xref><xref ref-type="aff" rid="aff2">2</xref><xref ref-type="fn" rid="con1"/><xref ref-type="fn" rid="conf1"/></contrib><contrib contrib-type="author" id="author-34799"><name><surname>Derdikman</surname><given-names>Dori</given-names></name><contrib-id authenticated="true" contrib-id-type="orcid">https://orcid.org/0000-0003-3677-6321</contrib-id><xref ref-type="aff" rid="aff1">1</xref><xref ref-type="other" rid="fund1"/><xref ref-type="other" rid="fund3"/><xref ref-type="other" rid="fund4"/><xref ref-type="other" rid="fund6"/><xref ref-type="other" rid="fund7"/><xref ref-type="other" rid="fund8"/><xref ref-type="other" rid="fund9"/><xref ref-type="fn" rid="con2"/><xref ref-type="fn" rid="conf1"/></contrib><contrib contrib-type="author" id="author-18752"><name><surname>Barak</surname><given-names>Omri</given-names></name><contrib-id authenticated="true" contrib-id-type="orcid">https://orcid.org/0000-0002-7894-6344</contrib-id><xref ref-type="aff" rid="aff1">1</xref><xref ref-type="aff" rid="aff2">2</xref><xref ref-type="other" rid="fund2"/><xref ref-type="other" rid="fund5"/><xref ref-type="other" rid="fund7"/><xref ref-type="fn" rid="con3"/><xref ref-type="fn" rid="conf1"/></contrib><aff id="aff1"><label>1</label><institution-wrap><institution-id institution-id-type="ror">https://ror.org/03qryx823</institution-id><institution>Rappaport Faculty of Medicine, Technion - Israel Institute of Technology</institution></institution-wrap><addr-line><named-content content-type="city">Haifa</named-content></addr-line><country>Israel</country></aff><aff id="aff2"><label>2</label><institution-wrap><institution-id institution-id-type="ror">https://ror.org/03qryx823</institution-id><institution>Network Biology Research Laboratory, Technion - Israel Institute of Technology</institution></institution-wrap><addr-line><named-content content-type="city">Haifa</named-content></addr-line><country>Israel</country></aff></contrib-group><contrib-group content-type="section"><contrib contrib-type="editor"><name><surname>Peyrache</surname><given-names>Adrien</given-names></name><role>Reviewing Editor</role><aff><institution-wrap><institution-id institution-id-type="ror">https://ror.org/01pxwe438</institution-id><institution>McGill University</institution></institution-wrap><country>Canada</country></aff></contrib><contrib contrib-type="senior_editor"><name><surname>Colgin</surname><given-names>Laura L</given-names></name><role>Senior Editor</role><aff><institution-wrap><institution-id institution-id-type="ror">https://ror.org/00hj54h04</institution-id><institution>University of Texas at Austin</institution></institution-wrap><country>United States</country></aff></contrib></contrib-group><pub-date publication-format="electronic" date-type="publication"><day>02</day><month>05</month><year>2024</year></pub-date><volume>12</volume><elocation-id>RP90069</elocation-id><history><date date-type="sent-for-review" iso-8601-date="2023-06-20"><day>20</day><month>06</month><year>2023</year></date></history><pub-history><event><event-desc>This manuscript was published as a preprint.</event-desc><date date-type="preprint" iso-8601-date="2023-05-09"><day>09</day><month>05</month><year>2023</year></date><self-uri content-type="preprint" xlink:href="https://doi.org/10.1101/2023.05.04.539512"/></event><event><event-desc>This manuscript was published as a reviewed preprint.</event-desc><date date-type="reviewed-preprint" iso-8601-date="2023-10-10"><day>10</day><month>10</month><year>2023</year></date><self-uri content-type="reviewed-preprint" xlink:href="https://doi.org/10.7554/eLife.90069.1"/></event><event><event-desc>The reviewed preprint was revised.</event-desc><date date-type="reviewed-preprint" iso-8601-date="2024-04-11"><day>11</day><month>04</month><year>2024</year></date><self-uri content-type="reviewed-preprint" xlink:href="https://doi.org/10.7554/eLife.90069.2"/></event></pub-history><permissions><copyright-statement>Â© 2023, Ratzon et al</copyright-statement><copyright-year>2023</copyright-year><copyright-holder>Ratzon et al</copyright-holder><ali:free_to_read/><license xlink:href="http://creativecommons.org/licenses/by/4.0/"><ali:license_ref>http://creativecommons.org/licenses/by/4.0/</ali:license_ref><license-p>This article is distributed under the terms of the <ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/licenses/by/4.0/">Creative Commons Attribution License</ext-link>, which permits unrestricted use and redistribution provided that the original author and source are credited.</license-p></license></permissions><self-uri content-type="pdf" xlink:href="elife-90069-v1.pdf"/><self-uri content-type="figures-pdf" xlink:href="elife-90069-figures-v1.pdf"/><abstract><p>Recent studies show that, even in constant environments, the tuning of single neurons changes over time in a variety of brain regions. This representational drift has been suggested to be a consequence of continuous learning under noise, but its properties are still not fully understood. To investigate the underlying mechanism, we trained an artificial network on a simplified navigational task. The network quickly reached a state of high performance, and many units exhibited spatial tuning. We then continued training the network and noticed that the activity became sparser with time. Initial learning was orders of magnitude faster than ensuing sparsification. This sparsification is consistent with recent results in machine learning, in which networks slowly move within their solution space until they reach a flat area of the loss function. We analyzed four datasets from different labs, all demonstrating that CA1 neurons become sparser and more spatially informative with exposure to the same environment. We conclude that learning is divided into three overlapping phases: (i) Fast familiarity with the environment; (ii) slow implicit regularization; and (iii) a steady state of null drift. The variability in drift dynamics opens the possibility of inferring learning algorithms from observations of drift statistics.</p></abstract><kwd-group kwd-group-type="author-keywords"><kwd>theoretical neuroscience</kwd><kwd>artificial neural network</kwd><kwd>representational drift</kwd><kwd>CA1</kwd><kwd>noise</kwd><kwd>regularization</kwd></kwd-group><kwd-group kwd-group-type="research-organism"><title>Research organism</title><kwd>Mouse</kwd></kwd-group><funding-group><award-group id="fund1"><funding-source><institution-wrap><institution-id institution-id-type="FundRef">http://dx.doi.org/10.13039/501100003977</institution-id><institution>Israel Science Foundation</institution></institution-wrap></funding-source><award-id>grants Nos. 2655/19</award-id><principal-award-recipient><name><surname>Derdikman</surname><given-names>Dori</given-names></name></principal-award-recipient></award-group><award-group id="fund2"><funding-source><institution-wrap><institution-id institution-id-type="FundRef">http://dx.doi.org/10.13039/501100003977</institution-id><institution>Israel Science Foundation</institution></institution-wrap></funding-source><award-id>grants Nos. 1442/21</award-id><principal-award-recipient><name><surname>Barak</surname><given-names>Omri</given-names></name></principal-award-recipient></award-group><award-group id="fund3"><funding-source><institution-wrap><institution-id institution-id-type="FundRef">http://dx.doi.org/10.13039/501100001736</institution-id><institution>German-Israeli Foundation for Scientific Research and Development</institution></institution-wrap></funding-source><award-id>GIF I-1477-421.13/2018</award-id><principal-award-recipient><name><surname>Derdikman</surname><given-names>Dori</given-names></name></principal-award-recipient></award-group><award-group id="fund4"><funding-source><institution-wrap><institution-id institution-id-type="FundRef">http://dx.doi.org/10.13039/501100001742</institution-id><institution>US-Israel Binational Science Foundation</institution></institution-wrap></funding-source><award-id>NIMH-BSF CRCNS BSF:2019807</award-id><principal-award-recipient><name><surname>Derdikman</surname><given-names>Dori</given-names></name></principal-award-recipient></award-group><award-group id="fund5"><funding-source><institution-wrap><institution-id institution-id-type="FundRef">http://dx.doi.org/10.13039/501100000854</institution-id><institution>Human Frontier Science Program</institution></institution-wrap></funding-source><award-id>RGP0017/2021</award-id><principal-award-recipient><name><surname>Barak</surname><given-names>Omri</given-names></name></principal-award-recipient></award-group><award-group id="fund6"><funding-source><institution-wrap><institution>Rappaport Institute Collaborative research grant</institution></institution-wrap></funding-source><principal-award-recipient><name><surname>Derdikman</surname><given-names>Dori</given-names></name></principal-award-recipient></award-group><award-group id="fund7"><funding-source><institution-wrap><institution>Israel PBC-VATAT and by the Technion Center for Machine Learning and Intelligent Systems</institution></institution-wrap></funding-source><principal-award-recipient><name><surname>Derdikman</surname><given-names>Dori</given-names></name><name><surname>Barak</surname><given-names>Omri</given-names></name></principal-award-recipient></award-group><award-group id="fund8"><funding-source><institution-wrap><institution-id institution-id-type="FundRef">http://dx.doi.org/10.13039/501100003977</institution-id><institution>Israel Science Foundation</institution></institution-wrap></funding-source><award-id>2183/21</award-id><principal-award-recipient><name><surname>Derdikman</surname><given-names>Dori</given-names></name></principal-award-recipient></award-group><award-group id="fund9"><funding-source><institution-wrap><institution-id institution-id-type="FundRef">http://dx.doi.org/10.13039/501100001742</institution-id><institution>US-Israel Binational Science Foundation</institution></institution-wrap></funding-source><award-id>NIMH:R01 MH125544- 372 01</award-id><principal-award-recipient><name><surname>Derdikman</surname><given-names>Dori</given-names></name></principal-award-recipient></award-group><funding-statement>The funders had no role in study design, data collection and interpretation, or the decision to submit the work for publication.</funding-statement></funding-group><custom-meta-group><custom-meta specific-use="meta-only"><meta-name>Author impact statement</meta-name><meta-value>Continuous noisy learning in neural networks leads to slow, directed qualitative changes in their internal representations, without affecting their quality.</meta-value></custom-meta><custom-meta specific-use="meta-only"><meta-name>publishing-route</meta-name><meta-value>prc</meta-value></custom-meta></custom-meta-group></article-meta></front><body><sec id="s1" sec-type="intro"><title>Introduction</title><p>What do we mean when we say that the brain represents the external world? One interpretation is the existence of neurons whose activity is tuned to world variables. Such neurons have been observed in many contexts: place cells (<xref ref-type="bibr" rid="bib36">Oâkeefe and Nadel, 1979</xref>; <xref ref-type="bibr" rid="bib35">OâKeefe and Dostrovsky, 1971</xref>) â which are tuned to position in a specific context, visual cells (<xref ref-type="bibr" rid="bib13">Hubel and Wiesel, 1962</xref>) â which are tuned to specific visual cues, neurons that are tuned to the execution of actions (<xref ref-type="bibr" rid="bib30">McNaughton et al., 1994</xref>) and more. This tight link between the external world and neural activity might suggest that, in the absence of environmental or behavioral changes, neural activity is constant. In contrast, recent studies show that, even in constant environments, the tuning of single neurons to outside world variables gradually changes over time in a variety of brain regions, even long after good representations of the stimuli were achieved. This phenomenon has been termed <italic>representational drift</italic>, and has changed the way we think about the stability of memory and perception, but its driving forces and properties are still unknown (<xref ref-type="bibr" rid="bib27">Mankin et al., 2012</xref>; <xref ref-type="bibr" rid="bib55">Ziv et al., 2013</xref>; <xref ref-type="bibr" rid="bib9">Driscoll et al., 2017</xref>; <xref ref-type="bibr" rid="bib8">Deitch et al., 2021</xref>; <xref ref-type="bibr" rid="bib48">Schoonover et al., 2021</xref>; <xref ref-type="bibr" rid="bib14">Jacobson et al., 2018</xref>) (see <xref ref-type="bibr" rid="bib24">Liberti et al., 2022</xref>; <xref ref-type="bibr" rid="bib44">Sadeh and Clopath, 2022</xref> for an alternative account).</p><p>There are at least two immediate theoretical questions arising from the observation of drift â why does it happen, and whether and how behavior is resistant to it (<xref ref-type="bibr" rid="bib43">Rule et al., 2019</xref>; <xref ref-type="bibr" rid="bib10">Driscoll et al., 2022</xref>)? One mechanistic explanation is that the underlying anatomical substrates are themselves undergoing constant change, such that drift is a direct manifestation of this structural morphing (<xref ref-type="bibr" rid="bib56">Ziv and Brenner, 2018</xref>). A normative interpretation posits that drift is a solution to a computational demand, such as temporal encoding (<xref ref-type="bibr" rid="bib42">Rubin et al., 2015</xref>), âdrop-outâ regularization (<xref ref-type="bibr" rid="bib1">Aitken et al., 2022</xref>), exploration of the solution space (<xref ref-type="bibr" rid="bib17">Kappel et al., 2015</xref>), or re-encoding during continual learning (<xref ref-type="bibr" rid="bib43">Rule et al., 2019</xref>). Several studies also address the resistance question, providing possible explanations on how behavior can be robust to such phenomena (<xref ref-type="bibr" rid="bib41">Rokni et al., 2007</xref>; <xref ref-type="bibr" rid="bib52">Susman et al., 2019</xref>; <xref ref-type="bibr" rid="bib31">Mongillo et al., 2017</xref>; <xref ref-type="bibr" rid="bib22">Kossio et al., 2021</xref>).</p><p>Here, we focus on the mechanistic question, and leverage analyses of drift statistics for this purpose. Specifically, recent studies suggest that representational drift in the CA1 is driven by active experience (<xref ref-type="bibr" rid="bib20">Khatib et al., 2023</xref>; <xref ref-type="bibr" rid="bib11">Geva et al., 2023</xref>). Namely, rate maps decorrelate more when mice are active for a longer time in a given context. This implies that drift is not just a passive process, but rather an active learning one. As drift seems to occur after an adequate representation has formed, it seems fitting to model it as a form of a continuous learning process.</p><p>This approach has been recently explored by <xref ref-type="bibr" rid="bib38">Qin et al., 2023</xref>; <xref ref-type="bibr" rid="bib37">Pashakhanloo and Koulakov, 2023</xref>. They considered continuous learning in noisy, overparameterized neural networks. Because the system is overparameterized, a manifold of zero-loss solutions exists. (<xref ref-type="bibr" rid="bib38">Qin et al., 2023</xref>) showed that for feedforward neural networks (FNNs) trained using Hebbian learning with added parameter noise, units change their tuning over time. This was due to an <italic>undirected</italic> random walk within the manifold of solutions. The coordinated drift of neighboring place fields was used as evidence to support this view. The phenomenon of undirected motion within the space of solutions seems plausible, as all members of this space achieve equally good performance (<xref ref-type="fig" rid="fig1">Figure 1A</xref> left). However, there may be other properties of the solutions (<xref ref-type="fig" rid="fig1">Figure 1B</xref>) that vary along this manifold, which could potentially bias drift in a certain direction (<xref ref-type="fig" rid="fig1">Figure 1A</xref> right). It is likely that the drift observed in experiments is a combination of both an undirected and directed movement. We will now introduce theoretical results from machine learning that support the possibility of directed drift.</p><fig id="fig1" position="float"><label>Figure 1.</label><caption><title>Two types of possible movements within the solution space.</title><p>(<bold>A</bold>) Two options of how drift may look in the solution space. Random walk within the space of equally good solutions that is either undirected (left) or directed (right). (<bold>B</bold>) The qualitative consequence of the two movement types. For an undirected random walk, all properties of the solution will remain roughly constant (left). For the directed movement there should be a given property that is gradually increasing or decreasing (right).</p></caption><graphic mimetype="image" mime-subtype="tiff" xlink:href="elife-90069-fig1-v1.tif"/></fig><p>Recent work provided a tractable analytical framework for the learning dynamics of Stochastic Gradient Descent (SGD) with added noise and an overparameterized regime (<xref ref-type="bibr" rid="bib4">Blanc et al., 2020</xref>; <xref ref-type="bibr" rid="bib23">Li et al., 2021</xref>; <xref ref-type="bibr" rid="bib54">Yang et al., 2023</xref>). These studies showed that, after the network has converged to the zero-loss manifold, a second-order effect biases the random walk along a specific direction within this manifold. This direction reduces an implicit regularizer, determined by the type of noise the network is exposed to. The regularizer is related to the Hessian of the loss â a measure of the flatness of the loss landscape in the vicinity of the solutions. Since this directed movement is a second-order effect, its timescale is orders of magnitude larger than that of the initial convergence.</p><p>Consider a biological neural network performing a task. The machine learning (ML) implicit regularization mentioned above requires three components: an overparameterized regime, noise, and SGD. Both biological and artificial networks possess a large number of synapses, or parameters, and hence can reasonably be expected to be overparameterized. Noise can emerge from the external environment or from internal biological elements. It is not reasonable to assume that a precise form of gradient descent is implemented in the brain (<xref ref-type="bibr" rid="bib3">Bengio et al., 2015</xref>), thereby casting doubt on the third element. Nevertheless, biologically plausible rules could be considered as noisy versions of gradient descent, as long as there is a coherent improvement in performance (<xref ref-type="bibr" rid="bib25">Liu et al., 2022</xref>; <xref ref-type="bibr" rid="bib29">Marschall et al., 2020</xref>). Motivated by this analogy, we explore representational drift in models and experimental data.</p><p>Because drift is commonly observed in spatially-selective cells, we base our analysis on a model which has been shown to contain such cells (<xref ref-type="bibr" rid="bib39">Recanatesi et al., 2021</xref>). Specifically, we trained artificial neural networks on a predictive coding task in the presence of noise. In this task, an agent moves along a linear track while receiving visual input from the walls, such that the goal is to predict the subsequent input. We observed that hidden layer units became tuned to the latent variable, which is position, in accordance with previous results (<xref ref-type="bibr" rid="bib39">Recanatesi et al., 2021</xref>). We continued training and found that in addition to the gradual change of tuning curves, similar to <xref ref-type="bibr" rid="bib38">Qin et al., 2023</xref>, we witnessed that the fraction of active units decreased slowly while their tuning specificity increased. We show that these results align with experimental observations from the CA1 area - namely that when exposed to a novel environment, the number of active cells reduces while their tuning specificity increases long after the environment is already familiar. Finally, we demonstrated the connection between this sparsificiation effect and changes to the Hessian, in accordance with ML theory. That is, changes in activity statistics (sparseness) and representations (drift) are the signatures of the movement in solution space to a flatter area, until flatness saturates. We conclude that learning is divided into three overlapping phases: (i) Fast familiarity with the environment in which representations form; (ii) slow implicit regularization which can be recognized by changes in activity statistics; and (iii) a steady state of null drift in which representations gradually change.</p></sec><sec id="s2" sec-type="results"><title>Results</title><sec id="s2-1"><title>Spontaneous sparsification in a predictive coding network</title><p>To model representational drift in the CA1 area, we chose a simple model that could give rise to spatially-tuned cells (<xref ref-type="bibr" rid="bib39">Recanatesi et al., 2021</xref>). In this model, an agent traverses a corridor while slightly modulating its angle with respect to the main axis (<xref ref-type="fig" rid="fig2">Figure 2A</xref>). The walls are textured by a fixed smooth noisy signal, and the agent receives this as input according to its current field of view. The model itself is a single hidden layer feedforward network, with the velocity and visual field as inputs. The desired output is the predicted visual input in the next time step. The model equations are given by:<disp-formula id="equ1"><label>(1)</label><mml:math id="m1"><mml:mrow><mml:msub><mml:mrow><mml:mover><mml:mrow><mml:mi>y</mml:mi></mml:mrow><mml:mo stretchy="false">^</mml:mo></mml:mover></mml:mrow><mml:mi>t</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mi>Ï</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mi>t</mml:mi></mml:mrow></mml:msub><mml:msup><mml:mrow><mml:mi mathvariant="bold">m</mml:mi></mml:mrow><mml:mrow><mml:mi>T</mml:mi></mml:mrow></mml:msup><mml:mo>+</mml:mo><mml:mrow><mml:mi mathvariant="bold">b</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo><mml:msup><mml:mrow><mml:mi mathvariant="bold">n</mml:mi></mml:mrow><mml:mrow><mml:mi>T</mml:mi></mml:mrow></mml:msup><mml:mo>,</mml:mo></mml:mrow></mml:math></disp-formula><disp-formula id="equ2"><label>(2)</label><mml:math id="m2"><mml:mrow><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mi>Ï</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>x</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mi>m</mml:mi><mml:mi>a</mml:mi><mml:mi>x</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mn>0</mml:mn><mml:mo>,</mml:mo><mml:mi>x</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>,</mml:mo></mml:mstyle></mml:mrow></mml:math></disp-formula></p><fig id="fig2" position="float"><label>Figure 2.</label><caption><title>Continuous noisy learning leads to drift and spontaneous sparsification.</title><p>(<bold>A</bold>) Illustration of an agent in a corridor receiving high-dimensional visual input from the walls. (<bold>B</bold>) Loss as a function of training steps (log scale). Zero loss corresponds to a mean estimator. Note the rapid drop in loss at the beginning, after which it remains roughly constant. (<bold>C</bold>) Mean spatial information (SI, blue) and fraction of units with non-zero activation for at least one input (red) as a function of training steps. (<bold>D</bold>) Rate maps sampled at four different time points (columns). Maps in each row are sorted according to a different time point. Sorting is done based on the peak tuning value to the latent variable. (<bold>E</bold>) Correlation of rate maps between different time points along training. Only active units are used.</p></caption><graphic mimetype="image" mime-subtype="tiff" xlink:href="elife-90069-fig2-v1.tif"/></fig><p>where <inline-formula><mml:math id="inf1"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow class="MJX-TeXAtom-ORD"><mml:mi mathvariant="bold">m</mml:mi></mml:mrow></mml:mstyle></mml:math></inline-formula> and <inline-formula><mml:math id="inf2"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow class="MJX-TeXAtom-ORD"><mml:mi mathvariant="bold">n</mml:mi></mml:mrow></mml:mstyle></mml:math></inline-formula> are the input and output matrices, respectively, <inline-formula><mml:math id="inf3"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow class="MJX-TeXAtom-ORD"><mml:mi mathvariant="bold">b</mml:mi></mml:mrow></mml:mstyle></mml:math></inline-formula> is the bias vector, and <inline-formula><mml:math id="inf4"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mi>Ï</mml:mi></mml:mstyle></mml:math></inline-formula> is the ReLU activation function. The vector <inline-formula><mml:math id="inf5"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mi>Ï</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mrow class="MJX-TeXAtom-ORD"><mml:mi mathvariant="bold">x</mml:mi></mml:mrow><mml:mrow class="MJX-TeXAtom-ORD"><mml:mi>t</mml:mi></mml:mrow></mml:msub><mml:msup><mml:mrow class="MJX-TeXAtom-ORD"><mml:mi mathvariant="bold">m</mml:mi></mml:mrow><mml:mrow class="MJX-TeXAtom-ORD"><mml:mi>T</mml:mi></mml:mrow></mml:msup><mml:mo>+</mml:mo><mml:mrow class="MJX-TeXAtom-ORD"><mml:mi mathvariant="bold">b</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mstyle></mml:math></inline-formula> constitutes the hidden layer, and each element in it is the activation of a given unit for the input at time <inline-formula><mml:math id="inf6"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mi>t</mml:mi></mml:mstyle></mml:math></inline-formula>. The task is for the networkâs output, <inline-formula><mml:math id="inf7"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mrow><mml:mover><mml:mi mathvariant="bold">y</mml:mi><mml:mo mathvariant="bold" stretchy="false">^</mml:mo></mml:mover></mml:mrow></mml:mrow></mml:mstyle></mml:mrow></mml:mstyle></mml:math></inline-formula>, to match the visual input, <inline-formula><mml:math id="inf8"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow class="MJX-TeXAtom-ORD"><mml:mi mathvariant="bold">x</mml:mi></mml:mrow></mml:mstyle></mml:math></inline-formula> of the following time step, resulting in the following loss function:<disp-formula id="equ3"><label>(3)</label><mml:math id="m3"><mml:mrow><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mi>f</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi mathvariant="bold">m</mml:mi></mml:mrow><mml:mo>,</mml:mo><mml:mrow><mml:mi mathvariant="bold">n</mml:mi></mml:mrow><mml:mo>,</mml:mo><mml:mrow><mml:mi mathvariant="bold">b</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:msub><mml:mrow><mml:mi mathvariant="double-struck">E</mml:mi></mml:mrow><mml:mrow><mml:mi>t</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mover><mml:msub><mml:mrow><mml:mi mathvariant="bold">y</mml:mi></mml:mrow><mml:mrow><mml:mi>t</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">^</mml:mo></mml:mover></mml:mrow><mml:mo>â</mml:mo><mml:msub><mml:mrow><mml:mi mathvariant="bold">x</mml:mi></mml:mrow><mml:mrow><mml:mi>t</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:msup><mml:mo stretchy="false">)</mml:mo><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msup><mml:mo>.</mml:mo></mml:mstyle></mml:mrow></mml:math></disp-formula></p><p>We train the network using Gradient Descent (GD), while adding update noise to the learning dynamics:<disp-formula id="equ4"><label>(4)</label><mml:math id="m4"><mml:mrow><mml:mstyle displaystyle="true" scriptlevel="0"><mml:msub><mml:mrow><mml:mi>Î¸</mml:mi></mml:mrow><mml:mrow><mml:mi>Ï</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mrow><mml:mi>Î¸</mml:mi></mml:mrow><mml:mi>Ï</mml:mi></mml:msub><mml:mo>â</mml:mo><mml:mi>Î·</mml:mi><mml:mfrac><mml:mrow><mml:mi mathvariant="normal">â</mml:mi><mml:mi>f</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mrow><mml:mi>Î¸</mml:mi></mml:mrow><mml:mi>Ï</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mrow><mml:mi mathvariant="normal">â</mml:mi><mml:msub><mml:mrow><mml:mi>Î¸</mml:mi></mml:mrow><mml:mi>Ï</mml:mi></mml:msub></mml:mrow></mml:mfrac><mml:mo>+</mml:mo><mml:msubsup><mml:mrow><mml:mi>Î¾</mml:mi></mml:mrow><mml:mi>Ï</mml:mi><mml:mrow><mml:mi>u</mml:mi><mml:mi>p</mml:mi><mml:mi>d</mml:mi><mml:mi>a</mml:mi><mml:mi>t</mml:mi><mml:mi>e</mml:mi></mml:mrow></mml:msubsup><mml:mo>,</mml:mo></mml:mstyle></mml:mrow></mml:math></disp-formula></p><p>where <inline-formula><mml:math id="inf9"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mi>Î¸</mml:mi><mml:mo>=</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mrow class="MJX-TeXAtom-ORD"><mml:mi mathvariant="bold">m</mml:mi></mml:mrow><mml:mo>,</mml:mo><mml:mrow class="MJX-TeXAtom-ORD"><mml:mi mathvariant="bold">n</mml:mi></mml:mrow><mml:mo>,</mml:mo><mml:mrow class="MJX-TeXAtom-ORD"><mml:mi mathvariant="bold">b</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mstyle></mml:math></inline-formula> is the vectorized parameters-vector, <inline-formula><mml:math id="inf10"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mi>Ï</mml:mi></mml:mstyle></mml:math></inline-formula> is the current training step and <inline-formula><mml:math id="inf11"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:msubsup><mml:mi>Î¾</mml:mi><mml:mrow class="MJX-TeXAtom-ORD"><mml:mi>Ï</mml:mi></mml:mrow><mml:mrow class="MJX-TeXAtom-ORD"><mml:mi>u</mml:mi><mml:mi>p</mml:mi><mml:mi>d</mml:mi><mml:mi>a</mml:mi><mml:mi>t</mml:mi><mml:mi>e</mml:mi></mml:mrow></mml:msubsup></mml:mstyle></mml:math></inline-formula> is Gaussian noise. We let the network converge to a good solution, demonstrated by a loss plateau, and continue training for an additional period. Note that this additional period can be orders of magnitude longer than the initial training period. The network quickly converged to a low loss and stayed at the same loss during the additional training period (<xref ref-type="fig" rid="fig2">Figure 2B</xref>). Surprisingly, when looking at the activity of units within the hidden layer, we noticed that it slowly became sparse (see methods for definitions of sparseness). This sparsification did not hurt performance, because individual units became more informative (<xref ref-type="fig" rid="fig2">Figure 2C</xref>), as quantified by the average Spatial Information (SI, see methods). When looking at the rate maps of units, i.e., their tuning to position, one can observe an image similar to representational drift observed in experiments (<xref ref-type="bibr" rid="bib55">Ziv et al., 2013</xref>) â namely that neurons changed their tuning over time (<xref ref-type="fig" rid="fig2">Figure 2D</xref>). Additionally, their tuning specificity increased in accordance with the SI increase. By observing the correlation matrix of the rate maps over time, it is apparent that there was a gradual change that slowed down (<xref ref-type="fig" rid="fig2">Figure 2E</xref>). To summarize, we observed a spontaneous sparsification over a timescale much longer than the initial convergence, without introducing any explicit regularization.</p><p>At first glance, these results might seem inconsistent with the experimental descriptions of drift reported in the literature in which all metrics are stationary while only representations change (<xref ref-type="bibr" rid="bib55">Ziv et al., 2013</xref>). We suggest that there exists an intermediate phase between initial familiarity and stationary activity metrics, which is consistent with the notion of drift, that exhibits a gradual change in activity statistics. It seems that most experimental paradigms require a long pre-exposure, longer than needed to become fully familiarized with the environment, thus missing the suggested effect. We thus analyzed four datasets, from four different labs, in which we believe that the familiarization stage was shorter than in other studies. Some of the analyses were present in the original papers, and others are novel using publicly available data. Three experiments start from a novel environment and one from a relatively short pre-exposure. As shown in <xref ref-type="fig" rid="fig3">Figure 3</xref>, all datasets are consistent with our simulations - namely that the fraction of active cells reduces while the mean SI per cell increases over a long timescale. See Methods section for a full description of the data sets and analyses, along with another paper (<xref ref-type="bibr" rid="bib11">Geva et al., 2023</xref>) in which activity statistics are stationary, for comparison.</p><fig id="fig3" position="float"><label>Figure 3.</label><caption><title>Experimental data consistent with simulations.</title><p>Data from four different labs show sparsification of CA1 spatial code, along with an increase in the information of active cells. Values are normalized to the first recording session in each experiment. Error bars show standard error of the mean. (<bold>A</bold>) Fraction of place cells (slope=-0.0003 p &lt; .001) and mean spatial information (SI) (slope=0.002, p &lt; .001) per animal over 200 min (<xref ref-type="bibr" rid="bib20">Khatib et al., 2023</xref>). (<bold>B</bold>) Number of cells per animal (slope=-0.052, p = .004) and mean SI (slope=0.094, p &lt; .001) over all cells pooled together over 10 days. Note that we calculated the number of active cells rather than fraction of place cells because of the nature of the available data (<xref ref-type="bibr" rid="bib16">Jercog et al., 2019b</xref>). (<bold>C</bold>) Fraction of place cells (slope=-0.048, p = .011) and mean SI per animal (slope=0.054, p &lt; .001) over 11 days (<xref ref-type="bibr" rid="bib18">Karlsson and Frank, 2008</xref>). (<bold>D</bold>) Fraction of place cells (slope=-0.026, p &lt; .001) and mean SI (slope=0.068, p &lt; .001) per animal over 8 days (<xref ref-type="bibr" rid="bib51">Sheintuch et al., 2023</xref>).</p></caption><graphic mimetype="image" mime-subtype="tiff" xlink:href="elife-90069-fig3-v1.tif"/></fig></sec><sec id="s2-2"><title>Generality of the phenomenon</title><p>The theoretical considerations (<xref ref-type="bibr" rid="bib4">Blanc et al., 2020</xref>; <xref ref-type="bibr" rid="bib23">Li et al., 2021</xref>), simulation results, and experimental results from multiple labs all suggest very general and robust phenomena.</p><p>To explore the sensitivity of our results to specific modeling choices, we systematically varied many of them. Specifically, we replaced tasks (see below) and simulated different activation functions. Perhaps most important, we varied the learning rules, as SGD is not a biologically plausible one. We used both Adam (<xref ref-type="bibr" rid="bib21">Kingma and Ba, 2014</xref>) and RMSprop (<xref ref-type="bibr" rid="bib12">Hinton et al., 2012</xref>), from the ML literature. We also used Stochastic Error-Descent (SED) (<xref ref-type="bibr" rid="bib6">Cauwenberghs, 1992</xref>), which does not require gradient calculation and is more biologically plausible (6). For SGD, we also ran simulations with label noise instead of update noise. Finally, we replaced the task with either a simplified predictive coding, random mappings, or smoothed random mapping. The motivation for different tasks is twofold. First, there is some arbitrariness in the predictive task we chose. Second, the interpretation of drift as a result of continuous learning in the presence of noise, suggests that this effect goes beyond the specific phenomenon of place cells. That is, drift within the solution space should occur in every type of task and scenario, and could be identified outside the scope of spatial representations. All 1151 simulations, except a negligible few, demonstrated an initial, fast phase of convergence to low loss, followed by a much slower phase of directed random motion within the low-loss space.</p><p>The results of the simulations supported our main conclusion â sparsification dynamics were not sensitive to most of the parameters. For almost all of the simulations, excluding SGD with label noise, the fraction of active units gradually reduced, long after the loss converged (<xref ref-type="fig" rid="fig4">Figure 4A</xref>, <xref ref-type="fig" rid="fig4s1">Figure 4âfigure supplement 1</xref> for further breakdown). For label noise, a slow directed effect was observed but the dynamics were qualitatively different â as predicted by theory (<xref ref-type="bibr" rid="bib23">Li et al., 2021</xref>) and explained in the next section. The fraction of active units did not reduce as much, but the activity of the units did sparsify (<xref ref-type="fig" rid="fig5s1">Figure 5âfigure supplement 1</xref>). One qualitative difference observed between simulations was that the timescales could vary by orders of magnitude as a function of the noise scale (<xref ref-type="fig" rid="fig4">Figure 4B</xref> bottom, see methods for details). Additionally, apart from simulations that did not converge due to too large timescales, the final sparsity was the same for all networks with the same parameters (<xref ref-type="fig" rid="fig4">Figure 4B</xref> top), in accordance with results from <xref ref-type="bibr" rid="bib38">Qin et al., 2023</xref>. In a sense, once noise is introduced, the network is driven to maximal sparsification in a stochastic manner. For Adam, RMSprop and SED sparsification ensued in the absence of any added noise. For SED the explanation is straightforward, as the parameter updates are driven by noise. For Adam and RMSprop, we suggest that in the vicinity of the zero-loss manifold, the second moment acts as noise. In some cases, the networks quickly collapsed to a sparse solution, most likely as a result of the learning rate being too high, in relation to the input statistics (<xref ref-type="bibr" rid="bib32">Mulayoff et al., 2021</xref>). Importantly, for GD without noise, there was no change after the initial convergence.</p><fig-group><fig id="fig4" position="float"><label>Figure 4.</label><caption><title>Generality of the results.</title><p>Summary of 616 simulations with various parameters, excluding stochastic gradient descent (SGD) with label noise (see <xref ref-type="table" rid="table2">Table 2</xref>). (<bold>A</bold>) Fraction of active units normalized by the first timestep for all simulations. Red line is the mean. Note that all simulations exhibit a stochastic decrease in the fraction of active units. See <xref ref-type="fig" rid="fig4s1">Figure 4âfigure supplement 1</xref> for further breakdown. (<bold>B</bold>) Dependence of sparseness (top) and sparsification time scale (bottom) on noise amplitude. Each point is one of 178 simulations with the same parameters except noise variance. (<bold>C</bold>) Learning a similarity matching task with Hebbian and anti-Hebbian learning using published code from <xref ref-type="bibr" rid="bib38">Qin et al., 2023</xref>. Performance of the network (blue) and fraction of active units (red) as a function of training steps. Note that the loss axis does not start at zero, and the dynamic range is small. The background colors indicate which phase is dominant throughout learning (1 - red, 2 - yellow, 3 - green).</p></caption><graphic mimetype="image" mime-subtype="tiff" xlink:href="elife-90069-fig4-v1.tif"/></fig><fig id="fig4s1" position="float" specific-use="child-fig"><label>Figure 4âfigure supplement 1.</label><caption><title>Noisy learning leads to spontaneous sparsification.</title><p>Summary of 516 simulations with three different learning algorithms: Stochastic error descent (SED, <xref ref-type="bibr" rid="bib6">Cauwenberghs, 1992</xref>), SGD, Adam. All values are normalized to the first time step of each simulation. The red lines indicate mean over all simulations. (<bold>A</bold>) Fraction active units â number of units with any response. (<bold>B</bold>) Active fraction â overall activity across all units (see methods).</p></caption><graphic mimetype="image" mime-subtype="tiff" xlink:href="elife-90069-fig4-figsupp1-v1.tif"/></fig></fig-group><p>As a further test of the generality of this phenomenon, we consider the recent simulation from <xref ref-type="bibr" rid="bib38">Qin et al., 2023</xref> in which representational drift was shown. The learning rule used in this work was very different from the ones we applied, and more biologically plausible. We simulated that network using the published code and found the same type of dynamics as shown above. Namely, the network initially converged to a good solution followed by a longer period of sparsification (<xref ref-type="fig" rid="fig4">Figure 4C</xref>). Note that in the original publication (<xref ref-type="bibr" rid="bib38">Qin et al., 2023</xref>) the focus was on the stage following this sparsification, in which the network indeed maintained a constant fraction of active cells.</p><p>In conclusion, we see that noisy learning leads to three phases under rather general conditions. The first phase is the learning of the task and convergence to the manifold of low-loss solutions. The second phase is directed movement on this manifold, driven by a second-order effect of implicit regularization. The third phase is an undirected random walk within the sub-manifold of low loss and maximum regularization. <xref ref-type="table" rid="table1">Table 1</xref> summarizes these three phases and their signature in network metrics. It is important to note that these are not consecutive phases but rather overlapping ones â they occur simultaneously, but due to their different time scales one can identify when each phase is dominant. A rough delineation of when each phase is dominant can be seen in <xref ref-type="fig" rid="fig4">Figure 4C</xref> background colors â in the first phase (red) the loss function converged, in the second phase (yellow) the fraction of active units reduced substantially. In the third phase (red) both were stationary but the tuning of units continued to change, as shown in the original paper (<xref ref-type="bibr" rid="bib38">Qin et al., 2023</xref>). We speculate that most experimental studies about drift demonstrated only the third phase of null drift, because they familiarized the animals to the environment for a substantial time period prior to recording. We refer to the second phase as a type of drift, because it happens after learning has finished and also features a gradual change in representations.</p><table-wrap id="table1" position="float"><label>Table 1.</label><caption><title>The three phases of noisy learning.</title></caption><table frame="hsides" rules="groups"><thead><tr><th align="left" valign="bottom">Phase</th><th align="left" valign="bottom">Duration</th><th align="left" valign="bottom">Performance</th><th align="left" valign="bottom">Activity statistics</th><th align="left" valign="bottom">Representations</th></tr></thead><tbody><tr><td align="left" valign="bottom">learning of task</td><td align="left" valign="bottom">short</td><td align="left" valign="bottom">changing</td><td align="left" valign="bottom">changing</td><td align="left" valign="bottom">changing</td></tr><tr><td align="left" valign="bottom">directed drift</td><td align="left" valign="bottom">long</td><td align="left" valign="bottom">stationary</td><td align="left" valign="bottom">changing</td><td align="left" valign="bottom">changing</td></tr><tr><td align="left" valign="bottom">null drift</td><td align="left" valign="bottom">endless</td><td align="left" valign="bottom">stationary</td><td align="left" valign="bottom">stationary</td><td align="left" valign="bottom">changing</td></tr></tbody></table></table-wrap></sec><sec id="s2-3"><title>Mechanism of sparsification</title><p>What are the mechanisms that give rise to this observed sparsification? As illustrated in <xref ref-type="fig" rid="fig1">Figure 1</xref>, solutions in the zero-loss manifold have identical loss, but might vary in some of their properties. The authors of <xref ref-type="bibr" rid="bib4">Blanc et al., 2020</xref> suggest that noisy learning will slowly increase the flatness of the loss landscape in the vicinity of the solution. This can be demonstrated with a simple example. Consider a two-dimensional loss function. The function is shaped like a valley with a continuous one-dimensional zero-loss manifold at its bottom (<xref ref-type="fig" rid="fig5">Figure 5A</xref>). Crucially, the loss on this one-dimensional manifold is exactly zero, while the vicinity of the manifold becomes systematically flatter in one direction. We simulated gradient descent with added noise on this function from a random starting point (red dot). The trajectory quickly converged to the zero-loss manifold, and began a random walk on it. This walk was clearly biased towards the flatter area of the manifold, as can be seen by the spread of the trajectory. This bias could be comprehended by noting that the gradient was orthogonal to the contour lines of the loss, and therefore had a component directed towards the flat region.</p><fig-group><fig id="fig5" position="float"><label>Figure 5.</label><caption><title>Noisy learning leads to a flat landscape.</title><p>(<bold>A</bold>) Gradient Descent dynamics over a two-dimensional loss function with a one-dimensional zero-loss manifold (colors from blue to yellow denote loss). Note that the loss is identically zero along the horizontal axis, but the left area is flatter. The orange trajectory begins at the red dot. Note the asymmetric extension into the left area. (<bold>B</bold>) Fraction of active units is highly correlated with the number of non-zero eigenvalues of the Hessian. (<bold>C</bold>) Update noise reduces small eigenvalues. Log of non-zero eigenvalues at two consecutive time points for learning with update noise. Note that eigenvalues do not correspond to one another when calculated at two different time points, and this plot demonstrates the change in their distribution rather than changes in eigenvalues corresponding to specific directions. The distribution of larger eigenvalues hardly changes, while the distribution of smaller eigenvalues is pushed to smaller values. (<bold>D</bold>) Label noise reduces the sum over eigenvalues. Same as (<bold>C</bold>), but for actual values instead of log.</p></caption><graphic mimetype="image" mime-subtype="tiff" xlink:href="elife-90069-fig5-v1.tif"/></fig><fig id="fig5s1" position="float" specific-use="child-fig"><label>Figure 5âfigure supplement 1.</label><caption><title>Label and update noise impose different regularization over the Hessian with distinct signatures in activity statistics.</title><p>Summary of 362 simulations with either label or update noise added to stochastic gradient descent (SGD) learning algorithm. All values are normalized to the first time step of each simulation. Lines indicate the mean of simulations and shaded regions indicate one standard deviation. Loss convergence varies between simulations, and is achieved on a scale of no more than 10<sup>5</sup> time steps. (<bold>A</bold>) Active fraction as a function of training time. Note this metric decreases significantly for both types of noise. (<bold>B</bold>) Fraction of active units as a function of training time. For label noise, the change is much smaller. (<bold>C</bold>) Sum of the loss Hessianâs eigenvalues as a function of training time. Here the difference is apparent - label noise imposes slow implicit regularization over this metric while update noise does not. (<bold>D</bold>) Fraction of non-zero eigenvalues in the loss Hessian as a function of training time. As explained in the main text, update noise imposes implicit regularization over the sum of log-eigenvalues, which manifests as a zeroing of eigenvalues over time and thus a reduction in the fraction of active units.</p></caption><graphic mimetype="image" mime-subtype="tiff" xlink:href="elife-90069-fig5-figsupp1-v1.tif"/></fig></fig-group><p>In higher dimensions, flatness is captured by the eigenvalues of the Hessian of the loss. Because these eigenvalues are a collection of numbers, different scenarios could lead to minimizing different aspects of this collection. Specifically, according to <xref ref-type="bibr" rid="bib4">Blanc et al., 2020</xref>, update noise should regularize the sum of the log of the non-zero eigenvalues while label noise should do the same for the sum of eigenvalues. In our predictive coding example, where update noise was added, each inactivated unit translates into a set of zero-rows in the Hessian (see methods), and thus also into a set of zero-eigenvalues (<xref ref-type="fig" rid="fig5">Figure 5B</xref>). The slope of the regularizer approaches infinity as the eigenvalue approaches zero, and thus small eigenvalues are driven to zero much faster than large eigenvalues (<xref ref-type="fig" rid="fig5">Figure 5C</xref>). So in this case, update noise leads to an increase in the number of zero eigenvalues, which are manifested as a sparse solution. Another, perhaps more intuitive, way to understand these results is that units below the activation threshold are insensitive to noise perturbations. In other scenarios, in which we simulated with label noise, we indeed observed a gradual decrease in the sum of eigenvalues (<xref ref-type="fig" rid="fig5">Figure 5D</xref>). For a more intuitive demonstration of this phenomenon, see <xref ref-type="fig" rid="fig5s1">Figure 5âfigure supplement 1</xref>.</p></sec></sec><sec id="s3" sec-type="discussion"><title>Discussion</title><p>We showed that representational drift could arise from ongoing learning in the presence of noise, after a network has already reached good performance. We suggest that learning is divided into three overlapping phases: a fast initial phase, where good performance is achieved, a second slower phase in which <italic>directed</italic> drift along the low-loss manifold leads to an implicit regularization and finally, a third <italic>undirected</italic> phase ensues once the regularizer is minimized. In our results, the directed component was associated with sparsification of the neural code. We verified the existence of this phenomenon in experimental data from four different labs. It is important to note that sparseness was related to flatness of the loss landscape in the specific case of a single hidden layer feedforward neural network and update or label noise. For other architectures and noise types, the change in activity statistics will most likely be different and calls for further work. The CA1 region is known to have little recurrent connections, which possibly explains why these results match.</p><p>Interpreting drift as a learning process has recently been suggested by <xref ref-type="bibr" rid="bib38">Qin et al., 2023</xref>; <xref ref-type="bibr" rid="bib37">Pashakhanloo and Koulakov, 2023</xref>. Both studies focused on the final phase in which the statistics of the representations were constant. Experimentally, (<xref ref-type="bibr" rid="bib8">Deitch et al., 2021</xref>) reported a decrease in activity at the beginning of the experiment, which they suggested was correlated with some behavioral change, but we believe it could also be a result of the directed drift phase. (<xref ref-type="bibr" rid="bib34">Nguyen et al., 2022</xref>) also reported a slow directed change in representation long after familiarity with the stimuli. There is another consequence of the timescale separation. Unlike in the setting of drift experiments, natural environments are never truly constant. Thus, it is possible that the second phase of learning never stops because the task is slowly changing. This would imply that the second, directed, phase may be the natural regime in which neural networks reside.</p><p>Here, we reported directed drift in the space of solutions of neural networks. This drift could be observed by examining changes to the representation of external world variables, and hence is related to the phenomenon of representational drift. Note, however, that representations are not a full description of a networkâs behavior (<xref ref-type="bibr" rid="bib5">Brette, 2019</xref>). The statistics of representational changes can be used as a window into changes of network dynamics and function.</p><p>The phenomenon of directed drift is very robust to various modeling choices, and also consistent with recent theoretical results (<xref ref-type="bibr" rid="bib4">Blanc et al., 2020</xref>; <xref ref-type="bibr" rid="bib23">Li et al., 2021</xref>) The details of the direction of the drift, however, are dependent on specific choices. Specifically, which aspects of the Hessian are minimized during the second phase of learning, as well as the timescale of this phase, depend on the specifics of the learning rule and the noise in the system. This suggests an exciting opportunity â inferring the learning rule of a network from the statistics of representational drift.</p><p>Our explanation of drift invoked the concept of a low-loss manifold â a family of network configurations that have nearly identical performance on a task. The definition of low-loss, however, depends on the specific task and context analyzed. Challenging a system with new inputs could dissociate two configurations that otherwise appear identical (<xref ref-type="bibr" rid="bib53">Turner et al., 2021</xref>). It will be interesting to explore whether various environmental perturbations could uncover the motion along the low-loss manifold in the CA1 population. An important subject relating to perturbations is that of remapping â the phenomenon in which place cells change their tuning in response to a change in the environment or change in context. One can, therefore, speculate that, as the network moves to flatter areas of the loss landscape, becoming more robust to noise and thus to perturbations, the probability for remapping given the same environmental change will systematically decrease. A functional interpretation of remapping as latent state (context) inference is given by <xref ref-type="bibr" rid="bib45">Sanders et al., 2020</xref>. The authors also summarize results from a series of morph experiments and offer a prediction similar to ours (Fig. 7 there) â that discrepancies between remapping probabilities can be explained as testing at different points of training. Beyond such abstract models, for future work, it is also possible to mechanistically model multiple environments and study remapping probabilities through them (<xref ref-type="bibr" rid="bib26">Low et al., 2023</xref>).</p><p>Machine learning has been suggested as a model tool for neuroscience research (<xref ref-type="bibr" rid="bib40">Richards et al., 2019</xref>; <xref ref-type="bibr" rid="bib28">Marblestone et al., 2016</xref>; <xref ref-type="bibr" rid="bib47">Saxe et al., 2021</xref>). However, the implicit regularization in ML has not been studied to explain representational drift in neuroscience, and may have been done without awareness of this phenomenon. Itâs worth noting that this isnât a phenomenon specific to neural networks, but rather a general property of overparameterized systems that optimize a cost function. Importing insights from this domain into neuroscience shows the utility of studying general phenomena in systems that learn. For example, another complex learning system in which a similar idea has been proposed is evolution â âsurvival of the flattestâ suggests that, under a high mutation rate, the fittest replicators are not just the ones with the highest fitness, but also with a flat fitness function which is more robust to mutations (<xref ref-type="bibr" rid="bib7">CodoÃ±er et al., 2006</xref>). One can hope that more such insights will arise as we open our eyes.</p><sec id="s3-1"><title>Code availability</title><p>The code for this project is available at <ext-link ext-link-type="uri" xlink:href="https://github.com/Aviv-Ratzon/DriftReg">https://github.com/Aviv-Ratzon/DriftReg</ext-link>, (copy archived at <xref ref-type="bibr" rid="bib2">Aviv-Ratzon, 2024</xref>).</p></sec></sec><sec id="s4" sec-type="materials|methods"><title>Materials and methods</title><sec id="s4-1"><title>Predictive coding task</title><p>The agent is moving in an arena of size <inline-formula><mml:math id="inf12"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>L</mml:mi><mml:mrow class="MJX-TeXAtom-ORD"><mml:mi>x</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>L</mml:mi><mml:mrow class="MJX-TeXAtom-ORD"><mml:mi>y</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mstyle></mml:math></inline-formula>, with constant velocity in the <inline-formula><mml:math id="inf13"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mi>y</mml:mi></mml:mstyle></mml:math></inline-formula> direction of <inline-formula><mml:math id="inf14"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:msub><mml:mi>V</mml:mi><mml:mrow class="MJX-TeXAtom-ORD"><mml:mn>0</mml:mn></mml:mrow></mml:msub></mml:mstyle></mml:math></inline-formula>. The agentâs heading direction is Î¸ and it changes at every time step by <inline-formula><mml:math id="inf15"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mi mathvariant="normal">Î</mml:mi><mml:mi>Î¸</mml:mi><mml:mo>â¼</mml:mo><mml:mi>G</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mn>0</mml:mn><mml:mo>,</mml:mo><mml:msubsup><mml:mi>Ï</mml:mi><mml:mrow class="MJX-TeXAtom-ORD"><mml:mi>Î¸</mml:mi></mml:mrow><mml:mrow class="MJX-TeXAtom-ORD"><mml:mn>2</mml:mn></mml:mrow></mml:msubsup><mml:mo stretchy="false">)</mml:mo></mml:mstyle></mml:math></inline-formula>, the agentâs visual field has an angle <inline-formula><mml:math id="inf16"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:msub><mml:mi>Î¸</mml:mi><mml:mrow class="MJX-TeXAtom-ORD"><mml:mi>v</mml:mi><mml:mi>i</mml:mi><mml:mi>s</mml:mi></mml:mrow></mml:msub></mml:mstyle></mml:math></inline-formula> and is represented as a vector of size <inline-formula><mml:math id="inf17"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:msub><mml:mi>L</mml:mi><mml:mrow class="MJX-TeXAtom-ORD"><mml:mi>v</mml:mi><mml:mi>i</mml:mi><mml:mi>s</mml:mi></mml:mrow></mml:msub></mml:mstyle></mml:math></inline-formula>. The texture of the walls is generated from a random Gaussian vector of size <inline-formula><mml:math id="inf18"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:msub><mml:mi>L</mml:mi><mml:mrow class="MJX-TeXAtom-ORD"><mml:mi>w</mml:mi><mml:mi>a</mml:mi><mml:mi>l</mml:mi><mml:mi>l</mml:mi><mml:mi>s</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mn>2</mml:mn><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>L</mml:mi><mml:mrow class="MJX-TeXAtom-ORD"><mml:mi>x</mml:mi></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:msub><mml:mi>L</mml:mi><mml:mrow class="MJX-TeXAtom-ORD"><mml:mi>y</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:msub><mml:mi>L</mml:mi><mml:mrow class="MJX-TeXAtom-ORD"><mml:mi>v</mml:mi><mml:mi>i</mml:mi><mml:mi>s</mml:mi></mml:mrow></mml:msub></mml:mstyle></mml:math></inline-formula>, smoothed with a Gaussian filter with <inline-formula><mml:math id="inf19"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:msup><mml:mi>Ï</mml:mi><mml:mrow class="MJX-TeXAtom-ORD"><mml:mn>2</mml:mn></mml:mrow></mml:msup><mml:mo>=</mml:mo><mml:msub><mml:mi>K</mml:mi><mml:mrow class="MJX-TeXAtom-ORD"><mml:mi>s</mml:mi><mml:mi>m</mml:mi><mml:mi>o</mml:mi><mml:mi>o</mml:mi><mml:mi>t</mml:mi><mml:mi>h</mml:mi></mml:mrow></mml:msub><mml:msub><mml:mi>L</mml:mi><mml:mrow class="MJX-TeXAtom-ORD"><mml:mi>w</mml:mi><mml:mi>a</mml:mi><mml:mi>l</mml:mi><mml:mi>l</mml:mi><mml:mi>s</mml:mi></mml:mrow></mml:msub></mml:mstyle></mml:math></inline-formula>. At each time step the agent receives the visual input from the walls, determined by the intersection points of its visual field with the walls. When the agent reaches a distance of <inline-formula><mml:math id="inf20"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:msub><mml:mi>L</mml:mi><mml:mrow class="MJX-TeXAtom-ORD"><mml:mi>y</mml:mi></mml:mrow></mml:msub><mml:msub><mml:mi>L</mml:mi><mml:mrow class="MJX-TeXAtom-ORD"><mml:mi>b</mml:mi><mml:mi>u</mml:mi><mml:mi>f</mml:mi><mml:mi>f</mml:mi><mml:mi>e</mml:mi><mml:mi>r</mml:mi></mml:mrow></mml:msub></mml:mstyle></mml:math></inline-formula> from the wall, it turns in the opposite direction.</p></sec><sec id="s4-2"><title>Tuning properties of units</title><p>For each unit we calculated a tuning curve. We divided the arena into 100 equal bins and computed the number of time steps in each bin and the mean unit activation. We then obtained the tuning curve by dividing the mean activity for each bin by the occupancy. We treated movement in each direction as a separate location. We calculated the spatial information (SI) of the tuning curves for each unit:<disp-formula id="equ5"><label>(5)</label><mml:math id="m5"><mml:mrow><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mi>S</mml:mi><mml:mi>I</mml:mi><mml:mo>=</mml:mo><mml:munder><mml:mo>â</mml:mo><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:munder><mml:msub><mml:mi>p</mml:mi><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mfrac><mml:msub><mml:mi>r</mml:mi><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mrow><mml:mover><mml:mi>r</mml:mi><mml:mo stretchy="false">Â¯</mml:mo></mml:mover></mml:mrow></mml:mfrac><mml:msub><mml:mi>log</mml:mi><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msub><mml:mo>â¡</mml:mo><mml:mfrac><mml:msub><mml:mi>r</mml:mi><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mrow><mml:mover><mml:mi>r</mml:mi><mml:mo stretchy="false">Â¯</mml:mo></mml:mover></mml:mrow></mml:mfrac></mml:mstyle></mml:mrow></mml:math></disp-formula></p><p>where <inline-formula><mml:math id="inf21"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mi>i</mml:mi></mml:mstyle></mml:math></inline-formula> is the index of the bin, <inline-formula><mml:math id="inf22"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:msub><mml:mi>p</mml:mi><mml:mrow class="MJX-TeXAtom-ORD"><mml:mi>i</mml:mi></mml:mrow></mml:msub></mml:mstyle></mml:math></inline-formula> is the probability of being in the bin, <inline-formula><mml:math id="inf23"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:msub><mml:mi>r</mml:mi><mml:mrow class="MJX-TeXAtom-ORD"><mml:mi>i</mml:mi></mml:mrow></mml:msub></mml:mstyle></mml:math></inline-formula> is the value of the tuning curve in the bin and <inline-formula><mml:math id="inf24"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow class="MJX-TeXAtom-ORD"><mml:mover><mml:mi>r</mml:mi><mml:mo stretchy="false">Â¯</mml:mo></mml:mover></mml:mrow></mml:mstyle></mml:math></inline-formula> is the unitâs mean activity rate. Active unit was defined as a unit with non-zero activation for at least one input.</p></sec><sec id="s4-3"><title>Measuring sparsity</title><p>We measure sparsity using two metrics: Active fraction, and fraction active units. These can be calculated from the activation matrix (<xref ref-type="fig" rid="fig6">Figure 6</xref>), where each row corresponds to a single unit, each column corresponds to an input and the values of the cells are the activations of a given unit for a given input. We can then binarize this matrix, giving a value of 1 to cells with non-zero activations. The active fraction is the mean over all cells of the matrix. The fraction of active units is the fraction of rows with at least one non-zero value. Note that âunitsâ refers to hidden layer units.</p><fig id="fig6" position="float"><label>Figure 6.</label><caption><title>Illustration of sparsity metrics.</title></caption><graphic mimetype="image" mime-subtype="tiff" xlink:href="elife-90069-fig6-v1.tif"/></fig></sec><sec id="s4-4"><title>Simulations</title><p>For the random simulations, we train each network for 10<sup>7</sup> training steps while choosing random learning algorithm and parameters. The ranges and relevant values of parameters are specified in <xref ref-type="table" rid="table2">Table 2</xref>. For Adam and SED there was no added noise.</p><table-wrap id="table2" position="float"><label>Table 2.</label><caption><title>Parameter ranges for random simulations.</title></caption><table frame="hsides" rules="groups"><thead><tr><th align="left" valign="bottom">Parameter</th><th align="left" valign="bottom">Possible values</th></tr></thead><tbody><tr><td align="left" valign="bottom">learning algorithm</td><td align="left" valign="bottom">{SGD, Adam, SED}</td></tr><tr><td align="left" valign="bottom">noise type</td><td align="left" valign="bottom">{update, label}</td></tr><tr><td align="left" valign="bottom">number of samples</td><td align="left" valign="bottom"><xref ref-type="bibr" rid="bib36">Oâkeefe and Nadel, 1979</xref>; <xref ref-type="bibr" rid="bib52">Susman et al., 2019</xref></td></tr><tr><td align="left" valign="bottom">initialization regime</td><td align="left" valign="bottom">{lazy, rich}</td></tr><tr><td align="left" valign="bottom">task</td><td align="left" valign="bottom">{abstract predictive, random, random smoothed}</td></tr><tr><td align="left" valign="bottom">input dimension</td><td align="left" valign="bottom"><xref ref-type="bibr" rid="bib36">Oâkeefe and Nadel, 1979</xref>; <xref ref-type="bibr" rid="bib52">Susman et al., 2019</xref></td></tr><tr><td align="left" valign="bottom">output dimension</td><td align="left" valign="bottom"><xref ref-type="bibr" rid="bib36">Oâkeefe and Nadel, 1979</xref>; <xref ref-type="bibr" rid="bib52">Susman et al., 2019</xref></td></tr><tr><td align="left" valign="bottom">noise variance (label/update)</td><td align="left" valign="bottom">[0.1,1]/[0.01,0.1]</td></tr><tr><td align="left" valign="bottom">hidden layer size</td><td align="left" valign="bottom">100</td></tr></tbody></table></table-wrap></sec><sec id="s4-5"><title>Sparsification timescale</title><p>To produce <xref ref-type="fig" rid="fig4">Figure 4B</xref> bottom, we fitted an exponential curve over the curve of fraction of active units for each simulation and extracted the time constant of the exponential. To simplify this fit, we shifted each curve such that it plateaus at zero. We also clipped the length of the curves at the point in which they reach 90% of their final value to avoid fitting noise in the plateau after convergence. Note that we did this calculation to a subset of 178 simulations with the same parameters and varying noise scale. We chose this set of parameters because it exhibited a relatively âniceâ exponential curve. As can be seen in <xref ref-type="fig" rid="fig4">Figure 4A</xref>, some simulations exhibit a long plateau in the fraction of active units followed by a sudden start of the sparsification process. This type of plateau followed by a phase transition was described in previous works (<xref ref-type="bibr" rid="bib46">Saxe et al., 2013</xref>; <xref ref-type="bibr" rid="bib49">Schuessler et al., 2020</xref>). For some of the simulations finding the timescale of sparsification is not straightforward and rather noisy, thus for simplicity sake, we chose to calculate it only over the mentioned subset.</p></sec><sec id="s4-6"><title>Stochastic error descent</title><p>The equation for parameter updates under this learning rule is given by:<disp-formula id="equ6"><label>(6)</label><mml:math id="m6"><mml:mrow><mml:mstyle displaystyle="true" scriptlevel="0"><mml:msub><mml:mi>Î¸</mml:mi><mml:mrow><mml:mi>Ï</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mi>Î¸</mml:mi><mml:mi>Ï</mml:mi></mml:msub><mml:mo>â</mml:mo><mml:mi>Î·</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>f</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>Î¸</mml:mi><mml:mrow><mml:mi>Ï</mml:mi></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:msub><mml:mi>Î¾</mml:mi><mml:mi>Ï</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mo>â</mml:mo><mml:mi>f</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>Î¸</mml:mi><mml:mrow><mml:mi>Ï</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mo stretchy="false">)</mml:mo><mml:msub><mml:mi>Î¾</mml:mi><mml:mi>Ï</mml:mi></mml:msub></mml:mstyle></mml:mrow></mml:math></disp-formula></p><p>In this learning rule, the parameters are randomly perturbed at each training step by a Gaussian noise denoted by <inline-formula><mml:math id="inf25"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:msub><mml:mi>Î¾</mml:mi><mml:mrow class="MJX-TeXAtom-ORD"><mml:mi>Ï</mml:mi></mml:mrow></mml:msub></mml:mstyle></mml:math></inline-formula> and then updated in proportion to the change in loss.</p></sec><sec id="s4-7"><title>Experimental data</title><p>We present here a detailed description of the analyses performed for each dataset. <xref ref-type="table" rid="table3">Table 3</xref> summarizes the differences between them, along with an additional publication about CA1 drift <xref ref-type="bibr" rid="bib11">Geva et al., 2023</xref> in which stationary statistics were reported. The p-values for the regression slopes were calculated using a t-test where the null hypothesis is that the coeffecient is equal to zero. The regression included an intercept parameter.</p><table-wrap id="table3" position="float"><label>Table 3.</label><caption><title>Description of experimental datasets.</title></caption><table frame="hsides" rules="groups"><thead><tr><th align="left" valign="top"/><th align="left" valign="top"><xref ref-type="bibr" rid="bib20">Khatib et al., 2023</xref></th><th align="left" valign="top"><xref ref-type="bibr" rid="bib16">Jercog et al., 2019b</xref></th><th align="left" valign="top"><xref ref-type="bibr" rid="bib19">Karlsson et al., 2015</xref></th><th align="left" valign="top"><xref ref-type="bibr" rid="bib51">Sheintuch et al., 2023</xref></th><th align="left" valign="top"><xref ref-type="bibr" rid="bib11">Geva et al., 2023</xref></th></tr></thead><tbody><tr><td align="left" valign="top">Familiarity</td><td align="char" char="ndash" valign="top">3â5 days</td><td align="left" valign="top">novel</td><td align="left" valign="top">novel</td><td align="left" valign="top">novel</td><td align="char" char="ndash" valign="top">6â9 days</td></tr><tr><td align="left" valign="top">Species</td><td align="left" valign="top">mice</td><td align="left" valign="top">mice</td><td align="left" valign="top">rats</td><td align="left" valign="top">mice</td><td align="left" valign="top">mice</td></tr><tr><td align="left" valign="top"># Animals</td><td align="char" char="." valign="top">8</td><td align="char" char="." valign="top">12</td><td align="char" char="." valign="top">9</td><td align="char" char="." valign="top">8</td><td align="char" char="." valign="top">8</td></tr><tr><td align="left" valign="top">Recordings days</td><td align="char" char="." valign="top">1 day</td><td align="char" char="." valign="top">10 days</td><td align="left" valign="top">max. 11 days</td><td align="char" char="." valign="top">10 days</td><td align="char" char="." valign="top">10 days</td></tr><tr><td align="left" valign="top">Session length</td><td align="char" char="." valign="top">200 min</td><td align="char" char="." valign="top">40 min</td><td align="char" char="ndash" valign="top">15â30 min</td><td align="char" char="." valign="top">20 min</td><td align="char" char="." valign="top">20 min</td></tr><tr><td align="left" valign="top">Recording type</td><td align="left" valign="top">calcium imaging</td><td align="left" valign="top">electrophysiology</td><td align="left" valign="top">electrophysiology</td><td align="left" valign="top">calcium imaging</td><td align="left" valign="top">calcium imaging</td></tr><tr><td align="left" valign="top">Arena</td><td align="left" valign="top">linear track</td><td align="left" valign="top">square or circle</td><td align="left" valign="top">W-shaped</td><td align="left" valign="top">linear or L-shaped track</td><td align="left" valign="top">linear track</td></tr><tr><td align="left" valign="top">Activity metric</td><td align="left" valign="top">fraction of place cells decrease</td><td align="left" valign="top">number of active cells decrease</td><td align="left" valign="top">fraction of place cells decrease</td><td align="left" valign="top">fraction of place cells decrease</td><td align="left" valign="top">fraction of place cell stationary</td></tr><tr><td align="left" valign="top">Mean SI change</td><td align="left" valign="top">increase</td><td align="left" valign="top">increase</td><td align="left" valign="top">increase</td><td align="left" valign="top">increase</td><td align="left" valign="top">stationary</td></tr></tbody></table></table-wrap><p><xref ref-type="bibr" rid="bib20">Khatib et al., 2023</xref> - The results presented here were also shown in the paper, and a full description is available there. Only frames where the mice moved faster than <inline-formula><mml:math id="inf26"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mn>1</mml:mn><mml:mfrac><mml:mrow><mml:mi>c</mml:mi><mml:mi>m</mml:mi></mml:mrow><mml:mi>s</mml:mi></mml:mfrac></mml:mstyle></mml:math></inline-formula> were analyzed. We calculated the fraction of place cells out of all recognized cells, place cells were classified using a shuffle test. We also used the published code from <xref ref-type="bibr" rid="bib50">Sheintuch et al., 2022</xref> to verify that the increase in SI is sustained under bias corrections. Note that we treated the linear track as one-dimensional and separated the two different running directions, bins were <inline-formula><mml:math id="inf27"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mn>4</mml:mn><mml:mi>c</mml:mi><mml:mi>m</mml:mi></mml:mstyle></mml:math></inline-formula> in length. The metrics were averaged over cells pooled together from all animals. Data is not publicly available.</p><p><xref ref-type="bibr" rid="bib15">Jercog et al., 2019a</xref> - The results presented here are novel. The published data features rate maps and full trajectories, without spike data. Only neurons with an average activity rate of over <inline-formula><mml:math id="inf28"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mn>0.1</mml:mn><mml:mi>H</mml:mi><mml:mi>z</mml:mi></mml:mstyle></mml:math></inline-formula> were included. Because of this, we calculated only the number of active neurons each day rather than the fraction and could not classify which were place cells. We calculated the binned occupancy maps from the trajectories and used them with the published rate maps to calculate SI. Data is available at: <ext-link ext-link-type="uri" xlink:href="https://crcns.org/data-sets/hc/hc-22/about-hc-22">https://crcns.org/data-sets/hc/hc-22/about-hc-22</ext-link>.</p><p><xref ref-type="bibr" rid="bib19">Karlsson et al., 2015</xref> - The results presented here are novel. The data features spikes and trajectories. We filtered the data to include time bins when the animals moved faster than <inline-formula><mml:math id="inf29"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mn>1</mml:mn><mml:mfrac><mml:mrow><mml:mi>c</mml:mi><mml:mi>m</mml:mi></mml:mrow><mml:mi>s</mml:mi></mml:mfrac></mml:mstyle></mml:math></inline-formula> and only neurons from CA1. We used the published code from <xref ref-type="bibr" rid="bib50">Sheintuch et al., 2022</xref> to calculate the fraction of place cells along with SI, and verified that the increase in SI is sustained under bias corrections. For the occupancy map we treated the entire W-shaped arena as a square and used bins of approximately <inline-formula><mml:math id="inf30"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mn>4</mml:mn><mml:mi>c</mml:mi><mml:mi>m</mml:mi></mml:mstyle></mml:math></inline-formula> length. This was done for the sake of simplifying the analysis, a more accurate method would be to consider separately each linear track and movement direction. Note that in this dataset animals spent varying amounts of time in two different environments. We pooled together for each animal the data of cells from either environment according to experience time in them. For example, if the animal visited environment A on day 4 for the 4th time and had 20 active cells, and visited environment B on day 6 for the 4th time and had 30 active cells, we pooled together the entire 50 cells for day 4 of this animal. Data is available at: <ext-link ext-link-type="uri" xlink:href="https://crcns.org/data-sets/hc/hc-6/about-hc-5">https://crcns.org/data-sets/hc/hc-6/about-hc-5</ext-link>.</p><p><xref ref-type="bibr" rid="bib51">Sheintuch et al., 2023</xref> - The results presented here were also shown in the paper. The data features various metrics calculated from the activity. We averaged the fraction of place cells and mean SI over animals for each day. Data is available at: <ext-link ext-link-type="uri" xlink:href="https://github.com/zivlab/cell_assemblies">https://github.com/zivlab/cell_assemblies</ext-link>, (copy archived at <xref ref-type="bibr" rid="bib57">zivlab, 2023</xref>).</p></sec><sec id="s4-8"><title>Label noise</title><p>Label noise is introduced to the loss function given by the following formula:<disp-formula id="equ7"><label>(7)</label><mml:math id="m7"><mml:mrow><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mi>f</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>Î¸</mml:mi><mml:mi>Ï</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:msub><mml:mrow><mml:mi mathvariant="double-struck">E</mml:mi></mml:mrow><mml:mi>t</mml:mi></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mover><mml:msub><mml:mrow><mml:mi mathvariant="bold">y</mml:mi></mml:mrow><mml:mi>t</mml:mi></mml:msub><mml:mo stretchy="false">^</mml:mo></mml:mover></mml:mrow><mml:mo>â</mml:mo><mml:msub><mml:mrow><mml:mi mathvariant="bold">x</mml:mi></mml:mrow><mml:mrow><mml:mi>t</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:msubsup><mml:mi>Î¾</mml:mi><mml:mi>Ï</mml:mi><mml:mrow><mml:mi>l</mml:mi><mml:mi>a</mml:mi><mml:mi>b</mml:mi><mml:mi>e</mml:mi><mml:mi>l</mml:mi></mml:mrow></mml:msubsup><mml:msup><mml:mo stretchy="false">)</mml:mo><mml:mn>2</mml:mn></mml:msup><mml:mo>,</mml:mo></mml:mstyle></mml:mrow></mml:math></disp-formula></p><p>where <inline-formula><mml:math id="inf31"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:msubsup><mml:mi>Î¾</mml:mi><mml:mrow class="MJX-TeXAtom-ORD"><mml:mi>Ï</mml:mi></mml:mrow><mml:mrow class="MJX-TeXAtom-ORD"><mml:mi>l</mml:mi><mml:mi>a</mml:mi><mml:mi>b</mml:mi><mml:mi>e</mml:mi><mml:mi>l</mml:mi></mml:mrow></mml:msubsup></mml:mstyle></mml:math></inline-formula> is Gaussian noise.</p></sec><sec id="s4-9"><title>Gradient descent dynamics around the zero-loss manifold</title><p>The function we used for the two-dimensional example was given by:<disp-formula id="equ8"><label>(8)</label><mml:math id="m8"><mml:mrow><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mi>L</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>x</mml:mi><mml:mo>,</mml:mo><mml:mi>y</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi>x</mml:mi><mml:mi>y</mml:mi><mml:msup><mml:mo stretchy="false">)</mml:mo><mml:mn>2</mml:mn></mml:msup><mml:mo>,</mml:mo></mml:mstyle></mml:mrow></mml:math></disp-formula></p><p>which has zero loss on the <inline-formula><mml:math id="inf32"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mi>x</mml:mi></mml:mstyle></mml:math></inline-formula> and <inline-formula><mml:math id="inf33"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mi>y</mml:mi></mml:mstyle></mml:math></inline-formula> axes. For small enough update noise, GD will converge to the vicinity of this manifold (the axes). We consider a point on the <inline-formula><mml:math id="inf34"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mi>x</mml:mi></mml:mstyle></mml:math></inline-formula>-axis: <inline-formula><mml:math id="inf35"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mrow class="MJX-TeXAtom-ORD"><mml:mn>0</mml:mn></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:mn>0</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mstyle></mml:math></inline-formula>, and calculate the direction of the gradient near that point. Because we are interested in motion along the zero-loss manifold, we consider a small perturbation in the orthogonal direction <inline-formula><mml:math id="inf36"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mrow class="MJX-TeXAtom-ORD"><mml:mn>0</mml:mn></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:mn>0</mml:mn><mml:mo>+</mml:mo><mml:mi mathvariant="normal">Î</mml:mi><mml:mi>y</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mstyle></mml:math></inline-formula> where <inline-formula><mml:math id="inf37"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mstyle displaystyle="true" scriptlevel="0"><mml:msub><mml:mi>x</mml:mi><mml:mrow><mml:mn>0</mml:mn></mml:mrow></mml:msub><mml:mo>&gt;&gt;</mml:mo><mml:mn>1</mml:mn></mml:mstyle></mml:mrow></mml:mstyle></mml:math></inline-formula> and <inline-formula><mml:math id="inf38"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mrow><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:mi mathvariant="normal">Î</mml:mi><mml:mi>y</mml:mi><mml:mrow><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:mo>&lt;&lt;</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:mstyle></mml:math></inline-formula>. Any component of the gradient in the <inline-formula><mml:math id="inf39"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mi>x</mml:mi></mml:mstyle></mml:math></inline-formula> direction will lead to motion along the manifold. The update step at this point is given by:<disp-formula id="equ9"><label>(9)</label><mml:math id="m9"><mml:mrow><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mo>â</mml:mo><mml:mi mathvariant="normal">â</mml:mi><mml:mi>L</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mrow><mml:mn>0</mml:mn></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:mn>0</mml:mn><mml:mo>+</mml:mo><mml:mi mathvariant="normal">Î</mml:mi><mml:mi>y</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mo>â</mml:mo><mml:mn>2</mml:mn><mml:msub><mml:mi>x</mml:mi><mml:mrow><mml:mn>0</mml:mn></mml:mrow></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mtable rowspacing="4pt" columnspacing="1em"><mml:mtr><mml:mtd><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="normal">Î</mml:mi><mml:mi>y</mml:mi><mml:msup><mml:mo stretchy="false">)</mml:mo><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msup></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:msub><mml:mi>x</mml:mi><mml:mrow><mml:mn>0</mml:mn></mml:mrow></mml:msub><mml:mi mathvariant="normal">Î</mml:mi><mml:mi>y</mml:mi></mml:mtd></mml:mtr></mml:mtable><mml:mo>)</mml:mo></mml:mrow></mml:mstyle></mml:mrow></mml:math></disp-formula></p><p>One can observe that the step has a large component in the <inline-formula><mml:math id="inf40"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mi>y</mml:mi></mml:mstyle></mml:math></inline-formula> direction, quickly returning to the manifold. There is also a smaller component in the <inline-formula><mml:math id="inf41"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mi>x</mml:mi></mml:mstyle></mml:math></inline-formula> direction, reducing the value of <inline-formula><mml:math id="inf42"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mi>x</mml:mi></mml:mstyle></mml:math></inline-formula>. Reducing <inline-formula><mml:math id="inf43"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mi>x</mml:mi></mml:mstyle></mml:math></inline-formula> also reduces the Hessianâs eigenvalues:<disp-formula id="equ10"><label>(10)</label><mml:math id="m10"><mml:mrow><mml:mstyle displaystyle="true" scriptlevel="0"><mml:msub><mml:mi>H</mml:mi><mml:mrow><mml:mi>L</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mrow><mml:mn>0</mml:mn></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:mn>0</mml:mn><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mn>2</mml:mn><mml:mrow><mml:mo>(</mml:mo><mml:mtable rowspacing="4pt" columnspacing="1em"><mml:mtr><mml:mtd><mml:mn>0</mml:mn></mml:mtd><mml:mtd><mml:mn>0</mml:mn></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mn>0</mml:mn></mml:mtd><mml:mtd><mml:msubsup><mml:mi>x</mml:mi><mml:mrow><mml:mn>0</mml:mn></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msubsup></mml:mtd></mml:mtr></mml:mtable><mml:mo>)</mml:mo></mml:mrow></mml:mstyle></mml:mrow></mml:math></disp-formula><disp-formula id="equ11"><label>(11)</label><mml:math id="m11"><mml:mrow><mml:mstyle displaystyle="true" scriptlevel="0"><mml:msub><mml:mi>Î»</mml:mi><mml:mrow><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mn>2</mml:mn></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mo fence="false" stretchy="false">{</mml:mo><mml:mn>0</mml:mn><mml:mo>,</mml:mo><mml:msubsup><mml:mi>x</mml:mi><mml:mrow><mml:mn>0</mml:mn></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msubsup><mml:mo fence="false" stretchy="false">}</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>v</mml:mi><mml:mrow><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mn>2</mml:mn></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:mo>{</mml:mo><mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:mtable rowspacing="4pt" columnspacing="1em"><mml:mtr><mml:mtd><mml:mn>1</mml:mn></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mn>0</mml:mn></mml:mtd></mml:mtr></mml:mtable><mml:mo>)</mml:mo></mml:mrow><mml:mo>,</mml:mo><mml:mrow><mml:mo>(</mml:mo><mml:mtable rowspacing="4pt" columnspacing="1em"><mml:mtr><mml:mtd><mml:mn>0</mml:mn></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mn>1</mml:mn></mml:mtd></mml:mtr></mml:mtable><mml:mo>)</mml:mo></mml:mrow></mml:mrow><mml:mo>}</mml:mo></mml:mrow></mml:mstyle></mml:mrow></mml:math></disp-formula></p><p>Thus, it becomes clear that the trajectory will have a bias that reduces the curvature in the <inline-formula><mml:math id="inf44"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mi>y</mml:mi></mml:mstyle></mml:math></inline-formula> direction.</p><p>For general loss functions and various noise models, rigorous proofs can be found in <xref ref-type="bibr" rid="bib4">Blanc et al., 2020</xref>, and a different approach can be found in <xref ref-type="bibr" rid="bib23">Li et al., 2021</xref>. Here, we will briefly outline the intuition for the general case. Consider again the update rule for GD:<disp-formula id="equ12"><label>(12)</label><mml:math id="m12"><mml:mrow><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mi>Î¸</mml:mi><mml:mo stretchy="false">â</mml:mo><mml:mi>Î¸</mml:mi><mml:mo>â</mml:mo><mml:mi>Î·</mml:mi><mml:mi mathvariant="normal">â</mml:mi><mml:mi>L</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>Î¸</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>.</mml:mo></mml:mstyle></mml:mrow></mml:math></disp-formula></p><p>In order to understand the dynamics close to the zero-loss manifold, we consider a point Î¸, for which <inline-formula><mml:math id="inf45"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mi>L</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>Î¸</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mn>0</mml:mn></mml:mstyle></mml:math></inline-formula> expand the loss around it:<disp-formula id="equ13"><label>(13)</label><mml:math id="m13"><mml:mrow><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mi>L</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>Î¸</mml:mi><mml:mo>+</mml:mo><mml:mi>Î´</mml:mi><mml:mi>Î¸</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mi>L</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>Î¸</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>+</mml:mo><mml:msup><mml:mi mathvariant="normal">â</mml:mi><mml:mi>T</mml:mi></mml:msup><mml:mi>L</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>Î¸</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mi>Î´</mml:mi><mml:mi>Î¸</mml:mi><mml:mo>+</mml:mo><mml:mfrac><mml:mn>1</mml:mn><mml:mn>2</mml:mn></mml:mfrac><mml:mi>Î´</mml:mi><mml:msup><mml:mi>Î¸</mml:mi><mml:mi>T</mml:mi></mml:msup><mml:mi>H</mml:mi><mml:mi>Î´</mml:mi><mml:mi>Î¸</mml:mi><mml:mo>.</mml:mo></mml:mstyle></mml:mrow></mml:math></disp-formula></p><p>We can then take the gradient of this expansion with respect to Î¸:<disp-formula id="equ14"><label>(14)</label><mml:math id="m14"><mml:mrow><mml:mstyle displaystyle="true" scriptlevel="0"><mml:msub><mml:mi mathvariant="normal">â</mml:mi><mml:mi>Î¸</mml:mi></mml:msub><mml:mi>L</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>Î¸</mml:mi><mml:mo>+</mml:mo><mml:mi>Î´</mml:mi><mml:mi>Î¸</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:msub><mml:mi mathvariant="normal">â</mml:mi><mml:mi>Î¸</mml:mi></mml:msub><mml:mi>L</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>Î¸</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>+</mml:mo><mml:msub><mml:mi mathvariant="normal">â</mml:mi><mml:mi>Î¸</mml:mi></mml:msub><mml:msubsup><mml:mi mathvariant="normal">â</mml:mi><mml:mi>Î¸</mml:mi><mml:mrow><mml:mi>T</mml:mi></mml:mrow></mml:msubsup><mml:mi>L</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>Î¸</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mi>Î´</mml:mi><mml:mi>Î¸</mml:mi><mml:mo>+</mml:mo><mml:msub><mml:mi mathvariant="normal">â</mml:mi><mml:mi>Î¸</mml:mi></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:mfrac><mml:mn>1</mml:mn><mml:mn>2</mml:mn></mml:mfrac><mml:mi>Î´</mml:mi><mml:msup><mml:mi>Î¸</mml:mi><mml:mrow><mml:mi>T</mml:mi></mml:mrow></mml:msup><mml:mi>H</mml:mi><mml:mi>Î´</mml:mi><mml:mi>Î¸</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mstyle></mml:mrow></mml:math></disp-formula><disp-formula id="equ15"><label>(15)</label><mml:math id="m15"><mml:mrow><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mo>=</mml:mo><mml:mn>0</mml:mn><mml:mo>+</mml:mo><mml:mi>H</mml:mi><mml:mi>Î´</mml:mi><mml:mi>Î¸</mml:mi><mml:mo>+</mml:mo><mml:msub><mml:mi mathvariant="normal">â</mml:mi><mml:mi>Î¸</mml:mi></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:mfrac><mml:mn>1</mml:mn><mml:mn>2</mml:mn></mml:mfrac><mml:mi>Î´</mml:mi><mml:msup><mml:mi>Î¸</mml:mi><mml:mi>T</mml:mi></mml:msup><mml:mi>H</mml:mi><mml:mi>Î´</mml:mi><mml:mi>Î¸</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>.</mml:mo></mml:mstyle></mml:mrow></mml:math></disp-formula></p><p>The first term is zero, because the gradient is zero on the manifold. The second term is the largest one, as itâs linear in <inline-formula><mml:math id="inf46"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mi>Î´</mml:mi><mml:mi>Î¸</mml:mi></mml:mstyle></mml:math></inline-formula>. Note that the Hessian matrix has zero eigenvalues in directions on the zero-loss manifold, and non-zero eigenvalues in other directions. Thus, the second term corresponds to projecting <inline-formula><mml:math id="inf47"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mi>Î´</mml:mi><mml:mi>Î¸</mml:mi></mml:mstyle></mml:math></inline-formula> in a direction that is orthogonal to the zero-loss manifold. The third term can be interpreted as the gradient of some auxiliary loss function. Thus, we expect gradient descent to minimize this new loss, which corresponds to a quadratic form with the Hessian. This is the reason for the implicit regularization along the manifold. Note that the auxiliary loss function is defined by <inline-formula><mml:math id="inf48"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mi>Î´</mml:mi><mml:mi>Î¸</mml:mi></mml:mstyle></mml:math></inline-formula>, and thus different noise statistics will correspond, on average, to different implicit regularizations. In conclusion, the update step will have a large component that moves the parameter vector towards the zero-loss manifold, and a small component that moves the parameter vector on the manifold in a direction that minimizes some measure of the Hessian.</p></sec><sec id="s4-10"><title>Hessian and sparseness</title><p>In the main text, we show that the implicit regularization of the Hessian leads to sparse representations. Here, we show this relationship for a single-hidden layer feed-forward neural network with ReLU activation and Mean Squared Error loss:<disp-formula id="equ16"><label>(16)</label><mml:math id="m16"><mml:mrow><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mi>f</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mrow><mml:mi mathvariant="bold">x</mml:mi></mml:mrow><mml:mi>i</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mi>Ï</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mrow><mml:mi mathvariant="bold">x</mml:mi></mml:mrow><mml:mi>t</mml:mi></mml:msub><mml:msup><mml:mrow><mml:mi mathvariant="bold">m</mml:mi></mml:mrow><mml:mi>T</mml:mi></mml:msup><mml:mo>+</mml:mo><mml:mi>b</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:msup><mml:mrow><mml:mi mathvariant="bold">n</mml:mi></mml:mrow><mml:mi>T</mml:mi></mml:msup></mml:mstyle></mml:mrow></mml:math></disp-formula></p><p>The gradient and Hessian at the zero-loss manifold are given by <xref ref-type="bibr" rid="bib33">Nacson et al., 2023</xref>:<disp-formula id="equ17"><label>(17)</label><mml:math id="m17"><mml:mrow><mml:mstyle displaystyle="true" scriptlevel="0"><mml:msub><mml:mi mathvariant="normal">â</mml:mi><mml:mrow><mml:mi>Î¸</mml:mi></mml:mrow></mml:msub><mml:mi>f</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mrow><mml:mi mathvariant="bold">x</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mrow><mml:mo>(</mml:mo><mml:mtable rowspacing="4pt" columnspacing="1em"><mml:mtr><mml:mtd><mml:mfrac><mml:mrow><mml:mi mathvariant="normal">â</mml:mi><mml:mi>f</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="normal">â</mml:mi><mml:mrow><mml:mi mathvariant="bold">m</mml:mi></mml:mrow></mml:mrow></mml:mfrac></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mfrac><mml:mrow><mml:mi mathvariant="normal">â</mml:mi><mml:mi>f</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="normal">â</mml:mi><mml:mrow><mml:mi mathvariant="bold">b</mml:mi></mml:mrow></mml:mrow></mml:mfrac></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mfrac><mml:mrow><mml:mi mathvariant="normal">â</mml:mi><mml:mi>f</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="normal">â</mml:mi><mml:mrow><mml:mi mathvariant="bold">n</mml:mi></mml:mrow></mml:mrow></mml:mfrac></mml:mtd></mml:mtr></mml:mtable><mml:mo>)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:mrow><mml:mo>(</mml:mo><mml:mtable rowspacing="4pt" columnspacing="1em"><mml:mtr><mml:mtd><mml:mi>n</mml:mi><mml:mo>â</mml:mo><mml:mrow><mml:mn mathvariant="double-struck">1</mml:mn></mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mo>;</mml:mo><mml:mi>Î¸</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>â</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mi>n</mml:mi><mml:mo>â</mml:mo><mml:mrow><mml:mn mathvariant="double-struck">1</mml:mn></mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mo>;</mml:mo><mml:mi>Î¸</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mo>â</mml:mo><mml:msup><mml:mi>n</mml:mi><mml:mrow><mml:mi>T</mml:mi></mml:mrow></mml:msup><mml:mo>+</mml:mo><mml:mi>b</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>â</mml:mo><mml:mrow><mml:mn mathvariant="double-struck">1</mml:mn></mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mo>;</mml:mo><mml:mi>Î¸</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mtd></mml:mtr></mml:mtable><mml:mo>)</mml:mo></mml:mrow></mml:mstyle></mml:mrow></mml:math></disp-formula><disp-formula id="equ18"><label>(18)</label><mml:math id="m18"><mml:mrow><mml:mstyle displaystyle="true" scriptlevel="0"><mml:msubsup><mml:mi mathvariant="normal">â</mml:mi><mml:mi>Î¸</mml:mi><mml:mn>2</mml:mn></mml:msubsup><mml:mi>L</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi mathvariant="bold">x</mml:mi></mml:mrow><mml:mo>;</mml:mo><mml:mi>Î¸</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:munder><mml:mo>â</mml:mo><mml:mi>i</mml:mi></mml:munder><mml:msub><mml:mi mathvariant="normal">â</mml:mi><mml:mi>Î¸</mml:mi></mml:msub><mml:mi>f</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mrow><mml:mi mathvariant="bold">x</mml:mi></mml:mrow><mml:mi>i</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:msub><mml:mi mathvariant="normal">â</mml:mi><mml:mi>Î¸</mml:mi></mml:msub><mml:mi>f</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mrow><mml:mi mathvariant="bold">x</mml:mi></mml:mrow><mml:mi>i</mml:mi></mml:msub><mml:msup><mml:mo stretchy="false">)</mml:mo><mml:mi>T</mml:mi></mml:msup><mml:mo>,</mml:mo></mml:mstyle></mml:mrow></mml:math></disp-formula></p><p>where <inline-formula><mml:math id="inf49"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mrow><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mrow><mml:mrow><mml:mi mathvariant="bold">x</mml:mi></mml:mrow></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mo>;</mml:mo><mml:mi>Î¸</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:mstyle></mml:math></inline-formula> is an indicator vector denoting whether each unit is active for some input <inline-formula><mml:math id="inf50"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msub><mml:mrow><mml:mi mathvariant="bold">x</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mstyle></mml:math></inline-formula>. Sparseness means that a unit has become inactive for all inputs. All the partial derivatives of input, output and bias weights associated with such a unit are zero, and thus the relevant rows of the Hessian are zero as well. Thus, every inactive unit leads to several zero eigenvalues.</p></sec></sec></body><back><sec sec-type="additional-information" id="s5"><title>Additional information</title><fn-group content-type="competing-interest"><title>Competing interests</title><fn fn-type="COI-statement" id="conf1"><p>No competing interests declared</p></fn></fn-group><fn-group content-type="author-contribution"><title>Author contributions</title><fn fn-type="con" id="con1"><p>Conceptualization, Data curation, Formal analysis, Validation, Investigation, Visualization, Methodology, Writing - original draft, Project administration, Writing - review and editing</p></fn><fn fn-type="con" id="con2"><p>Conceptualization, Resources, Data curation, Supervision, Funding acquisition, Methodology, Writing - review and editing</p></fn><fn fn-type="con" id="con3"><p>Conceptualization, Resources, Supervision, Funding acquisition, Investigation, Methodology, Writing - review and editing</p></fn></fn-group></sec><sec sec-type="supplementary-material" id="s6"><title>Additional files</title><supplementary-material id="mdar"><label>MDAR checklist</label><media xlink:href="elife-90069-mdarchecklist1-v1.docx" mimetype="application" mime-subtype="docx"/></supplementary-material></sec><sec sec-type="data-availability" id="s7"><title>Data availability</title><p>All the code and figure data to reproduce our manuscript is available at our GitHub repository (<ext-link ext-link-type="uri" xlink:href="https://github.com/Aviv-Ratzon/DriftReg">https://github.com/Aviv-Ratzon/DriftReg</ext-link>, copy archived at <xref ref-type="bibr" rid="bib2">Aviv-Ratzon, 2024</xref>). Three of the four experimental datasets are publicly available and referred to in the methods section.</p><p>The following previously published datasets were used:</p><p><element-citation publication-type="data" specific-use="references" id="dataset1"><person-group person-group-type="author"><name><surname>Sheintuch</surname><given-names>L</given-names></name><name><surname>Deitch</surname><given-names>D</given-names></name></person-group><year iso-8601-date="2023">2023</year><data-title>zivlab/cell_assemblies: v1.0.1</data-title><source>Zenodo</source><pub-id pub-id-type="doi">10.5281/zenodo.7635972</pub-id></element-citation></p><p><element-citation publication-type="data" specific-use="references" id="dataset2"><person-group person-group-type="author"><name><surname>Jercog</surname><given-names>PE</given-names></name><name><surname>Abbott</surname><given-names>LF</given-names></name><name><surname>Kandel</surname><given-names>ER</given-names></name></person-group><year iso-8601-date="2019">2019</year><data-title>Hippocampal Ca1 neurons recording from mice foraging in threedifferent environments over 10 days</data-title><source>Collaborative Research in Computational Neuroscience</source><pub-id pub-id-type="doi">10.6080/K09W0CP7</pub-id></element-citation></p><p><element-citation publication-type="data" specific-use="references" id="dataset3"><person-group person-group-type="author"><name><surname>Karlsson</surname><given-names>M</given-names></name><name><surname>Carr</surname><given-names>M</given-names></name><name><surname>Frank</surname><given-names>LM</given-names></name></person-group><year iso-8601-date="2015">2015</year><data-title>Simultaneous extracellular recordings from hippocampal areas CA1 and CA3 (or MEC and CA1) from rats performing an alternation task in two W-shapped tracks that are geometrically identically but visually distinct</data-title><source>Collaborative Research in Computational Neuroscience</source><pub-id pub-id-type="doi">10.6080/K0NK3BZJ</pub-id></element-citation></p></sec><ack id="ack"><title>Acknowledgements</title><p>We thank Ron Teichner and Kabir Dabholkar for their comments on the manuscript. This research was supported by the ISRAEL SCIENCE FOUNDATION (grants Nos. 2655/18 and 2183/21 to DD, and 1442/21to OB), by the German-Israeli Foundation (GIF I-1477â421.13/2018) to DD, by a grant from the US-Israel Binational Science Foundation (NIMH-BSF CRCNS BSF:2019807, NIMH:R01 MH125544-01 to DD), by an HFSP research grant (RGP0017/2021) to OB, A Rappaport Institute Collaborative research grant to DD, by Israel PBC-VATAT and by the Technion Center for Machine Learning and Intelligent Systems (MLIS) to DD and OB.</p></ack><ref-list><title>References</title><ref id="bib1"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Aitken</surname><given-names>K</given-names></name><name><surname>Garrett</surname><given-names>M</given-names></name><name><surname>Olsen</surname><given-names>S</given-names></name><name><surname>Mihalas</surname><given-names>S</given-names></name></person-group><year iso-8601-date="2022">2022</year><article-title>The geometry of representational drift in natural and artificial neural networks</article-title><source>PLOS Computational Biology</source><volume>18</volume><elocation-id>e1010716</elocation-id><pub-id pub-id-type="doi">10.1371/journal.pcbi.1010716</pub-id><pub-id pub-id-type="pmid">36441762</pub-id></element-citation></ref><ref id="bib2"><element-citation publication-type="software"><person-group person-group-type="author"><collab>Aviv-Ratzon</collab></person-group><year iso-8601-date="2024">2024</year><data-title>Driftreg</data-title><version designator="swh:1:rev:cb83d928b66401405c26500ab93b4b98ef7b3b67">swh:1:rev:cb83d928b66401405c26500ab93b4b98ef7b3b67</version><source>Software Heritage</source><ext-link ext-link-type="uri" xlink:href="https://archive.softwareheritage.org/swh:1:dir:b6b2c3944401b7c73209f6d4764590e1803399ab;origin=https://github.com/Aviv-Ratzon/DriftReg;visit=swh:1:snp:11f53a04dc530870eab48ae040593316060593ba;anchor=swh:1:rev:cb83d928b66401405c26500ab93b4b98ef7b3b67">https://archive.softwareheritage.org/swh:1:dir:b6b2c3944401b7c73209f6d4764590e1803399ab;origin=https://github.com/Aviv-Ratzon/DriftReg;visit=swh:1:snp:11f53a04dc530870eab48ae040593316060593ba;anchor=swh:1:rev:cb83d928b66401405c26500ab93b4b98ef7b3b67</ext-link></element-citation></ref><ref id="bib3"><element-citation publication-type="preprint"><person-group person-group-type="author"><name><surname>Bengio</surname><given-names>Y</given-names></name><name><surname>Lee</surname><given-names>DH</given-names></name><name><surname>Bornschein</surname><given-names>J</given-names></name><name><surname>Mesnard</surname><given-names>T</given-names></name><name><surname>Lin</surname><given-names>Z</given-names></name></person-group><year iso-8601-date="2015">2015</year><article-title>Towards Biologically Plausible Deep Learning</article-title><source>arXiv</source><ext-link ext-link-type="uri" xlink:href="https://arxiv.org/abs/1502.04156">https://arxiv.org/abs/1502.04156</ext-link></element-citation></ref><ref id="bib4"><element-citation publication-type="confproc"><person-group person-group-type="author"><name><surname>Blanc</surname><given-names>G</given-names></name><name><surname>Gupta</surname><given-names>N</given-names></name><name><surname>Valiant</surname><given-names>G</given-names></name><name><surname>Valiant</surname><given-names>P</given-names></name></person-group><year iso-8601-date="2020">2020</year><article-title>Implicit regularization for deep neural networks driven by an ornstein-uhlenbeck like process</article-title><conf-name>Conference on learning theory</conf-name></element-citation></ref><ref id="bib5"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Brette</surname><given-names>R</given-names></name></person-group><year iso-8601-date="2019">2019</year><article-title>Is coding a relevant metaphor for the brain</article-title><source>Behavioral and Brain Sciences</source><volume>42</volume><elocation-id>e215</elocation-id><pub-id pub-id-type="doi">10.1017/S0140525X19001997</pub-id></element-citation></ref><ref id="bib6"><element-citation publication-type="confproc"><person-group person-group-type="author"><name><surname>Cauwenberghs</surname><given-names>G</given-names></name></person-group><year iso-8601-date="1992">1992</year><article-title>A fast stochastic error-descent algorithm for supervised learning and optimization</article-title><conf-name>Advances in Neural Information Processing Systems</conf-name><fpage>1</fpage><lpage>11</lpage></element-citation></ref><ref id="bib7"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>CodoÃ±er</surname><given-names>FM</given-names></name><name><surname>DarÃ³s</surname><given-names>JA</given-names></name><name><surname>SolÃ©</surname><given-names>RV</given-names></name><name><surname>Elena</surname><given-names>SF</given-names></name></person-group><year iso-8601-date="2006">2006</year><article-title>The fittest versus the flattest: experimental confirmation of the quasispecies effect with subviral pathogens</article-title><source>PLOS Pathogens</source><volume>2</volume><elocation-id>e136</elocation-id><pub-id pub-id-type="doi">10.1371/journal.ppat.0020136</pub-id><pub-id pub-id-type="pmid">17196038</pub-id></element-citation></ref><ref id="bib8"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Deitch</surname><given-names>D</given-names></name><name><surname>Rubin</surname><given-names>A</given-names></name><name><surname>Ziv</surname><given-names>Y</given-names></name></person-group><year iso-8601-date="2021">2021</year><article-title>Representational drift in the mouse visual cortex</article-title><source>Current Biology</source><volume>31</volume><fpage>4327</fpage><lpage>4339</lpage><pub-id pub-id-type="doi">10.1016/j.cub.2021.07.062</pub-id><pub-id pub-id-type="pmid">34433077</pub-id></element-citation></ref><ref id="bib9"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Driscoll</surname><given-names>LN</given-names></name><name><surname>Pettit</surname><given-names>NL</given-names></name><name><surname>Minderer</surname><given-names>M</given-names></name><name><surname>Chettih</surname><given-names>SN</given-names></name><name><surname>Harvey</surname><given-names>CD</given-names></name></person-group><year iso-8601-date="2017">2017</year><article-title>Dynamic reorganization of neuronal activity patterns in parietal cortex</article-title><source>Cell</source><volume>170</volume><fpage>986</fpage><lpage>999</lpage><pub-id pub-id-type="doi">10.1016/j.cell.2017.07.021</pub-id><pub-id pub-id-type="pmid">28823559</pub-id></element-citation></ref><ref id="bib10"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Driscoll</surname><given-names>LN</given-names></name><name><surname>Duncker</surname><given-names>L</given-names></name><name><surname>Harvey</surname><given-names>CD</given-names></name></person-group><year iso-8601-date="2022">2022</year><article-title>Representational drift: Emerging theories for continual learning and experimental future directions</article-title><source>Current Opinion in Neurobiology</source><volume>76</volume><elocation-id>102609</elocation-id><pub-id pub-id-type="doi">10.1016/j.conb.2022.102609</pub-id><pub-id pub-id-type="pmid">35939861</pub-id></element-citation></ref><ref id="bib11"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Geva</surname><given-names>N</given-names></name><name><surname>Deitch</surname><given-names>D</given-names></name><name><surname>Rubin</surname><given-names>A</given-names></name><name><surname>Ziv</surname><given-names>Y</given-names></name></person-group><year iso-8601-date="2023">2023</year><article-title>Time and experience differentially affect distinct aspects of hippocampal representational drift</article-title><source>Neuron</source><volume>111</volume><fpage>2357</fpage><lpage>2366</lpage><pub-id pub-id-type="doi">10.1016/j.neuron.2023.05.005</pub-id><pub-id pub-id-type="pmid">37315556</pub-id></element-citation></ref><ref id="bib12"><element-citation publication-type="web"><person-group person-group-type="author"><name><surname>Hinton</surname><given-names>G</given-names></name><name><surname>Srivastava</surname><given-names>N</given-names></name><name><surname>Swersky</surname><given-names>K</given-names></name></person-group><year iso-8601-date="2012">2012</year><article-title>Neural networks for machine learning. Lecture 6a Overview of mini-batch gradient descent</article-title><ext-link ext-link-type="uri" xlink:href="http://www.cs.toronto.edu/~tijmen/csc321/slides/lecture_slides_lec6.pdf">http://www.cs.toronto.edu/~tijmen/csc321/slides/lecture_slides_lec6.pdf</ext-link><date-in-citation iso-8601-date="2023-11-05">November 5, 2023</date-in-citation></element-citation></ref><ref id="bib13"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Hubel</surname><given-names>DH</given-names></name><name><surname>Wiesel</surname><given-names>TN</given-names></name></person-group><year iso-8601-date="1962">1962</year><article-title>Receptive fields, binocular interaction and functional architecture in the catâs visual cortex</article-title><source>The Journal of Physiology</source><volume>160</volume><fpage>106</fpage><lpage>154</lpage><pub-id pub-id-type="doi">10.1113/jphysiol.1962.sp006837</pub-id><pub-id pub-id-type="pmid">14449617</pub-id></element-citation></ref><ref id="bib14"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Jacobson</surname><given-names>GA</given-names></name><name><surname>Rupprecht</surname><given-names>P</given-names></name><name><surname>Friedrich</surname><given-names>RW</given-names></name></person-group><year iso-8601-date="2018">2018</year><article-title>Experience-dependent plasticity of odor representations in the telencephalon of zebrafish</article-title><source>Current Biology</source><volume>28</volume><fpage>1</fpage><lpage>14</lpage><pub-id pub-id-type="doi">10.1016/j.cub.2017.11.007</pub-id><pub-id pub-id-type="pmid">29249662</pub-id></element-citation></ref><ref id="bib15"><element-citation publication-type="software"><person-group person-group-type="author"><name><surname>Jercog</surname><given-names>PE</given-names></name><name><surname>Abbott</surname><given-names>LF</given-names></name><name><surname>Kandel</surname><given-names>ER</given-names></name></person-group><year iso-8601-date="2019">2019a</year><data-title>Hippocampal Ca1 neurons recording from mice foraging in three different environments over 10 days</data-title><version designator="hc-22">hc-22</version><source>CRCNS.Org</source></element-citation></ref><ref id="bib16"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Jercog</surname><given-names>PE</given-names></name><name><surname>Ahmadian</surname><given-names>Y</given-names></name><name><surname>Woodruff</surname><given-names>C</given-names></name><name><surname>Deb-Sen</surname><given-names>R</given-names></name><name><surname>Abbott</surname><given-names>LF</given-names></name><name><surname>Kandel</surname><given-names>ER</given-names></name></person-group><year iso-8601-date="2019">2019b</year><article-title>Heading direction with respect to a reference point modulates place-cell activity</article-title><source>Nature Communications</source><volume>10</volume><elocation-id>2333</elocation-id><pub-id pub-id-type="doi">10.1038/s41467-019-10139-7</pub-id><pub-id pub-id-type="pmid">31133685</pub-id></element-citation></ref><ref id="bib17"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Kappel</surname><given-names>D</given-names></name><name><surname>Habenschuss</surname><given-names>S</given-names></name><name><surname>Legenstein</surname><given-names>R</given-names></name><name><surname>Maass</surname><given-names>W</given-names></name></person-group><year iso-8601-date="2015">2015</year><article-title>Network plasticity as bayesian inference</article-title><source>PLOS Computational Biology</source><volume>11</volume><elocation-id>e1004485</elocation-id><pub-id pub-id-type="doi">10.1371/journal.pcbi.1004485</pub-id><pub-id pub-id-type="pmid">26545099</pub-id></element-citation></ref><ref id="bib18"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Karlsson</surname><given-names>MP</given-names></name><name><surname>Frank</surname><given-names>LM</given-names></name></person-group><year iso-8601-date="2008">2008</year><article-title>Network dynamics underlying the formation of sparse, informative representations in the hippocampus</article-title><source>The Journal of Neuroscience</source><volume>28</volume><fpage>14271</fpage><lpage>14281</lpage><pub-id pub-id-type="doi">10.1523/JNEUROSCI.4261-08.2008</pub-id><pub-id pub-id-type="pmid">19109508</pub-id></element-citation></ref><ref id="bib19"><element-citation publication-type="software"><person-group person-group-type="author"><name><surname>Karlsson</surname><given-names>M</given-names></name><name><surname>Carr</surname><given-names>M</given-names></name><name><surname>Frank</surname><given-names>LM</given-names></name></person-group><year iso-8601-date="2015">2015</year><data-title>Simultaneous extracellular recordings from hippocampal areas Ca1 and Ca3 (or MEC and Ca1) from rats performing an alternation task in two W-Shapped tracks that are geometrically identically but visually distinct</data-title><version designator="hc-6">hc-6</version><source>CRCNS</source></element-citation></ref><ref id="bib20"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Khatib</surname><given-names>D</given-names></name><name><surname>Ratzon</surname><given-names>A</given-names></name><name><surname>Sellevoll</surname><given-names>M</given-names></name><name><surname>Barak</surname><given-names>O</given-names></name><name><surname>Morris</surname><given-names>G</given-names></name><name><surname>Derdikman</surname><given-names>D</given-names></name></person-group><year iso-8601-date="2023">2023</year><article-title>Active experience, not time, determines within-day representational drift in dorsal CA1</article-title><source>Neuron</source><volume>111</volume><fpage>2348</fpage><lpage>2356</lpage><pub-id pub-id-type="doi">10.1016/j.neuron.2023.05.014</pub-id><pub-id pub-id-type="pmid">37315557</pub-id></element-citation></ref><ref id="bib21"><element-citation publication-type="preprint"><person-group person-group-type="author"><name><surname>Kingma</surname><given-names>DP</given-names></name><name><surname>Ba</surname><given-names>J</given-names></name></person-group><year iso-8601-date="2014">2014</year><article-title>Adam: A Method for Stochastic Optimization</article-title><source>arXiv</source><ext-link ext-link-type="uri" xlink:href="https://arxiv.org/abs/1412.6980">https://arxiv.org/abs/1412.6980</ext-link></element-citation></ref><ref id="bib22"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Kossio</surname><given-names>YFK</given-names></name><name><surname>Goedeke</surname><given-names>S</given-names></name><name><surname>Klos</surname><given-names>C</given-names></name><name><surname>Memmesheimer</surname><given-names>R-M</given-names></name></person-group><year iso-8601-date="2021">2021</year><article-title>Drifting assemblies for persistent memory: Neuron transitions and unsupervised compensation</article-title><source>PNAS</source><volume>118</volume><elocation-id>e2023832118</elocation-id><pub-id pub-id-type="doi">10.1073/pnas.2023832118</pub-id><pub-id pub-id-type="pmid">34772802</pub-id></element-citation></ref><ref id="bib23"><element-citation publication-type="preprint"><person-group person-group-type="author"><name><surname>Li</surname><given-names>Z</given-names></name><name><surname>Wang</surname><given-names>T</given-names></name><name><surname>Arora</surname><given-names>S</given-names></name></person-group><year iso-8601-date="2021">2021</year><article-title>What Happens after Sgd Reaches Zero Loss?âA Mathematical Framework</article-title><source>arXiv</source><ext-link ext-link-type="uri" xlink:href="https://arxiv.org/abs/2110.06914">https://arxiv.org/abs/2110.06914</ext-link></element-citation></ref><ref id="bib24"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Liberti</surname><given-names>WA</given-names></name><name><surname>Schmid</surname><given-names>TA</given-names></name><name><surname>Forli</surname><given-names>A</given-names></name><name><surname>Snyder</surname><given-names>M</given-names></name><name><surname>Yartsev</surname><given-names>MM</given-names></name></person-group><year iso-8601-date="2022">2022</year><article-title>Publisher Correction: A stable hippocampal code in freely flying bats</article-title><source>Nature</source><volume>606</volume><elocation-id>E6</elocation-id><pub-id pub-id-type="doi">10.1038/s41586-022-04885-w</pub-id><pub-id pub-id-type="pmid">35637387</pub-id></element-citation></ref><ref id="bib25"><element-citation publication-type="confproc"><person-group person-group-type="author"><name><surname>Liu</surname><given-names>YH</given-names></name><name><surname>Ghosh</surname><given-names>A</given-names></name><name><surname>Richards</surname><given-names>B</given-names></name><name><surname>Shea-Brown</surname><given-names>E</given-names></name><name><surname>Lajoie</surname><given-names>G</given-names></name></person-group><year iso-8601-date="2022">2022</year><article-title>Beyond accuracy: generalization properties of bio-plausible temporal credit assignment rules</article-title><conf-name>Advances in Neural Information Processing Systems</conf-name><fpage>23077</fpage><lpage>23097</lpage></element-citation></ref><ref id="bib26"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Low</surname><given-names>II</given-names></name><name><surname>Giocomo</surname><given-names>LM</given-names></name><name><surname>Williams</surname><given-names>AH</given-names></name></person-group><year iso-8601-date="2023">2023</year><article-title>Remapping in a recurrent neural network model of navigation and context inference</article-title><source>eLife</source><volume>12</volume><elocation-id>RP86943</elocation-id><pub-id pub-id-type="doi">10.7554/eLife.86943</pub-id><pub-id pub-id-type="pmid">37410093</pub-id></element-citation></ref><ref id="bib27"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Mankin</surname><given-names>EA</given-names></name><name><surname>Sparks</surname><given-names>FT</given-names></name><name><surname>Slayyeh</surname><given-names>B</given-names></name><name><surname>Sutherland</surname><given-names>RJ</given-names></name><name><surname>Leutgeb</surname><given-names>S</given-names></name><name><surname>Leutgeb</surname><given-names>JK</given-names></name></person-group><year iso-8601-date="2012">2012</year><article-title>Neuronal code for extended time in the hippocampus</article-title><source>PNAS</source><volume>109</volume><fpage>19462</fpage><lpage>19467</lpage><pub-id pub-id-type="doi">10.1073/pnas.1214107109</pub-id><pub-id pub-id-type="pmid">23132944</pub-id></element-citation></ref><ref id="bib28"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Marblestone</surname><given-names>AH</given-names></name><name><surname>Wayne</surname><given-names>G</given-names></name><name><surname>Kording</surname><given-names>KP</given-names></name></person-group><year iso-8601-date="2016">2016</year><article-title>Toward an integration of deep learning and neuroscience</article-title><source>Frontiers in Computational Neuroscience</source><volume>10</volume><elocation-id>94</elocation-id><pub-id pub-id-type="doi">10.3389/fncom.2016.00094</pub-id><pub-id pub-id-type="pmid">27683554</pub-id></element-citation></ref><ref id="bib29"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Marschall</surname><given-names>O</given-names></name><name><surname>Cho</surname><given-names>K</given-names></name><name><surname>Savin</surname><given-names>C</given-names></name></person-group><year iso-8601-date="2020">2020</year><article-title>A unified framework of online learning algorithms for training recurrent neural networks</article-title><source>The Journal of Machine Learning Research</source><volume>21</volume><fpage>5320</fpage><lpage>5353</lpage></element-citation></ref><ref id="bib30"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>McNaughton</surname><given-names>BL</given-names></name><name><surname>Mizumori</surname><given-names>SJ</given-names></name><name><surname>Barnes</surname><given-names>CA</given-names></name><name><surname>Leonard</surname><given-names>BJ</given-names></name><name><surname>Marquis</surname><given-names>M</given-names></name><name><surname>Green</surname><given-names>EJ</given-names></name></person-group><year iso-8601-date="1994">1994</year><article-title>Cortical representation of motion during unrestrained spatial navigation in the rat</article-title><source>Cerebral Cortex</source><volume>4</volume><fpage>27</fpage><lpage>39</lpage><pub-id pub-id-type="doi">10.1093/cercor/4.1.27</pub-id><pub-id pub-id-type="pmid">8180489</pub-id></element-citation></ref><ref id="bib31"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Mongillo</surname><given-names>G</given-names></name><name><surname>Rumpel</surname><given-names>S</given-names></name><name><surname>Loewenstein</surname><given-names>Y</given-names></name></person-group><year iso-8601-date="2017">2017</year><article-title>Intrinsic volatility of synaptic connections - a challenge to the synaptic trace theory of memory</article-title><source>Current Opinion in Neurobiology</source><volume>46</volume><fpage>7</fpage><lpage>13</lpage><pub-id pub-id-type="doi">10.1016/j.conb.2017.06.006</pub-id><pub-id pub-id-type="pmid">28710971</pub-id></element-citation></ref><ref id="bib32"><element-citation publication-type="confproc"><person-group person-group-type="author"><name><surname>Mulayoff</surname><given-names>R</given-names></name><name><surname>Michaeli</surname><given-names>T</given-names></name><name><surname>Soudry</surname><given-names>D</given-names></name></person-group><year iso-8601-date="2021">2021</year><article-title>The implicit bias of minima stability: A view from function space</article-title><conf-name>Advances in Neural Information Processing Systems</conf-name><fpage>17749</fpage><lpage>17761</lpage></element-citation></ref><ref id="bib33"><element-citation publication-type="preprint"><person-group person-group-type="author"><name><surname>Nacson</surname><given-names>MS</given-names></name><name><surname>Mulayoff</surname><given-names>R</given-names></name><name><surname>Ongie</surname><given-names>G</given-names></name><name><surname>Michaeli</surname><given-names>T</given-names></name><name><surname>Soudry</surname><given-names>D</given-names></name></person-group><year iso-8601-date="2023">2023</year><article-title>The Implicit Bias of Minima Stability in Multivariate Shallow Relu Networks</article-title><source>arXiv</source><ext-link ext-link-type="uri" xlink:href="https://arxiv.org/abs/2306.17499">https://arxiv.org/abs/2306.17499</ext-link></element-citation></ref><ref id="bib34"><element-citation publication-type="preprint"><person-group person-group-type="author"><name><surname>Nguyen</surname><given-names>ND</given-names></name><name><surname>Lutas</surname><given-names>A</given-names></name><name><surname>Fernando</surname><given-names>J</given-names></name><name><surname>Vergara</surname><given-names>J</given-names></name><name><surname>McMahon</surname><given-names>J</given-names></name><name><surname>Dimidschstein</surname><given-names>J</given-names></name><name><surname>Andermann</surname><given-names>ML</given-names></name></person-group><year iso-8601-date="2022">2022</year><article-title>Cortical Reactivations Predict Future Sensory Responses</article-title><source>bioRxiv</source><pub-id pub-id-type="doi">10.1101/2022.11.14.516421</pub-id></element-citation></ref><ref id="bib35"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>OâKeefe</surname><given-names>J</given-names></name><name><surname>Dostrovsky</surname><given-names>J</given-names></name></person-group><year iso-8601-date="1971">1971</year><article-title>The hippocampus as a spatial map. Preliminary evidence from unit activity in the freely-moving rat</article-title><source>Brain Research</source><volume>34</volume><fpage>171</fpage><lpage>175</lpage><pub-id pub-id-type="doi">10.1016/0006-8993(71)90358-1</pub-id></element-citation></ref><ref id="bib36"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Oâkeefe</surname><given-names>J</given-names></name><name><surname>Nadel</surname><given-names>L</given-names></name></person-group><year iso-8601-date="1979">1979</year><article-title>The hippocampus as a cognitive map</article-title><source>Behavioral and Brain Sciences</source><volume>2</volume><fpage>487</fpage><lpage>494</lpage><pub-id pub-id-type="doi">10.1017/S0140525X00063949</pub-id></element-citation></ref><ref id="bib37"><element-citation publication-type="preprint"><person-group person-group-type="author"><name><surname>Pashakhanloo</surname><given-names>F</given-names></name><name><surname>Koulakov</surname><given-names>A</given-names></name></person-group><year iso-8601-date="2023">2023</year><article-title>Stochastic Gradient Descent-Induced Drift of Representation in a Two-Layer Neural Network</article-title><source>arXiv</source><ext-link ext-link-type="uri" xlink:href="https://arxiv.org/abs/2302.02563">https://arxiv.org/abs/2302.02563</ext-link></element-citation></ref><ref id="bib38"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Qin</surname><given-names>S</given-names></name><name><surname>Farashahi</surname><given-names>S</given-names></name><name><surname>Lipshutz</surname><given-names>D</given-names></name><name><surname>Sengupta</surname><given-names>AM</given-names></name><name><surname>Chklovskii</surname><given-names>DB</given-names></name><name><surname>Pehlevan</surname><given-names>C</given-names></name></person-group><year iso-8601-date="2023">2023</year><article-title>Coordinated drift of receptive fields in Hebbian/anti-Hebbian network models during noisy representation learning</article-title><source>Nature Neuroscience</source><volume>26</volume><fpage>339</fpage><lpage>349</lpage><pub-id pub-id-type="doi">10.1038/s41593-022-01225-z</pub-id><pub-id pub-id-type="pmid">36635497</pub-id></element-citation></ref><ref id="bib39"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Recanatesi</surname><given-names>S</given-names></name><name><surname>Farrell</surname><given-names>M</given-names></name><name><surname>Lajoie</surname><given-names>G</given-names></name><name><surname>Deneve</surname><given-names>S</given-names></name><name><surname>Rigotti</surname><given-names>M</given-names></name><name><surname>Shea-Brown</surname><given-names>E</given-names></name></person-group><year iso-8601-date="2021">2021</year><article-title>Predictive learning as a network mechanism for extracting low-dimensional latent space representations</article-title><source>Nature Communications</source><volume>12</volume><elocation-id>1417</elocation-id><pub-id pub-id-type="doi">10.1038/s41467-021-21696-1</pub-id><pub-id pub-id-type="pmid">33658520</pub-id></element-citation></ref><ref id="bib40"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Richards</surname><given-names>BA</given-names></name><name><surname>Lillicrap</surname><given-names>TP</given-names></name><name><surname>Beaudoin</surname><given-names>P</given-names></name><name><surname>Bengio</surname><given-names>Y</given-names></name><name><surname>Bogacz</surname><given-names>R</given-names></name><name><surname>Christensen</surname><given-names>A</given-names></name><name><surname>Clopath</surname><given-names>C</given-names></name><name><surname>Costa</surname><given-names>RP</given-names></name><name><surname>de Berker</surname><given-names>A</given-names></name><name><surname>Ganguli</surname><given-names>S</given-names></name><name><surname>Gillon</surname><given-names>CJ</given-names></name><name><surname>Hafner</surname><given-names>D</given-names></name><name><surname>Kepecs</surname><given-names>A</given-names></name><name><surname>Kriegeskorte</surname><given-names>N</given-names></name><name><surname>Latham</surname><given-names>P</given-names></name><name><surname>Lindsay</surname><given-names>GW</given-names></name><name><surname>Miller</surname><given-names>KD</given-names></name><name><surname>Naud</surname><given-names>R</given-names></name><name><surname>Pack</surname><given-names>CC</given-names></name><name><surname>Poirazi</surname><given-names>P</given-names></name><name><surname>Roelfsema</surname><given-names>P</given-names></name><name><surname>Sacramento</surname><given-names>J</given-names></name><name><surname>Saxe</surname><given-names>A</given-names></name><name><surname>Scellier</surname><given-names>B</given-names></name><name><surname>Schapiro</surname><given-names>AC</given-names></name><name><surname>Senn</surname><given-names>W</given-names></name><name><surname>Wayne</surname><given-names>G</given-names></name><name><surname>Yamins</surname><given-names>D</given-names></name><name><surname>Zenke</surname><given-names>F</given-names></name><name><surname>Zylberberg</surname><given-names>J</given-names></name><name><surname>Therien</surname><given-names>D</given-names></name><name><surname>Kording</surname><given-names>KP</given-names></name></person-group><year iso-8601-date="2019">2019</year><article-title>A deep learning framework for neuroscience</article-title><source>Nature Neuroscience</source><volume>22</volume><fpage>1761</fpage><lpage>1770</lpage><pub-id pub-id-type="doi">10.1038/s41593-019-0520-2</pub-id><pub-id pub-id-type="pmid">31659335</pub-id></element-citation></ref><ref id="bib41"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Rokni</surname><given-names>U</given-names></name><name><surname>Richardson</surname><given-names>AG</given-names></name><name><surname>Bizzi</surname><given-names>E</given-names></name><name><surname>Seung</surname><given-names>HS</given-names></name></person-group><year iso-8601-date="2007">2007</year><article-title>Motor learning with unstable neural representations</article-title><source>Neuron</source><volume>54</volume><fpage>653</fpage><lpage>666</lpage><pub-id pub-id-type="doi">10.1016/j.neuron.2007.04.030</pub-id><pub-id pub-id-type="pmid">17521576</pub-id></element-citation></ref><ref id="bib42"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Rubin</surname><given-names>A</given-names></name><name><surname>Geva</surname><given-names>N</given-names></name><name><surname>Sheintuch</surname><given-names>L</given-names></name><name><surname>Ziv</surname><given-names>Y</given-names></name></person-group><year iso-8601-date="2015">2015</year><article-title>Hippocampal ensemble dynamics timestamp events in long-term memory</article-title><source>eLife</source><volume>4</volume><elocation-id>e12247</elocation-id><pub-id pub-id-type="doi">10.7554/eLife.12247</pub-id><pub-id pub-id-type="pmid">26682652</pub-id></element-citation></ref><ref id="bib43"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Rule</surname><given-names>ME</given-names></name><name><surname>OâLeary</surname><given-names>T</given-names></name><name><surname>Harvey</surname><given-names>CD</given-names></name></person-group><year iso-8601-date="2019">2019</year><article-title>Causes and consequences of representational drift</article-title><source>Current Opinion in Neurobiology</source><volume>58</volume><fpage>141</fpage><lpage>147</lpage><pub-id pub-id-type="doi">10.1016/j.conb.2019.08.005</pub-id><pub-id pub-id-type="pmid">31569062</pub-id></element-citation></ref><ref id="bib44"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Sadeh</surname><given-names>S</given-names></name><name><surname>Clopath</surname><given-names>C</given-names></name></person-group><year iso-8601-date="2022">2022</year><article-title>Contribution of behavioural variability to representational drift</article-title><source>eLife</source><volume>11</volume><elocation-id>e77907</elocation-id><pub-id pub-id-type="doi">10.7554/eLife.77907</pub-id><pub-id pub-id-type="pmid">36040010</pub-id></element-citation></ref><ref id="bib45"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Sanders</surname><given-names>H</given-names></name><name><surname>Wilson</surname><given-names>MA</given-names></name><name><surname>Gershman</surname><given-names>SJ</given-names></name></person-group><year iso-8601-date="2020">2020</year><article-title>Hippocampal remapping as hidden state inference</article-title><source>eLife</source><volume>9</volume><elocation-id>e51140</elocation-id><pub-id pub-id-type="doi">10.7554/eLife.51140</pub-id><pub-id pub-id-type="pmid">32515352</pub-id></element-citation></ref><ref id="bib46"><element-citation publication-type="preprint"><person-group person-group-type="author"><name><surname>Saxe</surname><given-names>AM</given-names></name><name><surname>McClelland</surname><given-names>JL</given-names></name><name><surname>Ganguli</surname><given-names>S</given-names></name></person-group><year iso-8601-date="2013">2013</year><article-title>Exact Solutions to the Nonlinear Dynamics of Learning in Deep Linear Neural Networks</article-title><source>arXiv</source><ext-link ext-link-type="uri" xlink:href="https://arxiv.org/abs/1312.6120">https://arxiv.org/abs/1312.6120</ext-link></element-citation></ref><ref id="bib47"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Saxe</surname><given-names>A</given-names></name><name><surname>Nelli</surname><given-names>S</given-names></name><name><surname>Summerfield</surname><given-names>C</given-names></name></person-group><year iso-8601-date="2021">2021</year><article-title>If deep learning is the answer, what is the question?</article-title><source>Nature Reviews. Neuroscience</source><volume>22</volume><fpage>55</fpage><lpage>67</lpage><pub-id pub-id-type="doi">10.1038/s41583-020-00395-8</pub-id><pub-id pub-id-type="pmid">33199854</pub-id></element-citation></ref><ref id="bib48"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Schoonover</surname><given-names>CE</given-names></name><name><surname>Ohashi</surname><given-names>SN</given-names></name><name><surname>Axel</surname><given-names>R</given-names></name><name><surname>Fink</surname><given-names>AJP</given-names></name></person-group><year iso-8601-date="2021">2021</year><article-title>Representational drift in primary olfactory cortex</article-title><source>Nature</source><volume>594</volume><fpage>541</fpage><lpage>546</lpage><pub-id pub-id-type="doi">10.1038/s41586-021-03628-7</pub-id><pub-id pub-id-type="pmid">34108681</pub-id></element-citation></ref><ref id="bib49"><element-citation publication-type="confproc"><person-group person-group-type="author"><name><surname>Schuessler</surname><given-names>F</given-names></name><name><surname>Mastrogiuseppe</surname><given-names>F</given-names></name><name><surname>Dubreuil</surname><given-names>A</given-names></name><name><surname>Ostojic</surname><given-names>S</given-names></name><name><surname>Barak</surname><given-names>O</given-names></name></person-group><year iso-8601-date="2020">2020</year><article-title>The interplay between randomness and structure during learning in rnns</article-title><conf-name>Advances in Neural Information Processing Systems</conf-name><fpage>13352</fpage><lpage>13362</lpage></element-citation></ref><ref id="bib50"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Sheintuch</surname><given-names>L</given-names></name><name><surname>Rubin</surname><given-names>A</given-names></name><name><surname>Ziv</surname><given-names>Y</given-names></name></person-group><year iso-8601-date="2022">2022</year><article-title>Bias-free estimation of information content in temporally sparse neuronal activity</article-title><source>PLOS Computational Biology</source><volume>18</volume><elocation-id>e1009832</elocation-id><pub-id pub-id-type="doi">10.1371/journal.pcbi.1009832</pub-id><pub-id pub-id-type="pmid">35148310</pub-id></element-citation></ref><ref id="bib51"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Sheintuch</surname><given-names>L</given-names></name><name><surname>Geva</surname><given-names>N</given-names></name><name><surname>Deitch</surname><given-names>D</given-names></name><name><surname>Rubin</surname><given-names>A</given-names></name><name><surname>Ziv</surname><given-names>Y</given-names></name></person-group><year iso-8601-date="2023">2023</year><article-title>Organization of hippocampal CA3 into correlated cell assemblies supports a stable spatial code</article-title><source>Cell Reports</source><volume>42</volume><elocation-id>112119</elocation-id><pub-id pub-id-type="doi">10.1016/j.celrep.2023.112119</pub-id><pub-id pub-id-type="pmid">36807137</pub-id></element-citation></ref><ref id="bib52"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Susman</surname><given-names>L</given-names></name><name><surname>Brenner</surname><given-names>N</given-names></name><name><surname>Barak</surname><given-names>O</given-names></name></person-group><year iso-8601-date="2019">2019</year><article-title>Stable memory with unstable synapses</article-title><source>Nature Communications</source><volume>10</volume><elocation-id>4441</elocation-id><pub-id pub-id-type="doi">10.1038/s41467-019-12306-2</pub-id><pub-id pub-id-type="pmid">31570719</pub-id></element-citation></ref><ref id="bib53"><element-citation publication-type="confproc"><person-group person-group-type="author"><name><surname>Turner</surname><given-names>E</given-names></name><name><surname>Dabholkar</surname><given-names>KV</given-names></name><name><surname>Barak</surname><given-names>O</given-names></name></person-group><year iso-8601-date="2021">2021</year><article-title>Charting and navigating the space of solutions for recurrent neural networks</article-title><conf-name>Advances in Neural Information Processing Systems</conf-name><fpage>25320</fpage><lpage>25333</lpage></element-citation></ref><ref id="bib54"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Yang</surname><given-names>N</given-names></name><name><surname>Tang</surname><given-names>C</given-names></name><name><surname>Tu</surname><given-names>Y</given-names></name></person-group><year iso-8601-date="2023">2023</year><article-title>Stochastic gradient descent introduces an effective landscape-dependent regularization favoring flat solutions</article-title><source>Physical Review Letters</source><volume>130</volume><elocation-id>237101</elocation-id><pub-id pub-id-type="doi">10.1103/PhysRevLett.130.237101</pub-id><pub-id pub-id-type="pmid">37354404</pub-id></element-citation></ref><ref id="bib55"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Ziv</surname><given-names>Y</given-names></name><name><surname>Burns</surname><given-names>LD</given-names></name><name><surname>Cocker</surname><given-names>ED</given-names></name><name><surname>Hamel</surname><given-names>EO</given-names></name><name><surname>Ghosh</surname><given-names>KK</given-names></name><name><surname>Kitch</surname><given-names>LJ</given-names></name><name><surname>El Gamal</surname><given-names>A</given-names></name><name><surname>Schnitzer</surname><given-names>MJ</given-names></name></person-group><year iso-8601-date="2013">2013</year><article-title>Long-term dynamics of CA1 hippocampal place codes</article-title><source>Nature Neuroscience</source><volume>16</volume><fpage>264</fpage><lpage>266</lpage><pub-id pub-id-type="doi">10.1038/nn.3329</pub-id><pub-id pub-id-type="pmid">23396101</pub-id></element-citation></ref><ref id="bib56"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Ziv</surname><given-names>NE</given-names></name><name><surname>Brenner</surname><given-names>N</given-names></name></person-group><year iso-8601-date="2018">2018</year><article-title>Synaptic tenacity or lack thereof: Spontaneous remodeling of synapses</article-title><source>Trends in Neurosciences</source><volume>41</volume><fpage>89</fpage><lpage>99</lpage><pub-id pub-id-type="doi">10.1016/j.tins.2017.12.003</pub-id><pub-id pub-id-type="pmid">29275902</pub-id></element-citation></ref><ref id="bib57"><element-citation publication-type="software"><person-group person-group-type="author"><collab>zivlab</collab></person-group><year iso-8601-date="2023">2023</year><data-title>Cell_Assemblies</data-title><version designator="swh:1:rev:301723c166e133f228265de4f29ed6f28885189c">swh:1:rev:301723c166e133f228265de4f29ed6f28885189c</version><source>Software Heritage</source><ext-link ext-link-type="uri" xlink:href="https://archive.softwareheritage.org/swh:1:dir:0fe62ea915a756bed225726ebc3993141a0de85c;origin=https://github.com/zivlab/cell_assemblies;visit=swh:1:snp:c2d203859dc79b7fcf4bcaaa73afbf0a11a0cdd1;anchor=swh:1:rev:301723c166e133f228265de4f29ed6f28885189c">https://archive.softwareheritage.org/swh:1:dir:0fe62ea915a756bed225726ebc3993141a0de85c;origin=https://github.com/zivlab/cell_assemblies;visit=swh:1:snp:c2d203859dc79b7fcf4bcaaa73afbf0a11a0cdd1;anchor=swh:1:rev:301723c166e133f228265de4f29ed6f28885189c</ext-link></element-citation></ref></ref-list></back><sub-article article-type="editor-report" id="sa0"><front-stub><article-id pub-id-type="doi">10.7554/eLife.90069.3.sa0</article-id><title-group><article-title>eLife assessment</article-title></title-group><contrib-group><contrib contrib-type="author"><name><surname>Peyrache</surname><given-names>Adrien</given-names></name><role specific-use="editor">Reviewing Editor</role><aff><institution>McGill University</institution><country>Canada</country></aff></contrib></contrib-group><kwd-group kwd-group-type="evidence-strength"><kwd>Convincing</kwd></kwd-group><kwd-group kwd-group-type="claim-importance"><kwd>Important</kwd></kwd-group></front-stub><body><p>This study presents a new and <bold>important</bold> theoretical account of spatial representational drift in the hippocampus. The evidence supporting the claims is <bold>convincing</bold>, with a clear and accessible explanation of the phenomenon. Overall, this study will likely attract researchers exploring learning and representation in both biological and artificial neural networks.</p></body></sub-article><sub-article article-type="referee-report" id="sa1"><front-stub><article-id pub-id-type="doi">10.7554/eLife.90069.3.sa1</article-id><title-group><article-title>Reviewer #1 (Public Review):</article-title></title-group><contrib-group><contrib contrib-type="author"><anonymous/><role specific-use="referee">Reviewer</role></contrib></contrib-group></front-stub><body><p>The authors start from the premise that neural circuits exhibit &quot;representational drift&quot; -- i.e., slow and spontaneous changes in neural tuning despite constant network performance. While the extent to which biological systems exhibit drift is an active area of study and debate (as the authors acknowledge), there is enough interest in this topic to justify the development of theoretical models of drift.</p><p>The contribution of this paper is to claim that drift can reflect a mixture of &quot;directed random motion&quot; as well as &quot;steady state null drift.&quot; Thus far, most work within the computational neuroscience literature has focused on the latter. That is, drift is often viewed to be a harmless byproduct of continual learning under noise. In this view, drift does not affect the performance of the circuit nor does it change the nature of the network's solution or representation of the environment. The authors aim to challenge the latter viewpoint by showing that the statistics of neural representations can change (e.g. increase in sparsity) during early stages of drift. Further, they interpret this directed form of drift as &quot;implicit regularization&quot; on the network.</p><p>The evidence presented in favor of these claims is concise, but on balance I find their evidence persuasive, at least in artificial network models. This paper includes a brief analysis of four independent experiments in Figure 3, which corroborates the main claims of the paper. Future work should dig deeper into the experimental data to provide a finer grained characterization. For example, in addition to quantifying the overall number of active units, it would be interesting to track changes in the signal-to-noise ratio of each place field, the widths of the place fields, et cetera.</p><p>To establish the possibility of implicit regularization in artificial networks, the authors cite convincing work from the machine learning community (Blanc et al. 2020, Li et al., 2021). Here the authors make an important contribution by translating these findings into more biologically plausible models and showing that their core assumptions remain plausible. The authors also develop helpful intuition in Figure 5 by showing a minimal model that captures the essence of their result.</p></body></sub-article><sub-article article-type="referee-report" id="sa2"><front-stub><article-id pub-id-type="doi">10.7554/eLife.90069.3.sa2</article-id><title-group><article-title>Reviewer #2 (Public Review):</article-title></title-group><contrib-group><contrib contrib-type="author"><anonymous/><role specific-use="referee">Reviewer</role></contrib></contrib-group></front-stub><body><p>Summary:</p><p>In the manuscript &quot;Representational drift as a result of implicit regularization&quot; the authors study the phenomenon of representational drift (RD) in the context of an artificial network which is trained in a predictive coding framework. When trained on a task for spatial navigation on a linear track, they found that a stochastic gradient descent algorithm led to a fast initial convergence to spatially tuned units, but then to a second very slow, yet directed drift which sparsified the representation while increasing the spatial information. They finally show that this separation of time-scales is a robust phenomenon and occurs for a number of distinct learning rules.</p><p>This is a very clearly written and insightful paper, and I think people in the community will benefit from understanding how RD can emerge in such artificial networks. The mechanism underlying RD in these models is clearly laid out and the explanation given is convincing.</p><p>It still remains unclear how this mechanism may account for the learning of multiple environments, although this is perhaps a topic for future study. The non-stationarity of the drift in this framework would seem, at first blush, to contrast with what one sees experimentally, but the authors provide compelling evidence that there are continuous changes in network properties during learning and that stationarity may be the hallmark of overfamiliarized environments. Future experimental work may further shed light on differences in RD between novel and familiar environments.</p></body></sub-article><sub-article article-type="referee-report" id="sa3"><front-stub><article-id pub-id-type="doi">10.7554/eLife.90069.3.sa3</article-id><title-group><article-title>Reviewer #3 (Public Review):</article-title></title-group><contrib-group><contrib contrib-type="author"><anonymous/><role specific-use="referee">Reviewer</role></contrib></contrib-group></front-stub><body><p>Summary:</p><p>Single unit neural activity tuned to environmental or behavioral variables gradually changes over time. This phenomenon, called representational drift, occurs even when all external variables remain constant, and challenges the idea that stable neural activity supports the performance of well-learned behaviors. While a number of studies have described representational drift across multiple brain regions, our understanding of the underlying mechanism driving drift is limited. Ratzon et al. propose that implicit regularization - which occurs when machine learning networks continue to reconfigure after reaching an optimal solution - could provide insights into why and how drift occurs in neurons. To test this theory, Ratzon et al. trained a recurrent neural network (RNN) trained to perform the oft-utilized linear track behavioral paradigm and compare the changes in hidden layer units to those observed in hippocampal place cells recorded in awake, behaving animals.</p><p>Ratzon et al. clearly demonstrate that hidden layer units in their model undergo consistent changes even after the task is well-learned, mirroring representational drift observed in real hippocampal neurons. They show that the drift occurs across three separate measures: the active proportion of units (referred to as sparsification), spatial information of units, and correlation of spatial activity. They continue to address the conditions and parameters under which drift occurs in their model to assess the generalizability of their findings to non-spatial tasks. Last, they investigate the mechanism through which sparsification occurs, showing that flatness of the manifold near the solution can influence how the network reconfigures. The authors suggest that their findings indicate a three stage learning process: (1) fast initial learning followed by (2) directed motion along a manifold which transitions to (3) undirected motion along a manifold.</p><p>Overall, the authors' results support the main conclusion that implicit regularization in machine learning networks mirrors representational drift observed in hippocampal place cells. Their findings promise to open new fields of inquiry into the connection between machine learning and representational drift in other, non-spatial learning paradigms, and to generate testable predictions for neural data.</p><p>Strengths:</p><p>(1) Ratzon et al. make an insightful connection between well-known phenomena in two separate fields: implicit regularization in machine learning and representational drift in the brain. They demonstrate that changes in a recurrent neural network mirror those observed in the brain, which opens a number of interesting questions for future investigation.</p><p>(2) The authors do an admirable job of writing to a large audience and make efforts to provide examples to make machine learning ideas accessible to a neuroscience audience and vice versa. This is no small feat and aids in broadening the impact of their work.</p><p>(3) This paper promises to generate testable hypotheses to examine in real neural data, e.g., that drift rate should plateau over long timescales (now testable with the ability to track single-unit neural activity across long time scales with calcium imaging and flexible silicon probes). Additionally, it provides another set of tools for the neuroscience community at large to use when analyzing the increasingly high-dimensional data sets collected today.</p><p>Weaknesses:</p><p>The revised manuscript addresses all the weaknesses outlined in my initial review. However, there is one remaining (minor) weakness regarding how &quot;sparseness&quot; is used and defined.</p><p>Sparseness can mean different things to different fields. For example, for engram studies, sparseness could be measured at the population level by the proportion of active cells, whereas for a physiology study, sparseness might be measured at the neuron level by the change in peak firing rate of each cell as an animal enters that cell's place field. In this manuscript, the idea of &quot;sparseness&quot; is introduced indirectly in the last paragraph of the introduction as &quot;...changes in activity statistics (sparseness)...&quot;, but it is unclear from the preceding text if the referenced &quot;activity statistics&quot; used to define sparseness are the &quot;fraction of active units,&quot; or their &quot;tuning specificity,&quot; or both. While sparseness is clearly defined in the Methods section for the RNN, there is no mention of how it is defined for neural data, and spatial information is not mentioned at all. For clarity, I suggest explicitly defining sparseness for both the RNN and real neural data early in the main text, e.g. &quot;Here, we measure sparseness in neural data by A and B, and by the analogous metric(s) of X and Y in our RNN...&quot; This is a small but important nuance that will enhance the ease of reading for a broad neuroscience audience.</p></body></sub-article><sub-article article-type="author-comment" id="sa4"><front-stub><article-id pub-id-type="doi">10.7554/eLife.90069.3.sa4</article-id><title-group><article-title>Author response</article-title></title-group><contrib-group><contrib contrib-type="author"><name><surname>Ratzon</surname><given-names>Aviv</given-names></name><role specific-use="author">Author</role><aff><institution>Technion - Israel Institute of Technology</institution><addr-line><named-content content-type="city">Haifa</named-content></addr-line><country>Israel</country></aff></contrib><contrib contrib-type="author"><name><surname>Derdikman</surname><given-names>Dori</given-names></name><role specific-use="author">Author</role><aff><institution>Technion - Israel Institute of Technology</institution><addr-line><named-content content-type="city">Haifa</named-content></addr-line><country>Israel</country></aff></contrib><contrib contrib-type="author"><name><surname>Barak</surname><given-names>Omri</given-names></name><role specific-use="author">Author</role><aff><institution>Technion- Israel Institute of Technology</institution><addr-line><named-content content-type="city">Haifa</named-content></addr-line><country>Israel</country></aff></contrib></contrib-group></front-stub><body><p>The following is the authorsâ response to the original reviews.</p><disp-quote content-type="editor-comment"><p><bold>eLife assessment</bold></p><p>This study presents a new and valuable theoretical account of spatial representational drift in the hippocampus. The evidence supporting the claims is convincing, with a clear and accessible explanation of the phenomenon. Overall, this study will likely attract researchers exploring learning and representation in both biological and artificial neural networks.</p></disp-quote><p>We would like to ask the reviewers to consider elevating the assessment due to the following arguments. As noted in the original review, the study bridges two different fields (machine learning and neuroscience), and does not only touch a single subfield (representational drift in neuroscience). In the revision, we also analysed data from four different labs, strengthening the evidence and the generality of the conclusions.</p><disp-quote content-type="editor-comment"><p><bold>Public Reviews:</bold></p><p><bold>Reviewer #1 (Public Review):</bold></p><p>The authors start from the premise that neural circuits exhibit &quot;representational drift&quot; -- i.e., slow and spontaneous changes in neural tuning despite constant network performance. While the extent to which biological systems exhibit drift is an active area of study and debate (as the authors acknowledge), there is enough interest in this topic to justify the development of theoretical models of drift.</p><p>The contribution of this paper is to claim that drift can reflect a mixture of &quot;directed random motion&quot; as well as &quot;steady state null drift.&quot; Thus far, most work within the computational neuroscience literature has focused on the latter. That is, drift is often viewed to be a harmless byproduct of continual learning under noise. In this view, drift does not affect the performance of the circuit nor does it change the nature of the network's solution or representation of the environment. The authors aim to challenge the latter viewpoint by showing that the statistics of neural representations can change (e.g. increase in sparsity) during early stages of drift. Further, they interpret this directed form of drift as &quot;implicit regularization&quot; on the network.</p><p>The evidence presented in favor of these claims is concise. Nevertheless, on balance, I find their evidence persuasive on a theoretical level -- i.e., I am convinced that implicit regularization of noisy learning rules is a feature of most artificial network models. This paper does not seem to make strong claims about real biological systems. The authors do cite circumstantial experimental evidence in line with the expectations of their model (Khatib et al. 2022), but those experimental data are not carefully and quantitatively related to the authors' model.</p></disp-quote><p>We thank the reviewer for pushing us to present stronger experimental evidence. We now analysed data from four different labs. Two of those are novel analyses of existing data (Karlsson et al, Jercog et al). All datasets show the same trend - increasing sparsity and increasing information per cell. We think that the results, presented in the new figure 3, allow us to make a stronger claim on real biological systems.</p><disp-quote content-type="editor-comment"><p>To establish the possibility of implicit regularization in artificial networks, the authors cite convincing work from the machine-learning community (Blanc et al. 2020, Li et al., 2021). Here the authors make an important contribution by translating these findings into more biologically plausible models and showing that their core assumptions remain plausible. The authors also develop helpful intuition in Figure 4 by showing a minimal model that captures the essence of their result.</p></disp-quote><p>We are glad that these translation efforts are appreciated.</p><disp-quote content-type="editor-comment"><p>In Figure 2, the authors show a convincing example of the gradual sparsification of tuning curves during the early stages of drift in a model of 1D navigation. However, the evidence presented in Figure 3 could be improved. In particular, 3A shows a histogram displaying the fraction of active units over 1117 simulations. Although there is a spike near zero, a sizeable portion of simulations have greater than 60% active units at the end of the training, and critically the authors do not characterize the time course of the active fraction for every network, so it is difficult to evaluate their claim that &quot;all [networks] demonstrated... [a] phase of directed random motion with the low-loss space.&quot; It would be useful to revise the manuscript to unpack these results more carefully. For example, a histogram of log(tau) computed in panel B on a subset of simulations may be more informative than the current histogram in panel A.</p></disp-quote><p>The previous figure 3A was indeed confusing. In particular, it lumped together many simulations without proper curation. We redid this figure (now Figure 4), and added supplementary figures (Figures S1, S2) to better explain our results. It is now clear that the simulations with a large number of active units were either due to non-convergence, slow timescale of sparsification or simulations featuring label noise in which the fraction of active units is less affected. Regarding the log(tau) calculation, while it could indeed be an informative plot, it could not be calculated in a simple manner for all simulations. This is because learning curves are not always exponential, but sometimes feature initial plateaus (see also Saxe et al 2013, Schuessler et al 2020). We added a more detailed explanation of this limitation in the methods section, and we believe the current figure exemplifies the effect in a satisfactory manner.</p><disp-quote content-type="editor-comment"><p><bold>Reviewer #2 (Public Review):</bold></p><p>Summary:</p><p>In the manuscript &quot;Representational drift as a result of implicit regularization&quot; the authors study the phenomenon of representational drift (RD) in the context of an artificial network that is trained in a predictive coding framework. When trained on a task for spatial navigation on a linear track, they found that a stochastic gradient descent algorithm led to a fast initial convergence to spatially tuned units, but then to a second very slow, yet directed drift which sparsified the representation while increasing the spatial information. They finally show that this separation of timescales is a robust phenomenon and occurs for a number of distinct learning rules.</p><p>Strengths:</p><p>This is a very clearly written and insightful paper, and I think people in the community will benefit from understanding how RD can emerge in such artificial networks. The mechanism underlying RD in these models is clearly laid out and the explanation given is convincing.</p></disp-quote><p>We thank the reviewer for the support.</p><disp-quote content-type="editor-comment"><p>Weaknesses:</p><p>It is unclear how this mechanism may account for the learning of multiple environments.</p></disp-quote><p>There are two facets to the topic of multiple environments. First, are the results of the current paper relevant when there are multiple environments? Second, what is the interaction between brain mechanisms of dealing with multiple environments and the results of the current paper?</p><p>We believe the answer to the first question is positive. The near-orthogonality of representations between environments implies that changes in one can happen without changes in the other. This is evident, for instance, in Khatib et al and Geva et al - in both cases, drift seems to happen independently in two environments, even though they are visited intermittently and are visually similar.</p><p>The second question is a fascinating one, and we are planning to pursue it in future work. While the exact way in which the brain achieves this near-independence is an open question, remapping is one possible window into this process.</p><p>We extended the discussion to make these points clear.</p><disp-quote content-type="editor-comment"><p>The process of RD through this mechanism also appears highly non-stationary, in contrast to what is seen in familiar environments in the hippocampus, for example.</p></disp-quote><p>The non-stationarity noted by the reviewer is indeed a major feature of our observations, and is indeed linked to familiarity. We divide learning into three phases (now more clearly stated in Table 1 and Figure 4C). The first, rapid phase, consists of improvement of performance - corresponding to initial familiarity with the environment. The third phase, often reported in the literature of representational drift, is indeed stationary and obtained after prolonged familiarity. Our work focuses on the second phase, which is not as immediate as the first one, and can take several days. We note in the discussion that experiments which include a long familiarization process can miss this phase (see also Table 3). Furthermore, we speculate that real life is less stationary than a lab environment, and this second phase might actually be more relevant there.</p><disp-quote content-type="editor-comment"><p><bold>Reviewer #3 (Public Review):</bold></p><p>Summary:</p><p>Single-unit neural activity tuned to environmental or behavioral variables gradually changes over time. This phenomenon, called representational drift, occurs even when all external variables remain constant, and challenges the idea that stable neural activity supports the performance of well-learned behaviors. While a number of studies have described representational drift across multiple brain regions, our understanding of the underlying mechanism driving drift is limited. Ratzon et al. propose that implicit regularization - which occurs when machine learning networks continue to reconfigure after reaching an optimal solution - could provide insights into why and how drift occurs in neurons. To test this theory, Ratzon et al. trained a Feedforward Network trained to perform the oft-utilized linear track behavioral paradigm and compare the changes in hidden layer units to those observed in hippocampal place cells recorded in awake, behaving animals.</p><p>Ratzon et al. clearly demonstrate that hidden layer units in their model undergo consistent changes even after the task is well-learned, mirroring representational drift observed in real hippocampal neurons. They show that the drift occurs across three separate measures: the active proportion of units (referred to as sparsification), spatial information of units, and correlation of spatial activity. They continue to address the conditions and parameters under which drift occurs in their model to assess the generalizability of their findings.</p><p>However, the generalizability results are presented primarily in written form: additional figures are warranted to aid in reproducibility.</p></disp-quote><p>We added figures, and a Github with all the code to allow full reproducibility.</p><disp-quote content-type="editor-comment"><p>Last, they investigate the mechanism through which sparsification occurs, showing that the flatness of the manifold near the solution can influence how the network reconfigures. The authors suggest that their findings indicate a three-stage learning process: (1) fast initial learning followed by (2) directed motion along a manifold which transitions to (3) undirected motion along a manifold.</p><p>Overall, the authors' results support the main conclusion that implicit regularization in machine learning networks mirrors representational drift observed in hippocampal place cells.</p></disp-quote><p>We thank the reviewer for this summary.</p><disp-quote content-type="editor-comment"><p>However, additional figures/analyses are needed to clearly demonstrate how different parameters used in their model qualitatively and quantitatively influence drift.</p></disp-quote><p>We now provide additional figures regarding parameters (Figures S1, S2).</p><disp-quote content-type="editor-comment"><p>Finally, the authors need to clearly identify how their data supports the three-stage learning model they suggest.</p><p>Their findings promise to open new fields of inquiry into the connection between machine learning and representational drift and generate testable predictions for neural data.</p><p>Strengths:</p><p>(1) Ratzon et al. make an insightful connection between well-known phenomena in two separate fields: implicit regularization in machine learning and representational drift in the brain. They demonstrate that changes in a recurrent neural network mirror those observed in the brain, which opens a number of interesting questions for future investigation.</p><p>(2) The authors do an admirable job of writing to a large audience and make efforts to provide examples to make machine learning ideas accessible to a neuroscience audience and vice versa. This is no small feat and aids in broadening the impact of their work.</p><p>(3) This paper promises to generate testable hypotheses to examine in real neural data, e.g., that drift rate should plateau over long timescales (now testable with the ability to track single-unit neural activity across long time scales with calcium imaging and flexible silicon probes). Additionally, it provides another set of tools for the neuroscience community at large to use when analyzing the increasingly high-dimensional data sets collected today.</p></disp-quote><p>We thank the reviewer for these comments. Regarding the hypotheses, these are partially confirmed in the new analyses we provide of data from multiple labs (new Figure 3 and Table 3) - indicating that prolonged exposure to the environment leads to more stationarity.</p><disp-quote content-type="editor-comment"><p>Weaknesses:</p><p>(1) Neural representational drift and directed/undirected random walks along a manifold in ML are well described. However, outside of the first section of the main text, the analysis focuses primarily on the connection between manifold exploration and sparsification without addressing the other two drift metrics: spatial information and place field correlations. It is therefore unclear if the results from Figures 3 and 4 are specific to sparseness or extend to the other two metrics. For example, are these other metrics of drift also insensitive to most of the Feedforward Network parameters as shown in Figure 3 and the related text? These concerns could be addressed with panels analogous to Figures 3a-c and 4b for the other metrics and will increase the reproducibility of this work.</p></disp-quote><p>We note that the results from figures 3 and 4 (original manuscript) are based on abstract tasks, while in figure 2 there is a contextual notion of spatial position. Spatial position metrics are not applicable to the abstract tasks as they are simple random mapping of inputs, and there isnât necessarily an underlying latent variable such as position. This transition between task types is better explained in the text now. In essence the spatial information and place field correlation changes are simply signatures of the movements in parameter space. In the abstract tasks their change becomes trivial, as the spatial information becomes strongly correlated with sparsity and place fields are simply the activity vectors of units. These are guaranteed to change as long as there are changes in the activity statistics. We present here the calculation of these metrics averaged over simulations for completeness.</p><fig id="sa4fig1" position="float"><label>Author response image 1.</label><caption><title>PV correlation between training time points averaged over 362 simulations.</title><p>(B) Mean SI of units normalized to first time step, averaged over 362 simulations. Red line shows the average time point of loss convergence, the shaded area represents one standard deviation.</p></caption><graphic mimetype="image" mime-subtype="tiff" xlink:href="elife-90069-sa4-fig1-v1.tif"/></fig><disp-quote content-type="editor-comment"><p>(2) Many caveats/exceptions to the generality of findings are mentioned only in the main text without any supporting figures, e.g., &quot;For label noise, the dynamics were qualitatively different, the fraction of active units did not reduce, but the activity of the units did sparsify&quot; (lines 116-117). Supporting figures are warranted to illustrate which findings are &quot;qualitatively different&quot; from the main model, which are not different from the main model, and which of the many parameters mentioned are important for reproducing the findings.</p></disp-quote><p>We now added figures (S1, S2) that show this exactly. We also added a github to allow full reproduction.</p><disp-quote content-type="editor-comment"><p>(3) Key details of the model used by the authors are not listed in the methods. While they are mentioned in reference 30 (Recanatesi et al., 2021), they need to be explicitly defined in the methods section to ensure future reproducibility.</p></disp-quote><p>The details of the simulation are detailed in the methods sections. We also added a github to allow full reproducibility.</p><disp-quote content-type="editor-comment"><p>(4) How different states of drift correspond to the three learning stages outlined by the authors is unclear. Specifically, it is not clear where the second stage ends, and the third stage begins, either in real neural data or in the figures. This is compounded by the fact that the third stage - of undirected, random manifold exploration - is only discussed in relation to the introductory Figure 1 and is never connected to the neural network data or actual brain data presented by the authors. Are both stages meant to represent drift? Or is only the second stage meant to mirror drift, while undirected random motion along a manifold is a prediction that could be tested in real neural data? Identifying where each stage occurs in Figures 2C and E, for example, would clearly illustrate which attributes of drift in hidden layer neurons and real hippocampal neurons correspond to each stage.</p></disp-quote><p>Thanks for this comment, which urged us to better explain these concepts.</p><p>The different processes (reduction in loss, reduction in Hessian) happen in parallel with different timescales. Thus, there are no sharp transitions between the phases. This is now explained in the text in relation to figure 4C, where the approximate boundaries are depicted.</p><p>The term drift is often used to denote a change in representation without a change in behavior. In this sense, both the second and third phases correspond to drift. Only the third stage is stationary. This is now emphasized in the text and in the new Table 1. Regarding experimental data, apart from the new figure 3 with four datasets, we also summarize in Table 3 the relation between duration of familiarity and stationarity of the data.</p><disp-quote content-type="editor-comment"><p><bold>Recommendations for the authors:</bold></p><p>The reviewers have raised several concerns. They concur that the authors should address the specific points below to enhance the manuscript.</p><p>(1) The three different phases of learning should be clearly delineated, along with how they are determined. It remains unclear in which exact phase the drift is observed.</p></disp-quote><p>This is now clearly explained in the new Table 1 and Figure 4C. Note that the different processes (reduction in loss, reduction in Hessian) happen in parallel with different timescales. Thus, there are no sharp transitions between the phases. This is now explained in the text in relation to figure 4C, where the approximate boundaries are depicted.</p><p>The term drift is often used to denote a change in representation without a change in behavior. In this sense, both the second and third phases correspond to drift. Only the third stage is stationary. This is now emphasized in the text and in the new Table 1. Regarding experimental data, apart from the new figure 3 with four datasets, we also summarize in Table 3 the relation between duration of familiarity and stationarity of the data.</p><disp-quote content-type="editor-comment"><p>(2) The term &quot;sparsification&quot; of unit activity is not fully clear. Its meaning should be more explicitly explained, especially since, in the simulations, a significant number of units appear to remain active (Fig. 3A).</p></disp-quote><p>We now define precisely the two measures we use - Active Fraction, and Fraction Active Units. There is a new section with an accompanying figure in the Methods section. As Figure S2 shows, the noise statistics (label noise vs. update noise) differentially affects these two measures.</p><disp-quote content-type="editor-comment"><p>(3) While the study primarily focuses on one aspect of representational drift-the proportion of active units-it should also explore other features traditionally associated with representational drift, such as spatial information and the correlation between place fields.</p></disp-quote><p>This absence of features is related to the abstract nature of some of the tasks simulated in our paper. In our original submission the transition between a predictive coding task to more abstract tasks was not clearly explained, creating some confusion regarding the measured metrics. We now clarified the motivation for this transition.</p><p>Both the initial simulation and the new experimental data analysis include spatial information (Figures 2,3). The following simulations (Figure 4) with many parameter choices use more abstract tasks, for which the notion of correlation between place cells and spatial information loses its meaning as there is no spatial ordering of the inputs, and every input is encountered only once. Spatial information becomes strongly correlated with the inverse of the active fraction metric. The correlation between place cells is also directly linked to increase in sparseness for these tasks.</p><disp-quote content-type="editor-comment"><p>(4) There should be a clearer illustration of how labeling noise influences learning dynamics and sparsification.</p></disp-quote><p>This was indeed confusing in the original submission. We removed the simulations with label noise from Figure 4, and added a supplementary figure (S2) illustrating the different effects of label noise.</p><disp-quote content-type="editor-comment"><p>(5) The representational drift observed in this study's simulations appears to be nonstationary, which differs from in vivo reports. The reasons for this discrepancy should be clarified.</p></disp-quote><p>We added experimental results from three additional labs demonstrating a change in activity statistics (i.e. increase in spatial information and increase in sparseness) over a long period of time. We suggest that such a change long after the environment is already familiar is an indication for the second phase, and stress that this change seems to saturate at some point, and that most drift papers start collecting data after this saturation, hence this effect was missed in previous in vivo reports. Furthermore, these effects are become more abundant with the advent on new calcium imaging methods, as the older electrophysiological regording methods did not usually allow recording of large amounts of cells for long periods of time.The new Table 3 surveys several experimental papers, emphasizing the degree of familiarity with the environment.</p><disp-quote content-type="editor-comment"><p>(6) A distinctive feature of the hippocampus is its ability to learn different spatial representations for various environments. The study does not test representational drift in this context, a topic of significant interest to the community. Whether the authors choose to delve into this is up to them, but it should at least be discussed more comprehensively, as it's only briefly touched upon in the current manuscript version.</p></disp-quote><p>There are two facets to the topic of multiple environments. First, are the results of the current paper relevant when there are multiple environments? Second, what is the interaction between brain mechanisms of dealing with multiple environments and the results of the current paper?</p><p>We believe the answer to the first question is positive. The near-orthogonality of representations between environments implies that changes in one can happen without changes in the other. This is evident, for instance, in Khatib et al and Geva et al - in both cases, drift seems to happen independently in two environments, even though they are visited intermittently and are visually similar.</p><p>The second question is a fascinating one, and we are planning to pursue it in future work. While the exact way in which the brain achieves this near-independence is an open question, remapping is one possible window into this process.</p><p>We extended the discussion to make these points clear.</p><disp-quote content-type="editor-comment"><p>(7) The methods section should offer more details about the neural nets employed in the study. The manuscript should be explicit about the terms &quot;hidden layer&quot;, &quot;units&quot;, and &quot;neurons&quot;, ensuring they are defined clearly and not used interchangeably..</p></disp-quote><p>We changed the usage of these terms to be more coherent and made our code publicly available. Specifically, âunitsâ refer to artificial networks and âneuronsâ to biological ones.</p><disp-quote content-type="editor-comment"><p>In addition, each reviewer has raised both major and minor concerns. These are listed below and should be addressed where possible.</p><p><bold>Reviewer #1 (Recommendations For The Authors):</bold></p><p>I recommend that the authors edit the text to soften their claims. For example:</p><p>In the abstract &quot;To uncover the underlying mechanism, we...&quot; could be changed to &quot;To investigate, we...&quot;</p></disp-quote><p>Agree. Done</p><disp-quote content-type="editor-comment"><p>On line 21, &quot;Specifically, recent studies showed that...&quot; could be changed to &quot;Specifically, recent studies suggest that...&quot;</p></disp-quote><p>Agree. Done</p><disp-quote content-type="editor-comment"><p>On line 100, &quot;All cases&quot; should probably be softened to &quot;Most cases&quot; or more details should be added to Figure 3 to support the claim that every simulation truly had a phase of directed random motion.</p></disp-quote><p>The text was changed in accordance with the reviewerâs suggestion. In addition, the figure was changed and only includes simulations in which we expected unit sparsity to arise (without label noise). We also added explanations and supplementary figures for label noise.</p><disp-quote content-type="editor-comment"><p>Unless I missed something obvious, there is no new experimental data analysis reported in the paper. Thus, line 159 of the discussion, &quot;a phenomenon we also observed in experimental data&quot; should be changed to &quot;a phenomenon that recently reported in experimental data.&quot;</p></disp-quote><p>We thank the reviewer for drawing our attention to this. We now analyzed data from three other labs, two of which are novel analyses on existing data. All four datasets show the same trends of sparseness with increasing spatial information. The new Figure 3 and text now describe this.</p><disp-quote content-type="editor-comment"><p>On line 179 of the Discussion, &quot;a family of network configurations that have identical performance...&quot; could be softened to &quot;nearly identical performance.&quot; It would be possible for networks to have minuscule differences in performance that are not detected due to stochastic batch effects or limits on machine precision.</p></disp-quote><p>The text was changed in accordance with the reviewerâs suggestion.</p><disp-quote content-type="editor-comment"><p>Other minor comments:</p><p>Citation 44 is missing the conference venue, please check all citations are formatted properly.</p></disp-quote><p>Corrected.</p><disp-quote content-type="editor-comment"><p>In the discussion on line 184, the connection to remapping was confusing to me, particularly because the cited reference (Sanders et al. 2020) is more of a conceptual model than an artificial network model that could be adapted to the setting of noisy learning considered in this paper. How would an RNN model of remapping (e.g. Low et al. 2023; Remapping in a recurrent neural network model of navigation and context inference) be expected to behave during the sparsifying portion of drift?</p></disp-quote><p>We now clarified this section. The conceptual model of Sanders et al includes a specific prediction (Figure 7 there) which is very similar to ours - a systematic change in robustness depending on duration of training. Regarding the Low et al model, using such mechanistic models is an exciting avenue for future research.</p><disp-quote content-type="editor-comment"><p><bold>Reviewer #2 (Recommendations For The Authors):</bold></p><p>I only have two major questions.</p><p>(1) Learning multiple representations: Memory systems in the brain typically must store many distinct memories. Certainly, the hippocampus, where RD is prominent, is involved in the ongoing storage of episodic memories. But even in the idealized case of just two spatial memories, for example, two distinct linear tracks, how would this learning process look? Would there be any interference between the two learning processes or would they be largely independent? Is the separation of time scales robust to the number of representations stored? I understand that to answer this question fully probably requires a research effort that goes well beyond the current study, but perhaps an example could be shown with two environments. At the very least the authors could express their thoughts on the matter.</p></disp-quote><p>There are two facets to the topic of multiple environments. First, are the results of the current paper relevant when there are multiple environments? Second, what is the interaction between brain mechanisms of dealing with multiple environments and the results of the current paper?</p><p>We believe the answer to the first question is positive. The near-orthogonality of representations between environments implies that changes in one can happen without changes in the other. This is evident, for instance, in Khatib et al and Geva et al - in both cases, drift seems to happen independently in two environments, even though they are visited intermittently and are visually similar.</p><p>The second question is a fascinating one, and we are planning to pursue it in future work. While the exact way in which the brain achieves this near-independence is an open question, remapping is one possible window into this process.</p><p>We extended the discussion to make these points clear.</p><disp-quote content-type="editor-comment"><p>(2) Directed drift versus stationarity: I could not help but notice that the RD illustrated in Fig.2D is not stationary in nature, i.e. the upper right and lower left panels are quite different. This appears to contrast with findings in the hippocampus, for example, Fig.3e-g in (Ziv et al, 2013). Perhaps it is obvious that a directed process will not be stationary, but the authors note that there is a third phase of steady-state null drift. Is the RD seen there stationary? Basically, I wonder if the process the authors are studying is relevant only as a novel environment becomes familiar, or if it is also applicable to RD in an already familiar environment. Please discuss the issue of stationarity in this context.</p></disp-quote><p>The non-stationarity noted by the reviewer is indeed a major feature of our observations, and is indeed linked to familiarity. We divide learning into three phases (now more clearly stated in Table 1 and Figure 4C). The first, rapid, phase consists of improvement of performance - corresponding to initial familiarity with the environment. The third phase, often reported in the literature of representational drift, is indeed stationary and obtained after prolonged familiarity. Our work focuses on the second phase, which is not as immediate as the first one, and can take several days. We note in the discussion that experiments which include a long familiarization process can miss this phase (see also Table 3). Furthermore, we speculate that real life is less stationary than a lab environment, and this second phase might actually be more relevant there.</p><disp-quote content-type="editor-comment"><p><bold>Reviewer #3 (Recommendations For The Authors):</bold></p><p>Most of my general recommendations are outlined in the public review. A large portion of my comments regards increasing clarity and explicitly defining many of the terms used which may require generating more figures (to better illustrate the generality of findings) or modifying existing figures (e.g., to show how/where the three stages of learning map onto the authors' data).</p><p>Sparsification is not clearly defined in the main text. As I read it, sparsification is meant to refer to the activity of neurons, but this needs to be clearly defined. For example, lines 262-263 in the methods define &quot;sparseness&quot; by the number of active units, but lines 116-117 state: &quot;For label noise, the dynamics were qualitatively different, the fraction of active units did not reduce, but the activity of the units did sparsify.&quot; If the fraction of active units (defined as &quot;sparseness&quot;) did not change, what does it mean that the activity of the units &quot;sparsified&quot;? If the authors mean that the spatial activity patterns of hidden units became more sharply tuned, this should be clearly stated.</p></disp-quote><p>We now defined precisely the two measures we use - Active Fraction, and Fraction Active Units. There is a new section with an accompanying figure in the Methods section. As Figure S2 shows, the noise statistics (label noise vs. update noise) differentially affects these two measures.</p><disp-quote content-type="editor-comment"><p>Likewise, it is unclear which of the features the authors outlined - spatial information, active proportion of units, and spatial correlation - are meant to represent drift. The authors should clearly delineate which of these three metrics they mean to delineate drift in the main text rather than leave it to the reader to infer. While all three are mentioned early on in the text (Figure 2), the authors focus more on sparseness in the last half of the text, making it unclear if it is just sparseness that the authors mean to represent drift or the other metrics as well.</p></disp-quote><p>The main focus of our paper is on the non-stationarity of drift. Namely that features (such as these three) systematically change in a directed manner as part of the drift process. This is in The new analyses of experimental data show sparseness and spatial information.</p><p>The focus on sparseness in the second half of the paper is because we move to more abstract These are also easy to study in the more abstract tasks in the second part of the paper. In our original submission the transition between a predictive coding task to more abstract tasks was not clearly explained, creating some confusion regarding the measured metrics. We now clarified the motivation for this transition.</p><disp-quote content-type="editor-comment"><p>It is not clear if a change in the number of active units alone constitutes &quot;drift&quot;, especially since Geva et al. (2023) recently showed that both changes in firing rate AND place field location drive drift, and that the passage of time drives changes in activity rate (or # cells active).</p></disp-quote><p>Our work did not deal with purely time-dependent drift, but rather focused on experience-dependence. Furthermore, Geva et al study the stationary phase of drift, where we do not expect a systematic change in the total number of cells active. They report changes in the average firing rate of active cells in this phase, as a function of time - which does not contradict our findings.</p><disp-quote content-type="editor-comment"><p>&quot;hidden layer&quot;, &quot;units&quot;, and &quot;neurons&quot; seem to be used interchangeably in the text (e.g., line 81-85). However, this is confusing in several places, in particular in lines 83-85 where &quot;neurons&quot; is used twice. The first usage appears to refer to the rate maps of the hidden layer units simulated by the authors, while the second &quot;neurons&quot; appears to refer to real data from Ziv 2013 (ref 5). The authors should make it explicit whether they are referring to hidden layer units or actual neurons to avoid reader confusion.</p></disp-quote><p>We changed the usage of these terms to be more coherent. Specifically, âunitsâ refer to artificial networks and âneuronsâ to biological ones.</p><disp-quote content-type="editor-comment"><p>The authors should clearly illustrate which parts of their findings support their three-phase learning theory. For example, does 2E illustrate these phases, with the first tenth of training time points illustrating the early phase, time 0.1-0.4 illustrating the intermediate phase, and 0.4-1 illustrating the last phase? Additionally, they should clarify whether the second and third stages are meant to represent drift, or is it only the second stage of directed manifold exploration that is considered to represent drift? This is unclear from the main text.</p></disp-quote><p>The different processes (reduction in loss, reduction in Hessian) happen in parallel with different timescales. Thus, there are no sharp transitions between the phases. This is now explained in the text in relation to figure 4C, where the approximate boundaries are depicted.</p><p>The term drift is often used to denote a change in representation without a change in behavior. In this sense, both the second and third phases correspond to drift. Only the third stage is stationary. This is now emphasized in the text and in the new Table 1. Regarding experimental data, apart from the new figure 3 with four datasets, we also summarize in Table 3 the relation between duration of familiarity and stationarity of the data.</p><disp-quote content-type="editor-comment"><p>Line 45 - It appears that the acronym ML is not defined above here anywhere.</p></disp-quote><p>Added.</p><disp-quote content-type="editor-comment"><p>Line 71: the ReLU function should be defined in the text, e.g., sigma(x) = x if x &gt; 0 else 0.</p></disp-quote><p>Added.</p><disp-quote content-type="editor-comment"><p>106-107: Figures (or supplemental figures) to demonstrate how most parameters do not influence sparsification dynamics are warranted. As written, it is unclear what &quot;most parameters&quot; mean - all but noise scale. What about the learning rule? Are there any interactions between parameters?</p></disp-quote><p>We now removed the label noise from Figure 4, and added two supplementary figures to clearly explain the effect of parameters. Figure 4 itself was also redone to clarify this issue.</p><disp-quote content-type="editor-comment"><p>2F middle: should &quot;change&quot; be omitted for SI?</p></disp-quote><p>The panel was replaced by a new one in Figure 3.</p><disp-quote content-type="editor-comment"><p>116-119: A figure showing how results differ for label noise is warranted.</p></disp-quote><p>This is now done in Figure S1, S2.</p><disp-quote content-type="editor-comment"><p>124: typo, The -&gt; the</p></disp-quote><p>Corrected.</p><disp-quote content-type="editor-comment"><p>127-129: This conclusion statement is the first place in the text where the three stages are explicitly outlined. There does not appear to be any support or further explanation of these stages in the text above.</p></disp-quote><p>We now explain this earlier at the end of the Introduction section, along with the new Table 1 and marking on Figure 4C.</p><disp-quote content-type="editor-comment"><p>132-133 seems to be more of a statement and less of a prediction or conclusion - do the authors mean &quot;the flatness of the loss landscape in the vicinity of the solution predicts the rate of sparsification?&quot;</p></disp-quote><p>We thank the reviewer for this observation. The sentence was rephrased:</p><p>Old: As illustrated in Fig. 1, different solutions in the zero-loss manifold might vary in some of their properties. The specific property suggested from theory is the flatness of the loss landscape in the vicinity of the solution.</p><p>New: As illustrated in Fig. 1, solutions in the zero-loss manifold have identical loss, but might vary in some of their properties. The authors of [26] suggest that noisy learning will slowly increase the flatness of the loss landscape in the vicinity of the solution.</p><disp-quote content-type="editor-comment"><p>135: typo, it's -&gt; its</p></disp-quote><p>Corrected.</p><disp-quote content-type="editor-comment"><p>Line 135-136 &quot;Crucially, the loss on the 136 entire manifold is exactly zero...&quot; This appears to contradict the Figure 4A legend - the loss appears to be very high near the top and bottom edges of the manifold in 4A. Do the authors mean that the loss along the horizontal axis of the manifold is zero?</p></disp-quote><p>The reviewer is correct. The manifold mentioned in the sentence is indeed the horizontal axis. We changed the text and the figure to make it clearer.</p><disp-quote content-type="editor-comment"><p>Equation 6: This does not appear to agree with equation 2 - should there be an E_t term for an expectation function?</p></disp-quote><p>Corrected.</p><disp-quote content-type="editor-comment"><p>Line 262-263: &quot;Sparseness means that a unit has become inactive for all inputs.&quot; This should also be stated explicitly as the definition of sparseness/sparsification in the main text.</p></disp-quote><p>We now define precisely the two measures we use - Active Fraction, and Fraction Active Units. There is a new section with an accompanying figure in the Methods section. As Figure S2 shows, the noise statistics (label noise vs. update noise) differentially affects these two measures.</p></body></sub-article></article>