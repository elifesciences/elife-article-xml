<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE article PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Archiving and Interchange DTD v1.1 20151215//EN"  "JATS-archivearticle1.dtd"><article article-type="research-article" dtd-version="1.1" xmlns:ali="http://www.niso.org/schemas/ali/1.0/" xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink"><front><journal-meta><journal-id journal-id-type="nlm-ta">elife</journal-id><journal-id journal-id-type="publisher-id">eLife</journal-id><journal-title-group><journal-title>eLife</journal-title></journal-title-group><issn pub-type="epub" publication-format="electronic">2050-084X</issn><publisher><publisher-name>eLife Sciences Publications, Ltd</publisher-name></publisher></journal-meta><article-meta><article-id pub-id-type="publisher-id">54603</article-id><article-id pub-id-type="doi">10.7554/eLife.54603</article-id><article-categories><subj-group subj-group-type="display-channel"><subject>Research Article</subject></subj-group><subj-group subj-group-type="heading"><subject>Chromosomes and Gene Expression</subject></subj-group><subj-group subj-group-type="heading"><subject>Computational and Systems Biology</subject></subj-group></article-categories><title-group><article-title>Coverage-dependent bias creates the appearance of binary splicing in single cells</article-title></title-group><contrib-group><contrib contrib-type="author" id="author-169842"><name><surname>Buen Abad Najar</surname><given-names>Carlos F</given-names></name><xref ref-type="aff" rid="aff1">1</xref><xref ref-type="other" rid="fund1"/><xref ref-type="fn" rid="con1"/><xref ref-type="fn" rid="conf1"/></contrib><contrib contrib-type="author" corresp="yes" id="author-75497"><name><surname>Yosef</surname><given-names>Nir</given-names></name><contrib-id authenticated="true" contrib-id-type="orcid">https://orcid.org/0000-0001-9004-1225</contrib-id><email>niryosef@berkeley.edu</email><xref ref-type="aff" rid="aff1">1</xref><xref ref-type="aff" rid="aff2">2</xref><xref ref-type="aff" rid="aff3">3</xref><xref ref-type="aff" rid="aff4">4</xref><xref ref-type="other" rid="fund2"/><xref ref-type="fn" rid="con2"/><xref ref-type="fn" rid="conf1"/></contrib><contrib contrib-type="author" corresp="yes" id="author-13459"><name><surname>Lareau</surname><given-names>Liana F</given-names></name><contrib-id authenticated="true" contrib-id-type="orcid">https://orcid.org/0000-0003-3223-3426</contrib-id><email>lareau@berkeley.edu</email><xref ref-type="aff" rid="aff1">1</xref><xref ref-type="aff" rid="aff5">5</xref><xref ref-type="fn" rid="con3"/><xref ref-type="fn" rid="conf1"/></contrib><aff id="aff1"><label>1</label><institution>Center for Computational Biology, University of California, Berkeley</institution><addr-line><named-content content-type="city">Berkeley</named-content></addr-line><country>United States</country></aff><aff id="aff2"><label>2</label><institution>Department of Electrical Engineering and Computer Science and the Center for Computational Biology, University of California, Berkeley</institution><addr-line><named-content content-type="city">Berkeley</named-content></addr-line><country>United States</country></aff><aff id="aff3"><label>3</label><institution>Ragon Institute of MGH, MIT, and Harvard</institution><addr-line><named-content content-type="city">Cambridge</named-content></addr-line><country>United States</country></aff><aff id="aff4"><label>4</label><institution>Chan Zuckerberg Biohub, San Francisco</institution><addr-line><named-content content-type="city">San Francisco</named-content></addr-line><country>United States</country></aff><aff id="aff5"><label>5</label><institution>Department of Bioengineering, University of California, Berkeley</institution><addr-line><named-content content-type="city">Berkeley</named-content></addr-line><country>United States</country></aff></contrib-group><contrib-group content-type="section"><contrib contrib-type="editor"><name><surname>Churchman</surname><given-names>L Stirling</given-names></name><role>Reviewing Editor</role><aff><institution>Harvard Medical School</institution><country>United States</country></aff></contrib><contrib contrib-type="senior_editor"><name><surname>Wittkopp</surname><given-names>Patricia J</given-names></name><role>Senior Editor</role><aff><institution>University of Michigan</institution><country>United States</country></aff></contrib></contrib-group><pub-date date-type="publication" publication-format="electronic"><day>29</day><month>06</month><year>2020</year></pub-date><pub-date pub-type="collection"><year>2020</year></pub-date><volume>9</volume><elocation-id>e54603</elocation-id><history><date date-type="received" iso-8601-date="2019-12-19"><day>19</day><month>12</month><year>2019</year></date><date date-type="accepted" iso-8601-date="2020-06-28"><day>28</day><month>06</month><year>2020</year></date></history><permissions><copyright-statement>© 2020, Buen Abad Najar et al</copyright-statement><copyright-year>2020</copyright-year><copyright-holder>Buen Abad Najar et al</copyright-holder><ali:free_to_read/><license xlink:href="http://creativecommons.org/licenses/by/4.0/"><ali:license_ref>http://creativecommons.org/licenses/by/4.0/</ali:license_ref><license-p>This article is distributed under the terms of the <ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/licenses/by/4.0/">Creative Commons Attribution License</ext-link>, which permits unrestricted use and redistribution provided that the original author and source are credited.</license-p></license></permissions><self-uri content-type="pdf" xlink:href="elife-54603-v2.pdf"/><abstract><p>Single-cell RNA sequencing provides powerful insight into the factors that determine each cell’s unique identity. Previous studies led to the surprising observation that alternative splicing among single cells is highly variable and follows a bimodal pattern: a given cell consistently produces either one or the other isoform for a particular splicing choice, with few cells producing both isoforms. Here, we show that this pattern arises almost entirely from technical limitations. We analyze alternative splicing in human and mouse single-cell RNA-seq datasets, and model them with a probabilistic simulator. Our simulations show that low gene expression and low capture efficiency distort the observed distribution of isoforms. This gives the appearance of binary splicing outcomes, even when the underlying reality is consistent with more than one isoform per cell. We show that accounting for the true amount of information recovered can produce biologically meaningful measurements of splicing in single cells.</p></abstract><kwd-group kwd-group-type="author-keywords"><kwd>alternative splicing</kwd><kwd>scRNA-seq</kwd><kwd>single cell</kwd></kwd-group><kwd-group kwd-group-type="research-organism"><title>Research organism</title><kwd>Human</kwd><kwd>Mouse</kwd></kwd-group><funding-group><award-group id="fund1"><funding-source><institution-wrap><institution>UC MEXUS-Conacyt</institution></institution-wrap></funding-source><award-id>Doctoral Fellowship</award-id><principal-award-recipient><name><surname>Buen Abad Najar</surname><given-names>Carlos F</given-names></name></principal-award-recipient></award-group><award-group id="fund2"><funding-source><institution-wrap><institution>Chan Zuckerberg Biohub</institution></institution-wrap></funding-source><principal-award-recipient><name><surname>Yosef</surname><given-names>Nir</given-names></name></principal-award-recipient></award-group><funding-statement>The funders had no role in study design, data collection and interpretation, or the decision to submit the work for publication.</funding-statement></funding-group><custom-meta-group><custom-meta specific-use="meta-only"><meta-name>Author impact statement</meta-name><meta-value>Sequencing and counting RNAs from single cells can create a misleading picture of alternative splicing if too many mRNAs are lost in the process.</meta-value></custom-meta></custom-meta-group></article-meta></front><body><sec id="s1" sec-type="intro"><title>Introduction</title><p>Single-cell RNA sequencing (scRNA-seq) has provided impressive temporal resolution to our understanding of continuous biological processes such as cell differentiation (<xref ref-type="bibr" rid="bib33">Wagner et al., 2016</xref>; <xref ref-type="bibr" rid="bib31">Tanay and Regev, 2017</xref>). It has uncovered hidden heterogeneity among cells and exposed the factors that determine each cell’s unique identity. One broad source of transcriptomic diversity is alternative splicing, and several studies have uncovered compelling evidence of changes in alternative splicing among single cells during differentiation (<xref ref-type="bibr" rid="bib35">Welch et al., 2016</xref>; <xref ref-type="bibr" rid="bib24">Qiu et al., 2017</xref>; <xref ref-type="bibr" rid="bib29">Song et al., 2017</xref>; <xref ref-type="bibr" rid="bib14">Huang and Sanguinetti, 2017</xref>).</p><p>A particularly surprising conclusion of several scRNA-seq studies was the observation that splicing was often bimodal among supposedly homogeneous cells (<xref ref-type="bibr" rid="bib26">Shalek et al., 2013</xref>; <xref ref-type="bibr" rid="bib23">Marinov et al., 2014</xref>; <xref ref-type="bibr" rid="bib29">Song et al., 2017</xref>; <xref ref-type="bibr" rid="bib36">Westoby et al., 2018</xref>). Individual cells had binary outcomes in splicing: some cells always spliced in a particular cassette exon, and some cells never spliced in the exon, but few cells showed truly intermediate inclusion within one cell. This unexpected result contrasted with previous single molecule imaging studies of several alternative exons that showed that cell-to-cell variability is minimized and tightly regulated by the splicing machinery in single cells (<xref ref-type="bibr" rid="bib34">Waks et al., 2011</xref>; <xref ref-type="bibr" rid="bib22">Maamar et al., 2013</xref>). Curiosity about this result led to investigations of mechanisms that might be responsible for stochastic splicing variability among apparently homogeneous cells, such as variation in DNA methylation (<xref ref-type="bibr" rid="bib20">Linker et al., 2019</xref>).</p><p>We propose that the observed bimodality does not generally reflect a binary nature of splicing biology, but rather, that it exposes a technical limitation of the scRNA-seq data that have been collected so far. Because alternative isoforms of a gene share much of the same sequence, only the few RNA-seq reads mapping to the exact alternative splice junctions, or to the alternative exon itself, reveal its alternative splicing. When combined with the low mRNA capture efficiency of scRNA-seq and the PCR amplification of small amounts of starting material into a full-length sequencing library, these circumstances create the risk of bottlenecks that lose all but a few individual mRNAs of most genes in each cell.</p><p>The limitations of scRNA-seq are a known obstacle to studying splicing in single cells (<xref ref-type="bibr" rid="bib1">Arzalluz-Luque and Conesa, 2018</xref>). Similar concerns have arisen with the use of scRNA-seq to infer allelic expression; a careful analysis showed that stochastic patterns resulted from technical noise (<xref ref-type="bibr" rid="bib16">Kim et al., 2015</xref>). A recent study observed and modeled the high dropout rate of individual isoforms in scRNA-seq and advised that scRNA-seq is fundamentally unsuitable for measuring changes in alternative splicing (<xref ref-type="bibr" rid="bib37">Westoby et al., 2020</xref>). Others have implemented workarounds, for example using sequence features to predict splicing outcomes in lieu of sufficient sequencing coverage (<xref ref-type="bibr" rid="bib14">Huang and Sanguinetti, 2017</xref>), or attempting to identify excess variance beyond technical noise (<xref ref-type="bibr" rid="bib35">Welch et al., 2016</xref>; <xref ref-type="bibr" rid="bib20">Linker et al., 2019</xref>). These studies have identified true examples of differential splicing in single cells, but they fundamentally do not explain how scRNA-seq limitations have caused qualitative, not just quantitative, distortions in our understanding of alternative splicing.</p><p>Here, we show that scRNA-seq splicing data are consistent with a simple model (<xref ref-type="fig" rid="fig1">Figure 1</xref>). Consider a particular cassette exon whose true pattern of exclusion follows a unimodal distribution of isoform ratios across cells (i.e. most cells express both isoforms, with a ratio revolving around the same mean). This distribution can be distorted by extreme information loss during library preparation and sequencing, creating the illusion that individual cells only produce one isoform or the other. Our simulations make it clear that the reliability of splicing measurements is a function of the initial amount of mRNA, the efficiency of its recovery, the underlying splicing rate, and further distortions from PCR amplification of cDNA. These effects should be considered when interpreting previous studies that used qualitative changes in the observed distribution of the splicing rates (<xref ref-type="bibr" rid="bib29">Song et al., 2017</xref>) or changes in their variance (<xref ref-type="bibr" rid="bib20">Linker et al., 2019</xref>) as evidence for regulation of alternative splicing. Considering the true amount of information available for a cassette exon can allow for accurate observations of alternative splicing. Using a data normalization and filtering method to identify cassette exons with sufficient information, we are able to draw biologically relevant conclusions about alternative splicing in single cells.</p><fig id="fig1" position="float"><label>Figure 1.</label><caption><title>Bimodal vs unimodal models of cassette exon splicing.</title><p>In the bimodal model, some cells consistently splice in the exon, while others consistently skip it. After mRNA capture and sequencing, observations of <inline-formula><mml:math id="inf1"><mml:mi mathvariant="normal">Ψ</mml:mi></mml:math></inline-formula> are almost exclusively binary. In the unimodal model, individual cells express some mRNAs that splice in the cassette exon and some that skip it. Low mRNA capture dramatically reduces the number of cells in which both isoforms are observed, artificially inflating binary <inline-formula><mml:math id="inf2"><mml:mi mathvariant="normal">Ψ</mml:mi></mml:math></inline-formula> values.</p></caption><graphic mime-subtype="tiff" mimetype="image" xlink:href="elife-54603-fig1-v2.tif"/></fig></sec><sec id="s2" sec-type="results"><title>Results</title><p>Our interest in splicing regulation led us to examine alternative splicing in several single cell differentiation datasets from mice and humans that were generated with methods that recover sequence from along the full length of mRNAs. To investigate the reported high variability of splicing between cells more closely, we began by examining the splicing of cassette exons in a high-coverage mouse scRNA-seq dataset (<xref ref-type="bibr" rid="bib5">Chen et al., 2016</xref>), estimating their percent spliced-in as the fraction of splice junction reads that show exon inclusion (out of all reads that cover the junction). We use <inline-formula><mml:math id="inf3"><mml:mover accent="true"><mml:mi mathvariant="normal">Ψ</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover></mml:math></inline-formula> to denote these estimated rates, while <inline-formula><mml:math id="inf4"><mml:mi mathvariant="normal">Ψ</mml:mi></mml:math></inline-formula> denotes the actual rate as it is in the cell. For clarity, we define a single <inline-formula><mml:math id="inf5"><mml:mover accent="true"><mml:mi mathvariant="normal">Ψ</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover></mml:math></inline-formula> observation (which pertains to a specific cassette exon in an individual cell) as <italic>binary</italic> if it is close to 0 or 1 (i.e. the respective cell tends to express transcripts that either include the exon or exclude it, but not both). We then describe the distribution of an exon’s <inline-formula><mml:math id="inf6"><mml:mover accent="true"><mml:mi mathvariant="normal">Ψ</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover></mml:math></inline-formula> across cells as <italic>bimodal</italic> when its individual values are predominantly binary, where some cells have a <inline-formula><mml:math id="inf7"><mml:mover accent="true"><mml:mi mathvariant="normal">Ψ</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover></mml:math></inline-formula> close to 1 (most observed transcripts include the exon) and others have <inline-formula><mml:math id="inf8"><mml:mover accent="true"><mml:mi mathvariant="normal">Ψ</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover></mml:math></inline-formula> close to 0 (most observed transcripts do not include the exon). Strikingly, when we inspected several exons, we saw that they had more binary outcomes in cells with fewer reads covering their splice junctions, while cells with more reads were more likely to show non-binary <inline-formula><mml:math id="inf9"><mml:mover accent="true"><mml:mi mathvariant="normal">Ψ</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover></mml:math></inline-formula> values (<xref ref-type="fig" rid="fig2">Figure 2a</xref>). We realized that this effect of coverage may reflect a non-binary reality, since even if both isoforms are expressed in a certain cell, the likelihood of observing both isoforms is reduced as the number of captured mRNAs decreases. In contrast, if the underlying distribution were indeed bimodal with binary modes, as previously proposed (<xref ref-type="bibr" rid="bib26">Shalek et al., 2013</xref>; <xref ref-type="bibr" rid="bib23">Marinov et al., 2014</xref>; <xref ref-type="bibr" rid="bib29">Song et al., 2017</xref>), then the read coverage would have little effect on the proportion of binary <inline-formula><mml:math id="inf10"><mml:mover accent="true"><mml:mi mathvariant="normal">Ψ</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover></mml:math></inline-formula> observations across cells.</p><p>To further explore this phenomenon, we extended our analysis to the full scRNA-seq datasets. In all cases, we found a strong effect of coverage on the observed binary <inline-formula><mml:math id="inf11"><mml:mover accent="true"><mml:mi mathvariant="normal">Ψ</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover></mml:math></inline-formula> in exons with intermediate splicing (average <inline-formula><mml:math id="inf12"><mml:mover accent="true"><mml:mi mathvariant="normal">Ψ</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover></mml:math></inline-formula> between 0.2 and 0.8). We consistently found that exons with low junction read coverage had more binary <inline-formula><mml:math id="inf13"><mml:mover accent="true"><mml:mi mathvariant="normal">Ψ</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover></mml:math></inline-formula> values and bimodal <inline-formula><mml:math id="inf14"><mml:mover accent="true"><mml:mi mathvariant="normal">Ψ</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover></mml:math></inline-formula> distributions (<xref ref-type="fig" rid="fig2">Figure 2b,c</xref>; <xref ref-type="fig" rid="fig2s1">Figure 2—figure supplement 1a,b</xref>). We found that the association between binary values and read coverage was not observed in exons that are binary but not bimodal (i.e. nearly constitutively excluded or included exons, with average <inline-formula><mml:math id="inf15"><mml:mover accent="true"><mml:mi mathvariant="normal">Ψ</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover></mml:math></inline-formula> close to 0 or 1; <xref ref-type="fig" rid="fig2">Figure 2c</xref>). Taken together, these observations suggest that the abundance of binary observations in exon inclusion patterns may reflect a distortion of an underlying unimodal splicing distribution (i.e. when cells in fact express both isoforms), rather than a truly bimodal splicing pattern in the analyzed cells.</p><fig-group><fig id="fig2" position="float"><label>Figure 2.</label><caption><title>Splice junction read coverage is correlated with unimodality of splicing distributions.</title><p>(<bold>a</bold>) Comparison of splice junction read coverage and observed <inline-formula><mml:math id="inf16"><mml:mover accent="true"><mml:mi mathvariant="normal">Ψ</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover></mml:math></inline-formula> for three cassette exons in the Chen dataset, with low (Cadm1 exon 8; chr9: 47829377–47829409), medium (Thyn1 exon 6, chr9: 27006801–27006951), and high coverage (Rbm39 exon 3; chr2: 156178880–156178952). Each dot represents the <inline-formula><mml:math id="inf17"><mml:mover accent="true"><mml:mi mathvariant="normal">Ψ</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover></mml:math></inline-formula> of that exon in one cell. (<bold>b</bold>) <inline-formula><mml:math id="inf18"><mml:mover accent="true"><mml:mi mathvariant="normal">Ψ</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover></mml:math></inline-formula> distribution of the 300 highest coverage cassette exons with intermediate splicing (average <inline-formula><mml:math id="inf19"><mml:mover accent="true"><mml:mi mathvariant="normal">Ψ</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover></mml:math></inline-formula> between 0.2 and 0.8) in each of the six analyzed datasets. Each row in the heatmap shows the distribution of <inline-formula><mml:math id="inf20"><mml:mover accent="true"><mml:mi mathvariant="normal">Ψ</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover></mml:math></inline-formula> for one exon across all cells. (<bold>c</bold>) Relationship between the average read coverage and proportion of binary observations for each cassette exon in the Chen dataset. (<bold>d</bold>) Correlation between the total number of splice junction reads captured in each cell, and proportion of cassette exons with intermediate splicing that show binary <inline-formula><mml:math id="inf21"><mml:mover accent="true"><mml:mi mathvariant="normal">Ψ</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover></mml:math></inline-formula> in that cell.</p></caption><graphic mime-subtype="tiff" mimetype="image" xlink:href="elife-54603-fig2-v2.tif"/></fig><fig id="fig2s1" position="float" specific-use="child-fig"><label>Figure 2—figure supplement 1.</label><caption><title>Junction read coverage determines the proportion of binary observations in all analyzed datasets.</title><p>(<bold>a</bold>) As in <xref ref-type="fig" rid="fig2">Figure 2c</xref>, the splice junction read coverage of an intermediate exon was anti-correlated with the proportion of cells in which it shows binary <inline-formula><mml:math id="inf22"><mml:mover accent="true"><mml:mi mathvariant="normal">Ψ</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover></mml:math></inline-formula> (only one isoform is observed) in all datasets. Barplot: Pearson correlation between read coverage and proportion of binary observations of each cassette exon. (<bold>b</bold>) As in <xref ref-type="fig" rid="fig2">Figure 2d</xref>, the total number of splice junction reads in a cell was inversely proportional to the fraction of exons that have binary values in the cell in all datasets. Barplot: Pearson correlation between the total number of captured reads in each cell and the proportion of cassette exons with binary <inline-formula><mml:math id="inf23"><mml:mover accent="true"><mml:mi mathvariant="normal">Ψ</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover></mml:math></inline-formula>. (<bold>c</bold>) Relationship between transcriptional burst frequency and size, and the proportion of binary observations of an exon. (<bold>d</bold>) <inline-formula><mml:math id="inf24"><mml:msup><mml:mi>R</mml:mi><mml:mn>2</mml:mn></mml:msup></mml:math></inline-formula> of the linear regression prediction of the proportion of binary observations per exon based on burst frequency, size, number of reads, and a combination of these features.</p></caption><graphic mime-subtype="tiff" mimetype="image" xlink:href="elife-54603-fig2-figsupp1-v2.tif"/></fig></fig-group><p>We then asked if the association of binary splicing outcomes with low read coverage could be due to some biological consequence of low transcription, or if it was a technical consequence of low sequencing coverage. We found that, among the cells in a single experiment, the cells with an overall higher number of splice junction reads also tended to have a smaller fraction of exons with binary values (<xref ref-type="fig" rid="fig2">Figure 2d</xref>, <xref ref-type="fig" rid="fig2s1">Figure 2—figure supplement 1b</xref>), suggesting an influence of technical coverage rather than transcription level. We further considered the effect of biological variations in transcription. Transcription at a single locus occurs in intermittent bursts of RNA synthesis (<xref ref-type="bibr" rid="bib25">Raj and van Oudenaarden, 2008</xref>), suggesting a possible effect of size and frequency of transcriptional bursts on binary splicing. Using transcriptional bursting data from <xref ref-type="bibr" rid="bib17">Larsson et al., 2019</xref>, we found that genes with either high burst frequency or large bursts did exhibit fewer binary splicing observations (<xref ref-type="fig" rid="fig2s1">Figure 2—figure supplement 1c</xref>), but a linear regression showed that burst frequency and size did not contribute to binary observations beyond the effect of read coverage (<xref ref-type="fig" rid="fig2s1">Figure 2—figure supplement 1d</xref>). This suggests that transcriptional bursting contributes to splicing variability only by determining the overall abundance of an mRNA, consistent with single-molecule fluorescence observations (<xref ref-type="bibr" rid="bib34">Waks et al., 2011</xref>).</p><sec id="s2-1"><title>Simulations of RNA sequencing reveal technical sources of distortion of splicing estimates</title><p>A simple probabilistic exercise shows the potential loss of splicing information during sequencing. Single cell RNA-seq experiments that capture full-length transcripts have an estimated capture efficiency of only ∼10%, due to RNA degradation and inefficient reverse transcription (<xref ref-type="bibr" rid="bib23">Marinov et al., 2014</xref>; <xref ref-type="bibr" rid="bib11">Grün et al., 2014</xref>; <xref ref-type="bibr" rid="bib41">Ziegenhain et al., 2017</xref>; <xref ref-type="bibr" rid="bib24">Qiu et al., 2017</xref>). For instance, a gene that expresses 20 mRNA molecules in a cell might only have two mRNAs recovered, and if that gene is alternatively spliced with a true splicing rate <inline-formula><mml:math id="inf25"><mml:mi mathvariant="normal">Ψ</mml:mi></mml:math></inline-formula> of 0.5, there is approximately a 50% chance that those few recovered mRNAs will only represent one of the two isoforms that were originally present in the cell (<xref ref-type="fig" rid="fig3s1">Figure 3—figure supplement 1a,b</xref>). As many genes are expressed at just a few RNA molecules per cell, low recovery might affect many alternative splicing events (<xref ref-type="bibr" rid="bib27">Shapiro et al., 2013</xref>; <xref ref-type="bibr" rid="bib39">Zenklusen et al., 2008</xref>). Furthermore, while the empirically observed <inline-formula><mml:math id="inf26"><mml:mover accent="true"><mml:mi mathvariant="normal">Ψ</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover></mml:math></inline-formula> provides a maximum likelihood estimate for the true splicing rate, the uncertainty of this estimate (i.e. the range of alternative values with a nearly similar likelihood) decreases substantially with the number of observed molecules (<xref ref-type="fig" rid="fig3s1">Figure 3—figure supplement 1c</xref> and Materials and methods). As a result, the probability that the observed <inline-formula><mml:math id="inf27"><mml:mover accent="true"><mml:mi mathvariant="normal">Ψ</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover></mml:math></inline-formula> is close to the true underlying <inline-formula><mml:math id="inf28"><mml:mi mathvariant="normal">Ψ</mml:mi></mml:math></inline-formula> increases when more mRNA molecules are captured (<xref ref-type="fig" rid="fig3s1">Figure 3—figure supplement 1d</xref>).</p><p>Our theoretical reasoning above relied on a simple model where the number of observed mRNA molecules (rather than number of reads) is known and the only distorting factor is a limited capture efficiency. In practice, both of these assumptions are challenged due to additional factors, such as PCR amplification and variability in the capture efficiency across cells. To investigate the pertinent effects on <inline-formula><mml:math id="inf29"><mml:mover accent="true"><mml:mi mathvariant="normal">Ψ</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover></mml:math></inline-formula> distributions in this more complex setting, we designed a probabilistic simulator of alternative splicing in single cells (<xref ref-type="fig" rid="fig3s2">Figure 3—figure supplement 2</xref>). The model has two main components: we begin by simulating the underlying molecular content of each cell, by drawing gene expression levels and cassette exon splicing rates from a probabilistic model of cell state. We then simulate the technical process of extracting data from each cell using single-cell RNA sequencing with full transcript coverage. This part accounts for variability in capture rates, and the effects of PCR amplification, fragmentation and sequencing. It relies on SymSim, a simulation tool for single-cell RNA sequencing data (<xref ref-type="bibr" rid="bib40">Zhang et al., 2019</xref>). The final product of our simulation is the number of splice junction reads that either span or skip each exon in each cell. These numbers are distorted in a way that reflects real nuisance factors. For instance, two reads could have originated from the same molecule due to amplification effects.</p><p>We used our simulator to investigate how the observed inclusion (<inline-formula><mml:math id="inf30"><mml:mover accent="true"><mml:mi mathvariant="normal">Ψ</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover></mml:math></inline-formula>) of cassette exons differs from the underlying <inline-formula><mml:math id="inf31"><mml:mi mathvariant="normal">Ψ</mml:mi></mml:math></inline-formula>, under different average capture rates, and setting the other technical parameters to values that are characteristic of Smart-seq2 datasets (see Materials and methods). We considered either a binary-bimodal regime of <inline-formula><mml:math id="inf32"><mml:mi mathvariant="normal">Ψ</mml:mi></mml:math></inline-formula> (i.e. both isoforms are expressed in the population, but rarely by the same cell; <xref ref-type="fig" rid="fig1">Figure 1a</xref>), or a non-binary regime (cells tend to express both isoforms; <xref ref-type="fig" rid="fig1">Figure 1b</xref>). We simulated splicing of cassette exons in 1500 genes, in a population of 300 single cells. In the bimodal simulation, 500 exons were modeled to have alternative splicing with a bimodal distribution across cells, and in the unimodal simulation, these 500 exons were modeled to have a unimodal distribution. To reflect the patterns seen in real data, we also simulated splicing of 500 exons that were nearly constitutively included and 500 that were nearly constitutively skipped.</p><p>As expected, in the binary-bimodal simulation, the observed <inline-formula><mml:math id="inf33"><mml:mover accent="true"><mml:mi mathvariant="normal">Ψ</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover></mml:math></inline-formula> reflected the underlying process well, independent of the average capture efficiency (<xref ref-type="fig" rid="fig3">Figure 3a</xref>). In contrast, when we modeled a non-binary splicing regime, the observed <inline-formula><mml:math id="inf34"><mml:mover accent="true"><mml:mi mathvariant="normal">Ψ</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover></mml:math></inline-formula> distributions were strikingly similar to the splicing distributions of cassette exons in real single-cell RNA-seq datasets (<xref ref-type="fig" rid="fig3">Figure 3b</xref>). Specifically, the loss of information due to mRNA recovery and library generation led many of the observed <inline-formula><mml:math id="inf35"><mml:mover accent="true"><mml:mi mathvariant="normal">Ψ</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover></mml:math></inline-formula> to become binary, and their observed distribution across cells to become bimodal. This tendency again correlated with coverage, whereby lowly covered exons showed the strongest effect, while exons with high coverage maintained a non-binary, unimodal distribution. Consistently, in this non-binary regime, the average of <inline-formula><mml:math id="inf36"><mml:mover accent="true"><mml:mi mathvariant="normal">Ψ</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover></mml:math></inline-formula> was similar to the true average of <inline-formula><mml:math id="inf37"><mml:mi mathvariant="normal">Ψ</mml:mi></mml:math></inline-formula>, but the variance of <inline-formula><mml:math id="inf38"><mml:mover accent="true"><mml:mi mathvariant="normal">Ψ</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover></mml:math></inline-formula> increased (<xref ref-type="fig" rid="fig3s1">Figure 3—figure supplement 1e,f</xref>). Furthermore, as in the real data sets (<xref ref-type="fig" rid="fig2">Figure 2c</xref>), we also found that the dependency between read coverage and the chance of observing a binary <inline-formula><mml:math id="inf39"><mml:mover accent="true"><mml:mi mathvariant="normal">Ψ</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover></mml:math></inline-formula> is more pronounced in exons with an underlying <inline-formula><mml:math id="inf40"><mml:mi mathvariant="normal">Ψ</mml:mi></mml:math></inline-formula> that is far from binary (<xref ref-type="fig" rid="fig3">Figure 3c–f</xref>), highlighting again that such an association likely indicates an artifact.</p><fig-group><fig id="fig3" position="float"><label>Figure 3.</label><caption><title>Simulations show that gene expression and capture efficiency influence the observed distribution of splicing.</title><p>(<bold>a</bold>) Simulations of alternative splicing and scRNA-seq under the binary-bimodal model, in which each cell produces one isoform or the other, but rarely both. As in <xref ref-type="fig" rid="fig2">Figure 2b</xref>, each row of the histogram shows <inline-formula><mml:math id="inf41"><mml:mover accent="true"><mml:mi mathvariant="normal">Ψ</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover></mml:math></inline-formula> for one intermediate exon across all cells. The observed <inline-formula><mml:math id="inf42"><mml:mover accent="true"><mml:mi mathvariant="normal">Ψ</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover></mml:math></inline-formula> distribution is similar to the true <inline-formula><mml:math id="inf43"><mml:mi mathvariant="normal">Ψ</mml:mi></mml:math></inline-formula> distribution, and its shape is largely unaffected by capture efficiency. (<bold>b</bold>) Simulations with the non-binary, unimodal model, in which most cells present a mixture of the two alternative isoforms. Exons with high expression have a unimodal distribution of true <inline-formula><mml:math id="inf44"><mml:mi mathvariant="normal">Ψ</mml:mi></mml:math></inline-formula>. Low capture efficiency results in an increase in binary observations (only one isoform observed), leading to a distortion of the observed distribution of <inline-formula><mml:math id="inf45"><mml:mover accent="true"><mml:mi mathvariant="normal">Ψ</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover></mml:math></inline-formula> to look bimodal. Only a handful of the highest expressed exons maintain a unimodal distribution of <inline-formula><mml:math id="inf46"><mml:mover accent="true"><mml:mi mathvariant="normal">Ψ</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover></mml:math></inline-formula>. Fewer exons show unimodal splicing as the capture efficiency is reduced. (<bold>c</bold>) Under the binary-bimodal model, exons with high coverage have slightly fewer binary <inline-formula><mml:math id="inf47"><mml:mi mathvariant="normal">Ψ</mml:mi></mml:math></inline-formula> observations, and (<bold>d</bold>) simulated cells with a high number of total splice junction reads have slightly fewer exons with binary <inline-formula><mml:math id="inf48"><mml:mover accent="true"><mml:mi mathvariant="normal">Ψ</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover></mml:math></inline-formula>. (<bold>e</bold>) Under the unimodal model, exons with intermediate splicing show a strong decrease in binary observations as coverage increases, as seen in real data (<xref ref-type="fig" rid="fig2">Figure 2c</xref>). (<bold>f</bold>) Similarly, simulated cells with high read coverage have a decrease of the proportion of binary <inline-formula><mml:math id="inf49"><mml:mover accent="true"><mml:mi mathvariant="normal">Ψ</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover></mml:math></inline-formula>. (<bold>g</bold>) Effect of capture efficiency on the proportion of binary observations of cassette exons with underlying <inline-formula><mml:math id="inf50"><mml:mi mathvariant="normal">Ψ</mml:mi></mml:math></inline-formula> = 0.5. (<bold>h</bold>) Effect of the initial number of mRNA molecules and underlying <inline-formula><mml:math id="inf51"><mml:mi mathvariant="normal">Ψ</mml:mi></mml:math></inline-formula> on the proportion of binary <inline-formula><mml:math id="inf52"><mml:mover accent="true"><mml:mi mathvariant="normal">Ψ</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover></mml:math></inline-formula> observations.</p></caption><graphic mime-subtype="tiff" mimetype="image" xlink:href="elife-54603-fig3-v2.tif"/></fig><fig id="fig3s1" position="float" specific-use="child-fig"><label>Figure 3—figure supplement 1.</label><caption><title>Theoretical calculations and simulations of the effect of biological and technical factors in splicing observations.</title><p>(<bold>a</bold>) Theoretical likelihood of capturing only mRNAs representing one isoform of an alternatively spliced gene in a single cell, determined by the total number of mRNAs in the cell, the <inline-formula><mml:math id="inf53"><mml:mi mathvariant="normal">Ψ</mml:mi></mml:math></inline-formula> of the isoforms, and a 10% capture efficiency. (<bold>b</bold>) Probability of observing a binary <inline-formula><mml:math id="inf54"><mml:mover accent="true"><mml:mi mathvariant="normal">Ψ</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover></mml:math></inline-formula> (only one isoform observed) given the number of mRNA molecules of that gene present in the cell, when the underlying <inline-formula><mml:math id="inf55"><mml:mi mathvariant="normal">Ψ</mml:mi></mml:math></inline-formula> is fixed at 0.5. (<bold>c</bold>) Effect of the number of captured mRNA molecules on the uncertainty of <inline-formula><mml:math id="inf56"><mml:mover accent="true"><mml:mi mathvariant="normal">Ψ</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover></mml:math></inline-formula> observations. <inline-formula><mml:math id="inf57"><mml:mover accent="true"><mml:mi mathvariant="normal">Ψ</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover></mml:math></inline-formula> is understood as the maximum likelihood estimate of the underlying <inline-formula><mml:math id="inf58"><mml:mi mathvariant="normal">Ψ</mml:mi></mml:math></inline-formula>. (<bold>d</bold>) The posterior probability of having an observed <inline-formula><mml:math id="inf59"><mml:mover accent="true"><mml:mi mathvariant="normal">Ψ</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover></mml:math></inline-formula> within 0.1 of the underlying <inline-formula><mml:math id="inf60"><mml:mi mathvariant="normal">Ψ</mml:mi></mml:math></inline-formula>. (<bold>e</bold>) Distribution of the relative error between the average observed <inline-formula><mml:math id="inf61"><mml:mover accent="true"><mml:mi mathvariant="normal">Ψ</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover></mml:math></inline-formula>, and the average true <inline-formula><mml:math id="inf62"><mml:mi mathvariant="normal">Ψ</mml:mi></mml:math></inline-formula>, in our simulations under different capture efficiency rates. The relative error is calculated as the difference between the average <inline-formula><mml:math id="inf63"><mml:mover accent="true"><mml:mi mathvariant="normal">Ψ</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover></mml:math></inline-formula> and the average true <inline-formula><mml:math id="inf64"><mml:mi mathvariant="normal">Ψ</mml:mi></mml:math></inline-formula>, scaled by the average true <inline-formula><mml:math id="inf65"><mml:mi mathvariant="normal">Ψ</mml:mi></mml:math></inline-formula>. (<bold>f</bold>) Distribution of the relative error between the variance in the observed <inline-formula><mml:math id="inf66"><mml:mover accent="true"><mml:mi mathvariant="normal">Ψ</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover></mml:math></inline-formula>, and the variance in the true <inline-formula><mml:math id="inf67"><mml:mi mathvariant="normal">Ψ</mml:mi></mml:math></inline-formula>, in our simulations under different capture efficiency rates.</p></caption><graphic mime-subtype="tiff" mimetype="image" xlink:href="elife-54603-fig3-figsupp1-v2.tif"/></fig><fig id="fig3s2" position="float" specific-use="child-fig"><label>Figure 3—figure supplement 2.</label><caption><title>Schematic of scRNA-seq splicing simulator.</title><p>Simulator of scRNA-seq splicing data. Green elements represent biological variables; blue elements represent technical processes. The underlying <inline-formula><mml:math id="inf68"><mml:mi mathvariant="normal">Ψ</mml:mi></mml:math></inline-formula> is drawn from a Beta distribution with either a bimodal or unimodal shape. Individual gene expression determines the total number of mRNAs, and these mRNAs are spliced stochastically according to <inline-formula><mml:math id="inf69"><mml:mi mathvariant="normal">Ψ</mml:mi></mml:math></inline-formula>, producing isoforms that splice in or skip the exon. mRNAs are captured with a probability drawn from a normal distribution. Sequencing produces splice junction reads, which determine the observed <inline-formula><mml:math id="inf70"><mml:mover accent="true"><mml:mi mathvariant="normal">Ψ</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover></mml:math></inline-formula>.</p></caption><graphic mime-subtype="tiff" mimetype="image" xlink:href="elife-54603-fig3-figsupp2-v2.tif"/></fig></fig-group><p>To address the extent of the distortion from mRNA recovery, we ran the simulator with varying capture efficiency and a fixed underlying <inline-formula><mml:math id="inf71"><mml:mrow><mml:mi mathvariant="normal">Ψ</mml:mi><mml:mo>=</mml:mo><mml:mn>0.5</mml:mn></mml:mrow></mml:math></inline-formula>. We found that decreasing the average capture efficiency dramatically increased the number of binary <inline-formula><mml:math id="inf72"><mml:mover accent="true"><mml:mi mathvariant="normal">Ψ</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover></mml:math></inline-formula> observations, particularly for exons with low expression, although even highly expressed genes suffered great distortion in the observed <inline-formula><mml:math id="inf73"><mml:mover accent="true"><mml:mi mathvariant="normal">Ψ</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover></mml:math></inline-formula> when the average capture efficiency was very low (<xref ref-type="fig" rid="fig3">Figure 3g</xref>). These results reinforced the hypothesis that capture efficiency is a main technical factor that creates the appearance of bimodality in single-cell splicing.</p><p>Finally, we estimated the chance of observing only one type of isoform in any given cell (i.e. a binary <inline-formula><mml:math id="inf74"><mml:mover accent="true"><mml:mi mathvariant="normal">Ψ</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover></mml:math></inline-formula>) as a function of the underlying <inline-formula><mml:math id="inf75"><mml:mi mathvariant="normal">Ψ</mml:mi></mml:math></inline-formula> and the number of transcripts that are present in the cell (<xref ref-type="fig" rid="fig3">Figure 3h</xref>). For this analysis, we set an average mRNA capture rate of 10%. Our results delineate the range of values in which an artifact is less expected. For instance, for an exon with 50% inclusion rate, a non-binary estimate is more likely if the respective gene has at least 50 transcripts in the cell. Notably, these estimates are more conservative than the theoretical analysis (<xref ref-type="fig" rid="fig3s1">Figure 3—figure supplement 1a,b</xref>), due to the effect of the technical nuisance factors we modeled in this simulation.</p></sec><sec id="s2-2"><title>Accounting for mRNA recovery improves analysis of alternative splicing</title><p>We sought criteria that would identify reliable measurements of splicing in single cells and avoid distortions from low mRNA recovery. While ideally we should rely on the actual number of mRNA molecules recovered, full-length RNA-seq experiments generally do not report an absolute mRNA count. Previous studies assessed the quality of splicing observations based on the number of reads covering alternative splice junctions (<xref ref-type="bibr" rid="bib29">Song et al., 2017</xref>; <xref ref-type="bibr" rid="bib20">Linker et al., 2019</xref>), but the number of splice junction reads is influenced by the extent of PCR amplification and sequencing depth, and so it does not directly reflect the number of recovered mRNAs.</p><p>We realized that we could estimate the number of mRNA molecules that were captured into cDNA by using the Census normalization approach proposed by <xref ref-type="bibr" rid="bib24">Qiu et al., 2017</xref>. This method infers a per-cell scaling factor between the relative abundance of each transcript, inferred from RNA-seq, and the actual number of mRNAs recovered. We found that some datasets with many reads per cell, such as the Song dataset (<xref ref-type="bibr" rid="bib29">Song et al., 2017</xref>), nonetheless had few mRNAs recovered per cell (<xref ref-type="fig" rid="fig4">Figure 4a</xref>, <xref ref-type="fig" rid="fig4s1">Figure 4—figure supplement 1c</xref>), which may explain the extensive splicing bimodality in this dataset. The dataset with the highest recovery of mRNAs (<xref ref-type="bibr" rid="bib5">Chen et al., 2016</xref>) indeed showed less binary splicing (<xref ref-type="fig" rid="fig2">Figure 2b</xref>).</p><fig-group><fig id="fig4" position="float"><label>Figure 4.</label><caption><title>Accounting for coverage biases reveals unimodal splicing distributions and differential splicing.</title><p>(<bold>a</bold>) Estimated total mRNA molecules captured per cell. (<bold>b</bold>) Estimated number of recovered mRNAs vs splice junction reads for cassette exons, averaged across cells. Each dot corresponds to an exon, and its color indicates the proportion of cells in which it has a binary observation (only one isoform observed). We analyzed exons with average <inline-formula><mml:math id="inf76"><mml:mover accent="true"><mml:mi mathvariant="normal">Ψ</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover></mml:math></inline-formula> between 0.05 and 0.95. (<bold>c</bold>) Per-cell splice junction coverage rate in each dataset. (<bold>d</bold>) Cadm1 exon 8 alternative splicing appears binary in many cells in the Chen dataset. Correlation with lineage pseudotime: Spearman’s <inline-formula><mml:math id="inf77"><mml:msub><mml:mi>r</mml:mi><mml:mi>s</mml:mi></mml:msub></mml:math></inline-formula> = 0.1. (<bold>e</bold>) Cadm1 exon after removing cells with fewer than 10 recovered Cadm1 mRNA molecules and fewer splice junction reads than expected from 10 mRNAs (grey). Spearman’s <inline-formula><mml:math id="inf78"><mml:msub><mml:mi>r</mml:mi><mml:mi>s</mml:mi></mml:msub></mml:math></inline-formula> = 0.52. (<bold>f</bold>) PCA projection and clustering of single cells in the Chen dataset, showing differentiation of mouse ES cells into neurons. Red line, lineage inferred with Slingshot. (<bold>g</bold>) Number of cassette exons with observations from at least 10 mRNA reads in at least 50% of cells in any cluster. (<bold>h</bold>) Stacked histograms showing the distribution of observed <inline-formula><mml:math id="inf79"><mml:mover accent="true"><mml:mi mathvariant="normal">Ψ</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover></mml:math></inline-formula> of exons as in (<bold>g</bold>), in each cell cluster of the Chen dataset. Observations with fewer than 10 mRNA molecules were removed. We show exons with average <inline-formula><mml:math id="inf80"><mml:mover accent="true"><mml:mi mathvariant="normal">Ψ</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover></mml:math></inline-formula> ranging from 0.1 to 0.9 per cluster. (<bold>i</bold>) QQ-plot comparing the quantiles of a uniform distribution (x-axis) with the quantiles of the distributions of p-values from the Kruskal-Wallis test (y-axis). A diagonal line (gray dotted line) would mean the p-values are uniformly distributed. A lower area under the curve indicates enrichment for low p-values. The point on the x-axis at which each line crosses the dotted red line indicates the proportion of p-values that are below 0.05 in the distribution. (<bold>j</bold>) Fold enrichment of exons with a Kruskal-Wallis p &lt; <inline-formula><mml:math id="inf81"><mml:mi>x</mml:mi></mml:math></inline-formula> in the set of exons selected with the mRNA-based filter (blue), and exons selected with a flat read minimum filter (red). (<bold>k</bold>) Significance p-value of the enrichment, estimated with the hypergeometric test and adjusted for FDR. (<bold>l</bold>) Example exons that pass the overall filter criteria in the Chen dataset and have p&lt;0.05 in the Kruskal-Wallis test.</p></caption><graphic mime-subtype="tiff" mimetype="image" xlink:href="elife-54603-fig4-v2.tif"/></fig><fig id="fig4s1" position="float" specific-use="child-fig"><label>Figure 4—figure supplement 1.</label><caption><title>Relationship between read coverage, captured mRNAs, and binarity in single cell datasets.</title><p>(<bold>a</bold>) Average number of splice junction reads required to have a 50% likelihood of observing both isoforms, from simulations in <xref ref-type="fig" rid="fig3">Figure 3j</xref>. (<bold>b</bold>) Total mRNAs required to have a 50% likelihood of observing both isoforms, from simulations in <xref ref-type="fig" rid="fig3">Figure 3k</xref>. (<bold>c</bold>) Total mapped reads per cell for each dataset. (<bold>d</bold>) Estimated average number of recovered mRNAs vs. average number of splice junction reads for each exon. (<bold>e</bold>) Expression of pluripotency and neuron differentiation marker genes in the Chen dataset; expression is scaled by each row’s maximum and minimum. Cells are ordered by inferred pseudotime. Top color key, clusters from agglomerative clustering; bottom color key, labels from Chen et al. The red box highlights two sub-groups of neurons identified by clustering. (<bold>f</bold>) Visualization of the distribution of <inline-formula><mml:math id="inf82"><mml:mover accent="true"><mml:mi mathvariant="normal">Ψ</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover></mml:math></inline-formula> observations toward extreme values in the first cluster of cells of each dataset. For each <inline-formula><mml:math id="inf83"><mml:mi>x</mml:mi></mml:math></inline-formula> cutoff in the x-axis, the y-axis corresponds to the proportion of cells that have <inline-formula><mml:math id="inf84"><mml:mrow><mml:mover accent="true"><mml:mi mathvariant="normal">Ψ</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover><mml:mo>≤</mml:mo><mml:mi>x</mml:mi></mml:mrow></mml:math></inline-formula> or <inline-formula><mml:math id="inf85"><mml:mrow><mml:mover accent="true"><mml:mi mathvariant="normal">Ψ</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover><mml:mo>≥</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mn>1</mml:mn><mml:mo>-</mml:mo><mml:mi>x</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula>. Blue lines, exons passing the mRNA-based filter; red lines, exons removed by filter. (<bold>g</bold>) Stacked histograms, as in <xref ref-type="fig" rid="fig4">Figure 4h</xref>, for other datasets. The Fletcher dataset is excluded because only five exons pass the mRNA filter. (<bold>h</bold>) Stacked histograms of exons that do not pass the filter in the Chen dataset; exons were subsampled to match the number that do pass the filter in each cell type cluster. (<bold>i</bold>) Sex-dependent distribution of <inline-formula><mml:math id="inf86"><mml:mover accent="true"><mml:mi mathvariant="normal">Ψ</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover></mml:math></inline-formula> of the two bimodal exons of the Chen dataset after cell-type stratification: Smarcad1 exon 3 (chr6: 65043836–65044108) in early Epi cells, Nsfl1c exon 4 (chr2: 151502455–151502460) in late Epi cells.</p></caption><graphic mime-subtype="tiff" mimetype="image" xlink:href="elife-54603-fig4-figsupp1-v2.tif"/></fig><fig id="fig4s2" position="float" specific-use="child-fig"><label>Figure 4—figure supplement 2.</label><caption><title>Analysis of differential splicing among selected exons with the Kruskal-Wallis analysis of variance.</title><p>(<bold>a</bold>) Comparison of the precision of selecting exons with low p-values, for the mRNA-based filter versus selecting exons on a flat minimum of 10 reads. (<bold>b</bold>) Recall. (<bold>c</bold>) F1-score. (<bold>d</bold>) Specificity. (<bold>e</bold>) Accuracy. (<bold>f</bold>) Number of exons with <inline-formula><mml:math id="inf87"><mml:mrow><mml:mi>p</mml:mi><mml:mo>≤</mml:mo><mml:mi>x</mml:mi></mml:mrow></mml:math></inline-formula> in each dataset.</p></caption><graphic mime-subtype="tiff" mimetype="image" xlink:href="elife-54603-fig4-figsupp2-v2.tif"/></fig><fig id="fig4s3" position="float" specific-use="child-fig"><label>Figure 4—figure supplement 3.</label><caption><title>Analysis of differential splicing among selected exons with the autocorrelation test.</title><p>(<bold>a</bold>) Number of exons with p <inline-formula><mml:math id="inf88"><mml:mrow><mml:mi/><mml:mo>≤</mml:mo><mml:mi>x</mml:mi></mml:mrow></mml:math></inline-formula> in each dataset. (<bold>b</bold>) QQ-plot comparing the quantiles of a uniform distribution, with the quantiles of the distributions of p-values from the autocorrelation test. (<bold>c</bold>) Fold enrichment of exons with an autocorrelation p &lt; <inline-formula><mml:math id="inf89"><mml:mi>x</mml:mi></mml:math></inline-formula> in the set of exons selected with the mRNA-based filter (blue), and exons selected with a flat read minimum filter (red). (<bold>d</bold>) Significance p-value of the enrichment shown in (<bold>c</bold>). For each p-value limit <inline-formula><mml:math id="inf90"><mml:mi>x</mml:mi></mml:math></inline-formula>, we estimate the significance with the hypergeometric test, and correct for multiple testing using the Benjamini-Hochberg FDR adjustment. (<bold>e</bold>) F1-score. (<bold>f</bold>) Specificity. (<bold>g</bold>) Accuracy.</p></caption><graphic mime-subtype="tiff" mimetype="image" xlink:href="elife-54603-fig4-figsupp3-v2.tif"/></fig><fig id="fig4s4" position="float" specific-use="child-fig"><label>Figure 4—figure supplement 4.</label><caption><title>Distribution of <inline-formula><mml:math id="inf91"><mml:mover accent="true"><mml:mi mathvariant="normal">Ψ</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover></mml:math></inline-formula> of example exons.</title><p>(<bold>a</bold>) Skipped Cadm1 exon 8 (chr9: 47829377–47829409). We show the relationship between pseudotime and observed <inline-formula><mml:math id="inf92"><mml:mover accent="true"><mml:mi mathvariant="normal">Ψ</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover></mml:math></inline-formula>; as well as violinplots of the distribution of <inline-formula><mml:math id="inf93"><mml:mover accent="true"><mml:mi mathvariant="normal">Ψ</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover></mml:math></inline-formula> in each cluster before filtering, and after filtering. (<bold>b</bold>) Violinplots of the distribution of <inline-formula><mml:math id="inf94"><mml:mover accent="true"><mml:mi mathvariant="normal">Ψ</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover></mml:math></inline-formula> in each cluster after filtering for the exons in <xref ref-type="fig" rid="fig4">Figure 4k</xref>: Nsfl1c exon 4 (chr2: 151502455–151502460), Rpn2 exon 16 (chr2: 157323223–157323270), Tecr exon 4 (chr8: 83573411–83573455), Zfp207 exon 8 (chr11: 80393084–80393176).</p></caption><graphic mime-subtype="tiff" mimetype="image" xlink:href="elife-54603-fig4-figsupp4-v2.tif"/></fig></fig-group><p>Next, we sought a threshold for mRNA recovery that would suppress spurious observations of binary splicing. Our simulations and our analytical calculations suggested that, for a capture efficiency of 10%, recovering 7–10 mRNA molecules would be more likely than not to capture both isoforms for exons with intermediate splicing (<xref ref-type="fig" rid="fig3">Figure 3h</xref>), and that the observed <inline-formula><mml:math id="inf95"><mml:mover accent="true"><mml:mi mathvariant="normal">Ψ</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover></mml:math></inline-formula> would most likely be within 0.1 of the real value (<xref ref-type="fig" rid="fig2s1">Figure 2—figure supplement 1d</xref>). In keeping with this, we saw in the real data that exons with an average of at least 10 mRNAs recovered per cell generally had substantially fewer binary observations (<xref ref-type="fig" rid="fig4">Figure 4b</xref>, <xref ref-type="fig" rid="fig4s1">Figure 4—figure supplement 1d</xref>; limited to exons with average <inline-formula><mml:math id="inf96"><mml:mover accent="true"><mml:mi mathvariant="normal">Ψ</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover></mml:math></inline-formula> between 0.05 and 0.95). Nonetheless, a subset of these exons still showed binary splicing in most cells. These exons had few splice junction reads relative to the estimated mRNA count. We expect that these represent anomalously low recovery of reads from the specific splice junctions of interest, perhaps due to annotation errors or poor recovery of fragments with particular sequence composition. We reasoned that a data-driven splice junction read criterion would prevent distortions arising from this low read recovery. To find an appropriate read minimum, we determined the number of splice junction reads expected to arise from a cassette exon in each cell in different datasets, based on that cell’s overall mRNA recovery (<xref ref-type="fig" rid="fig4">Figure 4c</xref>; see Materials and methods). This provided a second filtering criterion: we excluded exons with fewer splice junction reads than would be expected from 10 mRNAs, given that exon’s <inline-formula><mml:math id="inf97"><mml:mover accent="true"><mml:mi mathvariant="normal">Ψ</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover></mml:math></inline-formula> and the coverage rate in that particular cell. This metric is calculated for each exon separately, driven by the actual information in each cell, and it varies substantially between datasets.</p><p>We then selected the exons from each cell that met the combined requirement of 10 mRNAs and the splice junction reads that would arise from 10 mRNAs, and asked what effect this filter had on binary observations of splicing. As an example, our filter removed seemingly spurious binary observations for alternatively spliced exon 8 of Cadm1 (<xref ref-type="fig" rid="fig4">Figure 4d</xref>). The observations that remained after filtering showed a clear pattern of increased inclusion along pseudotime, with exon skipping in stem cells and exon inclusion in fully differentiated neurons (Spearman’s <inline-formula><mml:math id="inf98"><mml:msub><mml:mi>r</mml:mi><mml:mi>s</mml:mi></mml:msub></mml:math></inline-formula> = 0.52, p=1.2 × 10<sup>7</sup>; <xref ref-type="fig" rid="fig4">Figure 4e</xref>). The correlation between splicing observations and differentiation pseudotime highlighted that cell type differences could contribute to observations of bimodality that are not the result of an artificial inflation of binary observations, and this was an important factor to consider in our analysis.</p><sec id="s2-2-1"><title>Bimodality in filtered exons is explained by differential splicing between cell types</title><p>Earlier papers had reported a surprising amount of bimodal splicing within a cell type, with extensive binary outcomes in individual cells, that is similar cells with different dominant isoforms. This suggested that some aspects of gene expression stochastically locked individual cells into producing primarily molecules of one or the other isoform. However, our results so far suggest that much of this observed variability may be an artifact of low mRNA recovery. In contrast, differences in splicing between cells of different types are consistent with conventional mechanisms such as regulation by cell-type-specific splicing factors. Therefore, when considering heterogeneous cell samples, large shifts in splicing between cell types may result in truly bimodal <inline-formula><mml:math id="inf99"><mml:mi mathvariant="normal">Ψ</mml:mi></mml:math></inline-formula>. In contrast to the first scenario, we would expect the corresponding observations <inline-formula><mml:math id="inf100"><mml:mover accent="true"><mml:mi mathvariant="normal">Ψ</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover></mml:math></inline-formula> to remain bimodal even after low-quality data points were removed.</p><p>We therefore sought to distinguish between these two scenarios and estimate the extent of bimodal splicing within a cell type that is strongly supported by the data. Most of the datasets in our analysis came from differentiation time courses, and so to examine homogeneous cell subsets, we stratified the cells into groups indicative of their developmental stage. The groups were identified by clustering the cells using the normalized sum of reads from every gene (i.e. not directly representing their variation in splicing; <xref ref-type="fig" rid="fig4">Figure 4f</xref>) and labeled based on expression of known marker genes (<xref ref-type="fig" rid="fig4s1">Figure 4—figure supplement 1e</xref>).</p><p>We found that, prior to filtering, hundreds of exons with intermediate splicing (average <inline-formula><mml:math id="inf101"><mml:mover accent="true"><mml:mi mathvariant="normal">Ψ</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover></mml:math></inline-formula> between 0.2 and 0.8) seemed to have at least weakly bimodal splicing distributions (using a heuristic definition of at least 25% of cells with <inline-formula><mml:math id="inf102"><mml:mrow><mml:mover accent="true"><mml:mi mathvariant="normal">Ψ</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover><mml:mo>≤</mml:mo><mml:mi/></mml:mrow></mml:math></inline-formula> 0.25% and 25% with <inline-formula><mml:math id="inf103"><mml:mrow><mml:mover accent="true"><mml:mi mathvariant="normal">Ψ</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover><mml:mo>≥</mml:mo><mml:mi/></mml:mrow></mml:math></inline-formula> 0.75), a rate that roughly matched previous descriptions (<xref ref-type="bibr" rid="bib29">Song et al., 2017</xref>; <xref ref-type="table" rid="table1">Table 1</xref>). We then discarded the observations that did not meet our filtering criteria, and retained for every cluster only those exons with observations remaining in at least 50% of cells (<xref ref-type="fig" rid="fig4">Figure 4g</xref>). With that filtering we found that most remaining exons had fewer binary observations than the discarded exons (<xref ref-type="fig" rid="fig4s1">Figure 4—figure supplement 1f</xref>). Furthermore, cell clusters had no or very few remaining exons with bimodal splicing distributions (<xref ref-type="fig" rid="fig4">Figure 4h</xref>, <xref ref-type="fig" rid="fig4s1">Figure 4—figure supplement 1g,h</xref>, <xref ref-type="table" rid="table1">Table 1</xref>). For instance, in the Chen dataset, there were two remaining cases of bimodality, and both seem to be the result of sex-specific splicing (<xref ref-type="fig" rid="fig4s1">Figure 4—figure supplement 1i</xref>). This trend persisted when reanalyzing all datasets and clusters using a range of cutoffs for qualifying a splicing pattern as binary (<xref ref-type="fig" rid="fig4s1">Figure 4—figure supplement 1e</xref>).</p><table-wrap id="table1" position="float"><label>Table 1.</label><caption><title>Prevalence of bimodal splicing distributions before and after filtering.</title></caption><table frame="hsides" rules="groups"><thead><tr><th>Dataset</th><th>Cell type cluster</th><th>Cells</th><th>Exons</th><th>Bimodal</th><th>% bimodal</th><th>Selected</th><th>Selected <break/>bimodal</th><th>% bimodal <break/>selected</th><th>p-val (adj)</th></tr></thead><tbody><tr><td>Chen</td><td>ES</td><td>217</td><td>446</td><td>118</td><td>26%</td><td>94</td><td>0</td><td>0%</td><td>3.3e-14</td></tr><tr><td>Chen</td><td>Epi, early</td><td>98</td><td>402</td><td>107</td><td>27%</td><td>98</td><td>1</td><td>1%</td><td>9.3e-14</td></tr><tr><td>Chen</td><td>Epi, late</td><td>104</td><td>516</td><td>136</td><td>26%</td><td>76</td><td>1</td><td>1%</td><td>1.1e-09</td></tr><tr><td>Chen</td><td>Neuron, early</td><td>47</td><td>364</td><td>117</td><td>32%</td><td>43</td><td>0</td><td>0%</td><td>3.6e-08</td></tr><tr><td>Chen</td><td>Neuron, late</td><td>22</td><td>517</td><td>146</td><td>28%</td><td>61</td><td>0</td><td>0%</td><td>1.1e-09</td></tr><tr><td>Lescroart</td><td>Heart E6.75</td><td>172</td><td>286</td><td>77</td><td>27%</td><td>33</td><td>0</td><td>0%</td><td>2.0e-05</td></tr><tr><td>Lescroart</td><td>Heart E7.25</td><td>341</td><td>291</td><td>78</td><td>27%</td><td>36</td><td>0</td><td>0%</td><td>8.0e-06</td></tr><tr><td>Trapnell</td><td>Myoblast 00 hr</td><td>35</td><td>400</td><td>142</td><td>36%</td><td>41</td><td>0</td><td>0%</td><td>1.2e-08</td></tr><tr><td>Trapnell</td><td>Myoblast 24 hr</td><td>89</td><td>251</td><td>97</td><td>39%</td><td>27</td><td>0</td><td>0%</td><td>1.2e-06</td></tr><tr><td>Trapnell</td><td>Myoblast 48 hr</td><td>72</td><td>242</td><td>97</td><td>40%</td><td>32</td><td>1</td><td>3%</td><td>9.1e-07</td></tr><tr><td>Trapnell</td><td>Myoblast 72 hr</td><td>35</td><td>252</td><td>101</td><td>40%</td><td>24</td><td>1</td><td>4%</td><td>5.1e-05</td></tr><tr><td>Song</td><td>iPSC</td><td>62</td><td>616</td><td>269</td><td>44%</td><td>55</td><td>0</td><td>0%</td><td>3.3e-14</td></tr><tr><td>Song</td><td>NPC</td><td>73</td><td>212</td><td>92</td><td>43%</td><td>28</td><td>1</td><td>4%</td><td>1.2e-06</td></tr><tr><td>Song</td><td>MN</td><td>67</td><td>168</td><td>82</td><td>49%</td><td>19</td><td>4</td><td>21%</td><td>9.4e-03</td></tr><tr><td>Shalek</td><td>BMDC</td><td>13</td><td>149</td><td>51</td><td>34%</td><td>27</td><td>1</td><td>4%</td><td>6.6e-05</td></tr></tbody></table></table-wrap></sec><sec id="s2-2-2"><title>Filtering improves the identification of differentially spliced exons</title><p>Finally, we asked if our filtering criteria could help identify biologically relevant changes in splicing between cell types, by selecting exons whose biological variance is not overwhelmed by high technical variance. Focusing on three datasets with multiple cell type clusters (Chen, Trapnell, and Song), we examined the effect of retaining only exons that passed our filter in at least 50% of cells in each cluster. To avoid biases depending on the number of observations available for each remaining exon, we retained all data points for these exons, rather than removing individual cell data points that did not pass the filter. As a benchmark for comparison, we used a simpler criterion, akin to previous studies, of at least 10 splice junction reads in at least 50% of cells (<xref ref-type="fig" rid="fig4">Figure 4i</xref>). To focus on exons with substantial alternative splicing, we omitted exons from this analysis that were consistently excluded (average <inline-formula><mml:math id="inf104"><mml:mover accent="true"><mml:mi mathvariant="normal">Ψ</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover></mml:math></inline-formula> &lt; 0.05) or included (average <inline-formula><mml:math id="inf105"><mml:mover accent="true"><mml:mi mathvariant="normal">Ψ</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover></mml:math></inline-formula> &gt; 0.95) across all cells.</p><p>Taken together, these results challenge the idea that widespread bimodality among homogeneous cells arises from a binary nature of splicing in single cells, and instead suggest that splicing bimodality reflects biological differences between cell types or subtypes. Indeed, experimental observations of splicing bimodality support the importance of differences between cell types, rather than stochastic differences between homogeneous cells. The two cases of splicing bimodality confirmed with smFISH by <xref ref-type="bibr" rid="bib29">Song et al., 2017</xref> both showed bimodality between two characterized cell types. Similarly, <xref ref-type="bibr" rid="bib26">Shalek et al., 2013</xref> confirmed one case of splicing bimodality, in a gene whose expression they showed to be a marker of a hidden difference between mature and maturing cells, and so its splicing may reflect cell state difference at a wider context as well.</p><p>For each remaining exon in the two filtering schemes, we performed a Kruskal–Wallis one-way analysis of variance, which assigned it a p-value (Materials and methods). This test determines if the exon’s median <inline-formula><mml:math id="inf106"><mml:mi mathvariant="normal">Ψ</mml:mi></mml:math></inline-formula> changed significantly between any clusters. Both filtering schemes enriched substantially for exons that show significant changes across different clusters, compared with the unfiltered set of all exons with average <inline-formula><mml:math id="inf107"><mml:mover accent="true"><mml:mi mathvariant="normal">Ψ</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover></mml:math></inline-formula> between 0.05 and 0.95. Furthermore, the extent of enrichment increased with the strictness of the differential splicing test (<xref ref-type="fig" rid="fig4">Figure 4i–k</xref>; <xref ref-type="fig" rid="fig4s2">Figure 4—figure supplement 2</xref>). It is interesting to note that in the Chen dataset, the baseline (ten reads) filter was stricter than the combined filter, retaining 66 vs. 198 exons and thus achieving high precision at the expense of a lower recall. Indeed, due to the high mRNA recovery and low amplification in this dataset, our combined filter required only seven splice junction reads, rather than ten as in the baseline scheme. Conversely, in the Song dataset, which is predicted to have low mRNA recovery yet a large number of reads, the baseline filter retained almost all exons, while the combined filter retained only 104 of them, leading to significant over-representation of exons that are differentially spliced between clusters. The results show how differences in mRNA recovery and amplification between datasets may change the interpretation of an absolute number of reads. We corroborated these results using spatial autocorrelation as a way of identifying informative exons, rather than the clustering and differential splicing analysis. The autocorrelation test builds on the work of <xref ref-type="bibr" rid="bib7">DeTomaso et al., 2019</xref> to identify exons with a significantly high level of consistency in <inline-formula><mml:math id="inf108"><mml:mover accent="true"><mml:mi mathvariant="normal">Ψ</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover></mml:math></inline-formula> among transcriptionally similar cells (<xref ref-type="fig" rid="fig4s3">Figure 4—figure supplement 3</xref>).</p><p>Taken together, these results indicate that careful filtering of exons can help identify observations that are consistent with the gene expression space and the stratification of cells into types, and are thus likely more biologically meaningful (e.g. capturing known forms of regulation during differentiation) (<xref ref-type="fig" rid="fig4">Figure 4l</xref>, <xref ref-type="fig" rid="fig4s4">Figure 4—figure supplement 4</xref>; <xref ref-type="bibr" rid="bib21">Liu et al., 2018</xref>). The concept of ‘meaningful’ is ascribed here to the observations, not the exons themselves, as there may be many additional exons with relevant variation (e.g. stable differences between cell types) that is not reliably measured due to low coverage. Indeed, the effects of the two filtering schemes and the differences between them exemplify how technical factors may distort our view of the data and consequently, our understanding of variation and regulation of splicing.</p></sec></sec></sec><sec id="s3" sec-type="discussion"><title>Discussion</title><p>The surprising result that alternatively splicing is bimodal among single cells provoked curiosity and speculation. Bimodal outcomes might reflect hidden cell subtypes, but the bimodality was seen even among apparently homogeneous cells. Did splicing outcomes reflect some unknown, stochastic cell state?</p><p>We have shown here that the bimodal patterns could have an entirely different explanation: profound technical limitations of single cell RNA sequencing. A crucial limit on biologically meaningful splicing observations in a single cell is the number of mRNAs available to inform the measurement. This is determined both by the expression of the genes that contain the exons of interest, and by the capture efficiency of the experiment. It is important to note that the depth of a sequencing library does not necessarily reflect its quality. Along with low mRNA numbers, splicing observations are also distorted by uneven amplification efficiency and cDNA overamplification. Increasing PCR amplification cycles in an attempt to compensate for low capture efficiency has the risk of worsening the technical distortion. Indeed, in our analysis, the dataset with the highest read count per cell actually had quite low mRNA recovery and large technical distortion, creating an appearance of bimodal splicing (<xref ref-type="bibr" rid="bib29">Song et al., 2017</xref>). Moreover, a qualitative change in the observed <inline-formula><mml:math id="inf109"><mml:mover accent="true"><mml:mi mathvariant="normal">Ψ</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover></mml:math></inline-formula> distribution of an exon between single cell subpopulations does not necessarily reflect a change in the underlying splicing rate, as changes in gene expression and mRNA recovery between samples can create the illusion of a splicing change.</p><p>Further developments in statistical analysis that carefully account for both missing and redundant information due to low capture efficiency could make splicing observations in single cells more reliable. We set the foundation for such analysis by proposing a probabilistic process that describes the biological and technical steps that generate single cell splicing data. We also introduced a simple approach that builds on the Census normalization (<xref ref-type="bibr" rid="bib24">Qiu et al., 2017</xref>) to estimate the number of mRNAs recovered and the extent of artificial duplication of splicing information. This metric provides a practical filter for identifying exons with sufficient information to analyze. On the experimental side, improving the capture efficiency of scRNA-seq methods while moderating the extent of overamplification is crucial for increasing the subset of exons for which reliable observation can be made.</p><p>True biological insight into alternative splicing can indeed be found from high-quality scRNA-seq data, and we hope that new methods will allow better understanding of splicing regulation, cell-to-cell variation, and the importance of alternative splicing in defining cell fate (<xref ref-type="bibr" rid="bib13">Hagemann-Jensen et al., 2020</xref>; <xref ref-type="bibr" rid="bib12">Gupta et al., 2018</xref>). However, some limitations are inherent to the situation. Single cells express a limited number of mRNAs per gene; splicing observations in single cells will always be inherently noisy reflections of the underlying biology.</p></sec><sec id="s4" sec-type="materials|methods"><title>Materials and methods</title><p>Analysis code is available at <ext-link ext-link-type="uri" xlink:href="https://github.com/lareaulab/sc_binary_splicing">https://github.com/lareaulab/sc_binary_splicing</ext-link>. (<xref ref-type="bibr" rid="bib3">Buen Abad Najar and Lareau, 2020</xref>; copy archived at <ext-link ext-link-type="uri" xlink:href="https://github.com/elifesciences-publications/sc_binary_splicing">https://github.com/elifesciences-publications/sc_binary_splicing</ext-link>).</p><sec id="s4-1"><title>Analysis of single-cell RNA-seq datasets</title><sec id="s4-1-1"><title>Datasets</title><p>Six publicly available single cell RNA sequencing datasets were analyzed (<xref ref-type="table" rid="table2">Table 2</xref>). These datasets are referenced with the first author’s name throughout this paper. For the Chen dataset, we selected the four cell types used to represent developmental stages in <xref ref-type="bibr" rid="bib5">Chen et al., 2016</xref>: mouse embryonic stem cells cultured in 2i (ES2i) and LIF (ES), mouse EpiStem cells (Epi) and neurons. For the Lescroart dataset, we limited the analysis to the cells derived from mouse wild-type strains. For the Trapnell dataset, we only selected the runs that are annotated to have one cell per well.</p><table-wrap id="table2" position="float"><label>Table 2.</label><caption><title>Single-cell RNA-seq datasets.</title></caption><table frame="hsides" rules="groups"><thead><tr><th>Dataset</th><th>Organism</th><th>Biological process</th><th>Cells</th><th>No. ASE</th><th>Mean reads/event</th><th>Protocol</th><th>Accession</th><th>Reference</th></tr></thead><tbody><tr><td>Chen</td><td>mouse</td><td>mES neuron differentiation</td><td>488</td><td>3276</td><td>3.1</td><td>Smart-seq2</td><td>GSE74155</td><td><xref ref-type="bibr" rid="bib5">Chen et al., 2016</xref></td></tr><tr><td>Lescroart</td><td>mouse</td><td>cardiomyogenesis</td><td>598</td><td>3007</td><td>3.2</td><td>Smart-seq2</td><td>GSE100471</td><td><xref ref-type="bibr" rid="bib18">Lescroart et al., 2018</xref></td></tr><tr><td>Trapnell</td><td>human</td><td>skeletal myogenesis</td><td>314</td><td>4457</td><td>14.4</td><td>Smart-seq</td><td>GSE52529</td><td><xref ref-type="bibr" rid="bib32">Trapnell et al., 2014</xref></td></tr><tr><td>Song</td><td>human</td><td>iPS motor neuron differentiation</td><td>206</td><td>5355</td><td>88.8</td><td>Smart-seq</td><td>GSE85908</td><td><xref ref-type="bibr" rid="bib29">Song et al., 2017</xref></td></tr><tr><td>Fletcher</td><td>mouse</td><td>olfactory neurogenesis</td><td>849</td><td>684</td><td>2.7</td><td>Smart-seq</td><td>GSE95601</td><td><xref ref-type="bibr" rid="bib10">Fletcher et al., 2017</xref></td></tr><tr><td>Shalek</td><td>mouse</td><td>bone-marrow-derived dendritic cells</td><td>18</td><td>380</td><td>213.4</td><td>Smart-seq</td><td>GSE41265</td><td><xref ref-type="bibr" rid="bib26">Shalek et al., 2013</xref></td></tr></tbody></table></table-wrap></sec></sec><sec id="s4-2"><title>Alignment, TPM quantification and <inline-formula><mml:math id="inf110"><mml:mi mathvariant="normal">Ψ</mml:mi></mml:math></inline-formula> estimation</title><p>We aligned the reads of each dataset using STAR 2.5.3 (<xref ref-type="bibr" rid="bib8">Dobin et al., 2013</xref>) with two-pass mode and index overhang length adapted to the read length of each dataset. We used the hg38 genome annotation for the human RNA-seq datasets, and the mm10 annotation for the mouse datasets. Gene expression levels in transcripts per million (TPM) were calculated by running RSEM (<xref ref-type="bibr" rid="bib19">Li and Dewey, 2011</xref>) on the BAM files produced by the STAR alignment. We ran rMATS 3.2.5 (<xref ref-type="bibr" rid="bib28">Shen et al., 2014</xref>) on bulk human and mouse RNA-seq datasets from cell types matching the scRNA-seq datasets (<xref ref-type="bibr" rid="bib5">Chen et al., 2016</xref>; <xref ref-type="bibr" rid="bib15">Hubbard et al., 2013</xref>; <xref ref-type="bibr" rid="bib4">Busskamp et al., 2014</xref>; <xref ref-type="bibr" rid="bib32">Trapnell et al., 2014</xref>) to find all annotated cassette exon alternative splicing events in each cell type. Then we used the SJ.out.tab files obtained from the scRNA-seq STAR alignment to obtain the splice junction reads compatible with the list of cassette exons found by rMATS. For each cell <inline-formula><mml:math id="inf111"><mml:mi>i</mml:mi></mml:math></inline-formula>, we calculated the observed <inline-formula><mml:math id="inf112"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mrow><mml:mover><mml:mi mathvariant="normal">Ψ</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover></mml:mrow></mml:mrow></mml:mstyle></mml:math></inline-formula> of the cassette exon <inline-formula><mml:math id="inf113"><mml:mi>j</mml:mi></mml:math></inline-formula> as:<disp-formula id="equ1"><mml:math id="m1"><mml:mrow><mml:msub><mml:mover accent="true"><mml:mi mathvariant="normal">Ψ</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover><mml:mrow><mml:mi>i</mml:mi><mml:mo>⁢</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mfrac><mml:msub><mml:mtext>SJ</mml:mtext><mml:msub><mml:mi>A</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>⁢</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:msub><mml:mrow><mml:msub><mml:mtext>SJ</mml:mtext><mml:msub><mml:mi>A</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>⁢</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:msub><mml:mo>+</mml:mo><mml:mrow><mml:mn>2</mml:mn><mml:mo>⁢</mml:mo><mml:msub><mml:mtext>SJ</mml:mtext><mml:msub><mml:mi>B</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>⁢</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:msub></mml:mrow></mml:mrow></mml:mfrac></mml:mrow></mml:math></disp-formula>where <inline-formula><mml:math id="inf114"><mml:msub><mml:mtext>SJ</mml:mtext><mml:msub><mml:mi>A</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>⁢</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:msub></mml:math></inline-formula> correspond to the number of reads that cover the two splice junctions compatible with cassette exon inclusion, and <inline-formula><mml:math id="inf115"><mml:msub><mml:mtext>SJ</mml:mtext><mml:msub><mml:mi>B</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>⁢</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:msub></mml:math></inline-formula> are the reads that cover the splice junction compatible with its exclusion. We also determined the coverage of an exon <inline-formula><mml:math id="inf116"><mml:mi>j</mml:mi></mml:math></inline-formula> in <inline-formula><mml:math id="inf117"><mml:mi>i</mml:mi></mml:math></inline-formula> as <inline-formula><mml:math id="inf118"><mml:mrow><mml:msub><mml:mtext>SJ</mml:mtext><mml:mrow><mml:mi>i</mml:mi><mml:mo>⁢</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:msub><mml:mtext>SJ</mml:mtext><mml:msub><mml:mi>A</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>⁢</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:msub><mml:mo>+</mml:mo><mml:msub><mml:mtext>SJ</mml:mtext><mml:msub><mml:mi>B</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>⁢</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>. We used <inline-formula><mml:math id="inf119"><mml:msub><mml:mtext>SJ</mml:mtext><mml:mrow><mml:mi>i</mml:mi><mml:mo>⁢</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:math></inline-formula> and <inline-formula><mml:math id="inf120"><mml:msub><mml:mover accent="true"><mml:mi mathvariant="normal">Ψ</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover><mml:mrow><mml:mi>i</mml:mi><mml:mo>⁢</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:math></inline-formula> for the analyses shown in <xref ref-type="fig" rid="fig2">Figure 2</xref>.</p><sec id="s4-2-1"><title>Gene expression normalization and pseudotime inference</title><p>For the purpose of visualization and clustering of cells, we normalized the gene expression data. First, we selected the genes with TPM &gt; 20 in at least 20 cells. After filtering, we used SCONE 1.6.1 (<xref ref-type="bibr" rid="bib6">Cole et al., 2019</xref>) to select the best normalization approach for the data. For improving the normalization of the data, we used additional information for each cell, including the annotated cell type and batch, total number of reads, housekeeping genes and genes that are expected to change in the biological process that the dataset covers. We applied principal component analysis (PCA) over the log-counts from the best SCONE normalization, and used the first two principal components to infer pseudotime using Slingshot 1.0.0 (<xref ref-type="bibr" rid="bib30">Street et al., 2018</xref>). We used the cell type annotation as the cluster input for Slingshot, and manually indicated the direction of the biological process. Single cells can be highly heterogeneous, even within cells labeled to be in the same biological condition. To account for this variation, instead of relying on the annotated cell type provided with each dataset, we used agglomerative clustering over the PCA projection of the matrix of normalized gene expression to identify groups of similar cells in the Chen, Trapnell and Song datasets. For the Trapnell and the Song dataset, we used the number of cell types reported by the authors. In the Chen dataset, we noticed that the cells annotated as neurons could form two well-defined clusters, with some of the cells presenting expression profiles consistent with mature neurons. For this reason, we used five instead of four clusters in the Chen dataset. In the Lescroart dataset, we used the original labels provided by the authors because PCA over the normalized expression data separates the cells into two groups. This analysis was not performed in the Shalek dataset due to its small number of cells. Instead, we treated all the cells in this dataset as one single cluster. The Fletcher dataset was not considered for the analysis that required clustering due to the low number of exon observations that pass the minimum mRNA requirements described below.</p></sec><sec id="s4-2-2"><title>mRNA counts estimation with the Census approach</title><p>We performed our own implementation of the mRNA count estimation proposed in Census (<xref ref-type="bibr" rid="bib24">Qiu et al., 2017</xref>). The total number of transcript mRNAs in cell <inline-formula><mml:math id="inf121"><mml:mi>i</mml:mi></mml:math></inline-formula> is estimated as:<disp-formula id="equ2"><mml:math id="m2"><mml:mrow><mml:msub><mml:mi>M</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mfrac><mml:msub><mml:mi>n</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mrow><mml:mrow><mml:msub><mml:mi>F</mml:mi><mml:msub><mml:mi>X</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:msub><mml:mo>⁢</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msubsup><mml:mi>x</mml:mi><mml:mi>i</mml:mi><mml:mo>*</mml:mo></mml:msubsup><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow><mml:mo>-</mml:mo><mml:mrow><mml:msub><mml:mi>F</mml:mi><mml:msub><mml:mi>X</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:msub><mml:mo>⁢</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mn>0.1</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:mfrac></mml:mrow></mml:math></disp-formula>where <inline-formula><mml:math id="inf122"><mml:msubsup><mml:mi>x</mml:mi><mml:mi>i</mml:mi><mml:mo>*</mml:mo></mml:msubsup></mml:math></inline-formula> is the mode of the log-transformed distribution of TPM values in cell <inline-formula><mml:math id="inf123"><mml:mi>i</mml:mi></mml:math></inline-formula>. As in Census, we found <inline-formula><mml:math id="inf124"><mml:msubsup><mml:mi>x</mml:mi><mml:mi>i</mml:mi><mml:mo>*</mml:mo></mml:msubsup></mml:math></inline-formula> by fitting a Gaussian kernel density estimation to each distribution and finding its peak. We also set 0.1 as is the minimum TPM below which it is assumed that no mRNA is present. <inline-formula><mml:math id="inf125"><mml:msub><mml:mi>n</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:math></inline-formula> is the number of genes in cell <inline-formula><mml:math id="inf126"><mml:mi>i</mml:mi></mml:math></inline-formula> with an estimated TPM in the interval <inline-formula><mml:math id="inf127"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mn>0.1</mml:mn><mml:mo>,</mml:mo><mml:msubsup><mml:mi>x</mml:mi><mml:mrow><mml:mi>i</mml:mi></mml:mrow><mml:mrow><mml:mo>∗</mml:mo></mml:mrow></mml:msubsup><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mstyle></mml:math></inline-formula>. <inline-formula><mml:math id="inf128"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msub><mml:mi>F</mml:mi><mml:mrow><mml:msub><mml:mi>X</mml:mi><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub></mml:mrow></mml:mstyle></mml:math></inline-formula> is the cumulative distribution function of the TPM values in cell <inline-formula><mml:math id="inf129"><mml:mi>i</mml:mi></mml:math></inline-formula>. The original Census implementation also adjusts the mRNA estimation by multiplying by <inline-formula><mml:math id="inf130"><mml:mfrac><mml:mn>1</mml:mn><mml:mi>θ</mml:mi></mml:mfrac></mml:math></inline-formula>, where <inline-formula><mml:math id="inf131"><mml:mi>θ</mml:mi></mml:math></inline-formula> is the capture efficiency of the dataset estimated with RNA spike-ins. Since for most datasets, we do not have a reliable way of estimating the capture efficiency, we removed this adjustment from the equation, so that <inline-formula><mml:math id="inf132"><mml:msub><mml:mi>M</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:math></inline-formula> in our estimation is not an estimation of the amount of mRNAs present in the cell lysate as it is in Census, but an estimate of the mRNAs successfully captured into cDNA.</p><p>We found that some datasets contained outlier cells with <inline-formula><mml:math id="inf133"><mml:msub><mml:mi>M</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:math></inline-formula> much higher than the median estimate (more than ten-fold increases). These outliers generally correspond to cells with a multimodal TPM distribution. An inflation in very low TPM values distorts the normalization by shrinking the values of <inline-formula><mml:math id="inf134"><mml:mrow><mml:mrow><mml:msub><mml:mi>F</mml:mi><mml:msub><mml:mi>X</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:msub><mml:mo>⁢</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msubsup><mml:mi>x</mml:mi><mml:mi>i</mml:mi><mml:mo>*</mml:mo></mml:msubsup><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow><mml:mo>-</mml:mo><mml:mrow><mml:msub><mml:mi>F</mml:mi><mml:msub><mml:mi>X</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:msub><mml:mo>⁢</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>ϵ</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula>, thus inflating the <inline-formula><mml:math id="inf135"><mml:msub><mml:mi>M</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:math></inline-formula> values in these cells. Because the Census method relies on a Gaussian kernel density estimation that performs inaccurately for multimodal distributions, we excluded this handful of outliers from further analysis. In the Trapnell dataset, we found that several cells had an unusually small number of recovered reads and genes observed. We reasoned that this had the potential to skew the TPM estimations on which the Census normalization depends (<xref ref-type="fig" rid="fig2s1">Figure 2—figure supplement 1b</xref>), so we excluded the cells in the bottom 25% quantile of reads from the Census normalization and all downstream analyses that depend on it.</p><p>Finally, the number of mRNA transcripts of gene <inline-formula><mml:math id="inf136"><mml:mi>g</mml:mi></mml:math></inline-formula> in cell <inline-formula><mml:math id="inf137"><mml:mi>i</mml:mi></mml:math></inline-formula> is calculated as:<disp-formula id="equ3"><mml:math id="m3"><mml:mrow><mml:msub><mml:mi>Y</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>⁢</mml:mo><mml:mi>g</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:msub><mml:mi>X</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>⁢</mml:mo><mml:mi>g</mml:mi></mml:mrow></mml:msub><mml:mo>⋅</mml:mo><mml:mfrac><mml:msub><mml:mi>M</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:msup><mml:mn>10</mml:mn><mml:mn>6</mml:mn></mml:msup></mml:mfrac></mml:mrow></mml:mrow></mml:math></disp-formula>where <inline-formula><mml:math id="inf138"><mml:msub><mml:mi>X</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>⁢</mml:mo><mml:mi>g</mml:mi></mml:mrow></mml:msub></mml:math></inline-formula> is the expression of gene <inline-formula><mml:math id="inf139"><mml:mi>g</mml:mi></mml:math></inline-formula> in cell <inline-formula><mml:math id="inf140"><mml:mi>i</mml:mi></mml:math></inline-formula> expressed in TPM.</p></sec><sec id="s4-2-3"><title>Nucleotide coverage and expected splice junction reads</title><p>Amplification in short-read library preparation can lead to multiple reads from the same sequence fragment of a single mRNA molecule. To filter out exons with anomalously low read coverage, we wanted to know the number of splice junction reads expected to originate from one exon junction in a single mRNA, a number which differs in each cell and each experiment. We estimated the splice junction coverage rate of each cell as the expected number of reads covering the splice junction of a mRNA molecule:<disp-formula id="equ4"><mml:math id="m4"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mtable columnalign="left left" columnspacing="1em" rowspacing="4pt"><mml:mtr><mml:mtd><mml:mstyle displaystyle="true" scriptlevel="0"><mml:msub><mml:mi>C</mml:mi><mml:mrow><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:mstyle></mml:mtd><mml:mtd><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mo>=</mml:mo><mml:mrow><mml:mi mathvariant="normal">r</mml:mi><mml:mi mathvariant="normal">e</mml:mi><mml:mi mathvariant="normal">a</mml:mi><mml:mi mathvariant="normal">d</mml:mi><mml:mspace width="thinmathspace"/><mml:mspace width="thinmathspace"/><mml:mi mathvariant="normal">c</mml:mi><mml:mi mathvariant="normal">o</mml:mi><mml:mi mathvariant="normal">v</mml:mi><mml:mi mathvariant="normal">e</mml:mi><mml:mi mathvariant="normal">r</mml:mi><mml:mi mathvariant="normal">a</mml:mi><mml:mi mathvariant="normal">g</mml:mi><mml:mi mathvariant="normal">e</mml:mi><mml:mspace width="thinmathspace"/><mml:mspace width="thinmathspace"/><mml:mi mathvariant="normal">a</mml:mi><mml:mi mathvariant="normal">t</mml:mi><mml:mspace width="thinmathspace"/><mml:mspace width="thinmathspace"/><mml:mi mathvariant="normal">e</mml:mi><mml:mi mathvariant="normal">a</mml:mi><mml:mi mathvariant="normal">c</mml:mi><mml:mi mathvariant="normal">h</mml:mi><mml:mspace width="thinmathspace"/><mml:mspace width="thinmathspace"/><mml:mi mathvariant="normal">s</mml:mi><mml:mi mathvariant="normal">p</mml:mi><mml:mi mathvariant="normal">l</mml:mi><mml:mi mathvariant="normal">i</mml:mi><mml:mi mathvariant="normal">c</mml:mi><mml:mi mathvariant="normal">e</mml:mi><mml:mspace width="thinmathspace"/><mml:mspace width="thinmathspace"/><mml:mi mathvariant="normal">j</mml:mi><mml:mi mathvariant="normal">u</mml:mi><mml:mi mathvariant="normal">n</mml:mi><mml:mi mathvariant="normal">c</mml:mi><mml:mi mathvariant="normal">t</mml:mi><mml:mi mathvariant="normal">i</mml:mi><mml:mi mathvariant="normal">o</mml:mi><mml:mspace width="thinmathspace"/><mml:mspace width="thinmathspace"/><mml:mi mathvariant="normal">o</mml:mi><mml:mi mathvariant="normal">f</mml:mi><mml:mspace width="thinmathspace"/><mml:mspace width="thinmathspace"/><mml:mi mathvariant="normal">m</mml:mi><mml:mi mathvariant="normal">R</mml:mi><mml:mi mathvariant="normal">N</mml:mi><mml:mi mathvariant="normal">A</mml:mi><mml:mi mathvariant="normal">s</mml:mi><mml:mspace width="thinmathspace"/><mml:mspace width="thinmathspace"/><mml:mi mathvariant="normal">i</mml:mi><mml:mi mathvariant="normal">n</mml:mi><mml:mspace width="thinmathspace"/><mml:mspace width="thinmathspace"/><mml:mi mathvariant="normal">o</mml:mi><mml:mi mathvariant="normal">u</mml:mi><mml:mi mathvariant="normal">r</mml:mi><mml:mspace width="thinmathspace"/><mml:mspace width="thinmathspace"/><mml:mi mathvariant="normal">s</mml:mi><mml:mi mathvariant="normal">a</mml:mi><mml:mi mathvariant="normal">m</mml:mi><mml:mi mathvariant="normal">p</mml:mi><mml:mi mathvariant="normal">l</mml:mi><mml:mi mathvariant="normal">e</mml:mi></mml:mrow></mml:mstyle></mml:mtd></mml:mtr><mml:mtr><mml:mtd/></mml:mtr><mml:mtr><mml:mtd/><mml:mtd><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mo>=</mml:mo><mml:mfrac><mml:mrow><mml:mrow><mml:mi mathvariant="normal">c</mml:mi><mml:mi mathvariant="normal">o</mml:mi><mml:mi mathvariant="normal">n</mml:mi><mml:mi mathvariant="normal">s</mml:mi><mml:mi mathvariant="normal">t</mml:mi><mml:mi mathvariant="normal">i</mml:mi><mml:mi mathvariant="normal">t</mml:mi><mml:mi mathvariant="normal">u</mml:mi><mml:mi mathvariant="normal">t</mml:mi><mml:mi mathvariant="normal">i</mml:mi><mml:mi mathvariant="normal">v</mml:mi><mml:mi mathvariant="normal">e</mml:mi><mml:mspace width="thinmathspace"/><mml:mspace width="thinmathspace"/><mml:mi mathvariant="normal">s</mml:mi><mml:mi mathvariant="normal">p</mml:mi><mml:mi mathvariant="normal">l</mml:mi><mml:mi mathvariant="normal">i</mml:mi><mml:mi mathvariant="normal">c</mml:mi><mml:mi mathvariant="normal">e</mml:mi><mml:mspace width="thinmathspace"/><mml:mspace width="thinmathspace"/><mml:mi mathvariant="normal">j</mml:mi><mml:mi mathvariant="normal">u</mml:mi><mml:mi mathvariant="normal">n</mml:mi><mml:mi mathvariant="normal">c</mml:mi><mml:mi mathvariant="normal">t</mml:mi><mml:mi mathvariant="normal">i</mml:mi><mml:mi mathvariant="normal">o</mml:mi><mml:mi mathvariant="normal">n</mml:mi><mml:mspace width="thinmathspace"/><mml:mspace width="thinmathspace"/><mml:mi mathvariant="normal">r</mml:mi><mml:mi mathvariant="normal">e</mml:mi><mml:mi mathvariant="normal">a</mml:mi><mml:mi mathvariant="normal">d</mml:mi><mml:mi mathvariant="normal">s</mml:mi><mml:mspace width="thinmathspace"/><mml:mspace width="thinmathspace"/><mml:mi mathvariant="normal">i</mml:mi><mml:mi mathvariant="normal">n</mml:mi><mml:mspace width="thinmathspace"/><mml:mspace width="thinmathspace"/><mml:mi mathvariant="normal">c</mml:mi><mml:mi mathvariant="normal">e</mml:mi><mml:mi mathvariant="normal">l</mml:mi><mml:mi mathvariant="normal">l</mml:mi><mml:mspace width="thinmathspace"/><mml:mspace width="thinmathspace"/></mml:mrow><mml:mi>j</mml:mi></mml:mrow><mml:mrow><mml:mrow><mml:mi mathvariant="normal">c</mml:mi><mml:mi mathvariant="normal">o</mml:mi><mml:mi mathvariant="normal">n</mml:mi><mml:mi mathvariant="normal">s</mml:mi><mml:mi mathvariant="normal">t</mml:mi><mml:mi mathvariant="normal">i</mml:mi><mml:mi mathvariant="normal">t</mml:mi><mml:mi mathvariant="normal">u</mml:mi><mml:mi mathvariant="normal">t</mml:mi><mml:mi mathvariant="normal">i</mml:mi><mml:mi mathvariant="normal">v</mml:mi><mml:mi mathvariant="normal">e</mml:mi><mml:mspace width="thinmathspace"/><mml:mspace width="thinmathspace"/><mml:mi mathvariant="normal">s</mml:mi><mml:mi mathvariant="normal">p</mml:mi><mml:mi mathvariant="normal">l</mml:mi><mml:mi mathvariant="normal">i</mml:mi><mml:mi mathvariant="normal">c</mml:mi><mml:mi mathvariant="normal">e</mml:mi><mml:mspace width="thinmathspace"/><mml:mspace width="thinmathspace"/><mml:mi mathvariant="normal">j</mml:mi><mml:mi mathvariant="normal">u</mml:mi><mml:mi mathvariant="normal">n</mml:mi><mml:mi mathvariant="normal">c</mml:mi><mml:mi mathvariant="normal">t</mml:mi><mml:mi mathvariant="normal">i</mml:mi><mml:mi mathvariant="normal">o</mml:mi><mml:mi mathvariant="normal">n</mml:mi><mml:mi mathvariant="normal">s</mml:mi><mml:mspace width="thinmathspace"/><mml:mspace width="thinmathspace"/><mml:mi mathvariant="normal">o</mml:mi><mml:mi mathvariant="normal">f</mml:mi><mml:mspace width="thinmathspace"/><mml:mspace width="thinmathspace"/><mml:mi mathvariant="normal">m</mml:mi><mml:mi mathvariant="normal">R</mml:mi><mml:mi mathvariant="normal">N</mml:mi><mml:mi mathvariant="normal">A</mml:mi><mml:mi mathvariant="normal">s</mml:mi><mml:mspace width="thinmathspace"/><mml:mspace width="thinmathspace"/><mml:mi mathvariant="normal">i</mml:mi><mml:mi mathvariant="normal">n</mml:mi><mml:mspace width="thinmathspace"/><mml:mspace width="thinmathspace"/><mml:mi mathvariant="normal">c</mml:mi><mml:mi mathvariant="normal">e</mml:mi><mml:mi mathvariant="normal">l</mml:mi><mml:mi mathvariant="normal">l</mml:mi></mml:mrow><mml:mtext> </mml:mtext><mml:mi>j</mml:mi></mml:mrow></mml:mfrac></mml:mstyle></mml:mtd></mml:mtr><mml:mtr><mml:mtd/></mml:mtr><mml:mtr><mml:mtd/><mml:mtd><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mo>=</mml:mo><mml:mfrac><mml:mrow><mml:munder><mml:mo>∑</mml:mo><mml:mrow><mml:mi>k</mml:mi></mml:mrow></mml:munder><mml:msub><mml:mi>r</mml:mi><mml:mrow><mml:mi>j</mml:mi><mml:mi>k</mml:mi></mml:mrow></mml:msub></mml:mrow><mml:mrow><mml:munder><mml:mo>∑</mml:mo><mml:mrow><mml:mi>k</mml:mi></mml:mrow></mml:munder><mml:msub><mml:mi>j</mml:mi><mml:mrow><mml:mi>k</mml:mi></mml:mrow></mml:msub><mml:mo>⋅</mml:mo><mml:msub><mml:mi>m</mml:mi><mml:mrow><mml:mi>j</mml:mi><mml:mi>k</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mfrac></mml:mstyle></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:mstyle></mml:math></disp-formula>where <inline-formula><mml:math id="inf141"><mml:msub><mml:mi>C</mml:mi><mml:mi>j</mml:mi></mml:msub></mml:math></inline-formula> is the splice junction coverage rate, which is the number of reads expected to cover each splice junction in cell <inline-formula><mml:math id="inf142"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mi>j</mml:mi></mml:mrow></mml:mstyle></mml:math></inline-formula>; <inline-formula><mml:math id="inf143"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msub><mml:mi>r</mml:mi><mml:mrow><mml:mi>j</mml:mi><mml:mi>k</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mstyle></mml:math></inline-formula> is the number of reads that map to all constitutive splice junctions of gene <inline-formula><mml:math id="inf144"><mml:mi>k</mml:mi></mml:math></inline-formula> in cell <inline-formula><mml:math id="inf145"><mml:mi>j</mml:mi></mml:math></inline-formula>, as reported by STAR; <inline-formula><mml:math id="inf146"><mml:msub><mml:mi>j</mml:mi><mml:mi>k</mml:mi></mml:msub></mml:math></inline-formula> is the number of constitutive splice junctions in a mRNA molecule of gene <inline-formula><mml:math id="inf147"><mml:mi>k</mml:mi></mml:math></inline-formula>; and <inline-formula><mml:math id="inf148"><mml:msub><mml:mi>m</mml:mi><mml:mrow><mml:mi>j</mml:mi><mml:mo>⁢</mml:mo><mml:mi>k</mml:mi></mml:mrow></mml:msub></mml:math></inline-formula> is the Census estimate of captured mRNAs of gene <inline-formula><mml:math id="inf149"><mml:mi>k</mml:mi></mml:math></inline-formula> in cell <inline-formula><mml:math id="inf150"><mml:mi>j</mml:mi></mml:math></inline-formula>. To calculate the <inline-formula><mml:math id="inf151"><mml:msub><mml:mi>C</mml:mi><mml:mi>j</mml:mi></mml:msub></mml:math></inline-formula> of each cell, we only considered the constitutive splice junctions of genes that were estimated to be expressed in at least one mRNA molecule by the Census normalization. This calculation captures the slight under-counting of splice junctions (relative to other positions) because of factors including ambiguous read mapping.</p><p>We identified the constitutive splice junctions of the human and mouse transcriptome using the Gencode hg38 and mm10 annotations respectively. For each organism, we identified the splice junctions that occur in all protein coding isoforms of each protein coding gene. This resulted in a total of 59,477 constitutive splice junctions in the human genome, and 108,481 in the mouse genome.</p><p>Then, based on the overall recovery of splice junction reads in a cell, the total expected splice junction reads for a particular cassette exon <inline-formula><mml:math id="inf152"><mml:mi>i</mml:mi></mml:math></inline-formula> in cell <inline-formula><mml:math id="inf153"><mml:mi>j</mml:mi></mml:math></inline-formula> is estimated as:<disp-formula id="equ5"><mml:math id="m5"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mtable columnalign="left left" columnspacing="1em" rowspacing="4pt"><mml:mtr><mml:mtd><mml:mstyle displaystyle="true" scriptlevel="0"><mml:msub><mml:mrow><mml:mi mathvariant="normal">S</mml:mi><mml:mi mathvariant="normal">J</mml:mi></mml:mrow><mml:mrow><mml:msub><mml:mi>E</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub></mml:mstyle></mml:mtd><mml:mtd><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mo>=</mml:mo><mml:msub><mml:mi>m</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>⋅</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi mathvariant="normal">e</mml:mi><mml:mi mathvariant="normal">x</mml:mi><mml:mi mathvariant="normal">p</mml:mi><mml:mi mathvariant="normal">e</mml:mi><mml:mi mathvariant="normal">c</mml:mi><mml:mi mathvariant="normal">t</mml:mi><mml:mi mathvariant="normal">e</mml:mi><mml:mi mathvariant="normal">d</mml:mi><mml:mspace width="thinmathspace"/><mml:mspace width="thinmathspace"/><mml:mi mathvariant="normal">s</mml:mi><mml:mi mathvariant="normal">p</mml:mi><mml:mi mathvariant="normal">l</mml:mi><mml:mi mathvariant="normal">i</mml:mi><mml:mi mathvariant="normal">c</mml:mi><mml:mi mathvariant="normal">e</mml:mi><mml:mspace width="thinmathspace"/><mml:mspace width="thinmathspace"/><mml:mi mathvariant="normal">j</mml:mi><mml:mi mathvariant="normal">u</mml:mi><mml:mi mathvariant="normal">n</mml:mi><mml:mi mathvariant="normal">c</mml:mi><mml:mi mathvariant="normal">t</mml:mi><mml:mi mathvariant="normal">i</mml:mi><mml:mi mathvariant="normal">o</mml:mi><mml:mi mathvariant="normal">n</mml:mi><mml:mi mathvariant="normal">s</mml:mi><mml:mspace width="thinmathspace"/><mml:mspace width="thinmathspace"/><mml:mi mathvariant="normal">p</mml:mi><mml:mi mathvariant="normal">e</mml:mi><mml:mi mathvariant="normal">r</mml:mi><mml:mspace width="thinmathspace"/><mml:mspace width="thinmathspace"/><mml:mi mathvariant="normal">m</mml:mi><mml:mi mathvariant="normal">R</mml:mi><mml:mi mathvariant="normal">N</mml:mi><mml:mi mathvariant="normal">A</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo><mml:mo>⋅</mml:mo><mml:msub><mml:mi>C</mml:mi><mml:mrow><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:mstyle></mml:mtd></mml:mtr><mml:mtr><mml:mtd/><mml:mtd><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mo>=</mml:mo><mml:msub><mml:mi>m</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>⋅</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mn>1</mml:mn><mml:mo>+</mml:mo><mml:msub><mml:mrow><mml:mover><mml:mi mathvariant="normal">Ψ</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mo>⋅</mml:mo><mml:msub><mml:mi>C</mml:mi><mml:mrow><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:mstyle></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:mstyle></mml:math></disp-formula>where <inline-formula><mml:math id="inf154"><mml:msub><mml:mtext>SJ</mml:mtext><mml:msub><mml:mi>E</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>⁢</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:msub></mml:math></inline-formula> is the expected number of splice junction reads covering the splicing of exon <inline-formula><mml:math id="inf155"><mml:mi>i</mml:mi></mml:math></inline-formula> in cell <inline-formula><mml:math id="inf156"><mml:mi>j</mml:mi></mml:math></inline-formula> (both for mRNAs that splice in or skip the exon). <inline-formula><mml:math id="inf157"><mml:msub><mml:mi>m</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>⁢</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:math></inline-formula> is the estimated number of mRNAs from the gene containing the cassette exon <inline-formula><mml:math id="inf158"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:mstyle></mml:math></inline-formula> in cell <inline-formula><mml:math id="inf159"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mi>j</mml:mi></mml:mrow></mml:mstyle></mml:math></inline-formula>; <inline-formula><mml:math id="inf160"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msub><mml:mi mathvariant="normal">Ψ</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mstyle></mml:math></inline-formula> is the observed splicing rate of exon <inline-formula><mml:math id="inf161"><mml:mi>i</mml:mi></mml:math></inline-formula> in cell <inline-formula><mml:math id="inf162"><mml:mi>j</mml:mi></mml:math></inline-formula>. The expected number of splice junctions per mRNA is <inline-formula><mml:math id="inf163"><mml:mrow><mml:mn>1</mml:mn><mml:mo>+</mml:mo><mml:msub><mml:mover accent="true"><mml:mi mathvariant="normal">Ψ</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover><mml:mrow><mml:mi>i</mml:mi><mml:mo>⁢</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> because one splice junction read is present in mRNA molecules that skip the exon, and two in those that include it.</p></sec><sec id="s4-2-4"><title>Filtering to select good quality observations</title><p>Simulations of the effect of the initial number of mRNA molecules of a gene and the underlying <inline-formula><mml:math id="inf164"><mml:mi mathvariant="normal">Ψ</mml:mi></mml:math></inline-formula> suggest that an average of 44 mRNA molecules are necessary to have a 50% chance of making an intermediate <inline-formula><mml:math id="inf165"><mml:mi mathvariant="normal">Ψ</mml:mi></mml:math></inline-formula> observation when the underlying <inline-formula><mml:math id="inf166"><mml:mi mathvariant="normal">Ψ</mml:mi></mml:math></inline-formula> is 0.5. This number goes up to 65 if the <inline-formula><mml:math id="inf167"><mml:mi mathvariant="normal">Ψ</mml:mi></mml:math></inline-formula> is 0.2 or 0.8, and to 127 if the <inline-formula><mml:math id="inf168"><mml:mi mathvariant="normal">Ψ</mml:mi></mml:math></inline-formula> is 0.1 or 0.9 (<xref ref-type="fig" rid="fig4s1">Figure 4—figure supplement 1f</xref>). Assuming a capture efficiency of 10%, we rounded at 10 captured mRNA molecules as the lower threshold for a quality <inline-formula><mml:math id="inf169"><mml:mi mathvariant="normal">Ψ</mml:mi></mml:math></inline-formula> observation.</p><p>In some cases, the number of observed splice junction reads is discordant with the estimated number of mRNAs recovered. Therefore, we set a additional filter based on the number of reads expected to come from 10 mRNA molecules that are informative about the splicing of a cassette exon:<disp-formula id="equ6"><mml:math id="m6"><mml:mrow><mml:msub><mml:mtext>SJ</mml:mtext><mml:msub><mml:mi>m</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>⁢</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:mn>10</mml:mn><mml:mo>⋅</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mn>1</mml:mn><mml:mo>+</mml:mo><mml:msub><mml:mover accent="true"><mml:mi mathvariant="normal">Ψ</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover><mml:mrow><mml:mi>i</mml:mi><mml:mo>⁢</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>⋅</mml:mo><mml:msub><mml:mi>C</mml:mi><mml:mi>j</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:math></disp-formula></p><p>Therefore, for every observation, we required at least 10 mRNAs of the gene captured, and at least the number of reads that we expect if 10 mRNAs are informative. Notice that this minimum will be unique to each observation (combination of cassette exon and cell), as it depends on the cell-specific coverage rate, and the cell and exon specific observed <inline-formula><mml:math id="inf170"><mml:mover accent="true"><mml:mi mathvariant="normal">Ψ</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover></mml:math></inline-formula>.</p></sec><sec id="s4-2-5"><title>Kruskal-Wallis test and filter evaluation</title><p>We evaluate the significance of splicing changes between different cell types, using the clusters defined above, for the Chen, Trapnell, and Song datasets. For each exon, we asked if its median <inline-formula><mml:math id="inf171"><mml:mover accent="true"><mml:mi mathvariant="normal">Ψ</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover></mml:math></inline-formula> is different between clusters. In order to do this, we grouped the exon’s <inline-formula><mml:math id="inf172"><mml:mover accent="true"><mml:mi mathvariant="normal">Ψ</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover></mml:math></inline-formula> observations by cluster and ran the Kruskal–Wallis test, which is a non-parametric one-way analysis of variance across all clusters at once. We reported the p-value from each exon. A significant result indicates that the exon has a significantly different median <inline-formula><mml:math id="inf173"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mrow><mml:mover><mml:mi mathvariant="normal">Ψ</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover></mml:mrow></mml:mrow></mml:mstyle></mml:math></inline-formula> in at least one cluster relative to at least one other cluster, indicating cell type-associated differential splicing. A non-significant result from the test suggests that the exon’s median <inline-formula><mml:math id="inf174"><mml:mover accent="true"><mml:mi mathvariant="normal">Ψ</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover></mml:math></inline-formula> is not significantly different between any pairs of clusters. The strictness of the differential splicing test was determined by setting different p-value thresholds.</p></sec><sec id="s4-2-6"><title>Autocorrelation test</title><p>We reasoned that exons with reliable estimation of their splicing rate would tend to have similar observations (<inline-formula><mml:math id="inf175"><mml:mover accent="true"><mml:mi mathvariant="normal">Ψ</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover></mml:math></inline-formula>) in cells that are transcriptionally similar to each other. To quantify this, we adapted the autocorrelation test described in <xref ref-type="bibr" rid="bib7">DeTomaso et al., 2019</xref> to compute, for every exon, the similarity in <inline-formula><mml:math id="inf176"><mml:mover accent="true"><mml:mi mathvariant="normal">Ψ</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover></mml:math></inline-formula> amongst neighboring cells in the space of the top two principal components of the gene expression space.</p><p>To calculate the autocorrelation score of one exon, first we normalized the <inline-formula><mml:math id="inf177"><mml:mover accent="true"><mml:mi mathvariant="normal">Ψ</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover></mml:math></inline-formula> as follows:<disp-formula id="equ7"><mml:math id="m7"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msubsup><mml:mrow><mml:mover><mml:mi mathvariant="normal">Ψ</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="normal">′</mml:mi></mml:mrow></mml:msubsup><mml:mo>=</mml:mo><mml:mfrac><mml:mrow><mml:msub><mml:mrow><mml:mover><mml:mi mathvariant="normal">Ψ</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>−</mml:mo><mml:msub><mml:mover><mml:mi mathvariant="normal">Ψ</mml:mi><mml:mo accent="false">¯</mml:mo></mml:mover><mml:mrow><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:mrow><mml:mrow><mml:mrow><mml:mi mathvariant="normal">V</mml:mi><mml:mi mathvariant="normal">a</mml:mi><mml:mi mathvariant="normal">r</mml:mi></mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mrow><mml:mover><mml:mi mathvariant="normal">Ψ</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover></mml:mrow><mml:mrow><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mfrac></mml:mrow></mml:mstyle></mml:math></disp-formula>where <inline-formula><mml:math id="inf178"><mml:msubsup><mml:mover accent="true"><mml:mi mathvariant="normal">Ψ</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover><mml:mrow><mml:mi>i</mml:mi><mml:mo>⁢</mml:mo><mml:mi>j</mml:mi></mml:mrow><mml:mo>′</mml:mo></mml:msubsup></mml:math></inline-formula> is the normalized <inline-formula><mml:math id="inf179"><mml:msub><mml:mover accent="true"><mml:mi mathvariant="normal">Ψ</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover><mml:mrow><mml:mi>i</mml:mi><mml:mo>⁢</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:math></inline-formula> of exon <inline-formula><mml:math id="inf180"><mml:mi>i</mml:mi></mml:math></inline-formula> in cell <inline-formula><mml:math id="inf181"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mi>j</mml:mi></mml:mrow></mml:mstyle></mml:math></inline-formula>; <inline-formula><mml:math id="inf182"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msub><mml:mover><mml:mi mathvariant="normal">Ψ</mml:mi><mml:mo accent="false">¯</mml:mo></mml:mover><mml:mrow><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mstyle></mml:math></inline-formula> is the average observed <inline-formula><mml:math id="inf183"><mml:mover accent="true"><mml:mi mathvariant="normal">Ψ</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover></mml:math></inline-formula> of all the tested exons in cell <inline-formula><mml:math id="inf184"><mml:mi>j</mml:mi></mml:math></inline-formula>, and <inline-formula><mml:math id="inf185"><mml:mrow><mml:mtext>Var</mml:mtext><mml:mo>⁢</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mover accent="true"><mml:msub><mml:mi mathvariant="normal">Ψ</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo stretchy="false">^</mml:mo></mml:mover><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula> is the variance of all observed <inline-formula><mml:math id="inf186"><mml:mover accent="true"><mml:mi mathvariant="normal">Ψ</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover></mml:math></inline-formula> in cell <inline-formula><mml:math id="inf187"><mml:mi>j</mml:mi></mml:math></inline-formula>.</p><p>For each cell <inline-formula><mml:math id="inf188"><mml:mi>j</mml:mi></mml:math></inline-formula>, we identified all its <inline-formula><mml:math id="inf189"><mml:mi>k</mml:mi></mml:math></inline-formula>-nearest neighbors in the PCA projection of the normalized gene expression. For each neighbor <inline-formula><mml:math id="inf190"><mml:mi>k</mml:mi></mml:math></inline-formula>, we calculated a similarity score as follows:<disp-formula id="equ8"><mml:math id="m8"><mml:mrow><mml:msub><mml:mi>w</mml:mi><mml:mrow><mml:mi>j</mml:mi><mml:mo>⁢</mml:mo><mml:mi>k</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:mi>exp</mml:mi><mml:mo>⁡</mml:mo><mml:mrow><mml:mo>(</mml:mo><mml:mfrac><mml:mrow><mml:mo>-</mml:mo><mml:msubsup><mml:mi>d</mml:mi><mml:mrow><mml:mi>j</mml:mi><mml:mo>⁢</mml:mo><mml:mi>k</mml:mi></mml:mrow><mml:mn>2</mml:mn></mml:msubsup></mml:mrow><mml:msubsup><mml:mi>σ</mml:mi><mml:mi>j</mml:mi><mml:mn>2</mml:mn></mml:msubsup></mml:mfrac><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:math></disp-formula>where <inline-formula><mml:math id="inf191"><mml:msub><mml:mi>d</mml:mi><mml:mrow><mml:mi>j</mml:mi><mml:mo>⁢</mml:mo><mml:mi>k</mml:mi></mml:mrow></mml:msub></mml:math></inline-formula> is the Euclidean distance in the PCA projection between cell <inline-formula><mml:math id="inf192"><mml:mi>j</mml:mi></mml:math></inline-formula> and its neighbor <inline-formula><mml:math id="inf193"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mi>k</mml:mi></mml:mrow></mml:mstyle></mml:math></inline-formula>; <inline-formula><mml:math id="inf194"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msub><mml:mi>σ</mml:mi><mml:mrow><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mstyle></mml:math></inline-formula> is the Euclidean distance from cell <inline-formula><mml:math id="inf195"><mml:mi>j</mml:mi></mml:math></inline-formula> to its farthest <inline-formula><mml:math id="inf196"><mml:mi>K</mml:mi></mml:math></inline-formula>-nearest neighbor. For all cells <inline-formula><mml:math id="inf197"><mml:mi>k</mml:mi></mml:math></inline-formula> that are not neighbors of <inline-formula><mml:math id="inf198"><mml:mi>j</mml:mi></mml:math></inline-formula>, we set <inline-formula><mml:math id="inf199"><mml:mrow><mml:msub><mml:mi>w</mml:mi><mml:mrow><mml:mi>j</mml:mi><mml:mo>⁢</mml:mo><mml:mi>k</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mn>0</mml:mn></mml:mrow></mml:math></inline-formula>. For each analyzed dataset, we set <inline-formula><mml:math id="inf200"><mml:mi>K</mml:mi></mml:math></inline-formula> to be half the total number of cells. The smart-seq and smart-seq2 datasets that we analyzed here contain orders of magnitude fewer cells than the UMI-based datasets analyzed by DeTomaso et al., and we reasoned that the default setting of <inline-formula><mml:math id="inf201"><mml:mrow><mml:mi>K</mml:mi><mml:mo>=</mml:mo><mml:msqrt><mml:mi>N</mml:mi></mml:msqrt></mml:mrow></mml:math></inline-formula> might result in neighborhood sizes too small to ensure stability in some datasets. In the datasets with fewer cells, <inline-formula><mml:math id="inf202"><mml:mrow><mml:mi>K</mml:mi><mml:mo>=</mml:mo><mml:mfrac><mml:mi>N</mml:mi><mml:mn>2</mml:mn></mml:mfrac></mml:mrow></mml:math></inline-formula> agreed better than <inline-formula><mml:math id="inf203"><mml:mrow><mml:mi>K</mml:mi><mml:mo>=</mml:mo><mml:msqrt><mml:mi>N</mml:mi></mml:msqrt></mml:mrow></mml:math></inline-formula> with the results of the Kruskal-Wallis test (Jaccard indexes: 0.52 and 0.45 respectively in the Song dataset, 0.43 and 0.28 in the Trapnell dataset, and 0.51 and 0.54 in the Chen dataset).</p><p>For each exon <inline-formula><mml:math id="inf204"><mml:mi>i</mml:mi></mml:math></inline-formula>, we calculate the autocorrelation score as a variation of the Geary’s C statistic as:<disp-formula id="equ9"><mml:math id="m9"><mml:mrow><mml:msup><mml:mi>C</mml:mi><mml:mo>′</mml:mo></mml:msup><mml:mo>=</mml:mo><mml:mrow><mml:mn>1</mml:mn><mml:mo>-</mml:mo><mml:mfrac><mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi>N</mml:mi><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>⁢</mml:mo><mml:mrow><mml:msub><mml:mo largeop="true" symmetric="true">∑</mml:mo><mml:mi>j</mml:mi></mml:msub><mml:mrow><mml:msub><mml:mo largeop="true" symmetric="true">∑</mml:mo><mml:mi>k</mml:mi></mml:msub><mml:mrow><mml:msub><mml:mi>w</mml:mi><mml:mrow><mml:mi>j</mml:mi><mml:mo>⁢</mml:mo><mml:mi>k</mml:mi></mml:mrow></mml:msub><mml:mo>⁢</mml:mo><mml:msup><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:msubsup><mml:mover accent="true"><mml:mi mathvariant="normal">Ψ</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover><mml:mrow><mml:mi>i</mml:mi><mml:mo>⁢</mml:mo><mml:mi>j</mml:mi></mml:mrow><mml:mo>′</mml:mo></mml:msubsup><mml:mo>-</mml:mo><mml:msubsup><mml:mover accent="true"><mml:mi mathvariant="normal">Ψ</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover><mml:mrow><mml:mi>i</mml:mi><mml:mo>⁢</mml:mo><mml:mi>k</mml:mi></mml:mrow><mml:mo>′</mml:mo></mml:msubsup></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mn>2</mml:mn></mml:msup></mml:mrow></mml:mrow></mml:mrow></mml:mrow><mml:mrow><mml:mn>2</mml:mn><mml:mo>⁢</mml:mo><mml:mi>W</mml:mi><mml:mo>⁢</mml:mo><mml:mrow><mml:msub><mml:mo largeop="true" symmetric="true">∑</mml:mo><mml:mi>j</mml:mi></mml:msub><mml:msup><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:msubsup><mml:mover accent="true"><mml:mi mathvariant="normal">Ψ</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover><mml:mrow><mml:mi>i</mml:mi><mml:mo>⁢</mml:mo><mml:mi>j</mml:mi></mml:mrow><mml:mo>′</mml:mo></mml:msubsup><mml:mo>-</mml:mo><mml:msubsup><mml:mover accent="true"><mml:mi mathvariant="normal">Ψ</mml:mi><mml:mo>¯</mml:mo></mml:mover><mml:mi>i</mml:mi><mml:mo>′</mml:mo></mml:msubsup></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mn>2</mml:mn></mml:msup></mml:mrow></mml:mrow></mml:mfrac></mml:mrow></mml:mrow></mml:math></disp-formula>where <inline-formula><mml:math id="inf205"><mml:mi>N</mml:mi></mml:math></inline-formula> is the total number of cells in the dataset, and <inline-formula><mml:math id="inf206"><mml:mi>W</mml:mi></mml:math></inline-formula> is the sum of all <inline-formula><mml:math id="inf207"><mml:msub><mml:mi>w</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>⁢</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:math></inline-formula>.</p><p>For each exon, we calculated an empirical p-value. To avoid bias from missing data and different splicing rates, we binned all the exons by average <inline-formula><mml:math id="inf208"><mml:mover accent="true"><mml:mi mathvariant="normal">Ψ</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover></mml:math></inline-formula> and percent of missing values. We grouped exons with average <inline-formula><mml:math id="inf209"><mml:mover accent="true"><mml:mi mathvariant="normal">Ψ</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover></mml:math></inline-formula> of: {(0.05−0.1&amp;0.9−0.95), (0.1−0.2&amp;0.8−0.9), (0.2−0.3&amp;0.7−0.8), (0.3−0.4&amp;0.6−0.7), (0.4−0.6)}. We also binned exons with missing observations between: {(50−60%), (60−70%), (70−80%), (80−90%), (90−100%)}.</p><p>For each bin, we randomized the values of the exons across the cells 20,000 times. We then calculated the autocorrelation score for all the randomized exons.</p><p>For each exon, we calculated its p-value as <inline-formula><mml:math id="inf210"><mml:mrow><mml:mi>p</mml:mi><mml:mo>=</mml:mo><mml:mfrac><mml:mrow><mml:mi>x</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mn>20</mml:mn><mml:mo>,</mml:mo><mml:mn>001</mml:mn></mml:mrow></mml:mfrac></mml:mrow></mml:math></inline-formula>, where <inline-formula><mml:math id="inf211"><mml:mi>x</mml:mi></mml:math></inline-formula> are all the randomized exons of the same bin with a higher autocorrelation score.</p></sec><sec id="s4-2-7"><title>Splicing change analysis and filter evaluation</title><p>We evaluated if a subset of exons is enriched for exons with low p-values indicating significant change. We repeated this analysis for the p-values from the Kruskal-Wallis test and from the autocorrelation test. For each <inline-formula><mml:math id="inf212"><mml:mi>x</mml:mi></mml:math></inline-formula> as a threshold of low p-values, we define:</p><list list-type="order"><list-item><p><inline-formula><mml:math id="inf213"><mml:mi>M</mml:mi></mml:math></inline-formula> as the set of all exons.</p></list-item><list-item><p><inline-formula><mml:math id="inf214"><mml:mi>m</mml:mi></mml:math></inline-formula> as the set of exons with p-value <inline-formula><mml:math id="inf215"><mml:mrow><mml:mi/><mml:mo>≤</mml:mo><mml:mi>x</mml:mi></mml:mrow></mml:math></inline-formula>.</p></list-item><list-item><p><inline-formula><mml:math id="inf216"><mml:mi>P</mml:mi></mml:math></inline-formula> as the exons in the selected subset.</p></list-item><list-item><p><inline-formula><mml:math id="inf217"><mml:mi>p</mml:mi></mml:math></inline-formula> as the exons in the subset with p-value <inline-formula><mml:math id="inf218"><mml:mrow><mml:mi/><mml:mo>≤</mml:mo><mml:mi>x</mml:mi></mml:mrow></mml:math></inline-formula>.</p></list-item></list><p>We then calculate the fold enrichment as follows:<disp-formula id="equ10"><mml:math id="m10"><mml:mrow><mml:mtext>enrichment </mml:mtext><mml:mo>=</mml:mo><mml:mfrac><mml:mrow><mml:mrow><mml:mo stretchy="false">|</mml:mo><mml:mi>M</mml:mi><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:mo>⋅</mml:mo><mml:mrow><mml:mo stretchy="false">|</mml:mo><mml:mi>p</mml:mi><mml:mo stretchy="false">|</mml:mo></mml:mrow></mml:mrow><mml:mrow><mml:mrow><mml:mo stretchy="false">|</mml:mo><mml:mi>P</mml:mi><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:mo>⋅</mml:mo><mml:mrow><mml:mo stretchy="false">|</mml:mo><mml:mi>m</mml:mi><mml:mo stretchy="false">|</mml:mo></mml:mrow></mml:mrow></mml:mfrac></mml:mrow></mml:math></disp-formula></p><p>We then use the hypergeometric test to determine if the subset of selected exons is significantly enriched for exons with p-values below the threshold. In our analysis, we tested <inline-formula><mml:math id="inf219"><mml:mi>x</mml:mi></mml:math></inline-formula> in a range between 0.1 and 0.00001, and corrected the p-values of the hypergeometric test for multiple testing using the Benjamini-Hochberg correction.</p><p>In addition, we define:</p><list list-type="order"><list-item><p><inline-formula><mml:math id="inf220"><mml:mi>p</mml:mi></mml:math></inline-formula> as true positives.</p></list-item><list-item><p><inline-formula><mml:math id="inf221"><mml:mrow><mml:mi mathvariant="normal">¬</mml:mi><mml:mo>⁢</mml:mo><mml:mi>m</mml:mi></mml:mrow></mml:math></inline-formula> AND <inline-formula><mml:math id="inf222"><mml:mrow><mml:mi mathvariant="normal">¬</mml:mi><mml:mo>⁢</mml:mo><mml:mi>P</mml:mi></mml:mrow></mml:math></inline-formula> as true negatives.</p></list-item><list-item><p><inline-formula><mml:math id="inf223"><mml:mrow><mml:mi mathvariant="normal">¬</mml:mi><mml:mo>⁢</mml:mo><mml:mi>m</mml:mi></mml:mrow></mml:math></inline-formula> AND <inline-formula><mml:math id="inf224"><mml:mi>P</mml:mi></mml:math></inline-formula> as false positives.</p></list-item><list-item><p><inline-formula><mml:math id="inf225"><mml:mi>m</mml:mi></mml:math></inline-formula> AND <inline-formula><mml:math id="inf226"><mml:mrow><mml:mi mathvariant="normal">¬</mml:mi><mml:mo>⁢</mml:mo><mml:mi>P</mml:mi></mml:mrow></mml:math></inline-formula> as false negatives.</p></list-item></list><p>Using these definitions, we calculate the precision, recall, specificity, accuracy and F1 score of the filter for every <inline-formula><mml:math id="inf227"><mml:mi>x</mml:mi></mml:math></inline-formula>.</p></sec></sec><sec id="s4-3"><title>Linear regression on transcriptional burst kinetics</title><p>Transcriptional burst kinetics parameters (burst frequency and burst size) of mouse embryonic stem cells were obtained from <xref ref-type="bibr" rid="bib17">Larsson et al., 2019</xref>. The authors modeled these parameters from cells from the Chen dataset (<xref ref-type="bibr" rid="bib5">Chen et al., 2016</xref>). We selected 619 intermediate exons observed in the ES2i cells that have binary observations (i.e., <inline-formula><mml:math id="inf228"><mml:mover accent="true"><mml:mi mathvariant="normal">Ψ</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover></mml:math></inline-formula> = 0 or 1) in between 1% and 99% of the cells. For each exon, we calculated the logit of the proportion of cells that present binary observations as the target variable. Additionally, we matched each exon to three predictive features: the transcriptional burst size of its gene, the transcriptional burst frequency of its gene, and its expression, represented as the average number of informative splice junction reads that cover the exon. Each predictive feature was transformed by <inline-formula><mml:math id="inf229"><mml:mrow><mml:msub><mml:mi>log</mml:mi><mml:mn>10</mml:mn></mml:msub><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:math></inline-formula>, and all variables were scaled to its standard score. We trained a linear regression model to predict the logit of the proportion of binary exons, using several combinations of the previously described predictive features:</p><list list-type="order"><list-item><p>logit<inline-formula><mml:math id="inf230"><mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="normal">Ψ</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>∼</mml:mo><mml:mi/></mml:mrow></mml:math></inline-formula> burst size</p></list-item><list-item><p>logit<inline-formula><mml:math id="inf231"><mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="normal">Ψ</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>∼</mml:mo><mml:mi/></mml:mrow></mml:math></inline-formula> burst frequency</p></list-item><list-item><p>logit<inline-formula><mml:math id="inf232"><mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="normal">Ψ</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>∼</mml:mo><mml:mi/></mml:mrow></mml:math></inline-formula> size + freq + size · freq</p></list-item><list-item><p>logit<inline-formula><mml:math id="inf233"><mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="normal">Ψ</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>∼</mml:mo><mml:mi/></mml:mrow></mml:math></inline-formula> expression</p></list-item><list-item><p>logit<inline-formula><mml:math id="inf234"><mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="normal">Ψ</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>∼</mml:mo><mml:mi/></mml:mrow></mml:math></inline-formula> size + freq + exp + size · freq + size · exp + freq · exp</p></list-item></list><p>We evaluated each model by calculating the <inline-formula><mml:math id="inf235"><mml:msup><mml:mi>R</mml:mi><mml:mn>2</mml:mn></mml:msup></mml:math></inline-formula> score between the logit<inline-formula><mml:math id="inf236"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="normal">Ψ</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> and the regression prediction.</p></sec><sec id="s4-4"><title>Theoretical analysis of the observed <inline-formula><mml:math id="inf237"><mml:mover accent="true"><mml:mi mathvariant="normal">Ψ</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover></mml:math></inline-formula> with limited capture rate</title><p>mRNA molecules are captured at a limited rate, approximated in some instances as 10% of the molecules in the cell. Under the assumption of uniform sampling of transcripts and isoforms, and assuming the only nuisance factor is the limited capture rate, we formalize the probability for observing a splicing ratio <inline-formula><mml:math id="inf238"><mml:mover accent="true"><mml:mi mathvariant="normal">Ψ</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover></mml:math></inline-formula>. We start by specifying this probability, assuming that we know the total number of transcripts from the respective gene in the cell (<inline-formula><mml:math id="inf239"><mml:mi>m</mml:mi></mml:math></inline-formula>), the real splicing rate <inline-formula><mml:math id="inf240"><mml:mi mathvariant="normal">Ψ</mml:mi></mml:math></inline-formula> and the number of captured molecules <inline-formula><mml:math id="inf241"><mml:mi>r</mml:mi></mml:math></inline-formula> (assuming that for any capture molecule we know if it includes the exon or not). In that case:<disp-formula id="equ11"><mml:math id="m11"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mi>P</mml:mi><mml:mi>r</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mover><mml:mi mathvariant="normal">Ψ</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover></mml:mrow><mml:mo>∣</mml:mo><mml:mi mathvariant="normal">Ψ</mml:mi><mml:mo>,</mml:mo><mml:mi>r</mml:mi><mml:mo>,</mml:mo><mml:mi>m</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mfrac><mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:mtable columnalign="left left" columnspacing="1em" rowspacing="4pt"><mml:mtr><mml:mtd><mml:mrow><mml:mi>m</mml:mi><mml:mi mathvariant="normal">Ψ</mml:mi></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mrow><mml:mi>r</mml:mi><mml:mrow><mml:mover><mml:mi mathvariant="normal">Ψ</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover></mml:mrow></mml:mrow></mml:mtd></mml:mtr></mml:mtable><mml:mo>)</mml:mo></mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:mtable columnalign="left left" columnspacing="1em" rowspacing="4pt"><mml:mtr><mml:mtd><mml:mrow><mml:mi>m</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mn>1</mml:mn><mml:mo>−</mml:mo><mml:mi mathvariant="normal">Ψ</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mrow><mml:mi>r</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mn>1</mml:mn><mml:mo>−</mml:mo><mml:mrow><mml:mover><mml:mi mathvariant="normal">Ψ</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable><mml:mo>)</mml:mo></mml:mrow></mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:mtable columnalign="left left" columnspacing="1em" rowspacing="4pt"><mml:mtr><mml:mtd><mml:mrow><mml:mi>m</mml:mi></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mrow><mml:mi>r</mml:mi></mml:mrow></mml:mtd></mml:mtr></mml:mtable><mml:mo>)</mml:mo></mml:mrow></mml:mfrac></mml:mstyle></mml:mrow></mml:mstyle></mml:math></disp-formula></p><p>Note that for this calculation, the capture efficiency (<inline-formula><mml:math id="inf242"><mml:mi>c</mml:mi></mml:math></inline-formula>) is not needed, since we assume that we know <inline-formula><mml:math id="inf243"><mml:mi>m</mml:mi></mml:math></inline-formula> and <inline-formula><mml:math id="inf244"><mml:mi>r</mml:mi></mml:math></inline-formula>. For a more useful analysis, we will next assume that only one of these variables is not known (starting with <inline-formula><mml:math id="inf245"><mml:mi>m</mml:mi></mml:math></inline-formula> and then <inline-formula><mml:math id="inf246"><mml:mi>r</mml:mi></mml:math></inline-formula>).</p><p>In a more realistic scenario, <inline-formula><mml:math id="inf247"><mml:mi>r</mml:mi></mml:math></inline-formula> and <inline-formula><mml:math id="inf248"><mml:mi>c</mml:mi></mml:math></inline-formula> can be estimated (e.g. using Census), while <inline-formula><mml:math id="inf249"><mml:mi>m</mml:mi></mml:math></inline-formula> remains unknown. We can therefore marginalize <inline-formula><mml:math id="inf250"><mml:mi>m</mml:mi></mml:math></inline-formula> to calculate:<disp-formula id="equ12"><mml:math id="m12"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mtable columnalign="left left" columnspacing="1em" rowspacing="4pt"><mml:mtr><mml:mtd><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mo form="prefix" movablelimits="true">Pr</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mover><mml:mi mathvariant="normal">Ψ</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover></mml:mrow><mml:mo>∣</mml:mo><mml:mi mathvariant="normal">Ψ</mml:mi><mml:mo>,</mml:mo><mml:mi>r</mml:mi><mml:mo>,</mml:mo><mml:mi>c</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mstyle></mml:mtd><mml:mtd><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mo>=</mml:mo><mml:munderover><mml:mo>∑</mml:mo><mml:mrow><mml:mi>m</mml:mi><mml:mo>=</mml:mo><mml:mn>0</mml:mn></mml:mrow><mml:mrow><mml:mi mathvariant="normal">∞</mml:mi></mml:mrow></mml:munderover><mml:mo form="prefix" movablelimits="true">Pr</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mover><mml:mi mathvariant="normal">Ψ</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover></mml:mrow><mml:mo>,</mml:mo><mml:mi>m</mml:mi><mml:mo>∣</mml:mo><mml:mi mathvariant="normal">Ψ</mml:mi><mml:mo>,</mml:mo><mml:mi>r</mml:mi><mml:mo>,</mml:mo><mml:mi>c</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mstyle></mml:mtd></mml:mtr><mml:mtr><mml:mtd/><mml:mtd><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mo>=</mml:mo><mml:munderover><mml:mo>∑</mml:mo><mml:mrow><mml:mi>m</mml:mi><mml:mo>=</mml:mo><mml:mi>r</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="normal">∞</mml:mi></mml:mrow></mml:munderover><mml:mo form="prefix" movablelimits="true">Pr</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mover><mml:mi mathvariant="normal">Ψ</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover></mml:mrow><mml:mo>∣</mml:mo><mml:mi mathvariant="normal">Ψ</mml:mi><mml:mo>,</mml:mo><mml:mi>r</mml:mi><mml:mo>,</mml:mo><mml:mi>c</mml:mi><mml:mo>,</mml:mo><mml:mi>m</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>⋅</mml:mo><mml:mo form="prefix" movablelimits="true">Pr</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi>m</mml:mi><mml:mo>∣</mml:mo><mml:mi>r</mml:mi><mml:mo>,</mml:mo><mml:mi>c</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mstyle></mml:mtd></mml:mtr><mml:mtr><mml:mtd/><mml:mtd><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mo>=</mml:mo><mml:munderover><mml:mo>∑</mml:mo><mml:mrow><mml:mi>m</mml:mi><mml:mo>=</mml:mo><mml:mi>r</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="normal">∞</mml:mi></mml:mrow></mml:munderover><mml:mo form="prefix" movablelimits="true">Pr</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mover><mml:mi mathvariant="normal">Ψ</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover></mml:mrow><mml:mo>∣</mml:mo><mml:mi mathvariant="normal">Ψ</mml:mi><mml:mo>,</mml:mo><mml:mi>r</mml:mi><mml:mo>,</mml:mo><mml:mi>m</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>⋅</mml:mo><mml:mo form="prefix" movablelimits="true">Pr</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi>m</mml:mi><mml:mo>∣</mml:mo><mml:mi>r</mml:mi><mml:mo>,</mml:mo><mml:mi>c</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mstyle></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:mstyle></mml:math></disp-formula></p><p>To estimate <inline-formula><mml:math id="inf251"><mml:mrow><mml:mi>Pr</mml:mi><mml:mo>⁡</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi>m</mml:mi><mml:mo lspace="2.5pt" rspace="2.5pt">∣</mml:mo><mml:mrow><mml:mi>r</mml:mi><mml:mo>,</mml:mo><mml:mi>c</mml:mi></mml:mrow></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula> we note the following:<disp-formula id="equ13"><mml:math id="m13"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mtable columnalign="left left" columnspacing="1em" rowspacing="4pt"><mml:mtr><mml:mtd><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mo form="prefix" movablelimits="true">Pr</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi>m</mml:mi><mml:mo>∣</mml:mo><mml:mi>r</mml:mi><mml:mo>,</mml:mo><mml:mi>c</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mstyle></mml:mtd><mml:mtd><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mo>=</mml:mo><mml:mfrac><mml:mrow><mml:mo form="prefix" movablelimits="true">Pr</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi>r</mml:mi><mml:mo>∣</mml:mo><mml:mi>c</mml:mi><mml:mo>,</mml:mo><mml:mi>m</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>⋅</mml:mo><mml:mo form="prefix" movablelimits="true">Pr</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi>m</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mrow><mml:munderover><mml:mo>∑</mml:mo><mml:mrow><mml:msup><mml:mi>m</mml:mi><mml:mrow><mml:mi mathvariant="normal">′</mml:mi></mml:mrow></mml:msup><mml:mo>=</mml:mo><mml:mn>0</mml:mn></mml:mrow><mml:mrow><mml:mi mathvariant="normal">∞</mml:mi></mml:mrow></mml:munderover><mml:mo form="prefix" movablelimits="true">Pr</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi>r</mml:mi><mml:mo>∣</mml:mo><mml:mi>c</mml:mi><mml:mo>,</mml:mo><mml:msup><mml:mi>m</mml:mi><mml:mrow><mml:mi mathvariant="normal">′</mml:mi></mml:mrow></mml:msup><mml:mo stretchy="false">)</mml:mo><mml:mo>⋅</mml:mo><mml:mo form="prefix" movablelimits="true">Pr</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:msup><mml:mi>m</mml:mi><mml:mrow><mml:mi mathvariant="normal">′</mml:mi></mml:mrow></mml:msup><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mfrac></mml:mstyle></mml:mtd></mml:mtr><mml:mtr><mml:mtd/><mml:mtd><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mo>=</mml:mo><mml:mfrac><mml:mrow><mml:mo form="prefix" movablelimits="true">Pr</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi>r</mml:mi><mml:mo>∣</mml:mo><mml:mi>c</mml:mi><mml:mo>,</mml:mo><mml:mi>m</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mrow><mml:munderover><mml:mo>∑</mml:mo><mml:mrow><mml:msup><mml:mi>m</mml:mi><mml:mrow><mml:mi mathvariant="normal">′</mml:mi></mml:mrow></mml:msup><mml:mo>=</mml:mo><mml:mn>0</mml:mn></mml:mrow><mml:mrow><mml:mi mathvariant="normal">∞</mml:mi></mml:mrow></mml:munderover><mml:mo form="prefix" movablelimits="true">Pr</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi>r</mml:mi><mml:mo>∣</mml:mo><mml:mi>c</mml:mi><mml:mo>,</mml:mo><mml:msup><mml:mi>m</mml:mi><mml:mrow><mml:mi mathvariant="normal">′</mml:mi></mml:mrow></mml:msup><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mfrac></mml:mstyle></mml:mtd></mml:mtr><mml:mtr><mml:mtd/><mml:mtd><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mo>=</mml:mo><mml:mfrac><mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:mtable columnspacing="1em" rowspacing="4pt"><mml:mtr><mml:mtd><mml:mi>m</mml:mi></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mi>r</mml:mi></mml:mtd></mml:mtr></mml:mtable><mml:mo>)</mml:mo></mml:mrow><mml:msup><mml:mi>c</mml:mi><mml:mrow><mml:mi>r</mml:mi></mml:mrow></mml:msup><mml:mo stretchy="false">(</mml:mo><mml:mn>1</mml:mn><mml:mo>−</mml:mo><mml:mi>c</mml:mi><mml:msup><mml:mo stretchy="false">)</mml:mo><mml:mrow><mml:mi>m</mml:mi><mml:mo>−</mml:mo><mml:mi>r</mml:mi></mml:mrow></mml:msup></mml:mrow><mml:mrow><mml:munderover><mml:mo>∑</mml:mo><mml:mrow><mml:msup><mml:mi>m</mml:mi><mml:mrow><mml:mi mathvariant="normal">′</mml:mi></mml:mrow></mml:msup><mml:mo>=</mml:mo><mml:mn>0</mml:mn></mml:mrow><mml:mrow><mml:mi mathvariant="normal">∞</mml:mi></mml:mrow></mml:munderover><mml:mo form="prefix" movablelimits="true">Pr</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi>r</mml:mi><mml:mo>∣</mml:mo><mml:mi>c</mml:mi><mml:mo>,</mml:mo><mml:msup><mml:mi>m</mml:mi><mml:mrow><mml:mi mathvariant="normal">′</mml:mi></mml:mrow></mml:msup><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mfrac></mml:mstyle></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:mstyle></mml:math></disp-formula>where we model the probability of capturing <inline-formula><mml:math id="inf252"><mml:mi>r</mml:mi></mml:math></inline-formula> mRNA molecules as a binomial sample from <inline-formula><mml:math id="inf253"><mml:mi>m</mml:mi></mml:math></inline-formula> with probability <inline-formula><mml:math id="inf254"><mml:mi>c</mml:mi></mml:math></inline-formula>. Note that the third transition is done under the assumption of a uniform prior on <inline-formula><mml:math id="inf255"><mml:mi>m</mml:mi></mml:math></inline-formula>.</p><p>To compute the denominator, we expand:<disp-formula id="equ14"><mml:math id="m14"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mtable columnalign="center center center" columnspacing="1em" rowspacing="4pt"><mml:mtr><mml:mtd><mml:mstyle displaystyle="true" scriptlevel="0"><mml:munderover><mml:mo>∑</mml:mo><mml:mrow><mml:msup><mml:mi>m</mml:mi><mml:mrow><mml:mi mathvariant="normal">′</mml:mi></mml:mrow></mml:msup><mml:mo>=</mml:mo><mml:mn>0</mml:mn></mml:mrow><mml:mrow><mml:mi mathvariant="normal">∞</mml:mi></mml:mrow></mml:munderover><mml:mo form="prefix" movablelimits="true">Pr</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi>r</mml:mi><mml:mo>∣</mml:mo><mml:mi>c</mml:mi><mml:mo>,</mml:mo><mml:msup><mml:mi>m</mml:mi><mml:mrow><mml:mi mathvariant="normal">′</mml:mi></mml:mrow></mml:msup><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:munderover><mml:mo>∑</mml:mo><mml:mrow><mml:msup><mml:mi>m</mml:mi><mml:mrow><mml:mi mathvariant="normal">′</mml:mi></mml:mrow></mml:msup><mml:mo>=</mml:mo><mml:mi>r</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="normal">∞</mml:mi></mml:mrow></mml:munderover><mml:mrow><mml:mo>(</mml:mo><mml:mtable columnspacing="1em" rowspacing="4pt"><mml:mtr><mml:mtd><mml:msup><mml:mi>m</mml:mi><mml:mrow><mml:mi mathvariant="normal">′</mml:mi></mml:mrow></mml:msup></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mi>r</mml:mi></mml:mtd></mml:mtr></mml:mtable><mml:mo>)</mml:mo></mml:mrow><mml:msup><mml:mi>c</mml:mi><mml:mrow><mml:mi>r</mml:mi></mml:mrow></mml:msup><mml:mo stretchy="false">(</mml:mo><mml:mn>1</mml:mn><mml:mo>−</mml:mo><mml:mi>c</mml:mi><mml:msup><mml:mo stretchy="false">)</mml:mo><mml:mrow><mml:msup><mml:mi>m</mml:mi><mml:mrow><mml:mi mathvariant="normal">′</mml:mi></mml:mrow></mml:msup><mml:mo>−</mml:mo><mml:mi>r</mml:mi></mml:mrow></mml:msup></mml:mstyle></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mo>=</mml:mo><mml:msup><mml:mi>c</mml:mi><mml:mrow><mml:mi>r</mml:mi></mml:mrow></mml:msup><mml:munderover><mml:mo>∑</mml:mo><mml:mrow><mml:mi>k</mml:mi><mml:mo>=</mml:mo><mml:mn>0</mml:mn></mml:mrow><mml:mrow><mml:mi mathvariant="normal">∞</mml:mi></mml:mrow></mml:munderover><mml:mrow><mml:mo>(</mml:mo><mml:mtable columnspacing="1em" rowspacing="4pt"><mml:mtr><mml:mtd><mml:mi>r</mml:mi><mml:mo>+</mml:mo><mml:mi>k</mml:mi></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mi>r</mml:mi></mml:mtd></mml:mtr></mml:mtable><mml:mo>)</mml:mo></mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mn>1</mml:mn><mml:mo>−</mml:mo><mml:mi>c</mml:mi><mml:msup><mml:mo stretchy="false">)</mml:mo><mml:mrow><mml:mi>k</mml:mi></mml:mrow></mml:msup><mml:mo>=</mml:mo><mml:msup><mml:mi>c</mml:mi><mml:mrow><mml:mi>r</mml:mi></mml:mrow></mml:msup><mml:munderover><mml:mo>∑</mml:mo><mml:mrow><mml:mi>k</mml:mi><mml:mo>=</mml:mo><mml:mn>0</mml:mn></mml:mrow><mml:mrow><mml:mi mathvariant="normal">∞</mml:mi></mml:mrow></mml:munderover><mml:mfrac><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>r</mml:mi><mml:mo>+</mml:mo><mml:mi>k</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>!</mml:mo></mml:mrow><mml:mrow><mml:mi>k</mml:mi><mml:mo>!</mml:mo><mml:mi>r</mml:mi><mml:mo>!</mml:mo></mml:mrow></mml:mfrac><mml:mo stretchy="false">(</mml:mo><mml:mn>1</mml:mn><mml:mo>−</mml:mo><mml:mi>c</mml:mi><mml:msup><mml:mo stretchy="false">)</mml:mo><mml:mrow><mml:mi>k</mml:mi></mml:mrow></mml:msup></mml:mstyle></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mo>=</mml:mo><mml:msup><mml:mi>c</mml:mi><mml:mrow><mml:mi>r</mml:mi></mml:mrow></mml:msup><mml:munderover><mml:mo>∑</mml:mo><mml:mrow><mml:mi>k</mml:mi><mml:mo>=</mml:mo><mml:mn>0</mml:mn></mml:mrow><mml:mrow><mml:mi mathvariant="normal">∞</mml:mi></mml:mrow></mml:munderover><mml:mfrac><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mo>−</mml:mo><mml:mn>1</mml:mn><mml:msup><mml:mo stretchy="false">)</mml:mo><mml:mrow><mml:mi>k</mml:mi></mml:mrow></mml:msup></mml:mrow><mml:mrow><mml:mi>k</mml:mi><mml:mo>!</mml:mo></mml:mrow></mml:mfrac><mml:mo stretchy="false">(</mml:mo><mml:mi>r</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">)</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi>r</mml:mi><mml:mo>+</mml:mo><mml:mn>2</mml:mn><mml:mo stretchy="false">)</mml:mo><mml:mo>…</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi>r</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn><mml:mo>+</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi>k</mml:mi><mml:mo>−</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">)</mml:mo><mml:mo stretchy="false">)</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi>c</mml:mi><mml:mo>−</mml:mo><mml:mn>1</mml:mn><mml:msup><mml:mo stretchy="false">)</mml:mo><mml:mrow><mml:mi>k</mml:mi></mml:mrow></mml:msup></mml:mstyle></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mo>=</mml:mo><mml:msup><mml:mi>c</mml:mi><mml:mrow><mml:mi>r</mml:mi></mml:mrow></mml:msup><mml:munderover><mml:mo>∑</mml:mo><mml:mrow><mml:mi>k</mml:mi><mml:mo>=</mml:mo><mml:mn>0</mml:mn></mml:mrow><mml:mrow><mml:mi mathvariant="normal">∞</mml:mi></mml:mrow></mml:munderover><mml:mfrac><mml:mn>1</mml:mn><mml:mrow><mml:mi>k</mml:mi><mml:mo>!</mml:mo></mml:mrow></mml:mfrac><mml:mo stretchy="false">(</mml:mo><mml:mo>−</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi>r</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">)</mml:mo><mml:mo stretchy="false">)</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mo>−</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi>r</mml:mi><mml:mo>+</mml:mo><mml:mn>2</mml:mn><mml:mo stretchy="false">)</mml:mo><mml:mo stretchy="false">)</mml:mo><mml:mo>…</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mo>−</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi>r</mml:mi><mml:mo>+</mml:mo><mml:mi>k</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo stretchy="false">)</mml:mo><mml:msup><mml:mn>1</mml:mn><mml:mrow><mml:mi>r</mml:mi><mml:mo>+</mml:mo><mml:mi>k</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msup><mml:mo stretchy="false">(</mml:mo><mml:mi>c</mml:mi><mml:mo>−</mml:mo><mml:mn>1</mml:mn><mml:msup><mml:mo stretchy="false">)</mml:mo><mml:mrow><mml:mi>k</mml:mi></mml:mrow></mml:msup></mml:mstyle></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mi mathvariant="normal">b</mml:mi><mml:mi mathvariant="normal">y</mml:mi><mml:mtext> </mml:mtext><mml:mi mathvariant="normal">T</mml:mi><mml:mi mathvariant="normal">a</mml:mi><mml:mi mathvariant="normal">y</mml:mi><mml:mi mathvariant="normal">l</mml:mi><mml:mi mathvariant="normal">o</mml:mi><mml:mi mathvariant="normal">r</mml:mi><mml:mtext> </mml:mtext><mml:mi mathvariant="normal">s</mml:mi><mml:mi mathvariant="normal">e</mml:mi><mml:mi mathvariant="normal">r</mml:mi><mml:mi mathvariant="normal">i</mml:mi><mml:mi mathvariant="normal">e</mml:mi><mml:mi mathvariant="normal">s</mml:mi><mml:mtext> </mml:mtext><mml:mi mathvariant="normal">c</mml:mi><mml:mi mathvariant="normal">e</mml:mi><mml:mi mathvariant="normal">n</mml:mi><mml:mi mathvariant="normal">t</mml:mi><mml:mi mathvariant="normal">e</mml:mi><mml:mi mathvariant="normal">r</mml:mi><mml:mi mathvariant="normal">e</mml:mi><mml:mi mathvariant="normal">d</mml:mi><mml:mtext> </mml:mtext><mml:mi mathvariant="normal">i</mml:mi><mml:mi mathvariant="normal">n</mml:mi><mml:mtext> </mml:mtext><mml:mn>1</mml:mn></mml:mrow><mml:mtext> </mml:mtext><mml:mo>=</mml:mo><mml:msup><mml:mi>c</mml:mi><mml:mrow><mml:mi>r</mml:mi></mml:mrow></mml:msup><mml:mfrac><mml:mn>1</mml:mn><mml:msup><mml:mi>c</mml:mi><mml:mrow><mml:mi>r</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msup></mml:mfrac><mml:mo>=</mml:mo><mml:mfrac><mml:mn>1</mml:mn><mml:mi>c</mml:mi></mml:mfrac></mml:mstyle></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:mstyle></mml:math></disp-formula></p><p>Thus,<disp-formula id="equ15"><mml:math id="m15"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mtable columnalign="left left" columnspacing="1em" rowspacing="4pt"><mml:mtr><mml:mtd><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mo form="prefix" movablelimits="true">Pr</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mover><mml:mi mathvariant="normal">Ψ</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover></mml:mrow><mml:mo>∣</mml:mo><mml:mi mathvariant="normal">Ψ</mml:mi><mml:mo>,</mml:mo><mml:mi>r</mml:mi><mml:mo>,</mml:mo><mml:mi>c</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mstyle></mml:mtd><mml:mtd><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mo>=</mml:mo><mml:munderover><mml:mo>∑</mml:mo><mml:mrow><mml:mi>m</mml:mi><mml:mo>=</mml:mo><mml:mi>r</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="normal">∞</mml:mi></mml:mrow></mml:munderover><mml:mo form="prefix" movablelimits="true">Pr</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mover><mml:mi mathvariant="normal">Ψ</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover></mml:mrow><mml:mo>∣</mml:mo><mml:mi mathvariant="normal">Ψ</mml:mi><mml:mo>,</mml:mo><mml:mi>r</mml:mi><mml:mo>,</mml:mo><mml:mi>c</mml:mi><mml:mo>,</mml:mo><mml:mi>m</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>⋅</mml:mo><mml:mo form="prefix" movablelimits="true">Pr</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi>m</mml:mi><mml:mo>∣</mml:mo><mml:mi>r</mml:mi><mml:mo>,</mml:mo><mml:mi>c</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mstyle></mml:mtd></mml:mtr><mml:mtr><mml:mtd/><mml:mtd><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mo>=</mml:mo><mml:munderover><mml:mo>∑</mml:mo><mml:mrow><mml:mi>m</mml:mi><mml:mo>=</mml:mo><mml:mi>r</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="normal">∞</mml:mi></mml:mrow></mml:munderover><mml:mfrac><mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:mtable columnspacing="1em" rowspacing="4pt"><mml:mtr><mml:mtd><mml:mi>m</mml:mi><mml:mi mathvariant="normal">Ψ</mml:mi></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mi>r</mml:mi><mml:mrow><mml:mover><mml:mi mathvariant="normal">Ψ</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover></mml:mrow></mml:mtd></mml:mtr></mml:mtable><mml:mo>)</mml:mo></mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:mtable columnspacing="1em" rowspacing="4pt"><mml:mtr><mml:mtd><mml:mi>m</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mn>1</mml:mn><mml:mo>−</mml:mo><mml:mi mathvariant="normal">Ψ</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mi>r</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mn>1</mml:mn><mml:mo>−</mml:mo><mml:mrow><mml:mover><mml:mi mathvariant="normal">Ψ</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mtd></mml:mtr></mml:mtable><mml:mo>)</mml:mo></mml:mrow></mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:mtable columnspacing="1em" rowspacing="4pt"><mml:mtr><mml:mtd><mml:mi>m</mml:mi></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mi>r</mml:mi></mml:mtd></mml:mtr></mml:mtable><mml:mo>)</mml:mo></mml:mrow></mml:mfrac><mml:mfrac><mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:mtable columnspacing="1em" rowspacing="4pt"><mml:mtr><mml:mtd><mml:mi>m</mml:mi></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mi>r</mml:mi></mml:mtd></mml:mtr></mml:mtable><mml:mo>)</mml:mo></mml:mrow><mml:msup><mml:mi>c</mml:mi><mml:mrow><mml:mi>r</mml:mi></mml:mrow></mml:msup><mml:mo stretchy="false">(</mml:mo><mml:mn>1</mml:mn><mml:mo>−</mml:mo><mml:mi>c</mml:mi><mml:msup><mml:mo stretchy="false">)</mml:mo><mml:mrow><mml:mi>m</mml:mi><mml:mo>−</mml:mo><mml:mi>r</mml:mi></mml:mrow></mml:msup></mml:mrow><mml:mfrac><mml:mn>1</mml:mn><mml:mi>c</mml:mi></mml:mfrac></mml:mfrac></mml:mstyle></mml:mtd></mml:mtr><mml:mtr><mml:mtd/><mml:mtd><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mo>≈</mml:mo><mml:munderover><mml:mo>∑</mml:mo><mml:mrow><mml:mi>m</mml:mi><mml:mo>=</mml:mo><mml:mi>r</mml:mi></mml:mrow><mml:mrow><mml:mn>10</mml:mn><mml:mi>r</mml:mi><mml:mrow><mml:mo>/</mml:mo></mml:mrow><mml:mi>c</mml:mi></mml:mrow></mml:munderover><mml:mrow><mml:mo>(</mml:mo><mml:mtable columnspacing="1em" rowspacing="4pt"><mml:mtr><mml:mtd><mml:mi>m</mml:mi><mml:mi mathvariant="normal">Ψ</mml:mi></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mi>r</mml:mi><mml:mrow><mml:mover><mml:mi mathvariant="normal">Ψ</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover></mml:mrow></mml:mtd></mml:mtr></mml:mtable><mml:mo>)</mml:mo></mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:mtable columnspacing="1em" rowspacing="4pt"><mml:mtr><mml:mtd><mml:mi>m</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mn>1</mml:mn><mml:mo>−</mml:mo><mml:mi mathvariant="normal">Ψ</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mi>r</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mn>1</mml:mn><mml:mo>−</mml:mo><mml:mrow><mml:mover><mml:mi mathvariant="normal">Ψ</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mtd></mml:mtr></mml:mtable><mml:mo>)</mml:mo></mml:mrow><mml:mo>⋅</mml:mo><mml:msup><mml:mi>c</mml:mi><mml:mrow><mml:mi>r</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msup><mml:mo stretchy="false">(</mml:mo><mml:mn>1</mml:mn><mml:mo>−</mml:mo><mml:mi>c</mml:mi><mml:msup><mml:mo stretchy="false">)</mml:mo><mml:mrow><mml:mi>m</mml:mi><mml:mo>−</mml:mo><mml:mi>r</mml:mi></mml:mrow></mml:msup></mml:mstyle></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:mstyle></mml:math></disp-formula></p><p>In the last equation, we estimate the sum going only up to a large value of <inline-formula><mml:math id="inf256"><mml:mi>m</mml:mi></mml:math></inline-formula>, since its posterior probability diminishes. In expectation <inline-formula><mml:math id="inf257"><mml:mrow><mml:mi>m</mml:mi><mml:mo>≈</mml:mo><mml:mrow><mml:mi>r</mml:mi><mml:mo>/</mml:mo><mml:mi>c</mml:mi></mml:mrow></mml:mrow></mml:math></inline-formula>. We use ten times this value as the maximum.</p><p>We can use this equation to estimate the expected proportion of binary <inline-formula><mml:math id="inf258"><mml:mover accent="true"><mml:mi mathvariant="normal">Ψ</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover></mml:math></inline-formula> observations (<inline-formula><mml:math id="inf259"><mml:mover accent="true"><mml:mi mathvariant="normal">Ψ</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover></mml:math></inline-formula>=0 or 1) that is expected when we observe only <inline-formula><mml:math id="inf260"><mml:mi>r</mml:mi></mml:math></inline-formula> junctions from a splicing event with a given true rate <inline-formula><mml:math id="inf261"><mml:mi mathvariant="normal">Ψ</mml:mi></mml:math></inline-formula> (<xref ref-type="fig" rid="fig3s1">Figure 3—figure supplement 1a</xref>). We can also estimate the chance to have an empirical <inline-formula><mml:math id="inf262"><mml:mover accent="true"><mml:mi mathvariant="normal">Ψ</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover></mml:math></inline-formula> that is at least within a certain delta (in absolute terms) from the real <inline-formula><mml:math id="inf263"><mml:mi mathvariant="normal">Ψ</mml:mi></mml:math></inline-formula>. Namely, we can estimate <inline-formula><mml:math id="inf264"><mml:mrow><mml:mi>Pr</mml:mi><mml:mo>⁡</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mrow><mml:mo>∣</mml:mo><mml:mrow><mml:mover accent="true"><mml:mi mathvariant="normal">Ψ</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover><mml:mo>-</mml:mo><mml:mi mathvariant="normal">Ψ</mml:mi></mml:mrow><mml:mo>∣</mml:mo></mml:mrow><mml:mo>⁢</mml:mo><mml:mrow><mml:mo>&lt;</mml:mo><mml:mi>δ</mml:mi><mml:mo fence="true">∣</mml:mo></mml:mrow><mml:mo>⁢</mml:mo><mml:mi mathvariant="normal">Ψ</mml:mi></mml:mrow><mml:mo>,</mml:mo><mml:mi>r</mml:mi><mml:mo>,</mml:mo><mml:mi>c</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula> (<xref ref-type="fig" rid="fig3s1">Figure 3—figure supplement 1d</xref>).</p><p>In another calculation of interest, one can ask how many mRNA molecules should a gene have in a cell in order to correctly estimate the splicing rate, under a limited capture efficiency <inline-formula><mml:math id="inf265"><mml:mi>c</mml:mi></mml:math></inline-formula>. To estimate it, we denote by <inline-formula><mml:math id="inf266"><mml:mi>d</mml:mi></mml:math></inline-formula> a binary variable indicating that the gene has been detected (i.e. <inline-formula><mml:math id="inf267"><mml:mrow><mml:mi>r</mml:mi><mml:mo>&gt;</mml:mo><mml:mn>0</mml:mn></mml:mrow></mml:math></inline-formula>) and marginalize <inline-formula><mml:math id="inf268"><mml:mi>r</mml:mi></mml:math></inline-formula> in the following way:<disp-formula id="equ16"><mml:math id="m16"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mo form="prefix" movablelimits="true">Pr</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mover><mml:mi mathvariant="normal">Ψ</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover></mml:mrow><mml:mo>∣</mml:mo><mml:mi mathvariant="normal">Ψ</mml:mi><mml:mo>,</mml:mo><mml:mi>c</mml:mi><mml:mo>,</mml:mo><mml:mi>m</mml:mi><mml:mo>,</mml:mo><mml:mi>d</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mo>=</mml:mo><mml:mfrac><mml:mrow><mml:mo form="prefix" movablelimits="true">Pr</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mover><mml:mi mathvariant="normal">Ψ</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover></mml:mrow><mml:mo>,</mml:mo><mml:mi>d</mml:mi><mml:mo>∣</mml:mo><mml:mi mathvariant="normal">Ψ</mml:mi><mml:mo>,</mml:mo><mml:mi>c</mml:mi><mml:mo>,</mml:mo><mml:mi>m</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mrow><mml:mo form="prefix" movablelimits="true">Pr</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi>d</mml:mi><mml:mo>∣</mml:mo><mml:mi>c</mml:mi><mml:mo>,</mml:mo><mml:mi>m</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mfrac></mml:mstyle></mml:mstyle></mml:mrow></mml:mstyle></mml:math></disp-formula></p><p>Where<disp-formula id="equ17"><mml:math id="m17"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mtable columnalign="left left" columnspacing="1em" rowspacing="4pt"><mml:mtr><mml:mtd><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mo form="prefix" movablelimits="true">Pr</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mover><mml:mi mathvariant="normal">Ψ</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover></mml:mrow><mml:mo>,</mml:mo><mml:mi>d</mml:mi><mml:mo>∣</mml:mo><mml:mi mathvariant="normal">Ψ</mml:mi><mml:mo>,</mml:mo><mml:mi>c</mml:mi><mml:mo>,</mml:mo><mml:mi>m</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mstyle></mml:mtd><mml:mtd><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mo>=</mml:mo><mml:munderover><mml:mo>∑</mml:mo><mml:mrow><mml:mi>r</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mi>m</mml:mi></mml:mrow></mml:munderover><mml:mo form="prefix" movablelimits="true">Pr</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mover><mml:mi mathvariant="normal">Ψ</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover></mml:mrow><mml:mo>,</mml:mo><mml:mi>r</mml:mi><mml:mo>∣</mml:mo><mml:mi mathvariant="normal">Ψ</mml:mi><mml:mo>,</mml:mo><mml:mi>c</mml:mi><mml:mo>,</mml:mo><mml:mi>m</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mstyle></mml:mtd></mml:mtr><mml:mtr><mml:mtd/><mml:mtd><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mo>=</mml:mo><mml:munderover><mml:mo>∑</mml:mo><mml:mrow><mml:mi>r</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mi>m</mml:mi></mml:mrow></mml:munderover><mml:mo form="prefix" movablelimits="true">Pr</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mover><mml:mi mathvariant="normal">Ψ</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover></mml:mrow><mml:mo>∣</mml:mo><mml:mi mathvariant="normal">Ψ</mml:mi><mml:mo>,</mml:mo><mml:mi>c</mml:mi><mml:mo>,</mml:mo><mml:mi>m</mml:mi><mml:mo>,</mml:mo><mml:mi>r</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>⋅</mml:mo><mml:mo form="prefix" movablelimits="true">Pr</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi>r</mml:mi><mml:mo>∣</mml:mo><mml:mi>c</mml:mi><mml:mo>,</mml:mo><mml:mi>m</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mstyle></mml:mtd></mml:mtr><mml:mtr><mml:mtd/><mml:mtd><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mo>=</mml:mo><mml:munderover><mml:mo>∑</mml:mo><mml:mrow><mml:mi>r</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mi>m</mml:mi></mml:mrow></mml:munderover><mml:mfrac><mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:mtable columnalign="left left" columnspacing="1em" rowspacing="4pt"><mml:mtr><mml:mtd><mml:mi>m</mml:mi><mml:mi mathvariant="normal">Ψ</mml:mi></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mi>r</mml:mi><mml:mrow><mml:mover><mml:mi mathvariant="normal">Ψ</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover></mml:mrow></mml:mtd></mml:mtr></mml:mtable><mml:mo>)</mml:mo></mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:mtable columnalign="left left" columnspacing="1em" rowspacing="4pt"><mml:mtr><mml:mtd><mml:mi>m</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mn>1</mml:mn><mml:mo>−</mml:mo><mml:mi mathvariant="normal">Ψ</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mi>r</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mn>1</mml:mn><mml:mo>−</mml:mo><mml:mrow><mml:mover><mml:mi mathvariant="normal">Ψ</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mtd></mml:mtr></mml:mtable><mml:mo>)</mml:mo></mml:mrow></mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:mtable columnalign="left left" columnspacing="1em" rowspacing="4pt"><mml:mtr><mml:mtd><mml:mi>m</mml:mi></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mi>r</mml:mi></mml:mtd></mml:mtr></mml:mtable><mml:mo>)</mml:mo></mml:mrow></mml:mfrac><mml:mo>⋅</mml:mo><mml:mrow><mml:mo>(</mml:mo><mml:mtable columnalign="left left" columnspacing="1em" rowspacing="4pt"><mml:mtr><mml:mtd><mml:mi>m</mml:mi></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mi>r</mml:mi></mml:mtd></mml:mtr></mml:mtable><mml:mo>)</mml:mo></mml:mrow><mml:msup><mml:mi>c</mml:mi><mml:mrow><mml:mi>r</mml:mi></mml:mrow></mml:msup><mml:mo stretchy="false">(</mml:mo><mml:mn>1</mml:mn><mml:mo>−</mml:mo><mml:mi>c</mml:mi><mml:msup><mml:mo stretchy="false">)</mml:mo><mml:mrow><mml:mi>m</mml:mi><mml:mo>−</mml:mo><mml:mi>r</mml:mi></mml:mrow></mml:msup></mml:mstyle></mml:mtd></mml:mtr><mml:mtr><mml:mtd/></mml:mtr><mml:mtr><mml:mtd/><mml:mtd><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mo>=</mml:mo><mml:munderover><mml:mo>∑</mml:mo><mml:mrow><mml:mi>r</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mi>m</mml:mi></mml:mrow></mml:munderover><mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:mtable columnalign="left left" columnspacing="1em" rowspacing="4pt"><mml:mtr><mml:mtd><mml:mi>m</mml:mi><mml:mi mathvariant="normal">Ψ</mml:mi></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mi>r</mml:mi><mml:mrow><mml:mover><mml:mi mathvariant="normal">Ψ</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover></mml:mrow></mml:mtd></mml:mtr></mml:mtable><mml:mo>)</mml:mo></mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:mtable columnalign="left left" columnspacing="1em" rowspacing="4pt"><mml:mtr><mml:mtd><mml:mi>m</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mn>1</mml:mn><mml:mo>−</mml:mo><mml:mi mathvariant="normal">Ψ</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mi>r</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mn>1</mml:mn><mml:mo>−</mml:mo><mml:mrow><mml:mover><mml:mi mathvariant="normal">Ψ</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mtd></mml:mtr></mml:mtable><mml:mo>)</mml:mo></mml:mrow></mml:mrow><mml:msup><mml:mi>c</mml:mi><mml:mrow><mml:mi>r</mml:mi></mml:mrow></mml:msup><mml:mo stretchy="false">(</mml:mo><mml:mn>1</mml:mn><mml:mo>−</mml:mo><mml:mi>c</mml:mi><mml:msup><mml:mo stretchy="false">)</mml:mo><mml:mrow><mml:mi>m</mml:mi><mml:mo>−</mml:mo><mml:mi>r</mml:mi></mml:mrow></mml:msup></mml:mstyle></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:mstyle></mml:math></disp-formula>and<disp-formula id="equ18"><mml:math id="m18"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mo form="prefix" movablelimits="true">Pr</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi>d</mml:mi><mml:mo>∣</mml:mo><mml:mi>c</mml:mi><mml:mo>,</mml:mo><mml:mi>m</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mo>=</mml:mo><mml:mn>1</mml:mn><mml:mo>−</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mn>1</mml:mn><mml:mo>−</mml:mo><mml:mi>c</mml:mi><mml:msup><mml:mo stretchy="false">)</mml:mo><mml:mrow><mml:mi>m</mml:mi></mml:mrow></mml:msup></mml:mstyle></mml:mstyle></mml:mrow></mml:mstyle></mml:math></disp-formula></p><p>We use this in <xref ref-type="fig" rid="fig3s1">Figure 3—figure supplement 1b</xref> to plot the chances to see only one isoform (binary <inline-formula><mml:math id="inf269"><mml:mover accent="true"><mml:mi mathvariant="normal">Ψ</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover></mml:math></inline-formula>) for a fixed <inline-formula><mml:math id="inf270"><mml:mi mathvariant="normal">Ψ</mml:mi></mml:math></inline-formula> (set to 0.5) as a function of the number of molecules present in the cell (<inline-formula><mml:math id="inf271"><mml:mi>m</mml:mi></mml:math></inline-formula>).</p></sec><sec id="s4-5"><title>Probabilistic simulator of splicing in single cell data</title><p>1) Biological process. We simulate the expression of 1500 hypothetical genes in 300 cells using SymSim, an in silico simulator of gene expression in single cells (<xref ref-type="bibr" rid="bib40">Zhang et al., 2019</xref>); the expression of gene <inline-formula><mml:math id="inf272"><mml:mi>g</mml:mi></mml:math></inline-formula> in cell <inline-formula><mml:math id="inf273"><mml:mi>i</mml:mi></mml:math></inline-formula> is annotated as <inline-formula><mml:math id="inf274"><mml:msub><mml:mi>X</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:math></inline-formula>. We simulate one cassette exon <inline-formula><mml:math id="inf275"><mml:mi>j</mml:mi></mml:math></inline-formula> for each gene <inline-formula><mml:math id="inf276"><mml:mi>g</mml:mi></mml:math></inline-formula>. For each cassette, exon <inline-formula><mml:math id="inf277"><mml:mi>j</mml:mi></mml:math></inline-formula> in cell <inline-formula><mml:math id="inf278"><mml:mi>i</mml:mi></mml:math></inline-formula>, we simulate an underlying splicing distribution <inline-formula><mml:math id="inf279"><mml:msub><mml:mi mathvariant="normal">Ψ</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>⁢</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:math></inline-formula> as a Beta distribution with exon-specific parameters <inline-formula><mml:math id="inf280"><mml:msub><mml:mi>α</mml:mi><mml:mi>j</mml:mi></mml:msub></mml:math></inline-formula> and <inline-formula><mml:math id="inf281"><mml:msub><mml:mi>β</mml:mi><mml:mi>j</mml:mi></mml:msub></mml:math></inline-formula>. The splicing of <inline-formula><mml:math id="inf282"><mml:mi>j</mml:mi></mml:math></inline-formula> in <inline-formula><mml:math id="inf283"><mml:mi>i</mml:mi></mml:math></inline-formula> is simulated as a binomial sampling from <inline-formula><mml:math id="inf284"><mml:msub><mml:mi>X</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>⁢</mml:mo><mml:mi>g</mml:mi></mml:mrow></mml:msub></mml:math></inline-formula> with probability <inline-formula><mml:math id="inf285"><mml:msub><mml:mi mathvariant="normal">Ψ</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>⁢</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:math></inline-formula>. 2) Technical process. We simulate the capture, fragmentation and sequencing of each transcript using a modified version of SymSim’s True2ObservedCounts function and a random vector of transcript lengths. Finally, we subsample the obtained reads based on the transcript length in order to simulate the coverage of informative splice junctions.</p><p>We simulate the splicing of cassette exons in a set of genes <inline-formula><mml:math id="inf286"><mml:mi>G</mml:mi></mml:math></inline-formula> expressed in a population of cells <inline-formula><mml:math id="inf287"><mml:mi>N</mml:mi></mml:math></inline-formula>. For each gene <inline-formula><mml:math id="inf288"><mml:mrow><mml:mi>g</mml:mi><mml:mo>∈</mml:mo><mml:mi>G</mml:mi></mml:mrow></mml:math></inline-formula>, we simulate the splicing of one cassette exon <inline-formula><mml:math id="inf289"><mml:mi>j</mml:mi></mml:math></inline-formula>. The inclusion of <inline-formula><mml:math id="inf290"><mml:mi>j</mml:mi></mml:math></inline-formula> forms the isoform <inline-formula><mml:math id="inf291"><mml:msub><mml:mi>j</mml:mi><mml:mi>A</mml:mi></mml:msub></mml:math></inline-formula>, while the exclusion of the exons forms the isoform <inline-formula><mml:math id="inf292"><mml:msub><mml:mi>j</mml:mi><mml:mi>B</mml:mi></mml:msub></mml:math></inline-formula>. The production of mRNA molecules from <inline-formula><mml:math id="inf293"><mml:msub><mml:mi>j</mml:mi><mml:mi>A</mml:mi></mml:msub></mml:math></inline-formula> in a single cell <inline-formula><mml:math id="inf294"><mml:mrow><mml:mi>i</mml:mi><mml:mo>∈</mml:mo><mml:mi>N</mml:mi></mml:mrow></mml:math></inline-formula> is determined by the total expression of <inline-formula><mml:math id="inf295"><mml:mi>g</mml:mi></mml:math></inline-formula>, and by the action of the splicing machinery of <inline-formula><mml:math id="inf296"><mml:mi>i</mml:mi></mml:math></inline-formula>.</p><sec id="s4-5-1"><title>Biological process</title><sec id="s4-5-1-1"><title>Splicing from pre-mRNA transcripts in individual cells</title><p>For each alternatively spliced gene <inline-formula><mml:math id="inf297"><mml:mi>g</mml:mi></mml:math></inline-formula> in a cell <inline-formula><mml:math id="inf298"><mml:mi>i</mml:mi></mml:math></inline-formula>, we simulate the expression of <inline-formula><mml:math id="inf299"><mml:mi>g</mml:mi></mml:math></inline-formula> and the splicing of its cassette exon.<disp-formula id="equ19"><mml:math id="m19"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mtable columnalign="left left" columnspacing="1em" rowspacing="4pt"><mml:mtr><mml:mtd><mml:mstyle displaystyle="true" scriptlevel="0"><mml:msub><mml:mi>X</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>g</mml:mi></mml:mrow></mml:msub></mml:mstyle></mml:mtd><mml:mtd><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mi mathvariant="normal">e</mml:mi><mml:mi mathvariant="normal">x</mml:mi><mml:mi mathvariant="normal">p</mml:mi><mml:mi mathvariant="normal">r</mml:mi><mml:mi mathvariant="normal">e</mml:mi><mml:mi mathvariant="normal">s</mml:mi><mml:mi mathvariant="normal">s</mml:mi><mml:mi mathvariant="normal">i</mml:mi><mml:mi mathvariant="normal">o</mml:mi><mml:mi mathvariant="normal">n</mml:mi><mml:mtext> </mml:mtext><mml:mi mathvariant="normal">o</mml:mi><mml:mi mathvariant="normal">f</mml:mi><mml:mtext> </mml:mtext><mml:mi mathvariant="normal">g</mml:mi><mml:mi mathvariant="normal">e</mml:mi><mml:mi mathvariant="normal">n</mml:mi><mml:mi mathvariant="normal">e</mml:mi></mml:mrow><mml:mtext> </mml:mtext><mml:mi>g</mml:mi><mml:mtext> </mml:mtext><mml:mrow><mml:mi mathvariant="normal">i</mml:mi><mml:mi mathvariant="normal">n</mml:mi></mml:mrow><mml:mtext> </mml:mtext><mml:mi>n</mml:mi><mml:mo>.</mml:mo></mml:mstyle></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mstyle displaystyle="true" scriptlevel="0"><mml:msub><mml:mi>α</mml:mi><mml:mrow><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>β</mml:mi><mml:mrow><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mspace width="thinmathspace"/><mml:mspace width="thinmathspace"/></mml:mstyle></mml:mtd><mml:mtd><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mi mathvariant="normal">s</mml:mi><mml:mi mathvariant="normal">p</mml:mi><mml:mi mathvariant="normal">l</mml:mi><mml:mi mathvariant="normal">i</mml:mi><mml:mi mathvariant="normal">c</mml:mi><mml:mi mathvariant="normal">i</mml:mi><mml:mi mathvariant="normal">n</mml:mi><mml:mi mathvariant="normal">g</mml:mi><mml:mtext> </mml:mtext><mml:mi mathvariant="normal">r</mml:mi><mml:mi mathvariant="normal">a</mml:mi><mml:mi mathvariant="normal">t</mml:mi><mml:mi mathvariant="normal">e</mml:mi><mml:mtext> </mml:mtext><mml:mi mathvariant="normal">d</mml:mi><mml:mi mathvariant="normal">i</mml:mi><mml:mi mathvariant="normal">s</mml:mi><mml:mi mathvariant="normal">t</mml:mi><mml:mi mathvariant="normal">r</mml:mi><mml:mi mathvariant="normal">i</mml:mi><mml:mi mathvariant="normal">b</mml:mi><mml:mi mathvariant="normal">u</mml:mi><mml:mi mathvariant="normal">t</mml:mi><mml:mi mathvariant="normal">i</mml:mi><mml:mi mathvariant="normal">o</mml:mi><mml:mi mathvariant="normal">n</mml:mi><mml:mtext> </mml:mtext><mml:mi mathvariant="normal">p</mml:mi><mml:mi mathvariant="normal">a</mml:mi><mml:mi mathvariant="normal">r</mml:mi><mml:mi mathvariant="normal">a</mml:mi><mml:mi mathvariant="normal">m</mml:mi><mml:mi mathvariant="normal">e</mml:mi><mml:mi mathvariant="normal">t</mml:mi><mml:mi mathvariant="normal">e</mml:mi><mml:mi mathvariant="normal">r</mml:mi><mml:mi mathvariant="normal">s</mml:mi><mml:mo>.</mml:mo></mml:mrow></mml:mstyle></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mstyle displaystyle="true" scriptlevel="0"><mml:msub><mml:mi mathvariant="normal">Ψ</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:mstyle></mml:mtd><mml:mtd><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mo>∼</mml:mo><mml:mtext>Beta</mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>α</mml:mi><mml:mrow><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>β</mml:mi><mml:mrow><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mstyle></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mstyle displaystyle="true" scriptlevel="0"><mml:msub><mml:mi>X</mml:mi><mml:mrow><mml:msub><mml:mi>A</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub></mml:mstyle></mml:mtd><mml:mtd><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mo>∼</mml:mo><mml:mtext>Binomial</mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>g</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi mathvariant="normal">Ψ</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mstyle></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mstyle displaystyle="true" scriptlevel="0"><mml:msub><mml:mi>X</mml:mi><mml:mrow><mml:msub><mml:mi>B</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub></mml:mstyle></mml:mtd><mml:mtd><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mo>=</mml:mo><mml:mtext> </mml:mtext><mml:msub><mml:mi>X</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>g</mml:mi></mml:mrow></mml:msub><mml:mo>−</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mrow><mml:msub><mml:mi>A</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub></mml:mstyle></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mstyle displaystyle="true" scriptlevel="0"><mml:msub><mml:mi mathvariant="normal">Ψ</mml:mi><mml:mrow><mml:msub><mml:mi>T</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub></mml:mstyle></mml:mtd><mml:mtd><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mo>=</mml:mo><mml:mtext> </mml:mtext><mml:msub><mml:mi>X</mml:mi><mml:mrow><mml:msub><mml:mi>A</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub><mml:mrow><mml:mo>/</mml:mo></mml:mrow><mml:msub><mml:mi>X</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>g</mml:mi></mml:mrow></mml:msub></mml:mstyle></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:mstyle></mml:math></disp-formula></p><p><inline-formula><mml:math id="inf300"><mml:msub><mml:mi>X</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>⁢</mml:mo><mml:mi>g</mml:mi></mml:mrow></mml:msub></mml:math></inline-formula> represents the total number of pre-mRNA transcribed from each gene across all cells. We simulate the total counts using SymSim, an in-silico approach for simulation of single cell gene expression by accounting for the biological sources of variation (<xref ref-type="bibr" rid="bib40">Zhang et al., 2019</xref>). <inline-formula><mml:math id="inf301"><mml:msub><mml:mi mathvariant="normal">Ψ</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>⁢</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:math></inline-formula> referred to as the underlying splicing rate, is the probability of splicing in the cassette exon <inline-formula><mml:math id="inf302"><mml:mi>j</mml:mi></mml:math></inline-formula> of gene <inline-formula><mml:math id="inf303"><mml:mi>g</mml:mi></mml:math></inline-formula> in cell <inline-formula><mml:math id="inf304"><mml:mi>i</mml:mi></mml:math></inline-formula>. Notice that in this simulation, each gene <inline-formula><mml:math id="inf305"><mml:mi>g</mml:mi></mml:math></inline-formula> only has one cassette exon <inline-formula><mml:math id="inf306"><mml:mi>j</mml:mi></mml:math></inline-formula>. In a biological context, <inline-formula><mml:math id="inf307"><mml:msub><mml:mi mathvariant="normal">Ψ</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>⁢</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:math></inline-formula> would be determined by intrinsic attributes of the cassette exon inherent of <inline-formula><mml:math id="inf308"><mml:mi>g</mml:mi></mml:math></inline-formula> (e.g. sequence, secondary structure, binding sites), and by the profile of splicing factors expressed in <inline-formula><mml:math id="inf309"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:mstyle></mml:math></inline-formula>. <inline-formula><mml:math id="inf310"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msub><mml:mi>X</mml:mi><mml:mrow><mml:msub><mml:mi>A</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub></mml:mrow></mml:mstyle></mml:math></inline-formula> and <inline-formula><mml:math id="inf311"><mml:msub><mml:mi>X</mml:mi><mml:msub><mml:mi>B</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>⁢</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:msub></mml:math></inline-formula> are respectively the counts of mRNA molecules from isoforms <inline-formula><mml:math id="inf312"><mml:msub><mml:mi>g</mml:mi><mml:mi>A</mml:mi></mml:msub></mml:math></inline-formula> and <inline-formula><mml:math id="inf313"><mml:msub><mml:mi>g</mml:mi><mml:mi>B</mml:mi></mml:msub></mml:math></inline-formula> in <inline-formula><mml:math id="inf314"><mml:mi>i</mml:mi></mml:math></inline-formula>. Notice that <inline-formula><mml:math id="inf315"><mml:msub><mml:mi>X</mml:mi><mml:msub><mml:mi>A</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>⁢</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:msub></mml:math></inline-formula> is a random binomial sample from the total number of expressed pre-mRNA molecules of <inline-formula><mml:math id="inf316"><mml:mi>g</mml:mi></mml:math></inline-formula> in <inline-formula><mml:math id="inf317"><mml:mi>i</mml:mi></mml:math></inline-formula> with a probability <inline-formula><mml:math id="inf318"><mml:msub><mml:mi mathvariant="normal">Ψ</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>⁢</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:math></inline-formula>, as it has been modeled before (<xref ref-type="bibr" rid="bib34">Waks et al., 2011</xref>; <xref ref-type="bibr" rid="bib38">Xiong et al., 2011</xref>; <xref ref-type="bibr" rid="bib9">Faigenbloom et al., 2015</xref>; <xref ref-type="bibr" rid="bib28">Shen et al., 2014</xref>). <inline-formula><mml:math id="inf319"><mml:msub><mml:mi mathvariant="normal">Ψ</mml:mi><mml:msub><mml:mi>T</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>⁢</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:msub></mml:math></inline-formula> is the true isoform ratio that include cassette exon <inline-formula><mml:math id="inf320"><mml:mi>j</mml:mi></mml:math></inline-formula> in cell <inline-formula><mml:math id="inf321"><mml:mi>i</mml:mi></mml:math></inline-formula>, obtained as the proportion of molecules of gene <inline-formula><mml:math id="inf322"><mml:mi>g</mml:mi></mml:math></inline-formula> that include the cassette exon <inline-formula><mml:math id="inf323"><mml:mi>j</mml:mi></mml:math></inline-formula>.</p><p>The distribution of <inline-formula><mml:math id="inf324"><mml:msub><mml:mi mathvariant="normal">Ψ</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>⁢</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:math></inline-formula> across all cells <inline-formula><mml:math id="inf325"><mml:mrow><mml:mi>i</mml:mi><mml:mo>∈</mml:mo><mml:mi>N</mml:mi></mml:mrow></mml:math></inline-formula> is modeled as a Beta distribution, which has been used in previous studies of single cell splicing (<xref ref-type="bibr" rid="bib2">Barash et al., 2010</xref>; <xref ref-type="bibr" rid="bib29">Song et al., 2017</xref>; <xref ref-type="bibr" rid="bib20">Linker et al., 2019</xref>). In this model, the distribution is determined by the parameters <inline-formula><mml:math id="inf326"><mml:mrow><mml:mrow><mml:msub><mml:mi>α</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>β</mml:mi><mml:mi>j</mml:mi></mml:msub></mml:mrow><mml:mo>∈</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mn>0</mml:mn><mml:mo>,</mml:mo><mml:mi mathvariant="normal">∞</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula>. The values of these parameter determine the distribution of <inline-formula><mml:math id="inf327"><mml:msub><mml:mi mathvariant="normal">Ψ</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>⁢</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:math></inline-formula> across all cells as follows:</p><list list-type="bullet"><list-item><p>Unimodal with intermediate mode if <inline-formula><mml:math id="inf328"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msub><mml:mi>α</mml:mi><mml:mrow><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>β</mml:mi><mml:mrow><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mtext> </mml:mtext><mml:mo>&gt;</mml:mo><mml:mtext> </mml:mtext><mml:mn>1</mml:mn></mml:mrow></mml:mstyle></mml:math></inline-formula>.</p></list-item><list-item><p>Unimodal with mode 1 if <inline-formula><mml:math id="inf329"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mn>0</mml:mn><mml:mtext> </mml:mtext><mml:mo>&lt;</mml:mo><mml:mtext> </mml:mtext><mml:msub><mml:mi>α</mml:mi><mml:mrow><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mtext> </mml:mtext><mml:mo>&lt;</mml:mo><mml:mtext> </mml:mtext><mml:mn>1</mml:mn><mml:mo>≤</mml:mo><mml:mtext> </mml:mtext><mml:msub><mml:mi>β</mml:mi><mml:mrow><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mstyle></mml:math></inline-formula>.</p></list-item><list-item><p>Unimodal with mode 0 if <inline-formula><mml:math id="inf330"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mn>0</mml:mn><mml:mtext> </mml:mtext><mml:mo>&lt;</mml:mo><mml:mtext> </mml:mtext><mml:msub><mml:mi>β</mml:mi><mml:mrow><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mtext> </mml:mtext><mml:mo>&lt;</mml:mo><mml:mtext> </mml:mtext><mml:mn>1</mml:mn><mml:mo>≤</mml:mo><mml:mtext> </mml:mtext><mml:msub><mml:mi>α</mml:mi><mml:mrow><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mstyle></mml:math></inline-formula>.</p></list-item><list-item><p>Bimodal with modes 0 and 1 if <inline-formula><mml:math id="inf331"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mn>0</mml:mn><mml:mtext> </mml:mtext><mml:mo>&lt;</mml:mo><mml:mtext> </mml:mtext><mml:msub><mml:mi>α</mml:mi><mml:mrow><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>β</mml:mi><mml:mrow><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:mtext> </mml:mtext><mml:mo>&lt;</mml:mo><mml:mtext> </mml:mtext><mml:mn>1</mml:mn></mml:mrow></mml:mstyle></mml:math></inline-formula>.</p></list-item><list-item><p>Uniform if <inline-formula><mml:math id="inf332"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msub><mml:mi>α</mml:mi><mml:mrow><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mtext> </mml:mtext><mml:mo>=</mml:mo><mml:mtext> </mml:mtext><mml:msub><mml:mi>β</mml:mi><mml:mrow><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mtext> </mml:mtext><mml:mo>=</mml:mo><mml:mtext> </mml:mtext><mml:mn>1</mml:mn></mml:mrow></mml:mstyle></mml:math></inline-formula>.</p></list-item></list><p>Notice that <inline-formula><mml:math id="inf333"><mml:mrow><mml:mfrac><mml:msub><mml:mi>α</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mrow><mml:msub><mml:mi>α</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>+</mml:mo><mml:msub><mml:mi>β</mml:mi><mml:mi>j</mml:mi></mml:msub></mml:mrow></mml:mfrac><mml:mo>=</mml:mo><mml:mrow><mml:mi>μ</mml:mi><mml:mo>⁢</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi mathvariant="normal">Ψ</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>⁢</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula>. By controlling the <inline-formula><mml:math id="inf334"><mml:mrow><mml:msub><mml:mi>α</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>β</mml:mi><mml:mi>j</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> parameters we can compare the biological underlying distribution of the exon splicing rate with the observed distribution of <inline-formula><mml:math id="inf335"><mml:mi mathvariant="normal">Ψ</mml:mi></mml:math></inline-formula> inferred from single cell RNA-seq data.</p><p>To compare the results of our simulations under the binary-bimodal (alternative isoforms are present in the population, but rarely in the same cell; <xref ref-type="fig" rid="fig3">Figure 3a,c,d</xref>) and non-binary unimodal (both isoforms regularly appear in the same cell; <xref ref-type="fig" rid="fig3">Figure 3b,e,f</xref>) models of splicing, we simulated 500 alternatively spliced exons for each model. For the first model, we simulated the underlying splicing distribution of each exon as bimodal Beta distributions. For the second model, we simulated the underlying splicing distributions of each exon with unimodal Beta distributions with intermediate mode. For each cassette exon <inline-formula><mml:math id="inf336"><mml:mi>j</mml:mi></mml:math></inline-formula> in cell <inline-formula><mml:math id="inf337"><mml:mi>i</mml:mi></mml:math></inline-formula>:</p><list list-type="bullet"><list-item><p>Binary-bimodal splicing:</p></list-item></list><p><disp-formula id="equ20"><mml:math id="m20"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mtable columnalign="left left" columnspacing="1em" rowspacing="4pt"><mml:mtr><mml:mtd><mml:mstyle displaystyle="true" scriptlevel="0"><mml:msub><mml:mi mathvariant="normal">Ψ</mml:mi><mml:mrow><mml:msub><mml:mi>B</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub></mml:mstyle></mml:mtd><mml:mtd><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mo>∼</mml:mo><mml:mtext> Beta</mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>α</mml:mi><mml:mrow><mml:msub><mml:mi>B</mml:mi><mml:mrow><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>β</mml:mi><mml:mrow><mml:msub><mml:mi>B</mml:mi><mml:mrow><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mstyle></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mstyle displaystyle="true" scriptlevel="0"><mml:msub><mml:mi>α</mml:mi><mml:mrow><mml:msub><mml:mi>B</mml:mi><mml:mrow><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>β</mml:mi><mml:mrow><mml:msub><mml:mi>B</mml:mi><mml:mrow><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub></mml:mstyle></mml:mtd><mml:mtd><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mo>∼</mml:mo><mml:mtext> </mml:mtext><mml:mfrac><mml:mn>1</mml:mn><mml:mrow><mml:mtext>Uniform</mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mn>30</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mfrac></mml:mstyle></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:mstyle></mml:math></disp-formula></p><list list-type="bullet"><list-item><p>Non-binary unimodal splicing:</p></list-item></list><p><disp-formula id="equ21"><mml:math id="m21"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mtable columnalign="left left" columnspacing="1em" rowspacing="4pt"><mml:mtr><mml:mtd><mml:mstyle displaystyle="true" scriptlevel="0"><mml:msub><mml:mi mathvariant="normal">Ψ</mml:mi><mml:mrow><mml:msub><mml:mi>U</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub></mml:mstyle></mml:mtd><mml:mtd><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mtext> </mml:mtext><mml:mo>∼</mml:mo><mml:mtext>Beta</mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>α</mml:mi><mml:mrow><mml:msub><mml:mi>U</mml:mi><mml:mrow><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>β</mml:mi><mml:mrow><mml:msub><mml:mi>U</mml:mi><mml:mrow><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mstyle></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mstyle displaystyle="true" scriptlevel="0"><mml:msub><mml:mi>α</mml:mi><mml:mrow><mml:msub><mml:mi>U</mml:mi><mml:mrow><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>β</mml:mi><mml:mrow><mml:msub><mml:mi>U</mml:mi><mml:mrow><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub></mml:mstyle></mml:mtd><mml:mtd><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mtext> </mml:mtext><mml:mo>∼</mml:mo><mml:mfrac><mml:mn>1</mml:mn><mml:mrow><mml:mtext>Uniform</mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mn>30</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mfrac></mml:mstyle></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:mstyle></mml:math></disp-formula></p><p>To simulate a realistic scenario in both models, we simulated 500 additional exons that are consistently included, and 500 that are consistently excluded. For the consistently included exons, we sampled the parameters for Unimodal Beta distributions with mode 1 as<disp-formula id="equ22"><mml:math id="m22"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msub><mml:mi>α</mml:mi><mml:mrow><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mtext> </mml:mtext><mml:mo>∼</mml:mo><mml:mtext>Uniform</mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mtext> </mml:mtext><mml:mn>30</mml:mn><mml:mo stretchy="false">)</mml:mo><mml:mo>;</mml:mo><mml:mtext> </mml:mtext><mml:msub><mml:mi>β</mml:mi><mml:mrow><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mtext> </mml:mtext><mml:mo>∼</mml:mo><mml:mtext> </mml:mtext><mml:mfrac><mml:mn>1</mml:mn><mml:mrow><mml:mtext>Uniform</mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mtext> </mml:mtext><mml:mn>5</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mfrac></mml:mrow></mml:mstyle></mml:math></disp-formula></p><p>For the consistently excluded exons, we sampled the parameters for Unimodal Beta distributions with mode 0 as<disp-formula id="equ23"><mml:math id="m23"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msub><mml:mi>α</mml:mi><mml:mrow><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mtext> </mml:mtext><mml:mo>∼</mml:mo><mml:mtext> </mml:mtext><mml:mfrac><mml:mn>1</mml:mn><mml:mrow><mml:mtext>Uniform</mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mtext> </mml:mtext><mml:mn>5</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mfrac><mml:mo>;</mml:mo><mml:mtext> </mml:mtext><mml:msub><mml:mi>β</mml:mi><mml:mrow><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mtext> </mml:mtext><mml:mo>∼</mml:mo><mml:mtext> Uniform</mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mtext> </mml:mtext><mml:mn>30</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mstyle></mml:math></disp-formula></p></sec></sec><sec id="s4-5-2"><title>Technical process</title><sec id="s4-5-2-1"><title>mRNA capture into cDNA</title><p>After simulating the production of mRNAs of distinct isoforms in single cells, we simulate the process of capture and sequencing of mRNA molecules from <inline-formula><mml:math id="inf338"><mml:msub><mml:mi>X</mml:mi><mml:msub><mml:mi>A</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>⁢</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:msub></mml:math></inline-formula> and <inline-formula><mml:math id="inf339"><mml:msub><mml:mi>X</mml:mi><mml:msub><mml:mi>B</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>⁢</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:msub></mml:math></inline-formula>.<disp-formula id="equ24"><mml:math id="m24"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mtable columnalign="left left" columnspacing="1em" rowspacing="4pt"><mml:mtr><mml:mtd><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mi>c</mml:mi></mml:mstyle></mml:mtd><mml:mtd><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mi mathvariant="normal">e</mml:mi><mml:mi mathvariant="normal">x</mml:mi><mml:mi mathvariant="normal">p</mml:mi><mml:mi mathvariant="normal">e</mml:mi><mml:mi mathvariant="normal">c</mml:mi><mml:mi mathvariant="normal">t</mml:mi><mml:mi mathvariant="normal">e</mml:mi><mml:mi mathvariant="normal">d</mml:mi><mml:mtext> </mml:mtext><mml:mi mathvariant="normal">c</mml:mi><mml:mi mathvariant="normal">a</mml:mi><mml:mi mathvariant="normal">p</mml:mi><mml:mi mathvariant="normal">t</mml:mi><mml:mi mathvariant="normal">u</mml:mi><mml:mi mathvariant="normal">r</mml:mi><mml:mi mathvariant="normal">e</mml:mi><mml:mtext> </mml:mtext><mml:mi mathvariant="normal">e</mml:mi><mml:mi mathvariant="normal">f</mml:mi><mml:mi mathvariant="normal">f</mml:mi><mml:mi mathvariant="normal">i</mml:mi><mml:mi mathvariant="normal">c</mml:mi><mml:mi mathvariant="normal">i</mml:mi><mml:mi mathvariant="normal">e</mml:mi><mml:mi mathvariant="normal">n</mml:mi><mml:mi mathvariant="normal">c</mml:mi><mml:mi mathvariant="normal">y</mml:mi></mml:mrow></mml:mstyle></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mstyle displaystyle="true" scriptlevel="0"><mml:msub><mml:mi>c</mml:mi><mml:mrow><mml:msub><mml:mi>I</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mi>g</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub></mml:mstyle></mml:mtd><mml:mtd><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mi mathvariant="normal">d</mml:mi><mml:mi mathvariant="normal">r</mml:mi><mml:mi mathvariant="normal">a</mml:mi><mml:mi mathvariant="normal">w</mml:mi><mml:mi mathvariant="normal">n</mml:mi><mml:mtext> </mml:mtext><mml:mi mathvariant="normal">f</mml:mi><mml:mi mathvariant="normal">r</mml:mi><mml:mi mathvariant="normal">o</mml:mi><mml:mi mathvariant="normal">m</mml:mi><mml:mtext> </mml:mtext><mml:mi mathvariant="normal">t</mml:mi><mml:mi mathvariant="normal">r</mml:mi><mml:mi mathvariant="normal">u</mml:mi><mml:mi mathvariant="normal">n</mml:mi><mml:mi mathvariant="normal">c</mml:mi><mml:mi mathvariant="normal">a</mml:mi><mml:mi mathvariant="normal">t</mml:mi><mml:mi mathvariant="normal">e</mml:mi><mml:mi mathvariant="normal">d</mml:mi><mml:mtext> </mml:mtext><mml:mi mathvariant="normal">n</mml:mi><mml:mi mathvariant="normal">o</mml:mi><mml:mi mathvariant="normal">r</mml:mi><mml:mi mathvariant="normal">m</mml:mi><mml:mi mathvariant="normal">a</mml:mi><mml:mi mathvariant="normal">l</mml:mi><mml:mtext> </mml:mtext><mml:mi mathvariant="normal">w</mml:mi><mml:mi mathvariant="normal">i</mml:mi><mml:mi mathvariant="normal">t</mml:mi><mml:mi mathvariant="normal">h</mml:mi><mml:mtext> </mml:mtext><mml:mi mathvariant="normal">m</mml:mi><mml:mi mathvariant="normal">e</mml:mi><mml:mi mathvariant="normal">a</mml:mi><mml:mi mathvariant="normal">n</mml:mi></mml:mrow><mml:mtext> </mml:mtext><mml:mrow><mml:mi>c</mml:mi></mml:mrow><mml:mtext> </mml:mtext><mml:mrow><mml:mi mathvariant="normal">a</mml:mi><mml:mi mathvariant="normal">n</mml:mi><mml:mi mathvariant="normal">d</mml:mi><mml:mtext> </mml:mtext><mml:mi mathvariant="normal">v</mml:mi><mml:mi mathvariant="normal">a</mml:mi><mml:mi mathvariant="normal">r</mml:mi><mml:mi mathvariant="normal">i</mml:mi><mml:mi mathvariant="normal">a</mml:mi><mml:mi mathvariant="normal">n</mml:mi><mml:mi mathvariant="normal">c</mml:mi><mml:mi mathvariant="normal">e</mml:mi><mml:mtext> </mml:mtext><mml:mn>0.002</mml:mn></mml:mrow></mml:mstyle></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mstyle displaystyle="true" scriptlevel="0"><mml:msub><mml:mi>C</mml:mi><mml:mrow><mml:msub><mml:mi>I</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mi>g</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub></mml:mstyle></mml:mtd><mml:mtd><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mo>∼</mml:mo><mml:mtext> Binomial </mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mrow><mml:msub><mml:mi>I</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mi>g</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>c</mml:mi><mml:mrow><mml:msub><mml:mi>I</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mi>g</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mstyle></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:mstyle></mml:math></disp-formula></p><p>The process of mRNA capture is simulated using SymSim. <inline-formula><mml:math id="inf340"><mml:msub><mml:mi>C</mml:mi><mml:msub><mml:mi>I</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mo>⁢</mml:mo><mml:mi>g</mml:mi></mml:mrow></mml:msub></mml:msub></mml:math></inline-formula> is the number of mRNA molecules of isoform <inline-formula><mml:math id="inf341"><mml:mrow><mml:mi>I</mml:mi><mml:mo>∈</mml:mo><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:msub><mml:mi>g</mml:mi><mml:mi>A</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>g</mml:mi><mml:mi>B</mml:mi></mml:msub><mml:mo stretchy="false">}</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula> for gene <inline-formula><mml:math id="inf342"><mml:mi>g</mml:mi></mml:math></inline-formula> on cell <inline-formula><mml:math id="inf343"><mml:mi>n</mml:mi></mml:math></inline-formula>. This number is sampled from the total number of molecules for isoform that are present in the cell. <inline-formula><mml:math id="inf344"><mml:mi>c</mml:mi></mml:math></inline-formula> is a parameter that determines the expected capture efficiency. <inline-formula><mml:math id="inf345"><mml:msub><mml:mi>c</mml:mi><mml:msub><mml:mi>I</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mo>⁢</mml:mo><mml:mi>g</mml:mi></mml:mrow></mml:msub></mml:msub></mml:math></inline-formula> is the specific probability of capture of isoform <inline-formula><mml:math id="inf346"><mml:mi>I</mml:mi></mml:math></inline-formula> of gene <inline-formula><mml:math id="inf347"><mml:mi>g</mml:mi></mml:math></inline-formula> in cell <inline-formula><mml:math id="inf348"><mml:mi>n</mml:mi></mml:math></inline-formula>, which is drawn from a truncated normal distribution with mean <inline-formula><mml:math id="inf349"><mml:mi>c</mml:mi></mml:math></inline-formula>. The variance of the truncated normal distribution is set at 0.002, which is the default variance in SymSim. The distribution is truncated at 0 and at 1.</p></sec></sec><sec id="s4-5-3"><title>RNA sequencing</title><p>Sequencing is also simulated using SymSim’s approach, which includes a length-dependent PCR amplification bias modeled from experimental data.<disp-formula id="equ25"><mml:math id="m25"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mtable columnalign="left left" columnspacing="1em" rowspacing="4pt"><mml:mtr><mml:mtd><mml:mstyle displaystyle="true" scriptlevel="0"><mml:msub><mml:mi>l</mml:mi><mml:mrow><mml:msub><mml:mi>g</mml:mi><mml:mrow><mml:mi>B</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub></mml:mstyle></mml:mtd><mml:mtd><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mi mathvariant="normal">s</mml:mi><mml:mi mathvariant="normal">a</mml:mi><mml:mi mathvariant="normal">m</mml:mi><mml:mi mathvariant="normal">p</mml:mi><mml:mi mathvariant="normal">l</mml:mi><mml:mi mathvariant="normal">e</mml:mi><mml:mi mathvariant="normal">d</mml:mi><mml:mtext> </mml:mtext><mml:mi mathvariant="normal">f</mml:mi><mml:mi mathvariant="normal">r</mml:mi><mml:mi mathvariant="normal">o</mml:mi><mml:mi mathvariant="normal">m</mml:mi><mml:mtext> </mml:mtext><mml:mi mathvariant="normal">S</mml:mi><mml:mi mathvariant="normal">y</mml:mi><mml:mi mathvariant="normal">m</mml:mi><mml:mi mathvariant="normal">S</mml:mi><mml:mi mathvariant="normal">i</mml:mi><mml:msup><mml:mi mathvariant="normal">m</mml:mi><mml:mo>′</mml:mo></mml:msup><mml:mi mathvariant="normal">s</mml:mi><mml:mtext> </mml:mtext><mml:mi mathvariant="normal">d</mml:mi><mml:mi mathvariant="normal">a</mml:mi><mml:mi mathvariant="normal">t</mml:mi><mml:mi mathvariant="normal">a</mml:mi><mml:mi mathvariant="normal">b</mml:mi><mml:mi mathvariant="normal">a</mml:mi><mml:mi mathvariant="normal">s</mml:mi><mml:mi mathvariant="normal">e</mml:mi></mml:mrow></mml:mstyle></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mstyle displaystyle="true" scriptlevel="0"><mml:msub><mml:mi>l</mml:mi><mml:mrow><mml:msub><mml:mi>e</mml:mi><mml:mrow><mml:mi>A</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub></mml:mstyle></mml:mtd><mml:mtd><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mi mathvariant="normal">s</mml:mi><mml:mi mathvariant="normal">a</mml:mi><mml:mi mathvariant="normal">m</mml:mi><mml:mi mathvariant="normal">p</mml:mi><mml:mi mathvariant="normal">l</mml:mi><mml:mi mathvariant="normal">e</mml:mi><mml:mi mathvariant="normal">d</mml:mi><mml:mtext> </mml:mtext><mml:mi mathvariant="normal">f</mml:mi><mml:mi mathvariant="normal">r</mml:mi><mml:mi mathvariant="normal">o</mml:mi><mml:mi mathvariant="normal">m</mml:mi><mml:mtext> </mml:mtext><mml:mi mathvariant="normal">e</mml:mi><mml:mi mathvariant="normal">x</mml:mi><mml:mi mathvariant="normal">o</mml:mi><mml:mi mathvariant="normal">n</mml:mi><mml:mtext> </mml:mtext><mml:mi mathvariant="normal">d</mml:mi><mml:mi mathvariant="normal">a</mml:mi><mml:mi mathvariant="normal">t</mml:mi><mml:mi mathvariant="normal">a</mml:mi><mml:mi mathvariant="normal">b</mml:mi><mml:mi mathvariant="normal">a</mml:mi><mml:mi mathvariant="normal">s</mml:mi><mml:mi mathvariant="normal">e</mml:mi></mml:mrow></mml:mstyle></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mstyle displaystyle="true" scriptlevel="0"><mml:msub><mml:mi>l</mml:mi><mml:mrow><mml:msub><mml:mi>g</mml:mi><mml:mrow><mml:mi>A</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub></mml:mstyle></mml:mtd><mml:mtd><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mo>=</mml:mo><mml:mtext> </mml:mtext><mml:msub><mml:mi>l</mml:mi><mml:mrow><mml:msub><mml:mi>g</mml:mi><mml:mrow><mml:mi>B</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub><mml:mtext> </mml:mtext><mml:mo>+</mml:mo><mml:mtext> </mml:mtext><mml:msub><mml:mi>l</mml:mi><mml:mrow><mml:msub><mml:mi>e</mml:mi><mml:mrow><mml:mi>A</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub></mml:mstyle></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mstyle displaystyle="true" scriptlevel="0"><mml:msub><mml:mi>R</mml:mi><mml:mrow><mml:msub><mml:mi>I</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mi>g</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub></mml:mstyle></mml:mtd><mml:mtd><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mo>=</mml:mo><mml:mtext> True2ObservedCounts</mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>C</mml:mi><mml:mrow><mml:msub><mml:mi>I</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mi>g</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>l</mml:mi><mml:mrow><mml:msub><mml:mi>g</mml:mi><mml:mrow><mml:mi>I</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mstyle></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:mstyle></mml:math></disp-formula><inline-formula><mml:math id="inf350"><mml:msub><mml:mi>l</mml:mi><mml:msub><mml:mi>g</mml:mi><mml:mi>B</mml:mi></mml:msub></mml:msub></mml:math></inline-formula> is the length of the mRNA transcript of isoform <inline-formula><mml:math id="inf351"><mml:msub><mml:mi>g</mml:mi><mml:mi>B</mml:mi></mml:msub></mml:math></inline-formula> of gene <inline-formula><mml:math id="inf352"><mml:mi>g</mml:mi></mml:math></inline-formula>, which represents the isoform that skips the alternative exon. <inline-formula><mml:math id="inf353"><mml:msub><mml:mi>l</mml:mi><mml:msub><mml:mi>g</mml:mi><mml:mi>A</mml:mi></mml:msub></mml:msub></mml:math></inline-formula> is the length of the mRNA transcript of the isoform <inline-formula><mml:math id="inf354"><mml:msub><mml:mi>g</mml:mi><mml:mi>A</mml:mi></mml:msub></mml:math></inline-formula>, which includes the exon. We assigned the lengths to the excluded isoform by drawing without replacement from SymSim’s transcript length database. <inline-formula><mml:math id="inf355"><mml:msub><mml:mi>l</mml:mi><mml:msub><mml:mi>e</mml:mi><mml:mi>A</mml:mi></mml:msub></mml:msub></mml:math></inline-formula> is the length of the alternative exon included in isoform <inline-formula><mml:math id="inf356"><mml:msub><mml:mi>g</mml:mi><mml:mi>A</mml:mi></mml:msub></mml:math></inline-formula>; it is sampled without replacement from a database of skipped exon lengths from the human genome. <inline-formula><mml:math id="inf357"><mml:msub><mml:mi>R</mml:mi><mml:msub><mml:mi>I</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mo>⁢</mml:mo><mml:mi>g</mml:mi></mml:mrow></mml:msub></mml:msub></mml:math></inline-formula> is the total number of observed reads from isoform <inline-formula><mml:math id="inf358"><mml:mi>I</mml:mi></mml:math></inline-formula> of gene <inline-formula><mml:math id="inf359"><mml:mi>g</mml:mi></mml:math></inline-formula> in cell <inline-formula><mml:math id="inf360"><mml:mi>n</mml:mi></mml:math></inline-formula> obtained from single cell RNA sequencing. These are obtained using the True2ObservedCounts function from SymSim with the modification previously described.</p></sec><sec id="s4-5-4"><title>Splice junction coverage and observed <inline-formula><mml:math id="inf361"><mml:mi mathvariant="normal">Ψ</mml:mi></mml:math></inline-formula> calculation</title><p>We also simulate the down-sampling from observing only reads that overlap the splice junctions that are informative about the splicing of the cassette exon.<disp-formula id="equ26"><mml:math id="m26"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mtable columnalign="left left" columnspacing="1em" rowspacing="4pt"><mml:mtr><mml:mtd><mml:mstyle displaystyle="true" scriptlevel="0"><mml:msub><mml:mi>l</mml:mi><mml:mrow><mml:mi>r</mml:mi></mml:mrow></mml:msub></mml:mstyle></mml:mtd><mml:mtd><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mo>=</mml:mo><mml:mtext> </mml:mtext><mml:mrow><mml:mi mathvariant="normal">r</mml:mi><mml:mi mathvariant="normal">e</mml:mi><mml:mi mathvariant="normal">a</mml:mi><mml:mi mathvariant="normal">d</mml:mi><mml:mtext> </mml:mtext><mml:mi mathvariant="normal">l</mml:mi><mml:mi mathvariant="normal">e</mml:mi><mml:mi mathvariant="normal">n</mml:mi><mml:mi mathvariant="normal">g</mml:mi><mml:mi mathvariant="normal">t</mml:mi><mml:mi mathvariant="normal">h</mml:mi><mml:mtext> </mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="normal">c</mml:mi><mml:mi mathvariant="normal">o</mml:mi><mml:mi mathvariant="normal">n</mml:mi><mml:mi mathvariant="normal">s</mml:mi><mml:mi mathvariant="normal">t</mml:mi><mml:mi mathvariant="normal">a</mml:mi><mml:mi mathvariant="normal">n</mml:mi><mml:mi mathvariant="normal">t</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mstyle></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mstyle displaystyle="true" scriptlevel="0"><mml:msub><mml:mi>j</mml:mi><mml:mrow><mml:msub><mml:mi>A</mml:mi><mml:mrow><mml:mi>g</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub></mml:mstyle></mml:mtd><mml:mtd><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mo>=</mml:mo><mml:mtext> </mml:mtext><mml:mfrac><mml:mrow><mml:mn>4</mml:mn><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>l</mml:mi><mml:mrow><mml:mi>r</mml:mi></mml:mrow></mml:msub><mml:mo>−</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:msub><mml:mi>l</mml:mi><mml:mrow><mml:msub><mml:mi>A</mml:mi><mml:mrow><mml:mi>g</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub></mml:mfrac></mml:mstyle></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mstyle displaystyle="true" scriptlevel="0"><mml:msub><mml:mi>j</mml:mi><mml:mrow><mml:msub><mml:mi>B</mml:mi><mml:mrow><mml:mi>g</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub></mml:mstyle></mml:mtd><mml:mtd><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mo>=</mml:mo><mml:mtext> </mml:mtext><mml:mfrac><mml:mrow><mml:mn>2</mml:mn><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>l</mml:mi><mml:mrow><mml:mi>r</mml:mi></mml:mrow></mml:msub><mml:mo>−</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:msub><mml:mi>l</mml:mi><mml:mrow><mml:msub><mml:mi>B</mml:mi><mml:mrow><mml:mi>g</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub></mml:mfrac></mml:mstyle></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mstyle displaystyle="true" scriptlevel="0"><mml:msub><mml:mrow><mml:mtext>SJ</mml:mtext></mml:mrow><mml:mrow><mml:msub><mml:mi>I</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mi>g</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub></mml:mstyle></mml:mtd><mml:mtd><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mo>∼</mml:mo><mml:mtext> Binomial</mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>R</mml:mi><mml:mrow><mml:msub><mml:mi>I</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mi>g</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>j</mml:mi><mml:mrow><mml:msub><mml:mi>I</mml:mi><mml:mrow><mml:mi>g</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mstyle></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:mstyle></mml:math></disp-formula><inline-formula><mml:math id="inf362"><mml:msub><mml:mi>l</mml:mi><mml:mi>r</mml:mi></mml:msub></mml:math></inline-formula> corresponds to the constant read length from the sequencing process. <inline-formula><mml:math id="inf363"><mml:msub><mml:mtext>SJ</mml:mtext><mml:msub><mml:mi>I</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mo>⁢</mml:mo><mml:mi>g</mml:mi></mml:mrow></mml:msub></mml:msub></mml:math></inline-formula> is the number of reads that cover informative splice junctions for isoform <inline-formula><mml:math id="inf364"><mml:mrow><mml:mi>I</mml:mi><mml:mo>∈</mml:mo><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:msub><mml:mi>g</mml:mi><mml:mi>A</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>g</mml:mi><mml:mi>B</mml:mi></mml:msub><mml:mo stretchy="false">}</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula> for gene <inline-formula><mml:math id="inf365"><mml:mi>g</mml:mi></mml:math></inline-formula> in cell <inline-formula><mml:math id="inf366"><mml:mi>n</mml:mi></mml:math></inline-formula>, which are sampled from the total number of reads covering the isoform. In order to account for variation in read density along transcripts, we sample the splice junction reads of each event from a binomial distribution with probabilities <inline-formula><mml:math id="inf367"><mml:msub><mml:mi>j</mml:mi><mml:msub><mml:mi>A</mml:mi><mml:mi>g</mml:mi></mml:msub></mml:msub></mml:math></inline-formula> and <inline-formula><mml:math id="inf368"><mml:msub><mml:mi>j</mml:mi><mml:msub><mml:mi>B</mml:mi><mml:mi>g</mml:mi></mml:msub></mml:msub></mml:math></inline-formula>, which are respectively the probabilities of a given read to cover the splice junctions informative with isoform <inline-formula><mml:math id="inf369"><mml:msub><mml:mi>g</mml:mi><mml:mi>A</mml:mi></mml:msub></mml:math></inline-formula> and <inline-formula><mml:math id="inf370"><mml:msub><mml:mi>g</mml:mi><mml:mi>B</mml:mi></mml:msub></mml:math></inline-formula>. We derive these probabilities from the length of the simulated reads, and the length of the transcript. Each read can be mapped to <inline-formula><mml:math id="inf371"><mml:mrow><mml:mn>2</mml:mn><mml:mo>⁢</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:msub><mml:mi>l</mml:mi><mml:mi>r</mml:mi></mml:msub><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula> positions in the transcript that overlap one splice junction. Thus, the probability of covering one given splice junction is defined as the number of possible positions in the transcript that are informative for the splice junction, divided by the length of the transcript. <inline-formula><mml:math id="inf372"><mml:msub><mml:mi>j</mml:mi><mml:msub><mml:mi>A</mml:mi><mml:mi>g</mml:mi></mml:msub></mml:msub></mml:math></inline-formula> is the probability to map to any of the two splice junctions that are informative for isoform <inline-formula><mml:math id="inf373"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msub><mml:mi>g</mml:mi><mml:mrow><mml:mi>A</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mstyle></mml:math></inline-formula>. <inline-formula><mml:math id="inf374"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msub><mml:mi>j</mml:mi><mml:mrow><mml:msub><mml:mi>B</mml:mi><mml:mrow><mml:mi>g</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub></mml:mrow></mml:mstyle></mml:math></inline-formula> is the probability to map to one single splice junction, since there is only one junction informative for isoform <inline-formula><mml:math id="inf375"><mml:msub><mml:mi>g</mml:mi><mml:mi>B</mml:mi></mml:msub></mml:math></inline-formula>. Coverage depth variance might sometimes exceed the variance of the binomial distribution, such that the informative reads for one isoform might be much more likely to be sequenced than the informative reads of the other isoform in a given cell. In these situations, the technical variance of <inline-formula><mml:math id="inf376"><mml:mover accent="true"><mml:mi mathvariant="normal">Ψ</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover></mml:math></inline-formula> and the number of spurious binary observations could be higher than modeled in these simulations.</p><p>Finally, the observed <inline-formula><mml:math id="inf377"><mml:mi mathvariant="normal">Ψ</mml:mi></mml:math></inline-formula> is calculated as:<disp-formula id="equ27"><mml:math id="m27"><mml:mrow><mml:msub><mml:mover accent="true"><mml:mi mathvariant="normal">Ψ</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover><mml:mrow><mml:mi>i</mml:mi><mml:mo>⁢</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mfrac><mml:msub><mml:mtext>SJ</mml:mtext><mml:msub><mml:mi>A</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>⁢</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:msub><mml:mrow><mml:msub><mml:mtext>SJ</mml:mtext><mml:msub><mml:mi>A</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>⁢</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:msub><mml:mo>+</mml:mo><mml:msub><mml:mtext>SJ</mml:mtext><mml:msub><mml:mi>B</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>⁢</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:msub></mml:mrow></mml:mfrac></mml:mrow></mml:math></disp-formula></p></sec><sec id="s4-5-5"><title>Simulator variants for studying sources of variation</title><sec id="s4-5-5-1"><title>Gene expression and underlying <inline-formula><mml:math id="inf378"><mml:mi mathvariant="normal">Ψ</mml:mi></mml:math></inline-formula></title><p>We tested the effect of the interplay between gene expression and the ratio of isoforms that contain the cassette exon on the observed distribution of <inline-formula><mml:math id="inf379"><mml:mi mathvariant="normal">Ψ</mml:mi></mml:math></inline-formula>. For this test, we simulated a population of 300 single cells with 500 genes, indexed 1 to 500. For every cell <inline-formula><mml:math id="inf380"><mml:mi>i</mml:mi></mml:math></inline-formula>, the expression of gene <inline-formula><mml:math id="inf381"><mml:mi>g</mml:mi></mml:math></inline-formula> is fixed as <inline-formula><mml:math id="inf382"><mml:mrow><mml:msub><mml:mi>X</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>⁢</mml:mo><mml:mi>g</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mi>g</mml:mi></mml:mrow></mml:math></inline-formula>, where <inline-formula><mml:math id="inf383"><mml:mrow><mml:mi>g</mml:mi><mml:mo>∈</mml:mo><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mn>2</mml:mn><mml:mo>,</mml:mo><mml:mi mathvariant="normal">…</mml:mi><mml:mo>,</mml:mo><mml:mn>500</mml:mn><mml:mo stretchy="false">}</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula>. That is, every gene had a different level of expression, and the expression of every individual gene was constant across all cells. For each simulation, we fixed the underlying splicing rate of all cassette exons across all cells. That is, for each cassette exon <inline-formula><mml:math id="inf384"><mml:mi>j</mml:mi></mml:math></inline-formula> of gene <inline-formula><mml:math id="inf385"><mml:mi>g</mml:mi></mml:math></inline-formula>, in every cell, we set <inline-formula><mml:math id="inf386"><mml:mrow><mml:msub><mml:mi mathvariant="normal">Ψ</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>⁢</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mi/></mml:mrow></mml:math></inline-formula> constant. We ran the simulator with different underlying splicing rates, with <inline-formula><mml:math id="inf387"><mml:mrow><mml:msub><mml:mi mathvariant="normal">Ψ</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>⁢</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>∈</mml:mo><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:mn>0.01</mml:mn><mml:mo>,</mml:mo><mml:mn>0.02</mml:mn><mml:mo>,</mml:mo><mml:mi mathvariant="normal">…</mml:mi><mml:mo>,</mml:mo><mml:mn>0.5</mml:mn><mml:mo stretchy="false">}</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula>. For every simulation, we used an average capture efficiency <inline-formula><mml:math id="inf388"><mml:mrow><mml:mi>c</mml:mi><mml:mo>=</mml:mo><mml:mn>0.1</mml:mn></mml:mrow></mml:math></inline-formula>. We ran 30 simulations for every fixed <inline-formula><mml:math id="inf389"><mml:msub><mml:mi mathvariant="normal">Ψ</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>⁢</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:math></inline-formula> value. For every fixed <inline-formula><mml:math id="inf390"><mml:msub><mml:mi mathvariant="normal">Ψ</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>⁢</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:math></inline-formula> and for every fixed expression level <inline-formula><mml:math id="inf391"><mml:mi>g</mml:mi></mml:math></inline-formula>, we took the average proportion of cells with binary values (<inline-formula><mml:math id="inf392"><mml:mover accent="true"><mml:mi mathvariant="normal">Ψ</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover></mml:math></inline-formula> = 0 or 1) for the observed <inline-formula><mml:math id="inf393"><mml:mover accent="true"><mml:mi mathvariant="normal">Ψ</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover></mml:math></inline-formula>. That is, we reported:<disp-formula id="equ28"><mml:math id="m28"><mml:mrow><mml:mfrac><mml:mn>1</mml:mn><mml:mn>1500</mml:mn></mml:mfrac><mml:munderover><mml:mo largeop="true" movablelimits="false" symmetric="true">∑</mml:mo><mml:mrow><mml:mi>sim</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mn>30</mml:mn></mml:munderover><mml:munderover><mml:mo largeop="true" movablelimits="false" symmetric="true">∑</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mn>300</mml:mn></mml:munderover><mml:mi>𝕀</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mover accent="true"><mml:mi mathvariant="normal">Ψ</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover><mml:mrow><mml:mi>i</mml:mi><mml:mo>⁢</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>+</mml:mo><mml:mi>𝕀</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mover accent="true"><mml:mi mathvariant="normal">Ψ</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover><mml:mrow><mml:mi>i</mml:mi><mml:mo>⁢</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mn>0</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math></disp-formula></p></sec></sec><sec id="s4-5-6"><title>Gene expression and capture efficiency</title><p>We tested the effect of capture efficiency in <inline-formula><mml:math id="inf394"><mml:mi mathvariant="normal">Ψ</mml:mi></mml:math></inline-formula> observations. To minimize the effect of the underlying <inline-formula><mml:math id="inf395"><mml:mi mathvariant="normal">Ψ</mml:mi></mml:math></inline-formula> in the simulations, in this analysis we fixed the true splicing rate of all exons to <inline-formula><mml:math id="inf396"><mml:mrow><mml:msub><mml:mi mathvariant="normal">Ψ</mml:mi><mml:mrow><mml:mi>T</mml:mi><mml:mo>⁢</mml:mo><mml:mi>n</mml:mi><mml:mo>⁢</mml:mo><mml:mi>g</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mn>0.5</mml:mn></mml:mrow></mml:math></inline-formula> (we achieved this by setting <inline-formula><mml:math id="inf397"><mml:mrow><mml:msub><mml:mi>X</mml:mi><mml:mrow><mml:mi>A</mml:mi><mml:mo>⁢</mml:mo><mml:mi>i</mml:mi><mml:mo>⁢</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mrow><mml:mi>B</mml:mi><mml:mo>⁢</mml:mo><mml:mi>i</mml:mi><mml:mo>⁢</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:mfrac><mml:mn>1</mml:mn><mml:mn>2</mml:mn></mml:mfrac><mml:mo>⁢</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>⁢</mml:mo><mml:mi>g</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>). We ran simulations for each possible value for the average capture efficiency in <inline-formula><mml:math id="inf398"><mml:mrow><mml:mi>c</mml:mi><mml:mo>∈</mml:mo><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:mn>0.01</mml:mn><mml:mo>,</mml:mo><mml:mn>0.011</mml:mn><mml:mo>,</mml:mo><mml:mi mathvariant="normal">…</mml:mi><mml:mo>,</mml:mo><mml:mn>0.1</mml:mn><mml:mo stretchy="false">}</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula>. For each tested average capture efficiency rate, we ranked the alternative splicing events by the number of reads that cover the informative splice junctions. For each alternative event, we observed the proportion of cells that present only one type of isoform (either including the cassette exon or excluding it, but not both).</p></sec></sec></sec></body><back><ack id="ack"><title>Acknowledgements</title><p>We thank Don Rio for discussions that inspired this analysis, Chenling Xu and Amanda Mok for insightful suggestions, and Nicholas Ingolia for critical comments on the manuscript. C.F.B. was supported by the UC MEXUS-CONACYT doctoral fellowship. N.Y. was supported by the Chan Zuckerberg Biohub.</p></ack><sec id="s5" sec-type="additional-information"><title>Additional information</title><fn-group content-type="competing-interest"><title>Competing interests</title><fn fn-type="COI-statement" id="conf1"><p>No competing interests declared</p></fn></fn-group><fn-group content-type="author-contribution"><title>Author contributions</title><fn fn-type="con" id="con1"><p>Conceptualization, Software, Formal analysis, Investigation, Methodology, Writing - original draft</p></fn><fn fn-type="con" id="con2"><p>Conceptualization, Formal analysis, Supervision, Methodology, Writing - original draft</p></fn><fn fn-type="con" id="con3"><p>Conceptualization, Formal analysis, Supervision, Methodology, Writing - original draft</p></fn></fn-group></sec><sec id="s6" sec-type="supplementary-material"><title>Additional files</title><supplementary-material id="transrepform"><label>Transparent reporting form</label><media mime-subtype="pdf" mimetype="application" xlink:href="elife-54603-transrepform-v2.pdf"/></supplementary-material></sec><sec id="s7" sec-type="data-availability"><title>Data availability</title><p>All sequencing data reanalyzed in this study were acquired from GEO.</p><p>The following previously published datasets were used:</p><p><element-citation id="dataset1" publication-type="data" specific-use="references"><person-group person-group-type="author"><name><surname>Chen</surname><given-names>G</given-names></name><name><surname>Schell</surname><given-names>JP</given-names></name><name><surname>Benitez</surname><given-names>JA</given-names></name><name><surname>Petropoulos</surname><given-names>S</given-names></name><name><surname>Yilmaz</surname><given-names>M</given-names></name><name><surname>Reinius</surname><given-names>B</given-names></name><name><surname>Alekseenko</surname><given-names>Z</given-names></name><name><surname>Shi</surname><given-names>L</given-names></name><name><surname>Hedlund</surname><given-names>E</given-names></name><name><surname>Lanner</surname><given-names>F</given-names></name><name><surname>Sandberg</surname><given-names>R</given-names></name><name><surname>Deng</surname><given-names>Q</given-names></name></person-group><year iso-8601-date="2016">2016</year><data-title>Single-cell analysis of allelic gene expression in pluripotency, differentiation and X-chromosome inactivation</data-title><source>NCBI Gene Expression Omnibus</source><pub-id assigning-authority="NCBI" pub-id-type="accession" xlink:href="https://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSE74155">GSE74155</pub-id></element-citation></p><p><element-citation id="dataset2" publication-type="data" specific-use="references"><person-group person-group-type="author"><name><surname>Lescroart</surname><given-names>F</given-names></name><name><surname>Wang</surname><given-names>X</given-names></name><name><surname>Lin</surname><given-names>X</given-names></name><name><surname>Swedlund</surname><given-names>B</given-names></name><name><surname>Gargouri</surname><given-names>S</given-names></name><name><surname>Sànchez-Dànes</surname><given-names>A</given-names></name><name><surname>Moignard</surname><given-names>V</given-names></name><name><surname>Dubois</surname><given-names>C</given-names></name><name><surname>Paulissen</surname><given-names>C</given-names></name><name><surname>Kinston</surname><given-names>S</given-names></name><name><surname>Göttgens</surname><given-names>B</given-names></name><name><surname>Blanpain</surname><given-names>C</given-names></name></person-group><year iso-8601-date="2018">2018</year><data-title>Defining the early steps of cardiovascularlineage segregation by single cell RNA-seq</data-title><source>NCBI Gene Expression Omnibus</source><pub-id assigning-authority="NCBI" pub-id-type="accession" xlink:href="https://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSE100471">GSE100471</pub-id></element-citation></p><p><element-citation id="dataset3" publication-type="data" specific-use="references"><person-group person-group-type="author"><name><surname>Trapnell</surname><given-names>C</given-names></name><name><surname>Cacchiarelli</surname><given-names>D</given-names></name><name><surname>Grimbsby</surname><given-names>J</given-names></name><name><surname>Pokharel</surname><given-names>P</given-names></name><name><surname>Li</surname><given-names>S</given-names></name><name><surname>Morse</surname><given-names>M</given-names></name><name><surname>Mikkelsen</surname><given-names>T</given-names></name><name><surname>Rinn</surname><given-names>J</given-names></name></person-group><year iso-8601-date="2014">2014</year><data-title>Pseudo-temporal ordering of individual cells reveals regulators of differentiation</data-title><source>NCBI Gene Expression Omnibus</source><pub-id assigning-authority="NCBI" pub-id-type="accession" xlink:href="https://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSE52529">GSE52529</pub-id></element-citation></p><p><element-citation id="dataset4" publication-type="data" specific-use="references"><person-group person-group-type="author"><name><surname>Song</surname><given-names>Y</given-names></name><name><surname>Botvinnik</surname><given-names>OB</given-names></name><name><surname>Lovci</surname><given-names>MT</given-names></name><name><surname>Kakaradov</surname><given-names>B</given-names></name><name><surname>Liu</surname><given-names>P</given-names></name><name><surname>Xu</surname><given-names>JL</given-names></name><name><surname>Yeo</surname><given-names>GW</given-names></name></person-group><year iso-8601-date="2017">2017</year><data-title>Single-cell alternative splicing analysis with Expedition reveals splicing dynamics during neuron differentiation</data-title><source>NCBI Gene Expression Omnibus</source><pub-id assigning-authority="NCBI" pub-id-type="accession" xlink:href="https://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSE85908">GSE85908</pub-id></element-citation></p><p><element-citation id="dataset5" publication-type="data" specific-use="references"><person-group person-group-type="author"><name><surname>Fletcher</surname><given-names>RB</given-names></name><name><surname>Das</surname><given-names>D</given-names></name><name><surname>Gadye</surname><given-names>L</given-names></name><name><surname>Street</surname><given-names>KN</given-names></name><name><surname>Baudhuin</surname><given-names>A</given-names></name><name><surname>Wagner</surname><given-names>A</given-names></name><name><surname>Cole</surname><given-names>MB</given-names></name><name><surname>Flores</surname><given-names>Q</given-names></name><name><surname>Choi</surname><given-names>YG</given-names></name><name><surname>Yosef</surname><given-names>N</given-names></name><name><surname>Purdom</surname><given-names>E</given-names></name><name><surname>Dudoit</surname><given-names>S</given-names></name><name><surname>Risso</surname><given-names>D</given-names></name><name><surname>Ngai</surname><given-names>J</given-names></name></person-group><year iso-8601-date="2017">2017</year><data-title>Olfactory stem cell differentiation: horizontal basal cell (HBC) lineage</data-title><source>NCBI Gene Expression Omnibus</source><pub-id assigning-authority="NCBI" pub-id-type="accession" xlink:href="https://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSE95601">GSE95601</pub-id></element-citation></p></sec><ref-list><title>References</title><ref id="bib1"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Arzalluz-Luque</surname> <given-names>Á</given-names></name><name><surname>Conesa</surname> <given-names>A</given-names></name></person-group><year iso-8601-date="2018">2018</year><article-title>Single-cell RNAseq for the study of isoforms—how is that possible?</article-title><source>Genome Biology</source><volume>19</volume><elocation-id>110</elocation-id><pub-id pub-id-type="doi">10.1186/s13059-018-1496-z</pub-id><pub-id pub-id-type="pmid">30097058</pub-id></element-citation></ref><ref id="bib2"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Barash</surname> <given-names>Y</given-names></name><name><surname>Blencowe</surname> <given-names>BJ</given-names></name><name><surname>Frey</surname> <given-names>BJ</given-names></name></person-group><year iso-8601-date="2010">2010</year><article-title>Model-based detection of alternative splicing signals</article-title><source>Bioinformatics</source><volume>26</volume><fpage>i325</fpage><lpage>i333</lpage><pub-id pub-id-type="doi">10.1093/bioinformatics/btq200</pub-id></element-citation></ref><ref id="bib3"><element-citation publication-type="software"><person-group person-group-type="author"><name><surname>Buen Abad Najar</surname> <given-names>CF</given-names></name><name><surname>Lareau</surname> <given-names>L</given-names></name></person-group><year iso-8601-date="2020">2020</year><data-title>sc_binary_splicing</data-title><source>GitHub</source><version designator="5c2c825">5c2c825</version><ext-link ext-link-type="uri" xlink:href="https://github.com/lareaulab/sc_binary_splicing">https://github.com/lareaulab/sc_binary_splicing</ext-link></element-citation></ref><ref id="bib4"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Busskamp</surname> <given-names>V</given-names></name><name><surname>Lewis</surname> <given-names>NE</given-names></name><name><surname>Guye</surname> <given-names>P</given-names></name><name><surname>Ng</surname> <given-names>AH</given-names></name><name><surname>Shipman</surname> <given-names>SL</given-names></name><name><surname>Byrne</surname> <given-names>SM</given-names></name><name><surname>Sanjana</surname> <given-names>NE</given-names></name><name><surname>Murn</surname> <given-names>J</given-names></name><name><surname>Li</surname> <given-names>Y</given-names></name><name><surname>Li</surname> <given-names>S</given-names></name><name><surname>Stadler</surname> <given-names>M</given-names></name><name><surname>Weiss</surname> <given-names>R</given-names></name><name><surname>Church</surname> <given-names>GM</given-names></name></person-group><year iso-8601-date="2014">2014</year><article-title>Rapid neurogenesis through transcriptional activation in human stem cells</article-title><source>Molecular Systems Biology</source><volume>10</volume><elocation-id>760</elocation-id><pub-id pub-id-type="doi">10.15252/msb.20145508</pub-id><pub-id pub-id-type="pmid">25403753</pub-id></element-citation></ref><ref id="bib5"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Chen</surname> <given-names>G</given-names></name><name><surname>Schell</surname> <given-names>JP</given-names></name><name><surname>Benitez</surname> <given-names>JA</given-names></name><name><surname>Petropoulos</surname> <given-names>S</given-names></name><name><surname>Yilmaz</surname> <given-names>M</given-names></name><name><surname>Reinius</surname> <given-names>B</given-names></name><name><surname>Alekseenko</surname> <given-names>Z</given-names></name><name><surname>Shi</surname> <given-names>L</given-names></name><name><surname>Hedlund</surname> <given-names>E</given-names></name><name><surname>Lanner</surname> <given-names>F</given-names></name><name><surname>Sandberg</surname> <given-names>R</given-names></name><name><surname>Deng</surname> <given-names>Q</given-names></name></person-group><year iso-8601-date="2016">2016</year><article-title>Single-cell analyses of X chromosome inactivation dynamics and pluripotency during differentiation</article-title><source>Genome Research</source><volume>26</volume><fpage>1342</fpage><lpage>1354</lpage><pub-id pub-id-type="doi">10.1101/gr.201954.115</pub-id><pub-id pub-id-type="pmid">27486082</pub-id></element-citation></ref><ref id="bib6"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Cole</surname> <given-names>MB</given-names></name><name><surname>Risso</surname> <given-names>D</given-names></name><name><surname>Wagner</surname> <given-names>A</given-names></name><name><surname>DeTomaso</surname> <given-names>D</given-names></name><name><surname>Ngai</surname> <given-names>J</given-names></name><name><surname>Purdom</surname> <given-names>E</given-names></name><name><surname>Dudoit</surname> <given-names>S</given-names></name><name><surname>Yosef</surname> <given-names>N</given-names></name></person-group><year iso-8601-date="2019">2019</year><article-title>Performance assessment and selection of normalization procedures for Single-Cell RNA-Seq</article-title><source>Cell Systems</source><volume>8</volume><fpage>315</fpage><lpage>328</lpage><pub-id pub-id-type="doi">10.1016/j.cels.2019.03.010</pub-id><pub-id pub-id-type="pmid">31022373</pub-id></element-citation></ref><ref id="bib7"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>DeTomaso</surname> <given-names>D</given-names></name><name><surname>Jones</surname> <given-names>MG</given-names></name><name><surname>Subramaniam</surname> <given-names>M</given-names></name><name><surname>Ashuach</surname> <given-names>T</given-names></name><name><surname>Ye</surname> <given-names>CJ</given-names></name><name><surname>Yosef</surname> <given-names>N</given-names></name></person-group><year iso-8601-date="2019">2019</year><article-title>Functional interpretation of single cell similarity maps</article-title><source>Nature Communications</source><volume>10</volume><elocation-id>4376</elocation-id><pub-id pub-id-type="doi">10.1038/s41467-019-12235-0</pub-id><pub-id pub-id-type="pmid">31558714</pub-id></element-citation></ref><ref id="bib8"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Dobin</surname> <given-names>A</given-names></name><name><surname>Davis</surname> <given-names>CA</given-names></name><name><surname>Schlesinger</surname> <given-names>F</given-names></name><name><surname>Drenkow</surname> <given-names>J</given-names></name><name><surname>Zaleski</surname> <given-names>C</given-names></name><name><surname>Jha</surname> <given-names>S</given-names></name><name><surname>Batut</surname> <given-names>P</given-names></name><name><surname>Chaisson</surname> <given-names>M</given-names></name><name><surname>Gingeras</surname> <given-names>TR</given-names></name></person-group><year iso-8601-date="2013">2013</year><article-title>STAR: ultrafast universal RNA-seq aligner</article-title><source>Bioinformatics</source><volume>29</volume><fpage>15</fpage><lpage>21</lpage><pub-id pub-id-type="doi">10.1093/bioinformatics/bts635</pub-id><pub-id pub-id-type="pmid">23104886</pub-id></element-citation></ref><ref id="bib9"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Faigenbloom</surname> <given-names>L</given-names></name><name><surname>Rubinstein</surname> <given-names>ND</given-names></name><name><surname>Kloog</surname> <given-names>Y</given-names></name><name><surname>Mayrose</surname> <given-names>I</given-names></name><name><surname>Pupko</surname> <given-names>T</given-names></name><name><surname>Stein</surname> <given-names>R</given-names></name></person-group><year iso-8601-date="2015">2015</year><article-title>Regulation of alternative splicing at the single-cell level</article-title><source>Molecular Systems Biology</source><volume>11</volume><elocation-id>845</elocation-id><pub-id pub-id-type="doi">10.15252/msb.20156278</pub-id><pub-id pub-id-type="pmid">26712315</pub-id></element-citation></ref><ref id="bib10"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Fletcher</surname> <given-names>RB</given-names></name><name><surname>Das</surname> <given-names>D</given-names></name><name><surname>Gadye</surname> <given-names>L</given-names></name><name><surname>Street</surname> <given-names>KN</given-names></name><name><surname>Baudhuin</surname> <given-names>A</given-names></name><name><surname>Wagner</surname> <given-names>A</given-names></name><name><surname>Cole</surname> <given-names>MB</given-names></name><name><surname>Flores</surname> <given-names>Q</given-names></name><name><surname>Choi</surname> <given-names>YG</given-names></name><name><surname>Yosef</surname> <given-names>N</given-names></name><name><surname>Purdom</surname> <given-names>E</given-names></name><name><surname>Dudoit</surname> <given-names>S</given-names></name><name><surname>Risso</surname> <given-names>D</given-names></name><name><surname>Ngai</surname> <given-names>J</given-names></name></person-group><year iso-8601-date="2017">2017</year><article-title>Deconstructing olfactory stem cell trajectories at Single-Cell resolution</article-title><source>Cell Stem Cell</source><volume>20</volume><fpage>817</fpage><lpage>830</lpage><pub-id pub-id-type="doi">10.1016/j.stem.2017.04.003</pub-id><pub-id pub-id-type="pmid">28506465</pub-id></element-citation></ref><ref id="bib11"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Grün</surname> <given-names>D</given-names></name><name><surname>Kester</surname> <given-names>L</given-names></name><name><surname>van Oudenaarden</surname> <given-names>A</given-names></name></person-group><year iso-8601-date="2014">2014</year><article-title>Validation of noise models for single-cell transcriptomics</article-title><source>Nature Methods</source><volume>11</volume><fpage>637</fpage><lpage>640</lpage><pub-id pub-id-type="doi">10.1038/nmeth.2930</pub-id><pub-id pub-id-type="pmid">24747814</pub-id></element-citation></ref><ref id="bib12"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Gupta</surname> <given-names>I</given-names></name><name><surname>Collier</surname> <given-names>PG</given-names></name><name><surname>Haase</surname> <given-names>B</given-names></name><name><surname>Mahfouz</surname> <given-names>A</given-names></name><name><surname>Joglekar</surname> <given-names>A</given-names></name><name><surname>Floyd</surname> <given-names>T</given-names></name><name><surname>Koopmans</surname> <given-names>F</given-names></name><name><surname>Barres</surname> <given-names>B</given-names></name><name><surname>Smit</surname> <given-names>AB</given-names></name><name><surname>Sloan</surname> <given-names>SA</given-names></name><name><surname>Luo</surname> <given-names>W</given-names></name><name><surname>Fedrigo</surname> <given-names>O</given-names></name><name><surname>Ross</surname> <given-names>ME</given-names></name><name><surname>Tilgner</surname> <given-names>HU</given-names></name></person-group><year iso-8601-date="2018">2018</year><article-title>Single-cell isoform RNA sequencing characterizes isoforms in thousands of cerebellar cells</article-title><source>Nature Biotechnology</source><volume>36</volume><fpage>1197</fpage><lpage>1202</lpage><pub-id pub-id-type="doi">10.1038/nbt.4259</pub-id></element-citation></ref><ref id="bib13"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Hagemann-Jensen</surname> <given-names>M</given-names></name><name><surname>Ziegenhain</surname> <given-names>C</given-names></name><name><surname>Chen</surname> <given-names>P</given-names></name><name><surname>Ramsköld</surname> <given-names>D</given-names></name><name><surname>Hendriks</surname> <given-names>G-J</given-names></name><name><surname>Larsson</surname> <given-names>AJM</given-names></name><name><surname>Faridani</surname> <given-names>OR</given-names></name><name><surname>Sandberg</surname> <given-names>R</given-names></name></person-group><year iso-8601-date="2020">2020</year><article-title>Single-cell RNA counting at allele and isoform resolution using Smart-seq3</article-title><source>Nature Biotechnology</source><volume>38</volume><fpage>708</fpage><lpage>714</lpage><pub-id pub-id-type="doi">10.1038/s41587-020-0497-0</pub-id></element-citation></ref><ref id="bib14"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Huang</surname> <given-names>Y</given-names></name><name><surname>Sanguinetti</surname> <given-names>G</given-names></name></person-group><year iso-8601-date="2017">2017</year><article-title>BRIE: transcriptome-wide splicing quantification in single cells</article-title><source>Genome Biology</source><volume>18</volume><elocation-id>123</elocation-id><pub-id pub-id-type="doi">10.1186/s13059-017-1248-5</pub-id></element-citation></ref><ref id="bib15"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Hubbard</surname> <given-names>KS</given-names></name><name><surname>Gut</surname> <given-names>IM</given-names></name><name><surname>Lyman</surname> <given-names>ME</given-names></name><name><surname>McNutt</surname> <given-names>PM</given-names></name></person-group><year iso-8601-date="2013">2013</year><article-title>Longitudinal RNA sequencing of the deep transcriptome during neurogenesis of cortical glutamatergic neurons from murine ESCs</article-title><source>F1000Research</source><volume>2</volume><elocation-id>35</elocation-id><pub-id pub-id-type="doi">10.12688/f1000research.2-35.v1</pub-id><pub-id pub-id-type="pmid">24358889</pub-id></element-citation></ref><ref id="bib16"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Kim</surname> <given-names>JK</given-names></name><name><surname>Kolodziejczyk</surname> <given-names>AA</given-names></name><name><surname>Ilicic</surname> <given-names>T</given-names></name><name><surname>Illicic</surname> <given-names>T</given-names></name><name><surname>Teichmann</surname> <given-names>SA</given-names></name><name><surname>Marioni</surname> <given-names>JC</given-names></name></person-group><year iso-8601-date="2015">2015</year><article-title>Characterizing noise structure in single-cell RNA-seq distinguishes genuine from technical stochastic allelic expression</article-title><source>Nature Communications</source><volume>6</volume><elocation-id>8687</elocation-id><pub-id pub-id-type="doi">10.1038/ncomms9687</pub-id><pub-id pub-id-type="pmid">26489834</pub-id></element-citation></ref><ref id="bib17"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Larsson</surname> <given-names>AJM</given-names></name><name><surname>Johnsson</surname> <given-names>P</given-names></name><name><surname>Hagemann-Jensen</surname> <given-names>M</given-names></name><name><surname>Hartmanis</surname> <given-names>L</given-names></name><name><surname>Faridani</surname> <given-names>OR</given-names></name><name><surname>Reinius</surname> <given-names>B</given-names></name><name><surname>Segerstolpe</surname> <given-names>Åsa</given-names></name><name><surname>Rivera</surname> <given-names>CM</given-names></name><name><surname>Ren</surname> <given-names>B</given-names></name><name><surname>Sandberg</surname> <given-names>R</given-names></name></person-group><year iso-8601-date="2019">2019</year><article-title>Genomic encoding of transcriptional burst kinetics</article-title><source>Nature</source><volume>565</volume><fpage>251</fpage><lpage>254</lpage><pub-id pub-id-type="doi">10.1038/s41586-018-0836-1</pub-id></element-citation></ref><ref id="bib18"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Lescroart</surname> <given-names>F</given-names></name><name><surname>Wang</surname> <given-names>X</given-names></name><name><surname>Lin</surname> <given-names>X</given-names></name><name><surname>Swedlund</surname> <given-names>B</given-names></name><name><surname>Gargouri</surname> <given-names>S</given-names></name><name><surname>Sànchez-Dànes</surname> <given-names>A</given-names></name><name><surname>Moignard</surname> <given-names>V</given-names></name><name><surname>Dubois</surname> <given-names>C</given-names></name><name><surname>Paulissen</surname> <given-names>C</given-names></name><name><surname>Kinston</surname> <given-names>S</given-names></name><name><surname>Göttgens</surname> <given-names>B</given-names></name><name><surname>Blanpain</surname> <given-names>C</given-names></name></person-group><year iso-8601-date="2018">2018</year><article-title>Defining the earliest step of cardiovascular lineage segregation by single-cell RNA-seq</article-title><source>Science</source><volume>359</volume><fpage>1177</fpage><lpage>1181</lpage><pub-id pub-id-type="doi">10.1126/science.aao4174</pub-id></element-citation></ref><ref id="bib19"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Li</surname> <given-names>B</given-names></name><name><surname>Dewey</surname> <given-names>CN</given-names></name></person-group><year iso-8601-date="2011">2011</year><article-title>RSEM: accurate transcript quantification from RNA-Seq data with or without a reference genome</article-title><source>BMC Bioinformatics</source><volume>12</volume><elocation-id>323</elocation-id><pub-id pub-id-type="doi">10.1186/1471-2105-12-323</pub-id><pub-id pub-id-type="pmid">21816040</pub-id></element-citation></ref><ref id="bib20"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Linker</surname> <given-names>SM</given-names></name><name><surname>Urban</surname> <given-names>L</given-names></name><name><surname>Clark</surname> <given-names>SJ</given-names></name><name><surname>Chhatriwala</surname> <given-names>M</given-names></name><name><surname>Amatya</surname> <given-names>S</given-names></name><name><surname>McCarthy</surname> <given-names>DJ</given-names></name><name><surname>Ebersberger</surname> <given-names>I</given-names></name><name><surname>Vallier</surname> <given-names>L</given-names></name><name><surname>Reik</surname> <given-names>W</given-names></name><name><surname>Stegle</surname> <given-names>O</given-names></name><name><surname>Bonder</surname> <given-names>MJ</given-names></name></person-group><year iso-8601-date="2019">2019</year><article-title>Combined single-cell profiling of expression and DNA methylation reveals splicing regulation and heterogeneity</article-title><source>Genome Biology</source><volume>20</volume><elocation-id>30</elocation-id><pub-id pub-id-type="doi">10.1186/s13059-019-1644-0</pub-id></element-citation></ref><ref id="bib21"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Liu</surname> <given-names>J</given-names></name><name><surname>Geng</surname> <given-names>A</given-names></name><name><surname>Wu</surname> <given-names>X</given-names></name><name><surname>Lin</surname> <given-names>RJ</given-names></name><name><surname>Lu</surname> <given-names>Q</given-names></name></person-group><year iso-8601-date="2018">2018</year><article-title>Alternative RNA splicing associated with mammalian neuronal differentiation</article-title><source>Cerebral Cortex</source><volume>28</volume><fpage>2810</fpage><lpage>2816</lpage><pub-id pub-id-type="doi">10.1093/cercor/bhx160</pub-id><pub-id pub-id-type="pmid">28651367</pub-id></element-citation></ref><ref id="bib22"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Maamar</surname> <given-names>H</given-names></name><name><surname>Cabili</surname> <given-names>MN</given-names></name><name><surname>Rinn</surname> <given-names>J</given-names></name><name><surname>Raj</surname> <given-names>A</given-names></name></person-group><year iso-8601-date="2013">2013</year><article-title>linc-HOXA1 is a noncoding RNA that represses Hoxa1 transcription in Cis</article-title><source>Genes &amp; Development</source><volume>27</volume><fpage>1260</fpage><lpage>1271</lpage><pub-id pub-id-type="doi">10.1101/gad.217018.113</pub-id><pub-id pub-id-type="pmid">23723417</pub-id></element-citation></ref><ref id="bib23"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Marinov</surname> <given-names>GK</given-names></name><name><surname>Williams</surname> <given-names>BA</given-names></name><name><surname>McCue</surname> <given-names>K</given-names></name><name><surname>Schroth</surname> <given-names>GP</given-names></name><name><surname>Gertz</surname> <given-names>J</given-names></name><name><surname>Myers</surname> <given-names>RM</given-names></name><name><surname>Wold</surname> <given-names>BJ</given-names></name></person-group><year iso-8601-date="2014">2014</year><article-title>From single-cell to cell-pool transcriptomes: stochasticity in gene expression and RNA splicing</article-title><source>Genome Research</source><volume>24</volume><fpage>496</fpage><lpage>510</lpage><pub-id pub-id-type="doi">10.1101/gr.161034.113</pub-id><pub-id pub-id-type="pmid">24299736</pub-id></element-citation></ref><ref id="bib24"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Qiu</surname> <given-names>X</given-names></name><name><surname>Hill</surname> <given-names>A</given-names></name><name><surname>Packer</surname> <given-names>J</given-names></name><name><surname>Lin</surname> <given-names>D</given-names></name><name><surname>Ma</surname> <given-names>Y-A</given-names></name><name><surname>Trapnell</surname> <given-names>C</given-names></name></person-group><year iso-8601-date="2017">2017</year><article-title>Single-cell mRNA quantification and differential analysis with Census</article-title><source>Nature Methods</source><volume>14</volume><fpage>309</fpage><lpage>315</lpage><pub-id pub-id-type="doi">10.1038/nmeth.4150</pub-id></element-citation></ref><ref id="bib25"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Raj</surname> <given-names>A</given-names></name><name><surname>van Oudenaarden</surname> <given-names>A</given-names></name></person-group><year iso-8601-date="2008">2008</year><article-title>Nature, nurture, or chance: stochastic gene expression and its consequences</article-title><source>Cell</source><volume>135</volume><fpage>216</fpage><lpage>226</lpage><pub-id pub-id-type="doi">10.1016/j.cell.2008.09.050</pub-id><pub-id pub-id-type="pmid">18957198</pub-id></element-citation></ref><ref id="bib26"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Shalek</surname> <given-names>AK</given-names></name><name><surname>Satija</surname> <given-names>R</given-names></name><name><surname>Adiconis</surname> <given-names>X</given-names></name><name><surname>Gertner</surname> <given-names>RS</given-names></name><name><surname>Gaublomme</surname> <given-names>JT</given-names></name><name><surname>Raychowdhury</surname> <given-names>R</given-names></name><name><surname>Schwartz</surname> <given-names>S</given-names></name><name><surname>Yosef</surname> <given-names>N</given-names></name><name><surname>Malboeuf</surname> <given-names>C</given-names></name><name><surname>Lu</surname> <given-names>D</given-names></name><name><surname>Trombetta</surname> <given-names>JJ</given-names></name><name><surname>Gennert</surname> <given-names>D</given-names></name><name><surname>Gnirke</surname> <given-names>A</given-names></name><name><surname>Goren</surname> <given-names>A</given-names></name><name><surname>Hacohen</surname> <given-names>N</given-names></name><name><surname>Levin</surname> <given-names>JZ</given-names></name><name><surname>Park</surname> <given-names>H</given-names></name><name><surname>Regev</surname> <given-names>A</given-names></name></person-group><year iso-8601-date="2013">2013</year><article-title>Single-cell transcriptomics reveals bimodality in expression and splicing in immune cells</article-title><source>Nature</source><volume>498</volume><fpage>236</fpage><lpage>240</lpage><pub-id pub-id-type="doi">10.1038/nature12172</pub-id><pub-id pub-id-type="pmid">23685454</pub-id></element-citation></ref><ref id="bib27"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Shapiro</surname> <given-names>E</given-names></name><name><surname>Biezuner</surname> <given-names>T</given-names></name><name><surname>Linnarsson</surname> <given-names>S</given-names></name></person-group><year iso-8601-date="2013">2013</year><article-title>Single-cell sequencing-based technologies will revolutionize whole-organism science</article-title><source>Nature Reviews Genetics</source><volume>14</volume><fpage>618</fpage><lpage>630</lpage><pub-id pub-id-type="doi">10.1038/nrg3542</pub-id><pub-id pub-id-type="pmid">23897237</pub-id></element-citation></ref><ref id="bib28"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Shen</surname> <given-names>S</given-names></name><name><surname>Park</surname> <given-names>JW</given-names></name><name><surname>Lu</surname> <given-names>ZX</given-names></name><name><surname>Lin</surname> <given-names>L</given-names></name><name><surname>Henry</surname> <given-names>MD</given-names></name><name><surname>Wu</surname> <given-names>YN</given-names></name><name><surname>Zhou</surname> <given-names>Q</given-names></name><name><surname>Xing</surname> <given-names>Y</given-names></name></person-group><year iso-8601-date="2014">2014</year><article-title>rMATS: robust and flexible detection of differential alternative splicing from replicate RNA-Seq data</article-title><source>PNAS</source><volume>111</volume><fpage>E5593</fpage><lpage>E5601</lpage><pub-id pub-id-type="doi">10.1073/pnas.1419161111</pub-id><pub-id pub-id-type="pmid">25480548</pub-id></element-citation></ref><ref id="bib29"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Song</surname> <given-names>Y</given-names></name><name><surname>Botvinnik</surname> <given-names>OB</given-names></name><name><surname>Lovci</surname> <given-names>MT</given-names></name><name><surname>Kakaradov</surname> <given-names>B</given-names></name><name><surname>Liu</surname> <given-names>P</given-names></name><name><surname>Xu</surname> <given-names>JL</given-names></name><name><surname>Yeo</surname> <given-names>GW</given-names></name></person-group><year iso-8601-date="2017">2017</year><article-title>Single-Cell Alternative Splicing Analysis with Expedition Reveals Splicing Dynamics during Neuron Differentiation</article-title><source>Molecular Cell</source><volume>67</volume><fpage>148</fpage><lpage>161</lpage><pub-id pub-id-type="doi">10.1016/j.molcel.2017.06.003</pub-id></element-citation></ref><ref id="bib30"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Street</surname> <given-names>K</given-names></name><name><surname>Risso</surname> <given-names>D</given-names></name><name><surname>Fletcher</surname> <given-names>RB</given-names></name><name><surname>Das</surname> <given-names>D</given-names></name><name><surname>Ngai</surname> <given-names>J</given-names></name><name><surname>Yosef</surname> <given-names>N</given-names></name><name><surname>Purdom</surname> <given-names>E</given-names></name><name><surname>Dudoit</surname> <given-names>S</given-names></name></person-group><year iso-8601-date="2018">2018</year><article-title>Slingshot: cell lineage and pseudotime inference for single-cell transcriptomics</article-title><source>BMC Genomics</source><volume>19</volume><elocation-id>477</elocation-id><pub-id pub-id-type="doi">10.1186/s12864-018-4772-0</pub-id><pub-id pub-id-type="pmid">29914354</pub-id></element-citation></ref><ref id="bib31"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Tanay</surname> <given-names>A</given-names></name><name><surname>Regev</surname> <given-names>A</given-names></name></person-group><year iso-8601-date="2017">2017</year><article-title>Scaling single-cell genomics from phenomenology to mechanism</article-title><source>Nature</source><volume>541</volume><fpage>331</fpage><lpage>338</lpage><pub-id pub-id-type="doi">10.1038/nature21350</pub-id></element-citation></ref><ref id="bib32"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Trapnell</surname> <given-names>C</given-names></name><name><surname>Cacchiarelli</surname> <given-names>D</given-names></name><name><surname>Grimsby</surname> <given-names>J</given-names></name><name><surname>Pokharel</surname> <given-names>P</given-names></name><name><surname>Li</surname> <given-names>S</given-names></name><name><surname>Morse</surname> <given-names>M</given-names></name><name><surname>Lennon</surname> <given-names>NJ</given-names></name><name><surname>Livak</surname> <given-names>KJ</given-names></name><name><surname>Mikkelsen</surname> <given-names>TS</given-names></name><name><surname>Rinn</surname> <given-names>JL</given-names></name></person-group><year iso-8601-date="2014">2014</year><article-title>The dynamics and regulators of cell fate decisions are revealed by pseudotemporal ordering of single cells</article-title><source>Nature Biotechnology</source><volume>32</volume><fpage>381</fpage><lpage>386</lpage><pub-id pub-id-type="doi">10.1038/nbt.2859</pub-id><pub-id pub-id-type="pmid">24658644</pub-id></element-citation></ref><ref id="bib33"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Wagner</surname> <given-names>A</given-names></name><name><surname>Regev</surname> <given-names>A</given-names></name><name><surname>Yosef</surname> <given-names>N</given-names></name></person-group><year iso-8601-date="2016">2016</year><article-title>Revealing the vectors of cellular identity with single-cell genomics</article-title><source>Nature Biotechnology</source><volume>34</volume><fpage>1145</fpage><lpage>1160</lpage><pub-id pub-id-type="doi">10.1038/nbt.3711</pub-id></element-citation></ref><ref id="bib34"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Waks</surname> <given-names>Z</given-names></name><name><surname>Klein</surname> <given-names>AM</given-names></name><name><surname>Silver</surname> <given-names>PA</given-names></name></person-group><year iso-8601-date="2011">2011</year><article-title>Cell‐to‐cell variability of alternative RNA splicing</article-title><source>Molecular Systems Biology</source><volume>7</volume><elocation-id>506</elocation-id><pub-id pub-id-type="doi">10.1038/msb.2011.32</pub-id></element-citation></ref><ref id="bib35"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Welch</surname> <given-names>JD</given-names></name><name><surname>Hu</surname> <given-names>Y</given-names></name><name><surname>Prins</surname> <given-names>JF</given-names></name></person-group><year iso-8601-date="2016">2016</year><article-title>Robust detection of alternative splicing in a population of single cells</article-title><source>Nucleic Acids Research</source><volume>44</volume><elocation-id>e73</elocation-id><pub-id pub-id-type="doi">10.1093/nar/gkv1525</pub-id><pub-id pub-id-type="pmid">26740580</pub-id></element-citation></ref><ref id="bib36"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Westoby</surname> <given-names>J</given-names></name><name><surname>Herrera</surname> <given-names>MS</given-names></name><name><surname>Ferguson-Smith</surname> <given-names>AC</given-names></name><name><surname>Hemberg</surname> <given-names>M</given-names></name></person-group><year iso-8601-date="2018">2018</year><article-title>Simulation-based benchmarking of isoform quantification in single-cell RNA-seq</article-title><source>Genome Biology</source><volume>19</volume><elocation-id>191</elocation-id><pub-id pub-id-type="doi">10.1186/s13059-018-1571-5</pub-id><pub-id pub-id-type="pmid">30404663</pub-id></element-citation></ref><ref id="bib37"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Westoby</surname> <given-names>J</given-names></name><name><surname>Artemov</surname> <given-names>P</given-names></name><name><surname>Hemberg</surname> <given-names>M</given-names></name><name><surname>Ferguson-Smith</surname> <given-names>A</given-names></name></person-group><year iso-8601-date="2020">2020</year><article-title>Obstacles to detecting isoforms using full-length scRNA-seq data</article-title><source>Genome Biology</source><volume>21</volume><elocation-id>74</elocation-id><pub-id pub-id-type="doi">10.1186/s13059-020-01981-w</pub-id><pub-id pub-id-type="pmid">32293520</pub-id></element-citation></ref><ref id="bib38"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Xiong</surname> <given-names>HY</given-names></name><name><surname>Barash</surname> <given-names>Y</given-names></name><name><surname>Frey</surname> <given-names>BJ</given-names></name></person-group><year iso-8601-date="2011">2011</year><article-title>Bayesian prediction of tissue-regulated splicing using RNA sequence and cellular context</article-title><source>Bioinformatics</source><volume>27</volume><fpage>2554</fpage><lpage>2562</lpage><pub-id pub-id-type="doi">10.1093/bioinformatics/btr444</pub-id><pub-id pub-id-type="pmid">21803804</pub-id></element-citation></ref><ref id="bib39"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Zenklusen</surname> <given-names>D</given-names></name><name><surname>Larson</surname> <given-names>DR</given-names></name><name><surname>Singer</surname> <given-names>RH</given-names></name></person-group><year iso-8601-date="2008">2008</year><article-title>Single-RNA counting reveals alternative modes of gene expression in yeast</article-title><source>Nature Structural &amp; Molecular Biology</source><volume>15</volume><fpage>1263</fpage><lpage>1271</lpage><pub-id pub-id-type="doi">10.1038/nsmb.1514</pub-id><pub-id pub-id-type="pmid">19011635</pub-id></element-citation></ref><ref id="bib40"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Zhang</surname> <given-names>X</given-names></name><name><surname>Xu</surname> <given-names>C</given-names></name><name><surname>Yosef</surname> <given-names>N</given-names></name></person-group><year iso-8601-date="2019">2019</year><article-title>Simulating multiple faceted variability in single cell RNA sequencing</article-title><source>Nature Communications</source><volume>10</volume><fpage>2611</fpage><lpage>2627</lpage><pub-id pub-id-type="doi">10.1038/s41467-019-10500-w</pub-id><pub-id pub-id-type="pmid">31197158</pub-id></element-citation></ref><ref id="bib41"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Ziegenhain</surname> <given-names>C</given-names></name><name><surname>Vieth</surname> <given-names>B</given-names></name><name><surname>Parekh</surname> <given-names>S</given-names></name><name><surname>Reinius</surname> <given-names>B</given-names></name><name><surname>Guillaumet-Adkins</surname> <given-names>A</given-names></name><name><surname>Smets</surname> <given-names>M</given-names></name><name><surname>Leonhardt</surname> <given-names>H</given-names></name><name><surname>Heyn</surname> <given-names>H</given-names></name><name><surname>Hellmann</surname> <given-names>I</given-names></name><name><surname>Enard</surname> <given-names>W</given-names></name></person-group><year iso-8601-date="2017">2017</year><article-title>Comparative analysis of Single-Cell RNA sequencing methods</article-title><source>Molecular Cell</source><volume>65</volume><fpage>631</fpage><lpage>643</lpage><pub-id pub-id-type="doi">10.1016/j.molcel.2017.01.023</pub-id><pub-id pub-id-type="pmid">28212749</pub-id></element-citation></ref></ref-list></back><sub-article article-type="decision-letter" id="sa1"><front-stub><article-id pub-id-type="doi">10.7554/eLife.54603.sa1</article-id><title-group><article-title>Decision letter</article-title></title-group><contrib-group><contrib contrib-type="editor"><name><surname>Churchman</surname><given-names>L Stirling</given-names></name><role>Reviewing Editor</role><aff><institution>Harvard Medical School</institution><country>United States</country></aff></contrib></contrib-group></front-stub><body><boxed-text><p>In the interests of transparency, eLife publishes the most substantive revision requests and the accompanying author responses.</p></boxed-text><p><bold>Acceptance summary:</bold></p><p>The manuscript provides substantial value for the splicing community through demonstrating that previous reports of binary splicing in single cells largely result from technical limitations of single-cell RNA-seq (scRNA-seq). Importantly, the findings provide a path forward for future analysis of alternative splicing regulation in single cells.</p><p><bold>Decision letter after peer review:</bold></p><p>Thank you for submitting your article &quot;Coverage-dependent bias creates the appearance of binary splicing in single cells&quot; for consideration by <italic>eLife</italic>. Your article has been reviewed by two peer reviewers, one of whom is a member of our Board of Reviewing Editors, and the evaluation has been overseen by Patricia Wittkopp as the Senior Editor. The reviewers have opted to remain anonymous.</p><p>The reviewers have discussed the reviews with one another and the Reviewing Editor has drafted this decision to help you prepare a revised submission.</p><p>Summary:</p><p>In this manuscript, Najar et al. demonstrate that previous reports of binary splicing in single cells largely result from technical limitations of single-cell RNA-seq (scRNA-seq). The authors challenge the rigorousness of prior published conclusions related to the occurrence of &quot;bimodal&quot; splicing among isogenic cells based on single-cell RNA sequencing – bimodal referring to a situation in which individual cells express either one or the other of two mRNA isoforms, with few cells expressing both isoforms. While previous studies observed frequent bimodal splicing, this study concludes that bimodal patterns arise almost entirely from technical limitations of single cell RNA-seq library preparation and sequencing, particularly the limited fraction of mRNA molecules that are captured by these approaches. The authors develop a filtering approach that allows to identify exons that can be accurately analyzed for splicing in single cells.</p><p>This manuscript has important implications for the analysis of alternative splicing regulation in single cells. The analyses described are thoughtful and carefully done, the Materials and methods are very clearly described, and the data presented are fairly convincing. However, there are a few issues that need to be addressed for a fully satisfactory treatment of this subject.</p><p>Essential revisions:</p><p>1) The authors analyze five previously published scRNA-seq datasets (Chen, Lescroart, Trapnell, Song and Fletcher). The authors should explain why these specific datasets were chosen, and the analysis should be extended to the dataset described in Shalek et al., 2013), which was the first report of widespread bimodality in splicing. A table should be included listing how many examples of bimodal splicing were reported in each original paper, how many examples pass the authors' filters, and how many of these are bimodal. In the examples shown in Figure 3F and J, bimodal splicing appears to occur between cells in different states but not between cells in the same state. Additional discussion should be included related to the fundamental issue of whether or not the authors' analysis supports the existence of any authentic examples of bimodal splicing in isogenic cells which are in the same cell state.</p><p>2) A few other sources of variability that could impact the inference of splicing patterns in individual cells should be considered by the authors:</p><p>a) &quot;We assume that in each cell, the expected number of reads covering a splice junction is the same as the number of reads expected to cover each nucleotide.&quot; This ignores the fact that alternative splicing junctions may have a lower fraction of mappable, because the exclusion junction shares sequence with each of the inclusion junctions, potentially yielding an increased frequency of multi-mapping (or mis-mapping) of reads deriving from alternative isoforms. How does this phenomenon impact detection of bimodal splicing?</p><p>b) &quot;We assume that the distribution of reads is expected to be uniform across the transcript.&quot; This is another assumption that needs to be explored, since the density of RNA-seq reads along transcripts is notoriously variable. The authors could model the empirical variability in read density along constitutive portions of transcripts in each dataset and apply this model to address how this variability impacts inference of splicing levels.</p><p>c) Mammalian gene expression is intrinsically bursty (e.g., PMID 30602787). The authors should discuss whether their analysis captures this effect or how burstiness might impact splicing detection.</p><p>d) The amount of pre-mRNA varies across genes and conditions in scRNA-seq datasets (e.g., PMID 30089906). How might this variability influence the results?</p><p>3) The authors' validation of their filtering procedure is underdeveloped. The main approach is based on the intuition that genes with truly bimodal splicing should display a higher degree of coregulation, for which the covariance structure of the data is used as a proxy. In Figure 3I, some of the controls are not discussed in the text. Furthermore, the random control appears to perform nearly as well as the true filter in the Trapnell and Song datasets, while in the Chen dataset it is not clear that the filtering leads to much improvement compared to no filter. If this line of argument is to be pursued, a more rigorous analysis and interpretation of the filter's performance relative to controls (perhaps relating to cell subtypes) is needed in the text. Below are specific questions regarding this analysis:</p><p>a) In Figure 3I, the authors observe that &quot;the combined filter recovered more evidence of co-regulation than the simple read-based filter&quot;. However, the difference between the combined filter and the random filter is not very pronounced. Is this statistically significant?</p><p>b) Could the difference between the combined filter and the read-based filter result in part from the lower number of observations?</p><p>c) In addition, can the authors justify why this analysis was performed on only 3/5 datasets?</p><p>d) It would be helpful to indicate in the text how many exons pass the filters in each dataset and/or what proportion of exons covered this represents.</p></body></sub-article><sub-article article-type="reply" id="sa2"><front-stub><article-id pub-id-type="doi">10.7554/eLife.54603.sa2</article-id><title-group><article-title>Author response</article-title></title-group></front-stub><body><disp-quote content-type="editor-comment"><p>Essential revisions:</p><p>1) The authors analyze five previously published scRNA-seq datasets (Chen, Lescroart, Trapnell, Song and Fletcher). The authors should explain why these specific datasets were chosen, and the analysis should be extended to the dataset described in Shalek et al., 2013), which was the first report of widespread bimodality in splicing.</p></disp-quote><p>We began studying splicing in scRNA-seq as part of a separate project, and most of the datasets included here – Chen, Song, Lescroart, and Fletcher – were chosen because they had full-length scRNA-seq of neural or cardiomyocyte differentiation timecourses that were relevant to that project. We now begin the Results section with this explanation of the initial motivation. When we implemented the Census normalization described by Qiu et al., 2017, we included the Trapnell dataset that was the basis of their analysis. Initially we were hesitant to include the Shalek et al., 2013 dataset due to its very small number of cells. However, we agree that this paper was an important, early contribution to the field and we have included analysis of their data in the updated version of the paper. We report similar observations in this dataset that we found in the others.</p><disp-quote content-type="editor-comment"><p>A table should be included listing how many examples of bimodal splicing were reported in each original paper, how many examples pass the authors' filters, and how many of these are bimodal. In the examples shown in Figure 3F and J, bimodal splicing appears to occur between cells in different states but not between cells in the same state. Additional discussion should be included related to the fundamental issue of whether or not the authors' analysis supports the existence of any authentic examples of bimodal splicing in isogenic cells which are in the same cell state.</p></disp-quote><p>We have substantially changed our presentation to address this important point. Our revision includes a new table showing the proportion of bimodal observations before filtering and its drastic decrease upon selection of good data. We have added substantial analysis to look specifically at bimodal splicing in cells in the same state, first clustering the cells by gene expression to separate cell types.</p><p>Of the six datasets analysed for this paper, only Shalek et al., 2013 and Song et al., 2017 made specific claims of bimodal splicing observations. One challenge is in finding a good definition of bimodality; the fit test used in Song et al. was prone to calling splicing bimodal if it did not fit an unrealistically narrow set of parameters for unimodality. For this reason, we had previously avoided making a direct comparison to the individual classifications in their paper. To create our new table, we chose a definition of bimodality based on the distribution of the data towards extreme values, to standardize across datasets.</p><p>As shown in the new table and accompanying text in our revised manuscript, we found that the number of exons classified as bimodal dropped from 25-50% of exons to none or only a handful of exons in each cell type among all datasets, after we applied our filters. This new analysis supports our previous conclusion that the vast majority of events classified as bimodal are the result of the distortion caused by low capture efficiency in single cells. We are hesitant to make an absolute claim that binary, bimodal splicing does not exist among homogeneous cells of the same type, but it seems possible that the reported examples all represent technical errors or hidden cell subtypes. In line with this, we found that the only remaining examples of binary, bimodal splicing in the Chen dataset represented sex-specific splicing differences. A detailed version of the analysis presented in our revised manuscript is available in our github:</p><p><ext-link ext-link-type="uri" xlink:href="https://github.com/lareaulab/sc_binary_splicing/blob/master/results/data_analysis/Table_1_and_2_reviewed.ipynb">https://github.com/lareaulab/sc_binary_splicing/blob/master/results/data_analysis/Table_1_and_2_reviewed.ipynb</ext-link></p><disp-quote content-type="editor-comment"><p>2) A few other sources of variability that could impact the inference of splicing patterns in individual cells should be considered by the authors:</p><p>a) &quot;We assume that in each cell, the expected number of reads covering a splice junction is the same as the number of reads expected to cover each nucleotide.&quot; This ignores the fact that alternative splicing junctions may have a lower fraction of mappable, because the exclusion junction shares sequence with each of the inclusion junctions, potentially yielding an increased frequency of multi-mapping (or mis-mapping) of reads deriving from alternative isoforms. How does this phenomenon impact detection of bimodal splicing?</p></disp-quote><p>This is an important point, and we have updated our analysis to use the expected number of reads covering a splice junction. We calculated this number (for each cell individually) as the number of reads covering all constitutive splice junctions, divided by the estimated number of splice junctions present in the pool of mRNA molecules in the cell. The number of constitutive splice junctions per gene was multiplied by the number of estimated mRNA molecules obtained from the Census normalization.</p><p>As the reviewer noted, this new value is slightly lower than the reads per nucleotide that we used in the previous version of the manuscript, but closely correlated, and our new method did not change our results.</p><disp-quote content-type="editor-comment"><p>b) &quot;We assume that the distribution of reads is expected to be uniform across the transcript.&quot; This is another assumption that needs to be explored, since the density of RNA-seq reads along transcripts is notoriously variable. The authors could model the empirical variability in read density along constitutive portions of transcripts in each dataset and apply this model to address how this variability impacts inference of splicing levels.</p></disp-quote><p>This was poorly phrased in our text. Our simulation does include variation of read coverage along the transcripts – we sample the reads from a binomial distribution. We derive the probability of this binomial distribution from the average coverage. We have updated the Materials and methods text to make this clear.</p><disp-quote content-type="editor-comment"><p>c) Mammalian gene expression is intrinsically bursty (e.g., PMID 30602787). The authors should discuss whether their analysis captures this effect or how burstiness might impact splicing detection.</p></disp-quote><p>This is an interesting idea. Although our overall conclusion is that very little binary splicing exists biologically, transcriptional bursting could lead to correlated splicing outcomes in a certain time window. We added an analysis of the effect of transcriptional burst parameters (size and frequency of bursts) on the incidence of binary splicing observations (Figure 2—figure supplement 1C, D). We found that genes with large bursts or frequent bursts had fewer binary observations, but this effect was due to their (directly related) higher expression and mRNA abundance. We did not see any effect of burstiness beyond overall expression in a regression analysis.</p><disp-quote content-type="editor-comment"><p>d) The amount of pre-mRNA varies across genes and conditions in scRNA-seq datasets (e.g., PMID 30089906). How might this variability influence the results?</p></disp-quote><p>Our results show that the uncertainty of the observed Ψ (and the likelihood of binary observations) is determined by the number of recovered, informative mRNA molecules. We use the Census approach to estimate the number of recovered mRNA molecules, but this could be distorted slightly by differences in pre-mRNA abundance, because some reads coming from pre-mRNA will map to exons and thus contribute to the TPM and Census counts. These pre-mRNAs will not be informative about the splicing outcome. So, more pre-mRNA would lead us to overestimate the number of recovered, informative mRNAs. However, our filtering approach does account for such situations, because we consider the number of splice junction reads that we actually see, and filter out alternative exons where the number of splice junction reads is lower than we would expect from the estimated number of mRNAs.</p><disp-quote content-type="editor-comment"><p>3) The authors' validation of their filtering procedure is underdeveloped. The main approach is based on the intuition that genes with truly bimodal splicing should display a higher degree of coregulation, for which the covariance structure of the data is used as a proxy. In Figure 3I, some of the controls are not discussed in the text. Furthermore, the random control appears to perform nearly as well as the true filter in the Trapnell and Song datasets, while in the Chen dataset it is not clear that the filtering leads to much improvement compared to no filter. If this line of argument is to be pursued, a more rigorous analysis and interpretation of the filter's performance relative to controls (perhaps relating to cell subtypes) is needed in the text.</p></disp-quote><p>We have replaced our coregulation-based analysis of the filters with a new approach that more carefully examines how the filters remove exons whose technical variance overwhelms biological variance, and we show that the measurements of the remaining exons allow identification of differential splicing between cell types. This was a substantial new effort and we hope it addresses the reviewers’ thoughtful comments. Importantly, we clarify our main point that the interpretation of a certain number of splice junction reads is quite different between different datasets. More detailed responses are below:</p><disp-quote content-type="editor-comment"><p>Below are specific questions regarding this analysis:</p><p>a) In Figure 3I, the authors observe that &quot;the combined filter recovered more evidence of co-regulation than the simple read-based filter&quot;. However, the difference between the combined filter and the random filter is not very pronounced. Is this statistically significant?</p></disp-quote><p>We re-structured the validation approach for our filtering procedure. This new approach focuses on the biological significance of the variability of the selected observations. For this, we tested if the exons selected by the filtering procedure are more likely to show statistically significant Ψ differences between cell types, than the exons that are not selected, using the Kruskal-Wallis analysis of variance test for assessing Ψ changes between cell types. (This test reflects the variance of the measurements; exons with noisy data are just as likely to have true biological changes, but the noisy data are unlikely to produce a significant p-value for these changes.) We also evaluated the filters using the autocorrelation test described in DeTomaso et al., 2019, calculating the p-values with an approach that explicitly lessens the effect of missing observations.</p><p>Our text was also changed to clarify the main purpose of this section. The goal of this analysis is to show that the naive use of the number of splice junction reads as the main indicator of the quality of Ψ observations can be misleading. Variation in capture efficiency, amplification and read coverage between datasets can lead to differences in the relationship between captured mRNA molecules and observed junction read coverage. As a result, the observation of a fixed number of splice junction reads can have widely different implications between different datasets. This is best exemplified in the differences between the Chen and Song datasets. The former has a higher median of estimated mRNA molecules captured per cell than the latter, but the latter has a much higher number of reads, possibly due to overamplification, As a result, a requirement of 10 reads per splice junction in the Chen dataset is a strict threshold that captures only the most informative alternative splicing events. In contrast, the same number of reads in the Song dataset is a loose threshold that is met by many exons that we suspect that are observed in a very small number of captured mRNAs per cell.</p><p>Therefore, since the analysis in the earlier sections show that the capture of mRNA molecules is one of the most important limiting factors for accurately observing splicing events, we propose to take a data-driven approach to the study of splicing in single cells. Instead of relying only on the number of splice junction reads, biologists should also consider other factors such as the number of mRNA molecules captured in the sequencing experiment, and the read coverage depth.</p><p>We show that a group of exons selected based on the number of estimated captured mRNA molecules consistently recovers exons with a high incidence of significant differential splicing. However, selecting exons based on a flat threshold of splice junction leads to widely different results between datasets. These results open new questions and possibilities for statistical analysis of single cell splicing based on a better understanding of the data, its biases and its limitations.</p><disp-quote content-type="editor-comment"><p>b) Could the difference between the combined filter and the read-based filter result in part from the lower number of observations?</p></disp-quote><p>This should not be a strong concern for our new validation approach. We did not observe a strong correlation between the number of observations and the significance (p-value) of differential splicing with the Kruskal-Wallis test. Moreover, our autocorrelation test implementation specifically accounts for differences in the number of observations for the calculation of p-values. The results from both tests are consistent.</p><disp-quote content-type="editor-comment"><p>c) In addition, can the authors justify why this analysis was performed on only 3/5 datasets?</p></disp-quote><p>The Lescroart et al. dataset was not considered in this analysis because the two cell types in this study are very similar. Only three exons had a splicing change higher than 0.1. The Fletcher et al. dataset, with very low mRNA recovery, was not included in this analysis because only three exons pass the 10 mRNA filter. Finally, the Shalek dataset (which we added in this revision) is not included due to its low number of cells (13 that are kept after the Census normalization). These reasons are briefly addressed in the updated version of the manuscript.</p><disp-quote content-type="editor-comment"><p>d) It would be helpful to indicate in the text how many exons pass the filters in each dataset and/or what proportion of exons covered this represents.</p></disp-quote><p>We added a new table showing this (Table 1).</p></body></sub-article></article>