<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE article PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Archiving and Interchange DTD with MathML3 v1.2 20190208//EN"  "JATS-archivearticle1-mathml3.dtd"><article xmlns:ali="http://www.niso.org/schemas/ali/1.0/" xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" article-type="research-article" dtd-version="1.2"><front><journal-meta><journal-id journal-id-type="nlm-ta">elife</journal-id><journal-id journal-id-type="publisher-id">eLife</journal-id><journal-title-group><journal-title>eLife</journal-title></journal-title-group><issn publication-format="electronic" pub-type="epub">2050-084X</issn><publisher><publisher-name>eLife Sciences Publications, Ltd</publisher-name></publisher></journal-meta><article-meta><article-id pub-id-type="publisher-id">79665</article-id><article-id pub-id-type="doi">10.7554/eLife.79665</article-id><article-categories><subj-group subj-group-type="display-channel"><subject>Research Article</subject></subj-group><subj-group subj-group-type="heading"><subject>Computational and Systems Biology</subject></subj-group><subj-group subj-group-type="heading"><subject>Evolutionary Biology</subject></subj-group></article-categories><title-group><article-title>Artificial selection methods from evolutionary computing show promise for directed evolution of microbes</article-title></title-group><contrib-group><contrib contrib-type="author" corresp="yes" id="author-277409"><name><surname>Lalejini</surname><given-names>Alexander</given-names></name><contrib-id authenticated="true" contrib-id-type="orcid">https://orcid.org/0000-0003-0994-2718</contrib-id><email>lalejini@umich.edu</email><xref ref-type="aff" rid="aff1">1</xref><xref ref-type="aff" rid="aff2">2</xref><xref ref-type="fn" rid="con1"/><xref ref-type="fn" rid="conf1"/></contrib><contrib contrib-type="author" id="author-279028"><name><surname>Dolson</surname><given-names>Emily</given-names></name><xref ref-type="aff" rid="aff3">3</xref><xref ref-type="aff" rid="aff4">4</xref><xref ref-type="fn" rid="con2"/><xref ref-type="fn" rid="conf1"/></contrib><contrib contrib-type="author" id="author-279029"><name><surname>Vostinar</surname><given-names>Anya E</given-names></name><contrib-id authenticated="true" contrib-id-type="orcid">https://orcid.org/0000-0001-7216-5283</contrib-id><xref ref-type="aff" rid="aff5">5</xref><xref ref-type="other" rid="fund2"/><xref ref-type="fn" rid="con3"/><xref ref-type="fn" rid="conf2"/></contrib><contrib contrib-type="author" corresp="yes" id="author-209797"><name><surname>Zaman</surname><given-names>Luis</given-names></name><email>zamanlh@umich.edu</email><xref ref-type="aff" rid="aff1">1</xref><xref ref-type="aff" rid="aff2">2</xref><xref ref-type="other" rid="fund1"/><xref ref-type="fn" rid="con4"/><xref ref-type="fn" rid="conf1"/></contrib><aff id="aff1"><label>1</label><institution-wrap><institution-id institution-id-type="ror">https://ror.org/00jmfr291</institution-id><institution>Department of Ecology and Evolutionary Biology, University of Michigan</institution></institution-wrap><addr-line><named-content content-type="city">Ann Arbor</named-content></addr-line><country>United States</country></aff><aff id="aff2"><label>2</label><institution-wrap><institution-id institution-id-type="ror">https://ror.org/00jmfr291</institution-id><institution>Center for the Study of Complex Systems, University of Michigan</institution></institution-wrap><addr-line><named-content content-type="city">Ann Arbor</named-content></addr-line><country>United States</country></aff><aff id="aff3"><label>3</label><institution-wrap><institution-id institution-id-type="ror">https://ror.org/05hs6h993</institution-id><institution>Department of Computer Science and Engineering, Michigan State University</institution></institution-wrap><addr-line><named-content content-type="city">East Lansing</named-content></addr-line><country>United States</country></aff><aff id="aff4"><label>4</label><institution-wrap><institution-id institution-id-type="ror">https://ror.org/05hs6h993</institution-id><institution>Program in Ecology, Evolution, and Behavior, Michigan State University</institution></institution-wrap><addr-line><named-content content-type="city">East Lansing</named-content></addr-line><country>United States</country></aff><aff id="aff5"><label>5</label><institution-wrap><institution-id institution-id-type="ror">https://ror.org/03jep7677</institution-id><institution>Computer Science Department, Carleton College</institution></institution-wrap><addr-line><named-content content-type="city">Northfield</named-content></addr-line><country>United States</country></aff></contrib-group><contrib-group content-type="section"><contrib contrib-type="editor"><name><surname>Ogbunugafor</surname><given-names>C Brandon</given-names></name><role>Reviewing Editor</role><aff><institution-wrap><institution-id institution-id-type="ror">https://ror.org/03v76x132</institution-id><institution>Yale University</institution></institution-wrap><country>United States</country></aff></contrib><contrib contrib-type="senior_editor"><name><surname>Landry</surname><given-names>Christian R</given-names></name><role>Senior Editor</role><aff><institution-wrap><institution-id institution-id-type="ror">https://ror.org/04sjchr03</institution-id><institution>Université Laval</institution></institution-wrap><country>Canada</country></aff></contrib></contrib-group><pub-date publication-format="electronic" date-type="publication"><day>02</day><month>08</month><year>2022</year></pub-date><pub-date pub-type="collection"><year>2022</year></pub-date><volume>11</volume><elocation-id>e79665</elocation-id><history><date date-type="received" iso-8601-date="2022-04-21"><day>21</day><month>04</month><year>2022</year></date><date date-type="accepted" iso-8601-date="2022-08-01"><day>01</day><month>08</month><year>2022</year></date></history><pub-history><event><event-desc>This manuscript was published as a preprint at bioRxiv.</event-desc><date date-type="preprint" iso-8601-date="2022-04-02"><day>02</day><month>04</month><year>2022</year></date><self-uri content-type="preprint" xlink:href="https://doi.org/10.1101/2022.04.01.486727"/></event></pub-history><permissions><copyright-statement>© 2022, Lalejini et al</copyright-statement><copyright-year>2022</copyright-year><copyright-holder>Lalejini et al</copyright-holder><ali:free_to_read/><license xlink:href="http://creativecommons.org/licenses/by/4.0/"><ali:license_ref>http://creativecommons.org/licenses/by/4.0/</ali:license_ref><license-p>This article is distributed under the terms of the <ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/licenses/by/4.0/">Creative Commons Attribution License</ext-link>, which permits unrestricted use and redistribution provided that the original author and source are credited.</license-p></license></permissions><self-uri content-type="pdf" xlink:href="elife-79665-v2.pdf"/><abstract><p>Directed microbial evolution harnesses evolutionary processes in the laboratory to construct microorganisms with enhanced or novel functional traits. Attempting to direct evolutionary processes for applied goals is fundamental to evolutionary computation, which harnesses the principles of Darwinian evolution as a general-purpose search engine for solutions to challenging computational problems. Despite their overlapping approaches, artificial selection methods from evolutionary computing are not commonly applied to living systems in the laboratory. In this work, we ask whether parent selection algorithms—procedures for choosing promising progenitors—from evolutionary computation might be useful for directing the evolution of microbial populations when selecting for multiple functional traits. To do so, we introduce an agent-based model of directed microbial evolution, which we used to evaluate how well three selection algorithms from evolutionary computing (tournament selection, lexicase selection, and non-dominated elite selection) performed relative to methods commonly used in the laboratory (elite and top 10% selection). We found that multiobjective selection techniques from evolutionary computing (lexicase and non-dominated elite) generally outperformed the commonly used directed evolution approaches when selecting for multiple traits of interest. Our results motivate ongoing work transferring these multiobjective selection procedures into the laboratory and a continued evaluation of more sophisticated artificial selection methods.</p></abstract><abstract abstract-type="plain-language-summary"><title>eLife digest</title><p>Humans have long known how to co-opt evolutionary processes for their own benefit. Carefully choosing which individuals to breed so that beneficial traits would take hold, they have domesticated dogs, wheat, cows and many other species to fulfil their needs.</p><p>Biologists have recently refined these ‘artificial selection’ approaches to focus on microorganisms. The hope is to obtain microbes equipped with desirable features, such as the ability to degrade plastic or to produce valuable molecules. However, existing ways of using artificial selection on microbes are limited and sometimes not effective.</p><p>Computer scientists have also harnessed evolutionary principles for their own purposes, developing highly effective artificial selection protocols that are used to find solutions to challenging computational problems. Yet because of limited communication between the two fields, sophisticated selection protocols honed over decades in evolutionary computing have yet to be evaluated for use in biological populations.</p><p>In their work, Lalejini et al. compared popular artificial selection protocols developed for either evolutionary computing or work with microorganisms. Two computing selection methods showed promise for improving directed evolution in the laboratory. Crucially, these selection protocols differed from conventionally used methods by selecting for both diversity and performance, rather than performance alone. These promising approaches are now being tested in the laboratory, with potentially far-reaching benefits for medical, biotech, and agricultural applications.</p><p>While evolutionary computing owes its origins to our understanding of biological processes, it has much to offer in return to help us harness those same mechanisms. The results by Lalejini et al. help to bridge the gap between computational and biological communities who could both benefit from increased collaboration.</p></abstract><kwd-group kwd-group-type="author-keywords"><kwd>artificial selection</kwd><kwd>directed evolution</kwd><kwd>digital organisms</kwd><kwd>agent-based modeling</kwd><kwd>evolutionary computing</kwd></kwd-group><kwd-group kwd-group-type="research-organism"><title>Research organism</title><kwd>None</kwd></kwd-group><funding-group><award-group id="fund1"><funding-source><institution-wrap><institution-id institution-id-type="FundRef">http://dx.doi.org/10.13039/100000001</institution-id><institution>National Science Foundation</institution></institution-wrap></funding-source><award-id>DEB-1813069</award-id><principal-award-recipient><name><surname>Zaman</surname><given-names>Luis</given-names></name></principal-award-recipient></award-group><award-group id="fund2"><funding-source><institution-wrap><institution-id institution-id-type="FundRef">http://dx.doi.org/10.13039/100000001</institution-id><institution>National Science Foundation</institution></institution-wrap></funding-source><award-id>MCB-1750125</award-id><principal-award-recipient><name><surname>Vostinar</surname><given-names>Anya E</given-names></name></principal-award-recipient></award-group><funding-statement>The funders had no role in study design, data collection and interpretation, or the decision to submit the work for publication.</funding-statement></funding-group><custom-meta-group><custom-meta specific-use="meta-only"><meta-name>Author impact statement</meta-name><meta-value>Multiobjective artificial selection methods from evolutionary computing show promise for improving directed evolution outcomes when selecting for multiple traits of interest.</meta-value></custom-meta></custom-meta-group></article-meta></front><body><sec id="s1" sec-type="intro"><title>Introduction</title><p>Directed evolution harnesses laboratory artificial selection to generate biomolecules or organisms with desirable functional traits (<xref ref-type="bibr" rid="bib3">Arnold, 1998</xref>; <xref ref-type="bibr" rid="bib78">Sánchez et al., 2021</xref>). The scale and specificity of artificial selection has been revolutionized by a deeper understanding of evolutionary and molecular biology in combination with technological innovations in sequencing, data processing, laboratory techniques, and culturing devices. These advances have cultivated growing interest in directing the evolution of whole microbial communities with functions that can be harnessed in medical, biotech, and agricultural domains (<xref ref-type="bibr" rid="bib78">Sánchez et al., 2021</xref>).</p><p>Attempting to direct evolutionary processes for applied goals has not been limited to biological systems. The field of <italic>evolutionary computing</italic> harnesses the principles of Darwinian evolution as a general-purpose search engine to find solutions to challenging computational and engineering problems (<xref ref-type="bibr" rid="bib28">Fogel, 2000</xref>). As in evolutionary computing, directed evolution in the laboratory begins with a library—or population—of variants (e.g., communities, genomes, or molecules). Variants are scored based on a phenotypic trait (or set of traits) of interest, and the variants with the ‘best’ traits are chosen to produce the next generation. Such approaches to picking progenitors are known as <italic>elitist</italic> selection algorithms in evolutionary computing (<xref ref-type="bibr" rid="bib5">Baeck et al., 1997</xref>). Notably, evolutionary computing research has shown that these elitist approaches to artificial selection can be suboptimal in complex search spaces. On their own, elitist selection schemes fail to maintain diversity, which can lead to populations becoming trapped on suboptimal regions of the search space because of a loss of variation for selection to act on (<xref ref-type="bibr" rid="bib59">Lehman and Stanley, 2011a</xref>; <xref ref-type="bibr" rid="bib47">Hernandez et al., 2022b</xref>). Elitist selection schemes also inherently lack mechanisms to balance selection across multiple objectives. These observations suggest that other approaches to selection may improve directed microbial evolution outcomes. Fortunately, artificial selection methods (i.e., parent selection algorithms or selection schemes) are intensely studied in evolutionary computing, and many in silico selection techniques have been developed that improve the quality and diversity of evolved solutions (e.g.<italic>,</italic> <xref ref-type="bibr" rid="bib81">Spector, 2012</xref>; <xref ref-type="bibr" rid="bib68">Mouret and Clune, 2015</xref>; <xref ref-type="bibr" rid="bib51">Hornby, 2006</xref>; <xref ref-type="bibr" rid="bib33">Goldberg and Richardson, 1987</xref>; <xref ref-type="bibr" rid="bib32">Goings et al., 2012</xref>; <xref ref-type="bibr" rid="bib60">Lehman and Stanley, 2011b</xref>).</p><p>Given their success, we expect that artificial selection methods developed for evolutionary computing will improve the efficacy of directed microbial evolution in the laboratory, especially when simultaneously selecting for more than one trait (a common goal in evolutionary computation). Such techniques may also be useful in the laboratory to simultaneously select for multiple functions of interest, different physical and growth characteristics, robustness to perturbations, or the ability to grow in a range of environments. Directed microbial evolution, however, differs from evolutionary computing in ways that may inhibit our ability to predict which techniques are most appropriate for the laboratory. For example, candidate solutions (i.e., individuals) in evolutionary computing are evaluated one by one, resulting in high-resolution genotypic and phenotypic information that can be used for selecting parents, which are then copied, recombined, and mutated to produce offspring. In directed microbial evolution, individual-level evaluation is generally intractable at scales required for de novo evolution; as such, evaluation often occurs at the population level, and the highest performing populations are partitioned (instead of copied) to create ‘offspring’ populations. Moreover, when traits of interest do not benefit individuals’ reproductive success, population-level artificial selection may conflict with individual-level selection, which increases the difficulty of steering evolution.</p><p>Here, we ask whether artificial selection techniques developed for evolutionary computing might be useful for directing the evolution of microbial populations when selecting for multiple traits of interest. We examine selection both for enhancing multiple traits in a single microbial strain and for producing a set of diverse strains that each specialize in different traits. To do so, we developed an agent-based model of directed evolution wherein we evolve populations of self-replicating computer programs performing computational tasks that contribute either to the phenotype of the individual or the phenotype of the population. Using our model, we evaluated how well three selection techniques from evolutionary computing (tournament, lexicase, and non-dominated elite selection) performed in a setting that mimics directed evolution on functions measurable at the population level. Tournament selection chooses progenitors by selecting the most performant candidates in each of a series of randomly formed ‘tournaments.’ Both lexicase and non-dominated elite selection focus on propagating a diverse set of candidates that balance multiple objectives in different ways. These selection techniques are described in detail in the ‘Methods’ section.</p><p>Overall, we found that multiobjective selection techniques (lexicase and non-dominated elite selection) generally outperformed the selection schemes commonly applied to directed microbial evolution (elite and top 10%). In particular, our findings suggest that lexicase selection is a good candidate technique to translate into the laboratory, especially when aiming to evolve a diverse set of specialist microbial populations. Additionally, we found that population-level artificial selection can improve directed evolution outcomes even when traits of interest are directly selected (i.e., the traits are correlated with individual-level reproductive success).</p><p>These findings lay the foundation for strengthened communication between the evolutionary computing and directed evolution communities. The evolution of biological organisms (both natural and artificial) inspired the origination of evolutionary computation, and insights from evolutionary biology are regularly applied to evolutionary computing. As evolutionary computation has immense potential as a system for studying how to control laboratory evolution, these communities are positioned to form a virtuous cycle where insights from evolutionary computing are then applied back to directing the evolution of biological organisms. With this work, we seek to strengthen this feedback loop.</p><sec id="s1-1"><title>Directed evolution</title><p>Humans have harnessed evolution for millennia, applying artificial selection (knowingly and unknowingly) to domesticate a variety of animals, plants, and microorganisms (<xref ref-type="bibr" rid="bib49">Hill and Caballero, 1992</xref>; <xref ref-type="bibr" rid="bib16">Cobb et al., 2013</xref>; <xref ref-type="bibr" rid="bib25">Driscoll et al., 2009</xref>; <xref ref-type="bibr" rid="bib63">Libkind et al., 2011</xref>). More recently, a deeper understanding of evolution, genetics, and molecular biology in combination with technological advances has extended the use of artificial selection beyond domestication and conventional selective breeding. For example, artificial selection has been applied to biomolecules (<xref ref-type="bibr" rid="bib6">Beaudry and Joyce, 1992</xref>; <xref ref-type="bibr" rid="bib15">Chen and Arnold, 1993</xref>; <xref ref-type="bibr" rid="bib27">Esvelt et al., 2011</xref>), genetic circuits (<xref ref-type="bibr" rid="bib96">Yokobayashi et al., 2002</xref>), microorganisms (<xref ref-type="bibr" rid="bib76">Ratcliff et al., 2012</xref>), viruses (<xref ref-type="bibr" rid="bib11">Burrowes et al., 2019</xref>; <xref ref-type="bibr" rid="bib64">Maheshri et al., 2006</xref>), and whole microbial communities (<xref ref-type="bibr" rid="bib34">Goodnight, 1990</xref>; <xref ref-type="bibr" rid="bib83">Swenson et al., 2000</xref>; <xref ref-type="bibr" rid="bib78">Sánchez et al., 2021</xref>). In this work, we focus on directed microbial evolution.</p><p>One approach to artificial selection is to configure organisms’ environment such that desirable traits are linked to growth or survival (referred to as ‘selection-based methods’; <xref ref-type="bibr" rid="bib87">Wang et al., 2021</xref>). In some sense, these selection-based methods passively harness artificial selection as individuals with novel or enhanced functions of interest will tend to outcompete other conspecifics without requiring intervention beyond initial environmental manipulations. In combination with continuous culture devices, this approach to directing evolution can achieve high-throughput microbial directed evolution, ‘automatically’ evaluating many variants without manual analysis (<xref ref-type="bibr" rid="bib87">Wang et al., 2021</xref>; <xref ref-type="bibr" rid="bib85">Toprak et al., 2012</xref>; <xref ref-type="bibr" rid="bib22">DeBenedictis et al., 2021</xref>). For example, to study mechanisms of antibiotic resistance, researchers have employed morbidostats that continuously monitor the growth of evolving microbial populations and dynamically adjust antibiotic concentrations to maintain constant selection on further resistance (<xref ref-type="bibr" rid="bib85">Toprak et al., 2012</xref>). However, linking desirable traits to organism survival can be challenging, requiring substantial knowledge about the organisms and the functions of interest.</p><p>Similar to conventional evolutionary algorithms, ‘screening-based methods’ of directed evolution assess each variant individually and choose the most promising to propagate (<xref ref-type="bibr" rid="bib87">Wang et al., 2021</xref>). Overall, screening-based methods are more versatile than selection-based methods because traits that are desirable can be directly discerned. However, screening requires more manual intervention and thus limits throughput. In addition to their generality, screening-based methods also allow practitioners to more easily balance the relative importance of multiple objectives. For example, plant breeders might simultaneously balance screening for yield, seed size, drought tolerance, etc. (<xref ref-type="bibr" rid="bib18">Cooper et al., 2014</xref>; <xref ref-type="bibr" rid="bib9">Bruce et al., 2019</xref>).</p><p>In this work, we investigate screening-based methods of directed microbial evolution as many insights and techniques from evolutionary computation are directly applicable. When directing microbial evolution, screening is applied at the population (or community) level (<xref ref-type="bibr" rid="bib94">Xie and Shou, 2021</xref>; <xref ref-type="bibr" rid="bib78">Sánchez et al., 2021</xref>). During each cycle of directed microbial evolution, newly founded populations grow over a maturation period in which members of each population reproduce, mutate, and evolve. Next, populations are assessed, and promising populations are chosen as ‘parental populations’ that will be partitioned into the next generation of ‘offspring populations.’</p><p>Screening-based artificial selection methods are analogous to parent selection algorithms or <italic>selection schemes</italic> in evolutionary computing. Evolutionary computing research has shown that the most effective selection scheme depends on a range of factors, including the number of objectives (e.g., single- versus multiobjective), the form and complexity of the search space (e.g., smooth versus rugged), and the practitioner’s goal (e.g., generating a single solution versus a suite of different solutions). Conventionally, however, screening-based methods of directing microbial evolution choose the overall ‘best’-performing populations to propagate (e.g., the single best population or the top 10%; <xref ref-type="bibr" rid="bib93">Xie et al., 2019</xref>).</p><p>To the best of our knowledge, the more sophisticated methods of choosing progenitors from evolutionary computing have not been applied to directed evolution of microbes. However, artificial selection techniques from evolutionary computing have been applied in a range of other biological applications. For example, multiobjective evolutionary algorithms have been applied to DNA sequence design (<xref ref-type="bibr" rid="bib79">Shin et al., 2005</xref>; <xref ref-type="bibr" rid="bib14">Chaves-González, 2015</xref>); however, these applications are treated as computational optimization problems. A range of selection schemes from evolutionary computing have also been proposed for both biomolecule engineering (<xref ref-type="bibr" rid="bib19">Currin et al., 2015</xref>; <xref ref-type="bibr" rid="bib36">Handl et al., 2007</xref>) and agricultural selective breeding (especially for scenarios where genetic data can be exploited) (<xref ref-type="bibr" rid="bib75">Ramasubramanian and Beavis, 2021</xref>). For example, using an NK landscape model, O’Hagan et al. evaluated the potential of elite selection, tournament selection, fitness sharing, and two rule-based learning selection schemes for selective breeding applications (<xref ref-type="bibr" rid="bib73">O’Hagan et al., 2012</xref>). Inspired by genetic algorithms, island model approaches (<xref ref-type="bibr" rid="bib84">Tanese, 1989</xref>) have been proposed for improving plant and animal breeding programs (<xref ref-type="bibr" rid="bib75">Ramasubramanian and Beavis, 2021</xref>; <xref ref-type="bibr" rid="bib95">Yabe et al., 2016</xref>), and <xref ref-type="bibr" rid="bib2">Akdemir et al., 2019</xref> applied multiobjective selection algorithms like non-dominated selection to plant and animal breeding. In each of these applications, however, artificial selection acted as screens on individuals and not whole populations; therefore, our work focuses on screening at the population level in order to test the applicability of evolutionary computing selection algorithms as general-purpose screening methods for directed microbial evolution.</p></sec></sec><sec id="s2" sec-type="methods"><title>Methods</title><p>Conducting directed evolution experiments in the laboratory can be slow and labor intensive, making it difficult to evaluate and tune new approaches to artificial selection in vitro. We could draw directly from evolutionary computing results when transferring techniques into the laboratory, but the extent to which these results would predict the efficacy (or appropriate parameterization) of a given algorithm in a laboratory setting is unclear. To fill this gap, we developed an agent-based model of directed evolution of microbes for evaluating which techniques from evolutionary computing might be most applicable in the laboratory.</p><p>Using our model of laboratory directed evolution, we investigated whether selection schemes from evolutionary computing might be useful for directed evolution of microbes. Specifically, we compared two selection schemes used in directed evolution (elite and top 10% selection) with three other methods used in evolutionary computing (tournament, lexicase, and non-dominated elite selection). Additionally, we ran two controls that ignored population-level performance.</p><p>We conducted three independent experiments. First, we evaluated the relative performance of parent selection algorithms in a conventional evolutionary computing context, which established baseline expectations for subsequent experiments using our model of laboratory directed evolution. Next, we compared parent selection algorithms using our model of laboratory directed evolution in two contexts. In the first context, we did not link population-level functions (<xref ref-type="table" rid="table1">Table 1</xref>) to organism survival to evaluate how well each parent selection algorithm performs as a screening-based method of artificial selection. In the second context, we tested whether any of the selection schemes still improve overall directed evolution outcomes even when organism survival <italic>is</italic> aligned with population-level functions.</p><table-wrap id="table1" position="float"><label>Table 1.</label><caption><title>Computational functions that conferred individual-level or population-level benefits.</title><p>The particular functions were chosen to be used in our model based on those used in the Avida system (<xref ref-type="bibr" rid="bib10">Bryson et al., 2021</xref>). In all experiments, we included two versions of ECHO (each for different input values), resulting in 22 possible functions that organisms could perform. In general, functions that confer population-level benefits are more complex (i.e., require more instructions to perform) than functions designated to confer individual-level benefits.</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="left" valign="bottom">Function</th><th align="left" valign="bottom"># Inputs</th><th align="left" valign="bottom">Benefit</th></tr></thead><tbody><tr><td align="left" valign="bottom">ECHO</td><td align="char" char="." valign="bottom">1</td><td align="left" valign="bottom">Individual</td></tr><tr><td align="left" valign="bottom">NAND</td><td align="char" char="." valign="bottom">2</td><td align="left" valign="bottom">Individual</td></tr><tr><td align="left" valign="bottom">NOT</td><td align="char" char="." valign="bottom">1</td><td align="left" valign="bottom">Population</td></tr><tr><td align="left" valign="bottom">ORNOT</td><td align="char" char="." valign="bottom">2</td><td align="left" valign="bottom">Population</td></tr><tr><td align="left" valign="bottom">AND</td><td align="char" char="." valign="bottom">2</td><td align="left" valign="bottom">Population</td></tr><tr><td align="left" valign="bottom">OR</td><td align="char" char="." valign="bottom">2</td><td align="left" valign="bottom">Population</td></tr><tr><td align="left" valign="bottom">ANDNOT</td><td align="char" char="." valign="bottom">2</td><td align="left" valign="bottom">Population</td></tr><tr><td align="left" valign="bottom">NOR</td><td align="char" char="." valign="bottom">2</td><td align="left" valign="bottom">Population</td></tr><tr><td align="left" valign="bottom">XOR</td><td align="char" char="." valign="bottom">2</td><td align="left" valign="bottom">Population</td></tr><tr><td align="left" valign="bottom">EQU</td><td align="char" char="." valign="bottom">2</td><td align="left" valign="bottom">Population</td></tr><tr><td align="left" valign="bottom"><inline-formula><mml:math id="inf1"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mn>2</mml:mn><mml:mi>A</mml:mi></mml:mrow></mml:mstyle></mml:math></inline-formula></td><td align="char" char="." valign="bottom">1</td><td align="left" valign="bottom">Individual</td></tr><tr><td align="left" valign="bottom"><inline-formula><mml:math id="inf2"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msup><mml:mi>A</mml:mi><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msup></mml:mrow></mml:mstyle></mml:math></inline-formula></td><td align="char" char="." valign="bottom">1</td><td align="left" valign="bottom">Population</td></tr><tr><td align="left" valign="bottom"><inline-formula><mml:math id="inf3"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msup><mml:mi>A</mml:mi><mml:mrow><mml:mn>3</mml:mn></mml:mrow></mml:msup></mml:mrow></mml:mstyle></mml:math></inline-formula></td><td align="char" char="." valign="bottom">1</td><td align="left" valign="bottom">Population</td></tr><tr><td align="left" valign="bottom"><inline-formula><mml:math id="inf4"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mi>A</mml:mi><mml:mo>+</mml:mo><mml:mi>B</mml:mi></mml:mrow></mml:mstyle></mml:math></inline-formula></td><td align="char" char="." valign="bottom">2</td><td align="left" valign="bottom">Population</td></tr><tr><td align="left" valign="bottom"><inline-formula><mml:math id="inf5"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mi>A</mml:mi><mml:mo>×</mml:mo><mml:mi>B</mml:mi></mml:mrow></mml:mstyle></mml:math></inline-formula></td><td align="char" char="." valign="bottom">2</td><td align="left" valign="bottom">Population</td></tr><tr><td align="left" valign="bottom"><inline-formula><mml:math id="inf6"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mi>A</mml:mi><mml:mo>−</mml:mo><mml:mi>B</mml:mi></mml:mrow></mml:mstyle></mml:math></inline-formula></td><td align="char" char="." valign="bottom">2</td><td align="left" valign="bottom">Population</td></tr><tr><td align="left" valign="bottom"><inline-formula><mml:math id="inf7"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msup><mml:mi>A</mml:mi><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msup><mml:mo>+</mml:mo><mml:msup><mml:mi>B</mml:mi><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msup></mml:mrow></mml:mstyle></mml:math></inline-formula></td><td align="char" char="." valign="bottom">2</td><td align="left" valign="bottom">Population</td></tr><tr><td align="left" valign="bottom"><inline-formula><mml:math id="inf8"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msup><mml:mi>A</mml:mi><mml:mrow><mml:mn>3</mml:mn></mml:mrow></mml:msup><mml:mo>+</mml:mo><mml:msup><mml:mi>B</mml:mi><mml:mrow><mml:mn>3</mml:mn></mml:mrow></mml:msup></mml:mrow></mml:mstyle></mml:math></inline-formula></td><td align="char" char="." valign="bottom">2</td><td align="left" valign="bottom">Population</td></tr><tr><td align="left" valign="bottom"><inline-formula><mml:math id="inf9"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msup><mml:mi>A</mml:mi><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msup><mml:mo>−</mml:mo><mml:msup><mml:mi>B</mml:mi><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msup></mml:mrow></mml:mstyle></mml:math></inline-formula></td><td align="char" char="." valign="bottom">2</td><td align="left" valign="bottom">Population</td></tr><tr><td align="left" valign="bottom"><inline-formula><mml:math id="inf10"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msup><mml:mi>A</mml:mi><mml:mrow><mml:mn>3</mml:mn></mml:mrow></mml:msup><mml:mo>−</mml:mo><mml:msup><mml:mi>B</mml:mi><mml:mrow><mml:mn>3</mml:mn></mml:mrow></mml:msup></mml:mrow></mml:mstyle></mml:math></inline-formula></td><td align="char" char="." valign="bottom">2</td><td align="left" valign="bottom">Population</td></tr><tr><td align="left" valign="bottom"><inline-formula><mml:math id="inf11"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mfrac><mml:mrow><mml:mi>A</mml:mi><mml:mo>+</mml:mo><mml:mi>B</mml:mi></mml:mrow><mml:mn>2</mml:mn></mml:mfrac></mml:mrow></mml:mstyle></mml:math></inline-formula></td><td align="char" char="." valign="bottom">2</td><td align="left" valign="bottom">Population</td></tr></tbody></table></table-wrap><sec id="s2-1"><title>Digital directed evolution</title><p><xref ref-type="fig" rid="fig1">Figure 1</xref> overviews our model of laboratory directed microbial evolution. Our model contains a set of populations (i.e<italic>.</italic>, a ‘metapopulation’). Each population comprises digital organisms (self-replicating computer programs) that compete for space in a well-mixed virtual environment. Both the digital organisms and their virtual environment are inspired by those of the Avida Digital Evolution Platform (<xref ref-type="bibr" rid="bib71">Ofria et al., 2009</xref>), which is a well-established study system for in silico evolution experiments (e.g<italic>.,</italic> <xref ref-type="bibr" rid="bib61">Lenski et al., 1999</xref>; <xref ref-type="bibr" rid="bib62">Lenski et al., 2003</xref>; <xref ref-type="bibr" rid="bib97">Zaman et al., 2014</xref>; <xref ref-type="bibr" rid="bib56">Lalejini et al., 2021</xref>) and is a closer analog to microbial evolution than conventional evolutionary computing systems. However, we note that our model’s implementation is fully independent of Avida, as the Avida software platform does not allow us to model laboratory setups of directed microbial evolution (as described in the previous section).</p><fig id="fig1" position="float"><label>Figure 1.</label><caption><title>Overview of our model of directed microbial evolution.</title><p>In (<bold>a</bold>), we found each of <inline-formula><mml:math id="inf12"><mml:mi>N</mml:mi></mml:math></inline-formula> populations with a single digital organism. In this figure, the metapopulation comprises three populations. Next (<bold>b</bold>), each population undergoes a maturation period during which digital organisms compete for space, reproduce, mutate, and evolve. After maturation, (<bold>c</bold>) we evaluate each population based on one or more population-level characteristics, and we select populations (repeat selections allowed) to partition into <inline-formula><mml:math id="inf13"><mml:mi>N</mml:mi></mml:math></inline-formula> ‘offspring’ populations. In this figure, we show populations being evaluated on three objectives (o<sub>1</sub>, o<sub>2</sub>, and o<sub>3</sub>). In this work, population-level objectives include the ability to compute different mathematical expressions (see <xref ref-type="table" rid="table1">Table 1</xref>). We see this as analogous to a microbial population’s ability to produce different biomolecules or to metabolize different resources. After evaluation, populations are chosen algorithmically using one of the selection protocols described in ‘Methods.’</p></caption><graphic mimetype="image" mime-subtype="tiff" xlink:href="elife-79665-fig1-v2.tif"/></fig><p>In our model, we seed each population with a digital organism (explained in more detail below) capable only of self-replication (<xref ref-type="fig" rid="fig1">Figure 1a</xref>). After initialization, directed evolution proceeds in cycles. During a cycle, we allow all populations to evolve for a fixed number of time steps (i.e., a ‘maturation period’; <xref ref-type="fig" rid="fig1">Figure 1b</xref>). During a population’s maturation period, digital organisms execute the computer code in their genomes, which encodes the organism’s ability to self-replicate and perform computational tasks using inputs from its environment. When an organism reproduces, its offspring is subject to mutation, which may affect its phenotype. Therefore, each population in the metapopulation independently evolves during the maturation period. After the maturation period, we evaluate each population’s performance on a set of objectives and apply an artificial selection protocol to algorithmically choose performant populations to propagate (<xref ref-type="fig" rid="fig1">Figure 1c</xref>).</p><p>In this work, we simulate a serial batch culture protocol. To create an offspring population (<xref ref-type="fig" rid="fig1">Figure 1d</xref>), we use a random sample of digital organisms from the chosen parental population (here we used 1% of the maximum population size). We chose this sample size based on preliminary experiments, wherein we found that smaller sample sizes performed better than larger sizes (see supplemental material, <xref ref-type="bibr" rid="bib58">Lalejini et al., 2022</xref>).</p><sec id="s2-1-1"><title>Digital organisms</title><p>Each digital organism contains a sequence of program instructions (its genome) and a set of virtual hardware components used to interpret and express those instructions. The virtual hardware and genetic representation used in this work extends that of <xref ref-type="bibr" rid="bib24">Dolson et al., 2019</xref>; <xref ref-type="bibr" rid="bib46">Hernandez et al., 2022a</xref>. The virtual hardware includes the following components: an instruction pointer indicating the position in the genome currently being executed, 16 registers for performing computations, 16 memory stacks, input and output buffers, ‘scopes’ that facilitate modular code execution, and machinery to facilitate self-copying. For brevity, we refer readers to supplemental material for a more detailed description of these virtual hardware components (<xref ref-type="bibr" rid="bib58">Lalejini et al., 2022</xref>).</p><p>Digital organisms express their genomes sequentially unless the execution of one instruction changes which instruction should be executed next (e.g., ‘if’ instructions). The instruction set is Turing complete and syntactically robust such that any ordering of instructions is valid (though not necessarily useful). The instruction set includes operators for basic math, flow control (e.g., conditional logic and looping), designating and triggering code modules, input, output, and self-replication. Each instruction contains three arguments, which may modify the effect of the instruction, often specifying memory locations or fixed values. We further document the instruction set in our supplemental material.</p><p>Digital organisms reproduce asexually by executing copy instructions to replicate their genome one instruction at a time and then finally issuing a divide command. However, copying is subject to errors, including single-instruction and single-argument substitution mutations. Each time an organism executes a copy, there is a 1% chance that a random instruction is copied instead, introducing a mutation (and a 0.5% chance to incorrectly copy each instruction argument). Mutations can change the offspring’s phenotype, including its replication efficiency and computational task repertoire.</p><p>Genomes were fixed at a length of 100 instructions. When an organism replicates, its offspring is placed in a random position within the same population, replacing any previous occupant. We limited the maximum population size to 1000 organisms. Because space is a limiting resource, organisms that replicate quickly have a selective advantage within populations.</p><p>During evolution, organism replication can be improved in two ways: by improving computational efficiency or by increasing the rate of genome execution (‘metabolic rate’). An organism’s metabolic rate determines the average number of instructions an organism is able to execute in a single time step. Digital organisms can improve their metabolic rate by evolving the ability to perform designated functions (referred to as individual-level functions), including some Boolean logic functions and simple mathematical expressions (<xref ref-type="table" rid="table1">Table 1</xref>).</p><p>Performing a function requires the coordinated execution of multiple genetically encoded instructions, including ones that interact with the environment, store intermediate computations, and output the results. For example, the <inline-formula><mml:math id="inf14"><mml:mrow><mml:mi>A</mml:mi><mml:mo>+</mml:mo><mml:mi>B</mml:mi></mml:mrow></mml:math></inline-formula> function requires an organism to execute the input instruction twice to load two numeric inputs into its memory registers, execute an add instruction to sum those two inputs and store the result, and then execute an output instruction to output the result.</p><p>When an organism produces output, we check to see whether the output completes any of the designated functions (given previous inputs it received); if so, the organism’s metabolic rate is adjusted accordingly. Organisms are assigned a random set of numeric inputs at birth that determine the set of values accessible via the input instruction. We guarantee that the set of inputs received by an organism result in a unique output for each designated function. Organisms benefit from performing each function only once, preventing multiple rewards for repeating a single-function result. In this work, we configured each function that confers an individual-level benefit to double an organism’s metabolic rate, which doubles the rate the organism can copy itself. For a more in-depth overview of digital organisms in a biological context, see <xref ref-type="bibr" rid="bib91">Wilke and Adami, 2002</xref>.</p></sec><sec id="s2-1-2"><title>Population-level evaluation</title><p>In addition to individual-level functions, organisms can perform 18 different population-level functions (<xref ref-type="table" rid="table1">Table 1</xref>). Unless stated otherwise, performing a population-level function does not improve an organism’s metabolic rate. Instead, population-level functions are used for population-level evaluation and selection, just as we might screen for the production of different by-products in laboratory populations. We assigned each population a score for each population-level function based on the number of organisms that performed that function during the population’s maturation period. The use of these scores for selecting progenitors varied by selection scheme (as described in the ‘Methods section).</p><p>While population-level functions benefit a population’s chance to propagate, they do not benefit an individual organism’s immediate reproductive success: time spent computing population-level functions is time not spent on performing individual-level functions or self-replicating. Such conflicts between group-level and individual-level fitness are well-established in evolving systems (<xref ref-type="bibr" rid="bib80">Simon et al., 2013</xref>; <xref ref-type="bibr" rid="bib86">Waibel et al., 2009</xref>) and are indeed a problem recognized for screening-based methods of artificial selection that must be applied at the population level (<xref ref-type="bibr" rid="bib26">Escalante et al., 2015</xref>; <xref ref-type="bibr" rid="bib8">Brenner et al., 2008</xref>).</p></sec></sec><sec id="s2-2"><title>Selection schemes</title><sec id="s2-2-1"><title>Elite and top 10% selection</title><p>Elite and top 10% selection are special cases of truncation selection (<xref ref-type="bibr" rid="bib69">Mühlenbein and Schlierkamp-Voosen, 1993</xref>) or (<inline-formula><mml:math id="inf15"><mml:mrow><mml:mi>μ</mml:mi><mml:mo>,</mml:mo><mml:mi>λ</mml:mi></mml:mrow></mml:math></inline-formula>) evolutionary strategies (<xref ref-type="bibr" rid="bib4">Bäck et al., 1991</xref>) wherein candidates are ranked and the most performant are chosen as progenitors. We implement these selection methods as they are often used in laboratory directed evolution (<xref ref-type="bibr" rid="bib93">Xie et al., 2019</xref>; <xref ref-type="bibr" rid="bib94">Xie and Shou, 2021</xref>). Here, both elite and top 10% selection rank populations according to their aggregate performance on all population-level functions. Elite selection chooses the single best-performing population to generate the next metapopulation, and top 10% chooses the best 10% (rounded up to the nearest whole number) as parental populations.</p></sec><sec id="s2-2-2"><title>Tournament selection</title><p>Tournament selection is one of the most common parent selection methods in evolutionary computing. To select a parental population, <inline-formula><mml:math id="inf16"><mml:mi>T</mml:mi></mml:math></inline-formula> populations are randomly chosen (with replacement) from the metapopulation to form a tournament (<inline-formula><mml:math id="inf17"><mml:mrow><mml:mi>T</mml:mi><mml:mo>=</mml:mo><mml:mn>4</mml:mn></mml:mrow></mml:math></inline-formula> in this work). The population with the highest aggregate performance on all population-level functions wins the tournament and is chosen as a parent. We run <inline-formula><mml:math id="inf18"><mml:mi>N</mml:mi></mml:math></inline-formula> tournaments to choose the parental populations for each of <inline-formula><mml:math id="inf19"><mml:mi>N</mml:mi></mml:math></inline-formula> offspring populations.</p></sec><sec id="s2-2-3"><title>Lexicase selection</title><p>Unlike the previously described selection schemes, lexicase selection does not aggregate measures of performance across population-level functions (i.e., objectives) to choose parental populations. Instead, lexicase selection considers performance on each population-level function independently. For each parent selection event, all members of the metapopulation are initially considered candidates for selection. To select a parental population, the set of population-level functions is shuffled and each function is considered in sequence. Each function (in shuffled order) is used to filter candidates sequentially, removing all but the best candidates from further consideration. This process continues until only one candidate remains to be selected or until all functions have been considered; if more than one candidate remains, one is selected at random.</p><p>Lexicase selection was originally proposed for test-based genetic programming problems (<xref ref-type="bibr" rid="bib81">Spector, 2012</xref>; <xref ref-type="bibr" rid="bib40">Helmuth and Spector, 2015a</xref>), but has since produced promising results in a variety of domains (<xref ref-type="bibr" rid="bib67">Moore and Stanton, 2017</xref>; <xref ref-type="bibr" rid="bib55">La Cava et al., 2016</xref>; <xref ref-type="bibr" rid="bib66">Metevier et al., 2019</xref>; <xref ref-type="bibr" rid="bib1">Aenugu and Spector, 2019</xref>). By randomly permuting the objectives for each parent selection, lexicase selection maintains diversity (<xref ref-type="bibr" rid="bib23">Dolson et al., 2018</xref>; <xref ref-type="bibr" rid="bib42">Helmuth et al., 2016</xref>), which improves search space exploration (<xref ref-type="bibr" rid="bib47">Hernandez et al., 2022b</xref>) and overall problem-solving success (<xref ref-type="bibr" rid="bib46">Hernandez et al., 2022a</xref>; <xref ref-type="bibr" rid="bib41">Helmuth et al., 2015b</xref>). In particular, lexicase selection focuses on maintaining specialists (<xref ref-type="bibr" rid="bib43">Helmuth et al., 2019</xref>).</p></sec><sec id="s2-2-4"><title>Non-dominated elite selection</title><p>Non-dominated elite selection is a simple multiobjective selection algorithm that chooses all populations that are not Pareto dominated by another population (<xref ref-type="bibr" rid="bib98">Zitzler, 1999</xref>). A candidate, <italic>c</italic><sub><italic>a</italic></sub>, Pareto dominates another candidate, <italic>c</italic><sub><italic>b</italic></sub>, if the following two conditions are met: (1) <italic>c</italic><sub><italic>a</italic></sub> performs no worse than <italic>c</italic><sub><italic>b</italic></sub> on all population-level functions and (2) <italic>c</italic><sub><italic>a</italic></sub> has strictly better performance than <italic>c</italic><sub><italic>b</italic></sub> on at least one population-level function. The set of all non-dominated populations is then sampled with replacement to seed offspring populations.</p><p>Pareto domination is a fundamental component in many successful evolutionary multiobjective optimization (EMOO) algorithms (<xref ref-type="bibr" rid="bib29">Fonseca and Fleming, 1995</xref>; <xref ref-type="bibr" rid="bib98">Zitzler, 1999</xref>; <xref ref-type="bibr" rid="bib50">Horn et al., 1994</xref>; <xref ref-type="bibr" rid="bib21">Deb et al., 2002</xref>). In general, EMOO algorithms aim to produce the set of solutions with optimal trade-offs of the objective set. Most EMOO algorithms have more sophisticated routines for parent selection than non-dominated elite selection (e.g., use of external archives or crowding metrics). We opted to use non-dominated elite selection for its simplicity, but future work will explore more EMOO selection schemes.</p></sec><sec id="s2-2-5"><title>Selection controls</title><p>We used random and no selection treatments as controls. Random selection chooses a random set of populations (with replacement) to serve as parental populations. ‘No selection’ chooses all populations in the metapopulation as sources for founding the next generation of populations; that is, each population is chosen to produce one offspring population. Neither of these controls apply selection pressure for performing population-level functions.</p></sec></sec><sec id="s2-3"><title>Experimental design</title><sec id="s2-3-1"><title>Establishing baseline problem-solving expectations in an evolutionary computing context</title><p>First, we evaluated the relative performance of parent selection algorithms in a conventional evolutionary computing context (linear genetic programming; <xref ref-type="bibr" rid="bib7">Brameier and Banzhaf, 2007</xref>), in which we evolved programs to compute the functions in <xref ref-type="table" rid="table1">Table 1</xref>. This control experiment followed conventional evolutionary computing setup: there is no metapopulation, and programs are evaluated, selected, and propagated as individuals. We used this control experiment to verify that the genetic representation used by digital organisms is sufficient for evolving each of the computational functions used in subsequent experiments. Additionally, the relative performances of each algorithm establishes an expectation for how each parent selection algorithm might perform in our model of laboratory directed evolution.</p><p>For each of the seven selection schemes described previously, we evolved 50 replicate populations of 1000 programs. We initialized each replicate population with 1000 randomly generated programs. In evolution experiments with microbes (in silico or in vitro), the number of elapsed organism generations is measured (or estimated). However, in conventional evolutionary computing experiments, generations are configured by the experimenter and determine the duration of the experiment. We chose to evolve these populations for 55,000 generations, which approximates the elapsed number of organism-level generations measured after 2000 cycles of population-level artificial selection in exploratory runs of simulated directed evolution.</p><p>Each generation, we independently evaluated each individual to determine its phenotype. To evaluate a program, we executed it for 200 time steps (i.e., the program could execute 200 instructions) and tracked the program’s inputs and outputs to determine which of the functions in <xref ref-type="table" rid="table1">Table 1</xref> it performed (if any). We used the same genetic representation used by digital organisms in our model of simulated directed evolution. However, we excluded self-replication instructions from the instruction set as we did not require programs to copy themselves during this experiment.</p><p>After evaluating each individual, we selected ‘parents’ to contribute offspring to the next generation. For the purpose of selection, we treated each of the 22 possible functions as a pass–fail task. Lexicase and non-dominated elite selection considered each task separately to choose parent programs, while elite, top 10%, and tournament selection used the number of task passes as fitness values for choosing parents. Chosen parents reproduced asexually, and we applied mutations to offspring of the same types and frequencies as in our model of laboratory directed evolution.</p><p>At the end of each run, we identified the individual program that performed the most tasks, and we used these programs to compare performance across treatments. Adopting conventional evolutionary computation metrics, we considered a replicate population to be <italic>successful</italic> if it produced a program capable of performing all 22 tasks during evaluation.</p></sec><sec id="s2-3-2"><title>Applying parent selection algorithms in a digital directed evolution context</title><p>Next, we evaluated each selection scheme’s performance in our model of laboratory directed evolution. For each selection scheme, we ran 50 independent replicates of directed evolution for 2000 cycles of population maturation, screening, and propagation (as shown in <xref ref-type="fig" rid="fig1">Figure 1</xref>). During each cycle, we gave populations a maturation period of 200 updates (one update is the amount of time required for the average organism in a population to execute 30 instructions). Each 200-update maturation period allowed for approximately 25–35 generations of evolution, resulting in a total of approximately 50,000–70,000 organism-level generations after 2000 cycles of simulated laboratory directed evolution. Within each replicate, the metapopulation was composed of 96 populations (following the number of samples held by a standard microtiter plate used in laboratory experiments), each with a maximum carrying capacity of 1000 digital organisms. During a population’s maturation period, we measured the number of organisms that performed each of the 18 population-level functions (<xref ref-type="table" rid="table1">Table 1</xref>) as the population’s ‘phenotype’ for evaluation. We selected populations to propagate according to the treatment-specific selection scheme and propagated chosen parental populations.</p><p>At the end of the experiment, we analyzed the population-level functions performed by populations in each replicate’s metapopulation. First, we calculated each population’s ‘task profile,’ which is a binary vector that describes which population-level functions are ‘covered’ by the population (zeroes are assigned for functions that are not covered and ones for those that are covered). A function is considered covered if it is performed by at least 50 organisms (a threshold ensuring the performance was not one-off) during a given maturation period.</p><p>Next, we measured the ‘best population task coverage’ and ‘metapopulation task coverage’ for each replicate. Best population task coverage is measured as the number of functions covered by the population with the largest set of covered functions. Metapopulation task coverage is measured as the number of functions covered across the entire metapopulation (i.e., the union of unique tasks covered by each population in the metapopulation).</p><p>We also measured the phenotypic diversity within each metapopulation. Specifically, we measured the number of different task profiles present in the metapopulation (i.e., phenotypic richness) and the ‘spread’ of task profiles in the metapopulation. To measure a metapopulation’s task profile spread, we calculated a centroid task profile as the average of all task profiles in the metapopulation, and then we calculated the average normalized cosine distance between each population’s task profile and the centroid. A metapopulation’s task spread summarizes how different the constituent populations’ task profiles are from one another.</p></sec><sec id="s2-3-3"><title>Evaluating whether selection schemes improve directed evolution outcomes when population-level functions are aligned with organism survival</title><p>Selection-based methods of artificial selection tie desired traits to organism survival, eliminating the need to apply screening-based methods to populations. We tested whether the addition of population-level selection improves directed evolution outcomes even when traits of interest (population-level functions) are selected for at the individual level (i.e., tied to organism survival). To do so, we repeated our previously described directed evolution experiment, except we configured all population-level functions to improve an organism’s metabolic rate in addition to the individual-level functions. As such, all population-level functions were beneficial in all treatments, including the random and no selection controls. However, only treatments with non-control selection schemes applied artificial selection at the population level.</p></sec></sec><sec id="s2-4"><title>Statistical analyses</title><p>In general, we differentiated between sample distributions using non-parametric statistical tests. For each major analysis, we first performed a Kruskal–Wallis test (<xref ref-type="bibr" rid="bib54">Kruskal and Wallis, 1952</xref>) to determine whether there were significant differences in results across treatments (significance level <inline-formula><mml:math id="inf20"><mml:mrow><mml:mi>α</mml:mi><mml:mo>=</mml:mo><mml:mn>0.05</mml:mn></mml:mrow></mml:math></inline-formula>). If so, we applied a Wilcoxon rank-sum test (<xref ref-type="bibr" rid="bib90">Wilcoxon, 1992</xref>) to distinguish between pairs of treatments using a Bonferroni correction for multiple comparisons (<xref ref-type="bibr" rid="bib77">Rice, 1989</xref>). Due to space limitations, we do not report all pairwise comparisons in our main results; however, all of our statistical results are included in our supplemental material.</p></sec><sec id="s2-5"><title>Software and data availability</title><p>Our model of laboratory directed evolution is available on GitHub (see <xref ref-type="bibr" rid="bib58">Lalejini et al., 2022</xref>) and is implemented using the Empirical scientific software library (<xref ref-type="bibr" rid="bib72">Ofria et al., 2020</xref>). We conducted all statistical analyses with R version 4.04 (<xref ref-type="bibr" rid="bib74">R Development Core Team, 2021</xref>), using the following R packages for data analysis and visualization: tidyverse (<xref ref-type="bibr" rid="bib89">Wickham et al., 2019</xref>), ggplot2 (<xref ref-type="bibr" rid="bib88">Wickham, 2016</xref>), cowplot (<xref ref-type="bibr" rid="bib92">Wilke, 2020</xref>), viridis (<xref ref-type="bibr" rid="bib31">Garnier, 2018</xref>), khroma (<xref ref-type="bibr" rid="bib30">Frerebeau, 2022</xref>), and Color Brewer (<xref ref-type="bibr" rid="bib37">Harrower and Brewer, 2003</xref>; <xref ref-type="bibr" rid="bib70">Neuwirth, 2014</xref>). Our source code for experiments, analyses, and visualizations is publicly available on GitHub (see <xref ref-type="bibr" rid="bib58">Lalejini et al., 2022</xref>). Additionally, our experiment data are publicly archived on the Open Science Framework (see <xref ref-type="bibr" rid="bib57">Lalejini, 2022</xref>).</p></sec></sec><sec id="s3" sec-type="results|discussion"><title>Results and discussion</title><sec id="s3-1"><title>Baseline problem-solving expectations in an evolutionary computing context</title><p>First, we established baseline performance expectations for the selection schemes in a conventional genetic programming context to validate the solvability of the individual- and population-level functions used in our digital directed evolution experiments. Two selection schemes produced successful replicates, where success is defined as evolving a program capable of performing all 22 functions: elite (1/50) and lexicase selection (47/50). No replicates solved this set of tasks in any other treatment. <xref ref-type="fig" rid="fig2">Figure 2</xref> depicts the number of functions performed by the best program from each replicate (over time and at the end of the experiment). All selection schemes outperformed the random and no selection controls. At the end of the experiment, differences between all pairs except random and no selection were statistically significant (Bonferroni-corrected Wilcoxon rank-sum, p&lt;0.01). Lexicase selection was the most performant followed by top 10%, elite, tournament, and non-dominated elite selection.</p><fig id="fig2" position="float"><label>Figure 2.</label><caption><title>Task coverage of the best program (per replicate) evolved in an evolutionary computing context over time (<bold>a</bold>) and at the end of the experiment (<bold>b</bold>).</title><p>Selection scheme abbreviations are as follows: TOURN, tournament; LEX, lexicase; NDE, non-dominated elite; RAND, random; NONE, no selection. In panel (<bold>a</bold>), each line gives the mean value across 50 replicates, and the shading around each mean gives a bootstrapped 95% confidence interval. Differences in final task coverage among treatments were statistically significant (Kruskal–Wallis, <inline-formula><mml:math id="inf21"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mrow><mml:mi mathvariant="normal">p</mml:mi></mml:mrow><mml:mrow><mml:mo>&lt;</mml:mo></mml:mrow><mml:msup><mml:mn>10</mml:mn><mml:mrow><mml:mtext>-</mml:mtext><mml:mn>4</mml:mn></mml:mrow></mml:msup></mml:mrow></mml:mstyle></mml:math></inline-formula>).</p></caption><graphic mimetype="image" mime-subtype="tiff" xlink:href="elife-79665-fig2-v2.tif"/></fig><p>These data confirm that our genetic representation allows for the evolution of each computational function used in our model of laboratory directed evolution. Moreover, these data establish some expectations for the relative performance of each selection scheme in our directed evolution experiments. Lexicase selection’s strong performance is consistent with previous work demonstrating its efficacy on program synthesis problems (<xref ref-type="bibr" rid="bib40">Helmuth and Spector, 2015a</xref>; <xref ref-type="bibr" rid="bib44">Helmuth and Abdelhady, 2020</xref>). While initially surprised by non-dominated elite’s poor performance (relative to other non-control selection schemes), we note that selection methods based on Pareto domination are rarely applied to pass–fail test-based genetic programming problems, and perhaps the course-grained function scores (0 or 1) hindered its capacity for problem-solving success.</p></sec><sec id="s3-2"><title>Lexicase and non-dominated elite selection show promise for directed evolution</title><p>Next, we compared selection scheme performance when modeling the directed evolution of digital organisms. <xref ref-type="fig" rid="fig3">Figure 3a–d</xref> shows the best population and metapopulation task coverages. By the end of the experiment, all selection schemes resulted in greater single-population task coverage than both random and no selection controls (Bonferroni-corrected Wilcoxon rank-sum test, <inline-formula><mml:math id="inf22"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mrow><mml:mi mathvariant="normal">p</mml:mi></mml:mrow><mml:mrow><mml:mo>&lt;</mml:mo></mml:mrow><mml:msup><mml:mn>10</mml:mn><mml:mrow><mml:mtext>-</mml:mtext><mml:mn>4</mml:mn></mml:mrow></mml:msup></mml:mrow></mml:mstyle></mml:math></inline-formula>). Metapopulation coverage under tournament selection was not significantly different than coverage under the no selection control, but all other selection schemes resulted in significantly better metapopulation coverage than both controls (Bonferroni-corrected Wilcoxon rank-sum, <inline-formula><mml:math id="inf23"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mrow><mml:mi mathvariant="normal">p</mml:mi></mml:mrow><mml:mrow><mml:mo>&lt;</mml:mo></mml:mrow><mml:mn>0.03</mml:mn></mml:mrow></mml:mstyle></mml:math></inline-formula>). Overall, lexicase and non-dominated elite selection scored the greatest population and metapopulation task coverage out of all selection schemes, and lexicase was the overall best selection scheme according to both metrics of performance. Moreover, we found that lexicase selection improved both single-population and metapopulation task coverage relative to all other selection methods after just 10 cycles of directed evolution (Bonferroni-corrected Wilcoxon rank-sum, <inline-formula><mml:math id="inf24"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mrow><mml:mi mathvariant="normal">p</mml:mi></mml:mrow><mml:mrow><mml:mo>&lt;</mml:mo></mml:mrow><mml:mn>0.04</mml:mn></mml:mrow></mml:mstyle></mml:math></inline-formula>).</p><fig id="fig3" position="float"><label>Figure 3.</label><caption><title>Digital directed evolution results.</title><p>For panels (<bold>a</bold>) and (<bold>c</bold>), each line gives the mean value across 50 replicates, and the shading around each mean gives a bootstrapped 95% confidence interval. At the end of the experiment, differences among treatments were statistically significant for each of (<bold>b</bold>) best population task coverage, (<bold>d</bold>) metapopulation task coverage, (<bold>e</bold>) task profile diversity, and (<bold>f</bold>) task profile spread (Kruskal–Wallis, <inline-formula><mml:math id="inf25"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mrow><mml:mi mathvariant="normal">p</mml:mi></mml:mrow><mml:mrow><mml:mo>&lt;</mml:mo></mml:mrow><mml:msup><mml:mn>10</mml:mn><mml:mrow><mml:mtext>-</mml:mtext><mml:mn>4</mml:mn></mml:mrow></mml:msup></mml:mrow></mml:mstyle></mml:math></inline-formula>).</p></caption><graphic mimetype="image" mime-subtype="tiff" xlink:href="elife-79665-fig3-v2.tif"/></fig><p>While differences were significant in the best population task coverage, they were not necessarily substantial. However, other measures had more substantial differences. Both multiobjective selection schemes—lexicase and non-dominated elite—had the greatest metapopulation task coverage (<xref ref-type="fig" rid="fig3">Figure 3d</xref>) and the greatest diversity of task profiles in the final metapopulations (<xref ref-type="fig" rid="fig3">Figure 3e</xref>; Bonferroni-corrected Wilcoxon rank-sum test, <inline-formula><mml:math id="inf26"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mrow><mml:mi mathvariant="normal">p</mml:mi></mml:mrow><mml:mrow><mml:mo>&lt;</mml:mo></mml:mrow><mml:msup><mml:mn>10</mml:mn><mml:mrow><mml:mtext>-</mml:mtext><mml:mn>4</mml:mn></mml:mrow></mml:msup></mml:mrow></mml:mstyle></mml:math></inline-formula>). Lexicase selection in particular also had the greatest task profile <italic>spread</italic> (<xref ref-type="fig" rid="fig3">Figure 3f</xref>; Bonferroni-corrected Wilcoxon rank-sum test, <inline-formula><mml:math id="inf27"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mrow><mml:mi mathvariant="normal">p</mml:mi></mml:mrow><mml:mrow><mml:mo>&lt;</mml:mo></mml:mrow><mml:msup><mml:mn>10</mml:mn><mml:mrow><mml:mtext>-</mml:mtext><mml:mn>4</mml:mn></mml:mrow></mml:msup></mml:mrow></mml:mstyle></mml:math></inline-formula>), which is consistent with previous results demonstrating that lexicase excels at maintaining diverse specialists (<xref ref-type="bibr" rid="bib23">Dolson et al., 2018</xref>; <xref ref-type="bibr" rid="bib43">Helmuth et al., 2019</xref>; <xref ref-type="bibr" rid="bib46">Hernandez et al., 2022a</xref>; <xref ref-type="bibr" rid="bib43">Helmuth et al., 2019</xref>).</p><p>The lack of task profile diversity maintained by each of the elite, top 10%, and tournament selection methods is consistent with empirical and theoretical evolutionary computing studies (<xref ref-type="bibr" rid="bib24">Dolson et al., 2019</xref>; <xref ref-type="bibr" rid="bib48">Hernandez et al., 2022c</xref>). Similar results have also been observed in directed evolution of bacterial communities. For example, after just six generations of selecting the top 25% of bacterial communities, Chang et al. observed that their entire metapopulation of bacterial communities descended from the initial top community, resulting in no functional variance for further selection to act on <xref ref-type="bibr" rid="bib12">Chang et al., 2020</xref>. Indeed, the inability to reliably maintain diversity is an intrinsic limitation of elite, top 10%, and tournament selection, regardless of the substrate in which they are applied.</p><p>We hypothesized that lexicase and non-dominated elite selection’s mechanisms for selecting different <italic>types</italic> of parental populations underpinned their improved performance over elite, top 10%, and tournament selection. This, however, is confounded by each selection scheme’s varying capacity to select a greater number of different populations (regardless of differences in those selected). As such, we asked whether lexicase and non-dominated elite’s success could be explained by a capacity to select a greater number of different parental populations. Elite selection selected exactly one population per cycle, top 10% selected 10, lexicase selected an average of 12, tournament selected an average of 50, and non-dominated elite selected an average of 83 different populations. Thus, we can rule out the number of populations selected per cycle as the sole explanation for lexicase selection’s success; we argue that this, in combination with our diversity data, suggests that directed evolution practitioners should consider incorporating mechanisms for selecting phenotypically diverse parental populations into their artificial selection approaches.</p><p>Of all non-control selection methods, non-dominated elite exhibited the least selection pressure, selecting an average of 83 different populations (out of 96 possible) per cycle. This is a known problem for naive Pareto-based multiobjective selection methods (<xref ref-type="bibr" rid="bib39">He and Yen, 2016</xref>; <xref ref-type="bibr" rid="bib52">Ibrahim et al., 2016</xref>). For example, for a problem with more than five objectives, <xref ref-type="bibr" rid="bib38">He et al., 2014</xref> found that over 90% of candidates in a randomly generated population were non-dominated. Our experiments corroborate this finding as non-dominated elite selection chose an average of nearly 90% of the metapopulation to be propagated each cycle. Evolutionary computing practitioners have developed many approaches to improve selection pressure under Pareto-based multiobjective selection methods that could be applied to laboratory microbial populations. For example, rather than selecting <italic>all</italic> non-dominated candidates (as we did in our experiments), many Pareto-based multiobjective selection methods focus selection pressure on a diverse set of non-dominated candidates that represent different regions of the Pareto front (<xref ref-type="bibr" rid="bib17">Coello Coello, 1999</xref>; <xref ref-type="bibr" rid="bib20">Deb et al., 2000</xref>; <xref ref-type="bibr" rid="bib39">He and Yen, 2016</xref>). Yet, despite non-dominate elite’s shortcomings, it performed well relative to conventional artificial selection methods used in directed microbial evolution, motivating future studies investigating the use of more sophisticated Pareto-based selection methods for directed microbial evolution.</p><p>These results are also informative when compared to our genetic programming control experiment (<xref ref-type="fig" rid="fig2">Figure 2</xref>). While results across these two contexts are not directly comparable, we found steering evolution at the population level to be more challenging than steering at the individual level (as in conventional evolutionary computing). For example, across all treatments, no single population in our model of directed evolution performed all 18 population-level functions. Yet, after a similar number of organism-level generations (~55,000), both elite and lexicase selection produced programs capable of all 22 functions in a genetic programming context. Even if we limited our genetic programming control experiment to only 2000 generations (matching the 2000 cycles of population-level artificial selection in our simulated directed evolution experiments), we found that conventional genetic programming produced more performant programs than those evolved under our model of laboratory directed evolution (supplemental material; <xref ref-type="bibr" rid="bib58">Lalejini et al., 2022</xref>). We also observed differences in the rank order of selection schemes between the genetic programming and simulated laboratory directed evolution experiments. For example, non-dominated elite selection performed poorly in a genetic programming context relative to the other non-control selection schemes; however, non-dominated elite outperformed all selection schemes except lexicase selection in our model of laboratory directed evolution. On its own, non-dominated elite’s difference in performance is not surprising as non-dominated elite selection is not conventionally used for evolving computer programs where evaluation criteria are evaluated on a pass–fail basis. More broadly, however, we argue that these results highlight modeling as an important intermediate step when evaluating which techniques from evolutionary computing are likely to be effective in a laboratory setting.</p></sec><sec id="s3-3"><title>Selection schemes improve outcomes even when organism survival can be tied to population-level functions</title><p>Next, we tested whether the addition of population-level screening improves directed evolution outcomes even when population-level functions can be tied to organism survival. After 2000 cycles of directed evolution, each non-control selection scheme resulted in better single-population task coverage than either control treatment (<xref ref-type="fig" rid="fig4">Figure 4b</xref>; Bonferroni-corrected Wilcoxon rank-sum test, <inline-formula><mml:math id="inf28"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mrow><mml:mi mathvariant="normal">p</mml:mi></mml:mrow><mml:mrow><mml:mo>&lt;</mml:mo></mml:mrow><mml:msup><mml:mn>10</mml:mn><mml:mrow><mml:mtext>-</mml:mtext><mml:mn>4</mml:mn></mml:mrow></mml:msup></mml:mrow></mml:mstyle></mml:math></inline-formula>). We did not find significant differences in best population coverage among elite, top 10%, tournament, and non-dominated elite selection. In contrast to our previous experiment, lexicase selection resulted in lower best population coverage than each other non-control selection scheme (Bonferroni-corrected Wilcoxon rank-sum test, <inline-formula><mml:math id="inf29"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mrow><mml:mi mathvariant="normal">p</mml:mi></mml:mrow><mml:mrow><mml:mo>&lt;</mml:mo></mml:mrow><mml:msup><mml:mn>10</mml:mn><mml:mrow><mml:mtext>-</mml:mtext><mml:mn>4</mml:mn></mml:mrow></mml:msup></mml:mrow></mml:mstyle></mml:math></inline-formula>).</p><fig id="fig4" position="float"><label>Figure 4.</label><caption><title>Digital directed evolution results when organism survival is tied to population-level functions.</title><p>For panels (<bold>a</bold>) and (<bold>c</bold>), each line gives the mean value across 50 replicates, and the shading around each mean gives a bootstrapped 95% confidence interval. At the end of the experiment, differences among treatments were statistically significant for each of (<bold>b</bold>) best population task coverage, (<bold>d</bold>) metapopulation task coverage, (<bold>e</bold>) task profile diversity, and (<bold>f</bold>) task profile spread (Kruskal-Wallis, <inline-formula><mml:math id="inf30"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mrow><mml:mi mathvariant="normal">p</mml:mi></mml:mrow><mml:mrow><mml:mo>&lt;</mml:mo></mml:mrow><mml:msup><mml:mn>10</mml:mn><mml:mrow><mml:mtext>-</mml:mtext><mml:mn>4</mml:mn></mml:mrow></mml:msup></mml:mrow></mml:mstyle></mml:math></inline-formula>).</p></caption><graphic mimetype="image" mime-subtype="tiff" xlink:href="elife-79665-fig4-v2.tif"/></fig><p>Lexicase selection, however, outperformed all other selection schemes on metapopulation task coverage (<xref ref-type="fig" rid="fig4">Figure 4d</xref>; Bonferroni-corrected Wilcoxon rank-sum test, <inline-formula><mml:math id="inf31"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mrow><mml:mi mathvariant="normal">p</mml:mi></mml:mrow><mml:mrow><mml:mo>&lt;</mml:mo></mml:mrow><mml:msup><mml:mn>10</mml:mn><mml:mrow><mml:mtext>-</mml:mtext><mml:mn>4</mml:mn></mml:mrow></mml:msup></mml:mrow></mml:mstyle></mml:math></inline-formula>), producing 30 metapopulations that cover all 18 population-level functions. Even after just 10 cycles of directed evolution, lexicase selection improved metapopulation task coverage more than all other selection methods except non-dominated elite (Bonferroni-corrected Wilcoxon rank-sum test, <inline-formula><mml:math id="inf32"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mrow><mml:mi mathvariant="normal">p</mml:mi></mml:mrow><mml:mrow><mml:mo>&lt;</mml:mo></mml:mrow><mml:msup><mml:mn>10</mml:mn><mml:mrow><mml:mtext>-</mml:mtext><mml:mn>4</mml:mn></mml:mrow></mml:msup></mml:mrow></mml:mstyle></mml:math></inline-formula>). In general, lexicase selection produced metapopulations containing distinct specialist populations, resulting in high metapopulation task coverage while each specialist population had low task coverage on its own. Indeed, while lexicase metapopulations did not necessarily comprise many different population task profiles (<xref ref-type="fig" rid="fig4">Figure 4e</xref>), the task profiles were very different from one another (<xref ref-type="fig" rid="fig4">Figure 4f</xref>).</p><p>Of our two control selection methods, we found that performing no selection was better than random selection for both single-population and metapopulation task coverage (Bonferroni-corrected Wilcoxon rank-sum test, <inline-formula><mml:math id="inf33"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mrow><mml:mi mathvariant="normal">p</mml:mi></mml:mrow><mml:mrow><mml:mo>&lt;</mml:mo></mml:mrow><mml:msup><mml:mn>10</mml:mn><mml:mrow><mml:mtext>-</mml:mtext><mml:mn>4</mml:mn></mml:mrow></mml:msup></mml:mrow></mml:mstyle></mml:math></inline-formula>). In fact, performing no selection at all resulted in better metapopulation task coverage than elite, top 10%, and tournament selection (Bonferroni-corrected Wilcoxon rank-sum test, <inline-formula><mml:math id="inf34"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mrow><mml:mi mathvariant="normal">p</mml:mi></mml:mrow><mml:mrow><mml:mo>&lt;</mml:mo></mml:mrow><mml:msup><mml:mn>10</mml:mn><mml:mrow><mml:mtext>-</mml:mtext><mml:mn>3</mml:mn></mml:mrow></mml:msup></mml:mrow></mml:mstyle></mml:math></inline-formula>). We hypothesize that this result is because elite, top 10%, and tournament selection drive metapopulation convergence to homogeneous task profiles, while performing no selection at all allows populations to diverge from one another.</p></sec><sec id="s3-4"><title>Conclusion</title><p>In this work, we investigated whether the selection schemes from evolutionary computing might be useful for directing the evolution of microbial populations. To do so, we introduced an agent-based model of laboratory directed evolution. Overall, our results suggest that lexicase and non-dominated elite selection are promising techniques to transfer into the laboratory when selecting for multiple traits of interest as both of these selection schemes resulted in improved outcomes relative to conventional directed evolution selection methods. In some cases, these more sophisticated selection protocols improved directed evolution outcomes (relative to conventional methods) after just 10 rounds of artificial selection, which is especially promising given the effort required to carry out a single round of selection in the laboratory. We expect lexicase selection to be particularly useful for evolving a set of microbial populations, each specializing in different population-level functions. We also found that the addition of screening-based selection methods developed for evolutionary computation can improve directed evolution outcomes even in cases where organisms’ reproductive success can be tied directly to the traits of interest.</p><p>Our study has several important limitations that warrant future model development and experimentation. For example, we focused on modeling microbial populations that grow (and evolve) in a simple environment without complex ecological interactions. We plan to add ecological dynamics by incorporating features such as limited resources, waste by-products, symbiotic interactions, and spatial structure. These extensions will allow us to model the directed evolution of complex microbial communities (e.g., <xref ref-type="bibr" rid="bib13">Chang et al., 2021</xref>; <xref ref-type="bibr" rid="bib94">Xie and Shou, 2021</xref>), which is an emerging frontier in laboratory directed evolution.</p><p>Additionally, our study models a serial batch culture laboratory setup wherein each offspring population is founded from a small sample of its parent population. Future work should investigate how different laboratory setups influence directed evolution outcomes across artificial selection protocols. For example, population bottlenecks are known to influence adaptation (<xref ref-type="bibr" rid="bib53">Izutsu et al., 2021</xref>; <xref ref-type="bibr" rid="bib65">Mahrt et al., 2021</xref>). Indeed, in exploratory experiments, we found that our choice of sample size influenced directed evolution outcomes under some selection protocols (see supplemental material; <xref ref-type="bibr" rid="bib58">Lalejini et al., 2022</xref>). Other basic decisions including metapopulation size and the length of maturation period may also produce different outcomes under different artificial selection protocols. Future studies of how different artificial selection protocols perform under different laboratory conditions will help practitioners choose the most appropriate set of protocols given their particular constraints.</p><p>In this study, we compared simple versions of each selection scheme, and we did not tune their parameterizations in the context of our model of directed evolution. For example, we configured truncation selection (elite and top 10% selection) to reflect artificial selection methods commonly used in the laboratory, but adjusting the percentage of top populations chosen to propagate could improve directed evolution outcomes. Likewise, we expect that tournament selection’s performance could be slightly improved by tuning the tournament size. However, we do not expect such tuning to change our overall findings as no amount of tuning would give these selection methods a mechanism to choose different <italic>kinds</italic> of populations as in lexicase and non-dominated elite selection.</p><p>We plan to test more sophisticated selection schemes as we continue to transfer techniques developed for evolutionary computation into the laboratory. For example, non-dominated elite selection is one of the simplest methods that uses Pareto domination to choose parents; given its strong performance, we see more sophisticated multiobjective selection algorithms (e.g., NSGA-II; <xref ref-type="bibr" rid="bib21">Deb et al., 2002</xref>) as particularly promising for laboratory directed evolution. Lexicase selection variants are also promising for laboratory directed evolution: epsilon lexicase (<xref ref-type="bibr" rid="bib82">Spector et al., 2018</xref>; <xref ref-type="bibr" rid="bib55">La Cava et al., 2016</xref>) might be useful when population-level characteristics are measured as real-valued quantities, and cohort lexicase selection (<xref ref-type="bibr" rid="bib45">Hernandez et al., 2019</xref>) could reduce the amount of screening required to select parental populations. Beyond selection schemes, we also see quality diversity algorithms (<xref ref-type="bibr" rid="bib35">Hagg, 2021</xref>) as promising techniques to transfer into the laboratory (e.g., MAP-Elites; <xref ref-type="bibr" rid="bib68">Mouret and Clune, 2015</xref>). Other techniques developed to improve evolutionary outcomes have analogues in both evolutionary computing and directed microbial evolution (often with independent intellectual origins), such as methods of perturbing populations to replenish variation (<xref ref-type="bibr" rid="bib51">Hornby, 2006</xref>; <xref ref-type="bibr" rid="bib13">Chang et al., 2021</xref>). These overlapping areas of research are fertile ground for mutually beneficial idea exchange between research communities.</p><p>We see digital experiments like the ones reported here as a critical step for transferring techniques developed for evolutionary computing into the laboratory. Indeed, our results are currently informing the design of laboratory experiments that apply evolutionary computing techniques to the directed evolution of <italic>Escherichia coli</italic>. Our model of directed microbial evolution provides a testbed for rigorously evaluating different artificial selection methods with different laboratory setups (e.g., metapopulation size, maturation period, etc.) before embarking on costly or time-consuming laboratory experiments.</p></sec></sec></body><back><sec sec-type="additional-information" id="s4"><title>Additional information</title><fn-group content-type="competing-interest"><title>Competing interests</title><fn fn-type="COI-statement" id="conf1"><p>No competing interests declared</p></fn><fn fn-type="COI-statement" id="conf2"><p>No competing interests declared</p></fn></fn-group><fn-group content-type="author-contribution"><title>Author contributions</title><fn fn-type="con" id="con1"><p>Conceptualization, Data curation, Software, Formal analysis, Validation, Investigation, Visualization, Methodology, Writing - original draft, Project administration, Writing – review and editing</p></fn><fn fn-type="con" id="con2"><p>Conceptualization, Software, Supervision, Methodology, Writing – review and editing</p></fn><fn fn-type="con" id="con3"><p>Conceptualization, Software, Supervision, Methodology, Writing – review and editing</p></fn><fn fn-type="con" id="con4"><p>Conceptualization, Resources, Supervision, Methodology, Project administration, Writing – review and editing</p></fn></fn-group></sec><sec sec-type="supplementary-material" id="s5"><title>Additional files</title><supplementary-material id="mdar"><label>MDAR checklist</label><media xlink:href="elife-79665-mdarchecklist1-v2.pdf" mimetype="application" mime-subtype="pdf"/></supplementary-material></sec><sec sec-type="data-availability" id="s6"><title>Data availability</title><p>Our source code for experiments, analyses, and visualizations is publicly available on GitHub (<ext-link ext-link-type="uri" xlink:href="https://github.com/amlalejini/directed-digital-evolution">https://github.com/amlalejini/directed-digital-evolution</ext-link>, copy archived at <ext-link ext-link-type="uri" xlink:href="https://archive.softwareheritage.org/swh:1:dir:0caec8a883ff16cf429c50914252098639391923;origin=https://github.com/amlalejini/directed-digital-evolution;visit=swh:1:snp:7b152a7b817dd700e6c5de44e6a9b05fa7c0fb8e;anchor=swh:1:rev:c94684a751a54bc6f2ef2e7c0830614dc280ca01">swh:1:rev:c94684a751a54bc6f2ef2e7c0830614dc280ca01</ext-link>). Our GitHub repository is publicly archived using Zenodo with the following <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.5281/zenodo.6403135">https://doi.org/10.5281/zenodo.6403135</ext-link>. The data produced by our computational experiments are publicly available and archived on the Open Science Framework: <ext-link ext-link-type="uri" xlink:href="https://osf.io/zn63x/">https://osf.io/zn63x/</ext-link> (<ext-link ext-link-type="uri" xlink:href="https://doi.org/10.17605/OSF.IO/ZN63X">https://doi.org/10.17605/OSF.IO/ZN63X</ext-link>).</p><p>The following dataset was generated:</p><p><element-citation publication-type="data" specific-use="isSupplementedBy" id="dataset1"><person-group person-group-type="author"><name><surname>Lalejini</surname><given-names>A</given-names></name></person-group><year iso-8601-date="2022">2022</year><data-title>Data from: Selection schemes from evolutionary computing show promise for directed evolution of microbes</data-title><source>Open Science Framework</source><pub-id pub-id-type="accession" xlink:href="https://osf.io/zn63x/">10.17605/OSF.IO/ZN63X</pub-id></element-citation></p></sec><ack id="ack"><title>Acknowledgements</title><p>We thank the ZE<sup>3</sup> Laboratory for thoughtful discussions, feedback, and support. Additionally, we thank the reviewers for their thoughtful comments and suggestions. This research was supported through computational resources provided by the University of Michigan’s Advanced Research Computing and by Michigan State University’s Institute for Cyber-Enabled Research. Additionally, this research was supported by the National Science Foundation (NSF) through support to LZ (DEB-1813069) and a sub-award to AEV (MCB-1750125).</p></ack><ref-list><title>References</title><ref id="bib1"><element-citation publication-type="confproc"><person-group person-group-type="author"><name><surname>Aenugu</surname><given-names>S</given-names></name><name><surname>Spector</surname><given-names>L</given-names></name></person-group><year iso-8601-date="2019">2019</year><article-title>Lexicase selection in learning classifier systems</article-title><conf-name>Proceedings of the Genetic and Evolutionary Computation Conference on - GECCO ’19</conf-name><fpage>356</fpage><lpage>364</lpage><pub-id pub-id-type="doi">10.1145/3321707.3321828</pub-id></element-citation></ref><ref id="bib2"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Akdemir</surname><given-names>D</given-names></name><name><surname>Beavis</surname><given-names>W</given-names></name><name><surname>Fritsche-Neto</surname><given-names>R</given-names></name><name><surname>Singh</surname><given-names>AK</given-names></name><name><surname>Isidro-Sánchez</surname><given-names>J</given-names></name></person-group><year iso-8601-date="2019">2019</year><article-title>Multi-objective optimized genomic breeding strategies for sustainable food improvement</article-title><source>Heredity</source><volume>122</volume><fpage>672</fpage><lpage>683</lpage><pub-id pub-id-type="doi">10.1038/s41437-018-0147-1</pub-id><pub-id pub-id-type="pmid">30262841</pub-id></element-citation></ref><ref id="bib3"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Arnold</surname><given-names>FH</given-names></name></person-group><year iso-8601-date="1998">1998</year><article-title>Design by directed evolution</article-title><source>Accounts of Chemical Research</source><volume>31</volume><fpage>125</fpage><lpage>131</lpage><pub-id pub-id-type="doi">10.1021/ar960017f</pub-id></element-citation></ref><ref id="bib4"><element-citation publication-type="confproc"><person-group person-group-type="author"><name><surname>Bäck</surname><given-names>T</given-names></name><name><surname>Hoffmeister</surname><given-names>F</given-names></name><name><surname>Schwefel</surname><given-names>HP</given-names></name></person-group><year iso-8601-date="1991">1991</year><article-title>A Survey of Evolution Strategies</article-title><conf-name>In: Proceedings of the Fourth International Conference on Genetic Algorithms Morgan Kaufmann</conf-name><fpage>2</fpage><lpage>9</lpage></element-citation></ref><ref id="bib5"><element-citation publication-type="book"><person-group person-group-type="author"><name><surname>Baeck</surname><given-names>T</given-names></name><name><surname>Fogel</surname><given-names>DB</given-names></name><name><surname>Michalewicz</surname><given-names>Z</given-names></name></person-group><year iso-8601-date="1997">1997</year><source>Handbook of Evolutionary Computation</source><edition>1st ed</edition><publisher-loc>GBR</publisher-loc><publisher-name>IOP Publishing Ltd</publisher-name><pub-id pub-id-type="doi">10.1201/9780367802486</pub-id></element-citation></ref><ref id="bib6"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Beaudry</surname><given-names>AA</given-names></name><name><surname>Joyce</surname><given-names>GF</given-names></name></person-group><year iso-8601-date="1992">1992</year><article-title>Directed evolution of an RNA enzyme</article-title><source>Science</source><volume>257</volume><fpage>635</fpage><lpage>641</lpage><pub-id pub-id-type="doi">10.1126/science.1496376</pub-id><pub-id pub-id-type="pmid">1496376</pub-id></element-citation></ref><ref id="bib7"><element-citation publication-type="book"><person-group person-group-type="author"><name><surname>Brameier</surname><given-names>MF</given-names></name><name><surname>Banzhaf</surname><given-names>W</given-names></name></person-group><year iso-8601-date="2007">2007</year><source>Linear Genetic Programming: Genetic and Evolutionary Computation</source><publisher-name>Springer</publisher-name><pub-id pub-id-type="doi">10.1007/978-0-387-31030-5</pub-id></element-citation></ref><ref id="bib8"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Brenner</surname><given-names>K</given-names></name><name><surname>You</surname><given-names>L</given-names></name><name><surname>Arnold</surname><given-names>FH</given-names></name></person-group><year iso-8601-date="2008">2008</year><article-title>Engineering microbial consortia: a new frontier in synthetic biology</article-title><source>Trends in Biotechnology</source><volume>26</volume><fpage>483</fpage><lpage>489</lpage><pub-id pub-id-type="doi">10.1016/j.tibtech.2008.05.004</pub-id><pub-id pub-id-type="pmid">18675483</pub-id></element-citation></ref><ref id="bib9"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Bruce</surname><given-names>RW</given-names></name><name><surname>Grainger</surname><given-names>CM</given-names></name><name><surname>Ficht</surname><given-names>A</given-names></name><name><surname>Eskandari</surname><given-names>M</given-names></name><name><surname>Rajcan</surname><given-names>I</given-names></name></person-group><year iso-8601-date="2019">2019</year><article-title>Trends in soybean trait improvement over generations of selective breeding</article-title><source>Crop Science</source><volume>59</volume><fpage>1870</fpage><lpage>1879</lpage><pub-id pub-id-type="doi">10.2135/cropsci2018.11.0664</pub-id></element-citation></ref><ref id="bib10"><element-citation publication-type="software"><person-group person-group-type="author"><name><surname>Bryson</surname><given-names>D</given-names></name><name><surname>Baer</surname><given-names>B</given-names></name><name><surname>Vostinar</surname><given-names>A</given-names></name><name><surname>Ofria</surname><given-names>C</given-names></name><name><surname>Barrick</surname><given-names>J</given-names></name><name><surname>Zaman</surname><given-names>L</given-names></name><name><surname>Goldsby</surname><given-names>H</given-names></name><name><surname>Goings</surname><given-names>S</given-names></name><name><surname>Dolson</surname><given-names>E</given-names></name><name><surname>Rupp</surname><given-names>M</given-names></name><name><surname>Covert</surname><given-names>A</given-names></name><name><surname>Blackwood</surname><given-names>D</given-names></name><name><surname>Wagner</surname><given-names>AP</given-names></name></person-group><year iso-8601-date="2021">2021</year><data-title>Avida digital evolution platform software</data-title><version designator="c6179ff">c6179ff</version><source>Github</source><ext-link ext-link-type="uri" xlink:href="https://github.com/devosoft/avida">https://github.com/devosoft/avida</ext-link></element-citation></ref><ref id="bib11"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Burrowes</surname><given-names>BH</given-names></name><name><surname>Molineux</surname><given-names>IJ</given-names></name><name><surname>Fralick</surname><given-names>JA</given-names></name></person-group><year iso-8601-date="2019">2019</year><article-title>Directed in vitro evolution of therapeutic bacteriophages: the appelmans protocol</article-title><source>Viruses</source><volume>11</volume><elocation-id>E241</elocation-id><pub-id pub-id-type="doi">10.3390/v11030241</pub-id><pub-id pub-id-type="pmid">30862096</pub-id></element-citation></ref><ref id="bib12"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Chang</surname><given-names>CY</given-names></name><name><surname>Osborne</surname><given-names>ML</given-names></name><name><surname>Bajic</surname><given-names>D</given-names></name><name><surname>Sanchez</surname><given-names>A</given-names></name></person-group><year iso-8601-date="2020">2020</year><article-title>Artificially selecting bacterial communities using propagule strategies</article-title><source>Evolution; International Journal of Organic Evolution</source><volume>74</volume><fpage>2392</fpage><lpage>2403</lpage><pub-id pub-id-type="doi">10.1111/evo.14092</pub-id><pub-id pub-id-type="pmid">32888315</pub-id></element-citation></ref><ref id="bib13"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Chang</surname><given-names>CY</given-names></name><name><surname>Vila</surname><given-names>JCC</given-names></name><name><surname>Bender</surname><given-names>M</given-names></name><name><surname>Li</surname><given-names>R</given-names></name><name><surname>Mankowski</surname><given-names>MC</given-names></name><name><surname>Bassette</surname><given-names>M</given-names></name><name><surname>Borden</surname><given-names>J</given-names></name><name><surname>Golfier</surname><given-names>S</given-names></name><name><surname>Sanchez</surname><given-names>PGL</given-names></name><name><surname>Waymack</surname><given-names>R</given-names></name><name><surname>Zhu</surname><given-names>X</given-names></name><name><surname>Diaz-Colunga</surname><given-names>J</given-names></name><name><surname>Estrela</surname><given-names>S</given-names></name><name><surname>Rebolleda-Gomez</surname><given-names>M</given-names></name><name><surname>Sanchez</surname><given-names>A</given-names></name></person-group><year iso-8601-date="2021">2021</year><article-title>Engineering complex communities by directed evolution</article-title><source>Nature Ecology &amp; Evolution</source><volume>5</volume><fpage>1011</fpage><lpage>1023</lpage><pub-id pub-id-type="doi">10.1038/s41559-021-01457-5</pub-id><pub-id pub-id-type="pmid">33986540</pub-id></element-citation></ref><ref id="bib14"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Chaves-González</surname><given-names>JM</given-names></name></person-group><year iso-8601-date="2015">2015</year><article-title>Hybrid multiobjective metaheuristics for the design of reliable DNA libraries</article-title><source>Journal of Heuristics</source><volume>21</volume><fpage>751</fpage><lpage>788</lpage><pub-id pub-id-type="doi">10.1007/s10732-015-9298-x</pub-id></element-citation></ref><ref id="bib15"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Chen</surname><given-names>K</given-names></name><name><surname>Arnold</surname><given-names>FH</given-names></name></person-group><year iso-8601-date="1993">1993</year><article-title>Tuning the activity of an enzyme for unusual environments: sequential random mutagenesis of subtilisin E for catalysis in dimethylformamide</article-title><source>PNAS</source><volume>90</volume><fpage>5618</fpage><lpage>5622</lpage><pub-id pub-id-type="doi">10.1073/pnas.90.12.5618</pub-id><pub-id pub-id-type="pmid">8516309</pub-id></element-citation></ref><ref id="bib16"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Cobb</surname><given-names>RE</given-names></name><name><surname>Chao</surname><given-names>R</given-names></name><name><surname>Zhao</surname><given-names>H</given-names></name></person-group><year iso-8601-date="2013">2013</year><article-title>Directed evolution: past, present and future</article-title><source>AIChE Journal. American Institute of Chemical Engineers</source><volume>59</volume><fpage>1432</fpage><lpage>1440</lpage><pub-id pub-id-type="doi">10.1002/aic.13995</pub-id><pub-id pub-id-type="pmid">25733775</pub-id></element-citation></ref><ref id="bib17"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Coello Coello</surname><given-names>CA</given-names></name></person-group><year iso-8601-date="1999">1999</year><article-title>A comprehensive survey of evolutionary-based multiobjective optimization techniques</article-title><source>Knowledge and Information Systems</source><volume>1</volume><fpage>269</fpage><lpage>308</lpage><pub-id pub-id-type="doi">10.1007/BF03325101</pub-id></element-citation></ref><ref id="bib18"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Cooper</surname><given-names>M</given-names></name><name><surname>Gho</surname><given-names>C</given-names></name><name><surname>Leafgren</surname><given-names>R</given-names></name><name><surname>Tang</surname><given-names>T</given-names></name><name><surname>Messina</surname><given-names>C</given-names></name></person-group><year iso-8601-date="2014">2014</year><article-title>Breeding drought-tolerant maize hybrids for the US corn-belt: discovery to product</article-title><source>Journal of Experimental Botany</source><volume>65</volume><fpage>6191</fpage><lpage>6204</lpage><pub-id pub-id-type="doi">10.1093/jxb/eru064</pub-id><pub-id pub-id-type="pmid">24596174</pub-id></element-citation></ref><ref id="bib19"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Currin</surname><given-names>A</given-names></name><name><surname>Swainston</surname><given-names>N</given-names></name><name><surname>Day</surname><given-names>PJ</given-names></name><name><surname>Kell</surname><given-names>DB</given-names></name></person-group><year iso-8601-date="2015">2015</year><article-title>Synthetic biology for the directed evolution of protein biocatalysts: navigating sequence space intelligently</article-title><source>Chemical Society Reviews</source><volume>44</volume><fpage>1172</fpage><lpage>1239</lpage><pub-id pub-id-type="doi">10.1039/c4cs00351a</pub-id><pub-id pub-id-type="pmid">25503938</pub-id></element-citation></ref><ref id="bib20"><element-citation publication-type="book"><person-group person-group-type="author"><name><surname>Deb</surname><given-names>K</given-names></name><name><surname>Agrawal</surname><given-names>S</given-names></name><name><surname>Pratap</surname><given-names>A</given-names></name><name><surname>Meyarivan</surname><given-names>T</given-names></name></person-group><year iso-8601-date="2000">2000</year><source>Parallel Problem Solving from Nature PPSN VI</source><publisher-name>Springer</publisher-name><pub-id pub-id-type="doi">10.1007/3-540-45356-3_83</pub-id></element-citation></ref><ref id="bib21"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Deb</surname><given-names>K</given-names></name><name><surname>Pratap</surname><given-names>A</given-names></name><name><surname>Agarwal</surname><given-names>S</given-names></name><name><surname>Meyarivan</surname><given-names>T</given-names></name></person-group><year iso-8601-date="2002">2002</year><article-title>A fast and elitist multiobjective genetic algorithm: NSGA-II</article-title><source>IEEE Transactions on Evolutionary Computation</source><volume>6</volume><fpage>182</fpage><lpage>197</lpage><pub-id pub-id-type="doi">10.1109/4235.996017</pub-id></element-citation></ref><ref id="bib22"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>DeBenedictis</surname><given-names>EA</given-names></name><name><surname>Chory</surname><given-names>EJ</given-names></name><name><surname>Gretton</surname><given-names>DW</given-names></name><name><surname>Wang</surname><given-names>B</given-names></name><name><surname>Golas</surname><given-names>S</given-names></name><name><surname>Esvelt</surname><given-names>KM</given-names></name></person-group><year iso-8601-date="2021">2021</year><article-title>Systematic molecular evolution enables robust biomolecule discovery</article-title><source>Nature Methods</source><volume>19</volume><elocation-id>55</elocation-id><pub-id pub-id-type="doi">10.1038/s41592-021-01348-4</pub-id><pub-id pub-id-type="pmid">34969982</pub-id></element-citation></ref><ref id="bib23"><element-citation publication-type="preprint"><person-group person-group-type="author"><name><surname>Dolson</surname><given-names>E</given-names></name><name><surname>Banzhaf</surname><given-names>W</given-names></name><name><surname>Ofria</surname><given-names>C</given-names></name></person-group><year iso-8601-date="2018">2018</year><article-title>Ecological Theory Provides Insights about Evolutionary Computation</article-title><source>PeerJ Preprints</source><pub-id pub-id-type="doi">10.7287/peerj.preprints.27315v1</pub-id></element-citation></ref><ref id="bib24"><element-citation publication-type="book"><person-group person-group-type="author"><name><surname>Dolson</surname><given-names>E</given-names></name><name><surname>Lalejini</surname><given-names>A</given-names></name><name><surname>Ofria</surname><given-names>C</given-names></name></person-group><year iso-8601-date="2019">2019</year><chapter-title>Exploring genetic programming systems with MAP-elites</chapter-title><person-group person-group-type="editor"><name><surname>Banzhaf</surname><given-names>W</given-names></name><name><surname>Spector</surname><given-names>L</given-names></name><name><surname>Sheneman</surname><given-names>L</given-names></name></person-group><source>Genetic Programming Theory and Practice XVI</source><publisher-name>Springer International Publishing</publisher-name><fpage>1</fpage><lpage>16</lpage><pub-id pub-id-type="doi">10.1007/978-3-030-04735-1_1</pub-id></element-citation></ref><ref id="bib25"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Driscoll</surname><given-names>CA</given-names></name><name><surname>Macdonald</surname><given-names>DW</given-names></name><name><surname>O’Brien</surname><given-names>SJ</given-names></name></person-group><year iso-8601-date="2009">2009</year><article-title>From wild animals to domestic pets, an evolutionary view of domestication</article-title><source>PNAS</source><volume>106 Suppl 1</volume><fpage>9971</fpage><lpage>9978</lpage><pub-id pub-id-type="doi">10.1073/pnas.0901586106</pub-id><pub-id pub-id-type="pmid">19528637</pub-id></element-citation></ref><ref id="bib26"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Escalante</surname><given-names>AE</given-names></name><name><surname>Rebolleda-Gómez</surname><given-names>M</given-names></name><name><surname>Benítez</surname><given-names>M</given-names></name><name><surname>Travisano</surname><given-names>M</given-names></name></person-group><year iso-8601-date="2015">2015</year><article-title>Ecological perspectives on synthetic biology: insights from microbial population biology</article-title><source>Frontiers in Microbiology</source><volume>6</volume><elocation-id>143</elocation-id><pub-id pub-id-type="doi">10.3389/fmicb.2015.00143</pub-id><pub-id pub-id-type="pmid">25767468</pub-id></element-citation></ref><ref id="bib27"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Esvelt</surname><given-names>KM</given-names></name><name><surname>Carlson</surname><given-names>JC</given-names></name><name><surname>Liu</surname><given-names>DR</given-names></name></person-group><year iso-8601-date="2011">2011</year><article-title>A system for the continuous directed evolution of biomolecules</article-title><source>Nature</source><volume>472</volume><fpage>499</fpage><lpage>503</lpage><pub-id pub-id-type="doi">10.1038/nature09929</pub-id><pub-id pub-id-type="pmid">21478873</pub-id></element-citation></ref><ref id="bib28"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Fogel</surname><given-names>DB</given-names></name></person-group><year iso-8601-date="2000">2000</year><article-title>What is evolutionary computation?</article-title><source>IEEE Spectrum</source><volume>37</volume><fpage>26</fpage><lpage>32</lpage><pub-id pub-id-type="doi">10.1109/6.819926</pub-id></element-citation></ref><ref id="bib29"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Fonseca</surname><given-names>CM</given-names></name><name><surname>Fleming</surname><given-names>PJ</given-names></name></person-group><year iso-8601-date="1995">1995</year><article-title>An overview of evolutionary algorithms in multiobjective optimization</article-title><source>Evolutionary Computation</source><volume>3</volume><fpage>1</fpage><lpage>16</lpage><pub-id pub-id-type="doi">10.1162/evco.1995.3.1.1</pub-id></element-citation></ref><ref id="bib30"><element-citation publication-type="software"><person-group person-group-type="author"><name><surname>Frerebeau</surname><given-names>N</given-names></name></person-group><year iso-8601-date="2022">2022</year><data-title>Colour schemes for scientific data visualization package ‘khroma.’</data-title><version designator="1.9.0">1.9.0</version><source>R Package Version</source><ext-link ext-link-type="uri" xlink:href="https://packages.tesselle.org/khroma">https://packages.tesselle.org/khroma</ext-link></element-citation></ref><ref id="bib31"><element-citation publication-type="software"><person-group person-group-type="author"><name><surname>Garnier</surname><given-names>S</given-names></name></person-group><year iso-8601-date="2018">2018</year><data-title>Viridis: default color maps from ’matplotlib’</data-title><version designator="0.5.1">0.5.1</version><source>R Package</source><ext-link ext-link-type="uri" xlink:href="https://CRAN.R-project.org/package=viridis">https://CRAN.R-project.org/package=viridis</ext-link></element-citation></ref><ref id="bib32"><element-citation publication-type="confproc"><person-group person-group-type="author"><name><surname>Goings</surname><given-names>S</given-names></name><name><surname>Goldsby</surname><given-names>H</given-names></name><name><surname>Cheng</surname><given-names>BHC</given-names></name><name><surname>Ofria</surname><given-names>C</given-names></name></person-group><year iso-8601-date="2012">2012</year><article-title>An ecology-based evolutionary algorithm to evolve solutions to complex problems</article-title><conf-name>Artificial Life 13</conf-name><fpage>171</fpage><lpage>177</lpage></element-citation></ref><ref id="bib33"><element-citation publication-type="confproc"><person-group person-group-type="author"><name><surname>Goldberg</surname><given-names>DE</given-names></name><name><surname>Richardson</surname><given-names>J</given-names></name></person-group><year iso-8601-date="1987">1987</year><article-title>Genetic algorithms with sharing for multimodal function optimization</article-title><conf-name>In: Genetic algorithms and their applications: Proceedings of the Second International Conference on Genetic Algorithms</conf-name><fpage>41</fpage><lpage>49</lpage></element-citation></ref><ref id="bib34"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Goodnight</surname><given-names>CJ</given-names></name></person-group><year iso-8601-date="1990">1990</year><article-title>Experimental studies of community evolution I: the response to selection at the community level</article-title><source>Evolution; International Journal of Organic Evolution</source><volume>44</volume><elocation-id>1614</elocation-id><pub-id pub-id-type="doi">10.2307/2409341</pub-id></element-citation></ref><ref id="bib35"><element-citation publication-type="book"><person-group person-group-type="author"><name><surname>Hagg</surname><given-names>A</given-names></name></person-group><year iso-8601-date="2021">2021</year><chapter-title>Phenotypic niching using quality diversity algorithms</chapter-title><person-group person-group-type="editor"><name><surname>Preuss</surname><given-names>M</given-names></name><name><surname>Epitropakis</surname><given-names>MG</given-names></name><name><surname>Li</surname><given-names>X</given-names></name><name><surname>Fieldsend</surname><given-names>JE</given-names></name></person-group><source>Metaheuristics for Finding Multiple Solutions</source><publisher-loc>Cham</publisher-loc><publisher-name>Springer International Publishing</publisher-name><fpage>287</fpage><lpage>315</lpage><pub-id pub-id-type="doi">10.1007/978-3-030-79553-5</pub-id></element-citation></ref><ref id="bib36"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Handl</surname><given-names>J</given-names></name><name><surname>Kell</surname><given-names>DB</given-names></name><name><surname>Knowles</surname><given-names>J</given-names></name></person-group><year iso-8601-date="2007">2007</year><article-title>Multiobjective optimization in bioinformatics and computational biology</article-title><source>IEEE/ACM Transactions on Computational Biology and Bioinformatics</source><volume>4</volume><fpage>279</fpage><lpage>292</lpage><pub-id pub-id-type="doi">10.1109/TCBB.2007.070203</pub-id><pub-id pub-id-type="pmid">17473320</pub-id></element-citation></ref><ref id="bib37"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Harrower</surname><given-names>M</given-names></name><name><surname>Brewer</surname><given-names>CA</given-names></name></person-group><year iso-8601-date="2003">2003</year><article-title>ColorBrewer.org: an online tool for selecting colour schemes for maps</article-title><source>The Cartographic Journal</source><volume>40</volume><fpage>27</fpage><lpage>37</lpage><pub-id pub-id-type="doi">10.1179/000870403235002042</pub-id></element-citation></ref><ref id="bib38"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>He</surname><given-names>Z</given-names></name><name><surname>Yen</surname><given-names>GG</given-names></name><name><surname>Zhang</surname><given-names>J</given-names></name></person-group><year iso-8601-date="2014">2014</year><article-title>Fuzzy-based pareto optimality for many-objective evolutionary algorithms</article-title><source>IEEE Transactions on Evolutionary Computation</source><volume>18</volume><fpage>269</fpage><lpage>285</lpage><pub-id pub-id-type="doi">10.1109/TEVC.2013.2258025</pub-id></element-citation></ref><ref id="bib39"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>He</surname><given-names>Z</given-names></name><name><surname>Yen</surname><given-names>GG</given-names></name></person-group><year iso-8601-date="2016">2016</year><article-title>Many-objective evolutionary algorithm: objective space reduction and diversity improvement</article-title><source>IEEE Transactions on Evolutionary Computation</source><volume>20</volume><fpage>145</fpage><lpage>160</lpage><pub-id pub-id-type="doi">10.1109/TEVC.2015.2433266</pub-id></element-citation></ref><ref id="bib40"><element-citation publication-type="confproc"><person-group person-group-type="author"><name><surname>Helmuth</surname><given-names>T</given-names></name><name><surname>Spector</surname><given-names>L</given-names></name></person-group><year iso-8601-date="2015">2015a</year><article-title>General Program Synthesis Benchmark Suite</article-title><conf-name>GECCO ’15</conf-name><conf-loc>Madrid Spain</conf-loc><fpage>1039</fpage><lpage>1046</lpage><pub-id pub-id-type="doi">10.1145/2739480.2754769</pub-id></element-citation></ref><ref id="bib41"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Helmuth</surname><given-names>T</given-names></name><name><surname>Spector</surname><given-names>L</given-names></name><name><surname>Matheson</surname><given-names>J</given-names></name></person-group><year iso-8601-date="2015">2015b</year><article-title>Solving uncompromising problems with lexicase selection</article-title><source>IEEE Transactions on Evolutionary Computation</source><volume>19</volume><fpage>630</fpage><lpage>643</lpage><pub-id pub-id-type="doi">10.1109/TEVC.2014.2362729</pub-id></element-citation></ref><ref id="bib42"><element-citation publication-type="book"><person-group person-group-type="author"><name><surname>Helmuth</surname><given-names>T</given-names></name><name><surname>McPhee</surname><given-names>NF</given-names></name><name><surname>Spector</surname><given-names>L</given-names></name></person-group><year iso-8601-date="2016">2016</year><chapter-title>Lexicase selection for program synthesis: A diversity analysis</chapter-title><person-group person-group-type="editor"><name><surname>Riolo</surname><given-names>R</given-names></name><name><surname>Worzel</surname><given-names>WP</given-names></name><name><surname>Kotanchek</surname><given-names>M</given-names></name><name><surname>Kordon</surname><given-names>A</given-names></name></person-group><source>Genetic Programming Theory and Practice XIII</source><publisher-loc>Cham</publisher-loc><publisher-name>Springer International Publishing</publisher-name><fpage>151</fpage><lpage>167</lpage><pub-id pub-id-type="doi">10.1007/978-3-319-34223-8</pub-id></element-citation></ref><ref id="bib43"><element-citation publication-type="confproc"><person-group person-group-type="author"><name><surname>Helmuth</surname><given-names>T</given-names></name><name><surname>Pantridge</surname><given-names>E</given-names></name><name><surname>Spector</surname><given-names>L</given-names></name></person-group><year iso-8601-date="2019">2019</year><article-title>Lexicase selection of specialists</article-title><conf-name>GECCO ’19</conf-name><conf-loc>Prague Czech Republic</conf-loc><fpage>1030</fpage><lpage>1038</lpage><pub-id pub-id-type="doi">10.1145/3321707.3321875</pub-id></element-citation></ref><ref id="bib44"><element-citation publication-type="confproc"><person-group person-group-type="author"><name><surname>Helmuth</surname><given-names>T</given-names></name><name><surname>Abdelhady</surname><given-names>A</given-names></name></person-group><year iso-8601-date="2020">2020</year><article-title>Benchmarking parent selection for program synthesis by genetic programming</article-title><conf-name>GECCO ’20</conf-name><conf-loc>Cancún Mexico</conf-loc><fpage>237</fpage><lpage>238</lpage><pub-id pub-id-type="doi">10.1145/3377929.3389987</pub-id></element-citation></ref><ref id="bib45"><element-citation publication-type="confproc"><person-group person-group-type="author"><name><surname>Hernandez</surname><given-names>JG</given-names></name><name><surname>Lalejini</surname><given-names>A</given-names></name><name><surname>Dolson</surname><given-names>E</given-names></name><name><surname>Ofria</surname><given-names>C</given-names></name></person-group><year iso-8601-date="2019">2019</year><article-title>Random subsampling improves performance in lexicase selection</article-title><conf-name>GECCO ’19</conf-name><conf-loc>Prague Czech Republic</conf-loc><fpage>2028</fpage><lpage>2031</lpage><pub-id pub-id-type="doi">10.1145/3319619.3326900</pub-id></element-citation></ref><ref id="bib46"><element-citation publication-type="book"><person-group person-group-type="author"><name><surname>Hernandez</surname><given-names>JG</given-names></name><name><surname>Lalejini</surname><given-names>A</given-names></name><name><surname>Dolson</surname><given-names>E</given-names></name></person-group><year iso-8601-date="2022">2022a</year><chapter-title>What can phylogenetic metrics tell us about useful diversity in evolutionary algorithms?</chapter-title><person-group person-group-type="editor"><name><surname>Banzhaf</surname><given-names>W</given-names></name><name><surname>Trujillo</surname><given-names>L</given-names></name><name><surname>Winkler</surname><given-names>S</given-names></name><name><surname>Worzel</surname><given-names>B</given-names></name></person-group><source>Genetic Programming Theory and Practice XVIII</source><publisher-loc>Singapore</publisher-loc><publisher-name>Springer Nature Singapore</publisher-name><fpage>63</fpage><lpage>82</lpage><pub-id pub-id-type="doi">10.1007/978-981-16-8113-4_4</pub-id></element-citation></ref><ref id="bib47"><element-citation publication-type="book"><person-group person-group-type="author"><name><surname>Hernandez</surname><given-names>JG</given-names></name><name><surname>Lalejini</surname><given-names>A</given-names></name><name><surname>Ofria</surname><given-names>C</given-names></name></person-group><year iso-8601-date="2022">2022b</year><chapter-title>An exploration of exploration: measuring the ability of lexicase selection to find obscure pathways to optimality</chapter-title><person-group person-group-type="editor"><name><surname>Banzhaf</surname><given-names>W</given-names></name><name><surname>Trujillo</surname><given-names>L</given-names></name><name><surname>Winkler</surname><given-names>S</given-names></name><name><surname>Worzel</surname><given-names>B</given-names></name></person-group><source>Genetic Programming Theory and Practice XVIII</source><publisher-loc>Singapore</publisher-loc><publisher-name>Springer Nature Singapore</publisher-name><fpage>83</fpage><lpage>107</lpage><pub-id pub-id-type="doi">10.1007/978-981-16-8113-4_5</pub-id></element-citation></ref><ref id="bib48"><element-citation publication-type="preprint"><person-group person-group-type="author"><name><surname>Hernandez</surname><given-names>JG</given-names></name><name><surname>Lalejini</surname><given-names>A</given-names></name><name><surname>Ofria</surname><given-names>C</given-names></name></person-group><year iso-8601-date="2022">2022c</year><article-title>A Suite of Diagnostic Metrics for Characterizing Selection Schemes</article-title><source>arXiv</source><ext-link ext-link-type="uri" xlink:href="https://arxiv.org/abs/2204.13839">https://arxiv.org/abs/2204.13839</ext-link><pub-id pub-id-type="doi">10.48550/arXiv.2204.13839</pub-id></element-citation></ref><ref id="bib49"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Hill</surname><given-names>WG</given-names></name><name><surname>Caballero</surname><given-names>A</given-names></name></person-group><year iso-8601-date="1992">1992</year><article-title>Artificial selection experiments</article-title><source>Annual Review of Ecology and Systematics</source><volume>23</volume><fpage>287</fpage><lpage>310</lpage><pub-id pub-id-type="doi">10.1146/annurev.es.23.110192.001443</pub-id><pub-id pub-id-type="pmid">24271101</pub-id></element-citation></ref><ref id="bib50"><element-citation publication-type="confproc"><person-group person-group-type="author"><name><surname>Horn</surname><given-names>J</given-names></name><name><surname>Nafpliotis</surname><given-names>N</given-names></name><name><surname>Goldberg</surname><given-names>DE</given-names></name></person-group><year iso-8601-date="1994">1994</year><article-title>A niched Pareto genetic algorithm for multiobjective optimization</article-title><conf-name>First IEEE Conference on Evolutionary Computation. IEEE World Congress on Computational Intelligence</conf-name><fpage>82</fpage><lpage>87</lpage><pub-id pub-id-type="doi">10.1109/ICEC.1994.350037</pub-id></element-citation></ref><ref id="bib51"><element-citation publication-type="confproc"><person-group person-group-type="author"><name><surname>Hornby</surname><given-names>GS</given-names></name></person-group><year iso-8601-date="2006">2006</year><article-title>ALPS: the age-layered population structure for reducing the problem of premature convergence</article-title><conf-name>Proceedings of the 8th annual conference on Genetic and evolutionary computation - GECCO ’06</conf-name><pub-id pub-id-type="doi">10.1145/1143997.1144142</pub-id></element-citation></ref><ref id="bib52"><element-citation publication-type="confproc"><person-group person-group-type="author"><name><surname>Ibrahim</surname><given-names>A</given-names></name><name><surname>Rahnamayan</surname><given-names>S</given-names></name><name><surname>Martin</surname><given-names>MV</given-names></name><name><surname>Deb</surname><given-names>K</given-names></name></person-group><year iso-8601-date="2016">2016</year><article-title>EliteNSGA-III: An improved evolutionary many-objective optimization algorithm</article-title><conf-name>2016 IEEE Congress on Evolutionary Computation</conf-name><fpage>973</fpage><lpage>982</lpage><pub-id pub-id-type="doi">10.1109/CEC.2016.7743895</pub-id></element-citation></ref><ref id="bib53"><element-citation publication-type="preprint"><person-group person-group-type="author"><name><surname>Izutsu</surname><given-names>M</given-names></name><name><surname>Lake</surname><given-names>DM</given-names></name><name><surname>Matson</surname><given-names>ZWD</given-names></name><name><surname>Dodson</surname><given-names>JP</given-names></name><name><surname>Lenski</surname><given-names>RE</given-names></name></person-group><year iso-8601-date="2021">2021</year><article-title>Effects of periodic bottlenecks on the dynamics of adaptive evolution in microbial populations</article-title><source>bioRxiv</source><pub-id pub-id-type="doi">10.1101/2021.12.29.474457</pub-id></element-citation></ref><ref id="bib54"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Kruskal</surname><given-names>WH</given-names></name><name><surname>Wallis</surname><given-names>WA</given-names></name></person-group><year iso-8601-date="1952">1952</year><article-title>Use of ranks in one-criterion variance analysis</article-title><source>Journal of the American Statistical Association</source><volume>47</volume><fpage>583</fpage><lpage>621</lpage><pub-id pub-id-type="doi">10.1080/01621459.1952.10483441</pub-id></element-citation></ref><ref id="bib55"><element-citation publication-type="confproc"><person-group person-group-type="author"><name><surname>La Cava</surname><given-names>W</given-names></name><name><surname>Spector</surname><given-names>L</given-names></name><name><surname>Danai</surname><given-names>K</given-names></name></person-group><year iso-8601-date="2016">2016</year><article-title>Epsilon-Lexicase Selection for Regression</article-title><conf-name>GECCO ’16</conf-name><conf-loc>Denver Colorado USA</conf-loc><fpage>741</fpage><lpage>748</lpage><pub-id pub-id-type="doi">10.1145/2908812.2908898</pub-id></element-citation></ref><ref id="bib56"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Lalejini</surname><given-names>A</given-names></name><name><surname>Ferguson</surname><given-names>AJ</given-names></name><name><surname>Grant</surname><given-names>NA</given-names></name><name><surname>Ofria</surname><given-names>C</given-names></name></person-group><year iso-8601-date="2021">2021</year><article-title>Adaptive phenotypic plasticity stabilizes evolution in fluctuating environments</article-title><source>Frontiers in Ecology and Evolution</source><volume>9</volume><elocation-id>715381</elocation-id><pub-id pub-id-type="doi">10.3389/fevo.2021.715381</pub-id></element-citation></ref><ref id="bib57"><element-citation publication-type="data"><person-group person-group-type="author"><name><surname>Lalejini</surname><given-names>AM</given-names></name></person-group><year iso-8601-date="2022">2022</year><data-title>Selection schemes from evolutionary computing show promise for directed evolution of microbes</data-title><source>Open Science Framework</source><pub-id pub-id-type="doi">10.17605/OSF.IO/ZN63X</pub-id></element-citation></ref><ref id="bib58"><element-citation publication-type="software"><person-group person-group-type="author"><name><surname>Lalejini</surname><given-names>A</given-names></name><name><surname>Dolson</surname><given-names>E</given-names></name><name><surname>Vostinar</surname><given-names>AE</given-names></name><name><surname>Zaman</surname><given-names>L</given-names></name></person-group><year iso-8601-date="2022">2022</year><data-title>Supplemental material for this manuscript</data-title><version designator="c94684a">c94684a</version><source>Github</source><ext-link ext-link-type="uri" xlink:href="https://github.com/amlalejini/directed-digital-evolution">https://github.com/amlalejini/directed-digital-evolution</ext-link></element-citation></ref><ref id="bib59"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Lehman</surname><given-names>J</given-names></name><name><surname>Stanley</surname><given-names>KO</given-names></name></person-group><year iso-8601-date="2011">2011a</year><article-title>Abandoning objectives: evolution through the search for novelty alone</article-title><source>Evolutionary Computation</source><volume>19</volume><fpage>189</fpage><lpage>223</lpage><pub-id pub-id-type="doi">10.1162/EVCO_a_00025</pub-id><pub-id pub-id-type="pmid">20868264</pub-id></element-citation></ref><ref id="bib60"><element-citation publication-type="confproc"><person-group person-group-type="author"><name><surname>Lehman</surname><given-names>J</given-names></name><name><surname>Stanley</surname><given-names>KO</given-names></name></person-group><year iso-8601-date="2011">2011b</year><article-title>Evolving a diversity of virtual creatures through novelty search and local competition</article-title><conf-name>the 13th annual conference</conf-name><conf-loc>Dublin, Ireland</conf-loc><pub-id pub-id-type="doi">10.1145/2001576.2001606</pub-id></element-citation></ref><ref id="bib61"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Lenski</surname><given-names>RE</given-names></name><name><surname>Ofria</surname><given-names>C</given-names></name><name><surname>Collier</surname><given-names>TC</given-names></name><name><surname>Adami</surname><given-names>C</given-names></name></person-group><year iso-8601-date="1999">1999</year><article-title>Genome complexity, robustness and genetic interactions in digital organisms</article-title><source>Nature</source><volume>400</volume><fpage>661</fpage><lpage>664</lpage><pub-id pub-id-type="doi">10.1038/23245</pub-id><pub-id pub-id-type="pmid">10458160</pub-id></element-citation></ref><ref id="bib62"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Lenski</surname><given-names>RE</given-names></name><name><surname>Ofria</surname><given-names>C</given-names></name><name><surname>Pennock</surname><given-names>RT</given-names></name><name><surname>Adami</surname><given-names>C</given-names></name></person-group><year iso-8601-date="2003">2003</year><article-title>The evolutionary origin of complex features</article-title><source>Nature</source><volume>423</volume><fpage>139</fpage><lpage>144</lpage><pub-id pub-id-type="doi">10.1038/nature01568</pub-id><pub-id pub-id-type="pmid">12736677</pub-id></element-citation></ref><ref id="bib63"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Libkind</surname><given-names>D</given-names></name><name><surname>Hittinger</surname><given-names>CT</given-names></name><name><surname>Valério</surname><given-names>E</given-names></name><name><surname>Gonçalves</surname><given-names>C</given-names></name><name><surname>Dover</surname><given-names>J</given-names></name><name><surname>Johnston</surname><given-names>M</given-names></name><name><surname>Gonçalves</surname><given-names>P</given-names></name><name><surname>Sampaio</surname><given-names>JP</given-names></name></person-group><year iso-8601-date="2011">2011</year><article-title>Microbe domestication and the identification of the wild genetic stock of lager-brewing yeast</article-title><source>PNAS</source><volume>108</volume><fpage>14539</fpage><lpage>14544</lpage><pub-id pub-id-type="doi">10.1073/pnas.1105430108</pub-id><pub-id pub-id-type="pmid">21873232</pub-id></element-citation></ref><ref id="bib64"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Maheshri</surname><given-names>N</given-names></name><name><surname>Koerber</surname><given-names>JT</given-names></name><name><surname>Kaspar</surname><given-names>BK</given-names></name><name><surname>Schaffer</surname><given-names>DV</given-names></name></person-group><year iso-8601-date="2006">2006</year><article-title>Directed evolution of adeno-associated virus yields enhanced gene delivery vectors</article-title><source>Nature Biotechnology</source><volume>24</volume><fpage>198</fpage><lpage>204</lpage><pub-id pub-id-type="doi">10.1038/nbt1182</pub-id><pub-id pub-id-type="pmid">16429148</pub-id></element-citation></ref><ref id="bib65"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Mahrt</surname><given-names>N</given-names></name><name><surname>Tietze</surname><given-names>A</given-names></name><name><surname>Künzel</surname><given-names>S</given-names></name><name><surname>Franzenburg</surname><given-names>S</given-names></name><name><surname>Barbosa</surname><given-names>C</given-names></name><name><surname>Jansen</surname><given-names>G</given-names></name><name><surname>Schulenburg</surname><given-names>H</given-names></name></person-group><year iso-8601-date="2021">2021</year><article-title>Bottleneck size and selection level reproducibly impact evolution of antibiotic resistance</article-title><source>Nature Ecology &amp; Evolution</source><volume>5</volume><fpage>1233</fpage><lpage>1242</lpage><pub-id pub-id-type="doi">10.1038/s41559-021-01511-2</pub-id><pub-id pub-id-type="pmid">34312522</pub-id></element-citation></ref><ref id="bib66"><element-citation publication-type="book"><person-group person-group-type="author"><name><surname>Metevier</surname><given-names>B</given-names></name><name><surname>Saini</surname><given-names>AK</given-names></name><name><surname>Spector</surname><given-names>L</given-names></name></person-group><year iso-8601-date="2019">2019</year><chapter-title>Lexicase selection beyond genetic programming</chapter-title><person-group person-group-type="editor"><name><surname>Banzhaf</surname><given-names>W</given-names></name><name><surname>Spector</surname><given-names>L</given-names></name><name><surname>Sheneman</surname><given-names>L</given-names></name></person-group><source>Genetic Programming Theory and Practice XVI</source><publisher-loc>Cham</publisher-loc><publisher-name>Springer International Publishing</publisher-name><fpage>123</fpage><lpage>136</lpage><pub-id pub-id-type="doi">10.1007/978-3-030-04735-1_7</pub-id></element-citation></ref><ref id="bib67"><element-citation publication-type="confproc"><person-group person-group-type="author"><name><surname>Moore</surname><given-names>JM</given-names></name><name><surname>Stanton</surname><given-names>A</given-names></name></person-group><year iso-8601-date="2017">2017</year><article-title>Lexicase selection outperforms previous strategies for incremental evolution of virtual creature controllers</article-title><conf-name>Proceedings of the 14th European Conference on Artificial Life ECAL 2017</conf-name><conf-loc>Lyon, France</conf-loc><fpage>290</fpage><lpage>297</lpage><pub-id pub-id-type="doi">10.7551/ecal_a_050</pub-id></element-citation></ref><ref id="bib68"><element-citation publication-type="preprint"><person-group person-group-type="author"><name><surname>Mouret</surname><given-names>JB</given-names></name><name><surname>Clune</surname><given-names>J</given-names></name></person-group><year iso-8601-date="2015">2015</year><article-title>Illuminating Search Spaces by Mapping Elites</article-title><source>arXiv</source><ext-link ext-link-type="uri" xlink:href="https://arxiv.org/abs/1504.04909">https://arxiv.org/abs/1504.04909</ext-link><pub-id pub-id-type="doi">10.48550/arXiv.1504.04909</pub-id></element-citation></ref><ref id="bib69"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Mühlenbein</surname><given-names>H</given-names></name><name><surname>Schlierkamp-Voosen</surname><given-names>D</given-names></name></person-group><year iso-8601-date="1993">1993</year><article-title>Predictive models for the breeder genetic algorithm I. continuous parameter optimization</article-title><source>Evolutionary Computation</source><volume>1</volume><fpage>25</fpage><lpage>49</lpage><pub-id pub-id-type="doi">10.1162/evco.1993.1.1.25</pub-id></element-citation></ref><ref id="bib70"><element-citation publication-type="software"><person-group person-group-type="author"><name><surname>Neuwirth</surname><given-names>E</given-names></name></person-group><year iso-8601-date="2014">2014</year><data-title>RColorBrewer: colorbrewer palettes</data-title><version designator="1.1-2">1.1-2</version><source>R Package</source><ext-link ext-link-type="uri" xlink:href="https://CRAN.R-project.org/package=RColorBrewer">https://CRAN.R-project.org/package=RColorBrewer</ext-link></element-citation></ref><ref id="bib71"><element-citation publication-type="book"><person-group person-group-type="author"><name><surname>Ofria</surname><given-names>C</given-names></name><name><surname>Bryson</surname><given-names>DM</given-names></name><name><surname>Wilke</surname><given-names>CO</given-names></name></person-group><year iso-8601-date="2009">2009</year><chapter-title>Avida: A software platform for research in computational evolutionary biology</chapter-title><person-group person-group-type="editor"><name><surname>Komosinski</surname><given-names>M</given-names></name><name><surname>Adamatzky</surname><given-names>A</given-names></name></person-group><source>Artificial Life Models in Software</source><publisher-name>Springer</publisher-name><fpage>3</fpage><lpage>35</lpage><pub-id pub-id-type="doi">10.1007/978-1-84882-285-6_1</pub-id></element-citation></ref><ref id="bib72"><element-citation publication-type="software"><person-group person-group-type="author"><name><surname>Ofria</surname><given-names>C</given-names></name><name><surname>Moreno</surname><given-names>MA</given-names></name><name><surname>Dolson</surname><given-names>E</given-names></name><name><surname>Lalejini</surname><given-names>A</given-names></name><name><surname>Rodriguez-Papa</surname><given-names>S</given-names></name><name><surname>Fenton</surname><given-names>J</given-names></name><name><surname>Perry</surname><given-names>K</given-names></name><name><surname>Jorgensen</surname><given-names>S</given-names></name><name><surname>Hoffman</surname><given-names>R</given-names></name><name><surname>Miller</surname><given-names>R</given-names></name><name><surname>Edwards</surname><given-names>OB</given-names></name><name><surname>Stredwick</surname><given-names>J</given-names></name><name><surname>Clemons</surname><given-names>R</given-names></name><name><surname>Vostinar</surname><given-names>A</given-names></name><name><surname>Moreno</surname><given-names>R</given-names></name><name><surname>Schossau</surname><given-names>J</given-names></name><name><surname>Zaman</surname><given-names>L</given-names></name><name><surname>Rainbow</surname><given-names>D</given-names></name></person-group><year iso-8601-date="2020">2020</year><data-title>Empirical: A scientific software library for research, education, and public engagement</data-title><version designator="2aad170">2aad170</version><source>Zenodo</source><ext-link ext-link-type="uri" xlink:href="https://doi.org/10.5281/zenodo.4141943">https://doi.org/10.5281/zenodo.4141943</ext-link></element-citation></ref><ref id="bib73"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>O’Hagan</surname><given-names>S</given-names></name><name><surname>Knowles</surname><given-names>J</given-names></name><name><surname>Kell</surname><given-names>DB</given-names></name></person-group><year iso-8601-date="2012">2012</year><article-title>Exploiting genomic knowledge in optimising molecular breeding programmes: algorithms from evolutionary computing</article-title><source>PLOS ONE</source><volume>7</volume><elocation-id>11</elocation-id><pub-id pub-id-type="doi">10.1371/journal.pone.0048862</pub-id><pub-id pub-id-type="pmid">23185279</pub-id></element-citation></ref><ref id="bib74"><element-citation publication-type="software"><person-group person-group-type="author"><collab>R Development Core Team</collab></person-group><year iso-8601-date="2021">2021</year><data-title>R: A language and environment for statistical computing</data-title><publisher-loc>Vienna, Austria</publisher-loc><publisher-name>R Foundation for Statistical Computing</publisher-name><ext-link ext-link-type="uri" xlink:href="https://www.R-project.org">https://www.R-project.org</ext-link></element-citation></ref><ref id="bib75"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Ramasubramanian</surname><given-names>V</given-names></name><name><surname>Beavis</surname><given-names>WD</given-names></name></person-group><year iso-8601-date="2021">2021</year><article-title>Strategies to assure optimal trade-offs among competing objectives for the genetic improvement of soybean</article-title><source>Frontiers in Genetics</source><volume>12</volume><elocation-id>675500</elocation-id><pub-id pub-id-type="doi">10.3389/fgene.2021.675500</pub-id><pub-id pub-id-type="pmid">34630507</pub-id></element-citation></ref><ref id="bib76"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Ratcliff</surname><given-names>WC</given-names></name><name><surname>Denison</surname><given-names>RF</given-names></name><name><surname>Borrello</surname><given-names>M</given-names></name><name><surname>Travisano</surname><given-names>M</given-names></name></person-group><year iso-8601-date="2012">2012</year><article-title>Experimental evolution of multicellularity</article-title><source>PNAS</source><volume>109</volume><fpage>1595</fpage><lpage>1600</lpage><pub-id pub-id-type="doi">10.1073/pnas.1115323109</pub-id></element-citation></ref><ref id="bib77"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Rice</surname><given-names>WR</given-names></name></person-group><year iso-8601-date="1989">1989</year><article-title>Analyzing tables of statistical tests</article-title><source>Evolution; International Journal of Organic Evolution</source><volume>43</volume><fpage>223</fpage><lpage>225</lpage><pub-id pub-id-type="doi">10.1111/j.1558-5646.1989.tb04220.x</pub-id><pub-id pub-id-type="pmid">28568501</pub-id></element-citation></ref><ref id="bib78"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Sánchez</surname><given-names>Á</given-names></name><name><surname>Vila</surname><given-names>JCC</given-names></name><name><surname>Chang</surname><given-names>CY</given-names></name><name><surname>Diaz-Colunga</surname><given-names>J</given-names></name><name><surname>Estrela</surname><given-names>S</given-names></name><name><surname>Rebolleda-Gomez</surname><given-names>M</given-names></name></person-group><year iso-8601-date="2021">2021</year><article-title>Directed evolution of microbial communities</article-title><source>Annual Review of Biophysics</source><volume>50</volume><fpage>323</fpage><lpage>341</lpage><pub-id pub-id-type="doi">10.1146/annurev-biophys-101220-072829</pub-id><pub-id pub-id-type="pmid">33646814</pub-id></element-citation></ref><ref id="bib79"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Shin</surname><given-names>SY</given-names></name><name><surname>Lee</surname><given-names>IH</given-names></name><name><surname>Kim</surname><given-names>D</given-names></name><name><surname>Zhang</surname><given-names>BT</given-names></name></person-group><year iso-8601-date="2005">2005</year><article-title>Multiobjective evolutionary optimization of DNA sequences for reliable DNA computing</article-title><source>IEEE Transactions on Evolutionary Computation</source><volume>9</volume><fpage>143</fpage><lpage>158</lpage><pub-id pub-id-type="doi">10.1109/TEVC.2005.844166</pub-id></element-citation></ref><ref id="bib80"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Simon</surname><given-names>B</given-names></name><name><surname>Fletcher</surname><given-names>JA</given-names></name><name><surname>Doebeli</surname><given-names>M</given-names></name></person-group><year iso-8601-date="2013">2013</year><article-title>Towards a general theory of group selection</article-title><source>Evolution; International Journal of Organic Evolution</source><volume>67</volume><fpage>1561</fpage><lpage>1572</lpage><pub-id pub-id-type="doi">10.1111/j.1558-5646.2012.01835.x</pub-id></element-citation></ref><ref id="bib81"><element-citation publication-type="confproc"><person-group person-group-type="author"><name><surname>Spector</surname><given-names>L</given-names></name></person-group><year iso-8601-date="2012">2012</year><article-title>Assessment of problem modality by differential performance of lexicase selection in genetic programming: a preliminary report</article-title><conf-name>Genetic and Evolutionary Computation Conference</conf-name><conf-loc>Philadelphia, Pennsylvania, USA</conf-loc><pub-id pub-id-type="doi">10.1145/2330784.2330846</pub-id></element-citation></ref><ref id="bib82"><element-citation publication-type="book"><person-group person-group-type="author"><name><surname>Spector</surname><given-names>L</given-names></name><name><surname>Cava</surname><given-names>WL</given-names></name><name><surname>Shanabrook</surname><given-names>S</given-names></name><name><surname>Helmuth</surname><given-names>T</given-names></name><name><surname>Pantridge</surname><given-names>E</given-names></name></person-group><year iso-8601-date="2018">2018</year><chapter-title>Relaxations of lexicase parent selection</chapter-title><person-group person-group-type="editor"><name><surname>Banzhaf</surname><given-names>W</given-names></name><name><surname>Olson</surname><given-names>R</given-names></name><name><surname>Tozier</surname><given-names>W</given-names></name><name><surname>Riolo</surname><given-names>R</given-names></name></person-group><source>Genetic Programming Theory and Practice XV</source><publisher-loc>Cham</publisher-loc><publisher-name>Springer International Publishing</publisher-name><fpage>105</fpage><lpage>120</lpage><pub-id pub-id-type="doi">10.1007/978-3-319-90512-9_7</pub-id></element-citation></ref><ref id="bib83"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Swenson</surname><given-names>W</given-names></name><name><surname>Wilson</surname><given-names>DS</given-names></name><name><surname>Elias</surname><given-names>R</given-names></name></person-group><year iso-8601-date="2000">2000</year><article-title>Artificial ecosystem selection</article-title><source>PNAS</source><volume>97</volume><fpage>9110</fpage><lpage>9114</lpage><pub-id pub-id-type="doi">10.1073/pnas.150237597</pub-id><pub-id pub-id-type="pmid">10890915</pub-id></element-citation></ref><ref id="bib84"><element-citation publication-type="thesis"><person-group person-group-type="author"><name><surname>Tanese</surname><given-names>R</given-names></name></person-group><year iso-8601-date="1989">1989</year><article-title>Distributed genetic algorithms for function optimization PhD Thesis</article-title><publisher-name>University of Michigan</publisher-name><pub-id pub-id-type="doi">10.5555/915973</pub-id></element-citation></ref><ref id="bib85"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Toprak</surname><given-names>E</given-names></name><name><surname>Veres</surname><given-names>A</given-names></name><name><surname>Michel</surname><given-names>JB</given-names></name><name><surname>Chait</surname><given-names>R</given-names></name><name><surname>Hartl</surname><given-names>DL</given-names></name><name><surname>Kishony</surname><given-names>R</given-names></name></person-group><year iso-8601-date="2012">2012</year><article-title>Evolutionary paths to antibiotic resistance under dynamically sustained drug selection</article-title><source>Nature Genetics</source><volume>44</volume><fpage>101</fpage><lpage>105</lpage><pub-id pub-id-type="doi">10.1038/ng.1034</pub-id><pub-id pub-id-type="pmid">22179135</pub-id></element-citation></ref><ref id="bib86"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Waibel</surname><given-names>M</given-names></name><name><surname>Keller</surname><given-names>L</given-names></name><name><surname>Floreano</surname><given-names>D</given-names></name></person-group><year iso-8601-date="2009">2009</year><article-title>Genetic team composition and level of selection in the evolution of cooperation</article-title><source>IEEE Transactions on Evolutionary Computation</source><volume>13</volume><fpage>648</fpage><lpage>660</lpage><pub-id pub-id-type="doi">10.1109/TEVC.2008.2011741</pub-id></element-citation></ref><ref id="bib87"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Wang</surname><given-names>Y</given-names></name><name><surname>Xue</surname><given-names>P</given-names></name><name><surname>Cao</surname><given-names>M</given-names></name><name><surname>Yu</surname><given-names>T</given-names></name><name><surname>Lane</surname><given-names>ST</given-names></name><name><surname>Zhao</surname><given-names>H</given-names></name></person-group><year iso-8601-date="2021">2021</year><article-title>Directed evolution: methodologies and applications</article-title><source>Chemical Reviews</source><volume>121</volume><fpage>12384</fpage><lpage>12444</lpage><pub-id pub-id-type="doi">10.1021/acs.chemrev.1c00260</pub-id><pub-id pub-id-type="pmid">34297541</pub-id></element-citation></ref><ref id="bib88"><element-citation publication-type="book"><person-group person-group-type="author"><name><surname>Wickham</surname><given-names>H</given-names></name></person-group><year iso-8601-date="2016">2016</year><source>Ggplot2: Elegant Graphics for Data Analysis</source><publisher-name>Springer-Verlag</publisher-name><pub-id pub-id-type="doi">10.1007/978-0-387-98141-3</pub-id></element-citation></ref><ref id="bib89"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Wickham</surname><given-names>H</given-names></name><name><surname>Averick</surname><given-names>M</given-names></name><name><surname>Bryan</surname><given-names>J</given-names></name><name><surname>Chang</surname><given-names>W</given-names></name><name><surname>McGowan</surname><given-names>L</given-names></name><name><surname>François</surname><given-names>R</given-names></name><name><surname>Grolemund</surname><given-names>G</given-names></name><name><surname>Hayes</surname><given-names>A</given-names></name><name><surname>Henry</surname><given-names>L</given-names></name><name><surname>Hester</surname><given-names>J</given-names></name><name><surname>Kuhn</surname><given-names>M</given-names></name><name><surname>Pedersen</surname><given-names>T</given-names></name><name><surname>Miller</surname><given-names>E</given-names></name><name><surname>Bache</surname><given-names>S</given-names></name><name><surname>Müller</surname><given-names>K</given-names></name><name><surname>Ooms</surname><given-names>J</given-names></name><name><surname>Robinson</surname><given-names>D</given-names></name><name><surname>Seidel</surname><given-names>D</given-names></name><name><surname>Spinu</surname><given-names>V</given-names></name><name><surname>Takahashi</surname><given-names>K</given-names></name><name><surname>Vaughan</surname><given-names>D</given-names></name><name><surname>Wilke</surname><given-names>C</given-names></name><name><surname>Woo</surname><given-names>K</given-names></name><name><surname>Yutani</surname><given-names>H</given-names></name></person-group><year iso-8601-date="2019">2019</year><article-title>Welcome to the tidyverse</article-title><source>Journal of Open Source Software</source><volume>4</volume><elocation-id>1686</elocation-id><pub-id pub-id-type="doi">10.21105/joss.01686</pub-id></element-citation></ref><ref id="bib90"><element-citation publication-type="book"><person-group person-group-type="author"><name><surname>Wilcoxon</surname><given-names>F</given-names></name></person-group><year iso-8601-date="1992">1992</year><source>Breakthroughs in Statistics New</source><publisher-name>Springer</publisher-name><pub-id pub-id-type="doi">10.1007/978-1-4612-4380-9_16</pub-id></element-citation></ref><ref id="bib91"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Wilke</surname><given-names>CO</given-names></name><name><surname>Adami</surname><given-names>C</given-names></name></person-group><year iso-8601-date="2002">2002</year><article-title>The biology of digital organisms</article-title><source>Trends in Ecology &amp; Evolution</source><volume>17</volume><fpage>528</fpage><lpage>532</lpage><pub-id pub-id-type="doi">10.1016/S0169-5347(02)02612-5</pub-id></element-citation></ref><ref id="bib92"><element-citation publication-type="software"><person-group person-group-type="author"><name><surname>Wilke</surname><given-names>CO</given-names></name></person-group><year iso-8601-date="2020">2020</year><data-title>Cowplot: streamlined plot theme and plot annotations for ’ggplot2</data-title><version designator="1.1.0">1.1.0</version><source>R Package</source><ext-link ext-link-type="uri" xlink:href="https://CRAN.R-project.org/package=cowplot">https://CRAN.R-project.org/package=cowplot</ext-link></element-citation></ref><ref id="bib93"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Xie</surname><given-names>L</given-names></name><name><surname>Yuan</surname><given-names>AE</given-names></name><name><surname>Shou</surname><given-names>W</given-names></name></person-group><year iso-8601-date="2019">2019</year><article-title>Simulations reveal challenges to artificial community selection and possible strategies for success</article-title><source>PLOS Biology</source><volume>17</volume><elocation-id>e3000295</elocation-id><pub-id pub-id-type="doi">10.1371/journal.pbio.3000295</pub-id><pub-id pub-id-type="pmid">31237866</pub-id></element-citation></ref><ref id="bib94"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Xie</surname><given-names>L</given-names></name><name><surname>Shou</surname><given-names>W</given-names></name></person-group><year iso-8601-date="2021">2021</year><article-title>Steering ecological-evolutionary dynamics to improve artificial selection of microbial communities</article-title><source>Nature Communications</source><volume>12</volume><elocation-id>6799</elocation-id><pub-id pub-id-type="doi">10.1038/s41467-021-26647-4</pub-id><pub-id pub-id-type="pmid">34815384</pub-id></element-citation></ref><ref id="bib95"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Yabe</surname><given-names>S</given-names></name><name><surname>Yamasaki</surname><given-names>M</given-names></name><name><surname>Ebana</surname><given-names>K</given-names></name><name><surname>Hayashi</surname><given-names>T</given-names></name><name><surname>Iwata</surname><given-names>H</given-names></name></person-group><year iso-8601-date="2016">2016</year><article-title>Island-model genomic selection for long-term genetic improvement of autogamous crops</article-title><source>PLOS ONE</source><volume>11</volume><elocation-id>e0153945</elocation-id><pub-id pub-id-type="doi">10.1371/journal.pone.0153945</pub-id><pub-id pub-id-type="pmid">27115872</pub-id></element-citation></ref><ref id="bib96"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Yokobayashi</surname><given-names>Y</given-names></name><name><surname>Weiss</surname><given-names>R</given-names></name><name><surname>Arnold</surname><given-names>FH</given-names></name></person-group><year iso-8601-date="2002">2002</year><article-title>Directed evolution of a genetic circuit</article-title><source>PNAS</source><volume>99</volume><fpage>16587</fpage><lpage>16591</lpage><pub-id pub-id-type="doi">10.1073/pnas.252535999</pub-id><pub-id pub-id-type="pmid">12451174</pub-id></element-citation></ref><ref id="bib97"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Zaman</surname><given-names>L</given-names></name><name><surname>Meyer</surname><given-names>JR</given-names></name><name><surname>Devangam</surname><given-names>S</given-names></name><name><surname>Bryson</surname><given-names>DM</given-names></name><name><surname>Lenski</surname><given-names>RE</given-names></name><name><surname>Ofria</surname><given-names>C</given-names></name></person-group><year iso-8601-date="2014">2014</year><article-title>Coevolution drives the emergence of complex traits and promotes evolvability</article-title><source>PLOS Biology</source><volume>12</volume><elocation-id>e1002023</elocation-id><pub-id pub-id-type="doi">10.1371/journal.pbio.1002023</pub-id><pub-id pub-id-type="pmid">25514332</pub-id></element-citation></ref><ref id="bib98"><element-citation publication-type="thesis"><person-group person-group-type="author"><name><surname>Zitzler</surname><given-names>E</given-names></name></person-group><year iso-8601-date="1999">1999</year><article-title>Evolutionary algorithms for multiobjective optimization: methods and applications PhD thesis</article-title><publisher-name>Swiss Federal Institute of Technology</publisher-name><ext-link ext-link-type="uri" xlink:href="https://sop.tik.ee.ethz.ch/publicationListFiles/zitz1999a.pdf">https://sop.tik.ee.ethz.ch/publicationListFiles/zitz1999a.pdf</ext-link></element-citation></ref></ref-list></back><sub-article article-type="editor-report" id="sa0"><front-stub><article-id pub-id-type="doi">10.7554/eLife.79665.sa0</article-id><title-group><article-title>Editor's evaluation</article-title></title-group><contrib-group><contrib contrib-type="author"><name><surname>Ogbunugafor</surname><given-names>C Brandon</given-names></name><role specific-use="editor">Reviewing Editor</role><aff><institution-wrap><institution-id institution-id-type="ror">https://ror.org/03v76x132</institution-id><institution>Yale University</institution></institution-wrap><country>United States</country></aff></contrib></contrib-group><related-object id="sa0ro1" object-id-type="id" object-id="10.1101/2022.04.01.486727" link-type="continued-by" xlink:href="https://sciety.org/articles/activity/10.1101/2022.04.01.486727"/></front-stub><body><p>The study offers a valuable contribution to the field. While the fields of artificial life and experimental evolution in microbes have been connected for many years, there have been few studies to meaningfully demonstrate how work in evolutionary computation can meaningfully inform the design and execution of microbial experiments. This study represents a truly innovative approach and may fuel further studies at the intersection between computational evolution and experimental evolution.</p></body></sub-article><sub-article article-type="decision-letter" id="sa1"><front-stub><article-id pub-id-type="doi">10.7554/eLife.79665.sa1</article-id><title-group><article-title>Decision letter</article-title></title-group><contrib-group content-type="section"><contrib contrib-type="editor"><name><surname>Ogbunugafor</surname><given-names>C Brandon</given-names></name><role>Reviewing Editor</role><aff><institution-wrap><institution-id institution-id-type="ror">https://ror.org/03v76x132</institution-id><institution>Yale University</institution></institution-wrap><country>United States</country></aff></contrib></contrib-group><contrib-group><contrib contrib-type="reviewer"><name><surname>Diaz-Colunga</surname><given-names>Juan</given-names></name><role>Reviewer</role><aff><institution-wrap><institution-id institution-id-type="ror">https://ror.org/03v76x132</institution-id><institution>Yale University</institution></institution-wrap><country>United States</country></aff></contrib></contrib-group></front-stub><body><boxed-text id="sa2-box1"><p>Our editorial process produces two outputs: i) <ext-link ext-link-type="uri" xlink:href="https://sciety.org/articles/activity/10.1101/2022.04.01.486727">public reviews</ext-link> designed to be posted alongside <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.1101/2022.04.01.486727">the preprint</ext-link> for the benefit of readers; ii) feedback on the manuscript for the authors, including requests for revisions, shown below. We also include an acceptance summary that explains what the editors found interesting or important about the work.</p></boxed-text><p><bold>Decision letter after peer review:</bold></p><p>Thank you for submitting your article &quot;Artificial selection methods from evolutionary computing show promise for directed evolution of microbes&quot; for consideration by <italic>eLife</italic>. Your article has been reviewed by 3 peer reviewers, and the evaluation has been overseen by a Reviewing Editor and Christian Landry as the Senior Editor. The following individual involved in review of your submission has agreed to reveal their identity: Juan Diaz-Colunga (Reviewer #2).</p><p>The reviewers have discussed their reviews with one another, and the Reviewing Editor has drafted this to help you prepare a revised submission.</p><p>Essential revisions:</p><p>Please address the issues raised by reviewers 1 and 2, as they can substantially improve the manuscript. In general, the paper could benefit from more clarity in certain aspects.</p><p><italic>Reviewer #1 (Recommendations for the authors):</italic></p><p>Overall, very nice work. I have a few minor suggestions to improve the paper, as follows:</p><p>1) Please specify whether the tournament selection was with or without replacement. Additionally, please justify why you selected tournaments of size 4 (preliminary testing? Heuristic? Arbitrary?)</p><p>2) You mentioned that you chose 55,000 generations based on &quot;the number of digital organism generations that elapsed in our directed evolution experiments&quot;. I'm confused by what you mean by this. What was the termination criterion in the directed evolution experiments that resulted in 55,000 generations? Later, you say &quot;2,000 generations (the number of cycles in our directed evolution experiments)&quot;; how does the 2,000 generations relate to the 55,000 generations? Please clarify. Also, since you say &quot;digital organisms&quot; I assume you mean in the simulated directed evolution experiments, but please insert the word &quot;simulated&quot; to make this clear.</p><p>3) It would be nice to have at least one graph that either summarizes or exemplifies the relative speed of evolution for the various selection methods, and some discussion of this.</p><p>4) I suspect that the relatively poor performance of NDE may be due to the large number of objectives, leading to very low selection pressure (because so many solutions are non-dominated). This is also consistent with your observation that NDE selected the most populations on average. I think some discussion of this is warranted.</p><p><italic>Reviewer #2 (Recommendations for the authors):</italic></p><p>1) Regarding my main concern on the potential presence of an unacknowledged selective pressure favoring populations of generalists, I suggest the authors study the effect of varying (or removing) the bottleneck applied when selected populations are transferred to the offspring metapopulation. In fact, I am not sure I understand why this bottleneck was even introduced in the first place. In laboratory experiments, it is common to apply these bottlenecks in serial batch culture experiments. However, the setting in this work is more similar to a turbidostat where newborn individuals replace existing ones, and thus I do not see why the parent populations could not be propagated into the offspring &quot;as is&quot;. It would be helpful to see if a less harsh population bottleneck (or none at all) at the time of propagation would palliate the low diversity of task profiles in the three less effective protocols --- and maybe improve their performance.</p><p>2) Along the same lines, I have an additional suggestion: when the selected parent populations are propagated into the next meta-generation, repeats are allowed. Thus, two or more offspring populations from a same parent could potentially be very similar to one another (an issue that could be aggravated as more meta-generations pass). In other words, this could make it so variation is quickly exhausted as the experiment progresses. In fact, this has been observed in artificial selection experiments on microbial communities [Chang et al., Evolution 2020]. It has been suggested that perturbing the populations (for instance through the inoculation of invader species into the selected populations at the time of propagation) could replenish variation upon which selection could further act [Chang et al., Nature Ecology and Evolution 2021; Sánchez et al., Annual Review of Biophysics 2021]. For the purposes of this work, this loss of variation can simply be seen as an intrinsic limitation of the elite, top-10% and tournament treatments. But I am curious to see whether actively replenishing variation before each meta-generation could palliate the loss of diversity and improve performance. This is NOT required to support the findings of the paper as it stands, but it might serve to establish causal links between the success of a selection scheme and its ability to maintain variation in task profiles, further strengthening the results.</p><p>3) Regarding the accessibility of the paper to a broad audience: as a non-expert in evolutionary computing, some aspects of the simulations were difficult for me to follow. I think it will not be easy for readers outside of the field of evolutionary computing to build an intuition regarding how the authors' digital evolution framework could be mapped to an evolutionary process of a microbial population in a laboratory setting. I think a way to address this could be to update Figure 1 and section 3, which currently does not read well in prose. It would be very useful to expand panels b) and c) in Figure 1, which are currently a bit generic, to give the reader a better sense of what it means for the population to mature (what happens during the life span of an organism? where do inputs come from? etc.), what kind of properties of the population are assessed at the evaluation stage, and how. This should also serve to establish a clearer analogy with microbial evolutionary processes and make the manuscript more accessible to a broader audience. For the same reason, I think that describing the considered selection schemes the first time they are mentioned would be useful for non-expert readers. Currently they are described in dedicated sections, but I think that introducing them at least minimally when they are first brough up would be helpful.</p></body></sub-article><sub-article article-type="reply" id="sa2"><front-stub><article-id pub-id-type="doi">10.7554/eLife.79665.sa2</article-id><title-group><article-title>Author response</article-title></title-group></front-stub><body><disp-quote content-type="editor-comment"><p>Essential revisions:</p><p>Please address the issues raised by reviewers 1 and 2, as they can substantially improve the manuscript. In general, the paper could benefit from more clarity in certain aspects.</p><p>Reviewer #1 (Recommendations for the authors):</p><p>Overall, very nice work. I have a few minor suggestions to improve the paper, as follows:</p><p>1) Please specify whether the tournament selection was with or without replacement. Additionally, please justify why you selected tournaments of size 4 (preliminary testing? Heuristic? Arbitrary?)</p></disp-quote><p>We implemented tournament selection with replacement. We clarified this in our description of tournament selection in the Methods.</p><p>In our evolutionary computation work, we usually apply tournament selection in the context of larger pools of candidates for selection (e.g., populations of 1,000) than we use in our experiments here (96). Given this order-of-magnitude reduction in population size, we felt that it made sense to use an accordingly smaller tournament size. We often use a tournament size of 8 in our evolutionary computation work, and so we initially selected 4 as the next smallest power of 2. Exploratory experiments provided further support for this decision, as we found that diversity maintenance was important for evolving performant populations (just as it often is for solving problems in evolutionary computing). While standard tournament selection has no mechanism for diversity maintenance, tournament size influences the number of lineages that survive from generation-to-generation: smaller tournaments result in the selection of a larger number of distinct individuals. Though, admittedly, stable coexistence is not possible over large time scales under tournament selection regardless of tournament size [Dolson et al., 2018].</p><p>We do not think that using a different tournament size would change our overall results (relative to our controls and the multi-objective selection schemes). However, we do acknowledge that the tournament size could be tuned to improve its performance. With tuning, we would expect its performance to be no worse than either the elite or top-10% regimes for any of our experiments. We added an acknowledgement of this limitation to our conclusion.</p><disp-quote content-type="editor-comment"><p>2) You mentioned that you chose 55,000 generations based on &quot;the number of digital organism generations that elapsed in our directed evolution experiments&quot;. I'm confused by what you mean by this. What was the termination criterion in the directed evolution experiments that resulted in 55,000 generations? Later, you say &quot;2,000 generations (the number of cycles in our directed evolution experiments)&quot;; how does the 2,000 generations relate to the 55,000 generations? Please clarify. Also, since you say &quot;digital organisms&quot; I assume you mean in the simulated directed evolution experiments, but please insert the word &quot;simulated&quot; to make this clear.</p></disp-quote><p>We absolutely see how these statements were confusing. We have clarified them as you suggest, inserting the word &quot;simulated&quot; where appropriate. We edited the Experimental Design subsection to further highlight the distinctions between a conventional evolutionary computing experimental setup and the setups used for our simulated directed evolution experiments. We additionally edited our mention of &quot;2,000 generations&quot; in the Results and Discussion to improve clarity.</p><p>We terminated each of our two simulated directed evolution experiments after 2,000 cycles of artificial selection (i.e., maturation, evaluation, selection, and propagation). During each cycle, each population of digital organisms evolves for the duration of the maturation period. During the maturation period, digital organisms produce offspring as soon as they have copied themselves and divided. As such, generations at the organism-level are asynchronous and must be measured instead of configured. We terminate the maturation period after 200 simulation updates (which corresponds to approximately 25 to 35 organism-level generations).</p><p>Our initial control experiment, however, is set up as a conventional evolutionary computing system. There is no metapopulation, and &quot;organism-level&quot; generations are synchronous. We terminated this conventional evolutionary computation experiment after 55,000 generations of evolution (i.e., program evaluation, selection, and reproduction). We chose to terminate this experiment after 55,000 generations to approximate the total depth of evolutionary search that occurred in our simulated directed evolution experiments (i.e., approximately 55,000 organism-level generations). Later on, in the Results and Discussion, we state that just 2,000 generations of our conventional evolutionary computing experiment would have been sufficient to evolve more performant programs than those that evolved in our simulated directed evolution experiment.</p><disp-quote content-type="editor-comment"><p>3) It would be nice to have at least one graph that either summarizes or exemplifies the relative speed of evolution for the various selection methods, and some discussion of this.</p></disp-quote><p>We agree, and we appreciate this suggestion. We added a time series for both single-population and metapopulation task coverage for each of our experiments (Figure 2, 3, and 4), and we included some discussion of these data in our Results and Discussion section as well as in the Conclusion. These data highlight how rapidly directed microbial evolution experiments might benefit from using lexicase or a Pareto-based selection method, which is especially promising given the amount of effort required to carry out a single round of artificial selection in the laboratory. We would not have thought to include this without your suggestion!</p><p>Additionally, we switched to a more accessible color scheme for our figures, as the time series graphs require readers to distinguish between conditions via color.</p><disp-quote content-type="editor-comment"><p>4) I suspect that the relatively poor performance of NDE may be due to the large number of objectives, leading to very low selection pressure (because so many solutions are non-dominated). This is also consistent with your observation that NDE selected the most populations on average. I think some discussion of this is warranted.</p></disp-quote><p>Absolutely, we completely agree. We added a paragraph of discussion to the</p><p>&quot;Lexicase and non-dominated elite selection show promise for directed evolution&quot; subsection of the Results and Discussion, including references to relevant work.</p><disp-quote content-type="editor-comment"><p>Reviewer #2 (Recommendations for the authors):</p><p>1) Regarding my main concern on the potential presence of an unacknowledged selective pressure favoring populations of generalists, I suggest the authors study the effect of varying (or removing) the bottleneck applied when selected populations are transferred to the offspring metapopulation. In fact, I am not sure I understand why this bottleneck was even introduced in the first place. In laboratory experiments, it is common to apply these bottlenecks in serial batch culture experiments. However, the setting in this work is more similar to a turbidostat where newborn individuals replace existing ones, and thus I do not see why the parent populations could not be propagated into the offspring &quot;as is&quot;. It would be helpful to see if a less harsh population bottleneck (or none at all) at the time of propagation would palliate the low diversity of task profiles in the three less effective protocols --- and maybe improve their performance.</p></disp-quote><p>We fully agree that the effects of bottleneck size are an important direction of further study, especially as we expand our model to incorporate more complex interactions between digital organisms. We configured a bottleneck size of 1% for two reasons. The first is as you state: bottlenecks are common in serial batch culture experiments, which we are using for our initial proof of concept laboratory experiments.</p><p>Second, in early exploratory experiments, we tried several &quot;sampling sizes&quot; for propagating selected populations. As you suggest, we fully expected that propating entire populations would be best, as we would prevent the loss of potentially important diversity. To our great surprise, depending on the selection method, sample size either had minimal effect or the 1% sample size outperformed larger sample sizes (see <xref ref-type="fig" rid="sa2fig1">Author response image 1</xref>). Admittedly, we conducted these exploratory experiments well before the final set of experiments presented in our manuscript, so their setups are not the same: we only compared elite, lexicase, non-dominated elite, and a no selection control; the environment is simpler with 8 population-level functions instead of 18; the maximum population size is 900 instead of 1,000; the maturation period is longer (300 updates versus 200); and we ran the experiment for fewer cycles (500 instead of 2,000).</p><p>There is perhaps some precedent for our observations about sample size in recent evolution experiments using populations of <italic>E. coli</italic> where [Izutsu et al., 2021] observed more rapid and greater fitness gains in populations subjected to 100- and 1000-fold dilution regimes than populations subjected to an 8-fold dilution regime. As we expand our model to include more interactions, we expect our choice of sample size to matter more, as smaller samples may fail to propagate all members of an important interaction required for community function.</p><p>To address this recommendation, we expanded our supplemental material to include the results for our exploratory experiment where we varied the propagation sample size. We reference these data as a justification for our choice of sample size in the Digital Directed Evolution section. In the Conclusion, we added some discussion of the value of future work that explores different laboratory setups/constraints (e.g., bottleneck size, maturation periods, metapopulation size).</p><fig id="sa2fig1" position="float"><label>Author response image 1.</label><graphic mimetype="image" mime-subtype="tiff" xlink:href="elife-79665-sa2-fig1-v2.tif"/></fig><disp-quote content-type="editor-comment"><p>2) Along the same lines, I have an additional suggestion: when the selected parent populations are propagated into the next meta-generation, repeats are allowed. Thus, two or more offspring populations from a same parent could potentially be very similar to one another (an issue that could be aggravated as more meta-generations pass). In other words, this could make it so variation is quickly exhausted as the experiment progresses. In fact, this has been observed in artificial selection experiments on microbial communities [Chang et al., Evolution 2020]. It has been suggested that perturbing the populations (for instance through the inoculation of invader species into the selected populations at the time of propagation) could replenish variation upon which selection could further act [Chang et al., Nature Ecology and Evolution 2021; Sánchez et al., Annual Review of Biophysics 2021]. For the purposes of this work, this loss of variation can simply be seen as an intrinsic limitation of the elite, top-10% and tournament treatments. But I am curious to see whether actively replenishing variation before each meta-generation could palliate the loss of diversity and improve performance. This is NOT required to support the findings of the paper as it stands, but it might serve to establish causal links between the success of a selection scheme and its ability to maintain variation in task profiles, further strengthening the results.</p></disp-quote><p>Yes, we fully agree with you that the loss of variation is an intrinsic limitation of the elite, top-10%, and tournament selection methods. This is a fantastic observation because it beautifully connects a large body of evolutionary computing research with recent laboratory experiments in [Chang et al., Evolution 2020]. Thank you for this reference! In fact, your observation is one of the original motivations for our study: the artificial selection protocols that we found to be commonly used in directed microbial evolution have no algorithmic mechanisms for maintaining diversity.</p><p>The rapid loss of variation intrinsic to elite, top-10%, and tournament selection is well-established in evolutionary computing as a reason for &quot;premature convergence&quot;, which essentially means exactly what happens in [Chang et al., Evolution 2020]: adaptive evolution stagnates because the population converges to a small region of the fitness landscape (as a direct result of these &quot;elitist&quot; selection schemes failing to maintain meaningful diversity).</p><p>We appreciate the pointer to related work on replenishing variation by perturbing populations. There are strong parallels between directed microbial evolution and evolutionary computing on this front. Similar approaches (though not identical) have been developed in evolutionary computing for exactly the same goal of replenishing variation to avoid &quot;adaptive stagnation&quot;. E.g., injecting randomly generated individuals into the population each generation, migrating individuals from different subpopulations at regular intervals.</p><p>We are also very much curious to see whether actively replenishing variation before each generation would have disproportionate effects on any particular selection protocol. It is not obvious to us whether replenishing variation would improve performance in the elite, top-10%, or tournament selection regimes more so than it would in the non-dominated elite and lexicase regimes. Which is all to say, it would make for an interesting experiment! At least in evolutionary computation, the <italic>kinds</italic> of perturbations (or introduced variation) often matter as much as whether or not they are included in the first place. We would not be surprised if this is also true for microbial systems.</p><p>To address this recommendation in our manuscript, we explicitly call out this intrinsic limitation of elite, top-10%, and tournament selection the Results and Discussion, including a reference to similar findings in [Chang et al., Evolution 2020]. We incorporated your suggestion to explore population perturbations as a method to replenish variation as a future direction in the Conclusion.</p><disp-quote content-type="editor-comment"><p>3) Regarding the accessibility of the paper to a broad audience: as a non-expert in evolutionary computing, some aspects of the simulations were difficult for me to follow. I think it will not be easy for readers outside of the field of evolutionary computing to build an intuition regarding how the authors' digital evolution framework could be mapped to an evolutionary process of a microbial population in a laboratory setting. I think a way to address this could be to update Figure 1 and section 3, which currently does not read well in prose. It would be very useful to expand panels b) and c) in Figure 1, which are currently a bit generic, to give the reader a better sense of what it means for the population to mature (what happens during the life span of an organism? where do inputs come from? etc.), what kind of properties of the population are assessed at the evaluation stage, and how. This should also serve to establish a clearer analogy with microbial evolutionary processes and make the manuscript more accessible to a broader audience. For the same reason, I think that describing the considered selection schemes the first time they are mentioned would be useful for non-expert readers. Currently they are described in dedicated sections, but I think that introducing them at least minimally when they are first brough up would be helpful.</p></disp-quote><p>We agree. We have updated Figure 1 to make it a little bit less generic and hopefully more intuitive. We also edited the description of our model of directed evolution, including our description of digital organisms (&quot;Digital Organisms&quot; subsection of Digital Directed Evolution). In general, we tried to provide extra intuition for our model by highlighting potential analogues in microbial evolution systems. As suggested, we gave a brief overview of the evolutionary computing selection schemes where they are first mentioned in the introduction.</p><p>References</p><p>Chang, C.-Y. et al. Engineering complex communities by directed evolution. Nat Ecol Evol 5, 1011–1023 (2021).</p><p>Chang, C., Osborne, M. L., Bajic, D. and Sanchez, A. Artificially selecting bacterial communities using propagule strategies. Evolution 74, 2392–2403 (2020).</p><p>Dolson, E. L., Banzhaf, W. and Ofria, C. Ecological theory provides insights about evolutionary computation. https://peerj.com/preprints/27315 (2018) doi:10.7287/peerj.preprints.27315v1.</p><p>Izutsu, M., Lake, D. M., Matson, Z. W. D., Dodson, J. P. and Lenski, R. E. Effects of periodic bottlenecks on the dynamics of adaptive evolution in microbial populations.</p></body></sub-article></article>