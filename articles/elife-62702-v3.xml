<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE article PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Archiving and Interchange DTD v1.2 20151215//EN"  "JATS-archivearticle1.dtd"><article article-type="research-article" dtd-version="1.2" xmlns:ali="http://www.niso.org/schemas/ali/1.0/" xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink"><front><journal-meta><journal-id journal-id-type="nlm-ta">elife</journal-id><journal-id journal-id-type="publisher-id">eLife</journal-id><journal-title-group><journal-title>eLife</journal-title></journal-title-group><issn pub-type="epub" publication-format="electronic">2050-084X</issn><publisher><publisher-name>eLife Sciences Publications, Ltd</publisher-name></publisher></journal-meta><article-meta><article-id pub-id-type="publisher-id">62702</article-id><article-id pub-id-type="doi">10.7554/eLife.62702</article-id><article-categories><subj-group subj-group-type="display-channel"><subject>Research Article</subject></subj-group><subj-group subj-group-type="heading"><subject>Computational and Systems Biology</subject></subj-group><subj-group subj-group-type="heading"><subject>Neuroscience</subject></subj-group></article-categories><title-group><article-title>Place-cell capacity and volatility with grid-like inputs</article-title></title-group><contrib-group><contrib contrib-type="author" id="author-206021"><name><surname>Yim</surname><given-names>Man Yi</given-names></name><xref ref-type="aff" rid="aff1">1</xref><xref ref-type="aff" rid="aff2">2</xref><xref ref-type="aff" rid="aff3">3</xref><xref ref-type="other" rid="fund1"/><xref ref-type="fn" rid="con1"/><xref ref-type="fn" rid="conf1"/></contrib><contrib contrib-type="author" id="author-206022"><name><surname>Sadun</surname><given-names>Lorenzo A</given-names></name><contrib-id authenticated="true" contrib-id-type="orcid">https://orcid.org/0000-0002-2518-573X</contrib-id><xref ref-type="aff" rid="aff4">4</xref><xref ref-type="fn" rid="con2"/><xref ref-type="fn" rid="conf2"/></contrib><contrib contrib-type="author" corresp="yes" id="author-132981"><name><surname>Fiete</surname><given-names>Ila R</given-names></name><contrib-id authenticated="true" contrib-id-type="orcid">https://orcid.org/0000-0003-4738-2539</contrib-id><email>fiete@mit.edu</email><xref ref-type="aff" rid="aff1">1</xref><xref ref-type="aff" rid="aff3">3</xref><xref ref-type="other" rid="fund1"/><xref ref-type="other" rid="fund2"/><xref ref-type="other" rid="fund4"/><xref ref-type="fn" rid="con3"/><xref ref-type="fn" rid="conf1"/></contrib><contrib contrib-type="author" corresp="yes" id="author-205157"><name><surname>Taillefumier</surname><given-names>Thibaud</given-names></name><contrib-id authenticated="true" contrib-id-type="orcid">https://orcid.org/0000-0003-3538-6882</contrib-id><email>ttaillef@austin.utexas.edu</email><xref ref-type="aff" rid="aff1">1</xref><xref ref-type="aff" rid="aff2">2</xref><xref ref-type="aff" rid="aff4">4</xref><xref ref-type="other" rid="fund3"/><xref ref-type="fn" rid="con4"/><xref ref-type="fn" rid="conf1"/></contrib><aff id="aff1"><label>1</label><institution>Center for Theoretical and Computational Neuroscience, University of Texas</institution><addr-line><named-content content-type="city">Austin</named-content></addr-line><country>United States</country></aff><aff id="aff2"><label>2</label><institution>Department of Neuroscience, University of Texas</institution><addr-line><named-content content-type="city">Austin</named-content></addr-line><country>United States</country></aff><aff id="aff3"><label>3</label><institution>Department of Brain and Cognitive Sciences and McGovern Institute, MIT</institution><addr-line><named-content content-type="city">Austin</named-content></addr-line><country>United States</country></aff><aff id="aff4"><label>4</label><institution>Department of Mathematics and Neuroscience, The University of Texas</institution><addr-line><named-content content-type="city">Austin</named-content></addr-line><country>United States</country></aff></contrib-group><contrib-group content-type="section"><contrib contrib-type="editor"><name><surname>Berman</surname><given-names>Gordon J</given-names></name><role>Reviewing Editor</role><aff><institution>Emory University</institution><country>United States</country></aff></contrib><contrib contrib-type="senior_editor"><name><surname>Frank</surname><given-names>Michael J</given-names></name><role>Senior Editor</role><aff><institution>Brown University</institution><country>United States</country></aff></contrib></contrib-group><pub-date date-type="publication" publication-format="electronic"><day>24</day><month>05</month><year>2021</year></pub-date><pub-date pub-type="collection"><year>2021</year></pub-date><volume>10</volume><elocation-id>e62702</elocation-id><history><date date-type="received" iso-8601-date="2020-09-02"><day>02</day><month>09</month><year>2020</year></date><date date-type="accepted" iso-8601-date="2021-04-28"><day>28</day><month>04</month><year>2021</year></date></history><permissions><copyright-statement>© 2021, Yim et al</copyright-statement><copyright-year>2021</copyright-year><copyright-holder>Yim et al</copyright-holder><ali:free_to_read/><license xlink:href="http://creativecommons.org/licenses/by/4.0/"><ali:license_ref>http://creativecommons.org/licenses/by/4.0/</ali:license_ref><license-p>This article is distributed under the terms of the <ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/licenses/by/4.0/">Creative Commons Attribution License</ext-link>, which permits unrestricted use and redistribution provided that the original author and source are credited.</license-p></license></permissions><self-uri content-type="pdf" xlink:href="elife-62702-v3.pdf"/><self-uri content-type="figures-pdf" xlink:href="elife-62702-figures-v3.pdf"/><abstract><p>What factors constrain the arrangement of the multiple fields of a place cell? By modeling place cells as perceptrons that act on multiscale periodic grid-cell inputs, we analytically enumerate a place cell’s <italic>repertoire</italic> – how many field arrangements it can realize without external cues while its grid inputs are unique – and derive its <italic>capacity</italic> – the spatial range over which it can achieve any field arrangement. We show that the repertoire is very large and relatively noise-robust. However, the repertoire is a vanishing fraction of all arrangements, while capacity scales only as the sum of the grid periods so field arrangements are constrained over larger distances. Thus, grid-driven place field arrangements define a large response scaffold that is strongly constrained by its structured inputs. Finally, we show that altering grid-place weights to generate an arbitrary new place field strongly affects existing arrangements, which could explain the volatility of the place code.</p></abstract><kwd-group kwd-group-type="author-keywords"><kwd>place cells</kwd><kwd>grid cells</kwd><kwd>perceptron</kwd><kwd>linear separability</kwd><kwd>capacity</kwd><kwd>volatility</kwd></kwd-group><kwd-group kwd-group-type="research-organism"><title>Research organism</title><kwd>None</kwd></kwd-group><funding-group><award-group id="fund1"><funding-source><institution-wrap><institution-id institution-id-type="FundRef">http://dx.doi.org/10.13039/100000893</institution-id><institution>Simons Foundation</institution></institution-wrap></funding-source><award-id>Simons Collaboration on the Global Brain</award-id><principal-award-recipient><name><surname>Yim</surname><given-names>Man Yi</given-names></name><name><surname>Fiete</surname><given-names>Ila R</given-names></name></principal-award-recipient></award-group><award-group id="fund2"><funding-source><institution-wrap><institution-id institution-id-type="FundRef">http://dx.doi.org/10.13039/100000011</institution-id><institution>Howard Hughes Medical Institute</institution></institution-wrap></funding-source><award-id>Faculty Scholars Program</award-id><principal-award-recipient><name><surname>Fiete</surname><given-names>Ila R</given-names></name></principal-award-recipient></award-group><award-group id="fund3"><funding-source><institution-wrap><institution-id institution-id-type="FundRef">http://dx.doi.org/10.13039/100000879</institution-id><institution>Alfred P. Sloan Foundation</institution></institution-wrap></funding-source><award-id>Alfred P. Sloan Research Fellowship FG-2017-9554</award-id><principal-award-recipient><name><surname>Taillefumier</surname><given-names>Thibaud</given-names></name></principal-award-recipient></award-group><award-group id="fund4"><funding-source><institution-wrap><institution-id institution-id-type="FundRef">http://dx.doi.org/10.13039/100000006</institution-id><institution>Office of Naval Research</institution></institution-wrap></funding-source><award-id>S&amp;T BAA Award N00014-19-1-2584</award-id><principal-award-recipient><name><surname>Fiete</surname><given-names>Ila R</given-names></name></principal-award-recipient></award-group><funding-statement>The funders had no role in study design, data collection and interpretation, or the decision to submit the work for publication.</funding-statement></funding-group><custom-meta-group><custom-meta specific-use="meta-only"><meta-name>Author impact statement</meta-name><meta-value>A very large number of place-field maps can be robustly learned by association of external cues with the grid-driven response, however plasticity in the grid-cell inputs renders the place-cell responses volatile.</meta-value></custom-meta></custom-meta-group></article-meta></front><body><sec id="s1" sec-type="intro"><title>Introduction</title><p>As animals run around in a small familiar environment, hippocampal place cells exhibit localized firing fields at reproducible positions, with each cell typically displaying at most a single firing field (<xref ref-type="bibr" rid="bib59">O’Keefe and Dostrovsky, 1971</xref>; <xref ref-type="bibr" rid="bib88">Wilson and McNaughton, 1993</xref>). However, a place cell generates multiple fields when recorded in single large environments (<xref ref-type="bibr" rid="bib25">Fenton et al., 2008</xref>; <xref ref-type="bibr" rid="bib61">Park et al., 2011</xref>; <xref ref-type="bibr" rid="bib68">Rich et al., 2014</xref>) or across multiple environments (<xref ref-type="bibr" rid="bib58">Muller et al., 1987</xref>; <xref ref-type="bibr" rid="bib20">Colgin et al., 2008</xref>), including different physical and nonphysical spaces (<xref ref-type="bibr" rid="bib6">Aronov et al., 2017</xref>).</p><p>Within large spaces, the locations seem to be well-described by a random process (<xref ref-type="bibr" rid="bib68">Rich et al., 2014</xref>; <xref ref-type="bibr" rid="bib18">Cheng and Frank, 2011</xref>), and across spaces the place-cell codes appear to be independent or orthogonal (<xref ref-type="bibr" rid="bib58">Muller et al., 1987</xref>; <xref ref-type="bibr" rid="bib20">Colgin et al., 2008</xref>; <xref ref-type="bibr" rid="bib3">Alme et al., 2014</xref>), also potentially consistent with a random process. However, a more detailed characterization of possible structure in these responses is both experimentally and theoretically lacking, and we hypothesize that there might be structure imposed by grid cells in place field arrangements, especially when spatial cues are sparse or unavailable.</p><p>Our motivation for this hypothesis arises from the following reasoning: grid cells (<xref ref-type="bibr" rid="bib32">Hafting et al., 2005</xref>) are a critical spatially tuned population that provides inputs to place cells. Their codes are unique over very large ranges due to their modular, multi-periodic structure (<xref ref-type="bibr" rid="bib26">Fiete et al., 2008</xref>; <xref ref-type="bibr" rid="bib76">Sreenivasan and Fiete, 2011</xref>; <xref ref-type="bibr" rid="bib52">Mathis et al., 2012</xref>). They appear to integrate motion cues to update their states and thus reliably generate fields even in the absence of external spatial cues (<xref ref-type="bibr" rid="bib32">Hafting et al., 2005</xref>; <xref ref-type="bibr" rid="bib53">McNaughton et al., 2006</xref>; <xref ref-type="bibr" rid="bib12">Burak and Fiete, 2006</xref>; <xref ref-type="bibr" rid="bib13">Burak and Fiete, 2009</xref>). Thus, it is possible that in the absence of external cues spatially reliable place fields are strongly influenced by grid-cell inputs.</p><p>To generate theoretical predictions under this hypothesis, we examine here the nature and strength of potential constraints on the arrangements of multiple place fields driven by grid cells. On the one hand, the grid inputs are nonrepeating (unique) over a very large range that scales exponentially with the number of grid modules (given roughly by the product of the grid periods), and thus rich (<xref ref-type="bibr" rid="bib26">Fiete et al., 2008</xref>; <xref ref-type="bibr" rid="bib76">Sreenivasan and Fiete, 2011</xref>; <xref ref-type="bibr" rid="bib52">Mathis et al., 2012</xref>); are these unique inputs sufficient to enable arbitrary place field arrangements? On the other hand, this vast library of unique coding states lies on a highly nonlinear, folded manifold that simple read-outs might not be able to discriminate (<xref ref-type="bibr" rid="bib76">Sreenivasan and Fiete, 2011</xref>). This nonlinear structure is a result of the geometric, periodically repeating structure of individual modules (<xref ref-type="bibr" rid="bib78">Stensola et al., 2012</xref>); should we expect place field arrangements to be constrained by this structure?</p><p>These questions are important for the following reason: a likely role of place cells, and the view we espouse here, is to build consistent and faithful associations (maps) between external sensory cues and an internal <italic>scaffold</italic> of motion-based positional estimates, which we hypothesize is derived from grid inputs. This perspective is consistent with the classic ideas of cognitive maps (<xref ref-type="bibr" rid="bib60">O’Keefe and Nadel, 1978</xref>; <xref ref-type="bibr" rid="bib82">Tolman, 1948</xref>; <xref ref-type="bibr" rid="bib53">McNaughton et al., 2006</xref>) and also relates neural circuitry to the computational framework of the simultaneous localization and mapping (SLAM) problem for robots and autonomously navigating vehicles (<xref ref-type="bibr" rid="bib51">Leonard and Durrant-Whyte, 1991</xref>; <xref ref-type="bibr" rid="bib54">Milford et al., 2004</xref>; <xref ref-type="bibr" rid="bib15">Cadena et al., 2016</xref>; <xref ref-type="bibr" rid="bib19">Cheung et al., 2012</xref>; <xref ref-type="bibr" rid="bib87">Widloski and Fiete, 2014</xref>; <xref ref-type="bibr" rid="bib42">Kanitscheider and Fiete, 2017a</xref>; <xref ref-type="bibr" rid="bib43">Kanitscheider and Fiete, 2017b</xref>; <xref ref-type="bibr" rid="bib44">Kanitscheider and Fiete, 2017c</xref>). We can view the formation of a map as ‘decorating’ the internal scaffold with external cues. For this to work across many large spaces, the internal scaffold must be sufficiently large, with enough unique states and resolution to build appropriate maps.</p><p>A self-consistent place-cell map that associates a sufficiently rich internal scaffold with external cues can enable three distinct inferences: (1) allow external cues to correct errors in motion-based location estimation (<xref ref-type="bibr" rid="bib85">Welinder et al., 2008</xref>; <xref ref-type="bibr" rid="bib14">Burgess, 2008</xref>; <xref ref-type="bibr" rid="bib76">Sreenivasan and Fiete, 2011</xref>; <xref ref-type="bibr" rid="bib33">Hardcastle et al., 2014</xref>), through cue-based updating; (2) predict upcoming external cues over novel trajectories through familiar spaces by exploiting motion-based updating (<xref ref-type="bibr" rid="bib71">Sanders et al., 2020</xref>; <xref ref-type="bibr" rid="bib86">Whittington et al., 2020</xref>); and (3) drive <italic>fully intrinsic</italic> error correction and location inference when external spatial cues go missing and motion cues are unreliable by imposing self-consistency (<xref ref-type="bibr" rid="bib76">Sreenivasan and Fiete, 2011</xref>).</p><p>In what follows, we characterize which arrangements of place fields are realizable based on grid-like inputs in a simple perceptron model, in which place cells combine their multiple inputs and make a decision on whether to generate a field (‘1’ output) or not (‘0’ output) by selecting input weights and a firing threshold (<xref ref-type="fig" rid="fig1">Figure 1A,B</xref>). However, in contrast to the classical perceptron results, which are derived under the assumption of random inputs that are in general position (a property related to the linear independence of the inputs), grid inputs to place cells are structured, which adds substantial complexity to our derivations.</p><fig id="fig1" position="float"><label>Figure 1.</label><caption><title>The grid-like code and modeling place cells as perceptrons.</title><p>(<bold>A</bold>) Grid-like inputs and a conceptual view of a place cell as a perceptron: each place cell combines its feedforward inputs, including periodic drive from grid cells (responses simplified here to one spatial dimension) of various periods and phases (blue and red cells are from modules with different periods) to generate location-specific activity that might be multiply peaked across large spaces. Can these place fields be arranged arbitrarily? (<bold>B</bold>) Idealization of a place cell as a perceptron: in discretized 1-D space, the grid-like inputs are discrete patterns that for simplicity we consider to be binary; place fields are assigned at locations where the weighted input sum exceeds a threshold <inline-formula><mml:math id="inf1"><mml:mi>θ</mml:mi></mml:math></inline-formula>. A place field arrangement can be considered as a set of binarized output labels (1 for each field, 0 for non-field locations) for the set of input patterns. We count field arrangements over the range of locations where the grid-like inputs have unique states; for two modules with periods <inline-formula><mml:math id="inf2"><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:mn>2</mml:mn><mml:mo>,</mml:mo><mml:mn>3</mml:mn><mml:mo stretchy="false">}</mml:mo></mml:mrow></mml:math></inline-formula>, this range is 6 (the LCM of the grid periods). LCM = least common multiple; GCD = greatest common divisor.</p></caption><graphic mime-subtype="tiff" mimetype="image" xlink:href="elife-62702-fig1-v3.tif"/></fig><p>We show analytically that each place cell can realize a large repertoire of arrangements across all possible space where the grid inputs are unique. However, these realizable arrangements are a special and vanishing subset of all arrangements over the same space, suggesting a constrained structure. We show that the capacity of a place cell or spatial range over which all field arrangements can be realized equals the sum of distinct grid periods, a small fraction of the range of positions uniquely encoded by grid-like inputs. Overall, we show that field arrangements generated from grid-like inputs are more robust to noise than those driven by random inputs or shuffled grid inputs.</p><p>Together, our results imply that grid-like inputs endow place cells with rich and robust spatial scaffolds, but that these are also constrained by grid-cell geometry. Rigorous proofs supporting all our mathematical results are provided in Appendix 1. Portions of this work have appeared previously in conference abstract form (<xref ref-type="bibr" rid="bib92">Yim et al., 2019</xref>).</p></sec><sec id="s2"><title>Modeling framework</title><sec id="s2-1"><title>Place cells as perceptrons</title><p>The perceptron model (<xref ref-type="bibr" rid="bib69">Rosenblatt, 1958</xref>) idealizes a neuron as computing a weighted sum of its inputs (<inline-formula><mml:math id="inf3"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msub><mml:mi mathvariant="bold-italic">x</mml:mi><mml:mrow><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>∈</mml:mo><mml:msup><mml:mrow><mml:mi mathvariant="double-struck">R</mml:mi></mml:mrow><mml:mrow><mml:mi>N</mml:mi></mml:mrow></mml:msup></mml:mrow></mml:mstyle></mml:math></inline-formula>) based on learned input weights (<inline-formula><mml:math id="inf4"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mi mathvariant="bold-italic">w</mml:mi><mml:mo>∈</mml:mo><mml:msup><mml:mrow><mml:mi mathvariant="double-struck">R</mml:mi></mml:mrow><mml:mrow><mml:mi>N</mml:mi></mml:mrow></mml:msup></mml:mrow></mml:mstyle></mml:math></inline-formula>) and applying a threshold (<inline-formula><mml:math id="inf5"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mi>θ</mml:mi></mml:mrow></mml:mstyle></mml:math></inline-formula>) to generate a binary response that is above or below threshold. A perceptron may be viewed as separating its high-dimensional input patterns into two output categories (<inline-formula><mml:math id="inf6"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mi>y</mml:mi><mml:mo>∈</mml:mo><mml:mo fence="false" stretchy="false">{</mml:mo><mml:mn>0</mml:mn><mml:mo>,</mml:mo><mml:mn>1</mml:mn><mml:mo fence="false" stretchy="false">}</mml:mo></mml:mrow></mml:mstyle></mml:math></inline-formula>) (<xref ref-type="fig" rid="fig2">Figure 2A</xref>), with the categorization depending on the weights and threshold so that sufficiently weight-aligned input patterns fall into category 1 and the rest into category 0:<disp-formula id="equ1"><label>(1)</label><mml:math id="m1"><mml:mrow><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mi>y</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi mathvariant="bold-italic">x</mml:mi><mml:mrow><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mrow><mml:mo>{</mml:mo><mml:mtable columnalign="left left" columnspacing="1em" rowspacing="4pt"><mml:mtr><mml:mtd><mml:mn>1</mml:mn></mml:mtd><mml:mtd><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mtext>if</mml:mtext></mml:mstyle><mml:mspace width="thickmathspace"/><mml:mi mathvariant="bold-italic">w</mml:mi><mml:mo>⋅</mml:mo><mml:msub><mml:mi mathvariant="bold-italic">x</mml:mi><mml:mrow><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>−</mml:mo><mml:mi>θ</mml:mi><mml:mo>&gt;</mml:mo><mml:mn>0</mml:mn><mml:mspace width="thinmathspace"/><mml:mo>,</mml:mo></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mn>0</mml:mn></mml:mtd><mml:mtd><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mtext>otherwise</mml:mtext></mml:mstyle><mml:mspace width="thinmathspace"/><mml:mo>.</mml:mo></mml:mtd></mml:mtr></mml:mtable><mml:mo fence="true" stretchy="true" symmetric="true"/></mml:mrow></mml:mstyle></mml:mrow></mml:math></disp-formula></p><fig id="fig2" position="float"><label>Figure 2.</label><caption><title>Linear separability, counting dichotomies, and separating capacity for perceptrons.</title><p>(<bold>A</bold>) A set of patterns (locations given by circles) that are assigned positive and negative labels (filled versus open), called a dichotomy of the patterns, is realizable by a perceptron if positive examples can be linearly separated (by a hyperplane) from the rest. The perceptron weights <inline-formula><mml:math id="inf7"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mi mathvariant="bold-italic">w</mml:mi></mml:mrow></mml:mstyle></mml:math></inline-formula> encode the direction normal to the separating hyperplane, and the threshold sets its distance from the origin. (<bold>B</bold>) An example with input dimension <inline-formula><mml:math id="inf8"><mml:mrow><mml:mi>N</mml:mi><mml:mo>=</mml:mo><mml:mn>3</mml:mn></mml:mrow></mml:math></inline-formula> (the input dimension is the length of each input pattern vector, which equals the number of input neurons). When placed randomly, <inline-formula><mml:math id="inf9"><mml:mrow><mml:mi>P</mml:mi><mml:mo>=</mml:mo><mml:mn>4</mml:mn></mml:mrow></mml:math></inline-formula> random real-valued patterns optimally occupy space and are said to be in general position (left); these patterns define a tetrahedron and all dichotomies are linearly separable. By contrast, structured inputs may occupy a lower-dimensional subspace and thus not lie in general position (right). This square configuration exhibits unrealizable dichotomies (as in <bold>A</bold>, bottom). (<bold>C</bold>) Cover’s results (<xref ref-type="bibr" rid="bib22">Cover, 1965</xref>): for patterns in general position, the number of realizable dichotomies is <inline-formula><mml:math id="inf10"><mml:msup><mml:mn>2</mml:mn><mml:mi>P</mml:mi></mml:msup></mml:math></inline-formula>, and thus the fraction of realizable dichotomies relative to all dichotomies is 1, when the number of patterns is smaller than the input dimension (<inline-formula><mml:math id="inf11"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mi>P</mml:mi><mml:mo>§lt;</mml:mo><mml:mi>N</mml:mi></mml:mrow></mml:mstyle></mml:math></inline-formula>). The fraction drops rapidly to zero when the number of patterns exceeds twice the input dimension (the separating capacity).</p></caption><graphic mime-subtype="tiff" mimetype="image" xlink:href="elife-62702-fig2-v3.tif"/></fig><p>If each partitioning of inputs into the <inline-formula><mml:math id="inf12"><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:mn>0</mml:mn><mml:mo>,</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">}</mml:mo></mml:mrow></mml:math></inline-formula> categories is called a dichotomy, then the only dichotomies ‘realizable’ by a perceptron are those in which the inputs are linearly separable – that is, the set of inputs in category 0 can be separated from those in category 1 by some linear hyperplane (<xref ref-type="fig" rid="fig2">Figure 2</xref>). Cover’s counting theorem (<xref ref-type="bibr" rid="bib22">Cover, 1965</xref>; <xref ref-type="bibr" rid="bib84">Vapnik, 1998</xref>) provides a count of how many dichotomies a perceptron can realize if input patterns are random (more specifically, in general position). A set of patterns <inline-formula><mml:math id="inf13"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mo fence="false" stretchy="false">{</mml:mo><mml:msub><mml:mi mathvariant="bold-italic">x</mml:mi><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi mathvariant="bold-italic">x</mml:mi><mml:mrow><mml:mi>P</mml:mi></mml:mrow></mml:msub><mml:mo fence="false" stretchy="false">}</mml:mo></mml:mrow></mml:mstyle></mml:math></inline-formula> in an <inline-formula><mml:math id="inf14"><mml:mi>N</mml:mi></mml:math></inline-formula>-dimensional space is in general position if no subset of size smaller than <inline-formula><mml:math id="inf15"><mml:mrow><mml:mi>N</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:math></inline-formula> is affinely dependent. In other words, no subset of <inline-formula><mml:math id="inf16"><mml:mrow><mml:mi>n</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:math></inline-formula> points lies in a <inline-formula><mml:math id="inf17"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mpadded width="-1.7pt"><mml:mi>n</mml:mi></mml:mpadded><mml:mo rspace="0.8pt">-</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula>-dimensional plane for all <inline-formula><mml:math id="inf18"><mml:mrow><mml:mi>n</mml:mi><mml:mo>≤</mml:mo><mml:mi>N</mml:mi></mml:mrow></mml:math></inline-formula>. (<xref ref-type="fig" rid="fig2">Figure 2B</xref>) and establishes that for <inline-formula><mml:math id="inf19"><mml:mrow><mml:mi>P</mml:mi><mml:mo>≤</mml:mo><mml:mi>N</mml:mi></mml:mrow></mml:math></inline-formula> patterns, every dichotomy is realizable by a perceptron – this is the perceptron capacity (<xref ref-type="fig" rid="fig2">Figure 2C</xref>). For <inline-formula><mml:math id="inf20"><mml:mrow><mml:mi>P</mml:mi><mml:mo>=</mml:mo><mml:mrow><mml:mn>2</mml:mn><mml:mo>⁢</mml:mo><mml:mi>N</mml:mi></mml:mrow></mml:mrow></mml:math></inline-formula>, exactly half of the <inline-formula><mml:math id="inf21"><mml:msup><mml:mn>2</mml:mn><mml:mi>P</mml:mi></mml:msup></mml:math></inline-formula> possible dichotomies are realizable; when <inline-formula><mml:math id="inf22"><mml:mrow><mml:mi>P</mml:mi><mml:mo>≫</mml:mo><mml:mi>N</mml:mi></mml:mrow></mml:math></inline-formula> for fixed <inline-formula><mml:math id="inf23"><mml:mi>N</mml:mi></mml:math></inline-formula>, the realizable dichotomies become a vanishing fraction of the total (<xref ref-type="fig" rid="fig2">Figure 2C</xref>).</p><p>Here, to characterize the place-cell scaffold, we model a place cell as a perceptron receiving grid-like inputs (<xref ref-type="fig" rid="fig1">Figure 1B</xref>). Across space, a particular ‘field arrangement’ is realizable by the place cell if there is some set of input weights and a threshold (<xref ref-type="bibr" rid="bib50">Lee et al., 2020</xref>) for which its summed inputs are above threshold at only those locations and below it at all others (<xref ref-type="fig" rid="fig1">Figure 1A,B</xref>). We call an arrangement of exactly <inline-formula><mml:math id="inf24"><mml:mi>K</mml:mi></mml:math></inline-formula> fields a ‘K-field arrangement.’.</p><p>In the following, we answer two distinct but related questions: (1) out of all potential field arrangements over the entire set of unique grid inputs, how many are realizable, and how does the realizable fraction differ for grid-like inputs compared to inputs with matched dimension but different structure? This is akin to perceptron function counting (<xref ref-type="bibr" rid="bib22">Cover, 1965</xref>) with structured rather than general-position inputs and covers constraints within and across environments. We consider all arrangements regardless of sparsity, on one extreme, and <inline-formula><mml:math id="inf25"><mml:mi>K</mml:mi></mml:math></inline-formula>-field (highly sparse) arrangements on the other; these cases are analytically tractable. We expect the regime of sparse firing to interpolate between these two regimes. (2) Over what range of positions is any field arrangement realizable? This is analogous to computing the perceptron-separating capacity (<xref ref-type="bibr" rid="bib22">Cover, 1965</xref>) for structured rather than general-position inputs.</p><p>Although the structured rather than random nature of the grid code adds complexity to our problem, the symmetries present in the code also allow for the computation of some more detailed quantities than typically done for random inputs, including capacity computations for dichotomies with a prescribed number of positive labels (K-field arrangements).</p></sec></sec><sec id="s3" sec-type="results"><title>Results</title><p>Our approach, summarized in <xref ref-type="fig" rid="fig3">Figure 3</xref>, is as follows: we define a mapping from space to grid-like input codes (<xref ref-type="fig" rid="fig3">Figure 3A,B</xref>), and a generalization to what we call modular-one-hot codes (<xref ref-type="fig" rid="fig3">Figure 3B</xref>). We explore the geometric structure and symmetries of these codes (<xref ref-type="fig" rid="fig3">Figure 3C</xref>). Next, we show how separating hyperplanes placed on these structured inputs by place-cell perceptrons permits the realization of some dichotomies (<xref ref-type="fig" rid="fig3">Figure 3D</xref>) and thus some spatial field arrangements (<xref ref-type="fig" rid="fig3">Figure 3E</xref>), but not others, and obtains mathematical results on the number of realizable arrangements and the separating capacity.</p><fig id="fig3" position="float"><label>Figure 3.</label><caption><title>Our overall approach.</title><p>(<bold>A, B</bold>) Locations (indexed by <inline-formula><mml:math id="inf26"><mml:mi>j</mml:mi></mml:math></inline-formula>) map onto grid-like coding states (<inline-formula><mml:math id="inf27"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mo fence="false" stretchy="false">{</mml:mo><mml:msub><mml:mi mathvariant="bold-italic">x</mml:mi><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mo fence="false" stretchy="false">}</mml:mo></mml:mrow></mml:mstyle></mml:math></inline-formula>, defining the grid-like codebook) through the assignment of spatially periodic responses to grid cells, with different cells in a module having different phases and different modules having different periods. (This example: periods 2,3.) (<bold>C</bold>) The patterns in the grid-like codebook form some nonrandom, geometric structure. (<bold>D</bold>) The geometric structure defines which dichotomies are realizable by separating hyperplanes. (<bold>E</bold>) A realizable dichotomy in the abstract codebook pattern space, when mapped back to spatial locations, corresponds to a realizable field arrangement. Shown is a place field arrangement realized by the separating hyperplane from (<bold>D</bold>). Similarly, an unrealizable field arrangement can be constructed by examination of (<bold>D</bold>): it would consist of, for instance, fields at locations <inline-formula><mml:math id="inf28"><mml:mrow><mml:mi>j</mml:mi><mml:mo>=</mml:mo><mml:mrow><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mn>2</mml:mn></mml:mrow></mml:mrow></mml:math></inline-formula> only (or, e.g., at <inline-formula><mml:math id="inf29"><mml:mrow><mml:mi>j</mml:mi><mml:mo>=</mml:mo><mml:mrow><mml:mn>3</mml:mn><mml:mo>,</mml:mo><mml:mn>4</mml:mn><mml:mo>,</mml:mo><mml:mn>6</mml:mn></mml:mrow></mml:mrow></mml:math></inline-formula> only): vertices that cannot be grouped together by a single hyperplane.</p></caption><graphic mime-subtype="tiff" mimetype="image" xlink:href="elife-62702-fig3-v3.tif"/></fig><sec id="s3-1"><title>The structure of grid-like input patterns</title><p>Grid cells have spatially periodic responses (<xref ref-type="fig" rid="fig1">Figure 1A,B</xref>). Cells in one grid module exhibit a common spatial period but cover all possible spatial phases. The dynamics of each module are low-dimensional (<xref ref-type="bibr" rid="bib30">Fyhn et al., 2007</xref>; <xref ref-type="bibr" rid="bib93">Yoon et al., 2013</xref>), with the dynamics within a module supporting and stabilizing a periodic phase code for position. Thus, we use the following simple model to describe the spatial coding of grid cells and modules: a module with spatial period <inline-formula><mml:math id="inf30"><mml:msub><mml:mi>λ</mml:mi><mml:mi>m</mml:mi></mml:msub></mml:math></inline-formula> (in units of the spatial discretization) consists of <inline-formula><mml:math id="inf31"><mml:msub><mml:mi>λ</mml:mi><mml:mi>m</mml:mi></mml:msub></mml:math></inline-formula> cells that tile all possible phases in the discretized space while maintaining their phase relationships with each other. Each grid cell’s response is a <inline-formula><mml:math id="inf32"><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:mn>0</mml:mn><mml:mo>,</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">}</mml:mo></mml:mrow></mml:math></inline-formula>-valued periodic function of a discretized 1D location variable (indexed by <inline-formula><mml:math id="inf33"><mml:mi>j</mml:mi></mml:math></inline-formula>); cell <inline-formula><mml:math id="inf34"><mml:mi>i</mml:mi></mml:math></inline-formula> in module <inline-formula><mml:math id="inf35"><mml:mi>m</mml:mi></mml:math></inline-formula> fires (has response 1) whenever <inline-formula><mml:math id="inf36"><mml:mrow><mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi>j</mml:mi><mml:mo>-</mml:mo><mml:mi>i</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo lspace="2.5pt" rspace="2.5pt">mod</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mi>m</mml:mi></mml:msub></mml:mrow><mml:mo>=</mml:mo><mml:mn>0</mml:mn></mml:mrow></mml:math></inline-formula>, and is off (has response 0) otherwise (<xref ref-type="fig" rid="fig1">Figure 1B</xref>). The encoding of location <inline-formula><mml:math id="inf37"><mml:mi>j</mml:mi></mml:math></inline-formula> across all Mm modules is thus an <inline-formula><mml:math id="inf38"><mml:mi>N</mml:mi></mml:math></inline-formula>-dimensional vector <inline-formula><mml:math id="inf39"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msub><mml:mrow><mml:mi mathvariant="bold-italic">x</mml:mi></mml:mrow><mml:mrow><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mstyle></mml:math></inline-formula>, where <inline-formula><mml:math id="inf40"><mml:mrow><mml:mi>N</mml:mi><mml:mo>=</mml:mo><mml:mrow><mml:msubsup><mml:mo largeop="true" symmetric="true">∑</mml:mo><mml:mrow><mml:mi>m</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>M</mml:mi></mml:msubsup><mml:msub><mml:mi>λ</mml:mi><mml:mi>m</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>. Nonzero entries correspond to co-active grid cells at position <inline-formula><mml:math id="inf41"><mml:mi>j</mml:mi></mml:math></inline-formula>. The total number of unique grid patterns is <inline-formula><mml:math id="inf42"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mi>L</mml:mi><mml:mo>=</mml:mo><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mtext>LCM</mml:mtext></mml:mstyle><mml:mo stretchy="false">(</mml:mo><mml:mo fence="false" stretchy="false">{</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mi>M</mml:mi></mml:mrow></mml:msub><mml:mo fence="false" stretchy="false">}</mml:mo><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mstyle></mml:math></inline-formula>, which grows exponentially with <inline-formula><mml:math id="inf43"><mml:mi>M</mml:mi></mml:math></inline-formula> for generic choices of the periods <inline-formula><mml:math id="inf44"><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mi>m</mml:mi></mml:msub><mml:mo stretchy="false">}</mml:mo></mml:mrow></mml:math></inline-formula>(<xref ref-type="bibr" rid="bib26">Fiete et al., 2008</xref>). We refer to <inline-formula><mml:math id="inf45"><mml:mi>L</mml:mi></mml:math></inline-formula> as the ‘full range’ of the code. We call the full ordered set of unique coding states <inline-formula><mml:math id="inf46"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mo fence="false" stretchy="false">{</mml:mo><mml:msub><mml:mrow><mml:mi mathvariant="bold-italic">x</mml:mi></mml:mrow><mml:mrow><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo fence="false" stretchy="false">}</mml:mo></mml:mrow></mml:mstyle></mml:math></inline-formula> the grid-like ‘codebook’ <inline-formula><mml:math id="inf47"><mml:msub><mml:mi>X</mml:mi><mml:mi mathvariant="normal">g</mml:mi></mml:msub></mml:math></inline-formula>.</p><p>Because <inline-formula><mml:math id="inf48"><mml:msub><mml:mi>X</mml:mi><mml:mi mathvariant="normal">g</mml:mi></mml:msub></mml:math></inline-formula> includes all unique grid-like coding states across modules, it includes all possible relative phase shifts or ‘remappings’ between grid modules (<xref ref-type="bibr" rid="bib26">Fiete et al., 2008</xref>; <xref ref-type="bibr" rid="bib55">Monaco et al., 2011</xref>). Thus, this full-range codebook may be viewed as the union of all grid-cell responses across all possible space and environments. We assume implicitly that 2D grid modules do not rotate relative to each other across space or environments. Permitting grid modules to differentially rotate would lead to more input pattern diversity, more realizable place patterns, and bigger separating capacity than in our present computations.</p><p>The grid-like code belongs to a more general class that we call ‘modular-one-hot’ codes. In a modular-one-hot code, cells are divided into modules; within each module only one cell is allowed to be active (the within-module code is one-hot), but there are no other constraints on the code. With <inline-formula><mml:math id="inf49"><mml:mrow><mml:mi>m</mml:mi><mml:mo>=</mml:mo><mml:mrow><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mi mathvariant="normal">…</mml:mi><mml:mo>,</mml:mo><mml:mi>M</mml:mi></mml:mrow></mml:mrow></mml:math></inline-formula> modules of sizes <inline-formula><mml:math id="inf50"><mml:msub><mml:mi>λ</mml:mi><mml:mi>m</mml:mi></mml:msub></mml:math></inline-formula>, the modular-one-hot codebook <inline-formula><mml:math id="inf51"><mml:msub><mml:mi>X</mml:mi><mml:mi>mo</mml:mi></mml:msub></mml:math></inline-formula> contains <inline-formula><mml:math id="inf52"><mml:mrow><mml:mi>P</mml:mi><mml:mo>=</mml:mo><mml:mrow><mml:msubsup><mml:mo largeop="true" symmetric="true">∏</mml:mo><mml:mrow><mml:mi>m</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>M</mml:mi></mml:msubsup><mml:msub><mml:mi>λ</mml:mi><mml:mi>m</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> unique patterns, with <inline-formula><mml:math id="inf53"><mml:mrow><mml:mi>P</mml:mi><mml:mo>≥</mml:mo><mml:mi>L</mml:mi></mml:mrow></mml:math></inline-formula> for a corresponding grid-like code. When <inline-formula><mml:math id="inf54"><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:mi mathvariant="normal">⋯</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mi>M</mml:mi></mml:msub><mml:mo stretchy="false">}</mml:mo></mml:mrow></mml:math></inline-formula> are pairwise coprime, <inline-formula><mml:math id="inf55"><mml:mrow><mml:mi>P</mml:mi><mml:mo>=</mml:mo><mml:mi>L</mml:mi></mml:mrow></mml:math></inline-formula> and the grid-like and modular-one-hot codebooks contain identical patterns. However, even in this case, modular-one-hot codes may be viewed as a generalization of grid-like codes as there is no notion of a spatial ordering in the modular-one-hot codes, and they are defined without referring to a spatial variable.</p><p>Of our two primary questions introduced earlier, question (1) on counting the size of the place-cell repertoire (the number of realizable field arrangements) depends only on the geometry of the grid coding states, and not on their detailed spatial embedding (i.e., it depends on the mappings in <xref ref-type="fig" rid="fig3">Figure 3B–D</xref>, but not on the mapping between <xref ref-type="fig" rid="fig3">Figure 3A,B,D,E</xref>). In other words, it does not depend on the spatial ordering of the grid-like coding states and can equivalently be studied with the corresponding modular-one-hot code instead, which turns out to be easier. Question (2), on place-cell capacity (the spatial range <inline-formula><mml:math id="inf56"><mml:mrow><mml:mi>l</mml:mi><mml:mo>≤</mml:mo><mml:mi>L</mml:mi></mml:mrow></mml:math></inline-formula> over which any place field arrangement is realizable), depends on the spatial embedding of the grid and place codes (and on the full chain of <xref ref-type="fig" rid="fig3">Figure 3A-E</xref>). For <inline-formula><mml:math id="inf57"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mi>l</mml:mi><mml:mo>§lt;</mml:mo><mml:mi>L</mml:mi></mml:mrow></mml:mstyle></mml:math></inline-formula>, this would correspond to a particular rather than random subset of <inline-formula><mml:math id="inf58"><mml:msub><mml:mi>X</mml:mi><mml:mi>mo</mml:mi></mml:msub></mml:math></inline-formula>, thus we cannot use the general properties of this generalized version of the grid-like code.</p></sec><sec id="s3-2"><title>Alternative codes</title><p>In what follows, we will contrast place field arrangements that can be obtained with grid-like or modular-one-hot codes with arrangements driven by alternatively coded inputs. To this end, we briefly define some key alternative codes, commonly encountered in neuroscience, machine learning, or in the classical theory of perceptrons. For these alternative codes, we match the input dimension (number of cells) to the modular-one-hot inputs (unless stated otherwise).</p><p>Random codes <inline-formula><mml:math id="inf59"><mml:msub><mml:mi>X</mml:mi><mml:mi mathvariant="normal">r</mml:mi></mml:msub></mml:math></inline-formula>, used in the standard perceptron results, consist of real-valued random vectors. These are quite different from the grid-like code and all the other codes we will consider, in that the entries are real-valued rather than <inline-formula><mml:math id="inf60"><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:mn>0</mml:mn><mml:mo>,</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">}</mml:mo></mml:mrow></mml:math></inline-formula>-valued like the rest. A set of up to <inline-formula><mml:math id="inf61"><mml:mi>N</mml:mi></mml:math></inline-formula> random input patterns in <inline-formula><mml:math id="inf62"><mml:mi>N</mml:mi></mml:math></inline-formula> dimensions is linearly independent; thus, they have no structure up to this number.</p><p>Define the one-hot code <inline-formula><mml:math id="inf63"><mml:msub><mml:mi>X</mml:mi><mml:mi>oh</mml:mi></mml:msub></mml:math></inline-formula> as the set of vectors with a single nonzero element whose value is 1. It is a single-module version of the modular-one-hot code or may be viewed as a binarized version of the random patterns since <inline-formula><mml:math id="inf64"><mml:mi>N</mml:mi></mml:math></inline-formula> patterns in <inline-formula><mml:math id="inf65"><mml:mi>N</mml:mi></mml:math></inline-formula> dimensions are linearly independent. In the one-hot code, all neurons are equivalent, and there is no modularity or hierarchy.</p><p>Define the ‘binary’ code <inline-formula><mml:math id="inf66"><mml:msub><mml:mi>X</mml:mi><mml:mi mathvariant="normal">b</mml:mi></mml:msub></mml:math></inline-formula> as all possible binary activity patterns of <inline-formula><mml:math id="inf67"><mml:mi>N</mml:mi></mml:math></inline-formula> neurons (<xref ref-type="fig" rid="fig4">Figure 4B</xref>, right). We distinguish <inline-formula><mml:math id="inf68"><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:mn>0</mml:mn><mml:mo>,</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">}</mml:mo></mml:mrow></mml:math></inline-formula>-valued codes from binary codes. In the binary code, each cell represents a specific position (register) according to the binary number system. Thus, each cell represents numbers at a different resolution, differing in powers of 2, and the code has no neuron permutation invariance since each cell is its own module; thus, it is both highly hierarchical and modular.</p><fig id="fig4" position="float"><label>Figure 4.</label><caption><title>The geometry of structured inputs.</title><p>(<bold>A</bold>) Though the grid-like input patterns in the example <xref ref-type="fig" rid="fig1">Figure 1B</xref> are 5D, they have a simplified structure that can be embedded as a 3D triangular prism given by the product of a 2-graph (blue, middle) and 3-graph (red, right) because of the independently updating modular structure of the code. (<bold>B</bold>) Different codebooks and their geometries. At one end of the spectrum (left), one-hot codes consist of a single module; they are not hierarchical, and their geometry is always an elementary simplex (left). Grid cells and modular-one-hot codes (middle) have an intermediate level of hierarchy and consist of an orthogonal product of simplices. At the opposite end, the binary code (right) is the most hierarchical, consisting of as many modules as cells; the code has a hypercube geometry: vertices (codewords or patterns) on each face of the hypercube are far from being in general position.</p></caption><graphic mime-subtype="tiff" mimetype="image" xlink:href="elife-62702-fig4-v3.tif"/></fig><p>The grid-like and modular-one-hot codes exhibit an intermediate degree of modularity (multiple cells make up a module). If the modules are of a similar size, the code has little hierarchy.</p></sec><sec id="s3-3"><title>The geometry of grid-like input patterns</title><p>We first explore question <inline-formula><mml:math id="inf69"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula>. The modular-one-hot codebook <inline-formula><mml:math id="inf70"><mml:msub><mml:mi>X</mml:mi><mml:mi>mo</mml:mi></mml:msub></mml:math></inline-formula> is invariant to permutations of neurons (input matrix rows) within modules, but rows cannot be swapped across modules as this would destroy the modular structure. It is also invariant to permutations of patterns (input matrix columns <inline-formula><mml:math id="inf71"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msub><mml:mrow><mml:mi mathvariant="bold-italic">x</mml:mi></mml:mrow><mml:mrow><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mstyle></mml:math></inline-formula>). Further, the codebook includes all possible combinations of states across modules, so that modules function as independent encoders. These symmetries are sufficient to define the geometric arrangement of patterns in <inline-formula><mml:math id="inf72"><mml:msub><mml:mi>X</mml:mi><mml:mi>mo</mml:mi></mml:msub></mml:math></inline-formula>, and the geometry in turn will allow us to count the number of field arrangements that are realizable by separating hyperplanes.</p><p>To make these ideas concrete, consider a simple example with module sizes <inline-formula><mml:math id="inf73"><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:mn>2</mml:mn><mml:mo>,</mml:mo><mml:mn>3</mml:mn><mml:mo stretchy="false">}</mml:mo></mml:mrow></mml:math></inline-formula> (corresponding to the periods in the grid-like code), as in <xref ref-type="fig" rid="fig1">Figure 1B</xref> and <xref ref-type="fig" rid="fig3">Figure 3B</xref>. Independence across modules causes the code to have a product structure in the code: the codebook consists of six states that can be obtained as products of the within-module states: <inline-formula><mml:math id="inf74"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mo fence="false" stretchy="false">{</mml:mo><mml:mn>10100</mml:mn><mml:mo>,</mml:mo><mml:mn>10010</mml:mn><mml:mo>,</mml:mo><mml:mn>10001</mml:mn><mml:mo>,</mml:mo><mml:mn>01100</mml:mn><mml:mo>,</mml:mo><mml:mn>01010</mml:mn><mml:mo>,</mml:mo><mml:mn>01001</mml:mn><mml:mo fence="false" stretchy="false">}</mml:mo></mml:mrow></mml:mstyle></mml:math></inline-formula> = <inline-formula><mml:math id="inf75"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mo fence="false" stretchy="false">{</mml:mo><mml:mn>10</mml:mn><mml:mo>,</mml:mo><mml:mn>01</mml:mn><mml:mo fence="false" stretchy="false">}</mml:mo><mml:mo>×</mml:mo><mml:mo fence="false" stretchy="false">{</mml:mo><mml:mn>100</mml:mn><mml:mo>,</mml:mo><mml:mn>010</mml:mn><mml:mo>,</mml:mo><mml:mn>001</mml:mn><mml:mo fence="false" stretchy="false">}</mml:mo></mml:mrow></mml:mstyle></mml:math></inline-formula>, where <inline-formula><mml:math id="inf76"><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:mn>10</mml:mn><mml:mo>,</mml:mo><mml:mn>01</mml:mn><mml:mo stretchy="false">}</mml:mo></mml:mrow></mml:math></inline-formula> and <inline-formula><mml:math id="inf77"><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:mn>100</mml:mn><mml:mo>,</mml:mo><mml:mn>010</mml:mn><mml:mo>,</mml:mo><mml:mn>001</mml:mn><mml:mo stretchy="false">}</mml:mo></mml:mrow></mml:math></inline-formula> are the coding states within the size-2 and size-3 modules, respectively. We represent the two states in the size-2 module by two vertices, connected by an edge, which shows allowed state transitions within the module (<xref ref-type="fig" rid="fig4">Figure 4A</xref>, right). Similarly, the three states in the size-3 module and transitions between them are represented by a triangular graph (<xref ref-type="fig" rid="fig4">Figure 4A</xref>, right). The product of this edge graph and the triangle graph yields the full codebook <inline-formula><mml:math id="inf78"><mml:msub><mml:mi>X</mml:mi><mml:mi>mo</mml:mi></mml:msub></mml:math></inline-formula>. The resulting product graph (<xref ref-type="fig" rid="fig4">Figure 4A</xref>, left) is an orthogonal triangular prism with vertices representing the combined patterns.</p><p>This geometric construction generalizes to an arbitrary number of modules <inline-formula><mml:math id="inf79"><mml:mi>M</mml:mi></mml:math></inline-formula> and to arbitrary module sizes (periods) <inline-formula><mml:math id="inf80"><mml:msub><mml:mi>λ</mml:mi><mml:mi>m</mml:mi></mml:msub></mml:math></inline-formula>, <inline-formula><mml:math id="inf81"><mml:mrow><mml:mn>1</mml:mn><mml:mo>≤</mml:mo><mml:mi>m</mml:mi><mml:mo>≤</mml:mo><mml:mi>M</mml:mi></mml:mrow></mml:math></inline-formula>: by permutation invariance of neurons within modules, and independence of modules, the patterns of the codebook <inline-formula><mml:math id="inf82"><mml:msub><mml:mi>X</mml:mi><mml:mi>mo</mml:mi></mml:msub></mml:math></inline-formula> and thus of the corresponding grid-like codebook <inline-formula><mml:math id="inf83"><mml:msub><mml:mi>X</mml:mi><mml:mi mathvariant="normal">g</mml:mi></mml:msub></mml:math></inline-formula> always lie on the vertices of some convex polytope (e.g., the triangular prism), given by an orthogonal product of <inline-formula><mml:math id="inf84"><mml:mi>M</mml:mi></mml:math></inline-formula> simplicies (e.g., the line and triangle graphs). Each simplex represents one of the modules, with simplex dimension <inline-formula><mml:math id="inf85"><mml:mrow><mml:msub><mml:mi>λ</mml:mi><mml:mi>m</mml:mi></mml:msub><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:math></inline-formula> for module size (period) <inline-formula><mml:math id="inf86"><mml:msub><mml:mi>λ</mml:mi><mml:mi>m</mml:mi></mml:msub></mml:math></inline-formula> (see Place-cell capacity and volatility with grid-like inputs).</p><p>This geometric construction provides some immediate results on counting: in a convex polytope, any vertex can be separated from all the rest by a hyperplane; thus, all one-field arrangements are realizable. Pairs of vertices can be separated from the rest by a hyperplane if and only if the pair is directly connected by an edge (<xref ref-type="fig" rid="fig3">Figure 3D</xref>). Thus, we can now count the set of all realizable two-field arrangements as the number of adjacent vertices in the polytope. Unrealizable two-field arrangements, which consist geometrically of positive labels assigned to nonadjacent vertices, correspond algebraically to firing fields that are not separated by integer multiples of either of the grid periods (<xref ref-type="fig" rid="fig3">Figure 3D,E</xref>).</p><p>Moreover, note that the convex polytopes obtained for the grid-like code remain qualitatively unchanged in their geometry if the nonzero activations within each module are replaced by graded tuning curves as follows: convert all neural responses within a module into graded values by convolution along the spatial dimension by a kernel that has no periodicity over distances smaller than the module period (thus, the kernel cannot, for instance, be flat or contain multiple bumps within one module period). This convolution can be written as a matrix product with a circulant matrix of full rank and dimension equal to the full range <inline-formula><mml:math id="inf87"><mml:mi>L</mml:mi></mml:math></inline-formula>. Thus, the rank of the convolved matrix <inline-formula><mml:math id="inf88"><mml:msub><mml:mover accent="true"><mml:mi>X</mml:mi><mml:mo stretchy="false">~</mml:mo></mml:mover><mml:mi>g</mml:mi></mml:msub></mml:math></inline-formula> remains equal to the rank of <inline-formula><mml:math id="inf89"><mml:msub><mml:mi>X</mml:mi><mml:mi>g</mml:mi></mml:msub></mml:math></inline-formula>. Moreover, <inline-formula><mml:math id="inf90"><mml:msub><mml:mover accent="true"><mml:mi>X</mml:mi><mml:mo stretchy="false">~</mml:mo></mml:mover><mml:mi>g</mml:mi></mml:msub></mml:math></inline-formula> maintains the modular structure of <inline-formula><mml:math id="inf91"><mml:msub><mml:mi>X</mml:mi><mml:mi>g</mml:mi></mml:msub></mml:math></inline-formula>: it has the same within-module permutation invariance and across-module independence. Thus, the resulting geometry of the code – that it consists of convex polytopes constructed from orthogonal products of simplices – remains unchanged. As a result, all counting derivations, which are based on these geometric graphs, can be carried out for <inline-formula><mml:math id="inf92"><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:mn>0</mml:mn><mml:mo>,</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">}</mml:mo></mml:mrow></mml:math></inline-formula>-valued codes without any loss of generalization relative to graded tuning curves. (However, the conversion to graded tuning will modify the distances between vertices and thus affect the quantitative noise robustness of different field arrangements, as we will investigate later.) Later, we will also show that the counting results generalize to higher dimensions and higher-resolution phase representations within each module.</p><p>Given this geometric characterization of the grid-like and modular-one-hot codes, we can now compute the number of realizable field arrangements it is possible to obtain with separating hyperplanes.</p></sec><sec id="s3-4"><title>Counting realizable place field arrangements</title><p>For modular-one-hot codes (but not for random codes), it is possible to specify any separating hyperplane using only non-negative weights and an appropriate threshold. This is an interesting property in the neurobiological context because it means that the finding that projections from entorhinal cortex to hippocampus are excitatory (<xref ref-type="bibr" rid="bib79">Steward and Scoville, 1976</xref>; <xref ref-type="bibr" rid="bib91">Witter et al., 2000</xref>; <xref ref-type="bibr" rid="bib72">Shepard, 1998</xref>) does not further constrain realizable field arrangements.</p><p>It is also an interesting property mathematically, as we explore below: combined with the within-module permutation invariance property of modular-one-hot codes, the non-negative weight observation allows us to map the problem onto Young diagrams (<xref ref-type="fig" rid="fig5">Figure 5</xref>), which enables two things: (1) to move from considering separating hyperplanes geometrically, where infinitesimal variations represent distinct hyperplanes even if they do not change any pattern classifications, to considering them topologically, where hyperplane variations are considered as distinct only if they change the classification of any patterns, and (2) to use counting results previously established for Young diagrams.</p><fig id="fig5" position="float"><label>Figure 5.</label><caption><title>Counting realizable place field arrangements.</title><p>(<bold>A</bold>) Geometric structure of a modular-one-hot code with two modules of periods <inline-formula><mml:math id="inf93"><mml:mrow><mml:msub><mml:mi>λ</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>=</mml:mo><mml:mn>5</mml:mn></mml:mrow></mml:math></inline-formula> and <inline-formula><mml:math id="inf94"><mml:mrow><mml:msub><mml:mi>λ</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mo>=</mml:mo><mml:mn>7</mml:mn></mml:mrow></mml:math></inline-formula>. (<bold>B–D</bold>) Because cells within a module can be freely permuted, we can arrange the cells in order of increasing weights and keep this ordering fixed during counting, without loss of generality. We arrange the cells in modules 1 and 2 along the ordinate and abcissa in increasing weight order (solid blue and red lines, respectively). Because the weights can all be assumed to be non-negative for modular-one-hot codes, the threshold can be interpreted as setting a summed-weight budget: no cell (weight) combinations (purple regions with purple-white circles) below the threshold (diagonal purple line) can contribute to a place field arrangement, while all cell combinations with larger summed weights (unmarked regions) can. Increasing the threshold (from <bold>B </bold>to <bold>C</bold>) decreases the number of permitted combinations, as does decreasing the weights (<bold>B </bold>to <bold>D</bold>). Weight changes (<bold>B</bold>, from solid to dashed lines) and threshold changes (<bold>C</bold>, solid to dashed line), so long as they do not change which lines are to the bottom-left of the threshold, do not affect the number of permitted combinations, reflecting the topological structure of the counting problem. (<bold>E</bold>) With Young diagrams (each corresponding to <bold>B–D</bold> above), we extract the purely topological part of the problem, stripping away analog weights to simplify counting. A Young diagram consists of stacks of blocks in rows of nonincreasing width within a grid of a maximum width and height. The number of realizable field arrangements is simply the total number and multiplicity of distinct Young diagrams that can be built of the given height and width (see Appendix 3), which in our case is given by the periods of the two modules.</p></caption><graphic mime-subtype="tiff" mimetype="image" xlink:href="elife-62702-fig5-v3.tif"/></fig><p>Let us consider the field arrangements permitted by combining grid-like inputs from two modules, of periods <inline-formula><mml:math id="inf95"><mml:msub><mml:mi>λ</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:math></inline-formula> and <inline-formula><mml:math id="inf96"><mml:msub><mml:mi>λ</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:math></inline-formula>, (<xref ref-type="fig" rid="fig5">Figure 5A</xref>). The total number of distinct grid-cell modules is estimated to be between 5 and 8 (<xref ref-type="bibr" rid="bib78">Stensola et al., 2012</xref>). Further, there is a spatial topography in the projection of grid cells to the hippocampus, such that each local patch of the hippocampus likely receives inputs from 2, and likely no more than 3, grid modules (<xref ref-type="bibr" rid="bib89">Witter and Groenewegen, 1984</xref>; <xref ref-type="bibr" rid="bib4">Amaral and Witter, 1989</xref>; <xref ref-type="bibr" rid="bib90">Witter and Amaral, 1991</xref>; <xref ref-type="bibr" rid="bib38">Honda et al., 2012</xref>; <xref ref-type="bibr" rid="bib91">Witter et al., 2000</xref>). We denote cells by their outgoing weights (<inline-formula><mml:math id="inf97"><mml:msub><mml:mi>w</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>⁢</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:math></inline-formula> is the weight from cell <inline-formula><mml:math id="inf98"><mml:mi>j</mml:mi></mml:math></inline-formula> in module <inline-formula><mml:math id="inf99"><mml:mi>i</mml:mi></mml:math></inline-formula>) and arrange the weights along the axes of a coordinate space, one axis per module, in order of increasing size (<xref ref-type="fig" rid="fig5">Figure 5B</xref>). Since modular-one-hot codes are invariant to permutation of the cells within a module, we can assume a fixed ordering of cells and weights in counting all realizable arrangements, without loss of generality. The threshold (dark purple line) sets which combination of summed weights can contribute to a place field arrangement: no cell combinations below the boundary (purple region) have too small a summed weight and cannot contribute, while all cell combinations with larger summed weights (white region) can (<xref ref-type="fig" rid="fig5">Figure 5B</xref>). Decreasing the threshold (from <xref ref-type="fig" rid="fig5">Figure 5B</xref> to C) or increasing weights (from <xref ref-type="fig" rid="fig5">Figure 5B,C</xref> to D) a sufficient amount so some cells cross the threshold increases the number of combinations. But changes that do not cause cells to move past the threshold do not change the combinations (<xref ref-type="fig" rid="fig5">Figure 5B</xref>, solid versus dashed gray lines).</p><p>Young diagrams extract this topological information, stripping away geometric information about analog weights (<xref ref-type="fig" rid="fig5">Figure 5E</xref>). A Young diagram consists of stacks of blocks in rows of nonincreasing width, with maximum width and height given in this case by the two module periods, respectively. The number of realizable field arrangements turns out to be equivalent to the total number of Young diagrams that can be built of the given maximum height and width (see Appendix 3). With this mapping, we can leverage combinatorial results on Young diagrams (<xref ref-type="bibr" rid="bib28">Fulton and Fulton, 1997</xref>; <xref ref-type="bibr" rid="bib67">Postnikov, 2006</xref>) (commonly used to count the number of ways an integer can be written as a sum of non-negative integers).</p><p>As a result, the total number of separating hyperplanes (K-field arrangements for all <inline-formula><mml:math id="inf100"><mml:mi>K</mml:mi></mml:math></inline-formula>) across the full range <inline-formula><mml:math id="inf101"><mml:mi>L</mml:mi></mml:math></inline-formula> can be written exactly as (see Appendix 3).<disp-formula id="equ2"><label>(2)</label><mml:math id="m2"><mml:mrow><mml:mstyle displaystyle="true" scriptlevel="0"><mml:msub><mml:mrow><mml:mi mathvariant="script">N</mml:mi></mml:mrow><mml:mrow><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msub></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:munderover><mml:mo>∑</mml:mo><mml:mrow><mml:mi>k</mml:mi><mml:mo>=</mml:mo><mml:mn>0</mml:mn></mml:mrow><mml:mrow><mml:mo form="prefix" movablelimits="true">min</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:munderover><mml:mo stretchy="false">(</mml:mo><mml:mi>k</mml:mi><mml:mo>!</mml:mo><mml:msup><mml:mo stretchy="false">)</mml:mo><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msup><mml:msubsup><mml:mi>S</mml:mi><mml:mrow><mml:mi>k</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msubsup><mml:msubsup><mml:mi>S</mml:mi><mml:mrow><mml:mi>k</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msubsup><mml:mo>=</mml:mo><mml:msubsup><mml:mi>B</mml:mi><mml:mrow><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msub></mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mo>−</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msubsup><mml:mo>,</mml:mo></mml:mstyle></mml:mrow></mml:math></disp-formula></p><p>where <inline-formula><mml:math id="inf102"><mml:msubsup><mml:mi>S</mml:mi><mml:mi>k</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>n</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msubsup></mml:math></inline-formula> are Stirling numbers of the second kind and <inline-formula><mml:math id="inf103"><mml:msubsup><mml:mi>B</mml:mi><mml:mi>k</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>n</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msubsup></mml:math></inline-formula> are the poly-Bernoulli numbers (<xref ref-type="bibr" rid="bib67">Postnikov, 2006</xref>; <xref ref-type="bibr" rid="bib41">Kaneko, 1997</xref>). Assuming that the two periods have a similar size <inline-formula><mml:math id="inf104"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:msub><mml:mi>λ</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>≈</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mo>≡</mml:mo><mml:mi>λ</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula>, this number scales asymptotically as (<xref ref-type="bibr" rid="bib23">de Andrade et al., 2015</xref>).<disp-formula id="equ3"><label>(3)</label><mml:math id="m3"><mml:mrow><mml:mstyle displaystyle="true" scriptlevel="0"><mml:msub><mml:mrow><mml:mi mathvariant="script">N</mml:mi></mml:mrow><mml:mrow><mml:mi>λ</mml:mi><mml:mo>,</mml:mo><mml:mi>λ</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:msubsup><mml:mi>B</mml:mi><mml:mrow><mml:mi>λ</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mo>−</mml:mo><mml:mi>λ</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msubsup><mml:mo>=</mml:mo><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mfrac><mml:mn>1</mml:mn><mml:mrow><mml:mi>log</mml:mi><mml:mo>⁡</mml:mo><mml:mn>2</mml:mn><mml:msqrt><mml:mn>1</mml:mn><mml:mo>−</mml:mo><mml:mi>log</mml:mi><mml:mo>⁡</mml:mo><mml:mn>2</mml:mn></mml:msqrt></mml:mrow></mml:mfrac><mml:mo>+</mml:mo><mml:mi>o</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mfrac><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mn>2</mml:mn><mml:mi>λ</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>!</mml:mo></mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mn>2</mml:mn><mml:mi>log</mml:mi><mml:mo>⁡</mml:mo><mml:mn>2</mml:mn><mml:msup><mml:mo stretchy="false">)</mml:mo><mml:mrow><mml:mn>2</mml:mn><mml:mi>λ</mml:mi></mml:mrow></mml:msup></mml:mrow></mml:mfrac><mml:mo>∼</mml:mo><mml:msup><mml:mi>λ</mml:mi><mml:mrow><mml:mn>2</mml:mn><mml:mi>λ</mml:mi></mml:mrow></mml:msup><mml:mo>.</mml:mo></mml:mstyle></mml:mrow></mml:math></disp-formula></p><p>Thus, the number of realizable field arrangements with <inline-formula><mml:math id="inf105"><mml:mrow><mml:mi/><mml:mo>∼</mml:mo><mml:msup><mml:mi>λ</mml:mi><mml:mn>2</mml:mn></mml:msup></mml:mrow></mml:math></inline-formula> distinct modular-one-hot input patterns in a <inline-formula><mml:math id="inf106"><mml:mrow><mml:mn>2</mml:mn><mml:mo>⁢</mml:mo><mml:mi>λ</mml:mi></mml:mrow></mml:math></inline-formula>-dimensional space grows nearly as fast as <inline-formula><mml:math id="inf107"><mml:msup><mml:mi>λ</mml:mi><mml:mrow><mml:mn>2</mml:mn><mml:mo>⁢</mml:mo><mml:mi>λ</mml:mi></mml:mrow></mml:msup></mml:math></inline-formula>, (<xref ref-type="table" rid="table1">Table 1</xref>, row 2, columns 1–3). The total number of dichotomies over these input patterns scales as <inline-formula><mml:math id="inf108"><mml:mrow><mml:msup><mml:mn>2</mml:mn><mml:msup><mml:mi>λ</mml:mi><mml:mn>2</mml:mn></mml:msup></mml:msup><mml:mo>.</mml:mo></mml:mrow></mml:math></inline-formula> Thus, while the number of realizable arrangements over the full range is very large, it is a vanishing fraction of all potential arrangements (<xref ref-type="table" rid="table1">Table 1</xref>, row 2, column 4).</p><table-wrap id="table1" position="float"><label>Table 1.</label><caption><title>Number and fraction of realizable dichotomies with binary, modular-one-hot (<inline-formula><mml:math id="inf109"><mml:mrow><mml:mi>M</mml:mi><mml:mo>=</mml:mo><mml:mn>2</mml:mn></mml:mrow></mml:math></inline-formula> modules) and one-hot input codes with the same input cell budget (<inline-formula><mml:math id="inf110"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mi>N</mml:mi><mml:mo>=</mml:mo><mml:mn>2</mml:mn><mml:mi>λ</mml:mi></mml:mrow></mml:mstyle></mml:math></inline-formula>).</title></caption><table frame="hsides" rules="groups"><thead><tr><th align="left" valign="bottom"/><th align="left" valign="bottom"># cells</th><th align="left" valign="bottom"># input patts (L)</th><th align="left" valign="bottom"># lin dichot</th><th align="left" valign="bottom">Frac lin dichot</th></tr></thead><tbody><tr><td align="left" rowspan="2" valign="bottom">Binary</td><td align="left" valign="bottom">2λ</td><td align="left" valign="bottom">2<sup>2λ</sup></td><td align="left" valign="bottom">2<sup>2λ2</sup></td><td align="left" valign="bottom"><inline-formula><mml:math id="inf111"><mml:msup><mml:mn>2</mml:mn><mml:mrow><mml:mrow><mml:mn>2</mml:mn><mml:mo>⁢</mml:mo><mml:msup><mml:mi>λ</mml:mi><mml:mn>2</mml:mn></mml:msup></mml:mrow><mml:mo>-</mml:mo><mml:msup><mml:mn>2</mml:mn><mml:mrow><mml:mn>2</mml:mn><mml:mo>⁢</mml:mo><mml:mi>λ</mml:mi></mml:mrow></mml:msup></mml:mrow></mml:msup></mml:math></inline-formula></td></tr><tr><td align="char" char="." valign="bottom">=</td><td align="char" char="." valign="bottom">&lt;&lt;</td><td align="char" char="." valign="bottom">&lt;&lt;</td><td align="char" char="." valign="bottom">&gt;&gt;</td></tr><tr><td align="left" rowspan="2" valign="bottom">Modular-one-hot</td><td align="left" valign="bottom">2λ</td><td align="left" valign="bottom">λ<sup>2</sup></td><td align="left" valign="bottom"><inline-formula><mml:math id="inf112"><mml:msup><mml:mrow><mml:mo lspace="0.8pt">(</mml:mo><mml:mfrac><mml:mi>λ</mml:mi><mml:mrow><mml:mi>e</mml:mi><mml:mo>⁢</mml:mo><mml:mrow><mml:mi>log</mml:mi><mml:mo>⁡</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mn>2</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:mfrac><mml:mo>)</mml:mo></mml:mrow><mml:mrow><mml:mn>2</mml:mn><mml:mo>⁢</mml:mo><mml:mi>λ</mml:mi></mml:mrow></mml:msup></mml:math></inline-formula></td><td align="left" valign="bottom"><inline-formula><mml:math id="inf113"><mml:msup><mml:mn>2</mml:mn><mml:mrow><mml:mrow><mml:mn>2</mml:mn><mml:mo>⁢</mml:mo><mml:mi>λ</mml:mi><mml:mo>⁢</mml:mo><mml:mrow><mml:mi>log</mml:mi><mml:mo>⁡</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>λ</mml:mi><mml:mo rspace="0.8pt" stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:mrow><mml:mo rspace="0.8pt">-</mml:mo><mml:msup><mml:mi>λ</mml:mi><mml:mn>2</mml:mn></mml:msup></mml:mrow></mml:msup></mml:math></inline-formula></td></tr><tr><td align="char" char="." valign="bottom">=</td><td align="char" char="." valign="bottom">&lt;&lt;</td><td align="char" char="." valign="bottom">&lt;&lt;</td><td align="char" char="." valign="bottom">&gt;&gt;</td></tr><tr><td align="left" valign="bottom">One-hot</td><td align="left" valign="bottom">2λ</td><td align="left" valign="bottom">2λ</td><td align="left" valign="bottom">2<sup>2λ</sup></td><td align="char" char="." valign="bottom">1</td></tr></tbody></table></table-wrap><p>If <inline-formula><mml:math id="inf114"><mml:mrow><mml:mi>M</mml:mi><mml:mo>≥</mml:mo><mml:mn>3</mml:mn></mml:mrow></mml:math></inline-formula> modules were to contribute to each place field’s response, then all realizable field arrangements still would correspond to Young diagrams; however, not all diagrams would correspond to realizable arrangements. Thus, counting Young diagrams would yield an upper bound on the number of realizable field arrangements but not an exact count (see Appendix 3). The latter limitation is not a surprise: Due to the structure of the grid-like code (a product of simplices), the enumeration of realizable dichotomies with arbitrarily many input modules is expected to be at least as challenging as that of Boolean functions. Counting the number of linearly separable Boolean functions of arbitrary (input) dimension (<xref ref-type="bibr" rid="bib63">Peled and Simeone, 1985</xref>; <xref ref-type="bibr" rid="bib37">Hegedüs and Megiddo, 1996</xref>) is hard.</p><p>Nevertheless, we can provide an exact count of the number of realizable <inline-formula><mml:math id="inf115"><mml:mi>K</mml:mi></mml:math></inline-formula>-dichotomies for arbitrarily many input modules <inline-formula><mml:math id="inf116"><mml:mi>M</mml:mi></mml:math></inline-formula> if <inline-formula><mml:math id="inf117"><mml:mi>K</mml:mi></mml:math></inline-formula> is small (<inline-formula><mml:math id="inf118"><mml:mrow><mml:mi>K</mml:mi><mml:mo>=</mml:mo><mml:mrow><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mn>2</mml:mn><mml:mo>,</mml:mo><mml:mn>3</mml:mn></mml:mrow></mml:mrow></mml:math></inline-formula> and 4). This may be biologically relevant since place fields tend to fire sparsely even on long tracks and across environments. In this case, the number <inline-formula><mml:math id="inf119"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msub><mml:mrow><mml:mi mathvariant="script">N</mml:mi></mml:mrow><mml:mrow><mml:mi>K</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mstyle></mml:math></inline-formula> of realizable small-<inline-formula><mml:math id="inf120"><mml:mi>K</mml:mi></mml:math></inline-formula> field arrangements scales as (the exact expression is derived analytically in Appendix 3)<disp-formula id="equ4"><label>(4)</label><mml:math id="m4"><mml:mrow><mml:msub><mml:mrow><mml:mi mathvariant="script">N</mml:mi></mml:mrow><mml:mrow><mml:mi>K</mml:mi></mml:mrow></mml:msub><mml:mo>∼</mml:mo><mml:msup><mml:mi>M</mml:mi><mml:mrow><mml:mi>K</mml:mi><mml:mo>−</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msup><mml:msup><mml:mi>λ</mml:mi><mml:mrow><mml:mi>M</mml:mi><mml:mo>+</mml:mo><mml:mi>K</mml:mi><mml:mo>−</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msup><mml:mo>.</mml:mo></mml:mrow></mml:math></disp-formula></p><p>The scaling approximation becomes more accurate for periods that are large relative to the spatial discretization (see Appendix 3). Since the total number of K-dichotomies scales as <inline-formula><mml:math id="inf121"><mml:msup><mml:mi>λ</mml:mi><mml:mrow><mml:mi>M</mml:mi><mml:mo>⁢</mml:mo><mml:mi>K</mml:mi></mml:mrow></mml:msup></mml:math></inline-formula>, the fraction of realizable K-dichotomies scales as <inline-formula><mml:math id="inf122"><mml:mrow><mml:msup><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi>M</mml:mi><mml:mo>/</mml:mo><mml:mi>λ</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mrow><mml:mi>K</mml:mi><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msup><mml:mo>⁢</mml:mo><mml:msup><mml:mi>λ</mml:mi><mml:mrow><mml:mo>-</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi>M</mml:mi><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:msup></mml:mrow></mml:math></inline-formula>, which for <inline-formula><mml:math id="inf123"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mi>λ</mml:mi><mml:mo>≫</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mi>λ</mml:mi><mml:mo>§gt;</mml:mo><mml:mi>M</mml:mi></mml:mrow></mml:mstyle></mml:math></inline-formula> vanishes as a power law as soon as <inline-formula><mml:math id="inf124"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mi>M</mml:mi><mml:mo>§gt;</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:mstyle></mml:math></inline-formula>.</p><p>We can compare this result with the number of K-field arrangements realizable by one-hot codes. Since any arrangement is realizable with one-hot codes, it suffices to simply count all K-field arrangements. The full range of a one-hot code with <inline-formula><mml:math id="inf125"><mml:mrow><mml:mi>M</mml:mi><mml:mo>⁢</mml:mo><mml:mi>λ</mml:mi></mml:mrow></mml:math></inline-formula> cells is <inline-formula><mml:math id="inf126"><mml:mrow><mml:mi>M</mml:mi><mml:mo>⁢</mml:mo><mml:mi>λ</mml:mi></mml:mrow></mml:math></inline-formula>, thus the number of realizable K-field arrangements is <inline-formula><mml:math id="inf127"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msub><mml:mrow><mml:mi mathvariant="script">N</mml:mi></mml:mrow><mml:mrow><mml:mi>K</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:mrow><mml:mrow><mml:mo maxsize="2.047em" minsize="2.047em">(</mml:mo></mml:mrow><mml:mfrac linethickness="0"><mml:mrow><mml:mi>M</mml:mi><mml:mi>λ</mml:mi></mml:mrow><mml:mi>K</mml:mi></mml:mfrac><mml:mrow><mml:mo maxsize="2.047em" minsize="2.047em">)</mml:mo></mml:mrow></mml:mrow></mml:mrow><mml:mo>∼</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi>M</mml:mi><mml:mi>λ</mml:mi><mml:msup><mml:mo stretchy="false">)</mml:mo><mml:mrow><mml:mi>K</mml:mi></mml:mrow></mml:msup></mml:mrow></mml:mstyle></mml:math></inline-formula>, where the last scaling holds for <inline-formula><mml:math id="inf128"><mml:mrow><mml:mi>K</mml:mi><mml:mo>≪</mml:mo><mml:mrow><mml:mi>M</mml:mi><mml:mo>⁢</mml:mo><mml:mi>λ</mml:mi></mml:mrow></mml:mrow></mml:math></inline-formula>. In short, a one-hot code enables <inline-formula><mml:math id="inf129"><mml:mrow><mml:mi/><mml:mo>∼</mml:mo><mml:mrow><mml:msup><mml:mi>M</mml:mi><mml:mi>K</mml:mi></mml:msup><mml:mo>⁢</mml:mo><mml:msup><mml:mi>λ</mml:mi><mml:mi>K</mml:mi></mml:msup></mml:mrow></mml:mrow></mml:math></inline-formula> arrangements, while the corresponding modular-one-hot code with <inline-formula><mml:math id="inf130"><mml:mrow><mml:mi>M</mml:mi><mml:mo>⁢</mml:mo><mml:mi>λ</mml:mi></mml:mrow></mml:math></inline-formula> cells enables <inline-formula><mml:math id="inf131"><mml:mrow><mml:mi/><mml:mo>∼</mml:mo><mml:mrow><mml:msup><mml:mi>M</mml:mi><mml:mrow><mml:mi>K</mml:mi><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msup><mml:mo>⁢</mml:mo><mml:msup><mml:mi>λ</mml:mi><mml:mrow><mml:mrow><mml:mi>K</mml:mi><mml:mo>+</mml:mo><mml:mi>M</mml:mi></mml:mrow><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msup></mml:mrow></mml:mrow></mml:math></inline-formula> field arrangements, for a ratio <inline-formula><mml:math id="inf132"><mml:mrow><mml:mrow><mml:msup><mml:mi>λ</mml:mi><mml:mrow><mml:mi>M</mml:mi><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msup><mml:mo>/</mml:mo><mml:mi>M</mml:mi></mml:mrow><mml:mo>≫</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:math></inline-formula> of realizable fields with modular-one-hot versus one-hot codes. Once again, as in the case where we counted arrangements without regard to sparseness, the grid-like code enables far more realizable K-field arrangements than one-hot codes.</p><p>In summary, place cells driven by grid inputs can achieve a very large number of unique coding states that grows exponentially with the number of modules. We have derived this result for <inline-formula><mml:math id="inf133"><mml:mrow><mml:mi>M</mml:mi><mml:mo>=</mml:mo><mml:mn>2</mml:mn></mml:mrow></mml:math></inline-formula> and all K-field arrangements, on one hand, and for arbitrary <inline-formula><mml:math id="inf134"><mml:mi>M</mml:mi></mml:math></inline-formula> but ultra-sparse (small-<inline-formula><mml:math id="inf135"><mml:mi>K</mml:mi></mml:math></inline-formula>) field arrangements. It is difficult to obtain an exact result for sparse field arrangements for which <inline-formula><mml:math id="inf136"><mml:mi>K</mml:mi></mml:math></inline-formula> is a small but finite fraction of <inline-formula><mml:math id="inf137"><mml:mi>L</mml:mi></mml:math></inline-formula>; however, we expect that regime should interpolate between these other two; it will be interesting and important for future work to shed light on this intermediate regime. In all cases, the number of realizable arrangements is large but a vanishingly small fraction of all arrangements, and thus forms a highly structured subset. This suggests that place cells, when driven by grid-cell inputs, can form a very large number of field arrangements that seem essentially unrestricted, but individual cells actually have little freedom in where to place their fields.</p></sec><sec id="s3-5"><title>Comparison with other input patterns</title><p>How does the number of realizable place field arrangements differ for input codes with different levels of modularity and hierarchy? We directly compare codes with the same neuron budget (input dimension <inline-formula><mml:math id="inf138"><mml:mi>N</mml:mi></mml:math></inline-formula>) by taking <inline-formula><mml:math id="inf139"><mml:mrow><mml:mi>N</mml:mi><mml:mo>=</mml:mo><mml:mrow><mml:mi>M</mml:mi><mml:mo>⁢</mml:mo><mml:mi>λ</mml:mi></mml:mrow></mml:mrow></mml:math></inline-formula>, where for simplicity, we set <inline-formula><mml:math id="inf140"><mml:mrow><mml:msub><mml:mi>λ</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mi>λ</mml:mi></mml:mrow></mml:math></inline-formula> for all modules in the modular-one-hot codes. This is because the modular-one-hot codes include all permutations of states in each module, the number of unique input states with equal-sized modules still equals the product of periods <inline-formula><mml:math id="inf141"><mml:mrow><mml:mi>L</mml:mi><mml:mo>=</mml:mo><mml:msup><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi>N</mml:mi><mml:mo>/</mml:mo><mml:mi>M</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mi>M</mml:mi></mml:msup><mml:mo>=</mml:mo><mml:msup><mml:mi>λ</mml:mi><mml:mi>M</mml:mi></mml:msup></mml:mrow></mml:math></inline-formula>, as when the periods are different and coprime. The one-hot code generates far fewer distinct input patterns (<inline-formula><mml:math id="inf142"><mml:mrow><mml:mi>L</mml:mi><mml:mo>=</mml:mo><mml:mi>N</mml:mi><mml:mo>=</mml:mo><mml:mrow><mml:mi>M</mml:mi><mml:mo>⁢</mml:mo><mml:mi>λ</mml:mi></mml:mrow></mml:mrow></mml:math></inline-formula>) than the modular-one-hot code, which in turn generates fewer input patterns than the binary code (<inline-formula><mml:math id="inf143"><mml:mrow><mml:mi>L</mml:mi><mml:mo>=</mml:mo><mml:msup><mml:mn>2</mml:mn><mml:mi>N</mml:mi></mml:msup><mml:mo>=</mml:mo><mml:msup><mml:mn>2</mml:mn><mml:mrow><mml:mi>M</mml:mi><mml:mo>⁢</mml:mo><mml:mi>λ</mml:mi></mml:mrow></mml:msup></mml:mrow></mml:math></inline-formula>) (<xref ref-type="table" rid="table1">Table 1</xref>, column 2). This is due to the greater expressive power afforded by modularity and hierarchy.</p><p>Next, we compare results across codes for <inline-formula><mml:math id="inf144"><mml:mrow><mml:mi>M</mml:mi><mml:mo>=</mml:mo><mml:mn>2</mml:mn></mml:mrow></mml:math></inline-formula>, the case for which we have an explicit formula counting the total number of realizable field arrangements for any <inline-formula><mml:math id="inf145"><mml:mi>K</mml:mi></mml:math></inline-formula>, and which is also best supported by the biology.</p><p>How many dichotomies are realizable with these inputs? As for the modular-one-hot codes, the patterns of <inline-formula><mml:math id="inf146"><mml:msub><mml:mi>X</mml:mi><mml:mi>oh</mml:mi></mml:msub></mml:math></inline-formula> and <inline-formula><mml:math id="inf147"><mml:msub><mml:mi>X</mml:mi><mml:mi mathvariant="normal">b</mml:mi></mml:msub></mml:math></inline-formula> fall on the vertices of a convex polytope. For <inline-formula><mml:math id="inf148"><mml:msub><mml:mi>X</mml:mi><mml:mi>oh</mml:mi></mml:msub></mml:math></inline-formula>, that polytope is just a <inline-formula><mml:math id="inf149"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mpadded width="-1.7pt"><mml:mi>N</mml:mi></mml:mpadded><mml:mo rspace="0.8pt">-</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula>-dimensional simplex (<xref ref-type="fig" rid="fig4">Figure 4C</xref>, left), thus any subset of <inline-formula><mml:math id="inf150"><mml:mi>K</mml:mi></mml:math></inline-formula> vertices (<inline-formula><mml:math id="inf151"><mml:mrow><mml:mn>1</mml:mn><mml:mo>≤</mml:mo><mml:mi>K</mml:mi><mml:mo>≤</mml:mo><mml:mi>N</mml:mi></mml:mrow></mml:math></inline-formula>) lies on a <inline-formula><mml:math id="inf152"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mpadded width="-1.7pt"><mml:mi>K</mml:mi></mml:mpadded><mml:mo rspace="0.8pt">-</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula>-dimensional face of the simplex and is therefore a linearly separable dichotomy. Thus, all <inline-formula><mml:math id="inf153"><mml:msup><mml:mn>2</mml:mn><mml:mi>N</mml:mi></mml:msup></mml:math></inline-formula> dichotomies of <inline-formula><mml:math id="inf154"><mml:msub><mml:mi>X</mml:mi><mml:mi>oh</mml:mi></mml:msub></mml:math></inline-formula> are realizable and the fraction of realizable dichotomies is 1 (<xref ref-type="table" rid="table1">Table 1</xref>, columns 3 and 4). For <inline-formula><mml:math id="inf155"><mml:msub><mml:mi>X</mml:mi><mml:mi mathvariant="normal">b</mml:mi></mml:msub></mml:math></inline-formula>, the polytope is a hypercube; it therefore consists of square faces, a prototypical configuration of points not in general position (not linearly separable, <xref ref-type="fig" rid="fig2">Figure 2B</xref> and <xref ref-type="fig" rid="fig4">Figure 4</xref>, right) even when the number of patterns is small relative to the input dimension (number of cells). Counting the number of linearly separable dichotomies on vertices of a hypercube (also called linear Boolean functions) has attracted much interest (<xref ref-type="bibr" rid="bib63">Peled and Simeone, 1985</xref>; <xref ref-type="bibr" rid="bib37">Hegedüs and Megiddo, 1996</xref>). It is an NP-hard combinatorial problem, so no exact solution exists. However, in the limit of large dimension (<inline-formula><mml:math id="inf156"><mml:mrow><mml:mi>N</mml:mi><mml:mo>→</mml:mo><mml:mi mathvariant="normal">∞</mml:mi></mml:mrow></mml:math></inline-formula>), the number of linearly separable dichotomies scales as <inline-formula><mml:math id="inf157"><mml:msup><mml:mn>2</mml:mn><mml:mrow><mml:msup><mml:mi>N</mml:mi><mml:mn>2</mml:mn></mml:msup><mml:mo>/</mml:mo><mml:mn>2</mml:mn></mml:mrow></mml:msup></mml:math></inline-formula>(<xref ref-type="bibr" rid="bib96">Zuev, 1989</xref>), a much larger number than for one-hot inputs (<xref ref-type="table" rid="table1">Table 1</xref>, column 3). However, this number is a strongly vanishing fraction of all <inline-formula><mml:math id="inf158"><mml:msup><mml:mn>2</mml:mn><mml:msup><mml:mn>2</mml:mn><mml:mi>N</mml:mi></mml:msup></mml:msup></mml:math></inline-formula> hypercube dichotomies (<xref ref-type="table" rid="table1">Table 1</xref>, column 4).</p><p>For modular-one-hot codes with <inline-formula><mml:math id="inf159"><mml:mi>M</mml:mi></mml:math></inline-formula> modules, the polytopes contain <inline-formula><mml:math id="inf160"><mml:mi>M</mml:mi></mml:math></inline-formula>-dimensional hypercubes and not all patterns are thus in general position. We determined earlier that the total number of realizable dichotomies with <inline-formula><mml:math id="inf161"><mml:mrow><mml:mi>M</mml:mi><mml:mo>=</mml:mo><mml:mn>2</mml:mn></mml:mrow></mml:math></inline-formula> modules scales as <inline-formula><mml:math id="inf162"><mml:msup><mml:mi>λ</mml:mi><mml:mrow><mml:mn>2</mml:mn><mml:mo>⁢</mml:mo><mml:mi>λ</mml:mi></mml:mrow></mml:msup></mml:math></inline-formula>, permitting a direct comparison with the one-hot and binary codes (<xref ref-type="table" rid="table1">Table 1</xref>, row 2).</p><p>Finally, we may compare grid-like codes with random (real-valued) codes, which are the standard inputs for the classical perceptron results. For a fixed input dimension, it is possible to generate infinitely many real-valued patterns, unlike the finite number achievable by <inline-formula><mml:math id="inf163"><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:mn>0</mml:mn><mml:mo>,</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">}</mml:mo></mml:mrow></mml:math></inline-formula>-valued codes. We thus construct a random codebook <inline-formula><mml:math id="inf164"><mml:msub><mml:mi>X</mml:mi><mml:mi mathvariant="normal">r</mml:mi></mml:msub></mml:math></inline-formula> with the same number, <inline-formula><mml:math id="inf165"><mml:mrow><mml:mi>P</mml:mi><mml:mo>=</mml:mo><mml:msup><mml:mi>λ</mml:mi><mml:mn>2</mml:mn></mml:msup></mml:mrow></mml:math></inline-formula>, of input patterns as the modular-one-hot code. We then determine the input dimension <inline-formula><mml:math id="inf166"><mml:mi>N</mml:mi></mml:math></inline-formula> required to obtain the same number of realizable field arrangements as the grid-like code. The number of realizable dichotomies of the random code with <inline-formula><mml:math id="inf167"><mml:mrow><mml:mi>P</mml:mi><mml:mo>≫</mml:mo><mml:mi>N</mml:mi></mml:mrow></mml:math></inline-formula> patterns scales as <inline-formula><mml:math id="inf168"><mml:mrow><mml:msup><mml:mi>P</mml:mi><mml:mi>N</mml:mi></mml:msup><mml:mo>∼</mml:mo><mml:msup><mml:mi>λ</mml:mi><mml:mrow><mml:mn>2</mml:mn><mml:mo>⁢</mml:mo><mml:mi>N</mml:mi></mml:mrow></mml:msup></mml:mrow></mml:math></inline-formula> according to an asymptotic expansion of Cover’s function counting theorem (<xref ref-type="bibr" rid="bib22">Cover, 1965</xref>). For this number to match <inline-formula><mml:math id="inf169"><mml:mrow><mml:mi/><mml:mo>∼</mml:mo><mml:msup><mml:mi>λ</mml:mi><mml:mrow><mml:mn>2</mml:mn><mml:mo>⁢</mml:mo><mml:mi>λ</mml:mi></mml:mrow></mml:msup></mml:mrow></mml:math></inline-formula>, the number of realizable field arrangements with a one-hot-modular code (of two modules of size <inline-formula><mml:math id="inf170"><mml:mrow><mml:mi/><mml:mo>∼</mml:mo><mml:mi>λ</mml:mi></mml:mrow></mml:math></inline-formula> each requires) <inline-formula><mml:math id="inf171"><mml:mrow><mml:mi>N</mml:mi><mml:mo>∼</mml:mo><mml:mi>λ</mml:mi></mml:mrow></mml:math></inline-formula>. This is a comparable number of input cells in both codes, which is an interesting result because unlike for random codes the grid-like input patterns are not in general position, the states are confined to be <inline-formula><mml:math id="inf172"><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:mn>0</mml:mn><mml:mo>,</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">}</mml:mo></mml:mrow></mml:math></inline-formula>-valued, and the grid input weights can be confined to be non-negative.</p><p>In sum, the more modular a code, the larger the set of realizable field arrangements, but these are also increasingly special subsets of all possible arrangements and are strongly structured by the inputs, with far from random or arbitrary configurations. Modular-one-hot codes are intermediate in modularity. Therefore, grid-driven place-cell responses occupy a middle ground between pattern richness and constrained structure.</p></sec><sec id="s3-6"><title>Place-cell-separating capacity</title><p>We now turn to question (2) from above: what is the maximal range of locations, <inline-formula><mml:math id="inf173"><mml:msup><mml:mi>l</mml:mi><mml:mo>*</mml:mo></mml:msup></mml:math></inline-formula>, over which all field arrangements are realizable? Once we reference a spatial range, the mapping of coding states to spatial locations matters (specifically, the fact that locations in the range are spatially contiguous matters, but given the fact that the code is translationally invariant [<xref ref-type="bibr" rid="bib26">Fiete et al., 2008</xref>], the origin of this range does not). We thus call <inline-formula><mml:math id="inf174"><mml:msup><mml:mi>l</mml:mi><mml:mo>*</mml:mo></mml:msup></mml:math></inline-formula> the ‘contiguous-separating capacity’ of a place cell (though we will refer to it as separating capacity, for short); it is the analogue of Cover’s separating capacity (<xref ref-type="bibr" rid="bib22">Cover, 1965</xref>), but for grid-like inputs with the addition of a spatial contiguity constraint.</p><p>We provide three primary results on this question. (1) We establish that for grid-structured inputs, the separating capacity <inline-formula><mml:math id="inf175"><mml:msup><mml:mi>l</mml:mi><mml:mo>*</mml:mo></mml:msup></mml:math></inline-formula> equals the rank <inline-formula><mml:math id="inf176"><mml:mi>R</mml:mi></mml:math></inline-formula> of the input matrix. (2) We establish analytically a formula for the rank <inline-formula><mml:math id="inf177"><mml:mi>R</mml:mi></mml:math></inline-formula> of grid-like input matrices with integer periods and generalize the result to real-valued periods. (3) We show that this rank, and thus the separating capacity for generic real-valued module periods, asymptotically approaches the sum <inline-formula><mml:math id="inf178"><mml:mrow><mml:mi mathvariant="normal">Σ</mml:mi><mml:mo>≡</mml:mo><mml:mrow><mml:msubsup><mml:mo largeop="true" symmetric="true">∑</mml:mo><mml:mrow><mml:mi>m</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>M</mml:mi></mml:msubsup><mml:msub><mml:mi>λ</mml:mi><mml:mi>m</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>. Our results are verified by numerical simulation and counting (proofs provided in Supporting Information Appendix).</p><p>We begin with a numerical example, using periods {3,4} (<xref ref-type="fig" rid="fig6">Figure 6A</xref>): the full range is <inline-formula><mml:math id="inf179"><mml:mrow><mml:mi>L</mml:mi><mml:mo>=</mml:mo><mml:mn>12</mml:mn></mml:mrow></mml:math></inline-formula>, while we see numerically that the contiguous-separating capacity is <inline-formula><mml:math id="inf180"><mml:mrow><mml:msup><mml:mi>l</mml:mi><mml:mo>*</mml:mo></mml:msup><mml:mo>=</mml:mo><mml:mn>6</mml:mn></mml:mrow></mml:math></inline-formula>. Although the separating capacity with grid-structured inputs is smaller than with random inputs, it is notably not much smaller (<xref ref-type="fig" rid="fig6">Figure 6B</xref>, black versus cyan curves), and it is actually larger than for random inputs if the read-out weights are constrained to be non-negative (<xref ref-type="fig" rid="fig6">Figure 6B</xref>, pink curves). Later, we will further show that the larger random-input capacity of place cells with unrestricted weights comes at the price of less robustness: the realizable fields have smaller margins. Next, we analytically characterize the separating capacity of place cells with grid-like inputs.</p><fig id="fig6" position="float"><label>Figure 6.</label><caption><title>Place-cell-separating capacity.</title><p>(<bold>A</bold>) Fraction of K-field arrangements that are realizable with grid-like inputs as a function of range (<inline-formula><mml:math id="inf181"><mml:mi>L</mml:mi></mml:math></inline-formula> indicates the full range; in this example, grid periods are <inline-formula><mml:math id="inf182"><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:mn>3</mml:mn><mml:mo>,</mml:mo><mml:mn>4</mml:mn><mml:mo stretchy="false">}</mml:mo></mml:mrow></mml:math></inline-formula> and <inline-formula><mml:math id="inf183"><mml:mrow><mml:mi>L</mml:mi><mml:mo>=</mml:mo><mml:mn>12</mml:mn></mml:mrow></mml:math></inline-formula>). (<bold>B</bold>) Fraction of realizable field arrangements (summed over <inline-formula><mml:math id="inf184"><mml:mi>K</mml:mi></mml:math></inline-formula>) as a function of range for grid cells (black); for random inputs, range refers to number of input patterns (solid cyan: random with matching input dimension; open/dashed cyan: random with input dimension equal to rank of the grid-like input matrix; dark teal: same as open cyan, but with weights constrained to be non-negative, as for grid-like inputs). With the non-negative weight constraint for random inputs, different specific input configurations produce quite different results, introducing considerable variability in separating capacity (unlike the unconstrained random input case or the grid code case for which results are exact rather than statistical). (<bold>C</bold>) The grid code is generated by iterated application of a phase-shift operator as a function of one-step updates in position over a contiguous 1D range. This feature of the code leads to a separating capacity that achieves its optimal value, given by the rank of the input matrix. (<bold>D</bold>) Separating capacity as a function of the sum of module periods for real-valued periods (randomly drawn from <inline-formula><mml:math id="inf185"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mo>∈</mml:mo><mml:mo stretchy="false">[</mml:mo><mml:mn>3</mml:mn><mml:mo>,</mml:mo><mml:mn>20</mml:mn><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:mstyle></mml:math></inline-formula> with <inline-formula><mml:math id="inf186"><mml:mrow><mml:mi>M</mml:mi><mml:mo>∈</mml:mo><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:mn>2</mml:mn><mml:mo>,</mml:mo><mml:mn>3</mml:mn><mml:mo>,</mml:mo><mml:mn>4</mml:mn><mml:mo>,</mml:mo><mml:mn>5</mml:mn><mml:mo>,</mml:mo><mml:mn>6</mml:mn><mml:mo stretchy="false">}</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula>, 100 realizations), showing the quality of the integer approximation at different resolutions. Integer approximations to the real-value periods at successively finer resolutions quickly converge, with results from <inline-formula><mml:math id="inf187"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mi>q</mml:mi><mml:mo>=</mml:mo><mml:mn>2</mml:mn></mml:mrow></mml:mstyle></mml:math></inline-formula> and <inline-formula><mml:math id="inf188"><mml:mrow><mml:mi>q</mml:mi><mml:mo>=</mml:mo><mml:mn>4</mml:mn></mml:mrow></mml:math></inline-formula> nearly indistinguishable from each other. Inset: ratio of separating capacity to sum of periods (<inline-formula><mml:math id="inf189"><mml:mrow><mml:msubsup><mml:mi>R</mml:mi><mml:mi>re</mml:mi><mml:mi>q</mml:mi></mml:msubsup><mml:mo>/</mml:mo><mml:mi mathvariant="normal">Σ</mml:mi></mml:mrow></mml:math></inline-formula> as a function of resolution <inline-formula><mml:math id="inf190"><mml:mi>q</mml:mi></mml:math></inline-formula> quickly approaches 1 from below as <inline-formula><mml:math id="inf191"><mml:mi>q</mml:mi></mml:math></inline-formula> increases). (<bold>E, F</bold>) Capacity results generalize to multidimensional spatial settings: (<bold>E</bold>) in 2D, grid-cell-activity patterns lie on a hexagonal lattice (all circles of one color mark the activity locations of one grid cell). For grid periods <inline-formula><mml:math id="inf192"><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:mn>2</mml:mn><mml:mo>,</mml:mo><mml:mn>3</mml:mn><mml:mo stretchy="false">}</mml:mo></mml:mrow></mml:math></inline-formula>, this code utilizes 4 two-periodic cells and 9 three-periodic cells, respectively. (<bold>F</bold>) Full range of the 2D grid-like code from (<bold>E</bold>). The set of contiguous locations over which any place field arrangement is realizable (the 2D separating capacity) is shown in gray.</p></caption><graphic mime-subtype="tiff" mimetype="image" xlink:href="elife-62702-fig6-v3.tif"/></fig></sec><sec id="s3-7"><title>Separating capacity equals rank of grid-like inputs</title><p>For inputs in general position, the separating capacity equals the rank of the input matrix (plus 1 when the threshold is allowed to be nonzero), and the rank equals the dimension (number of cells) of the input patterns – the input matrix is full rank. When inputs are in general position, all input subsets of size equaling the separating capacity have the same rank. But when input patterns are not in general position, some subsets can have smaller ranks than others even when they have the same size. Thus, when input patterns are not in general position the separating capacity is only upper bounded by the rank of the full input matrix. In turn, the rank is only upper bounded by the number of cells (the input matrix need not be full rank).</p><p>For the grid-like code, all codewords can be generated by the iterated application of a linear operator <inline-formula><mml:math id="inf193"><mml:mi>J</mml:mi></mml:math></inline-formula> to a single codeword: a simultaneous one-unit phase shift by a cyclic permutation in each grid module is such an operator <inline-formula><mml:math id="inf194"><mml:mi>J</mml:mi></mml:math></inline-formula>, which can be represented by a block-form permutation matrix. The sequence <inline-formula><mml:math id="inf195"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mi mathvariant="bold-italic">x</mml:mi><mml:mo>,</mml:mo><mml:mi>J</mml:mi><mml:mi mathvariant="bold-italic">x</mml:mi><mml:mo>,</mml:mo><mml:msup><mml:mi>J</mml:mi><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msup><mml:mi mathvariant="bold-italic">x</mml:mi><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:msup><mml:mi>J</mml:mi><mml:mrow><mml:mi>m</mml:mi></mml:mrow></mml:msup><mml:mi mathvariant="bold-italic">x</mml:mi></mml:mrow></mml:mstyle></mml:math></inline-formula> of patterns generated by applying <inline-formula><mml:math id="inf196"><mml:mi>J</mml:mi></mml:math></inline-formula> to a grid-like codeword <inline-formula><mml:math id="inf197"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mi mathvariant="bold-italic">x</mml:mi></mml:mrow></mml:mstyle></mml:math></inline-formula> with the same module structure represents <inline-formula><mml:math id="inf198"><mml:mi>m</mml:mi></mml:math></inline-formula> contiguous locations (<xref ref-type="fig" rid="fig6">Figure 6C</xref>).</p><p>The separating capacity for inputs generated by iterated application of the same linear operation saturates its bound by equaling the rank of the input pattern matrix. Since a code <inline-formula><mml:math id="inf199"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mi mathvariant="bold-italic">x</mml:mi><mml:mo>,</mml:mo><mml:mi>J</mml:mi><mml:mi mathvariant="bold-italic">x</mml:mi><mml:mo>,</mml:mo><mml:msup><mml:mi>J</mml:mi><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msup><mml:mi mathvariant="bold-italic">x</mml:mi><mml:mo>,</mml:mo><mml:msup><mml:mi>J</mml:mi><mml:mrow><mml:mn>3</mml:mn></mml:mrow></mml:msup><mml:mi mathvariant="bold-italic">x</mml:mi><mml:mo>,</mml:mo><mml:mo>…</mml:mo></mml:mrow></mml:mstyle></mml:math></inline-formula>, generated by some linear operator <inline-formula><mml:math id="inf200"><mml:mi>J</mml:mi></mml:math></inline-formula> with starting codeword <inline-formula><mml:math id="inf201"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mi mathvariant="bold-italic">x</mml:mi></mml:mrow></mml:mstyle></mml:math></inline-formula> is translation invariant, the number of dimensions spanned by these patterns strictly increases until some value <inline-formula><mml:math id="inf202"><mml:mi>l</mml:mi></mml:math></inline-formula>, after which the dimension remains constant. By definition, <inline-formula><mml:math id="inf203"><mml:mi>l</mml:mi></mml:math></inline-formula> is therefore the rank <inline-formula><mml:math id="inf204"><mml:mi>R</mml:mi></mml:math></inline-formula> of the input pattern matrix. It follows that any contiguous set of <inline-formula><mml:math id="inf205"><mml:mrow><mml:mi>l</mml:mi><mml:mo>=</mml:mo><mml:mi>R</mml:mi></mml:mrow></mml:math></inline-formula> patterns is linearly independent, and thus in general position, which means that the separating capacity of such a pattern matrix is <inline-formula><mml:math id="inf206"><mml:mi>R</mml:mi></mml:math></inline-formula>.</p><p>For place cells, it follows that whenever <inline-formula><mml:math id="inf207"><mml:mrow><mml:mi>l</mml:mi><mml:mo>≤</mml:mo><mml:mi>R</mml:mi></mml:mrow></mml:math></inline-formula>, with <inline-formula><mml:math id="inf208"><mml:mi>R</mml:mi></mml:math></inline-formula> the rank of the grid-like input matrix, all field arrangements are realizable, while for any <inline-formula><mml:math id="inf209"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mi>l</mml:mi><mml:mo>§gt;</mml:mo><mml:mi>R</mml:mi></mml:mrow></mml:mstyle></mml:math></inline-formula>, there will be nonrealizable field arrangements (Supporting Information Appendix). Therefore, the contiguous-separating capacity for place cells is <inline-formula><mml:math id="inf210"><mml:mrow><mml:msup><mml:mi>l</mml:mi><mml:mo>*</mml:mo></mml:msup><mml:mo>=</mml:mo><mml:mi>R</mml:mi></mml:mrow></mml:math></inline-formula>. This is an interesting finding: the separating capacity of a place cell fed with structured grid-like inputs approaches the same capacity as if fed with general-position inputs of the same rank. Next, we compute the rank <inline-formula><mml:math id="inf211"><mml:mi>R</mml:mi></mml:math></inline-formula> for grid-like inputs under increasingly general assumptions.</p></sec><sec id="s3-8"><title>Grid input rank converges to sum of grid module periods</title><sec id="s3-8-1"><title>Integer periods</title><p>For integer-valued periods <inline-formula><mml:math id="inf212"><mml:msub><mml:mi>λ</mml:mi><mml:mi>m</mml:mi></mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mn>1</mml:mn><mml:mo>≤</mml:mo><mml:mi>m</mml:mi><mml:mo>≤</mml:mo><mml:mi>M</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula>, the rank of the matrix consisting of the multi-periodic grid-like inputs can be determined through the inclusion-exclusion principle (see Section B.4):<disp-formula id="equ5"><label>(5)</label><mml:math id="m5"><mml:mrow><mml:mrow><mml:mrow><mml:msub><mml:mi>R</mml:mi><mml:mi>int</mml:mi></mml:msub><mml:mo>⁢</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:mi mathvariant="normal">⋯</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mi>M</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow><mml:mo>=</mml:mo><mml:mrow><mml:mrow><mml:mstyle displaystyle="true" scriptlevel="0"><mml:munderover><mml:mo largeop="true" movablelimits="false" symmetric="true">∑</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>M</mml:mi></mml:munderover></mml:mstyle><mml:msub><mml:mi>λ</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mrow><mml:mo>+</mml:mo><mml:mrow><mml:mstyle displaystyle="true" scriptlevel="0"><mml:munderover><mml:mo largeop="true" movablelimits="false" symmetric="true">∑</mml:mo><mml:mrow><mml:mi>k</mml:mi><mml:mo>=</mml:mo><mml:mn>2</mml:mn></mml:mrow><mml:mi>M</mml:mi></mml:munderover></mml:mstyle><mml:mrow><mml:msup><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mrow><mml:mi>k</mml:mi><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msup><mml:mo>⁢</mml:mo><mml:mrow><mml:mstyle displaystyle="true" scriptlevel="0"><mml:munderover><mml:mo largeop="true" movablelimits="false" symmetric="true">∑</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:mfrac linethickness="0pt"><mml:mi>M</mml:mi><mml:mi>k</mml:mi></mml:mfrac><mml:mo>)</mml:mo></mml:mrow></mml:munderover></mml:mstyle><mml:mrow><mml:mtext>GCD</mml:mtext><mml:mo>⁢</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msubsup><mml:mi>S</mml:mi><mml:mi>k</mml:mi><mml:mi>i</mml:mi></mml:msubsup><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:mrow></mml:mrow></mml:mrow></mml:mrow><mml:mo>,</mml:mo></mml:mrow></mml:math></disp-formula></p><p>where <inline-formula><mml:math id="inf213"><mml:msubsup><mml:mi>S</mml:mi><mml:mi>k</mml:mi><mml:mi>i</mml:mi></mml:msubsup></mml:math></inline-formula> is the ith of the k-element subsets of <inline-formula><mml:math id="inf214"><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:mi mathvariant="normal">…</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mi>M</mml:mi></mml:msub><mml:mo stretchy="false">}</mml:mo></mml:mrow></mml:math></inline-formula>. To gain some intuition for this expression, note that if the periods were pairwise coprime, all the GCDs would be 1 and this formula would quite simply produce <inline-formula><mml:math id="inf215"><mml:mrow><mml:mrow><mml:msub><mml:mi>R</mml:mi><mml:mi>copr</mml:mi></mml:msub><mml:mo>⁢</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:mi mathvariant="normal">…</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mi>M</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow><mml:mo>=</mml:mo><mml:mrow><mml:mrow><mml:mi mathvariant="normal">Σ</mml:mi><mml:mo>-</mml:mo><mml:mi>M</mml:mi></mml:mrow><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:mrow></mml:math></inline-formula>, where <inline-formula><mml:math id="inf216"><mml:mi mathvariant="normal">Σ</mml:mi></mml:math></inline-formula> is defined as the sum of the module periods. If the periods are not pairwise coprime, the rank is reduced based on the set of common factors, as in (5), which satisfies the following inequality: <inline-formula><mml:math id="inf217"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mi mathvariant="normal">Σ</mml:mi><mml:mo>−</mml:mo><mml:munder><mml:mo>∑</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>§lt;</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:munder><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mtext>GCD</mml:mtext></mml:mstyle><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mo>≤</mml:mo><mml:msub><mml:mi>R</mml:mi><mml:mrow><mml:mrow><mml:mi mathvariant="normal">i</mml:mi><mml:mi mathvariant="normal">n</mml:mi><mml:mi mathvariant="normal">t</mml:mi></mml:mrow></mml:mrow></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:mo>⋯</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mi>M</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mo>≤</mml:mo><mml:mi mathvariant="normal">Σ</mml:mi></mml:mrow></mml:mstyle></mml:math></inline-formula>. When the periods are large (<inline-formula><mml:math id="inf218"><mml:mrow><mml:mi>λ</mml:mi><mml:mo>≫</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:math></inline-formula>), the rank approaches <inline-formula><mml:math id="inf219"><mml:mi mathvariant="normal">Σ</mml:mi></mml:math></inline-formula>. Large integers (<inline-formula><mml:math id="inf220"><mml:mrow><mml:mi>λ</mml:mi><mml:mo>≫</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:math></inline-formula>) evenly spaced or uniformly randomly distributed over some range tend not to have large common factors (<xref ref-type="bibr" rid="bib16">Cesaro, 1881</xref>). As a result, even for non-coprime periods, the rank scales like and approaches <inline-formula><mml:math id="inf221"><mml:mi mathvariant="normal">Σ</mml:mi></mml:math></inline-formula> (see below for more elaboration).</p></sec><sec id="s3-8-2"><title>Real-valued periods</title><p>Actual grid periods are real- rather than integer-valued, but with some finite resolution. To obtain an expression for this case, consider the sequence of ranks <inline-formula><mml:math id="inf222"><mml:msubsup><mml:mi>R</mml:mi><mml:mi>re</mml:mi><mml:mi>q</mml:mi></mml:msubsup></mml:math></inline-formula> defined as<disp-formula id="equ6"><label>(6)</label><mml:math id="m6"><mml:mrow><mml:msubsup><mml:mi>R</mml:mi><mml:mrow><mml:mrow><mml:mi mathvariant="normal">r</mml:mi><mml:mi mathvariant="normal">e</mml:mi></mml:mrow></mml:mrow><mml:mrow><mml:mi>q</mml:mi></mml:mrow></mml:msubsup><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:mo>⋯</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mi>M</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:msub><mml:mi>R</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>n</mml:mi><mml:mi>t</mml:mi></mml:mrow></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mo fence="false" stretchy="false">⌊</mml:mo><mml:mrow><mml:mi>q</mml:mi><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo fence="false" stretchy="false">⌋</mml:mo></mml:mrow><mml:mo>,</mml:mo><mml:mo>⋯</mml:mo><mml:mo>,</mml:mo><mml:mo fence="false" stretchy="false">⌊</mml:mo><mml:mrow><mml:mi>q</mml:mi><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mi>M</mml:mi></mml:mrow></mml:msub><mml:mo fence="false" stretchy="false">⌋</mml:mo></mml:mrow></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>,</mml:mo></mml:mrow></mml:math></disp-formula></p><p>where <inline-formula><mml:math id="inf223"><mml:mrow><mml:mo stretchy="false">⌊</mml:mo><mml:mo>⋅</mml:mo><mml:mo stretchy="false">⌋</mml:mo></mml:mrow></mml:math></inline-formula> denotes the floor operation, <inline-formula><mml:math id="inf224"><mml:mi>q</mml:mi></mml:math></inline-formula> is an effective resolution parameter that takes integer values (the larger <inline-formula><mml:math id="inf225"><mml:mi>q</mml:mi></mml:math></inline-formula>, the finer the resolution of the approximation to a real-valued period), and the periods <inline-formula><mml:math id="inf226"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mn>0</mml:mn><mml:mo>§lt;</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>§lt;</mml:mo><mml:mo>…</mml:mo><mml:mo>§lt;</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mi>M</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mstyle></mml:math></inline-formula> are real numbers. The rank of the grid-like input matrix with real-valued periods is given by <inline-formula><mml:math id="inf227"><mml:mrow><mml:msub><mml:mo>lim</mml:mo><mml:mrow><mml:mi>q</mml:mi><mml:mo>→</mml:mo><mml:mi mathvariant="normal">∞</mml:mi></mml:mrow></mml:msub><mml:mo>⁡</mml:mo><mml:mrow><mml:mrow><mml:msubsup><mml:mi>R</mml:mi><mml:mi>re</mml:mi><mml:mi>q</mml:mi></mml:msubsup><mml:mo>⁢</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:mi mathvariant="normal">⋯</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mi>M</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow><mml:mo>/</mml:mo><mml:mi>q</mml:mi></mml:mrow></mml:mrow></mml:math></inline-formula>, if this limit exists. A finer resolution (higher <inline-formula><mml:math id="inf228"><mml:mi>q</mml:mi></mml:math></inline-formula>) corresponds to representing phases with higher resolution within each module, and thus intuitively to scaling the number of grid cells in each module by <inline-formula><mml:math id="inf229"><mml:mi>q</mml:mi></mml:math></inline-formula>.</p><p>Suppose that the periods are drawn uniformly from an interval of the reals, which we take without loss of generality to be <inline-formula><mml:math id="inf230"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mn>0</mml:mn><mml:mo>,</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula>. Then the values <inline-formula><mml:math id="inf231"><mml:mrow><mml:mrow><mml:mo stretchy="false">⌊</mml:mo><mml:mrow><mml:mi>q</mml:mi><mml:mo>⁢</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:mrow><mml:mo stretchy="false">⌋</mml:mo></mml:mrow><mml:mo>,</mml:mo><mml:mi mathvariant="normal">⋯</mml:mi><mml:mo>,</mml:mo><mml:mrow><mml:mo stretchy="false">⌊</mml:mo><mml:mrow><mml:mi>q</mml:mi><mml:mo>⁢</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mi>M</mml:mi></mml:msub></mml:mrow><mml:mo stretchy="false">⌋</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula> are integers in <inline-formula><mml:math id="inf232"><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mi mathvariant="normal">…</mml:mi><mml:mo>,</mml:mo><mml:mi>q</mml:mi><mml:mo stretchy="false">}</mml:mo></mml:mrow></mml:math></inline-formula> and as above we have that <inline-formula><mml:math id="inf233"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mn>0</mml:mn><mml:mo>≤</mml:mo><mml:mi>q</mml:mi><mml:mi mathvariant="normal">Σ</mml:mi><mml:mo>−</mml:mo><mml:msubsup><mml:mi>R</mml:mi><mml:mrow><mml:mrow><mml:mi mathvariant="normal">r</mml:mi><mml:mi mathvariant="normal">e</mml:mi></mml:mrow></mml:mrow><mml:mrow><mml:mi>q</mml:mi></mml:mrow></mml:msubsup><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:mo>⋯</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mi>M</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mo>≤</mml:mo><mml:munder><mml:mo>∑</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>§lt;</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:munder><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mtext>GCD</mml:mtext></mml:mstyle><mml:mo stretchy="false">(</mml:mo><mml:mo fence="false" stretchy="false">⌊</mml:mo><mml:mrow><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mi>q</mml:mi><mml:mo fence="false" stretchy="false">⌋</mml:mo></mml:mrow><mml:mo>,</mml:mo><mml:mo fence="false" stretchy="false">⌊</mml:mo><mml:mrow><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mi>q</mml:mi><mml:mo fence="false" stretchy="false">⌋</mml:mo></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mstyle></mml:math></inline-formula>. In the infinite resolution limit (<inline-formula><mml:math id="inf234"><mml:mrow><mml:mi>q</mml:mi><mml:mo>→</mml:mo><mml:mi mathvariant="normal">∞</mml:mi></mml:mrow></mml:math></inline-formula>), the probability <inline-formula><mml:math id="inf235"><mml:mrow><mml:mrow><mml:mtext>GCD</mml:mtext><mml:mo>⁢</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mo stretchy="false">⌊</mml:mo><mml:mrow><mml:msub><mml:mi>λ</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>⁢</mml:mo><mml:mi>q</mml:mi></mml:mrow><mml:mo stretchy="false">⌋</mml:mo></mml:mrow><mml:mo>,</mml:mo><mml:mrow><mml:mo stretchy="false">⌊</mml:mo><mml:mrow><mml:msub><mml:mi>λ</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>⁢</mml:mo><mml:mi>q</mml:mi></mml:mrow><mml:mo stretchy="false">⌋</mml:mo></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow><mml:mo>=</mml:mo><mml:mi>g</mml:mi></mml:mrow></mml:math></inline-formula> scales asymptotically as <inline-formula><mml:math id="inf236"><mml:mrow><mml:mn>1</mml:mn><mml:mo>/</mml:mo><mml:msup><mml:mi>g</mml:mi><mml:mn>2</mml:mn></mml:msup></mml:mrow></mml:math></inline-formula>, independent of <inline-formula><mml:math id="inf237"><mml:mi>q</mml:mi></mml:math></inline-formula> (<xref ref-type="bibr" rid="bib16">Cesaro, 1881</xref>), which means that large randomly chosen large integers tend not to have large common factors. This implies that with probability 1, the limit <inline-formula><mml:math id="inf238"><mml:mrow><mml:msub><mml:mo>lim</mml:mo><mml:mrow><mml:mi>q</mml:mi><mml:mo>→</mml:mo><mml:mi mathvariant="normal">∞</mml:mi></mml:mrow></mml:msub><mml:mo>⁡</mml:mo><mml:mrow><mml:mrow><mml:msubsup><mml:mi>R</mml:mi><mml:mi>re</mml:mi><mml:mi>q</mml:mi></mml:msubsup><mml:mo>⁢</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:mi mathvariant="normal">⋯</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mi>M</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow><mml:mo>/</mml:mo><mml:mi>q</mml:mi></mml:mrow></mml:mrow></mml:math></inline-formula> is well-defined and equals <inline-formula><mml:math id="inf239"><mml:mi mathvariant="normal">Σ</mml:mi></mml:math></inline-formula>, the sum of the input grid module periods.</p><p>When assessed numerically at different resolutions (<inline-formula><mml:math id="inf240"><mml:mi>q</mml:mi></mml:math></inline-formula>), the approach of the finite-resolution rank to the real-valued grid period rank is quite rapid (<xref ref-type="fig" rid="fig6">Figure 6D</xref>). Thus, the separating capacity does not depend sensitively on the precision of the grid periods. It is also invariant to the resolution with which phases are represented within each module.</p><p>In summary, the place-cell-separating capacity with real-valued grid periods and high-resolution phase representations within each module equals the rank of the grid-like input matrix, which itself approaches <inline-formula><mml:math id="inf241"><mml:mi mathvariant="normal">Σ</mml:mi></mml:math></inline-formula>, the sum of the module periods. Thus, a place cell can realize any arrangement of fields over a spatial range given by the sum of module periods of its grid inputs.</p><p>It is interesting that the contiguous-separating capacity of a place cell fed with grid-like inputs not in general position approaches the same capacity as if fed with general-position inputs of the same rank. On the other hand, the contiguous-separating capacity is very small compared to the total range over which the input grid patterns are unique: since each local region of hippocampus receives input from 2 to 3 modules (<xref ref-type="bibr" rid="bib89">Witter and Groenewegen, 1984</xref>; <xref ref-type="bibr" rid="bib4">Amaral and Witter, 1989</xref>; <xref ref-type="bibr" rid="bib90">Witter and Amaral, 1991</xref>; <xref ref-type="bibr" rid="bib91">Witter et al., 2000</xref>; <xref ref-type="bibr" rid="bib38">Honda et al., 2012</xref>), the range over which any field arrangement is realizable is at most 2–3 times the typical grid period. By contrast, the total range <inline-formula><mml:math id="inf242"><mml:mi>L</mml:mi></mml:math></inline-formula> of locations over which the grid inputs provide unique codes scales as the product of the periods. The result implies that once field arrangements are freely chosen in a small region, they impose strong constraints on a much larger overall region and across environments. We explore this implication in more detail below.</p></sec></sec><sec id="s3-9"><title>Generalization to higher dimensions</title><p>We have already argued that our counting arguments hold for realistic tuning curve shapes with graded activity profiles. This follows from the fact that convolution of the grid-like codes with appropriate smoothing kernels does not change the general geometric arrangement of codewords relative to each other as these convolution operations preserve within-module permutation symmetries and across-module independence in the code. We have also shown that the contiguous-separating capacity results apply to real-valued grid periods with dense phase encodings within each module.</p><p>Here, we describe the generalization to different spatial dimensions. Consider a <inline-formula><mml:math id="inf243"><mml:mi>d</mml:mi></mml:math></inline-formula>-dimensional grid-like code consisting of <inline-formula><mml:math id="inf244"><mml:msup><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mi>m</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mi>d</mml:mi></mml:msup></mml:math></inline-formula> cells in the mth module to produce a one-hot phase code for <inline-formula><mml:math id="inf245"><mml:msub><mml:mi>λ</mml:mi><mml:mi>m</mml:mi></mml:msub></mml:math></inline-formula> (discrete) positions along each dimension (<xref ref-type="fig" rid="fig6">Figure 6E</xref>). Since the counting results rely only on the existence of a modular-one-hot code and not any mapping from real spaces to coding states, this code across multiple modules <inline-formula><mml:math id="inf246"><mml:mrow><mml:mi>m</mml:mi><mml:mo>=</mml:mo><mml:mrow><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mi mathvariant="normal">…</mml:mi><mml:mo>,</mml:mo><mml:mi>M</mml:mi></mml:mrow></mml:mrow></mml:math></inline-formula> is equivalent to a modular-one-hot coding for <inline-formula><mml:math id="inf247"><mml:mrow><mml:msubsup><mml:mo largeop="true" symmetric="true">∏</mml:mo><mml:mrow><mml:mi>m</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>M</mml:mi></mml:msubsup><mml:msup><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mi>m</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mi>d</mml:mi></mml:msup></mml:mrow></mml:math></inline-formula> states, with modules of size <inline-formula><mml:math id="inf248"><mml:msup><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mi>m</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mi>d</mml:mi></mml:msup></mml:math></inline-formula> each. All the counting results from before therefore hold, with the simple substitution <inline-formula><mml:math id="inf249"><mml:mrow><mml:msub><mml:mi>λ</mml:mi><mml:mi>m</mml:mi></mml:msub><mml:mo>→</mml:mo><mml:msup><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mi>m</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mi>d</mml:mi></mml:msup></mml:mrow></mml:math></inline-formula> in the various formulae.</p><p>The contiguous-separating capacity in <inline-formula><mml:math id="inf250"><mml:mi>d</mml:mi></mml:math></inline-formula>-dimensions is defined as the maximum volume over which all field arrangements are realizable. Like the 1D separating capacity results, this volume depends upon the mapping of physical space to grid-like codes. We are able to show that for grid modules with periods <inline-formula><mml:math id="inf251"><mml:mrow><mml:msub><mml:mi>λ</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:mi mathvariant="normal">…</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mi>M</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> the generalized separating capacity is <inline-formula><mml:math id="inf252"><mml:mrow><mml:msubsup><mml:mi>l</mml:mi><mml:mi>d</mml:mi><mml:mo>⋆</mml:mo></mml:msubsup><mml:mo>=</mml:mo><mml:msub><mml:mi mathvariant="normal">Σ</mml:mi><mml:mi>d</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:msubsup><mml:mo largeop="true" symmetric="true">∑</mml:mo><mml:mrow><mml:mi>m</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>M</mml:mi></mml:msubsup><mml:msubsup><mml:mi>λ</mml:mi><mml:mi>m</mml:mi><mml:mi>d</mml:mi></mml:msubsup></mml:mrow></mml:mrow></mml:math></inline-formula> (see Section B.4; <xref ref-type="fig" rid="fig6">Figure 6F</xref>). This result follows from essentially the same reasoning as for 1D environments, but with the use of <inline-formula><mml:math id="inf253"><mml:mi>d</mml:mi></mml:math></inline-formula>-dimensional phase-shift operators.</p></sec><sec id="s3-10"><title>Robustness of field arrangements to noise and nongrid inputs</title><p>An important quality of field arrangements that is neglected when merely counting the number of realizable arrangements or determining the separating capacity is robustness: these computations consider all realizable field arrangements, but field arrangements are practically useful only if they are robust so that small amounts of perturbation or noise in the inputs or weights do not render them unrealizable. Above, we showed that grid-like codes enable many dichotomies despite being structurally constrained, but that random analog-valued codes as well as more hierarchical codes permit even more dichotomies. Here, we show that the dichotomies realized by grid codes are substantially more robust to noise and thus more stable.</p><p>The robustness of a realizable dichotomy in a perceptron is given by its margin: for a given linear decision boundary, the margin is the smallest datapoint-boundary distance for each class, summed for the two classes. The maximum margin is the largest achievable margin for that dataset. The larger the maximum margin, the more robust the classification. We thus compare maximum margins (herein simply referred to as margins) across place field arrangements, when the inputs are grid-like or not.</p><p>Perceptron margins can be computed using quadratic programming on linear support vector machines (<xref ref-type="bibr" rid="bib64">Platt, 1998</xref>). We numerically solve this problem for three types of input codes (permitting a nonzero threshold and imposing no weight constraints): the grid-like code <inline-formula><mml:math id="inf254"><mml:msub><mml:mi>X</mml:mi><mml:mi mathvariant="normal">g</mml:mi></mml:msub></mml:math></inline-formula>; the shuffled grid-like code <inline-formula><mml:math id="inf255"><mml:msub><mml:mi>X</mml:mi><mml:mi>gs</mml:mi></mml:msub></mml:math></inline-formula> – a row- and column-shuffled version of the grid-like code that breaks its modular structure; and the random code <inline-formula><mml:math id="inf256"><mml:msub><mml:mi>X</mml:mi><mml:mi mathvariant="normal">r</mml:mi></mml:msub></mml:math></inline-formula> of uniformly distributed random inputs (<xref ref-type="fig" rid="fig7">Figure 7</xref>). To make distance comparisons meaningful across codes, <inline-formula><mml:math id="inf257"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> all patterns (columns) involve the same number of neurons (dimension), <inline-formula><mml:math id="inf258"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mn>2</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> have the same total activity level (unity <italic>L</italic><sub>1</sub> norm), and <inline-formula><mml:math id="inf259"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mn>3</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> the number of input patterns is the same across codes, and chosen to equal <inline-formula><mml:math id="inf260"><mml:mi>L</mml:mi></mml:math></inline-formula>, the full range of the corresponding grid-like code. To compute margins, we consider only the realizable dichotomies on these patterns.</p><fig id="fig7" position="float"><label>Figure 7.</label><caption><title>Robustness of place field arrangements to noise and nongrid inputs.</title><p>In (<bold>A–C</bold>), grid periods are <inline-formula><mml:math id="inf261"><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:mn>31</mml:mn><mml:mo>,</mml:mo><mml:mn>43</mml:mn><mml:mo stretchy="false">}</mml:mo></mml:mrow></mml:math></inline-formula>; the number of input patterns is set to <inline-formula><mml:math id="inf262"><mml:mrow><mml:mn>1333</mml:mn><mml:mo>=</mml:mo><mml:mrow><mml:mtext>LCM</mml:mtext><mml:mo>⁢</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mn>31</mml:mn><mml:mo>,</mml:mo><mml:mn>43</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula> for all input codes. Input patterns are normalized to have unity <italic>L</italic><sub>1</sub> norm in all cases. Maximum margins are determined by using SVC in scikit-learn (<xref ref-type="bibr" rid="bib62">Pedregosa et al., 2011</xref>) (with thresholds and no weight constraints). (<bold>A</bold>) Black bars: the maximum margins of all realizable arrangements with grid-like inputs (bars have high multiplicity: across the very large number of realizable field arrangements, the set of distinct maximum margins is small and discrete because of the regular geometric structure of the grid-like code). Pink: margins for shuffled grid inputs that break the code’s modularity (shuffling neurons across modules for each pattern; 10 shuffles per <inline-formula><mml:math id="inf263"><mml:mi>K</mml:mi></mml:math></inline-formula> and sampling 1000 realizable field arrangements per shuffle). Blue: margins for random inputs in general position (inputs sampled i.i.d. uniformly from <inline-formula><mml:math id="inf264"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:mn>0</mml:mn><mml:mo>,</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:mstyle></mml:math></inline-formula>; 10 realizations of a random matrix per <inline-formula><mml:math id="inf265"><mml:mi>K</mml:mi></mml:math></inline-formula>, 1000 realizable field arrangements sampled per realization). (<bold>B</bold>) Effect of noise on margins. We added dense noise inputs (100 non-negative i.i.d. random inputs at each location) to the place cell, in addition to the 74 grid-like inputs. (The expected value of each random input was 20% of the population mean of the grid inputs; thus, the summed random input was on average <inline-formula><mml:math id="inf266"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mrow><mml:mn>0.2</mml:mn><mml:mo>×</mml:mo><mml:mn>100</mml:mn></mml:mrow><mml:mo>/</mml:mo><mml:mn>74</mml:mn></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> the size of the summed grid input.) Black: noise-free margins as in (<bold>A</bold>). Empty green violins: margins of existing field arrangements modestly shrink in size. Solid green violins: margins of some newly created field arrangements: these are small and thus unstable. (<bold>C</bold>) Effect of sparse spatial inputs (plots as in <bold>C</bold>). (We added 100 sparse <inline-formula><mml:math id="inf267"><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:mn>0</mml:mn><mml:mo>,</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">}</mml:mo></mml:mrow></mml:math></inline-formula> inputs per location; each sparse input had <inline-formula><mml:math id="inf268"><mml:mrow><mml:mrow><mml:mrow><mml:mn>0.2</mml:mn><mml:mo>×</mml:mo><mml:mn>2</mml:mn></mml:mrow><mml:mo>⁢</mml:mo><mml:mi>L</mml:mi></mml:mrow><mml:mo>/</mml:mo><mml:mn>74</mml:mn></mml:mrow></mml:math></inline-formula> fields placed randomly across the full range <inline-formula><mml:math id="inf269"><mml:mi>L</mml:mi></mml:math></inline-formula>, so that the summed sparse input was on average <inline-formula><mml:math id="inf270"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mrow><mml:mn>0.2</mml:mn><mml:mo>×</mml:mo><mml:mn>100</mml:mn></mml:mrow><mml:mo>/</mml:mo><mml:mn>74</mml:mn></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> the size of the summed grid input. The combined grid and nongrid input at each location was normalized to 1.)</p></caption><graphic mime-subtype="tiff" mimetype="image" xlink:href="elife-62702-fig7-v3.tif"/></fig><p>The margins of <italic>all</italic> realizable place field arrangements with grid-like inputs are shown in <xref ref-type="fig" rid="fig7">Figure 7A</xref> (black); the margin values for all arrangements are discretized because of the geometric arrangements of the inputs, and each black bar has a very high multiplicity. The grid-like code produces much larger-margin field arrangements than shuffled versions of the same code and random codes (<xref ref-type="fig" rid="fig7">Figure 7A</xref>, pink and blue). The higher margins of the grid-like compared to the shuffled grid-like code show that it is the structured geometry and modular nature of the code that produce well-separated patterns in the input space (<xref ref-type="fig" rid="fig4">Figure 4B</xref>) and create wide margins and field stability. In other words, place field arrangements formed by grid inputs, though smaller in number than arrangements with differently coded inputs, should be more robust and stable against potential noise in neural activations or weights.</p><p>Next, we directly consider how different kinds of nongrid inputs, driving place cells in conjunction with grid-like inputs, affect our results on place field robustness. We examine two distinct types of added nongrid input: (1) spatially dense noise that is meant to model sources of uncontrolled variation in inputs to the cell and (2) spatially sparse and reliable cues meant to model spatial information from external landmarks.</p><p>After the addition of dense noise, previously realizable grid-driven place field arrangements remain realizable and their margins, though somewhat lowered, remain relatively large (<xref ref-type="fig" rid="fig7">Figure 7B</xref>, empty green violins). In other words, grid-driven place field arrangements are robust to small, dense, and spatially unreliable inputs, as expected given their large margins. Note that because the addition of dense i.i.d. noise to grid-like input patterns pushes them toward general position, and general-position inputs enable more realizable arrangements, the noise-added versions of grid-like inputs also give rise to some newly realizable field arrangements (<xref ref-type="fig" rid="fig7">Figure 7B</xref>, full green violins). However, as with arrangements driven purely by random inputs, these new arrangements have small margins and are relatively not robust. Moreover, since by definition noise inputs are assumed to be spatially unreliable, the newly realizable arrangements will not persist across trials.</p><p>Next, the addition of sparse spatial inputs (similar to the one-hot codes of <xref ref-type="table" rid="table1">Table 1</xref>, though the sparse inputs here are nearly but not strictly orthogonal) leaves previous field arrangements largely unchanged and their margins substantially unmodified (<xref ref-type="fig" rid="fig7">Figure 7C</xref>, empty green violins). In addition, a few more field arrangements become realizable and these new arrangements also have large margins (<xref ref-type="fig" rid="fig7">Figure 7C</xref>, full green violins). Thus, sufficiently sparse spatial cues can drive additional stable place fields that augment the grid-driven scaffold without substantially modifying its structure. Plasticity in weights from these sparse cue inputs can drive the learning of new fields without destabilizing existing field arrangements.</p><p>In sum, grid-driven place arrangements are highly robust to noise. Combining grid-cell drive with cue-driven inputs can produce robust maps that combine internal scaffolds with external cues.</p></sec><sec id="s3-11"><title>High volatility of field arrangements with grid input plasticity</title><p>Our results on the fraction of realizable place field arrangements and on place-cell-separating capacity with grid-like inputs imply that place cells have highly restricted flexibility in laying down place fields (without direct drive from external spatially informative cues) over distances greater than <inline-formula><mml:math id="inf271"><mml:mi mathvariant="normal">Σ</mml:mi></mml:math></inline-formula>, the sum of the input grid module periods. Selecting an arrangement of fields over this range then constrains the choices that can be made over all remaining space in the same environment and across environments. Conversely, changing the field arrangement in any space by altering the grid-place weights should affect field arrangements everywhere.</p><p>We examine this question quantitatively by constructing realizable K-field arrangements (with grid-like responses generated as 1D slices through 2D grids [<xref ref-type="bibr" rid="bib94">Yoon et al., 2016</xref>]), then attempting to insert one or a few new fields (<xref ref-type="fig" rid="fig8">Figure 8A,B</xref>). Inserting even a single field at a randomly chosen location through Hebbian plasticity in the grid-place weights tends to produce new additional fields at uncontrolled locations, and also leads to the disappearance of existing fields (<xref ref-type="fig" rid="fig8">Figure 8A,B</xref>).</p><fig id="fig8" position="float"><label>Figure 8.</label><caption><title>Predicted volatility of place field arrangements.</title><p>(<bold>A</bold>) Top: original field arrangement over a 20 m space (gray line: summed inputs to place cell; purple stars: original field locations; green arrow: location where new field will be induced by Hebbian plasticity in grid-place weights). Bottom: after induction of the new field (green star), two new uncontrolled fields appear (red stars). (<bold>B</bold>) Similar to (<bold>A</bold>): the insertion of a new field at a random location (green star) leads to one uncontrolled new field (red star) and the loss of two original fields (empty red stars). (<bold>C</bold>) Histogram of changes, after single-field insertion, in pairwise inter-field intervals (spacings): the primary off-target effect of field insertion is for other fields to appear or disappear, but existing fields do not tend to move. (<bold>D</bold>) A spatially extended version of (<bold>C</bold>) (purple), together with the (vertically rescaled) autocorrelation of the grid inputs to the cell (gray): new fields tend to appear at spacings corresponding to peaks in the input autocorrelation function. (<bold>E</bold>) Sum of uncontrolled field insertions or deletions per meter, in response to inserted fields when starting with a K-field arrangement over 20 m. (<bold>F</bold>) High place field volatility resulting from plasticity in the grid-to-place synapses suggests the possibility that grid-place weights might be relatively rigid (nonplastic).</p></caption><graphic mime-subtype="tiff" mimetype="image" xlink:href="elife-62702-fig8-v3.tif"/></fig><p>Interestingly, though field insertion affects existing arrangements through the uncontrolled appearance or disappearance of other fields, it does not tend to produce local horizontal displacements of existing fields (<xref ref-type="fig" rid="fig8">Figure 8C</xref>): fields that persist retain their firing locations or they disappear entirely, consistent with the surprising finding of a similar effect in experiments (<xref ref-type="bibr" rid="bib95">Ziv et al., 2013</xref>).</p><p>The locations of fields, including of uncontrolled field additions, are well-predicted by the structure (autocorrelation) of that cell’s grid inputs (<xref ref-type="fig" rid="fig8">Figure 8D</xref>). This multi-peaked autocorrelation function, with large separations between the tallest peaks, reflects the multi-periodic nature of the grid code and explains why fields tend to appear or disappear at remote locations rather than shifting locally: modest weight changes in the grid-like inputs modestly alter the heights of the peaks, so that some of the well-separated tall peaks fall below threshold for activation while others rise above.</p><p>Quantitatively, insertion of a single field at an arbitrary location in a 20 m span grid-place weight plasticity results in the insertion or deletion, on average, of <inline-formula><mml:math id="inf272"><mml:mrow><mml:mi/><mml:mo>∼</mml:mo><mml:mn>0.2</mml:mn></mml:mrow></mml:math></inline-formula> uncontrolled fields per meter. The insertion of four fields anywhere over 20 m results in an average of one uncontrolled field per meter (<xref ref-type="fig" rid="fig8">Figure 8E</xref>).</p><p>Thus, if a place cell were to add a field in a new environment or within a large single environment by <italic>modifying</italic> the grid-place weights, our results imply that it is extremely likely that this learning will alter the original grid-cell-driven field arrangements (scaffold). By contrast, adding fields that are driven by spatially specific external cues, though plasticity in the cue input-to-place cell synapses, may not affect field arrangements elsewhere if the cues are sufficiently sparse (unique); in this case, the added field would be a ‘sensory’ field rather than an internally generated or ‘mnemonic’ one.</p><p>In sum, the small separating capacity of place cells according to our model may provide one explanation for the high volatility of the place code across tens of days (<xref ref-type="bibr" rid="bib95">Ziv et al., 2013</xref>) if grid-place weights are subject to any plasticity over this timescale. Alternatively, to account for the stability of spatial representations over shorter timescales, our results suggest that external cue-driven inputs to place cells can be plastic but the grid-place weights, and correspondingly, the internal scaffold, may be fixed rather than plastic (<xref ref-type="fig" rid="fig8">Figure 8F</xref>). In experiments that induce the formation of a new place field through intracellular current injection (<xref ref-type="bibr" rid="bib9">Bittner et al., 2015</xref>), it is notable that the precise location of the new field was not under experimental control: potentially, an induced field might only be able to form where an underlying (near-threshold) grid scaffold peak already exists to help support it, and the observed long plasticity window could enable place cells to associate a plasticity-inducing cue with a nearby scaffold peak.</p><p>This alternative is consistent with the finding that entorhinal-hippocamapal connections stabilize long-term spatial and temporal memory (<xref ref-type="bibr" rid="bib11">Brun et al., 2008</xref>; <xref ref-type="bibr" rid="bib10">Brun et al., 2002</xref>; <xref ref-type="bibr" rid="bib81">Suh et al., 2011</xref>).</p><p>Finally, we note that the robustness of place field arrangements obtained with grid-like inputs is not inconsistent with the volatility of field arrangements to the addition or deletion of new fields through grid-place weight plasticity. Grid-driven place field arrangements are robust to random i.i.d. noise in the inputs and weights, as well as the addition of nongrid sparse inputs. On the other hand, the volatility results involve associative plasticity that induces highly nonrandom weight changes that are large enough to drive constructive interference in the inputs to add a new field at a specific location. This nonrandom perturbation, applied to the distributed and globally active grid inputs, results in global output changes.</p></sec></sec><sec id="s4" sec-type="discussion"><title>Discussion</title><sec id="s4-1"><title>Grid-driven hippocampal scaffolds provide a large representational space for spatial mapping</title><p>We showed that when driven by grid-like inputs, place cells can generate a spatial response scaffold that is influenced by the structural constraints of the grid-like inputs. Because of the richness of their grid-like inputs, individual place cells can generate a large library of spatial responses; however, these responses are also strongly structured so that the realizable spatial responses are a vanishingly small fraction of all spatial responses over the range where the grid inputs are unique. However, realizable spatial field arrangements are robust, and place cells can then ‘hang’ external sensory cues onto the spatial scaffold by associative learning to form distinct maps spatial maps for multiple environments. Note that our results apply equally well to the situation where grid states are incremented based on motion through arbitrary Euclidean spaces, not just spatial ones (<xref ref-type="bibr" rid="bib45">Killian et al., 2012</xref>; <xref ref-type="bibr" rid="bib21">Constantinescu et al., 2016</xref>; <xref ref-type="bibr" rid="bib6">Aronov et al., 2017</xref>; <xref ref-type="bibr" rid="bib46">Klukas et al., 2020</xref>).</p></sec><sec id="s4-2"><title>Summary of mathematical results</title><p>Mathematically, formulating the problem of place field arrangements as a perceptron problem led us to examine the realizable (linearly separable) dichotomies of patterns that lie not in general position but on the vertices of convex regular polytopes, thus extending Cover’s results to define capacity for a case with geometrically structured inputs (<xref ref-type="bibr" rid="bib22">Cover, 1965</xref>). Input configurations not in general position complicate the counting of linearly separable dichotomies. For instance, counting the number of linearly separable Boolean functions, which is precisely the problem of counting the linearly separable dichotomies on the hypercube, is NP-hard (<xref ref-type="bibr" rid="bib63">Peled and Simeone, 1985</xref>; <xref ref-type="bibr" rid="bib37">Hegedüs and Megiddo, 1996</xref>).</p><p>We showed that the geometry of grid-cell inputs is a convex polytope, given by the orthogonal product of simplices whose dimensions are set by the period of each grid module divided by the resolution. Grid-like codes are a special case of modular-one-hot codes, consisting of a population divided into modules with only one active cell (group) at a time per module.</p><p>Exploiting the symmetries of modular-one-hot codes allowed us to characterize and enumerate the realizable K-field arrangements for small fixed <inline-formula><mml:math id="inf273"><mml:mi>K</mml:mi></mml:math></inline-formula>. Our analyses relied on combinatorial objects called Young diagrams (<xref ref-type="bibr" rid="bib28">Fulton and Fulton, 1997</xref>). For the special case of <inline-formula><mml:math id="inf274"><mml:mrow><mml:mi>M</mml:mi><mml:mo>=</mml:mo><mml:mn>2</mml:mn></mml:mrow></mml:math></inline-formula> modules, we expressed the number of realizable field arrangements exactly as a poly-Bernoulli number (<xref ref-type="bibr" rid="bib41">Kaneko, 1997</xref>). Note that with random inputs, by contrast, it is not well-posed to count the number of realizable K-field arrangements when <inline-formula><mml:math id="inf275"><mml:mi>K</mml:mi></mml:math></inline-formula> is fixed since the solution will depend on the specific configuration of input patterns. While we have considered two extreme cases analytically, one with no constraints on place field sparsity and the other with very few fields, it remains an outstanding question of interest to examine the case of sparse but not ultra-sparse field arrangements in which the number of fields is proportional to the full range, with a constant small prefactor (<xref ref-type="bibr" rid="bib40">Itskov and Abbott, 2008</xref>). Finding results in this regime would involve restricting our count of all possible Young diagrams to a subset with a fixed filled-in area (purple area in <xref ref-type="fig" rid="fig5">Figure 5</xref>). This constraint makes the counting problem significantly harder.</p><p>We showed using analytical arguments that our results generalize to analog or graded tuning curves, real-valued periods, and dense phase representations per module. We also showed numerically that our qualitative results hold when considering deviations from the ideal, like the addition of noise in inputs and weights. The relatively large margins of the place field arrangements obtained with grid-like inputs make the code resistant to noise. In future work, it will be interesting to further explore the dependence of margins, and thus the robustness of the place field arrangements, on graded tuning curve shapes and the phase resolution per module.</p></sec><sec id="s4-3"><title>Robustness, plasticity, and volatility</title><p>As described in the section on separating capacity, once grid-place weights are set over a relatively small space (about the size of the sum of the grid module periods), they set up a scaffold also outside of that space (within and across environments). Associating an external cue with this scaffold would involve updating the weights from the external sensory inputs to place cells that are close to or above threshold based on the existing scaffold. This does not require relearning grid-place weights and does not cause interference with previously learned maps.</p><p>By contrast, relearning the grid-place weights for insertion of another grid-driven field rearranges the overall scaffold, degrading previously learned maps (volatility: <xref ref-type="bibr" rid="bib95">Ziv et al., 2013</xref>). If we consider a realizable field arrangement in a small local region of space then impose some desired field arrangement in a different local region of space through Hebbian learning, we might ask what the effect would be in the first region. Our results on field volatility provide an answer: if the first local region is of a size comparable to the sum of the place cell’s input grid periods, then any attempt to choose field locations in a different local region of space (e.g., a different environment) will almost surely have a global effect that will likely affect the arrangement of fields in the first region. A similar result might hold true if the first region is actually a disjoint set of local regions whose individual side lengths add up to the sum of input grid periods. This prediction might be consistent with the observed volatility of place fields over time even in familiar environments (<xref ref-type="bibr" rid="bib95">Ziv et al., 2013</xref>).</p><p>Our volatility results alternatively raise the intriguing possibility that grid-place weights, and thus the scaffold, might be largely fixed and not especially plastic, with plasticity confined to the nongrid sensory cue-driven inputs and in the return projections from place to grid cells. The experiments of <xref ref-type="bibr" rid="bib68">Rich et al., 2014</xref> – in which place cells are recorded on a long track, the animal is then exposed to an extended version of the track, but the original fields do not shift – might be consistent with this alternative possibility. These are two rather strong and competing predictions that emerge from our model, each consistent with different pieces of data. It will be very interesting to characterize the nature of plasticity in the grid-to-place weights in the future.</p></sec><sec id="s4-4"><title>Alternative models of spatial tuning in hippocampus</title><p>This work models place cells as feedforward-driven conjunctions between (sparse) external sensory cues and (dense) motion-based internal position estimates computed in grid cells and represented by multi-periodic spatial tuning curves. In considering place-cell responses as thresholded versions of their feedforward inputs including from grid cells, our model follows others in the literature that make similar assumptions (<xref ref-type="bibr" rid="bib36">Hartley et al., 2000</xref>; <xref ref-type="bibr" rid="bib73">Solstad et al., 2006</xref>; <xref ref-type="bibr" rid="bib76">Sreenivasan and Fiete, 2011</xref>; <xref ref-type="bibr" rid="bib55">Monaco et al., 2011</xref>; <xref ref-type="bibr" rid="bib18">Cheng and Frank, 2011</xref>; <xref ref-type="bibr" rid="bib86">Whittington et al., 2020</xref>). These models do not preclude the possibility that place cells feed back to correct grid-cell states, and some indeed incorporate such return projections (<xref ref-type="bibr" rid="bib76">Sreenivasan and Fiete, 2011</xref>; <xref ref-type="bibr" rid="bib86">Whittington et al., 2020</xref>; <xref ref-type="bibr" rid="bib2">Agmon and Burak, 2020</xref>). It will be interesting in future work to analyze how such return projections affect the capacity of the combined system.</p><p>Our assumptions and model architecture are quite different from those of a complementary set of models, which take the view that grid-cell activity is derived from place cells (<xref ref-type="bibr" rid="bib47">Kropff and Treves, 2008</xref>; <xref ref-type="bibr" rid="bib24">Dordek et al., 2016</xref>; <xref ref-type="bibr" rid="bib77">Stachenfeld et al., 2017</xref>). Our assumptions also contrast with a third set of models in which place-cell responses are assumed to emerge largely from locally recurrent weights within hippocampus (<xref ref-type="bibr" rid="bib83">Tsodyks et al., 1996</xref>; <xref ref-type="bibr" rid="bib70">Samsonovich and McNaughton, 1997</xref>; <xref ref-type="bibr" rid="bib8">Battista and Monasson, 2020</xref>; <xref ref-type="bibr" rid="bib7">Battaglia and Treves, 1998</xref>). One challenge for those models is in explaining how to generate stable place fields through velocity integration across multiple large environments: the capacity (number of fixed points) of many fully connected neural integrator models in the style of Hopfield networks tends to be small – scaling as <inline-formula><mml:math id="inf276"><mml:mrow><mml:mi/><mml:mo>∼</mml:mo><mml:mi>N</mml:mi></mml:mrow></mml:math></inline-formula> states with <inline-formula><mml:math id="inf277"><mml:mi>N</mml:mi></mml:math></inline-formula> neurons (<xref ref-type="bibr" rid="bib5">Amit et al., 1985</xref>; <xref ref-type="bibr" rid="bib31">Gardner, 1988</xref>; <xref ref-type="bibr" rid="bib1">Abu-Mostafa and Jacques, 1985</xref>; <xref ref-type="bibr" rid="bib74">Sompolinsky and Kanter, 1986</xref>; <xref ref-type="bibr" rid="bib70">Samsonovich and McNaughton, 1997</xref>; <xref ref-type="bibr" rid="bib7">Battaglia and Treves, 1998</xref>; <xref ref-type="bibr" rid="bib8">Battista and Monasson, 2020</xref>; <xref ref-type="bibr" rid="bib56">Monasson and Rosay, 2013</xref>) because of the absence of modular structures (<xref ref-type="bibr" rid="bib27">Fiete et al., 2014</xref>; <xref ref-type="bibr" rid="bib76">Sreenivasan and Fiete, 2011</xref>; <xref ref-type="bibr" rid="bib17">Chaudhuri and Fiete, 2019</xref>; <xref ref-type="bibr" rid="bib57">Mosheiff and Burak, 2019</xref>). There are at least two reasons why a capacity roughly equal to the number of place cells might be too small, even though the number of hippocampal cells is large: (1) a capacity equal to the number of place cells would be quickly saturated if used to tile 2D spaces: 10<sup>6</sup> states from 10<sup>6</sup> cells supply 10<sup>3</sup> states per dimension. Assuming conservatively a spatial resolution of 10 cm per state, this means no more than 100 m of coding capacity per linear dimension, with no excess coding states for error correction (<xref ref-type="bibr" rid="bib26">Fiete et al., 2008</xref>; <xref ref-type="bibr" rid="bib76">Sreenivasan and Fiete, 2011</xref>). (2) The hippocampus sits atop all sensory processing cortical hierarchies and is believed to play a key role in episodic memory in addition to spatial representation and memory. The number of potential cortical coding states is vastly larger than the number of place cells, suggesting that the number of hippocampal coding states should grow more rapidly than linearly in the number of neurons, which is possible with our grid-driven model but not with nonmodular Hopfield-like network models with pairwise weights between neurons.</p><p>Even if our assumption that place cells primarily derive their responses from grid-like inputs combined with external cue-derived nongrid inputs is correct, place cells may nevertheless deviate from our simple perceptron model if the place response involves additional layers of nonlinear processing. There are many ways in which this can happen: place cells are likely not entirely independent of each other, interacting through population-level competition and other recurrent interactions. Dendritic nonlinearities in place cells act as a hidden layer between grid-cell input and place cell firing (<xref ref-type="bibr" rid="bib65">Poirazi and Mel, 2001</xref>; <xref ref-type="bibr" rid="bib66">Polsky et al., 2004</xref>; <xref ref-type="bibr" rid="bib48">Larkum et al., 2007</xref>; <xref ref-type="bibr" rid="bib75">Spruston, 2008</xref>; <xref ref-type="bibr" rid="bib49">Larkum et al., 2009</xref>; <xref ref-type="bibr" rid="bib34">Harnett et al., 2012</xref>; <xref ref-type="bibr" rid="bib35">Harnett et al., 2013</xref>; <xref ref-type="bibr" rid="bib80">Stuart et al., 2016</xref>). Or, if we identify our model place cells as residing in CA1, then CA3 would serve as an intermediate and locally recurrent processing layer. In principle, hidden layers that generated a one-hot encoding for space from the grid-like inputs and then drove place cells as perceptrons would make all place field arrangements realizable. However, such an encoding would require a very large number of hidden units (equal to the full range of the grid code, while the grid code itself requires only the logarithm of this number). Additionally, place cells may exhibit richer input-output transformations than a simple pointwise nonlinearity, for instance, through cellular temporal dynamics including adaptation or persistent firing. Finding ways to include these effects in the analysis of place field arrangements is a promising and important direction for future study.</p><p>In sum, combining modular grid-like inputs produces a rich spatial scaffold of place fields, on which to associate external cues, much larger than possible with nonmodular recurrent dynamics within hippocampus. Nevertheless, the allowed states are strongly constrained by the geometry of the grid-cell drive. Further, our results suggest either high volatility in the place scaffold if grid-to-place-cell weights exhibit synaptic plasticity, or suggest the possibility that grid-to-place-cell weights might be random and fixed.</p></sec><sec id="s4-5"><title>Numerical methods</title><sec id="s4-5-1"><title>Random, weight-constrained random, and shuffled inputs</title><p>Entries of the random input matrix are uniformly distributed variables in <inline-formula><mml:math id="inf278"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:mn>0</mml:mn><mml:mo>,</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:mstyle></mml:math></inline-formula>. To compare separating capacity (<xref ref-type="fig" rid="fig4">Figure 4</xref>) of random codes with the grid-like code, we consider matrices of the same input dimension (number of neurons) as the grid-cell matrix, or alternatively of the same rank as the grid-cell matrix, then use Cover’s theorem to count the realizable dichotomies (<xref ref-type="bibr" rid="bib22">Cover, 1965</xref>). Weight-constrained random inputs (<xref ref-type="fig" rid="fig4">Figure 4B–D</xref>) are random inputs with non-negative weights imposed during training.</p><p>To compare margins (<xref ref-type="fig" rid="fig7">Figure 7</xref>), we use matrices with the same input dimension and number of patterns. As margins scale linearly with the norm of the patterns, to keep comparisons fair the input columns (patterns) are normalized to have unity <italic>L</italic><sub>1</sub> norm.</p></sec><sec id="s4-5-2"><title>Nongrid inputs</title><p>To test how nongrid inputs affect our results (<xref ref-type="fig" rid="fig7">Figure 7C,D</xref>), the <inline-formula><mml:math id="inf279"><mml:mrow><mml:msub><mml:mi>λ</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>+</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> grid-like inputs from two modules with periods <inline-formula><mml:math id="inf280"><mml:mrow><mml:msub><mml:mi>λ</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>=</mml:mo><mml:mn>31</mml:mn></mml:mrow></mml:math></inline-formula> and <inline-formula><mml:math id="inf281"><mml:mrow><mml:msub><mml:mi>λ</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mo>=</mml:mo><mml:mn>43</mml:mn></mml:mrow></mml:math></inline-formula> are augmented by 100 additional inputs. In <xref ref-type="fig" rid="fig7">Figure 7C</xref>, each nongrid dense noisy input is a random variable selected uniformly and identically at each location from the uniform interval <inline-formula><mml:math id="inf282"><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:mn>0</mml:mn><mml:mo>,</mml:mo><mml:mrow><mml:mn>2</mml:mn><mml:mo>⁢</mml:mo><mml:mi>μ</mml:mi></mml:mrow><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:math></inline-formula>, where <inline-formula><mml:math id="inf283"><mml:mrow><mml:mi>μ</mml:mi><mml:mo>=</mml:mo><mml:mrow><mml:mn>0.2</mml:mn><mml:mo>⁢</mml:mo><mml:msub><mml:mi>μ</mml:mi><mml:mi>g</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>, and <inline-formula><mml:math id="inf284"><mml:mrow><mml:msub><mml:mi>μ</mml:mi><mml:mi>g</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:mn>2</mml:mn><mml:mo>/</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:msub><mml:mi>λ</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>+</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula> is the population mean of the grid inputs. In <xref ref-type="fig" rid="fig7">Figure 7D</xref>, each nongrid sparse input is a <inline-formula><mml:math id="inf285"><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:mn>0</mml:mn><mml:mo>,</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">}</mml:mo></mml:mrow></mml:math></inline-formula> random variable with <inline-formula><mml:math id="inf286"><mml:mi>Q</mml:mi></mml:math></inline-formula> nonzero responses across the full range <inline-formula><mml:math id="inf287"><mml:mrow><mml:mi>L</mml:mi><mml:mo>=</mml:mo><mml:mrow><mml:msub><mml:mi>λ</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>⁢</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>. We set <inline-formula><mml:math id="inf288"><mml:mrow><mml:mi>Q</mml:mi><mml:mo>=</mml:mo><mml:mrow><mml:mn>0.2</mml:mn><mml:mo>⁢</mml:mo><mml:mi>L</mml:mi><mml:mo>⁢</mml:mo><mml:msub><mml:mi>μ</mml:mi><mml:mi>g</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>. In all cases, input columns (patterns with grid and nongrid inputs combined) are finally normalized to have unity <italic>L</italic><sub>1</sub> norm. Results are based on 1000 realizations (samples) of the nongrid inputs.</p></sec><sec id="s4-5-3"><title>Grid-like inputs with graded tuning curves</title><p>We generate periodic grid-like activity with graded tuning curves as a function of 1D space <inline-formula><mml:math id="inf289"><mml:mi>x</mml:mi></mml:math></inline-formula> in cell <inline-formula><mml:math id="inf290"><mml:mi>i</mml:mi></mml:math></inline-formula> of module <inline-formula><mml:math id="inf291"><mml:mi>m</mml:mi></mml:math></inline-formula> with period <inline-formula><mml:math id="inf292"><mml:msub><mml:mi>λ</mml:mi><mml:mi>m</mml:mi></mml:msub></mml:math></inline-formula> as follows <xref ref-type="bibr" rid="bib76">Sreenivasan and Fiete, 2011</xref>:<disp-formula id="equ7"><label>(7)</label><mml:math id="m7"><mml:mrow><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mi>g</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>ϕ</mml:mi><mml:mrow><mml:mi>m</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:mi>x</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>φ</mml:mi><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:msup><mml:mi>e</mml:mi><mml:mrow><mml:mo>−</mml:mo><mml:mfrac><mml:mrow><mml:mo fence="false" stretchy="false">‖</mml:mo><mml:msub><mml:mi>ϕ</mml:mi><mml:mrow><mml:mi>m</mml:mi></mml:mrow></mml:msub><mml:mo>−</mml:mo><mml:msub><mml:mi>φ</mml:mi><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:msup><mml:mo fence="false" stretchy="false">‖</mml:mo><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msup></mml:mrow><mml:mrow><mml:mn>2</mml:mn><mml:msubsup><mml:mi>σ</mml:mi><mml:mrow><mml:mi>g</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msubsup></mml:mrow></mml:mfrac></mml:mrow></mml:msup><mml:mrow><mml:mo>,</mml:mo></mml:mrow><mml:mo fence="false" stretchy="false">‖</mml:mo><mml:mi>α</mml:mi><mml:mo fence="false" stretchy="false">‖</mml:mo><mml:mo>=</mml:mo><mml:mo form="prefix" movablelimits="true">min</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:mi>α</mml:mi><mml:mrow><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:mo>,</mml:mo><mml:mn>1</mml:mn><mml:mo>−</mml:mo><mml:mrow><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:mi>α</mml:mi><mml:mrow><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mstyle></mml:mrow></mml:math></disp-formula></p><p>where the phase of module <inline-formula><mml:math id="inf293"><mml:mi>m</mml:mi></mml:math></inline-formula> is <inline-formula><mml:math id="inf294"><mml:mrow><mml:mrow><mml:msub><mml:mi>ϕ</mml:mi><mml:mi>m</mml:mi></mml:msub><mml:mo>⁢</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>x</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow><mml:mo>=</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mrow><mml:mi>x</mml:mi><mml:mo>/</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mi>m</mml:mi></mml:msub></mml:mrow><mml:mo lspace="2.5pt" rspace="2.5pt">mod</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula>. The ith cell in a module has a preferred activity phase <inline-formula><mml:math id="inf295"><mml:msub><mml:mi>φ</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:math></inline-formula> drawn randomly and uniformly from (0,1). The tuning width <inline-formula><mml:math id="inf296"><mml:msub><mml:mi>σ</mml:mi><mml:mi>g</mml:mi></mml:msub></mml:math></inline-formula> is defined in terms of phase, thus in real space the width of the activity bump grows linearly with the module period. We set <inline-formula><mml:math id="inf297"><mml:mrow><mml:msub><mml:mi>σ</mml:mi><mml:mi>g</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mn>0.16</mml:mn></mml:mrow></mml:math></inline-formula> (thus the full-width at half-max of the phase tuning curve equals 3/8 of the period, similar to grid cells).</p><p>Finally, to simulate quasi-periodic grid responses in 1D, we first generate 2D responses with Gaussian tuning on a hexagonal lattice, with the same field width as above. 1D responses of grid cells from the same module are then generated as parallel 1D slices of this lattice as in <xref ref-type="bibr" rid="bib94">Yoon et al., 2016</xref>, with phases uniformly drawn at random.</p></sec></sec></sec></body><back><sec id="s5" sec-type="additional-information"><title>Additional information</title><fn-group content-type="competing-interest"><title>Competing interests</title><fn fn-type="COI-statement" id="conf1"><p>none</p></fn><fn fn-type="COI-statement" id="conf2"><p>None</p></fn></fn-group><fn-group content-type="author-contribution"><title>Author contributions</title><fn fn-type="con" id="con1"><p>conceptualization, data-curation, Formal analysis, Investigation, methodology, visualization, writing-original-draft</p></fn><fn fn-type="con" id="con2"><p>Formal analysis, Investigation</p></fn><fn fn-type="con" id="con3"><p>conceptualization, Formal analysis, funding-acquisition, Investigation, methodology, project-administration, resources, supervision, validation, visualization, writing-original-draft, writing-review-and-editing</p></fn><fn fn-type="con" id="con4"><p>conceptualization, Formal analysis, funding-acquisition, Investigation, methodology, project-administration, resources, supervision, validation, visualization, writing-original-draft, writing-review-and-editing</p></fn></fn-group></sec><sec id="s6" sec-type="supplementary-material"><title>Additional files</title><supplementary-material id="transrepform"><label>Transparent reporting form</label><media mime-subtype="pdf" mimetype="application" xlink:href="elife-62702-transrepform1-v3.pdf"/></supplementary-material></sec><sec id="s7" sec-type="data-availability"><title>Data availability</title><p>The authors confirm that the data supporting the findings of this study are available within the article. Implementation details and code are available at: <ext-link ext-link-type="uri" xlink:href="https://github.com/myyim/placecellperceptron">https://github.com/myyim/placecellperceptron</ext-link> copy archived at <ext-link ext-link-type="uri" xlink:href="https://archive.softwareheritage.org/swh:1:rev:8e03b880f47a1f0b7934afd91afb167f669ceeab">https://archive.softwareheritage.org/swh:1:rev:8e03b880f47a1f0b7934afd91afb167f669ceeab</ext-link>.</p></sec><ack id="ack"><title>Acknowledgements</title><p>This work was supported by the Simons Foundation through the Simons Collaboration on the Global Brain, the ONR, the Howard Hughes Medical Institute through the Faculty Scholars Program to IRF, and the Alfred P Sloan Research Fellowship FG-2017-9554 to TT. We thank Sugandha Sharma, Leenoy Meshulam, and Luyan Yu for comments on the manuscript.</p></ack><ref-list><title>References</title><ref id="bib1"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Abu-Mostafa</surname><given-names>Y</given-names></name><name><surname>Jacques</surname><given-names>JS</given-names></name></person-group><year iso-8601-date="1985">1985</year><article-title>Information capacity of the Hopfield model</article-title><source>IEEE Trans Inform Theory</source><volume>31</volume><fpage>461</fpage><lpage>464</lpage><pub-id pub-id-type="doi">10.1109/TIT.1985.1057069</pub-id></element-citation></ref><ref id="bib2"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Agmon</surname><given-names>H</given-names></name><name><surname>Burak</surname><given-names>Y</given-names></name></person-group><year iso-8601-date="2020">2020</year><article-title>A theory of joint attractor dynamics in the hippocampus and the entorhinal cortex accounts for artificial remapping and grid cell field-to-field variability</article-title><source>eLife</source><volume>08</volume><elocation-id>9</elocation-id><pub-id pub-id-type="doi">10.7554/eLife.56894</pub-id></element-citation></ref><ref id="bib3"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Alme</surname><given-names>CB</given-names></name><name><surname>Miao</surname><given-names>C</given-names></name><name><surname>Jezek</surname><given-names>K</given-names></name><name><surname>Treves</surname><given-names>A</given-names></name><name><surname>Moser</surname><given-names>EI</given-names></name><name><surname>Moser</surname><given-names>MB</given-names></name></person-group><year iso-8601-date="2014">2014</year><article-title>Place cells in the hippocampus: Eleven maps for eleven rooms</article-title><source>PNAS</source><volume>111</volume><fpage>18428</fpage><lpage>18435</lpage><pub-id pub-id-type="doi">10.1073/pnas.1421056111</pub-id><pub-id pub-id-type="pmid">25489089</pub-id></element-citation></ref><ref id="bib4"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Amaral</surname><given-names>DG</given-names></name><name><surname>Witter</surname><given-names>MP</given-names></name></person-group><year iso-8601-date="1989">1989</year><article-title>The three-dimensional organization of the hippocampal formation: A review of anatomical data</article-title><source>Neuroscience</source><volume>31</volume><fpage>571</fpage><lpage>591</lpage><pub-id pub-id-type="doi">10.1016/0306-4522(89)90424-7</pub-id><pub-id pub-id-type="pmid">2687721</pub-id></element-citation></ref><ref id="bib5"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Amit</surname><given-names>DJ</given-names></name><name><surname>Gutfreund</surname><given-names>H</given-names></name><name><surname>Sompolinsky</surname><given-names>H</given-names></name></person-group><year iso-8601-date="1985">1985</year><article-title>Storing Infinite Numbers of Patterns in a Spin-Glass Model of Neural Networks</article-title><source>Physical Review Letters</source><volume>55</volume><fpage>1530</fpage><lpage>1533</lpage><pub-id pub-id-type="doi">10.1103/PhysRevLett.55.1530</pub-id><pub-id pub-id-type="pmid">10031847</pub-id></element-citation></ref><ref id="bib6"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Aronov</surname><given-names>D</given-names></name><name><surname>Nevers</surname><given-names>R</given-names></name><name><surname>Tank</surname><given-names>DW</given-names></name></person-group><year iso-8601-date="2017">2017</year><article-title>Mapping of a non-spatial dimension by the hippocampal–entorhinal circuit</article-title><source>Nature</source><volume>543</volume><fpage>719</fpage><lpage>722</lpage><pub-id pub-id-type="doi">10.1038/nature21692</pub-id><pub-id pub-id-type="pmid">28358077</pub-id></element-citation></ref><ref id="bib7"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Battaglia</surname><given-names>FP</given-names></name><name><surname>Treves</surname><given-names>A</given-names></name></person-group><year iso-8601-date="1998">1998</year><article-title>Attractor neural networks storing multiple space representations: A model for hippocampal place fields</article-title><source>Physical Review. E</source><volume>58</volume><fpage>7738</fpage><lpage>7753</lpage><pub-id pub-id-type="doi">10.1103/PhysRevE.58.7738</pub-id></element-citation></ref><ref id="bib8"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Battista</surname><given-names>A</given-names></name><name><surname>Monasson</surname><given-names>R</given-names></name></person-group><year iso-8601-date="2020">2020</year><article-title>Capacity-resolution trade-off in the optimal learning of multiple low-dimensional manifolds by attractor neural networks</article-title><source>Physical Review Letters</source><volume>124</volume><elocation-id>48302</elocation-id><pub-id pub-id-type="doi">10.1103/PhysRevLett.124.048302</pub-id><pub-id pub-id-type="pmid">32058781</pub-id></element-citation></ref><ref id="bib9"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Bittner</surname><given-names>KC</given-names></name><name><surname>Grienberger</surname><given-names>C</given-names></name><name><surname>Vaidya</surname><given-names>SP</given-names></name><name><surname>Milstein</surname><given-names>AD</given-names></name><name><surname>Macklin</surname><given-names>JJ</given-names></name><name><surname>Suh</surname><given-names>J</given-names></name><name><surname>Tonegawa</surname><given-names>S</given-names></name><name><surname>Magee</surname><given-names>JC</given-names></name></person-group><year iso-8601-date="2015">2015</year><article-title>Conjunctive input processing drives feature selectivity in hippocampal CA1 neurons</article-title><source>Nature Neuroscience</source><volume>18</volume><fpage>1133</fpage><lpage>1142</lpage><pub-id pub-id-type="doi">10.1038/nn.4062</pub-id><pub-id pub-id-type="pmid">26167906</pub-id></element-citation></ref><ref id="bib10"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Brun</surname><given-names>VH</given-names></name><name><surname>Otnass</surname><given-names>MK</given-names></name><name><surname>Molden</surname><given-names>S</given-names></name><name><surname>Steffenach</surname><given-names>HA</given-names></name><name><surname>Witter</surname><given-names>MP</given-names></name><name><surname>Moser</surname><given-names>MB</given-names></name><name><surname>Moser</surname><given-names>EI</given-names></name></person-group><year iso-8601-date="2002">2002</year><article-title>Place cells and place recognition maintained by direct entorhinal-hippocampal circuitry</article-title><source>Science</source><volume>296</volume><fpage>2243</fpage><lpage>2246</lpage><pub-id pub-id-type="doi">10.1126/science.1071089</pub-id><pub-id pub-id-type="pmid">12077421</pub-id></element-citation></ref><ref id="bib11"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Brun</surname><given-names>VH</given-names></name><name><surname>Solstad</surname><given-names>T</given-names></name><name><surname>Kjelstrup</surname><given-names>KB</given-names></name><name><surname>Fyhn</surname><given-names>M</given-names></name><name><surname>Witter</surname><given-names>MP</given-names></name><name><surname>Moser</surname><given-names>EI</given-names></name><name><surname>Moser</surname><given-names>MB</given-names></name></person-group><year iso-8601-date="2008">2008</year><article-title>Progressive increase in grid scale from dorsal to ventral medial entorhinal cortex</article-title><source>Hippocampus</source><volume>18</volume><fpage>1200</fpage><lpage>1212</lpage><pub-id pub-id-type="doi">10.1002/hipo.20504</pub-id><pub-id pub-id-type="pmid">19021257</pub-id></element-citation></ref><ref id="bib12"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Burak</surname><given-names>Y</given-names></name><name><surname>Fiete</surname><given-names>I</given-names></name></person-group><year iso-8601-date="2006">2006</year><article-title>Do We Understand the Emergent Dynamics of Grid Cell Activity</article-title><source>Journal of Neuroscience</source><volume>26</volume><fpage>9352</fpage><lpage>9354</lpage><pub-id pub-id-type="doi">10.1523/JNEUROSCI.2857-06.2006</pub-id><pub-id pub-id-type="pmid">16977716</pub-id></element-citation></ref><ref id="bib13"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Burak</surname><given-names>Y</given-names></name><name><surname>Fiete</surname><given-names>IR</given-names></name></person-group><year iso-8601-date="2009">2009</year><article-title>Accurate Path Integration in Continuous Attractor Network Models of Grid Cells</article-title><source>PLOS Computational Biology</source><volume>5</volume><elocation-id>e1000291</elocation-id><pub-id pub-id-type="doi">10.1371/journal.pcbi.1000291</pub-id><pub-id pub-id-type="pmid">19229307</pub-id></element-citation></ref><ref id="bib14"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Burgess</surname><given-names>N</given-names></name></person-group><year iso-8601-date="2008">2008</year><article-title>Grid cells and theta as oscillatory interference: Theory and predictions</article-title><source>Hippocampus</source><volume>18</volume><fpage>1157</fpage><lpage>1174</lpage><pub-id pub-id-type="doi">10.1002/hipo.20518</pub-id><pub-id pub-id-type="pmid">19021256</pub-id></element-citation></ref><ref id="bib15"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Cadena</surname><given-names>C</given-names></name><name><surname>Carlone</surname><given-names>L</given-names></name><name><surname>Carrillo</surname><given-names>H</given-names></name><name><surname>Latif</surname><given-names>Y</given-names></name><name><surname>Scaramuzza</surname><given-names>D</given-names></name><name><surname>Neira</surname><given-names>J</given-names></name><name><surname>Reid</surname><given-names>I</given-names></name><name><surname>Leonard</surname><given-names>JJ</given-names></name></person-group><year iso-8601-date="2016">2016</year><article-title>Past, Present, and Future of Simultaneous Localization and Mapping: Toward the Robust-Perception Age</article-title><source>IEEE Transactions on Robotics</source><volume>32</volume><fpage>1309</fpage><lpage>1332</lpage><pub-id pub-id-type="doi">10.1109/TRO.2016.2624754</pub-id></element-citation></ref><ref id="bib16"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Cesaro</surname><given-names>E</given-names></name></person-group><year iso-8601-date="1881">1881</year><article-title>Démonstration Élémentaire et Généralisation de Quelques Théoremes de M Berger</article-title><source>Mathesis</source><volume>1</volume><fpage>99</fpage><lpage>102</lpage><pub-id pub-id-type="doi">10.1007/978-94-015-7842-4_13</pub-id></element-citation></ref><ref id="bib17"><element-citation publication-type="book"><person-group person-group-type="author"><name><surname>Chaudhuri</surname><given-names>R</given-names></name><name><surname>Fiete</surname><given-names>I</given-names></name></person-group><year iso-8601-date="2019">2019</year><chapter-title>Bipartite expander Hopfield networks as self-decoding high-capacity error correcting codes</chapter-title><person-group person-group-type="editor"><name><surname>Wallach</surname><given-names>H</given-names></name><name><surname>Larochelle</surname><given-names>H</given-names></name><name><surname>Beygelzimer</surname><given-names>A</given-names></name><name><surname>Alché-Buc</surname><given-names>F</given-names></name><name><surname>Fox</surname><given-names>E</given-names></name><name><surname>Garnett</surname><given-names>R</given-names></name></person-group><source>Advances in Neural Information Processing Systems 32</source><publisher-name>Curran Associates</publisher-name><fpage>7686</fpage><lpage>7697</lpage></element-citation></ref><ref id="bib18"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Cheng</surname><given-names>S</given-names></name><name><surname>Frank</surname><given-names>LM</given-names></name></person-group><year iso-8601-date="2011">2011</year><article-title>The structure of networks that produce the transformation from grid cells to place cells</article-title><source>Neuroscience</source><volume>197</volume><fpage>293</fpage><lpage>306</lpage><pub-id pub-id-type="doi">10.1016/j.neuroscience.2011.09.002</pub-id><pub-id pub-id-type="pmid">21963867</pub-id></element-citation></ref><ref id="bib19"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Cheung</surname><given-names>A</given-names></name><name><surname>Ball</surname><given-names>D</given-names></name><name><surname>Milford</surname><given-names>M</given-names></name><name><surname>Wyeth</surname><given-names>G</given-names></name><name><surname>Wiles</surname><given-names>J</given-names></name></person-group><year iso-8601-date="2012">2012</year><article-title>Maintaining a cognitive map in darkness: The need to fuse boundary knowledge with path integration</article-title><source>PLOS Computational Biology</source><volume>8</volume><elocation-id>e1002651</elocation-id><pub-id pub-id-type="doi">10.1371/journal.pcbi.1002651</pub-id><pub-id pub-id-type="pmid">22916006</pub-id></element-citation></ref><ref id="bib20"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Colgin</surname><given-names>LL</given-names></name><name><surname>Moser</surname><given-names>EI</given-names></name><name><surname>Moser</surname><given-names>MB</given-names></name></person-group><year iso-8601-date="2008">2008</year><article-title>Understanding memory through hippocampal remapping</article-title><source>Trends in Neurosciences</source><volume>31</volume><fpage>469</fpage><lpage>477</lpage><pub-id pub-id-type="doi">10.1016/j.tins.2008.06.008</pub-id><pub-id pub-id-type="pmid">18687478</pub-id></element-citation></ref><ref id="bib21"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Constantinescu</surname><given-names>AO</given-names></name><name><surname>O’Reilly</surname><given-names>JX</given-names></name><name><surname>Behrens</surname><given-names>TEJ</given-names></name></person-group><year iso-8601-date="2016">2016</year><article-title>Organizing conceptual knowledge in humans with a gridlike code</article-title><source>Science</source><volume>352</volume><fpage>1464</fpage><lpage>1468</lpage><pub-id pub-id-type="doi">10.1126/science.aaf0941</pub-id><pub-id pub-id-type="pmid">27313047</pub-id></element-citation></ref><ref id="bib22"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Cover</surname><given-names>TM</given-names></name></person-group><year iso-8601-date="1965">1965</year><article-title>Geometrical and statistical properties of systems of linear inequalities with applications in pattern recognition</article-title><source>IEEE Transactions on Electronic Computers</source><volume>EC-14</volume><fpage>326</fpage><lpage>334</lpage><pub-id pub-id-type="doi">10.1109/PGEC.1965.264137</pub-id></element-citation></ref><ref id="bib23"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>de Andrade</surname><given-names>RF</given-names></name><name><surname>Lundberg</surname><given-names>E</given-names></name><name><surname>Nagle</surname><given-names>B</given-names></name></person-group><year iso-8601-date="2015">2015</year><article-title>Asymptotics of the extremal excedance set statistic</article-title><source>European Journal of Combinatorics</source><volume>46</volume><fpage>75</fpage><lpage>88</lpage><pub-id pub-id-type="doi">10.1016/j.ejc.2014.11.008</pub-id></element-citation></ref><ref id="bib24"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Dordek</surname><given-names>Y</given-names></name><name><surname>Soudry</surname><given-names>D</given-names></name><name><surname>Meir</surname><given-names>R</given-names></name><name><surname>Derdikman</surname><given-names>D</given-names></name></person-group><year iso-8601-date="2016">2016</year><article-title>Extracting grid cell characteristics from place cell inputs using non-negative principal component analysis</article-title><source>eLife</source><volume>5</volume><elocation-id>e10094</elocation-id><pub-id pub-id-type="doi">10.7554/eLife.10094</pub-id><pub-id pub-id-type="pmid">26952211</pub-id></element-citation></ref><ref id="bib25"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Fenton</surname><given-names>AA</given-names></name><name><surname>Kao</surname><given-names>HY</given-names></name><name><surname>Neymotin</surname><given-names>SA</given-names></name><name><surname>Olypher</surname><given-names>A</given-names></name><name><surname>Vayntrub</surname><given-names>Y</given-names></name><name><surname>Lytton</surname><given-names>WW</given-names></name><name><surname>Ludvig</surname><given-names>N</given-names></name></person-group><year iso-8601-date="2008">2008</year><article-title>Unmasking the CA1 ensemble place code by exposures to small and large environments: More place cells and multiple, irregularly arranged, and expanded place fields in the larger space</article-title><source>The Journal of Neuroscience</source><volume>28</volume><fpage>11250</fpage><lpage>11262</lpage><pub-id pub-id-type="doi">10.1523/JNEUROSCI.2862-08.2008</pub-id><pub-id pub-id-type="pmid">18971467</pub-id></element-citation></ref><ref id="bib26"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Fiete</surname><given-names>IR</given-names></name><name><surname>Burak</surname><given-names>Y</given-names></name><name><surname>Brookings</surname><given-names>T</given-names></name></person-group><year iso-8601-date="2008">2008</year><article-title>What Grid Cells Convey about Rat Location</article-title><source>The Journal of Neuroscience</source><volume>28</volume><fpage>6858</fpage><lpage>6871</lpage><pub-id pub-id-type="doi">10.1523/JNEUROSCI.5684-07.2008</pub-id><pub-id pub-id-type="pmid">18596161</pub-id></element-citation></ref><ref id="bib27"><element-citation publication-type="preprint"><person-group person-group-type="author"><name><surname>Fiete</surname><given-names>I</given-names></name><name><surname>Schwab</surname><given-names>DJ</given-names></name><name><surname>Tran</surname><given-names>NM</given-names></name></person-group><year iso-8601-date="2014">2014</year><article-title>A Binary Hopfield Network with Information Rate and Applications to Grid Cell Decoding</article-title><source>arXiv</source><ext-link ext-link-type="uri" xlink:href="https://arxiv.org/pdf/1407.6029.pdf">https://arxiv.org/pdf/1407.6029.pdf</ext-link></element-citation></ref><ref id="bib28"><element-citation publication-type="book"><person-group person-group-type="author"><name><surname>Fulton</surname><given-names>W</given-names></name><name><surname>Fulton</surname><given-names>MW</given-names></name></person-group><year iso-8601-date="1997">1997</year><source>Young Tableaux: With Applications to Representation Theory and Geometry</source><publisher-name>Cambridge University Press</publisher-name><pub-id pub-id-type="doi">10.1017/CBO9780511626241</pub-id></element-citation></ref><ref id="bib29"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Fyhn</surname><given-names>M</given-names></name><name><surname>Molden</surname><given-names>S</given-names></name><name><surname>Witter</surname><given-names>MP</given-names></name><name><surname>Moser</surname><given-names>EI</given-names></name><name><surname>Moser</surname><given-names>MB</given-names></name></person-group><year iso-8601-date="2004">2004</year><article-title>Spatial representation in the entorhinal cortex</article-title><source>Science</source><volume>305</volume><fpage>1258</fpage><lpage>1264</lpage><pub-id pub-id-type="doi">10.1126/science.1099901</pub-id><pub-id pub-id-type="pmid">15333832</pub-id></element-citation></ref><ref id="bib30"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Fyhn</surname><given-names>M</given-names></name><name><surname>Hafting</surname><given-names>T</given-names></name><name><surname>Treves</surname><given-names>A</given-names></name><name><surname>Moser</surname><given-names>MB</given-names></name><name><surname>Moser</surname><given-names>EI</given-names></name></person-group><year iso-8601-date="2007">2007</year><article-title>Hippocampal remapping and grid realignment in entorhinal cortex</article-title><source>Nature</source><volume>446</volume><fpage>190</fpage><lpage>194</lpage><pub-id pub-id-type="doi">10.1038/nature05601</pub-id><pub-id pub-id-type="pmid">17322902</pub-id></element-citation></ref><ref id="bib31"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Gardner</surname><given-names>E</given-names></name></person-group><year iso-8601-date="1988">1988</year><article-title>The space of interactions in neural network models</article-title><source>J Phys A</source><volume>21</volume><fpage>257</fpage><lpage>270</lpage><pub-id pub-id-type="doi">10.1088/0305-4470/21/1/030</pub-id></element-citation></ref><ref id="bib32"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Hafting</surname><given-names>T</given-names></name><name><surname>Fyhn</surname><given-names>M</given-names></name><name><surname>Molden</surname><given-names>S</given-names></name><name><surname>Moser</surname><given-names>MB</given-names></name><name><surname>Moser</surname><given-names>EI</given-names></name></person-group><year iso-8601-date="2005">2005</year><article-title>Microstructure of a spatial map in the entorhinal cortex</article-title><source>Nature</source><volume>436</volume><fpage>801</fpage><lpage>806</lpage><pub-id pub-id-type="doi">10.1038/nature03721</pub-id><pub-id pub-id-type="pmid">15965463</pub-id></element-citation></ref><ref id="bib33"><element-citation publication-type="confproc"><person-group person-group-type="author"><name><surname>Hardcastle</surname><given-names>K</given-names></name><name><surname>Ganguli</surname><given-names>S</given-names></name><name><surname>Giocomo</surname><given-names>L</given-names></name></person-group><year iso-8601-date="2014">2014</year><article-title>Error accumulation and landmark-based error correction in grid cells</article-title><conf-name>Neuroscience 2014</conf-name><conf-loc>Washington, DC, United States</conf-loc></element-citation></ref><ref id="bib34"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Harnett</surname><given-names>MT</given-names></name><name><surname>Williams</surname><given-names>SR</given-names></name><name><surname>Huber</surname><given-names>D</given-names></name><name><surname>O’Connor</surname><given-names>DH</given-names></name><name><surname>Svoboda</surname><given-names>K</given-names></name><name><surname>Magee</surname><given-names>JC</given-names></name></person-group><year iso-8601-date="2012">2012</year><article-title>Nonlinear dendritic integration of sensory and motor input during an active sensing task</article-title><source>Nature</source><volume>492</volume><fpage>247</fpage><lpage>251</lpage><pub-id pub-id-type="doi">10.1038/nature11601</pub-id><pub-id pub-id-type="pmid">23143335</pub-id></element-citation></ref><ref id="bib35"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Harnett</surname><given-names>MT</given-names></name><name><surname>Xu</surname><given-names>NL</given-names></name><name><surname>Magee</surname><given-names>JC</given-names></name><name><surname>Williams</surname><given-names>SR</given-names></name></person-group><year iso-8601-date="2013">2013</year><article-title>Potassium Channels Control the Interaction between Active Dendritic Integration Compartments in Layer 5 Cortical Pyramidal Neurons</article-title><source>Neuron</source><volume>79</volume><fpage>516</fpage><lpage>529</lpage><pub-id pub-id-type="doi">10.1016/j.neuron.2013.06.005</pub-id></element-citation></ref><ref id="bib36"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Hartley</surname><given-names>T</given-names></name><name><surname>Burgess</surname><given-names>N</given-names></name><name><surname>Lever</surname><given-names>C</given-names></name><name><surname>Cacucci</surname><given-names>F</given-names></name><name><surname>O’Keefe</surname><given-names>J</given-names></name></person-group><year iso-8601-date="2000">2000</year><article-title>Modeling place fields in terms of the cortical inputs to the hippocampus</article-title><source>Hippocampus</source><volume>10</volume><fpage>369</fpage><lpage>379</lpage><pub-id pub-id-type="doi">10.1002/1098-1063(2000)</pub-id><pub-id pub-id-type="pmid">10985276</pub-id></element-citation></ref><ref id="bib37"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Hegedüs</surname><given-names>T</given-names></name><name><surname>Megiddo</surname><given-names>N</given-names></name></person-group><year iso-8601-date="1996">1996</year><article-title>On the geometric separability of Boolean functions</article-title><source>Discrete Applied Mathematics</source><volume>66</volume><fpage>205</fpage><lpage>218</lpage><pub-id pub-id-type="doi">10.1016/0166-218X(94)00161-6</pub-id></element-citation></ref><ref id="bib38"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Honda</surname><given-names>Y</given-names></name><name><surname>Sasaki</surname><given-names>H</given-names></name><name><surname>Umitsu</surname><given-names>Y</given-names></name><name><surname>Ishizuka</surname><given-names>N</given-names></name></person-group><year iso-8601-date="2012">2012</year><article-title>Zonal distribution of perforant path cells in layer III of the entorhinal area projecting to CA1 and subiculum in the rat</article-title><source>Neuroscience Research</source><volume>74</volume><fpage>200</fpage><lpage>209</lpage><pub-id pub-id-type="doi">10.1016/j.neures.2012.10.005</pub-id><pub-id pub-id-type="pmid">23131426</pub-id></element-citation></ref><ref id="bib39"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Irmatov</surname><given-names>AA</given-names></name></person-group><year iso-8601-date="1993">1993</year><article-title>On the number of threshold functions</article-title><source>Diskretnaya Matematika</source><volume>5</volume><fpage>40</fpage><lpage>43</lpage></element-citation></ref><ref id="bib40"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Itskov</surname><given-names>V</given-names></name><name><surname>Abbott</surname><given-names>LF</given-names></name></person-group><year iso-8601-date="2008">2008</year><article-title>Pattern capacity of a perceptron for sparse discrimination</article-title><source>Physical Review Letters</source><volume>101</volume><elocation-id>018101</elocation-id><pub-id pub-id-type="doi">10.1103/PhysRevLett.101.018101</pub-id><pub-id pub-id-type="pmid">18764154</pub-id></element-citation></ref><ref id="bib41"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Kaneko</surname><given-names>M</given-names></name></person-group><year iso-8601-date="1997">1997</year><article-title>Poly-bernoulli numbers</article-title><source>J Théor Nr Bordx</source><volume>9</volume><fpage>221</fpage><lpage>228</lpage><pub-id pub-id-type="doi">10.5802/jtnb.197</pub-id></element-citation></ref><ref id="bib42"><element-citation publication-type="preprint"><person-group person-group-type="author"><name><surname>Kanitscheider</surname><given-names>I</given-names></name><name><surname>Fiete</surname><given-names>I</given-names></name></person-group><year iso-8601-date="2017">2017a</year><article-title>Emergence of Dynamically Reconfigurable Hippocampal Responses by Learning to Perform Probabilistic Spatial Reasoning</article-title><source>bioRxiv</source><pub-id pub-id-type="doi">10.1101/231159</pub-id></element-citation></ref><ref id="bib43"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Kanitscheider</surname><given-names>I</given-names></name><name><surname>Fiete</surname><given-names>I</given-names></name></person-group><year iso-8601-date="2017">2017b</year><article-title>Making our way through the world: Towards a functional understanding of the brain’s spatial circuits</article-title><source>Current Opinion in Systems Biology</source><volume>3</volume><fpage>186</fpage><lpage>194</lpage><pub-id pub-id-type="doi">10.1016/j.coisb.2017.04.008</pub-id></element-citation></ref><ref id="bib44"><element-citation publication-type="confproc"><person-group person-group-type="author"><name><surname>Kanitscheider</surname><given-names>I</given-names></name><name><surname>Fiete</surname><given-names>I</given-names></name></person-group><year iso-8601-date="2017">2017c</year><article-title>Training recurrent networks to generate hypotheses about how the brain solves hard navigation problems</article-title><conf-name>NIPS</conf-name><fpage>4529</fpage><lpage>4538</lpage></element-citation></ref><ref id="bib45"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Killian</surname><given-names>NJ</given-names></name><name><surname>Jutras</surname><given-names>MJ</given-names></name><name><surname>Buffalo</surname><given-names>EA</given-names></name></person-group><year iso-8601-date="2012">2012</year><article-title>A map of visual space in the primate entorhinal cortex</article-title><source>Nature</source><volume>491</volume><fpage>761</fpage><lpage>764</lpage><pub-id pub-id-type="doi">10.1038/nature11587</pub-id><pub-id pub-id-type="pmid">23103863</pub-id></element-citation></ref><ref id="bib46"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Klukas</surname><given-names>M</given-names></name><name><surname>Lewis</surname><given-names>M</given-names></name><name><surname>Fiete</surname><given-names>I</given-names></name></person-group><year iso-8601-date="2020">2020</year><article-title>Efficient and flexible representation of higher-dimensional cognitive variables with grid cells</article-title><source>PLOS Computational Biology</source><volume>16</volume><elocation-id>e1007796</elocation-id><pub-id pub-id-type="doi">10.1371/journal.pcbi.1007796</pub-id><pub-id pub-id-type="pmid">32343687</pub-id></element-citation></ref><ref id="bib47"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Kropff</surname><given-names>E</given-names></name><name><surname>Treves</surname><given-names>A</given-names></name></person-group><year iso-8601-date="2008">2008</year><article-title>The emergence of grid cells: Intelligent design or just adaptation?</article-title><source>Hippocampus</source><volume>18</volume><fpage>1256</fpage><lpage>1269</lpage><pub-id pub-id-type="doi">10.1002/hipo.20520</pub-id><pub-id pub-id-type="pmid">19021261</pub-id></element-citation></ref><ref id="bib48"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Larkum</surname><given-names>ME</given-names></name><name><surname>Waters</surname><given-names>J</given-names></name><name><surname>Sakmann</surname><given-names>B</given-names></name><name><surname>Helmchen</surname><given-names>F</given-names></name></person-group><year iso-8601-date="2007">2007</year><article-title>Dendritic Spikes in Apical Dendrites of Neocortical Layer 2/3 Pyramidal Neurons</article-title><source>The Journal of Neuroscience</source><volume>27</volume><fpage>8999</fpage><lpage>9008</lpage><pub-id pub-id-type="doi">10.1523/JNEUROSCI.1717-07.2007</pub-id><pub-id pub-id-type="pmid">17715337</pub-id></element-citation></ref><ref id="bib49"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Larkum</surname><given-names>ME</given-names></name><name><surname>Nevian</surname><given-names>T</given-names></name><name><surname>Sandler</surname><given-names>M</given-names></name><name><surname>Polsky</surname><given-names>A</given-names></name><name><surname>Schiller</surname><given-names>J</given-names></name></person-group><year iso-8601-date="2009">2009</year><article-title>Synaptic Integration in Tuft Dendrites of Layer 5 Pyramidal Neurons: A New Unifying Principle</article-title><source>Science</source><volume>325</volume><fpage>756</fpage><lpage>760</lpage><pub-id pub-id-type="doi">10.1126/science.1171958</pub-id></element-citation></ref><ref id="bib50"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Lee</surname><given-names>JS</given-names></name><name><surname>Briguglio</surname><given-names>JJ</given-names></name><name><surname>Cohen</surname><given-names>JD</given-names></name><name><surname>Romani</surname><given-names>S</given-names></name><name><surname>Lee</surname><given-names>AK</given-names></name></person-group><year iso-8601-date="2020">2020</year><article-title>The Statistical Structure of the Hippocampal Code for Space as a Function of Time, Context, and Value</article-title><source>Cell</source><volume>183</volume><fpage>620</fpage><lpage>635</lpage><pub-id pub-id-type="doi">10.1016/j.cell.2020.09.024</pub-id><pub-id pub-id-type="pmid">33035454</pub-id></element-citation></ref><ref id="bib51"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Leonard</surname><given-names>JJ</given-names></name><name><surname>Durrant-Whyte</surname><given-names>HF</given-names></name></person-group><year iso-8601-date="1991">1991</year><article-title>Mobile robot localization by tracking geometric beacons</article-title><source>IEEE Trans Robot Autom</source><volume>7</volume><fpage>376</fpage><lpage>382</lpage><pub-id pub-id-type="doi">10.1109/70.88147</pub-id></element-citation></ref><ref id="bib52"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Mathis</surname><given-names>A</given-names></name><name><surname>Herz</surname><given-names>AVM</given-names></name><name><surname>Stemmler</surname><given-names>M</given-names></name></person-group><year iso-8601-date="2012">2012</year><article-title>Optimal Population Codes for Space: Grid Cells Outperform Place Cells</article-title><source>Neural Computation</source><volume>24</volume><fpage>2280</fpage><lpage>2317</lpage><pub-id pub-id-type="doi">10.1162/NECO00319</pub-id><pub-id pub-id-type="pmid">22594833</pub-id></element-citation></ref><ref id="bib53"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>McNaughton</surname><given-names>BL</given-names></name><name><surname>Battaglia</surname><given-names>FP</given-names></name><name><surname>Jensen</surname><given-names>O</given-names></name><name><surname>Moser</surname><given-names>EI</given-names></name><name><surname>Moser</surname><given-names>MB</given-names></name></person-group><year iso-8601-date="2006">2006</year><article-title>Path integration and the neural basis of the ’cognitive map</article-title><source>Nature Reviews. Neuroscience</source><volume>7</volume><fpage>663</fpage><lpage>678</lpage><pub-id pub-id-type="doi">10.1038/nrn1932</pub-id><pub-id pub-id-type="pmid">16858394</pub-id></element-citation></ref><ref id="bib54"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Milford</surname><given-names>MJ</given-names></name><name><surname>Wyeth</surname><given-names>GF</given-names></name><name><surname>Prasser</surname><given-names>D</given-names></name></person-group><year iso-8601-date="2004">2004</year><article-title>RatSLAM: a hippocampal model for simultaneous localization and mapping</article-title><source>In: ICRA</source><volume>1</volume><fpage>403</fpage><lpage>408</lpage><pub-id pub-id-type="doi">10.1109/ROBOT.2004.1307183</pub-id></element-citation></ref><ref id="bib55"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Monaco</surname><given-names>JD</given-names></name><name><surname>Abbott</surname><given-names>LF</given-names></name><name><surname>Abbott</surname><given-names>LF</given-names></name></person-group><year iso-8601-date="2011">2011</year><article-title>Modular realignment of entorhinal grid cell activity as a basis for hippocampal remapping</article-title><source>The Journal of Neuroscience</source><volume>31</volume><fpage>9414</fpage><lpage>9425</lpage><pub-id pub-id-type="doi">10.1523/JNEUROSCI.1433-11.2011</pub-id><pub-id pub-id-type="pmid">21697391</pub-id></element-citation></ref><ref id="bib56"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Monasson</surname><given-names>R</given-names></name><name><surname>Rosay</surname><given-names>S</given-names></name></person-group><year iso-8601-date="2013">2013</year><article-title>Crosstalk and transitions between multiple spatial maps in an attractor neural network model of the hippocampus: Phase diagram</article-title><source>Physical Review. E</source><volume>87</volume><elocation-id>62813</elocation-id><pub-id pub-id-type="doi">10.1103/PhysRevE.87.062813</pub-id></element-citation></ref><ref id="bib57"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Mosheiff</surname><given-names>N</given-names></name><name><surname>Burak</surname><given-names>Y</given-names></name></person-group><year iso-8601-date="2019">2019</year><article-title>Velocity coupling of grid cell modules enables stable embedding of a low dimensional variable in a high dimensional neural attractor</article-title><source>eLife</source><volume>8</volume><elocation-id>e48494</elocation-id><pub-id pub-id-type="doi">10.7554/eLife.48494</pub-id><pub-id pub-id-type="pmid">31469365</pub-id></element-citation></ref><ref id="bib58"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Muller</surname><given-names>R</given-names></name><name><surname>Kubie</surname><given-names>J</given-names></name><name><surname>Ranck</surname><given-names>J</given-names></name></person-group><year iso-8601-date="1987">1987</year><article-title>Spatial firing patterns of hippocampal complex-spike cells in a fixed environment</article-title><source>Journal of Neuroscience</source><volume>7</volume><fpage>1935</fpage><lpage>1950</lpage><pub-id pub-id-type="doi">10.1523/JNEUROSCI.07-07-01935.1987</pub-id><pub-id pub-id-type="pmid">3612225</pub-id></element-citation></ref><ref id="bib59"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>O’Keefe</surname><given-names>J</given-names></name><name><surname>Dostrovsky</surname><given-names>J</given-names></name></person-group><year iso-8601-date="1971">1971</year><article-title>The hippocampus as a spatial map Preliminary evidence from unit activity in the freely-moving rat</article-title><source>Brain Research</source><volume>34</volume><fpage>171</fpage><lpage>175</lpage><pub-id pub-id-type="doi">10.1016/0006-8993(71)90358-1</pub-id><pub-id pub-id-type="pmid">5124915</pub-id></element-citation></ref><ref id="bib60"><element-citation publication-type="book"><person-group person-group-type="author"><name><surname>O’Keefe</surname><given-names>J</given-names></name><name><surname>Nadel</surname><given-names>L</given-names></name></person-group><year iso-8601-date="1978">1978</year><source>The Hippocampus as a Cognitive Map</source><publisher-name>Clarendon Press</publisher-name></element-citation></ref><ref id="bib61"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Park</surname><given-names>E</given-names></name><name><surname>Dvorak</surname><given-names>D</given-names></name><name><surname>Fenton</surname><given-names>AA</given-names></name></person-group><year iso-8601-date="2011">2011</year><article-title>Ensemble place codes in hippocampus: Ca1, ca3, and dentate gyrus place cells have multiple place fields in large environments</article-title><source>PLOS ONE</source><volume>6</volume><elocation-id>e22349</elocation-id><pub-id pub-id-type="doi">10.1371/journal.pone.0022349</pub-id><pub-id pub-id-type="pmid">21789250</pub-id></element-citation></ref><ref id="bib62"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Pedregosa</surname><given-names>F</given-names></name><name><surname>Varoquaux</surname><given-names>G</given-names></name><name><surname>Gramfort</surname><given-names>A</given-names></name><name><surname>Michel</surname><given-names>V</given-names></name><name><surname>Thirion</surname><given-names>B</given-names></name><name><surname>Grisel</surname><given-names>O</given-names></name><name><surname>Blondel</surname><given-names>M</given-names></name><name><surname>Prettenhofer</surname><given-names>P</given-names></name><name><surname>Weiss</surname><given-names>R</given-names></name><name><surname>Dubourg</surname><given-names>V</given-names></name><name><surname>Vanderplas</surname><given-names>J</given-names></name><name><surname>Passos</surname><given-names>A</given-names></name><name><surname>Cournapeau</surname><given-names>D</given-names></name><name><surname>Brucher</surname><given-names>M</given-names></name><name><surname>Perrot</surname><given-names>M</given-names></name><name><surname>Duchesnay</surname><given-names>E</given-names></name></person-group><year iso-8601-date="2011">2011</year><article-title>Scikit-learn: Machine Learning in Python</article-title><source>Journal of Machine Learning Research</source><volume>12</volume><fpage>2825</fpage><lpage>2830</lpage></element-citation></ref><ref id="bib63"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Peled</surname><given-names>UN</given-names></name><name><surname>Simeone</surname><given-names>B</given-names></name></person-group><year iso-8601-date="1985">1985</year><article-title>Polynomial-time algorithms for regular set-covering and threshold synthesis</article-title><source>Discrete Applied Mathematics</source><volume>12</volume><fpage>57</fpage><lpage>69</lpage><pub-id pub-id-type="doi">10.1016/0166-218X(85)90040-X</pub-id></element-citation></ref><ref id="bib64"><element-citation publication-type="book"><person-group person-group-type="author"><name><surname>Platt</surname><given-names>J</given-names></name></person-group><year iso-8601-date="1998">1998</year><source>Sequential Minimal Optimization: A Fast Algorithm for Training Support Vector Machines</source><publisher-name>Microsoft Research Technical Report MSR-TR-98-14</publisher-name></element-citation></ref><ref id="bib65"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Poirazi</surname><given-names>P</given-names></name><name><surname>Mel</surname><given-names>BW</given-names></name></person-group><year iso-8601-date="2001">2001</year><article-title>Impact of Active Dendrites and Structural Plasticity on the Memory Capacity of Neural Tissue</article-title><source>Neuron</source><volume>29</volume><fpage>779</fpage><lpage>796</lpage><pub-id pub-id-type="doi">10.1016/S0896-6273(01)00252-5</pub-id><pub-id pub-id-type="pmid">11301036</pub-id></element-citation></ref><ref id="bib66"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Polsky</surname><given-names>A</given-names></name><name><surname>Mel</surname><given-names>BW</given-names></name><name><surname>Schiller</surname><given-names>J</given-names></name></person-group><year iso-8601-date="2004">2004</year><article-title>Computational subunits in thin dendrites of pyramidal cells</article-title><source>Nature Neuroscience</source><volume>7</volume><fpage>621</fpage><lpage>627</lpage><pub-id pub-id-type="doi">10.1038/nn1253</pub-id><pub-id pub-id-type="pmid">15156147</pub-id></element-citation></ref><ref id="bib67"><element-citation publication-type="preprint"><person-group person-group-type="author"><name><surname>Postnikov</surname><given-names>A</given-names></name></person-group><year iso-8601-date="2006">2006</year><article-title>Total Positivity, Grassmannians, and Networks</article-title><source>arXiv</source><ext-link ext-link-type="uri" xlink:href="https://arxiv.org/abs/math/0609764">https://arxiv.org/abs/math/0609764</ext-link></element-citation></ref><ref id="bib68"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Rich</surname><given-names>PD</given-names></name><name><surname>Liaw</surname><given-names>HP</given-names></name><name><surname>Lee</surname><given-names>AK</given-names></name></person-group><year iso-8601-date="2014">2014</year><article-title>Place cells Large environments reveal the statistical structure governing hippocampal representations</article-title><source>Science</source><volume>345</volume><fpage>814</fpage><lpage>817</lpage><pub-id pub-id-type="doi">10.1126/science.1255635</pub-id><pub-id pub-id-type="pmid">25124440</pub-id></element-citation></ref><ref id="bib69"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Rosenblatt</surname><given-names>F</given-names></name></person-group><year iso-8601-date="1958">1958</year><article-title>The perceptron: a probabilistic model for information storage and organization in the brain</article-title><source>Psychological Review</source><volume>65</volume><fpage>386</fpage><lpage>408</lpage><pub-id pub-id-type="doi">10.1037/h0042519</pub-id><pub-id pub-id-type="pmid">13602029</pub-id></element-citation></ref><ref id="bib70"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Samsonovich</surname><given-names>A</given-names></name><name><surname>McNaughton</surname><given-names>BL</given-names></name></person-group><year iso-8601-date="1997">1997</year><article-title>Path integration and cognitive mapping in a continuous attractor neural network model</article-title><source>The Journal of Neuroscience</source><volume>17</volume><fpage>5900</fpage><lpage>5920</lpage><pub-id pub-id-type="doi">10.1523/JNEUROSCI.17-15-05900.1997</pub-id><pub-id pub-id-type="pmid">9221787</pub-id></element-citation></ref><ref id="bib71"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Sanders</surname><given-names>H</given-names></name><name><surname>Wilson</surname><given-names>MA</given-names></name><name><surname>Gershman</surname><given-names>SJ</given-names></name></person-group><year iso-8601-date="2020">2020</year><article-title>Hippocampal remapping as hidden state inference</article-title><source>eLife</source><volume>06</volume><elocation-id>9</elocation-id><pub-id pub-id-type="doi">10.7554/eLife.51140</pub-id></element-citation></ref><ref id="bib72"><element-citation publication-type="book"><person-group person-group-type="author"><name><surname>Shepard</surname><given-names>G</given-names></name></person-group><year iso-8601-date="1998">1998</year><source>The Synaptic Organization of the Brain</source><publisher-loc>New York</publisher-loc><publisher-name>Oxford Univ Press Inc</publisher-name></element-citation></ref><ref id="bib73"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Solstad</surname><given-names>T</given-names></name><name><surname>Moser</surname><given-names>EI</given-names></name><name><surname>Einevoll</surname><given-names>GT</given-names></name></person-group><year iso-8601-date="2006">2006</year><article-title>From grid cells to place cells: A mathematical model</article-title><source>Hippocampus</source><volume>16</volume><fpage>1026</fpage><lpage>1031</lpage><pub-id pub-id-type="doi">10.1002/hipo.20244</pub-id><pub-id pub-id-type="pmid">17094145</pub-id></element-citation></ref><ref id="bib74"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Sompolinsky</surname><given-names>H</given-names></name><name><surname>Kanter</surname><given-names>I</given-names></name></person-group><year iso-8601-date="1986">1986</year><article-title>Temporal Association in Asymmetric Neural Networks</article-title><source>Physical Review Letters</source><volume>57</volume><fpage>2861</fpage><lpage>2864</lpage><pub-id pub-id-type="doi">10.1103/PhysRevLett.57.2861</pub-id><pub-id pub-id-type="pmid">10033885</pub-id></element-citation></ref><ref id="bib75"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Spruston</surname><given-names>N</given-names></name></person-group><year iso-8601-date="2008">2008</year><article-title>Pyramidal neurons: dendritic structure and synaptic integration</article-title><source>Nature Reviews Neuroscience</source><volume>9</volume><fpage>206</fpage><lpage>221</lpage><pub-id pub-id-type="doi">10.1038/nrn2286</pub-id><pub-id pub-id-type="pmid">18270515</pub-id></element-citation></ref><ref id="bib76"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Sreenivasan</surname><given-names>S</given-names></name><name><surname>Fiete</surname><given-names>I</given-names></name></person-group><year iso-8601-date="2011">2011</year><article-title>Grid cells generate an analog error-correcting code for singularly precise neural computation</article-title><source>Nature Neuroscience</source><volume>14</volume><fpage>1330</fpage><lpage>1337</lpage><pub-id pub-id-type="doi">10.1038/nn.2901</pub-id><pub-id pub-id-type="pmid">21909090</pub-id></element-citation></ref><ref id="bib77"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Stachenfeld</surname><given-names>KL</given-names></name><name><surname>Botvinick</surname><given-names>MM</given-names></name><name><surname>Gershman</surname><given-names>SJ</given-names></name></person-group><year iso-8601-date="2017">2017</year><article-title>The hippocampus as a predictive map</article-title><source>Nature Neuroscience</source><volume>20</volume><fpage>1643</fpage><lpage>1653</lpage><pub-id pub-id-type="doi">10.1038/nn.4650</pub-id><pub-id pub-id-type="pmid">28967910</pub-id></element-citation></ref><ref id="bib78"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Stensola</surname><given-names>H</given-names></name><name><surname>Stensola</surname><given-names>T</given-names></name><name><surname>Solstad</surname><given-names>T</given-names></name><name><surname>Frøland</surname><given-names>K</given-names></name><name><surname>Moser</surname><given-names>MB</given-names></name><name><surname>Moser</surname><given-names>EI</given-names></name></person-group><year iso-8601-date="2012">2012</year><article-title>The entorhinal grid map is discretized</article-title><source>Nature</source><volume>492</volume><fpage>72</fpage><lpage>78</lpage><pub-id pub-id-type="doi">10.1038/nature11649</pub-id><pub-id pub-id-type="pmid">23222610</pub-id></element-citation></ref><ref id="bib79"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Steward</surname><given-names>O</given-names></name><name><surname>Scoville</surname><given-names>SA</given-names></name></person-group><year iso-8601-date="1976">1976</year><article-title>Cells of origin of entorhinal cortical afferents to the hippocampus and fascia dentata of the rat</article-title><source>The Journal of Comparative Neurology</source><volume>169</volume><fpage>347</fpage><lpage>370</lpage><pub-id pub-id-type="doi">10.1002/cne.901690306</pub-id><pub-id pub-id-type="pmid">972204</pub-id></element-citation></ref><ref id="bib80"><element-citation publication-type="book"><person-group person-group-type="author"><name><surname>Stuart</surname><given-names>G</given-names></name><name><surname>Spruston</surname><given-names>N</given-names></name><name><surname>Hausser</surname><given-names>M</given-names></name></person-group><year iso-8601-date="2016">2016</year><source>Dendrites</source><edition>Third edn</edition><publisher-name>Oxford University Press</publisher-name><pub-id pub-id-type="doi">10.1093/acprof:oso/9780198745273.001.0001</pub-id></element-citation></ref><ref id="bib81"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Suh</surname><given-names>J</given-names></name><name><surname>Rivest</surname><given-names>AJ</given-names></name><name><surname>Nakashiba</surname><given-names>T</given-names></name><name><surname>Tominaga</surname><given-names>T</given-names></name><name><surname>Tonegawa</surname><given-names>S</given-names></name></person-group><year iso-8601-date="2011">2011</year><article-title>Entorhinal cortex layer III input to the hippocampus is crucial for temporal association memory</article-title><source>Science</source><volume>334</volume><fpage>1415</fpage><lpage>1420</lpage><pub-id pub-id-type="doi">10.1126/science.1210125</pub-id><pub-id pub-id-type="pmid">22052975</pub-id></element-citation></ref><ref id="bib82"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Tolman</surname><given-names>EC</given-names></name></person-group><year iso-8601-date="1948">1948</year><article-title>Cognitive maps in rats and men</article-title><source>Psychological Review</source><volume>55</volume><fpage>189</fpage><lpage>208</lpage><pub-id pub-id-type="doi">10.1037/h0061626</pub-id><pub-id pub-id-type="pmid">18870876</pub-id></element-citation></ref><ref id="bib83"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Tsodyks</surname><given-names>MV</given-names></name><name><surname>Skaggs</surname><given-names>WE</given-names></name><name><surname>Sejnowski</surname><given-names>TJ</given-names></name><name><surname>McNaughton</surname><given-names>BL</given-names></name></person-group><year iso-8601-date="1996">1996</year><article-title>Population dynamics and theta rhythm phase precession of hippocampal place cell firing: a spiking neuron model</article-title><source>Hippocampus</source><volume>6</volume><fpage>271</fpage><lpage>280</lpage><pub-id pub-id-type="doi">10.1002/(SICI)1098-1063(1996)6:33.0.CO;2-Q</pub-id><pub-id pub-id-type="pmid">8841826</pub-id></element-citation></ref><ref id="bib84"><element-citation publication-type="book"><person-group person-group-type="author"><name><surname>Vapnik</surname><given-names>VN</given-names></name></person-group><year iso-8601-date="1998">1998</year><source>Statistical Learning Theory</source><publisher-name>Wiley</publisher-name></element-citation></ref><ref id="bib85"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Welinder</surname><given-names>PE</given-names></name><name><surname>Burak</surname><given-names>Y</given-names></name><name><surname>Fiete</surname><given-names>IR</given-names></name></person-group><year iso-8601-date="2008">2008</year><article-title>Grid cells: The position code, neural network models of activity, and the problem of learning</article-title><source>Hippocampus</source><volume>18</volume><fpage>1283</fpage><lpage>1300</lpage><pub-id pub-id-type="doi">10.1002/hipo.20519</pub-id><pub-id pub-id-type="pmid">19021263</pub-id></element-citation></ref><ref id="bib86"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Whittington</surname><given-names>JCR</given-names></name><name><surname>Muller</surname><given-names>TH</given-names></name><name><surname>Mark</surname><given-names>S</given-names></name><name><surname>Chen</surname><given-names>G</given-names></name><name><surname>Barry</surname><given-names>C</given-names></name><name><surname>Burgess</surname><given-names>N</given-names></name><name><surname>Behrens</surname><given-names>TEJ</given-names></name></person-group><year iso-8601-date="2020">2020</year><article-title>The Tolman-Eichenbaum Machine: Unifying Space and Relational Memory through Generalization in the Hippocampal Formation</article-title><source>Cell</source><volume>183</volume><fpage>1249</fpage><lpage>1263</lpage><pub-id pub-id-type="doi">10.1016/j.cell.2020.10.024</pub-id><pub-id pub-id-type="pmid">33181068</pub-id></element-citation></ref><ref id="bib87"><element-citation publication-type="book"><person-group person-group-type="author"><name><surname>Widloski</surname><given-names>J</given-names></name><name><surname>Fiete</surname><given-names>I</given-names></name></person-group><year iso-8601-date="2014">2014</year><chapter-title>How does the brain solve the computational problems of spatial navigation?</chapter-title><person-group person-group-type="editor"><name><surname>Derdikman</surname><given-names>D</given-names></name><name><surname>Knierim</surname><given-names>JJ</given-names></name></person-group><source>Space, and Timeand Thememinipthermation Shippocampaformation</source><publisher-name>Springer</publisher-name><fpage>373</fpage><lpage>407</lpage><pub-id pub-id-type="doi">10.1007/978-3-7091-1292-214</pub-id></element-citation></ref><ref id="bib88"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Wilson</surname><given-names>M</given-names></name><name><surname>McNaughton</surname><given-names>B</given-names></name></person-group><year iso-8601-date="1993">1993</year><article-title>Dynamics of the hippocampal ensemble code for space</article-title><source>Science</source><volume>261</volume><fpage>1055</fpage><lpage>1058</lpage><pub-id pub-id-type="doi">10.1126/science.8351520</pub-id><pub-id pub-id-type="pmid">8351520</pub-id></element-citation></ref><ref id="bib89"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Witter</surname><given-names>MP</given-names></name><name><surname>Groenewegen</surname><given-names>HJ</given-names></name></person-group><year iso-8601-date="1984">1984</year><article-title>Laminar origin and septotemporal distribution of entorhinal and perirhinal projections to the hippocampus in the cat</article-title><source>The Journal of Comparative Neurology</source><volume>224</volume><fpage>371</fpage><lpage>385</lpage><pub-id pub-id-type="doi">10.1002/cne.902240305</pub-id><pub-id pub-id-type="pmid">6715585</pub-id></element-citation></ref><ref id="bib90"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Witter</surname><given-names>MP</given-names></name><name><surname>Amaral</surname><given-names>DG</given-names></name></person-group><year iso-8601-date="1991">1991</year><article-title>Entorhinal cortex of the monkey: V. Projections to the dentate gyrus, hippocampus, and subicular complex</article-title><source>The Journal of Comparative Neurology</source><volume>307</volume><fpage>437</fpage><lpage>459</lpage><pub-id pub-id-type="doi">10.1002/cne.903070308</pub-id><pub-id pub-id-type="pmid">1713237</pub-id></element-citation></ref><ref id="bib91"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Witter</surname><given-names>MP</given-names></name><name><surname>Wouterlood</surname><given-names>FG</given-names></name><name><surname>Naber</surname><given-names>PA</given-names></name><name><surname>Van Haeften</surname><given-names>T</given-names></name></person-group><year iso-8601-date="2000">2000</year><article-title>Anatomical organization of the parahippocampal-hippocampal network</article-title><source>Annals of the New York Academy of Sciences</source><volume>911</volume><fpage>1</fpage><lpage>24</lpage><pub-id pub-id-type="doi">10.1111/j.1749-6632.2000.tb06716.x</pub-id><pub-id pub-id-type="pmid">10911864</pub-id></element-citation></ref><ref id="bib92"><element-citation publication-type="book"><person-group person-group-type="author"><name><surname>Yim</surname><given-names>MY</given-names></name><name><surname>Taillefumier</surname><given-names>T</given-names></name><name><surname>Fiete</surname><given-names>IR</given-names></name></person-group><year iso-8601-date="2019">2019</year><source>Mechanistic Models of Place Cell Statistics in Large Environments</source><publisher-name>SfN Abstract</publisher-name></element-citation></ref><ref id="bib93"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Yoon</surname><given-names>K</given-names></name><name><surname>Buice</surname><given-names>MA</given-names></name><name><surname>Barry</surname><given-names>C</given-names></name><name><surname>Hayman</surname><given-names>R</given-names></name><name><surname>Burgess</surname><given-names>N</given-names></name><name><surname>Fiete</surname><given-names>IR</given-names></name></person-group><year iso-8601-date="2013">2013</year><article-title>Specific evidence of low-dimensional continuous attractor dynamics in grid cells</article-title><source>Nature Neuroscience</source><volume>16</volume><fpage>1077</fpage><lpage>1084</lpage><pub-id pub-id-type="doi">10.1038/nn.3450</pub-id><pub-id pub-id-type="pmid">23852111</pub-id></element-citation></ref><ref id="bib94"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Yoon</surname><given-names>K</given-names></name><name><surname>Lewallen</surname><given-names>S</given-names></name><name><surname>Kinkhabwala</surname><given-names>AA</given-names></name><name><surname>Tank</surname><given-names>DW</given-names></name><name><surname>Fiete</surname><given-names>IR</given-names></name></person-group><year iso-8601-date="2016">2016</year><article-title>Grid Cell Responses in 1D Environments Assessed as Slices through a 2D Lattice</article-title><source>Neuron</source><volume>89</volume><fpage>1086</fpage><lpage>1099</lpage><pub-id pub-id-type="doi">10.1016/j.neuron.2016.01.039</pub-id><pub-id pub-id-type="pmid">26898777</pub-id></element-citation></ref><ref id="bib95"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Ziv</surname><given-names>Y</given-names></name><name><surname>Burns</surname><given-names>LD</given-names></name><name><surname>Cocker</surname><given-names>ED</given-names></name><name><surname>Hamel</surname><given-names>EO</given-names></name><name><surname>Ghosh</surname><given-names>KK</given-names></name><name><surname>Kitch</surname><given-names>LJ</given-names></name><name><surname>Gamal</surname><given-names>AE</given-names></name><name><surname>Schnitzer</surname><given-names>MJ</given-names></name></person-group><year iso-8601-date="2013">2013</year><article-title>Long-term dynamics of CA1 hippocampal place codes</article-title><source>Nature Neuroscience</source><volume>16</volume><fpage>264</fpage><lpage>266</lpage><pub-id pub-id-type="doi">10.1038/nn.3329</pub-id></element-citation></ref><ref id="bib96"><element-citation publication-type="book"><person-group person-group-type="author"><name><surname>Zuev</surname><given-names>YA</given-names></name></person-group><year iso-8601-date="1989">1989</year><source>Asymptotics of the Logarithm of the Number of Threshold Functions of the Algebra of Logic</source><publisher-name>Walter de Gruyter</publisher-name></element-citation></ref></ref-list><app-group><app id="appendix-1"><title>Appendix 1</title><sec id="s8" sec-type="appendix"><title>The geometry of the grid code</title><p>In this Appendix, we introduce the geometrical framework for the study of place cells modeled as perceptrons reading out the activity of grid cells. First, we define the space of grid-like inputs via symmetry considerations and without considering explicitly their relation to spatial locations. Second, we discuss linearly separable dichotomies in the space of grid-like inputs, whose geometric arrangements are not in general position. Third, we show that the geometry of grid-like inputs is that of a polytope that can be decomposed as an orthogonal product of simplices.</p></sec><sec id="s9" sec-type="appendix"><title>The space of grid-like inputs</title><p>We model grid-cell activity via <inline-formula><mml:math id="inf298"><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:mn>0</mml:mn><mml:mo>,</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">}</mml:mo></mml:mrow></mml:math></inline-formula> spatial patterns <inline-formula><mml:math id="inf299"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mi mathvariant="bold-italic">r</mml:mi></mml:mrow></mml:mstyle></mml:math></inline-formula> that take value 1 whenever the cell is active and take value 0 otherwise (<xref ref-type="bibr" rid="bib29">Fyhn et al., 2004</xref>; <xref ref-type="bibr" rid="bib26">Fiete et al., 2008</xref>). To model the periodic spatial response of grid cells, we assume that the activity pattern of a grid cell defines a periodic lattice with integer period <inline-formula><mml:math id="inf300"><mml:mi>λ</mml:mi></mml:math></inline-formula>. For simplicity, we consider 1D model for which the spatial patterns <inline-formula><mml:math id="inf301"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mi mathvariant="bold-italic">r</mml:mi></mml:mrow></mml:mstyle></mml:math></inline-formula> are <inline-formula><mml:math id="inf302"><mml:mi>λ</mml:mi></mml:math></inline-formula>-periodic vectors and for which the set of activity patterns is given by the lattices <inline-formula><mml:math id="inf303"><mml:mrow><mml:mi>i</mml:mi><mml:mo>+</mml:mo><mml:mrow><mml:mi>λ</mml:mi><mml:mo>⁢</mml:mo><mml:mi>ℤ</mml:mi></mml:mrow></mml:mrow></mml:math></inline-formula>, <inline-formula><mml:math id="inf304"><mml:mrow><mml:mn>1</mml:mn><mml:mo>≤</mml:mo><mml:mi>i</mml:mi><mml:mo>≤</mml:mo><mml:mi>L</mml:mi></mml:mrow></mml:math></inline-formula>. We refer to the index <inline-formula><mml:math id="inf305"><mml:mi>i</mml:mi></mml:math></inline-formula> as the phase index of the grid-cell spatial pattern. Our key results will generalize to lattices of arbitrary dimension <inline-formula><mml:math id="inf306"><mml:mi>n</mml:mi></mml:math></inline-formula>, for which the set of spatial patterns is given by the hypercube lattices <inline-formula><mml:math id="inf307"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mi mathvariant="bold-italic">i</mml:mi><mml:mo>+</mml:mo><mml:msup><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mi>λ</mml:mi><mml:mrow><mml:mi mathvariant="double-struck">Z</mml:mi></mml:mrow></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:msup></mml:mrow></mml:mstyle></mml:math></inline-formula>, with phase indices <inline-formula><mml:math id="inf308"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mi mathvariant="bold-italic">i</mml:mi></mml:mrow></mml:mstyle></mml:math></inline-formula> in <inline-formula><mml:math id="inf309"><mml:msup><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mi mathvariant="normal">…</mml:mi><mml:mo>,</mml:mo><mml:mi>λ</mml:mi><mml:mo stretchy="false">}</mml:mo></mml:mrow><mml:mi>n</mml:mi></mml:msup></mml:math></inline-formula>.</p><p>Within a population, grid cells can have distinct periods and arbitrary phases. To model this heterogeneity, we consider a population of grid cells with <inline-formula><mml:math id="inf310"><mml:mi>M</mml:mi></mml:math></inline-formula> possible integer spatial periods <inline-formula><mml:math id="inf311"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mi mathvariant="bold-italic">λ</mml:mi><mml:mo>=</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mi>M</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mstyle></mml:math></inline-formula>, thereby defining <inline-formula><mml:math id="inf312"><mml:mi>M</mml:mi></mml:math></inline-formula> modules of grid cells. We assume that each module comprises all possible grid-cell-activity patterns, that is, <inline-formula><mml:math id="inf313"><mml:msub><mml:mi>λ</mml:mi><mml:mi>m</mml:mi></mml:msub></mml:math></inline-formula> grid cells labeled by the phase indices <inline-formula><mml:math id="inf314"><mml:mi>i</mml:mi></mml:math></inline-formula>, <inline-formula><mml:math id="inf315"><mml:mrow><mml:mn>1</mml:mn><mml:mo>≤</mml:mo><mml:mi>i</mml:mi><mml:mo>≤</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mi>m</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula>. For convenience, we index each cell by its module index <inline-formula><mml:math id="inf316"><mml:mi>m</mml:mi></mml:math></inline-formula> and its phase index <inline-formula><mml:math id="inf317"><mml:mi>i</mml:mi></mml:math></inline-formula>, <inline-formula><mml:math id="inf318"><mml:mrow><mml:mn>1</mml:mn><mml:mo>≤</mml:mo><mml:mi>i</mml:mi><mml:mo>≤</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mi>m</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula>, so that the actual component index of cell <inline-formula><mml:math id="inf319"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>m</mml:mi><mml:mo>,</mml:mo><mml:mi>i</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula>, <inline-formula><mml:math id="inf320"><mml:mrow><mml:mn>1</mml:mn><mml:mo>≤</mml:mo><mml:mi>i</mml:mi><mml:mo>≤</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mi>m</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula>, is <inline-formula><mml:math id="inf321"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:munder><mml:mo>∑</mml:mo><mml:mrow><mml:mi>n</mml:mi><mml:mo>§lt;</mml:mo><mml:mi>m</mml:mi></mml:mrow></mml:munder><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mi>m</mml:mi></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:mi>i</mml:mi></mml:mrow></mml:mstyle></mml:math></inline-formula>. By construction of our model, at every spatial position, each module has a single active cell. Thus, at each spatial position, the grid-like input is specified by <inline-formula><mml:math id="inf322"><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:mn>0</mml:mn><mml:mo>,</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">}</mml:mo></mml:mrow></mml:math></inline-formula> column vectors <inline-formula><mml:math id="inf323"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msub><mml:mi mathvariant="bold-italic">c</mml:mi><mml:mrow><mml:mi mathvariant="bold-italic">λ</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mstyle></mml:math></inline-formula> of dimension <inline-formula><mml:math id="inf324"><mml:mrow><mml:mi>N</mml:mi><mml:mo>=</mml:mo><mml:mrow><mml:msubsup><mml:mo largeop="true" symmetric="true">∑</mml:mo><mml:mrow><mml:mi>m</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>M</mml:mi></mml:msubsup><mml:msub><mml:mi>λ</mml:mi><mml:mi>m</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>, the total number of grid cells.</p><p>In principle, the inputs to place cells are defined as spatial locations. Here, by contrast, we consider grid-like inputs as the inputs to place cells, without requiring these patterns to be spatial encodings. This approach is mathematically convenient as it allows us to exploit the many symmetries of the set of grid-like inputs denoted by <inline-formula><mml:math id="inf325"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msub><mml:mrow><mml:mi mathvariant="script">C</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="bold-italic">λ</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mstyle></mml:math></inline-formula>. The set <inline-formula><mml:math id="inf326"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msub><mml:mrow><mml:mi mathvariant="script">C</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="bold-italic">λ</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mstyle></mml:math></inline-formula> contains as many grid-like inputs <inline-formula><mml:math id="inf327"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mi mathvariant="bold-italic">c</mml:mi></mml:mrow></mml:mstyle></mml:math></inline-formula> as there are choices of phase indices in each module, that is, <inline-formula><mml:math id="inf328"><mml:mrow><mml:mi mathvariant="normal">Λ</mml:mi><mml:mo>=</mml:mo><mml:mrow><mml:msubsup><mml:mo largeop="true" symmetric="true">∏</mml:mo><mml:mrow><mml:mi>m</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>M</mml:mi></mml:msubsup><mml:msub><mml:mi>λ</mml:mi><mml:mi>m</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>:<disp-formula id="equ8"><label>(8)</label><mml:math id="m8"><mml:mrow><mml:mstyle displaystyle="true" scriptlevel="0"><mml:msub><mml:mrow><mml:mi mathvariant="script">C</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="bold-italic">λ</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:mo>{</mml:mo><mml:mrow><mml:mi mathvariant="bold-italic">c</mml:mi><mml:mo>=</mml:mo><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msub><mml:mi mathvariant="bold-italic">c</mml:mi><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi mathvariant="bold-italic">c</mml:mi><mml:mrow><mml:mi>M</mml:mi></mml:mrow></mml:msub></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>∈</mml:mo><mml:mo fence="false" stretchy="false">{</mml:mo><mml:mn>0</mml:mn><mml:mo>,</mml:mo><mml:mn>1</mml:mn><mml:msup><mml:mo fence="false" stretchy="false">}</mml:mo><mml:mrow><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub></mml:mrow></mml:msup><mml:mo>×</mml:mo><mml:mo>…</mml:mo><mml:mo>×</mml:mo><mml:mo fence="false" stretchy="false">{</mml:mo><mml:mn>0</mml:mn><mml:mo>,</mml:mo><mml:mn>1</mml:mn><mml:msup><mml:mo fence="false" stretchy="false">}</mml:mo><mml:mrow><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mi>M</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msup><mml:mspace width="thinmathspace"/><mml:mrow><mml:mo maxsize="2.470em" minsize="2.470em">|</mml:mo></mml:mrow><mml:mspace width="1em"/><mml:munderover><mml:mo>∑</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mi>m</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:munderover><mml:msub><mml:mi>c</mml:mi><mml:mrow><mml:mi>m</mml:mi><mml:mo>,</mml:mo><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mspace width="1em"/><mml:mn>1</mml:mn><mml:mo>≤</mml:mo><mml:mi>m</mml:mi><mml:mo>≤</mml:mo><mml:mi>M</mml:mi><mml:mspace width="thinmathspace"/></mml:mrow><mml:mo>}</mml:mo></mml:mrow><mml:mspace width="thinmathspace"/><mml:mo>.</mml:mo></mml:mstyle></mml:mrow></mml:math></disp-formula></p><p>Here follow two examples of grid-like inputs <inline-formula><mml:math id="inf329"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msub><mml:mrow><mml:mi mathvariant="script">C</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="bold-italic">λ</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mstyle></mml:math></inline-formula> enumerated in lexicographical order for <inline-formula><mml:math id="inf330"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mi mathvariant="bold-italic">λ</mml:mi><mml:mo>=</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mn>2</mml:mn><mml:mo>,</mml:mo><mml:mn>3</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mstyle></mml:math></inline-formula> and <inline-formula><mml:math id="inf331"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mi mathvariant="bold-italic">λ</mml:mi><mml:mo>=</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mn>2</mml:mn><mml:mo>,</mml:mo><mml:mn>2</mml:mn><mml:mo>,</mml:mo><mml:mn>2</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mstyle></mml:math></inline-formula>.<disp-formula id="equ9"><label>(9)</label><mml:math id="m9"><mml:mrow><mml:mstyle displaystyle="true" scriptlevel="0"><mml:msub><mml:mrow><mml:mi mathvariant="script">C</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mn>2</mml:mn><mml:mo>,</mml:mo><mml:mn>3</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:mo>{</mml:mo><mml:mtable columnalign="center center center center center center" columnspacing="1em" rowlines="none solid none" rowspacing="4pt"><mml:mtr><mml:mtd><mml:mn>1</mml:mn></mml:mtd><mml:mtd><mml:mn>1</mml:mn></mml:mtd><mml:mtd><mml:mn>1</mml:mn></mml:mtd><mml:mtd><mml:mn>0</mml:mn></mml:mtd><mml:mtd><mml:mn>0</mml:mn></mml:mtd><mml:mtd><mml:mn>0</mml:mn></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mn>0</mml:mn></mml:mtd><mml:mtd><mml:mn>0</mml:mn></mml:mtd><mml:mtd><mml:mn>0</mml:mn></mml:mtd><mml:mtd><mml:mn>1</mml:mn></mml:mtd><mml:mtd><mml:mn>1</mml:mn></mml:mtd><mml:mtd><mml:mn>1</mml:mn></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mn>1</mml:mn></mml:mtd><mml:mtd><mml:mn>0</mml:mn></mml:mtd><mml:mtd><mml:mn>0</mml:mn></mml:mtd><mml:mtd><mml:mn>1</mml:mn></mml:mtd><mml:mtd><mml:mn>0</mml:mn></mml:mtd><mml:mtd><mml:mn>0</mml:mn></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mn>0</mml:mn></mml:mtd><mml:mtd><mml:mn>1</mml:mn></mml:mtd><mml:mtd><mml:mn>0</mml:mn></mml:mtd><mml:mtd><mml:mn>0</mml:mn></mml:mtd><mml:mtd><mml:mn>1</mml:mn></mml:mtd><mml:mtd><mml:mn>0</mml:mn></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mn>0</mml:mn></mml:mtd><mml:mtd><mml:mn>0</mml:mn></mml:mtd><mml:mtd><mml:mn>1</mml:mn></mml:mtd><mml:mtd><mml:mn>0</mml:mn></mml:mtd><mml:mtd><mml:mn>0</mml:mn></mml:mtd><mml:mtd><mml:mn>1</mml:mn></mml:mtd></mml:mtr></mml:mtable><mml:mo>}</mml:mo></mml:mrow><mml:mo>,</mml:mo><mml:msub><mml:mrow><mml:mi mathvariant="script">C</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mn>2</mml:mn><mml:mo>,</mml:mo><mml:mn>2</mml:mn><mml:mo>,</mml:mo><mml:mn>2</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:mo>{</mml:mo><mml:mtable columnalign="center center center center center center center center" columnspacing="1em" rowlines="none solid none solid none" rowspacing="4pt"><mml:mtr><mml:mtd><mml:mn>1</mml:mn></mml:mtd><mml:mtd><mml:mn>1</mml:mn></mml:mtd><mml:mtd><mml:mn>1</mml:mn></mml:mtd><mml:mtd><mml:mn>1</mml:mn></mml:mtd><mml:mtd><mml:mn>0</mml:mn></mml:mtd><mml:mtd><mml:mn>0</mml:mn></mml:mtd><mml:mtd><mml:mn>0</mml:mn></mml:mtd><mml:mtd><mml:mn>0</mml:mn></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mn>0</mml:mn></mml:mtd><mml:mtd><mml:mn>0</mml:mn></mml:mtd><mml:mtd><mml:mn>0</mml:mn></mml:mtd><mml:mtd><mml:mn>0</mml:mn></mml:mtd><mml:mtd><mml:mn>1</mml:mn></mml:mtd><mml:mtd><mml:mn>1</mml:mn></mml:mtd><mml:mtd><mml:mn>1</mml:mn></mml:mtd><mml:mtd><mml:mn>1</mml:mn></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mn>1</mml:mn></mml:mtd><mml:mtd><mml:mn>1</mml:mn></mml:mtd><mml:mtd><mml:mn>0</mml:mn></mml:mtd><mml:mtd><mml:mn>0</mml:mn></mml:mtd><mml:mtd><mml:mn>1</mml:mn></mml:mtd><mml:mtd><mml:mn>1</mml:mn></mml:mtd><mml:mtd><mml:mn>0</mml:mn></mml:mtd><mml:mtd><mml:mn>0</mml:mn></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mn>0</mml:mn></mml:mtd><mml:mtd><mml:mn>0</mml:mn></mml:mtd><mml:mtd><mml:mn>1</mml:mn></mml:mtd><mml:mtd><mml:mn>1</mml:mn></mml:mtd><mml:mtd><mml:mn>0</mml:mn></mml:mtd><mml:mtd><mml:mn>0</mml:mn></mml:mtd><mml:mtd><mml:mn>1</mml:mn></mml:mtd><mml:mtd><mml:mn>1</mml:mn></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mn>1</mml:mn></mml:mtd><mml:mtd><mml:mn>0</mml:mn></mml:mtd><mml:mtd><mml:mn>1</mml:mn></mml:mtd><mml:mtd><mml:mn>0</mml:mn></mml:mtd><mml:mtd><mml:mn>1</mml:mn></mml:mtd><mml:mtd><mml:mn>0</mml:mn></mml:mtd><mml:mtd><mml:mn>1</mml:mn></mml:mtd><mml:mtd><mml:mn>0</mml:mn></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mn>0</mml:mn></mml:mtd><mml:mtd><mml:mn>1</mml:mn></mml:mtd><mml:mtd><mml:mn>0</mml:mn></mml:mtd><mml:mtd><mml:mn>1</mml:mn></mml:mtd><mml:mtd><mml:mn>0</mml:mn></mml:mtd><mml:mtd><mml:mn>1</mml:mn></mml:mtd><mml:mtd><mml:mn>0</mml:mn></mml:mtd><mml:mtd><mml:mn>1</mml:mn></mml:mtd></mml:mtr></mml:mtable><mml:mo>}</mml:mo></mml:mrow><mml:mo>.</mml:mo></mml:mstyle></mml:mrow></mml:math></disp-formula></p><p>Observe that, albeit inspired by the spatial activity of grid cells, the set of patterns <inline-formula><mml:math id="inf332"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msub><mml:mrow><mml:mi mathvariant="script">C</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="bold-italic">λ</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mstyle></mml:math></inline-formula> has broader relevance than suggested by its use for modeling grid-like inputs. In fact, the set of patterns <inline-formula><mml:math id="inf333"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msub><mml:mrow><mml:mi mathvariant="script">C</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="bold-italic">λ</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mstyle></mml:math></inline-formula> describes any modular winner-take-all activity, whereby cells are pooled in modules with only one cell active at a time – the winner of the module.</p><p>In the following, we consider that linear read-outs of grid-like inputs determine the activity of downstream cells, called place cells (<xref ref-type="bibr" rid="bib59">O’Keefe and Dostrovsky, 1971</xref>). The set of these linear read-outs is the vector space <inline-formula><mml:math id="inf334"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msub><mml:mi>V</mml:mi><mml:mrow><mml:mi mathvariant="bold-italic">λ</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mstyle></mml:math></inline-formula> spanned by the grid-like inputs <inline-formula><mml:math id="inf335"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msub><mml:mrow><mml:mi mathvariant="script">C</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="bold-italic">λ</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mstyle></mml:math></inline-formula>. The dimension of the vector space <inline-formula><mml:math id="inf336"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msub><mml:mi>V</mml:mi><mml:mrow><mml:mi mathvariant="bold-italic">λ</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mstyle></mml:math></inline-formula> specifies the dimensionality of the grid code. The following proposition characterizes <inline-formula><mml:math id="inf337"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msub><mml:mi>V</mml:mi><mml:mrow><mml:mi mathvariant="bold-italic">λ</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mstyle></mml:math></inline-formula> and shows that its dimension is simply related to the periods <inline-formula><mml:math id="inf338"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mi mathvariant="bold-italic">λ</mml:mi></mml:mrow></mml:mstyle></mml:math></inline-formula>.</p></sec><sec id="s10" sec-type="appendix"><title>Proposition 1</title><p>The set of grid-like inputs <inline-formula><mml:math id="inf339"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msub><mml:mi mathvariant="bold-italic">C</mml:mi><mml:mrow><mml:mi mathvariant="bold-italic">λ</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mstyle></mml:math></inline-formula> specified by <inline-formula><mml:math id="inf340"><mml:mi>M</mml:mi></mml:math></inline-formula> grid modules with integer periods <inline-formula><mml:math id="inf341"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mi mathvariant="bold-italic">λ</mml:mi><mml:mo>=</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mi>M</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mstyle></mml:math></inline-formula> span the vector space<disp-formula id="equ10"><label>(10)</label><mml:math id="m10"><mml:mrow><mml:mstyle displaystyle="true" scriptlevel="0"><mml:msub><mml:mi>V</mml:mi><mml:mrow><mml:mi mathvariant="bold-italic">λ</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:mi mathvariant="normal">s</mml:mi><mml:mi mathvariant="normal">p</mml:mi><mml:mi mathvariant="normal">a</mml:mi><mml:mi mathvariant="normal">n</mml:mi></mml:mrow><mml:mspace width="thinmathspace"/><mml:msub><mml:mi mathvariant="bold-italic">C</mml:mi><mml:mrow><mml:mi mathvariant="bold-italic">λ</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:mo>{</mml:mo><mml:mrow><mml:mi mathvariant="bold-italic">y</mml:mi><mml:mo>=</mml:mo><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msub><mml:mi mathvariant="bold-italic">y</mml:mi><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi mathvariant="bold-italic">y</mml:mi><mml:mrow><mml:mi>M</mml:mi></mml:mrow></mml:msub></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>∈</mml:mo><mml:msup><mml:mrow><mml:mi mathvariant="double-struck">R</mml:mi></mml:mrow><mml:mrow><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub></mml:mrow></mml:msup><mml:mo>×</mml:mo><mml:mo>…</mml:mo><mml:mo>×</mml:mo><mml:msup><mml:mrow><mml:mi mathvariant="double-struck">R</mml:mi></mml:mrow><mml:mrow><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mi>M</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msup><mml:mspace width="thinmathspace"/><mml:mrow><mml:mo maxsize="2.470em" minsize="2.470em">|</mml:mo></mml:mrow><mml:mspace width="1em"/><mml:munderover><mml:mo>∑</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub></mml:mrow></mml:munderover><mml:msub><mml:mi>y</mml:mi><mml:mrow><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mo>…</mml:mo><mml:mo>=</mml:mo><mml:munderover><mml:mo>∑</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mi>M</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:munderover><mml:msub><mml:mi>y</mml:mi><mml:mrow><mml:mi>M</mml:mi><mml:mo>,</mml:mo><mml:mi>i</mml:mi></mml:mrow></mml:msub></mml:mrow><mml:mo>}</mml:mo></mml:mrow><mml:mspace width="thinmathspace"/><mml:mo>,</mml:mo></mml:mstyle></mml:mrow></mml:math></disp-formula></p><p>In particular, the embedding dimension of the grid code is <inline-formula><mml:math id="inf342"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mi>dim</mml:mi><mml:mo>⁡</mml:mo><mml:msub><mml:mi>V</mml:mi><mml:mrow><mml:mi mathvariant="bold-italic">λ</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:munderover><mml:mo>∑</mml:mo><mml:mrow><mml:mi>m</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mi>M</mml:mi></mml:mrow></mml:munderover><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mi>m</mml:mi></mml:mrow></mml:msub><mml:mo>−</mml:mo><mml:mi>M</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:mstyle></mml:math></inline-formula>.</p><p>Proof. Let us denote by <inline-formula><mml:math id="inf343"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msub><mml:mi>A</mml:mi><mml:mrow><mml:mi mathvariant="bold-italic">λ</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mstyle></mml:math></inline-formula> a matrix formed by collecting all the column vectors from <inline-formula><mml:math id="inf344"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msub><mml:mi mathvariant="bold-italic">C</mml:mi><mml:mrow><mml:mi mathvariant="bold-italic">λ</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mstyle></mml:math></inline-formula>. The vector space <inline-formula><mml:math id="inf345"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msub><mml:mi>V</mml:mi><mml:mrow><mml:mi mathvariant="bold-italic">λ</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mstyle></mml:math></inline-formula> is the range of the matrix <inline-formula><mml:math id="inf346"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msub><mml:mi>A</mml:mi><mml:mrow><mml:mi mathvariant="bold-italic">λ</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mstyle></mml:math></inline-formula>, which is also the orthogonal complement of <inline-formula><mml:math id="inf347"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mi>ker</mml:mi><mml:mo>⁡</mml:mo><mml:mrow><mml:msubsup><mml:mi>A</mml:mi><mml:mrow><mml:mi mathvariant="bold-italic">λ</mml:mi></mml:mrow><mml:mrow><mml:mi>T</mml:mi></mml:mrow></mml:msubsup></mml:mrow></mml:mrow></mml:mstyle></mml:math></inline-formula>. A vector <inline-formula><mml:math id="inf348"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mi mathvariant="bold-italic">x</mml:mi><mml:mo>=</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mrow><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mrow><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub></mml:mrow></mml:msub><mml:mrow><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:mo>…</mml:mo><mml:mo>…</mml:mo><mml:mrow><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:msub><mml:mi>x</mml:mi><mml:mrow><mml:mi>M</mml:mi><mml:mo>,</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mrow><mml:mi>M</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mi>M</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mstyle></mml:math></inline-formula> in <inline-formula><mml:math id="inf349"><mml:mrow><mml:msup><mml:mi>ℝ</mml:mi><mml:msub><mml:mi>λ</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:msup><mml:mo>×</mml:mo><mml:mi mathvariant="normal">…</mml:mi><mml:mo>×</mml:mo><mml:msup><mml:mi>ℝ</mml:mi><mml:msub><mml:mi>λ</mml:mi><mml:mi>M</mml:mi></mml:msub></mml:msup></mml:mrow></mml:math></inline-formula> belongs to <inline-formula><mml:math id="inf350"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mi>ker</mml:mi><mml:mo>⁡</mml:mo><mml:mrow><mml:msubsup><mml:mi>A</mml:mi><mml:mrow><mml:mi mathvariant="bold-italic">λ</mml:mi></mml:mrow><mml:mrow><mml:mi>T</mml:mi></mml:mrow></mml:msubsup></mml:mrow></mml:mrow></mml:mstyle></mml:math></inline-formula> if and only if <inline-formula><mml:math id="inf351"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msup><mml:mi mathvariant="bold-italic">x</mml:mi><mml:mrow><mml:mi>T</mml:mi></mml:mrow></mml:msup><mml:msub><mml:mi>A</mml:mi><mml:mrow><mml:mi mathvariant="bold-italic">λ</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mn>0</mml:mn></mml:mrow></mml:mstyle></mml:math></inline-formula>. By construction of the matrix <inline-formula><mml:math id="inf352"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msub><mml:mi>A</mml:mi><mml:mrow><mml:mi mathvariant="bold-italic">λ</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mstyle></mml:math></inline-formula>:<disp-formula id="equ11"><label>(11)</label><mml:math id="m11"><mml:mrow><mml:mstyle displaystyle="true" scriptlevel="0"><mml:msup><mml:mi mathvariant="bold-italic">x</mml:mi><mml:mrow><mml:mi>T</mml:mi></mml:mrow></mml:msup><mml:msub><mml:mi>A</mml:mi><mml:mrow><mml:mi mathvariant="bold-italic">λ</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mn>0</mml:mn><mml:mspace width="1em"/><mml:mo stretchy="false">⟺</mml:mo><mml:mspace width="1em"/><mml:munderover><mml:mo>∑</mml:mo><mml:mrow><mml:mi>m</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mi>M</mml:mi></mml:mrow></mml:munderover><mml:msub><mml:mi>x</mml:mi><mml:mrow><mml:mi>m</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mi>i</mml:mi><mml:mrow><mml:mi>m</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mn>0</mml:mn><mml:mspace width="thinmathspace"/><mml:mo>,</mml:mo><mml:mspace width="1em"/><mml:mrow><mml:mi mathvariant="normal">f</mml:mi><mml:mi mathvariant="normal">o</mml:mi><mml:mi mathvariant="normal">r</mml:mi><mml:mtext> </mml:mtext><mml:mi mathvariant="normal">a</mml:mi><mml:mi mathvariant="normal">l</mml:mi><mml:mi mathvariant="normal">l</mml:mi></mml:mrow><mml:mspace width="1em"/><mml:mn>1</mml:mn><mml:mo>≤</mml:mo><mml:msub><mml:mi>i</mml:mi><mml:mrow><mml:mi>m</mml:mi></mml:mrow></mml:msub><mml:mo>≤</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mi>m</mml:mi></mml:mrow></mml:msub><mml:mspace width="thinmathspace"/><mml:mo>,</mml:mo></mml:mstyle></mml:mrow></mml:math></disp-formula></p><p>where <italic>i</italic><sub><italic>m</italic></sub> refers to the index of the active cell in module <inline-formula><mml:math id="inf353"><mml:mi>m</mml:mi></mml:math></inline-formula>. The latter characterization implies that<disp-formula id="equ12"><label>(12)</label><mml:math id="m12"><mml:mrow><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mi>ker</mml:mi><mml:mo>⁡</mml:mo><mml:mrow><mml:msubsup><mml:mi>A</mml:mi><mml:mrow><mml:mi mathvariant="bold-italic">λ</mml:mi></mml:mrow><mml:mrow><mml:mi>T</mml:mi></mml:mrow></mml:msubsup></mml:mrow><mml:mo>=</mml:mo><mml:mrow><mml:mo>{</mml:mo><mml:mrow><mml:mi mathvariant="bold-italic">x</mml:mi><mml:mo>=</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>a</mml:mi><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>a</mml:mi><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mrow><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:mo>…</mml:mo><mml:mo>…</mml:mo><mml:mrow><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:msub><mml:mi>a</mml:mi><mml:mrow><mml:mi>M</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>a</mml:mi><mml:mrow><mml:mi>M</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mo>∈</mml:mo><mml:msup><mml:mrow><mml:mi mathvariant="double-struck">R</mml:mi></mml:mrow><mml:mrow><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub></mml:mrow></mml:msup><mml:mo>×</mml:mo><mml:mo>…</mml:mo><mml:mo>×</mml:mo><mml:msup><mml:mrow><mml:mi mathvariant="double-struck">R</mml:mi></mml:mrow><mml:mrow><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mi>M</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msup><mml:mrow><mml:mo maxsize="2.470em" minsize="2.470em">|</mml:mo></mml:mrow><mml:munderover><mml:mo>∑</mml:mo><mml:mrow><mml:mi>m</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mi>M</mml:mi></mml:mrow></mml:munderover><mml:msub><mml:mi>a</mml:mi><mml:mrow><mml:mi>m</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mn>0</mml:mn></mml:mrow><mml:mo>}</mml:mo></mml:mrow><mml:mo>.</mml:mo></mml:mstyle></mml:mrow></mml:math></disp-formula></p><p>In turn, a vector <inline-formula><mml:math id="inf354"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mi mathvariant="bold-italic">y</mml:mi><mml:mo>=</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>y</mml:mi><mml:mrow><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>y</mml:mi><mml:mrow><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub></mml:mrow></mml:msub><mml:mrow><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:mo>…</mml:mo><mml:mo>…</mml:mo><mml:mrow><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:msub><mml:mi>y</mml:mi><mml:mrow><mml:mi>M</mml:mi><mml:mo>,</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>y</mml:mi><mml:mrow><mml:mi>M</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mi>M</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mstyle></mml:math></inline-formula> of the orthogonal complement of <inline-formula><mml:math id="inf355"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mi>ker</mml:mi><mml:mo>⁡</mml:mo><mml:mrow><mml:msubsup><mml:mi>A</mml:mi><mml:mrow><mml:mi mathvariant="bold-italic">λ</mml:mi></mml:mrow><mml:mrow><mml:mi>T</mml:mi></mml:mrow></mml:msubsup></mml:mrow></mml:mrow></mml:mstyle></mml:math></inline-formula>, that is, in the range of <inline-formula><mml:math id="inf356"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msub><mml:mi>A</mml:mi><mml:mrow><mml:mi mathvariant="bold-italic">λ</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mstyle></mml:math></inline-formula>, is determined by <inline-formula><mml:math id="inf357"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msup><mml:mi mathvariant="bold-italic">x</mml:mi><mml:mrow><mml:mi>T</mml:mi></mml:mrow></mml:msup><mml:mi mathvariant="bold-italic">y</mml:mi><mml:mo>=</mml:mo><mml:mn>0</mml:mn></mml:mrow></mml:mstyle></mml:math></inline-formula> for all <inline-formula><mml:math id="inf358"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mi mathvariant="bold-italic">x</mml:mi></mml:mrow></mml:mstyle></mml:math></inline-formula> in <inline-formula><mml:math id="inf359"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mi>ker</mml:mi><mml:mo>⁡</mml:mo><mml:mrow><mml:msubsup><mml:mi>A</mml:mi><mml:mrow><mml:mi mathvariant="bold-italic">λ</mml:mi></mml:mrow><mml:mrow><mml:mi>T</mml:mi></mml:mrow></mml:msubsup></mml:mrow></mml:mrow></mml:mstyle></mml:math></inline-formula>. From the above characterization of <inline-formula><mml:math id="inf360"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mi>ker</mml:mi><mml:mo>⁡</mml:mo><mml:mrow><mml:msubsup><mml:mi>A</mml:mi><mml:mrow><mml:mi mathvariant="bold-italic">λ</mml:mi></mml:mrow><mml:mrow><mml:mi>T</mml:mi></mml:mrow></mml:msubsup></mml:mrow></mml:mrow></mml:mstyle></mml:math></inline-formula>, this means that <inline-formula><mml:math id="inf361"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mi mathvariant="bold-italic">y</mml:mi></mml:mrow></mml:mstyle></mml:math></inline-formula> is in the range of <inline-formula><mml:math id="inf362"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msub><mml:mi>A</mml:mi><mml:mrow><mml:mi mathvariant="bold-italic">λ</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mstyle></mml:math></inline-formula>, that is, in <inline-formula><mml:math id="inf363"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msub><mml:mi>V</mml:mi><mml:mrow><mml:mi mathvariant="bold-italic">λ</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mstyle></mml:math></inline-formula>, if and only if for all <inline-formula><mml:math id="inf364"><mml:mrow><mml:msub><mml:mi>a</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:mi mathvariant="normal">…</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mi>a</mml:mi><mml:mi>M</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> such that <inline-formula><mml:math id="inf365"><mml:mrow><mml:mrow><mml:msubsup><mml:mo largeop="true" symmetric="true">∑</mml:mo><mml:mrow><mml:mi>m</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>M</mml:mi></mml:msubsup><mml:msub><mml:mi>a</mml:mi><mml:mi>m</mml:mi></mml:msub></mml:mrow><mml:mo>=</mml:mo><mml:mn>0</mml:mn></mml:mrow></mml:math></inline-formula>, we have<disp-formula id="equ13"><label>(13)</label><mml:math id="m13"><mml:mrow><mml:mrow><mml:mrow><mml:mstyle displaystyle="true" scriptlevel="0"><mml:munderover><mml:mo largeop="true" movablelimits="false" symmetric="true">∑</mml:mo><mml:mrow><mml:mi>m</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>M</mml:mi></mml:munderover></mml:mstyle><mml:mrow><mml:msub><mml:mi>a</mml:mi><mml:mi>m</mml:mi></mml:msub><mml:mo>⁢</mml:mo><mml:mrow><mml:mstyle displaystyle="true" scriptlevel="0"><mml:munderover><mml:mo largeop="true" movablelimits="false" symmetric="true">∑</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>=</mml:mo><mml:mn>0</mml:mn></mml:mrow><mml:mrow><mml:msub><mml:mi>λ</mml:mi><mml:mi>m</mml:mi></mml:msub><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:munderover></mml:mstyle><mml:msub><mml:mi>y</mml:mi><mml:mrow><mml:mi>m</mml:mi><mml:mo>,</mml:mo><mml:mi>i</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:mrow><mml:mo>=</mml:mo><mml:mpadded width="+1.7pt"><mml:mn>0</mml:mn></mml:mpadded></mml:mrow><mml:mo>.</mml:mo></mml:mrow></mml:math></disp-formula></p><p>Substituting <inline-formula><mml:math id="inf366"><mml:mrow><mml:msub><mml:mi>a</mml:mi><mml:mi>M</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:mo>-</mml:mo><mml:mrow><mml:msubsup><mml:mo largeop="true" symmetric="true">∑</mml:mo><mml:mrow><mml:mi>m</mml:mi><mml:mo>=</mml:mo><mml:mn>0</mml:mn></mml:mrow><mml:mrow><mml:mi>M</mml:mi><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msubsup><mml:msub><mml:mi>a</mml:mi><mml:mi>m</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula> in the above relation, we have that for all <inline-formula><mml:math id="inf367"><mml:mrow><mml:msub><mml:mi>a</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:mi mathvariant="normal">…</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mi>a</mml:mi><mml:mrow><mml:mi>M</mml:mi><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> in <inline-formula><mml:math id="inf368"><mml:msup><mml:mi>ℝ</mml:mi><mml:mrow><mml:mi>M</mml:mi><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msup></mml:math></inline-formula>,<disp-formula id="equ14"><label>(14)</label><mml:math id="m14"><mml:mrow><mml:mrow><mml:mrow><mml:mstyle displaystyle="true" scriptlevel="0"><mml:munderover><mml:mo largeop="true" movablelimits="false" symmetric="true">∑</mml:mo><mml:mrow><mml:mi>m</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mi>M</mml:mi><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:munderover></mml:mstyle><mml:mrow><mml:msub><mml:mi>a</mml:mi><mml:mi>m</mml:mi></mml:msub><mml:mo>⁢</mml:mo><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mrow><mml:mstyle displaystyle="true" scriptlevel="0"><mml:munderover><mml:mo largeop="true" movablelimits="false" symmetric="true">∑</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>=</mml:mo><mml:mn>0</mml:mn></mml:mrow><mml:mrow><mml:msub><mml:mi>λ</mml:mi><mml:mi>m</mml:mi></mml:msub><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:munderover></mml:mstyle><mml:msub><mml:mi>y</mml:mi><mml:mrow><mml:mi>m</mml:mi><mml:mo>,</mml:mo><mml:mi>i</mml:mi></mml:mrow></mml:msub></mml:mrow><mml:mo>-</mml:mo><mml:mrow><mml:mstyle displaystyle="true" scriptlevel="0"><mml:munderover><mml:mo largeop="true" movablelimits="false" symmetric="true">∑</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>=</mml:mo><mml:mn>0</mml:mn></mml:mrow><mml:msub><mml:mi>λ</mml:mi><mml:mi>M</mml:mi></mml:msub></mml:munderover></mml:mstyle><mml:msub><mml:mi>y</mml:mi><mml:mrow><mml:mi>M</mml:mi><mml:mo>,</mml:mo><mml:mi>i</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mrow><mml:mo>=</mml:mo><mml:mpadded width="+1.7pt"><mml:mn>0</mml:mn></mml:mpadded></mml:mrow><mml:mo>,</mml:mo></mml:mrow></mml:math></disp-formula></p><p>which is equivalent to <inline-formula><mml:math id="inf369"><mml:mrow><mml:mrow><mml:msubsup><mml:mo largeop="true" symmetric="true">∑</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>=</mml:mo><mml:mn>0</mml:mn></mml:mrow><mml:mrow><mml:msub><mml:mi>λ</mml:mi><mml:mi>m</mml:mi></mml:msub><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msubsup><mml:msub><mml:mi>y</mml:mi><mml:mrow><mml:mi>m</mml:mi><mml:mo>,</mml:mo><mml:mi>i</mml:mi></mml:mrow></mml:msub></mml:mrow><mml:mo>=</mml:mo><mml:mrow><mml:msubsup><mml:mo largeop="true" symmetric="true">∑</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>=</mml:mo><mml:mn>0</mml:mn></mml:mrow><mml:mrow><mml:msub><mml:mi>λ</mml:mi><mml:mi>M</mml:mi></mml:msub><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msubsup><mml:msub><mml:mi>y</mml:mi><mml:mrow><mml:mi>M</mml:mi><mml:mo>,</mml:mo><mml:mi>i</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> for all <inline-formula><mml:math id="inf370"><mml:mi>m</mml:mi></mml:math></inline-formula>, <inline-formula><mml:math id="inf371"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mn>1</mml:mn><mml:mo>≤</mml:mo><mml:mi>m</mml:mi><mml:mo>§lt;</mml:mo><mml:mi>M</mml:mi></mml:mrow></mml:mstyle></mml:math></inline-formula>. The above relation entirely specifies the range of the activity matrix <inline-formula><mml:math id="inf372"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msub><mml:mi>A</mml:mi><mml:mrow><mml:mi mathvariant="bold-italic">λ</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mstyle></mml:math></inline-formula>, that is, <inline-formula><mml:math id="inf373"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msub><mml:mi>V</mml:mi><mml:mrow><mml:mi mathvariant="bold-italic">λ</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mstyle></mml:math></inline-formula>, as a vector space of dimension <inline-formula><mml:math id="inf374"><mml:mrow><mml:mrow><mml:mrow><mml:msubsup><mml:mo largeop="true" symmetric="true">∑</mml:mo><mml:mrow><mml:mi>m</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>M</mml:mi></mml:msubsup><mml:msub><mml:mi>λ</mml:mi><mml:mi>m</mml:mi></mml:msub></mml:mrow><mml:mo>-</mml:mo><mml:mi>M</mml:mi></mml:mrow><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:math></inline-formula>.</p><sec id="s10-1" sec-type="appendix"><title>Linear read-outs of grid-like inputs</title><p>We model the response of a place cell as that of a perceptron, which takes grid-like inputs <inline-formula><mml:math id="inf375"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mi mathvariant="bold-italic">c</mml:mi></mml:mrow></mml:mstyle></mml:math></inline-formula> in <inline-formula><mml:math id="inf376"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msub><mml:mrow><mml:mi mathvariant="script">C</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="bold-italic">λ</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mstyle></mml:math></inline-formula> as inputs (<xref ref-type="bibr" rid="bib69">Rosenblatt, 1958</xref>). Such a perceptron is parametrized by a decision threshold <inline-formula><mml:math id="inf377"><mml:mi>θ</mml:mi></mml:math></inline-formula> and by a vector of read-out weights <inline-formula><mml:math id="inf378"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mi mathvariant="bold-italic">w</mml:mi><mml:mo>=</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>w</mml:mi><mml:mrow><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>w</mml:mi><mml:mrow><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub></mml:mrow></mml:msub><mml:mrow><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:mo>…</mml:mo><mml:mspace width="thinmathspace"/><mml:mo>…</mml:mo><mml:mrow><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:msub><mml:mi>w</mml:mi><mml:mrow><mml:mi>M</mml:mi><mml:mo>,</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>w</mml:mi><mml:mrow><mml:mi>M</mml:mi><mml:mo>,</mml:mo><mml:mi>λ</mml:mi><mml:mi>M</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mstyle></mml:math></inline-formula>, where the vertical separators delineate the grid-cell modules with periods <inline-formula><mml:math id="inf379"><mml:msub><mml:mi>λ</mml:mi><mml:mi>m</mml:mi></mml:msub></mml:math></inline-formula>, <inline-formula><mml:math id="inf380"><mml:mrow><mml:mn>1</mml:mn><mml:mo>≤</mml:mo><mml:mi>m</mml:mi><mml:mo>≤</mml:mo><mml:mi>M</mml:mi></mml:mrow></mml:math></inline-formula>. By convention, we consider that a place cell is active for grid-like inputs <inline-formula><mml:math id="inf381"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mi mathvariant="bold-italic">c</mml:mi></mml:mrow></mml:mstyle></mml:math></inline-formula> such that <inline-formula><mml:math id="inf382"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msup><mml:mi mathvariant="bold-italic">w</mml:mi><mml:mrow><mml:mi>T</mml:mi></mml:mrow></mml:msup><mml:mi mathvariant="bold-italic">c</mml:mi><mml:mo>&gt;</mml:mo><mml:mi>θ</mml:mi></mml:mrow></mml:mstyle></mml:math></inline-formula> and inactive otherwise. Thus, in the perceptron framework, a place cell has a multi-field structure if it is active on a set of several grid-like inputs <inline-formula><mml:math id="inf383"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mrow><mml:mi mathvariant="script">S</mml:mi></mml:mrow><mml:mo>⊂</mml:mo><mml:msub><mml:mrow><mml:mi mathvariant="script">C</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="bold-italic">λ</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mstyle></mml:math></inline-formula>, with <inline-formula><mml:math id="inf384"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mrow><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:mrow><mml:mi mathvariant="script">S</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:mo>&gt;</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:mstyle></mml:math></inline-formula> (<xref ref-type="bibr" rid="bib68">Rich et al., 2014</xref>). Considering grid-like inputs as inputs allows one to restrict the class of perceptrons under consideration.</p></sec></sec><sec id="s11" sec-type="appendix"><title>Proposition 2</title><p>Every realizable multi-field structure can be implemented by a perceptron with <inline-formula><mml:math id="inf385"><mml:mrow><mml:mo mathvariant="normal" stretchy="false">(</mml:mo><mml:mi>i</mml:mi><mml:mo mathvariant="normal" stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> non-negative weights, or <inline-formula><mml:math id="inf386"><mml:mrow><mml:mo mathvariant="normal" stretchy="false">(</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo mathvariant="italic">⁢</mml:mo><mml:mi>i</mml:mi></mml:mrow><mml:mo mathvariant="normal" stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> with zero threshold.</p><p>Proof. <inline-formula><mml:math id="inf387"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>i</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> If <inline-formula><mml:math id="inf388"><mml:mi>M</mml:mi></mml:math></inline-formula> is the total number of modules and 1 is the <inline-formula><mml:math id="inf389"><mml:mi>N</mml:mi></mml:math></inline-formula>-dimensional column vectors of 1, for all grid-like inputs <inline-formula><mml:math id="inf390"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mi mathvariant="bold-italic">c</mml:mi></mml:mrow></mml:mstyle></mml:math></inline-formula> in <inline-formula><mml:math id="inf391"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msub><mml:mrow><mml:mi mathvariant="script">C</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="bold-italic">λ</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mstyle></mml:math></inline-formula> we have <inline-formula><mml:math id="inf392"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msup><mml:mn mathvariant="bold">1</mml:mn><mml:mrow><mml:mi>T</mml:mi></mml:mrow></mml:msup><mml:mi mathvariant="bold-italic">c</mml:mi><mml:mo>=</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">)</mml:mo><mml:mi mathvariant="bold-italic">c</mml:mi><mml:mo>=</mml:mo><mml:mi>M</mml:mi></mml:mrow></mml:mstyle></mml:math></inline-formula>. Thus, for all perceptron <inline-formula><mml:math id="inf393"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="bold-italic">w</mml:mi><mml:mo>,</mml:mo><mml:mi>θ</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mstyle></mml:math></inline-formula> and for all real µ, we have<disp-formula id="equ15"><label>(15)</label><mml:math id="m15"><mml:mrow><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="bold-italic">w</mml:mi><mml:mo>+</mml:mo><mml:mi>μ</mml:mi><mml:mn mathvariant="bold">1</mml:mn><mml:msup><mml:mo stretchy="false">)</mml:mo><mml:mrow><mml:mi>T</mml:mi></mml:mrow></mml:msup><mml:mi mathvariant="bold-italic">c</mml:mi><mml:mo>=</mml:mo><mml:msup><mml:mi mathvariant="bold-italic">w</mml:mi><mml:mrow><mml:mi>T</mml:mi></mml:mrow></mml:msup><mml:mi mathvariant="bold-italic">c</mml:mi><mml:mo>+</mml:mo><mml:mi>μ</mml:mi><mml:msup><mml:mn mathvariant="bold">1</mml:mn><mml:mrow><mml:mi>T</mml:mi></mml:mrow></mml:msup><mml:mi mathvariant="bold-italic">c</mml:mi><mml:mo>=</mml:mo><mml:mi mathvariant="bold-italic">p</mml:mi><mml:mo>+</mml:mo><mml:mi>μ</mml:mi><mml:mi>M</mml:mi><mml:mo>,</mml:mo></mml:mstyle></mml:mrow></mml:math></disp-formula></p><p>where <inline-formula><mml:math id="inf394"><mml:mi>p</mml:mi></mml:math></inline-formula> is the place-cell-activity level for grid-cell pattern <inline-formula><mml:math id="inf395"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mi mathvariant="bold-italic">c</mml:mi></mml:mrow></mml:mstyle></mml:math></inline-formula> in <inline-formula><mml:math id="inf396"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msub><mml:mrow><mml:mi mathvariant="script">C</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="bold-italic">λ</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mstyle></mml:math></inline-formula>. Consequently, setting <inline-formula><mml:math id="inf397"><mml:mrow><mml:mi>μ</mml:mi><mml:mo>≥</mml:mo><mml:mrow><mml:msub><mml:mi>max</mml:mi><mml:mrow><mml:mn>1</mml:mn><mml:mo>≤</mml:mo><mml:mi>i</mml:mi><mml:mo>≤</mml:mo><mml:mi>N</mml:mi></mml:mrow></mml:msub><mml:mo>⁡</mml:mo><mml:mrow><mml:mo stretchy="false">|</mml:mo><mml:msub><mml:mi>w</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo stretchy="false">|</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula>, <inline-formula><mml:math id="inf398"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msup><mml:mi mathvariant="bold-italic">w</mml:mi><mml:mrow><mml:mi mathvariant="normal">′</mml:mi></mml:mrow></mml:msup><mml:mo>=</mml:mo><mml:mi mathvariant="bold-italic">w</mml:mi><mml:mo>+</mml:mo><mml:mi>μ</mml:mi><mml:mn mathvariant="bold">1</mml:mn></mml:mrow></mml:mstyle></mml:math></inline-formula> and <inline-formula><mml:math id="inf399"><mml:mrow><mml:msup><mml:mi>θ</mml:mi><mml:mo>′</mml:mo></mml:msup><mml:mo>=</mml:mo><mml:mrow><mml:mi>θ</mml:mi><mml:mo>+</mml:mo><mml:mrow><mml:mi>μ</mml:mi><mml:mo>⁢</mml:mo><mml:mi>M</mml:mi></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula> defines a new perceptron <inline-formula><mml:math id="inf400"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msup><mml:mi mathvariant="bold-italic">w</mml:mi><mml:mrow><mml:mi mathvariant="normal">′</mml:mi></mml:mrow></mml:msup><mml:mo>,</mml:mo><mml:msup><mml:mi>θ</mml:mi><mml:mrow><mml:mi mathvariant="normal">′</mml:mi></mml:mrow></mml:msup><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mstyle></mml:math></inline-formula> with non-negative weights, which operates the same classification as the perceptron <inline-formula><mml:math id="inf401"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="bold-italic">w</mml:mi><mml:mo>,</mml:mo><mml:mi>θ</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mstyle></mml:math></inline-formula> is equivalent to <inline-formula><mml:math id="inf402"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mi>p</mml:mi><mml:mo>&gt;</mml:mo><mml:mi>θ</mml:mi></mml:mrow></mml:mstyle></mml:math></inline-formula> The result directly follows from a similar argument by observing that for all grid-populations pattern <inline-formula><mml:math id="inf403"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mi mathvariant="bold-italic">c</mml:mi></mml:mrow></mml:mstyle></mml:math></inline-formula> in<inline-formula><mml:math id="inf404"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msub><mml:mrow><mml:mi mathvariant="script">C</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="bold-italic">λ</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mstyle></mml:math></inline-formula><disp-formula id="equ16"><label>(16)</label><mml:math id="m16"><mml:mrow><mml:mstyle displaystyle="true" scriptlevel="0"><mml:msup><mml:mi mathvariant="bold-italic">w</mml:mi><mml:mrow><mml:mi>T</mml:mi></mml:mrow></mml:msup><mml:mi mathvariant="bold-italic">c</mml:mi><mml:mo>−</mml:mo><mml:mi>θ</mml:mi><mml:mo>=</mml:mo><mml:msup><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mi mathvariant="bold-italic">w</mml:mi><mml:mo>−</mml:mo><mml:mi>θ</mml:mi><mml:mn mathvariant="bold">1</mml:mn></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mrow><mml:mi>T</mml:mi></mml:mrow></mml:msup><mml:mi mathvariant="bold-italic">c</mml:mi><mml:mo>,</mml:mo></mml:mstyle></mml:mrow></mml:math></disp-formula></p><p>which implies that if the perceptron models <inline-formula><mml:math id="inf405"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="bold-italic">w</mml:mi><mml:mo>,</mml:mo><mml:mi>θ</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mstyle></mml:math></inline-formula> and <inline-formula><mml:math id="inf406"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="bold-italic">w</mml:mi><mml:mo>−</mml:mo><mml:mi>θ</mml:mi><mml:mn mathvariant="bold">1</mml:mn><mml:mo>,</mml:mo><mml:mn>0</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mstyle></mml:math></inline-formula> achieve the same linear classification.</p><p>Our goal is to study the multi-field structure of place-cell perceptrons, which amounts to characterize the two-class linear classifications of grid-like inputs <inline-formula><mml:math id="inf407"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msub><mml:mrow><mml:mi mathvariant="script">C</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="bold-italic">λ</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mstyle></mml:math></inline-formula>. The study of linear binary classifications has a long history in machine learning. Given a collection of <inline-formula><mml:math id="inf408"><mml:mi mathvariant="normal">Λ</mml:mi></mml:math></inline-formula> input patterns, there are <inline-formula><mml:math id="inf409"><mml:msup><mml:mn>2</mml:mn><mml:mi mathvariant="normal">Λ</mml:mi></mml:msup></mml:math></inline-formula> possible assignments of binary labels to these patterns, also referred to as dichotomies. In general, not all dichotomies can be linearly classified by a perceptron. Those dichotomies that can be classified are called linearly separable. An important question is to compute the number of linearly separable dichotomies, which depends on the geometrical arrangement of the inputs presented to the perceptron. Remarkably, Cover’s function counting theorem specifies the exact number of linearly separable dichotomies for <inline-formula><mml:math id="inf410"><mml:mi>P</mml:mi></mml:math></inline-formula> inputs represented as points in a <inline-formula><mml:math id="inf411"><mml:mi>N</mml:mi></mml:math></inline-formula>-dimensional space (<xref ref-type="bibr" rid="bib22">Cover, 1965</xref>). For inputs in general position, the number of dichotomies realizable by a zero-threshold perceptron is given by<disp-formula id="equ17"><label>(17)</label><mml:math id="m17"><mml:mrow><mml:mstyle displaystyle="true" scriptlevel="0"><mml:msub><mml:mrow><mml:mi mathvariant="script">N</mml:mi></mml:mrow><mml:mrow><mml:mi>P</mml:mi><mml:mo>,</mml:mo><mml:mi>N</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mn>2</mml:mn><mml:munderover><mml:mo>∑</mml:mo><mml:mrow><mml:mi>k</mml:mi><mml:mo>=</mml:mo><mml:mn>0</mml:mn></mml:mrow><mml:mrow><mml:mi>N</mml:mi><mml:mo>−</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:munderover><mml:mrow><mml:mrow><mml:mo maxsize="2.047em" minsize="2.047em">(</mml:mo></mml:mrow><mml:mfrac linethickness="0pt"><mml:mrow><mml:mi>P</mml:mi><mml:mo>−</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>k</mml:mi></mml:mfrac><mml:mrow><mml:mo maxsize="2.047em" minsize="2.047em">)</mml:mo></mml:mrow></mml:mrow><mml:mo>,</mml:mo></mml:mstyle></mml:mrow></mml:math></disp-formula></p><p>which shows that all dichotomies are possible as long as <inline-formula><mml:math id="inf412"><mml:mrow><mml:mi>P</mml:mi><mml:mo>≤</mml:mo><mml:mi>N</mml:mi></mml:mrow></mml:math></inline-formula>. A collection of points <inline-formula><mml:math id="inf413"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mo fence="false" stretchy="false">{</mml:mo><mml:msub><mml:mi mathvariant="bold-italic">x</mml:mi><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi mathvariant="bold-italic">x</mml:mi><mml:mrow><mml:mi>P</mml:mi></mml:mrow></mml:msub><mml:mo fence="false" stretchy="false">}</mml:mo></mml:mrow></mml:mstyle></mml:math></inline-formula> in an <inline-formula><mml:math id="inf414"><mml:mi>N</mml:mi></mml:math></inline-formula>-dimensional space is in general position if no subset of <inline-formula><mml:math id="inf415"><mml:mrow><mml:mi>n</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:math></inline-formula> points lies on a <inline-formula><mml:math id="inf416"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi>n</mml:mi><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula>-dimensional plane for all <inline-formula><mml:math id="inf417"><mml:mrow><mml:mi>n</mml:mi><mml:mo>≤</mml:mo><mml:mi>N</mml:mi></mml:mrow></mml:math></inline-formula>. In our modeling framework, the inputs are collections of points representing grid-like inputs <inline-formula><mml:math id="inf418"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msub><mml:mrow><mml:mi mathvariant="script">C</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="bold-italic">λ</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mstyle></mml:math></inline-formula>. As opposed to Cover’s theorem assumptions, these grid-like inputs are not in general position as soon as we consider grid code with more than one module. For instance, it is not hard to see that for <inline-formula><mml:math id="inf419"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mi mathvariant="bold-italic">λ</mml:mi><mml:mo>=</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mn>2</mml:mn><mml:mo>,</mml:mo><mml:mn>3</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mstyle></mml:math></inline-formula>, the patterns <inline-formula><mml:math id="inf420"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mrow><mml:mn>0</mml:mn><mml:mo lspace="2.5pt" rspace="2.5pt" stretchy="false">|</mml:mo><mml:mrow><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mn>0</mml:mn><mml:mo>,</mml:mo><mml:mn>0</mml:mn></mml:mrow></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula>, <inline-formula><mml:math id="inf421"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mrow><mml:mn>0</mml:mn><mml:mo lspace="2.5pt" rspace="2.5pt" stretchy="false">|</mml:mo><mml:mrow><mml:mn>0</mml:mn><mml:mo>,</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mn>0</mml:mn></mml:mrow></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula>, <inline-formula><mml:math id="inf422"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mn>0</mml:mn><mml:mo>,</mml:mo><mml:mn>1</mml:mn><mml:mrow><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mn>0</mml:mn><mml:mo>,</mml:mo><mml:mn>0</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mstyle></mml:math></inline-formula> and <inline-formula><mml:math id="inf423"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mn>0</mml:mn><mml:mo>,</mml:mo><mml:mn>1</mml:mn><mml:mrow><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:mn>0</mml:mn><mml:mo>,</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mn>0</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mstyle></mml:math></inline-formula> are not in general position for being the vertices of a square, therefore lying in a 2D plane. Nongeneric arrangements of grid-like inputs are due to symmetries that are inherent to the modular structure of the grid code. We expect such symmetries to heavily restrict the set of linearly separable dichotomies, therefore constraining the multi-field structure of a place cell perceptron.</p><p>We justify the above expectation by discussing the problem of linear separability for two codes that are related to the grid code. These two codes are the ‘one-hot’ code, whereby a single cell is active for all input pattern, and the ‘binary’ code, whereby the set of input patterns enumerate all possible binary vectors of activity. Exemplars of grid-like inputs for the one-hot code and the binary code are given for <inline-formula><mml:math id="inf424"><mml:mrow><mml:mi>N</mml:mi><mml:mo>=</mml:mo><mml:mn>3</mml:mn></mml:mrow></mml:math></inline-formula> input cells by<disp-formula id="equ18"><label>(18)</label><mml:math id="m18"><mml:mrow><mml:mstyle displaystyle="true" scriptlevel="0"><mml:msub><mml:mrow><mml:mi mathvariant="script">C</mml:mi></mml:mrow><mml:mrow><mml:mrow><mml:mi mathvariant="normal">o</mml:mi><mml:mi mathvariant="normal">h</mml:mi></mml:mrow></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:mo>{</mml:mo><mml:mtable columnalign="center center center" columnspacing="1em" rowspacing="4pt"><mml:mtr><mml:mtd><mml:mn>1</mml:mn></mml:mtd><mml:mtd><mml:mn>0</mml:mn></mml:mtd><mml:mtd><mml:mn>0</mml:mn></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mn>0</mml:mn></mml:mtd><mml:mtd><mml:mn>1</mml:mn></mml:mtd><mml:mtd><mml:mn>0</mml:mn></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mn>0</mml:mn></mml:mtd><mml:mtd><mml:mn>0</mml:mn></mml:mtd><mml:mtd><mml:mn>1</mml:mn></mml:mtd></mml:mtr></mml:mtable><mml:mo>}</mml:mo></mml:mrow><mml:mtext> </mml:mtext><mml:mspace width="1em"/><mml:mrow><mml:mi mathvariant="normal">a</mml:mi><mml:mi mathvariant="normal">n</mml:mi><mml:mi mathvariant="normal">d</mml:mi></mml:mrow><mml:mtext> </mml:mtext><mml:mspace width="1em"/><mml:msub><mml:mrow><mml:mi mathvariant="script">C</mml:mi></mml:mrow><mml:mrow><mml:mrow><mml:mi mathvariant="normal">b</mml:mi></mml:mrow></mml:mrow></mml:msub><mml:mtext> </mml:mtext><mml:mo>=</mml:mo><mml:mtext> </mml:mtext><mml:mrow><mml:mo>{</mml:mo><mml:mtable columnalign="center center center center center center center center" columnspacing="1em" rowspacing="4pt"><mml:mtr><mml:mtd><mml:mn>0</mml:mn></mml:mtd><mml:mtd><mml:mn>0</mml:mn></mml:mtd><mml:mtd><mml:mn>0</mml:mn></mml:mtd><mml:mtd><mml:mn>0</mml:mn></mml:mtd><mml:mtd><mml:mn>1</mml:mn></mml:mtd><mml:mtd><mml:mn>1</mml:mn></mml:mtd><mml:mtd><mml:mn>1</mml:mn></mml:mtd><mml:mtd><mml:mn>1</mml:mn></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mn>0</mml:mn></mml:mtd><mml:mtd><mml:mn>0</mml:mn></mml:mtd><mml:mtd><mml:mn>1</mml:mn></mml:mtd><mml:mtd><mml:mn>1</mml:mn></mml:mtd><mml:mtd><mml:mn>0</mml:mn></mml:mtd><mml:mtd><mml:mn>0</mml:mn></mml:mtd><mml:mtd><mml:mn>1</mml:mn></mml:mtd><mml:mtd><mml:mn>1</mml:mn></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mn>0</mml:mn></mml:mtd><mml:mtd><mml:mn>1</mml:mn></mml:mtd><mml:mtd><mml:mn>0</mml:mn></mml:mtd><mml:mtd><mml:mn>1</mml:mn></mml:mtd><mml:mtd><mml:mn>0</mml:mn></mml:mtd><mml:mtd><mml:mn>1</mml:mn></mml:mtd><mml:mtd><mml:mn>0</mml:mn></mml:mtd><mml:mtd><mml:mn>1</mml:mn></mml:mtd></mml:mtr></mml:mtable><mml:mo>}</mml:mo></mml:mrow><mml:mspace width="thinmathspace"/><mml:mo>.</mml:mo></mml:mstyle></mml:mrow></mml:math></disp-formula></p><p>From a geometrical point of view, a set of points representing the grid-like inputs <inline-formula><mml:math id="inf425"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msub><mml:mrow><mml:mi mathvariant="script">S</mml:mi></mml:mrow><mml:mrow><mml:mi>J</mml:mi></mml:mrow></mml:msub><mml:mo>⊂</mml:mo><mml:mrow><mml:mi mathvariant="script">C</mml:mi></mml:mrow></mml:mrow></mml:mstyle></mml:math></inline-formula> is linearly separable if there is a hyperplane separating the points <inline-formula><mml:math id="inf426"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mrow><mml:mi mathvariant="script">S</mml:mi></mml:mrow></mml:mrow></mml:mstyle></mml:math></inline-formula> from the other points <inline-formula><mml:math id="inf427"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mrow><mml:mi mathvariant="script">C</mml:mi></mml:mrow><mml:mo>∖</mml:mo><mml:mrow><mml:mi mathvariant="script">S</mml:mi></mml:mrow></mml:mrow></mml:mstyle></mml:math></inline-formula>. The existence of a hyperplane separating a single point from all other points is straightforward when the set of patterns correspond to the vertices of a convex polytope. Then, every vertex can be linearly separated from the other points for being an extreme point. It turns out that both the population patterns of the one-hot code and of the binary code represent the vertices of a convex polytope: a simplex for the single-cell code and a hypercube for the binary code. However, because these vertices are in general position for the single-cell code but not for the binary code, the fraction of linearly separable dichotomies drastically differs for the two codes.</p><p>Let us first consider the <inline-formula><mml:math id="inf428"><mml:mi>N</mml:mi></mml:math></inline-formula> points whose coordinates are given by <inline-formula><mml:math id="inf429"><mml:msub><mml:mi>C</mml:mi><mml:mi>oh</mml:mi></mml:msub></mml:math></inline-formula>. The convex hull of <inline-formula><mml:math id="inf430"><mml:msub><mml:mi>C</mml:mi><mml:mi>oh</mml:mi></mml:msub></mml:math></inline-formula> is the canonical <inline-formula><mml:math id="inf431"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mpadded width="-1.7pt"><mml:mi>N</mml:mi></mml:mpadded><mml:mo rspace="0.8pt">-</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula>-dimensional simplex. Thus, any sets of <inline-formula><mml:math id="inf432"><mml:mi>k</mml:mi></mml:math></inline-formula> vertices, <inline-formula><mml:math id="inf433"><mml:mrow><mml:mn>1</mml:mn><mml:mo>≤</mml:mo><mml:mi>k</mml:mi><mml:mo>≤</mml:mo><mml:mi>N</mml:mi></mml:mrow></mml:math></inline-formula>, specifies a <inline-formula><mml:math id="inf434"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mpadded width="-1.7pt"><mml:mi>k</mml:mi></mml:mpadded><mml:mo rspace="0.8pt">-</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula>-dimensional face of the simplex, and as such, is a linearly separable <inline-formula><mml:math id="inf435"><mml:mi>k</mml:mi></mml:math></inline-formula>-dichotomy. This immediately shows that all dichotomies are linearly separable. This result follows from the fact that the <inline-formula><mml:math id="inf436"><mml:mi>N</mml:mi></mml:math></inline-formula> points in <inline-formula><mml:math id="inf437"><mml:msub><mml:mi>C</mml:mi><mml:mi>oh</mml:mi></mml:msub></mml:math></inline-formula> are in general position. Let us then consider the <inline-formula><mml:math id="inf438"><mml:msup><mml:mn>2</mml:mn><mml:mi>N</mml:mi></mml:msup></mml:math></inline-formula> points whose coordinates are given by <inline-formula><mml:math id="inf439"><mml:msub><mml:mi>C</mml:mi><mml:mi mathvariant="normal">b</mml:mi></mml:msub></mml:math></inline-formula>. The convex hull of <inline-formula><mml:math id="inf440"><mml:msub><mml:mi>C</mml:mi><mml:mi mathvariant="normal">b</mml:mi></mml:msub></mml:math></inline-formula> is the canonical <inline-formula><mml:math id="inf441"><mml:mi>N</mml:mi></mml:math></inline-formula>-dimensional hypercube. Thus, by contrast with <inline-formula><mml:math id="inf442"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msub><mml:mi>C</mml:mi><mml:mrow><mml:mrow><mml:mi mathvariant="normal">o</mml:mi><mml:mi mathvariant="normal">h</mml:mi></mml:mrow></mml:mrow></mml:msub></mml:mrow></mml:mstyle></mml:math></inline-formula>, the points in <inline-formula><mml:math id="inf443"><mml:msub><mml:mi>C</mml:mi><mml:mi mathvariant="normal">b</mml:mi></mml:msub></mml:math></inline-formula> are not in general position. As a result, there are dichotomies that are not linearly separable as shown by considering. For instance, the pair <inline-formula><mml:math id="inf444"><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mn>0</mml:mn><mml:mo>,</mml:mo><mml:mn>0</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula>, <inline-formula><mml:math id="inf445"><mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mn>0</mml:mn><mml:mo>,</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mn>0</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo stretchy="false">}</mml:mo></mml:mrow></mml:math></inline-formula> and the pair <inline-formula><mml:math id="inf446"><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mn>0</mml:mn><mml:mo>,</mml:mo><mml:mn>0</mml:mn><mml:mo>,</mml:mo><mml:mn>0</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula>, <inline-formula><mml:math id="inf447"><mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo stretchy="false">}</mml:mo></mml:mrow></mml:math></inline-formula> can be linearly separated from the other points of the hypercube. Determining the number of linearly separable sets of hypercube vertices is a hard combinatorial problem that has attracted a lot of interest (<xref ref-type="bibr" rid="bib63">Peled and Simeone, 1985</xref>; <xref ref-type="bibr" rid="bib37">Hegedüs and Megiddo, 1996</xref>). Unfortunately, there is no efficient characterization of that number as a function of the dimension <inline-formula><mml:math id="inf448"><mml:mi>N</mml:mi></mml:math></inline-formula>. However, it is known that out of the <inline-formula><mml:math id="inf449"><mml:msup><mml:mn>2</mml:mn><mml:msup><mml:mn>2</mml:mn><mml:mi>N</mml:mi></mml:msup></mml:msup></mml:math></inline-formula> possible dichotomies, the total number of linearly separable dichotomies scales as <inline-formula><mml:math id="inf450"><mml:msup><mml:mn>2</mml:mn><mml:msup><mml:mi>N</mml:mi><mml:mn>2</mml:mn></mml:msup></mml:msup></mml:math></inline-formula> in the limit of large dimension <inline-formula><mml:math id="inf451"><mml:mrow><mml:mi>N</mml:mi><mml:mo>→</mml:mo><mml:mi mathvariant="normal">∞</mml:mi></mml:mrow></mml:math></inline-formula> (<xref ref-type="bibr" rid="bib39">Irmatov, 1993</xref>). This shows that only a vanishingly small fraction of hypercube dichotomies are also linearly separable.</p><sec id="s11-1" sec-type="appendix"><title>Grid code convex polytope</title><p>It is beneficial to gain geometric intuition about grid-like inputs to characterize their linearly separable dichotomies. As binary vectors of length <inline-formula><mml:math id="inf452"><mml:mi>N</mml:mi></mml:math></inline-formula>, grid-like inputs form a subset of the <inline-formula><mml:math id="inf453"><mml:msup><mml:mn>2</mml:mn><mml:mi>N</mml:mi></mml:msup></mml:math></inline-formula> vertices of the <inline-formula><mml:math id="inf454"><mml:mi>N</mml:mi></mml:math></inline-formula>-dimensional hypercube. Just as for the one-hot and binary codes, linear separability of sets of grid-like inputs can be seen as a geometric problem about polytopes. To clarify this point, let us denote by <inline-formula><mml:math id="inf455"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msub><mml:mi>H</mml:mi><mml:mrow><mml:mi mathvariant="bold-italic">λ</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mstyle></mml:math></inline-formula> the convex hull of grid-like inputs <inline-formula><mml:math id="inf456"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msub><mml:mrow><mml:mi mathvariant="script">C</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="bold-italic">λ</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mstyle></mml:math></inline-formula>. By definition, we have<disp-formula id="equ19"><label>(19)</label><mml:math id="m19"><mml:mrow><mml:mstyle displaystyle="true" scriptlevel="0"><mml:msub><mml:mi>H</mml:mi><mml:mrow><mml:mi mathvariant="bold-italic">λ</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:mo>{</mml:mo><mml:mrow><mml:munderover><mml:mo>∑</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mi>L</mml:mi></mml:mrow></mml:munderover><mml:msub><mml:mi>α</mml:mi><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:msub><mml:mi mathvariant="bold-italic">c</mml:mi><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mrow><mml:mo maxsize="2.047em" minsize="2.047em">|</mml:mo></mml:mrow><mml:msub><mml:mi>α</mml:mi><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mo>≥</mml:mo><mml:mn>0</mml:mn><mml:mo>,</mml:mo><mml:mi>g</mml:mi><mml:mi>t</mml:mi><mml:munder><mml:mo>∑</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:munder><mml:msub><mml:mi>α</mml:mi><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mo>}</mml:mo></mml:mrow><mml:mo>,</mml:mo></mml:mstyle></mml:mrow></mml:math></disp-formula></p><p>where <inline-formula><mml:math id="inf457"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msub><mml:mi mathvariant="bold-italic">c</mml:mi><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mstyle></mml:math></inline-formula> in <inline-formula><mml:math id="inf458"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msub><mml:mrow><mml:mi mathvariant="script">C</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="bold-italic">λ</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mstyle></mml:math></inline-formula> denotes the ith column of <inline-formula><mml:math id="inf459"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msub><mml:mi>A</mml:mi><mml:mrow><mml:mi mathvariant="bold-italic">λ</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mstyle></mml:math></inline-formula>. The convex hull <inline-formula><mml:math id="inf460"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msub><mml:mi>H</mml:mi><mml:mrow><mml:mi mathvariant="bold-italic">λ</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mstyle></mml:math></inline-formula> turns out to have a simple geometric structure.</p></sec></sec><sec id="s12" sec-type="appendix"><title>Proposition 3</title><p>For integer periods <inline-formula><mml:math id="inf461"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mi mathvariant="bold-italic">λ</mml:mi><mml:mo>=</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mi>M</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mstyle></mml:math></inline-formula>, the convex hull generated by <inline-formula><mml:math id="inf462"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msub><mml:mrow><mml:mi mathvariant="script">C</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="bold-italic">λ</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mstyle></mml:math></inline-formula>, the set of grid-cell-population patterns, determines a <inline-formula><mml:math id="inf463"><mml:mi>d</mml:mi></mml:math></inline-formula>-dimensional polytope <inline-formula><mml:math id="inf464"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msub><mml:mi>H</mml:mi><mml:mrow><mml:mi mathvariant="bold-italic">λ</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mstyle></mml:math></inline-formula>, with <inline-formula><mml:math id="inf465"><mml:mrow><mml:mi>d</mml:mi><mml:mo mathvariant="normal">=</mml:mo><mml:mrow><mml:mrow><mml:msubsup><mml:mo largeop="true" mathvariant="normal" symmetric="true">∑</mml:mo><mml:mrow><mml:mi>m</mml:mi><mml:mo mathvariant="normal">=</mml:mo><mml:mn mathvariant="normal">1</mml:mn></mml:mrow><mml:mi>M</mml:mi></mml:msubsup><mml:msub><mml:mi>λ</mml:mi><mml:mi>m</mml:mi></mml:msub></mml:mrow><mml:mo mathvariant="normal">-</mml:mo><mml:mi>M</mml:mi></mml:mrow></mml:mrow></mml:math></inline-formula>, defined as <inline-formula><mml:math id="inf466"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msub><mml:mi>H</mml:mi><mml:mrow><mml:mi mathvariant="bold-italic">λ</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:msup><mml:mi mathvariant="normal">Δ</mml:mi><mml:mrow><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub></mml:mrow></mml:msup><mml:mo>×</mml:mo><mml:mo>…</mml:mo><mml:mo>×</mml:mo><mml:msup><mml:mi mathvariant="normal">Δ</mml:mi><mml:mrow><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mi>M</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msup></mml:mrow></mml:mstyle></mml:math></inline-formula> where <inline-formula><mml:math id="inf467"><mml:msup><mml:mi mathvariant="normal">Δ</mml:mi><mml:msub><mml:mi>λ</mml:mi><mml:mi>m</mml:mi></mml:msub></mml:msup></mml:math></inline-formula>, <inline-formula><mml:math id="inf468"><mml:mrow><mml:mn mathvariant="normal">1</mml:mn><mml:mo mathvariant="normal">≤</mml:mo><mml:mi>m</mml:mi><mml:mo mathvariant="normal">≤</mml:mo><mml:mi>M</mml:mi></mml:mrow></mml:math></inline-formula>, denotes the <inline-formula><mml:math id="inf469"><mml:mrow><mml:mo mathvariant="normal" stretchy="false">(</mml:mo><mml:mrow><mml:mpadded width="-1.7pt"><mml:msub><mml:mi>λ</mml:mi><mml:mi>m</mml:mi></mml:msub></mml:mpadded><mml:mo mathvariant="normal" rspace="0.8pt">-</mml:mo><mml:mn mathvariant="normal">1</mml:mn></mml:mrow><mml:mo mathvariant="normal" stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula>-simplex specified by the <inline-formula><mml:math id="inf470"><mml:msub><mml:mi>λ</mml:mi><mml:mi>m</mml:mi></mml:msub></mml:math></inline-formula> points: <inline-formula><mml:math id="inf471"><mml:mrow><mml:mrow><mml:mo mathvariant="normal" stretchy="false">(</mml:mo><mml:mn mathvariant="normal">1</mml:mn><mml:mo mathvariant="normal">,</mml:mo><mml:mn mathvariant="normal">0</mml:mn><mml:mo mathvariant="normal">,</mml:mo><mml:mi mathvariant="normal">…</mml:mi><mml:mo mathvariant="normal">,</mml:mo><mml:mn mathvariant="normal">0</mml:mn><mml:mo mathvariant="normal" rspace="4.2pt" stretchy="false">)</mml:mo></mml:mrow><mml:mo mathvariant="normal" rspace="4.2pt">,</mml:mo><mml:mrow><mml:mo mathvariant="normal" stretchy="false">(</mml:mo><mml:mn mathvariant="normal">0</mml:mn><mml:mo mathvariant="normal">,</mml:mo><mml:mn mathvariant="normal">1</mml:mn><mml:mo mathvariant="normal">,</mml:mo><mml:mrow><mml:mn mathvariant="normal">0</mml:mn><mml:mo mathvariant="italic">⁢</mml:mo><mml:mi mathvariant="normal">…</mml:mi></mml:mrow><mml:mo mathvariant="normal">,</mml:mo><mml:mn mathvariant="normal">0</mml:mn><mml:mo mathvariant="normal" rspace="4.2pt" stretchy="false">)</mml:mo></mml:mrow><mml:mo mathvariant="normal" rspace="4.2pt">,</mml:mo><mml:mpadded width="+1.7pt"><mml:mi mathvariant="normal">…</mml:mi></mml:mpadded><mml:mo mathvariant="normal" rspace="4.2pt">,</mml:mo><mml:mrow><mml:mo mathvariant="normal" stretchy="false">(</mml:mo><mml:mn mathvariant="normal">0</mml:mn><mml:mo mathvariant="normal">,</mml:mo><mml:mi mathvariant="normal">…</mml:mi><mml:mo mathvariant="normal">,</mml:mo><mml:mn mathvariant="normal">0</mml:mn><mml:mo mathvariant="normal">,</mml:mo><mml:mn mathvariant="normal">1</mml:mn><mml:mo mathvariant="normal" stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula>.</p><p>Before proving the product decomposition of <inline-formula><mml:math id="inf472"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msub><mml:mi>H</mml:mi><mml:mrow><mml:mi mathvariant="bold-italic">λ</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mstyle></mml:math></inline-formula>, let us make a couple of observations. First, observe that all the vectors <inline-formula><mml:math id="inf473"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mi mathvariant="bold-italic">c</mml:mi></mml:mrow></mml:mstyle></mml:math></inline-formula> in <inline-formula><mml:math id="inf474"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msub><mml:mi>C</mml:mi><mml:mrow><mml:mi mathvariant="bold-italic">λ</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mstyle></mml:math></inline-formula> satisfies <inline-formula><mml:math id="inf475"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msup><mml:mn mathvariant="bold">1</mml:mn><mml:mrow><mml:mi>T</mml:mi></mml:mrow></mml:msup><mml:mi mathvariant="bold-italic">c</mml:mi><mml:mo>=</mml:mo><mml:mi>M</mml:mi></mml:mrow></mml:mstyle></mml:math></inline-formula>, so that all edges <inline-formula><mml:math id="inf476"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mi mathvariant="bold-italic">c</mml:mi><mml:mo>−</mml:mo><mml:msup><mml:mi mathvariant="bold-italic">c</mml:mi><mml:mrow><mml:mi mathvariant="normal">′</mml:mi></mml:mrow></mml:msup></mml:mrow></mml:mstyle></mml:math></inline-formula>, with <inline-formula><mml:math id="inf477"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mi mathvariant="bold-italic">c</mml:mi></mml:mrow></mml:mstyle></mml:math></inline-formula>, <inline-formula><mml:math id="inf478"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msup><mml:mi mathvariant="bold-italic">c</mml:mi><mml:mrow><mml:mi mathvariant="normal">′</mml:mi></mml:mrow></mml:msup></mml:mrow></mml:mstyle></mml:math></inline-formula> in <inline-formula><mml:math id="inf479"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msub><mml:mi>C</mml:mi><mml:mrow><mml:mi mathvariant="bold-italic">λ</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mstyle></mml:math></inline-formula>, lie in the same hyperplane of the vector space <inline-formula><mml:math id="inf480"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msub><mml:mi>V</mml:mi><mml:mrow><mml:mi mathvariant="bold-italic">λ</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mstyle></mml:math></inline-formula>. By Proposition 1, <inline-formula><mml:math id="inf481"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msub><mml:mi>V</mml:mi><mml:mrow><mml:mi mathvariant="bold-italic">λ</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mstyle></mml:math></inline-formula> has dimension <inline-formula><mml:math id="inf482"><mml:mrow><mml:mi>N</mml:mi><mml:mo>=</mml:mo><mml:mrow><mml:mrow><mml:mrow><mml:msub><mml:mo largeop="true" symmetric="true">∑</mml:mo><mml:mi>m</mml:mi></mml:msub><mml:msub><mml:mi>λ</mml:mi><mml:mi>m</mml:mi></mml:msub></mml:mrow><mml:mo>-</mml:mo><mml:mi>M</mml:mi></mml:mrow><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:mrow></mml:math></inline-formula>, this implies that the dimension of the polytope <inline-formula><mml:math id="inf483"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msub><mml:mi>H</mml:mi><mml:mrow><mml:mi mathvariant="bold-italic">λ</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mstyle></mml:math></inline-formula> is at most <inline-formula><mml:math id="inf484"><mml:mrow><mml:mi>d</mml:mi><mml:mo>=</mml:mo><mml:mrow><mml:mi>N</mml:mi><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:mrow></mml:math></inline-formula>. Second, observe that the set <inline-formula><mml:math id="inf485"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msub><mml:mi>C</mml:mi><mml:mrow><mml:mi mathvariant="bold-italic">λ</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mstyle></mml:math></inline-formula> is left unchanged by the symmetry operators <inline-formula><mml:math id="inf486"><mml:msub><mml:mi>J</mml:mi><mml:msub><mml:mi>λ</mml:mi><mml:mi>m</mml:mi></mml:msub></mml:msub></mml:math></inline-formula>, <inline-formula><mml:math id="inf487"><mml:mrow><mml:mn>1</mml:mn><mml:mo>≤</mml:mo><mml:mi>m</mml:mi><mml:mo>≤</mml:mo><mml:mi>M</mml:mi></mml:mrow></mml:math></inline-formula>, where <inline-formula><mml:math id="inf488"><mml:msub><mml:mi>J</mml:mi><mml:msub><mml:mi>λ</mml:mi><mml:mi>m</mml:mi></mml:msub></mml:msub></mml:math></inline-formula> cyclically shifts downward the mth module coordinates of the vectors in <inline-formula><mml:math id="inf489"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msub><mml:mi>C</mml:mi><mml:mrow><mml:mi mathvariant="bold-italic">λ</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mstyle></mml:math></inline-formula>. The operators <inline-formula><mml:math id="inf490"><mml:msub><mml:mi>J</mml:mi><mml:msub><mml:mi>λ</mml:mi><mml:mi>m</mml:mi></mml:msub></mml:msub></mml:math></inline-formula> admit the matrix representation<disp-formula id="equ20"><label>(20)</label><mml:math id="m20"><mml:mrow><mml:msub><mml:mi>J</mml:mi><mml:msub><mml:mi>λ</mml:mi><mml:mi>m</mml:mi></mml:msub></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:mo>(</mml:mo><mml:mtable columnspacing="5pt" rowspacing="0pt"><mml:mtr><mml:mtd columnalign="center"><mml:msub><mml:mi>I</mml:mi><mml:mrow><mml:msub><mml:mi>λ</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>+</mml:mo><mml:mi mathvariant="normal">…</mml:mi><mml:mo>+</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mi>m</mml:mi><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub></mml:mrow></mml:msub></mml:mtd><mml:mtd/><mml:mtd/><mml:mtd/><mml:mtd/></mml:mtr><mml:mtr><mml:mtd/><mml:mtd columnalign="center"><mml:msub><mml:mi>J</mml:mi><mml:msub><mml:mi>λ</mml:mi><mml:mi>m</mml:mi></mml:msub></mml:msub></mml:mtd><mml:mtd/><mml:mtd/><mml:mtd/></mml:mtr><mml:mtr><mml:mtd/><mml:mtd/><mml:mtd/><mml:mtd columnalign="center"><mml:msub><mml:mi>I</mml:mi><mml:mrow><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mi>m</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:mi mathvariant="normal">…</mml:mi><mml:mo>+</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mi>M</mml:mi></mml:msub></mml:mrow></mml:msub></mml:mtd><mml:mtd/></mml:mtr></mml:mtable><mml:mo>)</mml:mo></mml:mrow><mml:mo mathvariant="italic" separator="true"> </mml:mo><mml:mi>with</mml:mi><mml:mo mathvariant="italic" separator="true"> </mml:mo><mml:msub><mml:mi>J</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:mo>(</mml:mo><mml:mpadded width="+1.7pt"><mml:mtable columnspacing="5pt" rowspacing="0pt"><mml:mtr><mml:mtd columnalign="center"><mml:mn>0</mml:mn></mml:mtd><mml:mtd columnalign="center"><mml:mn>1</mml:mn></mml:mtd><mml:mtd columnalign="center"><mml:mn>0</mml:mn></mml:mtd><mml:mtd columnalign="center"><mml:mn>0</mml:mn></mml:mtd><mml:mtd columnalign="center"><mml:mi mathvariant="normal">…</mml:mi></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="center"><mml:mn>0</mml:mn></mml:mtd><mml:mtd columnalign="center"><mml:mn>0</mml:mn></mml:mtd><mml:mtd columnalign="center"><mml:mn>1</mml:mn></mml:mtd><mml:mtd columnalign="center"><mml:mn>0</mml:mn></mml:mtd><mml:mtd columnalign="center"><mml:mi mathvariant="normal">…</mml:mi></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="center"><mml:mi mathvariant="normal">⋮</mml:mi></mml:mtd><mml:mtd/><mml:mtd columnalign="center"><mml:mi mathvariant="normal">⋱</mml:mi></mml:mtd><mml:mtd columnalign="center"><mml:mi mathvariant="normal">⋱</mml:mi></mml:mtd><mml:mtd columnalign="center"><mml:mi mathvariant="normal">⋱</mml:mi></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="center"><mml:mn>1</mml:mn></mml:mtd><mml:mtd columnalign="center"><mml:mn>0</mml:mn></mml:mtd><mml:mtd columnalign="center"><mml:mi mathvariant="normal">…</mml:mi></mml:mtd><mml:mtd/><mml:mtd/></mml:mtr></mml:mtable></mml:mpadded><mml:mo>,</mml:mo><mml:mo>)</mml:mo></mml:mrow><mml:mo>∈</mml:mo><mml:msup><mml:mi>ℝ</mml:mi><mml:mi>n</mml:mi></mml:msup><mml:mo>×</mml:mo><mml:mpadded width="+1.7pt"><mml:msup><mml:mi>ℝ</mml:mi><mml:mi>n</mml:mi></mml:msup></mml:mpadded><mml:mo>,</mml:mo></mml:mrow></mml:math></disp-formula></p><p>where <inline-formula><mml:math id="inf491"><mml:msub><mml:mi>I</mml:mi><mml:mi>n</mml:mi></mml:msub></mml:math></inline-formula> denotes the identity matrix in <inline-formula><mml:math id="inf492"><mml:mrow><mml:msup><mml:mi>ℝ</mml:mi><mml:mi>n</mml:mi></mml:msup><mml:mo>×</mml:mo><mml:msup><mml:mi>ℝ</mml:mi><mml:mi>n</mml:mi></mml:msup></mml:mrow></mml:math></inline-formula>. Notice that the matrices <inline-formula><mml:math id="inf493"><mml:msub><mml:mi>J</mml:mi><mml:msub><mml:mi>λ</mml:mi><mml:mi>m</mml:mi></mml:msub></mml:msub></mml:math></inline-formula> satisfy <inline-formula><mml:math id="inf494"><mml:mrow><mml:mrow><mml:msubsup><mml:mi>J</mml:mi><mml:msub><mml:mi>λ</mml:mi><mml:mi>m</mml:mi></mml:msub><mml:mi>T</mml:mi></mml:msubsup><mml:mo>⁢</mml:mo><mml:msub><mml:mi>J</mml:mi><mml:msub><mml:mi>λ</mml:mi><mml:mi>m</mml:mi></mml:msub></mml:msub></mml:mrow><mml:mo>=</mml:mo><mml:msub><mml:mi>I</mml:mi><mml:mrow><mml:msub><mml:mi>λ</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>+</mml:mo><mml:mi mathvariant="normal">…</mml:mi><mml:mo>+</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mi>M</mml:mi></mml:msub></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> showing that the operators <inline-formula><mml:math id="inf495"><mml:msub><mml:mi>J</mml:mi><mml:msub><mml:mi>λ</mml:mi><mml:mi>m</mml:mi></mml:msub></mml:msub></mml:math></inline-formula> are isometries in <inline-formula><mml:math id="inf496"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msub><mml:mi mathvariant="bold-italic">V</mml:mi><mml:mrow><mml:mi mathvariant="bold-italic">λ</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mstyle></mml:math></inline-formula>. Moreover, observe that for all <inline-formula><mml:math id="inf497"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mi mathvariant="bold-italic">c</mml:mi></mml:mrow></mml:mstyle></mml:math></inline-formula>, <inline-formula><mml:math id="inf498"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msup><mml:mi mathvariant="bold-italic">c</mml:mi><mml:mrow><mml:mi mathvariant="normal">′</mml:mi></mml:mrow></mml:msup></mml:mrow></mml:mstyle></mml:math></inline-formula> in <inline-formula><mml:math id="inf499"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msub><mml:mi>C</mml:mi><mml:mrow><mml:mi mathvariant="bold-italic">λ</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mstyle></mml:math></inline-formula>, there are integers of <inline-formula><mml:math id="inf500"><mml:mrow><mml:msub><mml:mi>k</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:mi mathvariant="normal">…</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mi>k</mml:mi><mml:mi>M</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> such that <inline-formula><mml:math id="inf501"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msubsup><mml:mi>J</mml:mi><mml:mrow><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub></mml:mrow><mml:mrow><mml:msub><mml:mi>k</mml:mi><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub></mml:mrow></mml:msubsup><mml:mo>…</mml:mo><mml:msubsup><mml:mi>J</mml:mi><mml:mrow><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub></mml:mrow><mml:mrow><mml:msub><mml:mi>k</mml:mi><mml:mrow><mml:mi>M</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msubsup><mml:mi mathvariant="bold-italic">c</mml:mi><mml:mo>=</mml:mo><mml:msup><mml:mi mathvariant="bold-italic">c</mml:mi><mml:mrow><mml:mi mathvariant="normal">′</mml:mi></mml:mrow></mml:msup></mml:mrow></mml:mstyle></mml:math></inline-formula>. This shows that each vector in <inline-formula><mml:math id="inf502"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msub><mml:mi>C</mml:mi><mml:mrow><mml:mi mathvariant="bold-italic">λ</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mstyle></mml:math></inline-formula> plays the same role in defining the geometry of <inline-formula><mml:math id="inf503"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msub><mml:mi>H</mml:mi><mml:mrow><mml:mi mathvariant="bold-italic">λ</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mstyle></mml:math></inline-formula>, and thus <inline-formula><mml:math id="inf504"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msub><mml:mi>H</mml:mi><mml:mrow><mml:mi mathvariant="bold-italic">λ</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mstyle></mml:math></inline-formula> is vertex-transitive. In particular, every vector in <inline-formula><mml:math id="inf505"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msub><mml:mi>C</mml:mi><mml:mrow><mml:mi mathvariant="bold-italic">λ</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mstyle></mml:math></inline-formula> represents an extreme point of the convex hull <inline-formula><mml:math id="inf506"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msub><mml:mi>H</mml:mi><mml:mrow><mml:mi mathvariant="bold-italic">λ</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mstyle></mml:math></inline-formula>. As a result, <inline-formula><mml:math id="inf507"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msub><mml:mi>H</mml:mi><mml:mrow><mml:mi mathvariant="bold-italic">λ</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mstyle></mml:math></inline-formula> is a polytope with as many vertices as the cardinality of <inline-formula><mml:math id="inf508"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msub><mml:mi>C</mml:mi><mml:mrow><mml:mi mathvariant="bold-italic">λ</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mstyle></mml:math></inline-formula>, that is, <inline-formula><mml:math id="inf509"><mml:mrow><mml:mi mathvariant="normal">Λ</mml:mi><mml:mo>=</mml:mo><mml:mrow><mml:msubsup><mml:mo largeop="true" symmetric="true">∏</mml:mo><mml:mrow><mml:mi>m</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>M</mml:mi></mml:msubsup><mml:msub><mml:mi>λ</mml:mi><mml:mi>m</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>. The product decomposition of the polytope <inline-formula><mml:math id="inf510"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msub><mml:mi>H</mml:mi><mml:mrow><mml:mi mathvariant="bold-italic">λ</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mstyle></mml:math></inline-formula> then follows from a simple recurrence argument over the number of modules <inline-formula><mml:math id="inf511"><mml:mi>M</mml:mi></mml:math></inline-formula>.</p><fig id="app1fig1" position="float"><label>Appendix 1—figure 1.</label><caption><title>Simplicial decomposition.</title><p>The convex hull generated by the grid code activity patterns is a product of simplices.</p></caption><graphic mime-subtype="tiff" mimetype="image" xlink:href="elife-62702-app1-fig1-v3.tif"/></fig><p>Proof. In order to relate the geometrical structure of <inline-formula><mml:math id="inf512"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msub><mml:mi>H</mml:mi><mml:mrow><mml:mi mathvariant="bold-italic">λ</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mstyle></mml:math></inline-formula> to that of simplices, let us introduce <inline-formula><mml:math id="inf513"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msub><mml:mi mathvariant="bold-italic">e</mml:mi><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mstyle></mml:math></inline-formula>, <inline-formula><mml:math id="inf514"><mml:mrow><mml:mn>1</mml:mn><mml:mo>≤</mml:mo><mml:mi>i</mml:mi><mml:mo>≤</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mi>M</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula>, the elementary unit vector corresponding to the <inline-formula><mml:math id="inf515"><mml:mi>i</mml:mi></mml:math></inline-formula>-th coordinate of <inline-formula><mml:math id="inf516"><mml:msup><mml:mi>ℝ</mml:mi><mml:msub><mml:mi>λ</mml:mi><mml:mi>M</mml:mi></mml:msub></mml:msup></mml:math></inline-formula>. The set <inline-formula><mml:math id="inf517"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msub><mml:mrow><mml:mi mathvariant="script">C</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="bold-italic">λ</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mstyle></mml:math></inline-formula> has the following product structure<disp-formula id="equ21"><label>(21)</label><mml:math id="m21"><mml:mrow><mml:mstyle displaystyle="true" scriptlevel="0"><mml:msub><mml:mrow><mml:mi mathvariant="script">C</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="bold-italic">λ</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:mo>{</mml:mo><mml:mrow><mml:mi mathvariant="bold-italic">c</mml:mi><mml:mo>=</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:msup><mml:mi mathvariant="bold-italic">c</mml:mi><mml:mrow><mml:mi mathvariant="normal">′</mml:mi></mml:mrow></mml:msup><mml:mo>,</mml:mo><mml:msub><mml:mi mathvariant="bold-italic">e</mml:mi><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mspace width="thinmathspace"/><mml:mrow><mml:mo maxsize="1.623em" minsize="1.623em">|</mml:mo></mml:mrow><mml:mspace width="thinmathspace"/><mml:msup><mml:mi mathvariant="bold-italic">c</mml:mi><mml:mrow><mml:mi mathvariant="normal">′</mml:mi></mml:mrow></mml:msup><mml:mo>∈</mml:mo><mml:msub><mml:mrow><mml:mi mathvariant="script">C</mml:mi></mml:mrow><mml:mrow><mml:msup><mml:mi mathvariant="bold-italic">λ</mml:mi><mml:mrow><mml:mi mathvariant="normal">′</mml:mi></mml:mrow></mml:msup></mml:mrow></mml:msub><mml:mspace width="thinmathspace"/><mml:mo>,</mml:mo><mml:mspace width="thickmathspace"/><mml:mn>0</mml:mn><mml:mo>&lt;</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mi>M</mml:mi></mml:mrow></mml:msub></mml:mrow><mml:mo>}</mml:mo></mml:mrow><mml:mspace width="thinmathspace"/><mml:mo>,</mml:mo></mml:mstyle></mml:mrow></mml:math></disp-formula></p><p>where <inline-formula><mml:math id="inf518"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msub><mml:mrow><mml:mi mathvariant="script">C</mml:mi></mml:mrow><mml:mrow><mml:msup><mml:mi mathvariant="bold-italic">λ</mml:mi><mml:mrow><mml:mi mathvariant="normal">′</mml:mi></mml:mrow></mml:msup></mml:mrow></mml:msub></mml:mrow></mml:mstyle></mml:math></inline-formula> is the set of vectors for <inline-formula><mml:math id="inf519"><mml:mrow><mml:mi>M</mml:mi><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:math></inline-formula> modules with periods <inline-formula><mml:math id="inf520"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msup><mml:mi mathvariant="bold-italic">λ</mml:mi><mml:mrow><mml:mi mathvariant="normal">′</mml:mi></mml:mrow></mml:msup><mml:mo>=</mml:mo><mml:mo fence="false" stretchy="false">{</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mi>M</mml:mi><mml:mo>−</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo fence="false" stretchy="false">}</mml:mo></mml:mrow></mml:mstyle></mml:math></inline-formula>. The product structure of the set <inline-formula><mml:math id="inf521"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msub><mml:mrow><mml:mi mathvariant="script">C</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="bold-italic">λ</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mstyle></mml:math></inline-formula> transfers to the convex hull <inline-formula><mml:math id="inf522"><mml:msub><mml:mi>H</mml:mi><mml:mi>λ</mml:mi></mml:msub></mml:math></inline-formula> it generates. Specifically, we have<disp-formula id="equ22"><label>(22)</label><mml:math id="m22"><mml:mrow><mml:mstyle displaystyle="true" scriptlevel="0"><mml:msub><mml:mi>H</mml:mi><mml:mrow><mml:mi mathvariant="bold-italic">λ</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:mo>{</mml:mo><mml:mrow><mml:munderover><mml:mo>∑</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mi>M</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:munderover><mml:munderover><mml:mo>∑</mml:mo><mml:mrow><mml:mi>j</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mi>L</mml:mi><mml:mrow><mml:mo>/</mml:mo></mml:mrow><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mi>M</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:munderover><mml:msub><mml:mi>α</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi mathvariant="bold-italic">c</mml:mi><mml:mrow><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi mathvariant="bold-italic">e</mml:mi><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mspace width="thinmathspace"/><mml:mrow><mml:mo maxsize="2.470em" minsize="2.470em">|</mml:mo></mml:mrow><mml:mspace width="thinmathspace"/><mml:munderover><mml:mo>∑</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mi>M</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:munderover><mml:munderover><mml:mo>∑</mml:mo><mml:mrow><mml:mi>j</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mi>L</mml:mi><mml:mrow><mml:mo>/</mml:mo></mml:mrow><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mi>M</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:munderover><mml:msub><mml:mi>α</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mo>}</mml:mo></mml:mrow><mml:mspace width="thinmathspace"/><mml:mo>,</mml:mo></mml:mstyle></mml:mrow></mml:math></disp-formula><disp-formula id="equ23"><label>(23)</label><mml:math id="m23"><mml:mrow><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mo>=</mml:mo><mml:mrow><mml:mo>{</mml:mo><mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:munderover><mml:mo>∑</mml:mo><mml:mrow><mml:mi>j</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mi>L</mml:mi><mml:mrow><mml:mo>/</mml:mo></mml:mrow><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mi>M</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:munderover><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:munderover><mml:mo>∑</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mi>M</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:munderover><mml:msub><mml:mi>α</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:msub><mml:mi mathvariant="bold-italic">c</mml:mi><mml:mrow><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:munderover><mml:mo>∑</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mi>M</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:munderover><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:munderover><mml:mo>∑</mml:mo><mml:mrow><mml:mi>j</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mi>L</mml:mi><mml:mrow><mml:mo>/</mml:mo></mml:mrow><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mi>M</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:munderover><mml:msub><mml:mi>α</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:msub><mml:mi mathvariant="bold-italic">e</mml:mi><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mspace width="thinmathspace"/><mml:mrow><mml:mo maxsize="2.470em" minsize="2.470em">|</mml:mo></mml:mrow><mml:mspace width="thinmathspace"/><mml:munderover><mml:mo>∑</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mi>M</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:munderover><mml:munderover><mml:mo>∑</mml:mo><mml:mrow><mml:mi>j</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mi>L</mml:mi><mml:mrow><mml:mo>/</mml:mo></mml:mrow><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mi>M</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:munderover><mml:msub><mml:mi>α</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mo>}</mml:mo></mml:mrow><mml:mspace width="thinmathspace"/><mml:mo>,</mml:mo></mml:mstyle></mml:mrow></mml:math></disp-formula><disp-formula id="equ24"><label>(24)</label><mml:math id="m24"><mml:mrow><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mo>=</mml:mo><mml:mrow><mml:mo>{</mml:mo><mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:munderover><mml:mo>∑</mml:mo><mml:mrow><mml:mi>j</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mi>L</mml:mi><mml:mrow><mml:mo>/</mml:mo></mml:mrow><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mi>M</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:munderover><mml:msub><mml:mi>β</mml:mi><mml:mrow><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:msub><mml:mi mathvariant="bold-italic">c</mml:mi><mml:mrow><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:munderover><mml:mo>∑</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mi>M</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:munderover><mml:msub><mml:mi>γ</mml:mi><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:msub><mml:mi mathvariant="bold-italic">e</mml:mi><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mspace width="thinmathspace"/><mml:mrow><mml:mo maxsize="2.470em" minsize="2.470em">|</mml:mo></mml:mrow><mml:mspace width="thinmathspace"/><mml:munderover><mml:mo>∑</mml:mo><mml:mrow><mml:mi>j</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mi>L</mml:mi><mml:mrow><mml:mo>/</mml:mo></mml:mrow><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mi>M</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:munderover><mml:msub><mml:mi>β</mml:mi><mml:mrow><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mn>1</mml:mn><mml:mspace width="thinmathspace"/><mml:mo>,</mml:mo><mml:mspace width="thickmathspace"/><mml:munderover><mml:mo>∑</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mi>M</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:munderover><mml:msub><mml:mi>γ</mml:mi><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mo>}</mml:mo></mml:mrow><mml:mspace width="thinmathspace"/><mml:mo>,</mml:mo></mml:mstyle></mml:mrow></mml:math></disp-formula><disp-formula id="equ25"><label>(25)</label><mml:math id="m25"><mml:mrow><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mo>=</mml:mo><mml:mrow><mml:mo>{</mml:mo><mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msup><mml:mi mathvariant="bold-italic">c</mml:mi><mml:mrow><mml:mi mathvariant="normal">′</mml:mi></mml:mrow></mml:msup><mml:mo>,</mml:mo><mml:mi mathvariant="bold-italic">δ</mml:mi></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mrow><mml:mo maxsize="2.470em" minsize="2.470em">|</mml:mo></mml:mrow><mml:msup><mml:mi mathvariant="bold-italic">c</mml:mi><mml:mrow><mml:mi mathvariant="normal">′</mml:mi></mml:mrow></mml:msup><mml:mo>∈</mml:mo><mml:msub><mml:mi>H</mml:mi><mml:mrow><mml:msup><mml:mi mathvariant="bold-italic">λ</mml:mi><mml:mrow><mml:mi mathvariant="normal">′</mml:mi></mml:mrow></mml:msup></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:mi mathvariant="bold-italic">δ</mml:mi><mml:mo>∈</mml:mo><mml:msup><mml:mi mathvariant="normal">Δ</mml:mi><mml:mrow><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mi>M</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msup></mml:mrow><mml:mo>}</mml:mo></mml:mrow><mml:mo>,</mml:mo></mml:mstyle></mml:mrow></mml:math></disp-formula></p><p>where we have recognized that the convex hull of the set of elementary basis vectors <inline-formula><mml:math id="inf523"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msub><mml:mi mathvariant="bold-italic">e</mml:mi><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mstyle></mml:math></inline-formula>, <inline-formula><mml:math id="inf524"><mml:mrow><mml:mn>1</mml:mn><mml:mo>≤</mml:mo><mml:mi>i</mml:mi><mml:mo>≤</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mi>M</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula>, is precisely the canonical <inline-formula><mml:math id="inf525"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mpadded width="-1.7pt"><mml:msub><mml:mi>λ</mml:mi><mml:mi>M</mml:mi></mml:msub></mml:mpadded><mml:mo rspace="0.8pt">-</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula>-simplex. Thus, we have shown that <inline-formula><mml:math id="inf526"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msub><mml:mi>H</mml:mi><mml:mrow><mml:mi mathvariant="bold-italic">λ</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mi>H</mml:mi><mml:mrow><mml:msup><mml:mi mathvariant="bold-italic">λ</mml:mi><mml:mrow><mml:mi mathvariant="normal">′</mml:mi></mml:mrow></mml:msup></mml:mrow></mml:msub><mml:mo>×</mml:mo><mml:msup><mml:mi mathvariant="normal">Δ</mml:mi><mml:mrow><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mi>M</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msup></mml:mrow></mml:mstyle></mml:math></inline-formula>. Proceeding by recurrence on the number of modules, one obtains the announced decomposition of the convex hull as a product <inline-formula><mml:math id="inf527"><mml:mrow><mml:mi>H</mml:mi><mml:mo>=</mml:mo><mml:mrow><mml:msup><mml:mi mathvariant="normal">Δ</mml:mi><mml:msub><mml:mi>λ</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:msup><mml:mo>×</mml:mo><mml:mi mathvariant="normal">…</mml:mi><mml:mo>×</mml:mo><mml:msup><mml:mi mathvariant="normal">Δ</mml:mi><mml:msub><mml:mi>λ</mml:mi><mml:mi>M</mml:mi></mml:msub></mml:msup></mml:mrow></mml:mrow></mml:math></inline-formula>, where <inline-formula><mml:math id="inf528"><mml:msup><mml:mi mathvariant="normal">Δ</mml:mi><mml:msub><mml:mi>λ</mml:mi><mml:mi>M</mml:mi></mml:msub></mml:msup></mml:math></inline-formula>, <inline-formula><mml:math id="inf529"><mml:mrow><mml:mn>1</mml:mn><mml:mo>≤</mml:mo><mml:mi>m</mml:mi><mml:mo>≤</mml:mo><mml:mi>M</mml:mi></mml:mrow></mml:math></inline-formula>, is the canonical <inline-formula><mml:math id="inf530"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mpadded width="-1.7pt"><mml:msub><mml:mi>λ</mml:mi><mml:mi>m</mml:mi></mml:msub></mml:mpadded><mml:mo rspace="0.8pt">-</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula>-simplex.</p><p>The above orthogonal decomposition suggests that the problem of determining the linearly separable dichotomies of grid-like inputs is related to that of determining the linearly separable Boolean functions. Indeed, the polytope defined by grid-like inputs with <inline-formula><mml:math id="inf531"><mml:mi>M</mml:mi></mml:math></inline-formula> modules contains <inline-formula><mml:math id="inf532"><mml:mi>M</mml:mi></mml:math></inline-formula>-dimensional hypercubes, for which many dichotomies are not linearly separable. As counting the linearly separable Boolean functions is a notoriously hard combinatorial problem, it is unlikely that one can find a general characterization of the linearly separable dichotomies of grid-like inputs. However, it is possible to give some explicit results for the case of two modules <inline-formula><mml:math id="inf533"><mml:mi>M</mml:mi></mml:math></inline-formula> or for the case of <inline-formula><mml:math id="inf534"><mml:mi>k</mml:mi></mml:math></inline-formula>-dichotomies for small cardinality <inline-formula><mml:math id="inf535"><mml:mi>k</mml:mi></mml:math></inline-formula>.</p></sec></app><app id="appendix-2"><title>Appendix 2</title><sec id="s13" sec-type="appendix"><title>Combinatorics of linearly separable dichotomies</title><p>In this Appendix, we establish combinatorial results about the properties and the cardinality of linearly separable dichotomies of grid-like inputs. First, we show that linearly separable dichotomies can be partitioned in classes, each indexed by a combinatorial object called Young diagram. Second, we exploit related combinatorial objects, called Young tableaux, to show that not all Young diagrams correspond to linearly separable dichotomies. Third, we utilize Young diagrams to characterize dichotomies for which one class of labeled patterns has small cardinality <inline-formula><mml:math id="inf536"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mi>k</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:mn>4</mml:mn></mml:mrow></mml:mstyle></mml:math></inline-formula>. Fourth, we count the exact number of linearly separable dichotomies for grid-like inputs with two modules.</p></sec><sec id="s14" sec-type="appendix"><title>Relation to Young diagrams</title><p>To count linearly separable dichotomies, we first show that these dichotomies can be partitioned in classes that are indexed by Young diagrams. Young diagrams are useful combinatorial objects that have been used to study, e.g., the properties of the group representations of the symmetric group and of the general linear group. Young diagrams are formally defined as follows:</p></sec><sec id="s15" sec-type="appendix"><title>Definition 1</title><p>A <italic>d</italic>-dimensional Young diagram is a subset <italic>D</italic> of lattice points in the positiveorthant of a d-dimensional integral lattice, which satisfies the following:</p><list list-type="roman-lower"><list-item><p>If <inline-formula><mml:math id="inf537"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>n</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>n</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>n</mml:mi><mml:mi>d</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mo>∈</mml:mo><mml:mi>D</mml:mi></mml:mrow></mml:mstyle></mml:math></inline-formula> and <inline-formula><mml:math id="inf538"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msub><mml:mi>n</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>§gt;</mml:mo><mml:mn>0</mml:mn></mml:mrow></mml:mstyle></mml:math></inline-formula>, then <inline-formula><mml:math id="inf539"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>n</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>n</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>−</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>n</mml:mi><mml:mi>d</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mo>∈</mml:mo><mml:mi>D</mml:mi></mml:mrow></mml:mstyle></mml:math></inline-formula>.</p></list-item><list-item><p>For any positive integer <italic>i</italic> ≤ <italic>d</italic>, and any non negative integers, <italic>m</italic>, <italic>p</italic>, with <italic>m</italic> &gt; <italic>p</italic>, the restriction of <italic>D</italic> to the hyperplane <italic>n</italic><sub>i</sub> = <italic>m</italic> is a (d−1)-dimensional Young diagram that covers the (d − 1)-dimensional Young diagram formed by the restriction of S to the hyperplane <italic>n</italic><sub>i</sub> = <italic>p</italic>.</p></list-item></list><p>Moreover, the size of the diagram <italic>D</italic>, denoted by |<italic>D</italic>|, is defined as the number of lattice points in <italic>D</italic>.</p><p>Young diagrams have been primarily studied for <italic>d</italic> = 2 because their use allows oneto conveniently enumerate the partitions of the integers. For <italic>d</italic> = 2, there are differentconventions for representing Young diagrams pictorially. Hereafter, we follow the Frenchnotations, where Young diagrams are left justified lattice rows, whose length decreaseswith height. For the sake of clarity, Fig. 1a depicts the 5 Young diagrams associated to thepartitions of 4: 4, 3 + 1, 2 + 2, 2 + 1 + 1 and 1 + 1 + 1 + 1: Young diagrams have been less studiedfor dimensions <italic>d</italic> ≥ 3 and only a few of their combinatorial properties are known. Fig. 1brepresents a 3-dimensional diagram, together with two 2-dimensional restrictions (red edgesfor n<sub>3</sub> = 1 and yellow edges for n<sub>3</sub> = 3). Observe that these restrictions are 2-dimensionalYoung diagrams, and that the restriction corresponding to n<sub>3</sub> = 1 covers the restriction corresponding to n<sub>3</sub> = 3. Young diagrams can equivalently be viewed as arrays of boxesrather than lattice points in the positive orthant. This corresponds to identifying each latticepoint <inline-formula><mml:math id="inf540"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>n</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>n</mml:mi><mml:mi>d</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mo>∈</mml:mo><mml:mi>D</mml:mi></mml:mrow></mml:mstyle></mml:math></inline-formula> with the unit cube <inline-formula><mml:math id="inf541"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>n</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>−</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:msub><mml:mi>n</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mo>×</mml:mo><mml:mo>…</mml:mo><mml:mo>×</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>n</mml:mi><mml:mi>d</mml:mi></mml:msub><mml:mo>−</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:msub><mml:mi>n</mml:mi><mml:mi>d</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mstyle></mml:math></inline-formula>.</p><p>Before motivating the use of Young diagrams, let us make a few remarks about the set ofdichotomies that can be realized by a perceptron with fixed weight vector (ω, θ). First, recallthat with no loss of generality we can restrict the weight vectors ω to be nonnegative byProposition 2. Second, by permutation invariance, there is no loss of generality in consideringa perceptron (ω, θ) for which the weight vector.<disp-formula id="equ26"><label>(26)</label><mml:math id="m26"><mml:mrow><mml:mi mathvariant="bold-italic">w</mml:mi><mml:mspace width="thinmathspace"/><mml:mo>=</mml:mo><mml:mspace width="thinmathspace"/><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>w</mml:mi><mml:mrow><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:mo>.</mml:mo><mml:mo>.</mml:mo><mml:mo>.</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>w</mml:mi><mml:mrow><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mi>λ</mml:mi><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mrow><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:mo>.</mml:mo><mml:mo>.</mml:mo><mml:mo>.</mml:mo><mml:mspace width="thinmathspace"/><mml:mspace width="thinmathspace"/><mml:mspace width="thinmathspace"/><mml:mo>.</mml:mo><mml:mo>.</mml:mo><mml:mo>.</mml:mo><mml:mrow><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:msub><mml:mi>w</mml:mi><mml:mrow><mml:mi>M</mml:mi><mml:mo>,</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:mo>.</mml:mo><mml:mo>.</mml:mo><mml:mo>.</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>w</mml:mi><mml:mrow><mml:mi>M</mml:mi><mml:mo>,</mml:mo><mml:mi>λ</mml:mi><mml:mi>M</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></disp-formula></p><p>is such that the weights are ordered within each module: <inline-formula><mml:math id="inf542"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msub><mml:mi>w</mml:mi><mml:mrow><mml:mi>m</mml:mi><mml:mo>,</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>§lt;</mml:mo><mml:mo>…</mml:mo><mml:mo>§lt;</mml:mo><mml:msub><mml:mi>w</mml:mi><mml:mrow><mml:mi>m</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mo>⋋</mml:mo><mml:mi>m</mml:mi></mml:msub></mml:mrow></mml:msub></mml:mrow></mml:mstyle></mml:math></inline-formula>, for all <inline-formula><mml:math id="inf543"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mi>m</mml:mi><mml:mo>,</mml:mo><mml:mn>1</mml:mn><mml:mo>≤</mml:mo><mml:mi>m</mml:mi><mml:mo>≤</mml:mo><mml:mi>M</mml:mi></mml:mrow></mml:mstyle></mml:math></inline-formula>. We refer to weight vectors having this module-specific, increasing order propertyas being a modularly ordered weight vector. Bearing these observations in mind, the following proposition establishes the link between Young diagrams and perceptrons.</p></sec><sec id="s16" sec-type="appendix"><title>Proposition 4</title><p>Given integer periods <inline-formula><mml:math id="inf544"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mi mathvariant="bold-italic">λ</mml:mi><mml:mo>=</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mi>M</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mstyle></mml:math></inline-formula>, for all modularly ordered, non-negative, weight vectors <inline-formula><mml:math id="inf545"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mi mathvariant="bold-italic">w</mml:mi></mml:mrow></mml:mstyle></mml:math></inline-formula> and for all thresholds <inline-formula><mml:math id="inf546"><mml:mi>θ</mml:mi></mml:math></inline-formula>, the lattice set<disp-formula id="equ27"><label>(27)</label><mml:math id="m27"><mml:mrow><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mi mathvariant="script">D</mml:mi></mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="bold-italic">w</mml:mi><mml:mo>,</mml:mo><mml:mi>θ</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mrow><mml:mo>{</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>i</mml:mi><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>i</mml:mi><mml:mrow><mml:mi>M</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mo>∈</mml:mo><mml:mo fence="false" stretchy="false">{</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo fence="false" stretchy="false">}</mml:mo><mml:mo>×</mml:mo><mml:mo>…</mml:mo><mml:mo>×</mml:mo><mml:mo fence="false" stretchy="false">{</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mi>M</mml:mi></mml:mrow></mml:msub><mml:mo fence="false" stretchy="false">}</mml:mo><mml:mspace width="thinmathspace"/><mml:mrow><mml:mo maxsize="2.470em" minsize="2.470em">|</mml:mo></mml:mrow><mml:mspace width="thinmathspace"/><mml:munderover><mml:mo>∑</mml:mo><mml:mrow><mml:mi>m</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mi>M</mml:mi></mml:mrow></mml:munderover><mml:msub><mml:mi>w</mml:mi><mml:mrow><mml:mi>m</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mi>i</mml:mi><mml:mrow><mml:mi>m</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub><mml:mo>≤</mml:mo><mml:mi>θ</mml:mi></mml:mrow><mml:mo>}</mml:mo></mml:mrow></mml:mstyle></mml:mrow></mml:math></disp-formula></p><p>is a <inline-formula><mml:math id="inf547"><mml:mi>M</mml:mi></mml:math></inline-formula>-dimensional Young diagram in <inline-formula><mml:math id="inf548"><mml:mrow><mml:mrow><mml:mo mathvariant="normal" stretchy="false">{</mml:mo><mml:mn mathvariant="normal">1</mml:mn><mml:mo mathvariant="normal">,</mml:mo><mml:mrow><mml:mi mathvariant="normal">…</mml:mi><mml:mo mathvariant="italic">⁢</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mn mathvariant="normal">1</mml:mn></mml:msub></mml:mrow><mml:mo mathvariant="normal" stretchy="false">}</mml:mo></mml:mrow><mml:mo mathvariant="normal">×</mml:mo><mml:mi mathvariant="normal">…</mml:mi><mml:mo mathvariant="normal">×</mml:mo><mml:mrow><mml:mo mathvariant="normal" stretchy="false">{</mml:mo><mml:mn mathvariant="normal">1</mml:mn><mml:mo mathvariant="normal">,</mml:mo><mml:mrow><mml:mi mathvariant="normal">…</mml:mi><mml:mo mathvariant="italic">⁢</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mi>M</mml:mi></mml:msub></mml:mrow><mml:mo mathvariant="normal" stretchy="false">}</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula>.</p><p>In other words, under assumption of modularly ordered, non-negative weights, the phase indices of inactive grid cells form a Young diagram.</p><p>Proof. The Young diagram properties directly follow from the ordering of weights within modules. For instance, it is easy to see that if <inline-formula><mml:math id="inf549"><mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>i</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:mi mathvariant="normal">…</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mi>i</mml:mi><mml:mi>M</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>≤</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>j</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:mi mathvariant="normal">…</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mi>j</mml:mi><mml:mi>M</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula> for the component-wise partial order in <inline-formula><mml:math id="inf550"><mml:mrow><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mrow><mml:mi mathvariant="normal">…</mml:mi><mml:mo>⁢</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:mrow><mml:mo stretchy="false">}</mml:mo></mml:mrow><mml:mo>×</mml:mo><mml:mi mathvariant="normal">…</mml:mi><mml:mo>×</mml:mo><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mrow><mml:mi mathvariant="normal">…</mml:mi><mml:mo>⁢</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mi>M</mml:mi></mml:msub></mml:mrow><mml:mo stretchy="false">}</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula>, then <inline-formula><mml:math id="inf551"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>j</mml:mi><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>j</mml:mi><mml:mrow><mml:mi>M</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mo>∈</mml:mo><mml:mrow><mml:mi mathvariant="script">D</mml:mi></mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="bold-italic">w</mml:mi><mml:mo>,</mml:mo><mml:mi>θ</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mstyle></mml:math></inline-formula> implies <inline-formula><mml:math id="inf552"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>i</mml:mi><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>i</mml:mi><mml:mrow><mml:mi>M</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mo>∈</mml:mo><mml:mrow><mml:mi mathvariant="script">D</mml:mi></mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="bold-italic">w</mml:mi><mml:mo>,</mml:mo><mml:mi>θ</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mstyle></mml:math></inline-formula>. Indeed, we necessarily have<disp-formula id="equ28"><label>(28)</label><mml:math id="m28"><mml:mrow><mml:mstyle displaystyle="true" scriptlevel="0"><mml:munderover><mml:mo>∑</mml:mo><mml:mrow><mml:mi>m</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mi>M</mml:mi></mml:mrow></mml:munderover><mml:msub><mml:mi>w</mml:mi><mml:mrow><mml:mi>m</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mi>i</mml:mi><mml:mrow><mml:mi>m</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub><mml:mo>≤</mml:mo><mml:munderover><mml:mo>∑</mml:mo><mml:mrow><mml:mi>m</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mi>M</mml:mi></mml:mrow></mml:munderover><mml:msub><mml:mi>w</mml:mi><mml:mrow><mml:mi>m</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mi>j</mml:mi><mml:mrow><mml:mi>m</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub><mml:mo>§lt;</mml:mo><mml:mi>θ</mml:mi><mml:mspace width="thinmathspace"/><mml:mo>.</mml:mo></mml:mstyle></mml:mrow></mml:math></disp-formula></p><p>By the above proposition, given a grid code with <inline-formula><mml:math id="inf553"><mml:mi>M</mml:mi></mml:math></inline-formula> modules, every perceptron <inline-formula><mml:math id="inf554"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="bold-italic">w</mml:mi><mml:mo>,</mml:mo><mml:mi>θ</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mstyle></mml:math></inline-formula> acting on that grid code can be associated to a unique <inline-formula><mml:math id="inf555"><mml:mi>M</mml:mi></mml:math></inline-formula>-dimensional Young diagram <inline-formula><mml:math id="inf556"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mrow><mml:mi mathvariant="script">D</mml:mi></mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="bold-italic">w</mml:mi><mml:mo>,</mml:mo><mml:mi>θ</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mstyle></mml:math></inline-formula> after ordering the components of <inline-formula><mml:math id="inf557"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mi mathvariant="bold-italic">w</mml:mi></mml:mrow></mml:mstyle></mml:math></inline-formula> within each module. Conversely, if a <inline-formula><mml:math id="inf558"><mml:mi>M</mml:mi></mml:math></inline-formula>-dimensional Young diagram <inline-formula><mml:math id="inf559"><mml:msup><mml:mi class="ltx_font_mathcaligraphic">D</mml:mi><mml:mo>′</mml:mo></mml:msup></mml:math></inline-formula> can be associated to a perceptron <inline-formula><mml:math id="inf560"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="bold-italic">w</mml:mi><mml:mo>,</mml:mo><mml:mi>θ</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mstyle></mml:math></inline-formula> with modularly ordered, non-negative weights, we say that <inline-formula><mml:math id="inf561"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msup><mml:mrow><mml:mi mathvariant="script">D</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="normal">′</mml:mi></mml:mrow></mml:msup><mml:mo>=</mml:mo><mml:mrow><mml:mi mathvariant="script">D</mml:mi></mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="bold-italic">w</mml:mi><mml:mo>,</mml:mo><mml:mi>θ</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mstyle></mml:math></inline-formula> is realizable. Then a natural question to ask is: are all <inline-formula><mml:math id="inf562"><mml:mi>M</mml:mi></mml:math></inline-formula>-dimensional Young diagrams realizable by perceptrons? It turns out that perceptrons exhaustively enumerate all <inline-formula><mml:math id="inf563"><mml:mi>M</mml:mi></mml:math></inline-formula>-dimensional Young diagrams if <inline-formula><mml:math id="inf564"><mml:mrow><mml:mi>M</mml:mi><mml:mo>≤</mml:mo><mml:mn>2</mml:mn></mml:mrow></mml:math></inline-formula>, but there are unrealizable Young diagrams as soon as <inline-formula><mml:math id="inf565"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mi>M</mml:mi><mml:mo>&gt;</mml:mo><mml:mn>2</mml:mn></mml:mrow></mml:mstyle></mml:math></inline-formula>.</p></sec><sec id="s17" sec-type="appendix"><title>Relation to Young tableaux</title><p>Understanding why there are unrealizable Young diagrams as soon as <inline-formula><mml:math id="inf566"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mi>M</mml:mi><mml:mo>&gt;</mml:mo><mml:mn>2</mml:mn></mml:mrow></mml:mstyle></mml:math></inline-formula> involves using combinatorial objects that are closely related to Young diagrams, called Young tableaux.</p></sec><sec id="s18" sec-type="appendix"><title>Definition 2</title><p>Given a Young diagram <inline-formula><mml:math id="inf567"><mml:mi class="ltx_font_mathcaligraphic" mathvariant="normal">D</mml:mi></mml:math></inline-formula>, a Young tableau <inline-formula><mml:math id="inf568"><mml:mi class="ltx_font_mathcaligraphic" mathvariant="normal">T</mml:mi></mml:math></inline-formula> is obtained by labeling the lattice points – or filling in the boxes – of <inline-formula><mml:math id="inf569"><mml:mi class="ltx_font_mathcaligraphic" mathvariant="normal">D</mml:mi></mml:math></inline-formula> with the integers <inline-formula><mml:math id="inf570"><mml:mrow><mml:mrow><mml:mn mathvariant="normal">1</mml:mn><mml:mo mathvariant="normal">,</mml:mo><mml:mn mathvariant="normal">2</mml:mn><mml:mo mathvariant="normal">,</mml:mo><mml:mi mathvariant="normal">…</mml:mi><mml:mo mathvariant="normal">,</mml:mo><mml:mrow><mml:mo mathvariant="normal" stretchy="false">|</mml:mo><mml:mi>D</mml:mi><mml:mo mathvariant="normal" stretchy="false">|</mml:mo></mml:mrow></mml:mrow><mml:mo mathvariant="normal">,</mml:mo></mml:mrow></mml:math></inline-formula> such that each number occurs exactly once and such that the entries are increasing across each row (to the right) and across each column (to the top).</p><p>Here are two examples of Young tableaux that are distinct labeling of the same Young diagram:</p><fig id="app2scheme1" position="float"><label>Appendix 2—scheme 1.</label><caption><title>Examples of Young tableaux.</title></caption><graphic mime-subtype="tiff" mimetype="image" xlink:href="elife-62702-app2-scheme1-v3.tif"/></fig><p>Just as Young diagrams, Young tableaux are naturally associated to perceptrons. The following arguments specify the correspondence between perceptrons and Young tableaux. Given a perceptron <inline-formula><mml:math id="inf571"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="bold-italic">w</mml:mi><mml:mo>,</mml:mo><mml:mi>θ</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mstyle></mml:math></inline-formula> with modularly ordered, non-negative weights, let us order all patterns in <inline-formula><mml:math id="inf572"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msub><mml:mrow><mml:mi mathvariant="script">C</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="bold-italic">λ</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mstyle></mml:math></inline-formula> by increasing level of perceptron activity. Specifically, set <inline-formula><mml:math id="inf573"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msub><mml:mrow><mml:mi mathvariant="script">J</mml:mi></mml:mrow><mml:mrow><mml:mn>0</mml:mn></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mrow><mml:mi mathvariant="script">C</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="bold-italic">λ</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mstyle></mml:math></inline-formula> and define iteratively for <inline-formula><mml:math id="inf574"><mml:mi>k</mml:mi></mml:math></inline-formula>, <inline-formula><mml:math id="inf575"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mn>0</mml:mn><mml:mo>≤</mml:mo><mml:mi>k</mml:mi><mml:mo>§lt;</mml:mo><mml:mi mathvariant="normal">Λ</mml:mi></mml:mrow></mml:mstyle></mml:math></inline-formula>,<disp-formula id="equ29"><label>(29)</label><mml:math id="m29"><mml:mrow><mml:mstyle displaystyle="true" scriptlevel="0"><mml:msubsup><mml:mi mathvariant="bold-italic">c</mml:mi><mml:mrow><mml:mi>k</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mo>⋆</mml:mo></mml:mrow></mml:msubsup><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="bold-italic">w</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mi>arg</mml:mi><mml:mo>⁡</mml:mo><mml:munder><mml:mo form="prefix" movablelimits="true">min</mml:mo><mml:mrow><mml:mi mathvariant="bold-italic">c</mml:mi><mml:mo>∈</mml:mo><mml:msub><mml:mrow><mml:mi mathvariant="script">J</mml:mi></mml:mrow><mml:mrow><mml:mi>k</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="bold-italic">w</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:munder><mml:msup><mml:mi mathvariant="bold-italic">w</mml:mi><mml:mrow><mml:mi>T</mml:mi></mml:mrow></mml:msup><mml:mi mathvariant="bold-italic">c</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mrow><mml:mi mathvariant="script">J</mml:mi></mml:mrow><mml:mrow><mml:mi>k</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="bold-italic">w</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:msub><mml:mrow><mml:mi mathvariant="script">J</mml:mi></mml:mrow><mml:mrow><mml:mi>k</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="bold-italic">w</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>∖</mml:mo><mml:mo fence="false" stretchy="false">{</mml:mo><mml:msubsup><mml:mi mathvariant="bold-italic">c</mml:mi><mml:mrow><mml:mi>k</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mo>⋆</mml:mo></mml:mrow></mml:msubsup><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="bold-italic">w</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo fence="false" stretchy="false">}</mml:mo><mml:mo>.</mml:mo></mml:mstyle></mml:mrow></mml:math></disp-formula></p><p>With no loss of generality, we can assume that all patterns achieve distinct levels of activity, so that there is a unique minimizer for all <inline-formula><mml:math id="inf576"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mi>k</mml:mi></mml:mrow></mml:mstyle></mml:math></inline-formula>, <inline-formula><mml:math id="inf577"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mn>0</mml:mn><mml:mo>≤</mml:mo><mml:mi>k</mml:mi><mml:mo>&lt;</mml:mo><mml:mi mathvariant="normal">Λ</mml:mi></mml:mrow></mml:mstyle></mml:math></inline-formula>. With that assumption, the sequence <inline-formula><mml:math id="inf578"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msubsup><mml:mi mathvariant="bold-italic">c</mml:mi><mml:mrow><mml:mi>k</mml:mi></mml:mrow><mml:mrow><mml:mo>⋆</mml:mo></mml:mrow></mml:msubsup><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="bold-italic">w</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mstyle></mml:math></inline-formula>, <inline-formula><mml:math id="inf579"><mml:mrow><mml:mn>1</mml:mn><mml:mo>≤</mml:mo><mml:mi>k</mml:mi><mml:mo>≤</mml:mo><mml:mi mathvariant="normal">Λ</mml:mi></mml:mrow></mml:math></inline-formula>, enumerates unambiguously all patterns in <inline-formula><mml:math id="inf580"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msub><mml:mrow><mml:mi mathvariant="script">C</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="bold-italic">λ</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mstyle></mml:math></inline-formula> by increasing level of activity. The Young tableau associated to the perceptron <inline-formula><mml:math id="inf581"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="bold-italic">w</mml:mi><mml:mo>,</mml:mo><mml:mi>θ</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mstyle></mml:math></inline-formula>, denoted by <inline-formula><mml:math id="inf582"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mrow><mml:mi mathvariant="script">T</mml:mi></mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="bold-italic">w</mml:mi><mml:mo>,</mml:mo><mml:mi>θ</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mstyle></mml:math></inline-formula>, is then obtained by labeling lattice points of the Young diagram <inline-formula><mml:math id="inf583"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mrow><mml:mi mathvariant="script">D</mml:mi></mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="bold-italic">w</mml:mi><mml:mo>,</mml:mo><mml:mi>θ</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mstyle></mml:math></inline-formula> by increasing level of activity as in the sequence <inline-formula><mml:math id="inf584"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msubsup><mml:mi mathvariant="bold-italic">c</mml:mi><mml:mrow><mml:mi>k</mml:mi></mml:mrow><mml:mrow><mml:mo>⋆</mml:mo></mml:mrow></mml:msubsup><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="bold-italic">w</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mstyle></mml:math></inline-formula>, <inline-formula><mml:math id="inf585"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mn>1</mml:mn><mml:mo>≤</mml:mo><mml:mi>k</mml:mi><mml:mo>≤</mml:mo><mml:mrow><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:mrow><mml:mi mathvariant="script">D</mml:mi></mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="bold-italic">w</mml:mi><mml:mo>,</mml:mo><mml:mi>θ</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mrow><mml:mo stretchy="false">|</mml:mo></mml:mrow></mml:mrow></mml:mstyle></mml:math></inline-formula>. One can check that such labeling yields a tableau as the resulting labels increase along each rows (to the right) and columns (to the top). Within this framework, we say that a Young tableau <inline-formula><mml:math id="inf586"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msup><mml:mrow><mml:mi mathvariant="script">T</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="normal">′</mml:mi></mml:mrow></mml:msup></mml:mrow></mml:mstyle></mml:math></inline-formula> is realizable if there is a perceptron <inline-formula><mml:math id="inf587"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="bold-italic">w</mml:mi><mml:mo>,</mml:mo><mml:mi>θ</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mstyle></mml:math></inline-formula> such that <inline-formula><mml:math id="inf588"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msup><mml:mrow><mml:mi mathvariant="script">T</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="normal">′</mml:mi></mml:mrow></mml:msup><mml:mo>=</mml:mo><mml:mrow><mml:mi mathvariant="script">T</mml:mi></mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="bold-italic">w</mml:mi><mml:mo>,</mml:mo><mml:mi>θ</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mstyle></mml:math></inline-formula>. Finally, let us define the sequence of thresholds <inline-formula><mml:math id="inf589"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msub><mml:mi>θ</mml:mi><mml:mrow><mml:mi>k</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="bold-italic">w</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mstyle></mml:math></inline-formula>, <inline-formula><mml:math id="inf590"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mn>0</mml:mn><mml:mo>≤</mml:mo><mml:mi>k</mml:mi><mml:mo>≤</mml:mo><mml:mi mathvariant="normal">Λ</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:mstyle></mml:math></inline-formula>, such that <inline-formula><mml:math id="inf591"><mml:mrow><mml:msub><mml:mi>θ</mml:mi><mml:mn>0</mml:mn></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:mo>-</mml:mo><mml:mi mathvariant="normal">∞</mml:mi></mml:mrow></mml:mrow></mml:math></inline-formula>, <inline-formula><mml:math id="inf592"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msub><mml:mi>θ</mml:mi><mml:mrow><mml:mi mathvariant="normal">Λ</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="bold-italic">w</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mi mathvariant="normal">∞</mml:mi></mml:mrow></mml:mstyle></mml:math></inline-formula>, and for<inline-formula><mml:math id="inf593"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mn>0</mml:mn><mml:mo>§lt;</mml:mo><mml:mi>k</mml:mi><mml:mo>≤</mml:mo><mml:mi mathvariant="normal">Λ</mml:mi></mml:mrow></mml:mstyle></mml:math></inline-formula><disp-formula id="equ30"><label>(30)</label><mml:math id="m30"><mml:mrow><mml:mstyle displaystyle="true" scriptlevel="0"><mml:msub><mml:mi>θ</mml:mi><mml:mrow><mml:mi>k</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="bold-italic">w</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:munder><mml:mo form="prefix" movablelimits="true">min</mml:mo><mml:mrow><mml:mi mathvariant="bold-italic">c</mml:mi><mml:mo>∈</mml:mo><mml:msub><mml:mrow><mml:mi mathvariant="script">J</mml:mi></mml:mrow><mml:mrow><mml:mi>k</mml:mi><mml:mo>−</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="bold-italic">w</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:munder><mml:msup><mml:mi mathvariant="bold-italic">w</mml:mi><mml:mrow><mml:mi>T</mml:mi></mml:mrow></mml:msup><mml:mi mathvariant="bold-italic">c</mml:mi><mml:mo>=</mml:mo><mml:mtext> </mml:mtext><mml:msup><mml:mi mathvariant="bold-italic">w</mml:mi><mml:mrow><mml:mi>T</mml:mi></mml:mrow></mml:msup><mml:msubsup><mml:mi mathvariant="bold-italic">c</mml:mi><mml:mrow><mml:mi>k</mml:mi></mml:mrow><mml:mrow><mml:mo>⋆</mml:mo></mml:mrow></mml:msubsup><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="bold-italic">w</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mspace width="thinmathspace"/><mml:mo>.</mml:mo></mml:mstyle></mml:mrow></mml:math></disp-formula></p><p>Then, observe that for all <inline-formula><mml:math id="inf594"><mml:mi>k</mml:mi></mml:math></inline-formula>, <inline-formula><mml:math id="inf595"><mml:mrow><mml:mn>0</mml:mn><mml:mo>≤</mml:mo><mml:mi>k</mml:mi><mml:mo>≤</mml:mo><mml:mi mathvariant="normal">Λ</mml:mi></mml:mrow></mml:math></inline-formula>, the set of active patterns <inline-formula><mml:math id="inf596"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msub><mml:mrow><mml:mi mathvariant="script">J</mml:mi></mml:mrow><mml:mrow><mml:mi>k</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="bold-italic">w</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mstyle></mml:math></inline-formula> is linearly separable for threshold <inline-formula><mml:math id="inf597"><mml:mi>θ</mml:mi></mml:math></inline-formula> satisfying <inline-formula><mml:math id="inf598"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msub><mml:mi>θ</mml:mi><mml:mrow><mml:mi>k</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="bold-italic">w</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>≤</mml:mo><mml:mi>θ</mml:mi><mml:mo>&lt;</mml:mo><mml:msub><mml:mi>θ</mml:mi><mml:mrow><mml:mi>k</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="bold-italic">w</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mstyle></mml:math></inline-formula>. In fact, the sequence <inline-formula><mml:math id="inf599"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mo fence="false" stretchy="false">{</mml:mo><mml:msub><mml:mrow><mml:mi mathvariant="script">J</mml:mi></mml:mrow><mml:mrow><mml:mi>k</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="bold-italic">w</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:msub><mml:mo fence="false" stretchy="false">}</mml:mo><mml:mrow><mml:mn>0</mml:mn><mml:mo>≤</mml:mo><mml:mi>k</mml:mi><mml:mo>≤</mml:mo><mml:mi mathvariant="normal">Λ</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mstyle></mml:math></inline-formula> represents all the linearly separable dichotomies realizable by changing the threshold of a perceptron with weight vector <inline-formula><mml:math id="inf600"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mi mathvariant="bold-italic">w</mml:mi></mml:mrow></mml:mstyle></mml:math></inline-formula>. This fact will be useful to prove the following proposition, which justifies considering Young tableaux.</p></sec><sec id="s19" sec-type="appendix"><title>Proposition 5</title><p>All <inline-formula><mml:math id="inf601"><mml:mi>M</mml:mi></mml:math></inline-formula>-dimensional Young diagrams are realizable if and only if all <inline-formula><mml:math id="inf602"><mml:mrow><mml:mo mathvariant="normal" stretchy="false">(</mml:mo><mml:mrow><mml:mpadded width="-1.7pt"><mml:mi>M</mml:mi></mml:mpadded><mml:mo mathvariant="normal" rspace="0.8pt">-</mml:mo><mml:mn mathvariant="normal">1</mml:mn></mml:mrow><mml:mo mathvariant="normal" stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula>-dimensional Young tableaux are realizable.</p><p>Observe that the above proposition does not mention the periods <inline-formula><mml:math id="inf603"><mml:mrow><mml:msub><mml:mi>λ</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:mi mathvariant="normal">…</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mi>M</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula>. This is because the proposition deals with the correspondence between <inline-formula><mml:math id="inf604"><mml:mi>m</mml:mi></mml:math></inline-formula>-dimensional Young diagrams and <inline-formula><mml:math id="inf605"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mpadded width="-1.7pt"><mml:mi>M</mml:mi></mml:mpadded><mml:mo rspace="0.8pt">-</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula>-dimensional Young tableaux for all possible assignments of periods.</p><p>Proof. In this proof, we use prime notations for quantities relating to <inline-formula><mml:math id="inf606"><mml:mrow><mml:mi>M</mml:mi><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:math></inline-formula> modules and regular notations for quantities relating to <inline-formula><mml:math id="inf607"><mml:mi>m</mml:mi></mml:math></inline-formula> modules. For instance, <inline-formula><mml:math id="inf608"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mi mathvariant="bold-italic">λ</mml:mi></mml:mrow></mml:mstyle></mml:math></inline-formula> denotes an arbitrary assignment of <inline-formula><mml:math id="inf609"><mml:mi>m</mml:mi></mml:math></inline-formula> periods <inline-formula><mml:math id="inf610"><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:mi mathvariant="normal">…</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mi>M</mml:mi></mml:msub><mml:mo stretchy="false">}</mml:mo></mml:mrow></mml:math></inline-formula> and <inline-formula><mml:math id="inf611"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msup><mml:mi mathvariant="bold-italic">λ</mml:mi><mml:mrow><mml:mi mathvariant="normal">′</mml:mi></mml:mrow></mml:msup></mml:mrow></mml:mstyle></mml:math></inline-formula> denotes its <inline-formula><mml:math id="inf612"><mml:mrow><mml:mi>m</mml:mi><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:math></inline-formula> first components <inline-formula><mml:math id="inf613"><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:mi mathvariant="normal">…</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mi>M</mml:mi><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo stretchy="false">}</mml:mo></mml:mrow></mml:math></inline-formula>. With this preamble, we give the ‘if’ part of proof in <inline-formula><mml:math id="inf614"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>i</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> and the ‘only if’ part in <inline-formula><mml:math id="inf615"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>⁢</mml:mo><mml:mi>i</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula>.</p><p>(i) Given a <inline-formula><mml:math id="inf616"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mpadded width="-1.7pt"><mml:mi>M</mml:mi></mml:mpadded><mml:mo rspace="0.8pt">-</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula>-dimensional Young tableau <inline-formula><mml:math id="inf617"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msup><mml:mrow><mml:mi mathvariant="script">T</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="normal">′</mml:mi></mml:mrow></mml:msup></mml:mrow></mml:mstyle></mml:math></inline-formula> with diagram <inline-formula><mml:math id="inf618"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msup><mml:mrow><mml:mi mathvariant="script">D</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="normal">′</mml:mi></mml:mrow></mml:msup></mml:mrow></mml:mstyle></mml:math></inline-formula>, let us consider the smallest periods <inline-formula><mml:math id="inf619"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msup><mml:mi mathvariant="bold-italic">λ</mml:mi><mml:mrow><mml:mi mathvariant="normal">′</mml:mi></mml:mrow></mml:msup></mml:mrow></mml:mstyle></mml:math></inline-formula> such that <inline-formula><mml:math id="inf620"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msup><mml:mrow><mml:mi mathvariant="script">D</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="normal">′</mml:mi></mml:mrow></mml:msup><mml:mo>⊂</mml:mo><mml:mo fence="false" stretchy="false">{</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo fence="false" stretchy="false">}</mml:mo><mml:mo>×</mml:mo><mml:mo>…</mml:mo><mml:mo>×</mml:mo><mml:mo fence="false" stretchy="false">{</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mi>M</mml:mi><mml:mo>−</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo fence="false" stretchy="false">}</mml:mo></mml:mrow></mml:mstyle></mml:math></inline-formula>. The ‘if’ part of the proof will follow from showing that if all <inline-formula><mml:math id="inf621"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi>M</mml:mi><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula>-dimensional tableaux <inline-formula><mml:math id="inf622"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msup><mml:mrow><mml:mi mathvariant="script">T</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="normal">′</mml:mi></mml:mrow></mml:msup></mml:mrow></mml:mstyle></mml:math></inline-formula> with Young diagram <inline-formula><mml:math id="inf623"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msup><mml:mrow><mml:mi mathvariant="script">D</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="normal">′</mml:mi></mml:mrow></mml:msup></mml:mrow></mml:mstyle></mml:math></inline-formula> are realizable, than all <inline-formula><mml:math id="inf624"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mi>M</mml:mi></mml:mrow></mml:mstyle></mml:math></inline-formula>-dimensional Young diagrams whose restriction to <inline-formula><mml:math id="inf625"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mo fence="false" stretchy="false">{</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo fence="false" stretchy="false">}</mml:mo><mml:mo>×</mml:mo><mml:mo>…</mml:mo><mml:mo>×</mml:mo><mml:mo fence="false" stretchy="false">{</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mi>M</mml:mi><mml:mo>−</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo fence="false" stretchy="false">}</mml:mo><mml:mo>×</mml:mo><mml:mo fence="false" stretchy="false">{</mml:mo><mml:mn>1</mml:mn><mml:mo fence="false" stretchy="false">}</mml:mo></mml:mrow></mml:mstyle></mml:math></inline-formula> is <inline-formula><mml:math id="inf626"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msup><mml:mrow><mml:mi mathvariant="script">D</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="normal">′</mml:mi></mml:mrow></mml:msup></mml:mrow></mml:mstyle></mml:math></inline-formula> are realizable. To prove this property, observe that all the <inline-formula><mml:math id="inf627"><mml:mi>M</mml:mi></mml:math></inline-formula>-dimensional Young diagrams with restriction <inline-formula><mml:math id="inf628"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msup><mml:mrow><mml:mi mathvariant="script">D</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="normal">′</mml:mi></mml:mrow></mml:msup></mml:mrow></mml:mstyle></mml:math></inline-formula> are obtained as finite sequences of <inline-formula><mml:math id="inf629"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>M</mml:mi><mml:mo>−</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mstyle></mml:math></inline-formula>-dimensional Young diagrams <inline-formula><mml:math id="inf630"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msup><mml:mrow><mml:mi mathvariant="script">D</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="normal">′</mml:mi></mml:mrow></mml:msup><mml:mo>=</mml:mo><mml:msubsup><mml:mrow><mml:mi mathvariant="script">D</mml:mi></mml:mrow><mml:mrow><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mi mathvariant="normal">′</mml:mi></mml:mrow></mml:msubsup><mml:mo>⊃</mml:mo><mml:msubsup><mml:mrow><mml:mi mathvariant="script">D</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow><mml:mrow><mml:mi mathvariant="normal">′</mml:mi></mml:mrow></mml:msubsup><mml:mo>⊃</mml:mo><mml:mo>…</mml:mo><mml:mo>⊃</mml:mo><mml:msubsup><mml:mrow><mml:mi mathvariant="script">D</mml:mi></mml:mrow><mml:mrow><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mi>M</mml:mi></mml:mrow></mml:msub></mml:mrow><mml:mrow><mml:mi mathvariant="normal">′</mml:mi></mml:mrow></mml:msubsup></mml:mrow></mml:mstyle></mml:math></inline-formula>, for some <inline-formula><mml:math id="inf631"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mi>M</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mstyle></mml:math></inline-formula> specifying the minimum period in the mth dimension. For all such sequences, consider a tableau <inline-formula><mml:math id="inf632"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mrow><mml:msup><mml:mi mathvariant="script">T</mml:mi><mml:mi mathvariant="normal">′</mml:mi></mml:msup></mml:mrow></mml:mrow></mml:mstyle></mml:math></inline-formula> labeling <inline-formula><mml:math id="inf633"><mml:msup><mml:mi class="ltx_font_mathcaligraphic">D</mml:mi><mml:mo>′</mml:mo></mml:msup></mml:math></inline-formula> such that for all <inline-formula><mml:math id="inf634"><mml:mi>i</mml:mi></mml:math></inline-formula>, <inline-formula><mml:math id="inf635"><mml:mrow><mml:mn>1</mml:mn><mml:mo>≤</mml:mo><mml:mi>i</mml:mi><mml:mo>≤</mml:mo><mml:mrow><mml:mpadded width="-1.7pt"><mml:msub><mml:mi>λ</mml:mi><mml:mi>M</mml:mi></mml:msub></mml:mpadded><mml:mo rspace="0.8pt">-</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:mrow></mml:math></inline-formula>, the labels of <inline-formula><mml:math id="inf636"><mml:msubsup><mml:mi class="ltx_font_mathcaligraphic">D</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mo>′</mml:mo></mml:msubsup></mml:math></inline-formula> are smaller than the labels <inline-formula><mml:math id="inf637"><mml:mrow><mml:msubsup><mml:mi class="ltx_font_mathcaligraphic">D</mml:mi><mml:mi>i</mml:mi><mml:mo>′</mml:mo></mml:msubsup><mml:mo>∖</mml:mo><mml:msubsup><mml:mi class="ltx_font_mathcaligraphic">D</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mo>′</mml:mo></mml:msubsup></mml:mrow></mml:math></inline-formula>. Such a tableau is always possible because of the nested property of the sequence of diagrams <inline-formula><mml:math id="inf638"><mml:msubsup><mml:mi class="ltx_font_mathcaligraphic">D</mml:mi><mml:mi>i</mml:mi><mml:mo>′</mml:mo></mml:msubsup></mml:math></inline-formula>, <inline-formula><mml:math id="inf639"><mml:mrow><mml:mn>1</mml:mn><mml:mo>≤</mml:mo><mml:mi>i</mml:mi><mml:mo>≤</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mi>M</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula>. Now, suppose that the Young tableau <inline-formula><mml:math id="inf640"><mml:msup><mml:mi class="ltx_font_mathcaligraphic">T</mml:mi><mml:mo>′</mml:mo></mml:msup></mml:math></inline-formula> is realizable. This means that there is a perceptron <inline-formula><mml:math id="inf641"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msup><mml:mi mathvariant="bold-italic">w</mml:mi><mml:mrow><mml:mi mathvariant="normal">′</mml:mi></mml:mrow></mml:msup><mml:mo>,</mml:mo><mml:msup><mml:mi>θ</mml:mi><mml:mrow><mml:mi mathvariant="normal">′</mml:mi></mml:mrow></mml:msup><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mstyle></mml:math></inline-formula> acting on the grid-like inputs in <inline-formula><mml:math id="inf642"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msub><mml:mrow><mml:mi mathvariant="script">C</mml:mi></mml:mrow><mml:mrow><mml:msup><mml:mi mathvariant="bold-italic">λ</mml:mi><mml:mrow><mml:mi mathvariant="normal">′</mml:mi></mml:mrow></mml:msup></mml:mrow></mml:msub></mml:mrow></mml:mstyle></mml:math></inline-formula> such that <inline-formula><mml:math id="inf643"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msup><mml:mrow><mml:mi mathvariant="script">T</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="normal">′</mml:mi></mml:mrow></mml:msup><mml:mo>=</mml:mo><mml:mrow><mml:mi mathvariant="script">T</mml:mi></mml:mrow><mml:mo mathvariant="bold" stretchy="false">(</mml:mo><mml:msup><mml:mrow><mml:mi>w</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="normal">′</mml:mi></mml:mrow></mml:msup><mml:mo>,</mml:mo><mml:msup><mml:mi>θ</mml:mi><mml:mrow><mml:mi mathvariant="normal">′</mml:mi></mml:mrow></mml:msup><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mstyle></mml:math></inline-formula>. With no loss of generality, the weight vector <inline-formula><mml:math id="inf644"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msup><mml:mi mathvariant="bold-italic">w</mml:mi><mml:mrow><mml:mi mathvariant="normal">′</mml:mi></mml:mrow></mml:msup></mml:mrow></mml:mstyle></mml:math></inline-formula> specifies a sequence of patterns <inline-formula><mml:math id="inf645"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msubsup><mml:mi mathvariant="bold-italic">c</mml:mi><mml:mrow><mml:mi>k</mml:mi></mml:mrow><mml:mrow><mml:mo>⋆</mml:mo></mml:mrow></mml:msubsup><mml:mo stretchy="false">(</mml:mo><mml:msup><mml:mi mathvariant="bold-italic">w</mml:mi><mml:mrow><mml:mi mathvariant="normal">′</mml:mi></mml:mrow></mml:msup><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mstyle></mml:math></inline-formula>, <inline-formula><mml:math id="inf646"><mml:mrow><mml:mn>1</mml:mn><mml:mo>≤</mml:mo><mml:mi>k</mml:mi><mml:mo>≤</mml:mo><mml:msup><mml:mi mathvariant="normal">Λ</mml:mi><mml:mo>′</mml:mo></mml:msup></mml:mrow></mml:math></inline-formula>, and a sequence of thresholds <inline-formula><mml:math id="inf647"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msub><mml:mi>θ</mml:mi><mml:mrow><mml:mi>k</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:msup><mml:mi mathvariant="bold-italic">w</mml:mi><mml:mrow><mml:mi mathvariant="normal">′</mml:mi></mml:mrow></mml:msup><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mstyle></mml:math></inline-formula>, <inline-formula><mml:math id="inf648"><mml:mrow><mml:mn>1</mml:mn><mml:mo>≤</mml:mo><mml:mi>k</mml:mi><mml:mo>≤</mml:mo><mml:msup><mml:mi mathvariant="normal">Λ</mml:mi><mml:mo>′</mml:mo></mml:msup></mml:mrow></mml:math></inline-formula>, such that <inline-formula><mml:math id="inf649"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mstyle></mml:math></inline-formula> enumerates the elements of <inline-formula><mml:math id="inf650"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msub><mml:mrow><mml:mi mathvariant="script">C</mml:mi></mml:mrow><mml:mrow><mml:msup><mml:mi mathvariant="bold-italic">λ</mml:mi><mml:mrow><mml:mi mathvariant="normal">′</mml:mi></mml:mrow></mml:msup></mml:mrow></mml:msub></mml:mrow></mml:mstyle></mml:math></inline-formula> by increasing level of activity and <inline-formula><mml:math id="inf651"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mn>2</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mstyle></mml:math></inline-formula> for all <inline-formula><mml:math id="inf652"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mn>0</mml:mn><mml:mo>≤</mml:mo><mml:mi>k</mml:mi><mml:mo>≤</mml:mo><mml:mrow><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:msup><mml:mrow><mml:mi mathvariant="script">D</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="normal">′</mml:mi></mml:mrow></mml:msup><mml:mrow><mml:mo stretchy="false">|</mml:mo></mml:mrow></mml:mrow></mml:mstyle></mml:math></inline-formula>, the set of active patterns <inline-formula><mml:math id="inf653"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msub><mml:mrow><mml:mi mathvariant="script">J</mml:mi></mml:mrow><mml:mrow><mml:mi>k</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="bold-italic">w</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mstyle></mml:math></inline-formula> defined in (29) is linearly separable if and only if <inline-formula><mml:math id="inf654"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msub><mml:mi>θ</mml:mi><mml:mrow><mml:mi>k</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:msup><mml:mi mathvariant="bold-italic">w</mml:mi><mml:mrow><mml:mi mathvariant="normal">′</mml:mi></mml:mrow></mml:msup><mml:mo stretchy="false">)</mml:mo><mml:mo>≤</mml:mo><mml:mi>θ</mml:mi><mml:mo>&lt;</mml:mo><mml:msub><mml:mi>θ</mml:mi><mml:mrow><mml:mi>k</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:msup><mml:mi mathvariant="bold-italic">w</mml:mi><mml:mrow><mml:mi mathvariant="normal">′</mml:mi></mml:mrow></mml:msup><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mstyle></mml:math></inline-formula>. Then by construction, the diagrams <inline-formula><mml:math id="inf655"><mml:msubsup><mml:mi class="ltx_font_mathcaligraphic">D</mml:mi><mml:mi>i</mml:mi><mml:mo>′</mml:mo></mml:msubsup></mml:math></inline-formula>, <inline-formula><mml:math id="inf656"><mml:mrow><mml:mn>1</mml:mn><mml:mo>≤</mml:mo><mml:mi>i</mml:mi><mml:mo>≤</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mi>M</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula>, are realized by a perceptron <inline-formula><mml:math id="inf657"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msup><mml:mi mathvariant="bold-italic">w</mml:mi><mml:mrow><mml:mi mathvariant="normal">′</mml:mi></mml:mrow></mml:msup><mml:mo>,</mml:mo><mml:msubsup><mml:mi>θ</mml:mi><mml:mrow><mml:mi>i</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="normal">′</mml:mi></mml:mrow></mml:msubsup><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mstyle></mml:math></inline-formula>, where every <inline-formula><mml:math id="inf658"><mml:mrow><mml:msubsup><mml:mi>θ</mml:mi><mml:mi>i</mml:mi><mml:mo>′</mml:mo></mml:msubsup><mml:mo>≥</mml:mo><mml:msup><mml:mi>θ</mml:mi><mml:mo>′</mml:mo></mml:msup></mml:mrow></mml:math></inline-formula> is such that <inline-formula><mml:math id="inf659"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msub><mml:mi>θ</mml:mi><mml:mrow><mml:mi mathvariant="normal">Λ</mml:mi><mml:mo>−</mml:mo><mml:mrow><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:msubsup><mml:mrow><mml:mi mathvariant="script">D</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="normal">′</mml:mi></mml:mrow></mml:msubsup><mml:mrow><mml:mo stretchy="false">|</mml:mo></mml:mrow></mml:mrow></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:msup><mml:mi mathvariant="bold-italic">w</mml:mi><mml:mrow><mml:mi mathvariant="normal">′</mml:mi></mml:mrow></mml:msup><mml:mo stretchy="false">)</mml:mo><mml:mo>&lt;</mml:mo><mml:msubsup><mml:mi>θ</mml:mi><mml:mrow><mml:mi>i</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="normal">′</mml:mi></mml:mrow></mml:msubsup><mml:mo>&lt;</mml:mo><mml:msub><mml:mi>θ</mml:mi><mml:mrow><mml:mi mathvariant="normal">Λ</mml:mi><mml:mo>−</mml:mo><mml:mrow><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:msubsup><mml:mrow><mml:mi mathvariant="script">D</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="normal">′</mml:mi></mml:mrow></mml:msubsup><mml:mrow><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:msup><mml:mi mathvariant="bold-italic">w</mml:mi><mml:mrow><mml:mi mathvariant="normal">′</mml:mi></mml:mrow></mml:msup><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mstyle></mml:math></inline-formula>. We are now in a position to construct a <inline-formula><mml:math id="inf660"><mml:mi>M</mml:mi></mml:math></inline-formula>-module perceptron <inline-formula><mml:math id="inf661"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="bold-italic">w</mml:mi><mml:mo>,</mml:mo><mml:msup><mml:mi>θ</mml:mi><mml:mrow><mml:mi mathvariant="normal">′</mml:mi></mml:mrow></mml:msup><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mstyle></mml:math></inline-formula> realizing the sequence <inline-formula><mml:math id="inf662"><mml:mrow><mml:msup><mml:mi class="ltx_font_mathcaligraphic">D</mml:mi><mml:mo>′</mml:mo></mml:msup><mml:mo>=</mml:mo><mml:msubsup><mml:mi class="ltx_font_mathcaligraphic">D</mml:mi><mml:mn>1</mml:mn><mml:mo>′</mml:mo></mml:msubsup><mml:mo>⊃</mml:mo><mml:msubsup><mml:mi class="ltx_font_mathcaligraphic">D</mml:mi><mml:mn>2</mml:mn><mml:mo>′</mml:mo></mml:msubsup><mml:mo>⊃</mml:mo><mml:mi mathvariant="normal">…</mml:mi><mml:mo>⊃</mml:mo><mml:msubsup><mml:mi class="ltx_font_mathcaligraphic">D</mml:mi><mml:msub><mml:mi>λ</mml:mi><mml:mi>M</mml:mi></mml:msub><mml:mo>′</mml:mo></mml:msubsup></mml:mrow></mml:math></inline-formula>. To do so, it is enough to specify the components <inline-formula><mml:math id="inf663"><mml:mrow><mml:msub><mml:mi>w</mml:mi><mml:mrow><mml:mi>M</mml:mi><mml:mo>,</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:mi mathvariant="normal">…</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mi>w</mml:mi><mml:mrow><mml:mi>M</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mi>M</mml:mi></mml:msub></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> of the Mth module of a weight vector <inline-formula><mml:math id="inf664"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mi mathvariant="bold-italic">w</mml:mi></mml:mrow></mml:mstyle></mml:math></inline-formula> since the other components will coincide with <inline-formula><mml:math id="inf665"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msup><mml:mi mathvariant="bold-italic">w</mml:mi><mml:mrow><mml:mi mathvariant="normal">′</mml:mi></mml:mrow></mml:msup></mml:mrow></mml:mstyle></mml:math></inline-formula>. One can check that choosing <inline-formula><mml:math id="inf666"><mml:mrow><mml:msub><mml:mi>w</mml:mi><mml:mrow><mml:mi>M</mml:mi><mml:mo>,</mml:mo><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:msubsup><mml:mi>θ</mml:mi><mml:mi>i</mml:mi><mml:mo>′</mml:mo></mml:msubsup><mml:mo>-</mml:mo><mml:msup><mml:mi>θ</mml:mi><mml:mo>′</mml:mo></mml:msup></mml:mrow></mml:mrow></mml:math></inline-formula> defines an admissible increasing sequence of non-negative weights.</p><p>(ii) For the ‘only if’ part, let us consider an arbitrary <inline-formula><mml:math id="inf667"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mpadded width="-1.7pt"><mml:mi>M</mml:mi></mml:mpadded><mml:mo rspace="0.8pt">-</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula>-dimensional Young tableau <inline-formula><mml:math id="inf668"><mml:msup><mml:mi class="ltx_font_mathcaligraphic">T</mml:mi><mml:mo>′</mml:mo></mml:msup></mml:math></inline-formula>, with diagram <inline-formula><mml:math id="inf669"><mml:msup><mml:mi class="ltx_font_mathcaligraphic">D</mml:mi><mml:mo>′</mml:mo></mml:msup></mml:math></inline-formula> such that <inline-formula><mml:math id="inf670"><mml:mrow><mml:mrow><mml:mo stretchy="false">|</mml:mo><mml:msup><mml:mi class="ltx_font_mathcaligraphic">D</mml:mi><mml:mo>′</mml:mo></mml:msup><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:mi>p</mml:mi></mml:mrow></mml:math></inline-formula>. Then let us consider the <inline-formula><mml:math id="inf671"><mml:mi>m</mml:mi></mml:math></inline-formula>-dimensional Young diagram <inline-formula><mml:math id="inf672"><mml:mi class="ltx_font_mathcaligraphic">D</mml:mi></mml:math></inline-formula> obtained via the sequence of <inline-formula><mml:math id="inf673"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>M</mml:mi><mml:mspace width="negativethinmathspace"/><mml:mo>−</mml:mo><mml:mspace width="negativethinmathspace"/><mml:mn>1</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mstyle></mml:math></inline-formula>-dimensional diagrams <inline-formula><mml:math id="inf674"><mml:mrow><mml:msup><mml:mi class="ltx_font_mathcaligraphic">D</mml:mi><mml:mo>′</mml:mo></mml:msup><mml:mo>=</mml:mo><mml:msubsup><mml:mi class="ltx_font_mathcaligraphic">D</mml:mi><mml:mn>1</mml:mn><mml:mo>′</mml:mo></mml:msubsup><mml:mo>⊃</mml:mo><mml:msubsup><mml:mi class="ltx_font_mathcaligraphic">D</mml:mi><mml:mn>2</mml:mn><mml:mo>′</mml:mo></mml:msubsup><mml:mo>⊃</mml:mo><mml:mi mathvariant="normal">…</mml:mi><mml:mo>⊃</mml:mo><mml:msubsup><mml:mi class="ltx_font_mathcaligraphic">D</mml:mi><mml:mi>p</mml:mi><mml:mo>′</mml:mo></mml:msubsup></mml:mrow></mml:math></inline-formula>, where for all <inline-formula><mml:math id="inf675"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mi>q</mml:mi></mml:mrow></mml:mstyle></mml:math></inline-formula>, <inline-formula><mml:math id="inf676"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mn>1</mml:mn><mml:mo>≤</mml:mo><mml:mi>q</mml:mi><mml:mo>§lt;</mml:mo><mml:mi>p</mml:mi></mml:mrow></mml:mstyle></mml:math></inline-formula>, <inline-formula><mml:math id="inf677"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msubsup><mml:mrow><mml:mi mathvariant="script">D</mml:mi></mml:mrow><mml:mrow><mml:mi>q</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="normal">′</mml:mi></mml:mrow></mml:msubsup><mml:mo>∖</mml:mo><mml:msubsup><mml:mrow><mml:mi mathvariant="script">D</mml:mi></mml:mrow><mml:mrow><mml:mi>q</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mi mathvariant="normal">′</mml:mi></mml:mrow></mml:msubsup></mml:mrow></mml:mstyle></mml:math></inline-formula> is a singleton containing the lattice point labeled by <inline-formula><mml:math id="inf678"><mml:mrow><mml:mrow><mml:mi>p</mml:mi><mml:mo>-</mml:mo><mml:mi>q</mml:mi></mml:mrow><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:math></inline-formula>. Moreover, let us consider the smallest periods <inline-formula><mml:math id="inf679"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mi mathvariant="bold-italic">λ</mml:mi></mml:mrow></mml:mstyle></mml:math></inline-formula> such that <inline-formula><mml:math id="inf680"><mml:mrow><mml:mi class="ltx_font_mathcaligraphic">D</mml:mi><mml:mo>⊂</mml:mo><mml:mrow><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mi mathvariant="normal">…</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo stretchy="false">}</mml:mo></mml:mrow><mml:mo>×</mml:mo><mml:mi mathvariant="normal">…</mml:mi><mml:mo>×</mml:mo><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mi mathvariant="normal">…</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mi>M</mml:mi></mml:msub><mml:mo stretchy="false">}</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula>. Now, suppose that all <inline-formula><mml:math id="inf681"><mml:mi>m</mml:mi></mml:math></inline-formula>-dimensional Young diagrams are realizable. Then, there is a perceptron <inline-formula><mml:math id="inf682"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="bold-italic">w</mml:mi><mml:mo>,</mml:mo><mml:mi>θ</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mstyle></mml:math></inline-formula> acting on <inline-formula><mml:math id="inf683"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msub><mml:mrow><mml:mi mathvariant="script">C</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="bold-italic">λ</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mstyle></mml:math></inline-formula> with modularly ordered, non-negative weights such that <inline-formula><mml:math id="inf684"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mrow><mml:mi mathvariant="script">D</mml:mi></mml:mrow><mml:mo>=</mml:mo><mml:mrow><mml:mi mathvariant="script">D</mml:mi></mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="bold-italic">w</mml:mi><mml:mo>,</mml:mo><mml:mi>θ</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mstyle></mml:math></inline-formula>. This means that for all <inline-formula><mml:math id="inf685"><mml:mi>i</mml:mi></mml:math></inline-formula>, <inline-formula><mml:math id="inf686"><mml:mrow><mml:mn>1</mml:mn><mml:mo>≤</mml:mo><mml:mi>q</mml:mi><mml:mo>≤</mml:mo><mml:mi>p</mml:mi></mml:mrow></mml:math></inline-formula>, the diagram <inline-formula><mml:math id="inf687"><mml:msubsup><mml:mi class="ltx_font_mathcaligraphic">D</mml:mi><mml:mi>q</mml:mi><mml:mo>′</mml:mo></mml:msubsup></mml:math></inline-formula> is realized by the perceptron <inline-formula><mml:math id="inf688"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msup><mml:mi mathvariant="bold-italic">w</mml:mi><mml:mrow><mml:mi mathvariant="normal">′</mml:mi></mml:mrow></mml:msup><mml:mo>,</mml:mo><mml:mi>θ</mml:mi><mml:mo>−</mml:mo><mml:msub><mml:mi>w</mml:mi><mml:mrow><mml:mi>M</mml:mi><mml:mo>,</mml:mo><mml:mi>q</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mstyle></mml:math></inline-formula>, where <inline-formula><mml:math id="inf689"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msup><mml:mi mathvariant="bold-italic">w</mml:mi><mml:mrow><mml:mi mathvariant="normal">′</mml:mi></mml:mrow></mml:msup></mml:mrow></mml:mstyle></mml:math></inline-formula> collect the components of <inline-formula><mml:math id="inf690"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mi mathvariant="bold-italic">w</mml:mi></mml:mrow></mml:mstyle></mml:math></inline-formula> that correspond to <inline-formula><mml:math id="inf691"><mml:mrow><mml:mi>m</mml:mi><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:math></inline-formula> first modules. Then, let us consider the pattern <inline-formula><mml:math id="inf692"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msub><mml:mi mathvariant="bold-italic">c</mml:mi><mml:mrow><mml:mi>q</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mstyle></mml:math></inline-formula> represented by the lattice point in the singleton <inline-formula><mml:math id="inf693"><mml:mrow><mml:msubsup><mml:mi class="ltx_font_mathcaligraphic">D</mml:mi><mml:mi>q</mml:mi><mml:mo>′</mml:mo></mml:msubsup><mml:mo>∖</mml:mo><mml:msubsup><mml:mi class="ltx_font_mathcaligraphic">D</mml:mi><mml:mrow><mml:mi>q</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mo>′</mml:mo></mml:msubsup></mml:mrow></mml:math></inline-formula>. Remember that a pattern <inline-formula><mml:math id="inf694"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mi mathvariant="bold-italic">c</mml:mi></mml:mrow></mml:mstyle></mml:math></inline-formula> is identified to the lattice point <inline-formula><mml:math id="inf695"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>i</mml:mi><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>i</mml:mi><mml:mrow><mml:mi>M</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mstyle></mml:math></inline-formula>, whose coordinates are given by the phase of the active neuron within each module. Then, by the increasing property of the weights, we necessarily have <inline-formula><mml:math id="inf696"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mi>θ</mml:mi><mml:mo>−</mml:mo><mml:msub><mml:mi>w</mml:mi><mml:mrow><mml:mi>M</mml:mi><mml:mo>,</mml:mo><mml:mi>q</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>≤</mml:mo><mml:msup><mml:mi mathvariant="bold-italic">w</mml:mi><mml:mrow><mml:mi mathvariant="normal">′</mml:mi><mml:mi>T</mml:mi></mml:mrow></mml:msup><mml:msub><mml:mi mathvariant="bold-italic">c</mml:mi><mml:mrow><mml:mi mathvariant="bold-italic">q</mml:mi></mml:mrow></mml:msub><mml:mo>&lt;</mml:mo><mml:mi>θ</mml:mi><mml:mo>−</mml:mo><mml:msub><mml:mi>w</mml:mi><mml:mrow><mml:mi>M</mml:mi><mml:mo>,</mml:mo><mml:mi>q</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mstyle></mml:math></inline-formula>, which implies that the Young tableaux <inline-formula><mml:math id="inf697"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msup><mml:mrow><mml:mi mathvariant="script">D</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="normal">′</mml:mi></mml:mrow></mml:msup></mml:mrow></mml:mstyle></mml:math></inline-formula> is realized by the perceptron <inline-formula><mml:math id="inf698"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msup><mml:mi mathvariant="bold-italic">w</mml:mi><mml:mrow><mml:mi mathvariant="normal">′</mml:mi></mml:mrow></mml:msup><mml:mo>,</mml:mo><mml:mi>θ</mml:mi><mml:mo>−</mml:mo><mml:msub><mml:mi>w</mml:mi><mml:mrow><mml:mi>M</mml:mi><mml:mo>,</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mstyle></mml:math></inline-formula>.</p><p>It is straightforward to check that all 1D Young tableaux are realizable, so that all 2D Young diagrams are realizable. However, the following counterexample shows that not all 2D Young tableaux are realizable, so that <inline-formula><mml:math id="inf699"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mi>M</mml:mi></mml:mrow></mml:mstyle></mml:math></inline-formula>-dimensional Young diagrams with <inline-formula><mml:math id="inf700"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mi>M</mml:mi><mml:mo>§gt;</mml:mo><mml:mn>2</mml:mn></mml:mrow></mml:mstyle></mml:math></inline-formula> are not all realizable.</p><p>Counterexample 1. The 2D Young tableaux defined as<disp-formula id="equ31"><mml:math id="m31"><mml:mrow><mml:mrow><mml:mi mathvariant="script">T</mml:mi></mml:mrow><mml:mo>=</mml:mo><mml:mtable columnalign="center center center" columnlines="solid solid" columnspacing="1em" frame="solid" rowlines="solid solid" rowspacing="4pt"><mml:mtr><mml:mtd><mml:mn>4</mml:mn></mml:mtd><mml:mtd><mml:mn>8</mml:mn></mml:mtd><mml:mtd><mml:mn>9</mml:mn></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mn>3</mml:mn></mml:mtd><mml:mtd><mml:mn>5</mml:mn></mml:mtd><mml:mtd><mml:mn>7</mml:mn></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mn>1</mml:mn></mml:mtd><mml:mtd><mml:mn>2</mml:mn></mml:mtd><mml:mtd><mml:mn>6</mml:mn></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math></disp-formula></p><p>is not realizable.</p><p>Proof. Suppose there is a perceptron with modularly ordered, non-negative, weight vector <inline-formula><mml:math id="inf701"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mi mathvariant="bold-italic">w</mml:mi><mml:mo>=</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>w</mml:mi><mml:mrow><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>w</mml:mi><mml:mrow><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mn>2</mml:mn></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>w</mml:mi><mml:mrow><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mn>3</mml:mn></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>w</mml:mi><mml:mrow><mml:mn>2</mml:mn><mml:mo>,</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>w</mml:mi><mml:mrow><mml:mn>2</mml:mn><mml:mo>,</mml:mo><mml:mn>2</mml:mn></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>w</mml:mi><mml:mrow><mml:mn>2</mml:mn><mml:mo>,</mml:mo><mml:mn>3</mml:mn></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mstyle></mml:math></inline-formula> realizing <inline-formula><mml:math id="inf702"><mml:mi class="ltx_font_mathcaligraphic">D</mml:mi></mml:math></inline-formula>. By convention, we consider that the first module corresponds to the horizontal axis and the second module corresponds to the vertical axis. The labeling of <inline-formula><mml:math id="inf703"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mrow><mml:mi mathvariant="script">T</mml:mi></mml:mrow></mml:mrow></mml:mstyle></mml:math></inline-formula> implies order relations among read-out activities via <inline-formula><mml:math id="inf704"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mi mathvariant="bold-italic">w</mml:mi></mml:mrow></mml:mstyle></mml:math></inline-formula>. Specifically, the activities can be listed by increasing order as <inline-formula><mml:math id="inf705"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msub><mml:mi>w</mml:mi><mml:mrow><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:msub><mml:mi>w</mml:mi><mml:mrow><mml:mn>2</mml:mn><mml:mo>,</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>§lt;</mml:mo><mml:msub><mml:mi>w</mml:mi><mml:mrow><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mn>2</mml:mn></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:msub><mml:mi>w</mml:mi><mml:mrow><mml:mn>2</mml:mn><mml:mo>,</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>§lt;</mml:mo><mml:msub><mml:mi>w</mml:mi><mml:mrow><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:msub><mml:mi>w</mml:mi><mml:mrow><mml:mn>2</mml:mn><mml:mo>,</mml:mo><mml:mn>2</mml:mn></mml:mrow></mml:msub><mml:mo>§lt;</mml:mo><mml:msub><mml:mi>w</mml:mi><mml:mrow><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:msub><mml:mi>w</mml:mi><mml:mrow><mml:mn>2</mml:mn><mml:mo>,</mml:mo><mml:mn>3</mml:mn></mml:mrow></mml:msub><mml:mo>§lt;</mml:mo><mml:mo>…</mml:mo></mml:mrow></mml:mstyle></mml:math></inline-formula>. We are going to show that such an order is impossible by contradiction. To do so, let us introduce the weight differences <inline-formula><mml:math id="inf706"><mml:mrow><mml:msub><mml:mi>u</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:msub><mml:mi>w</mml:mi><mml:mrow><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mn>2</mml:mn></mml:mrow></mml:msub><mml:mo>-</mml:mo><mml:msub><mml:mi>w</mml:mi><mml:mrow><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>, <inline-formula><mml:math id="inf707"><mml:mrow><mml:msub><mml:mi>u</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:msub><mml:mi>w</mml:mi><mml:mrow><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mn>3</mml:mn></mml:mrow></mml:msub><mml:mo>-</mml:mo><mml:msub><mml:mi>w</mml:mi><mml:mrow><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mn>2</mml:mn></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> associated to the first module and the weight differences <inline-formula><mml:math id="inf708"><mml:mrow><mml:msub><mml:mi>v</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:msub><mml:mi>w</mml:mi><mml:mrow><mml:mn>2</mml:mn><mml:mo>,</mml:mo><mml:mn>2</mml:mn></mml:mrow></mml:msub><mml:mo>-</mml:mo><mml:msub><mml:mi>w</mml:mi><mml:mrow><mml:mn>2</mml:mn><mml:mo>,</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>, <inline-formula><mml:math id="inf709"><mml:mrow><mml:msub><mml:mi>v</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:msub><mml:mi>w</mml:mi><mml:mrow><mml:mn>2</mml:mn><mml:mo>,</mml:mo><mml:mn>3</mml:mn></mml:mrow></mml:msub><mml:mo>-</mml:mo><mml:msub><mml:mi>w</mml:mi><mml:mrow><mml:mn>2</mml:mn><mml:mo>,</mml:mo><mml:mn>2</mml:mn></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> associated to the second module. These differences satisfy incompatible order relations. Specifically: <inline-formula><mml:math id="inf710"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> the sequence <inline-formula><mml:math id="inf711"><mml:mrow><mml:mn>2</mml:mn><mml:mo>→</mml:mo><mml:mn>3</mml:mn></mml:mrow></mml:math></inline-formula> in <inline-formula><mml:math id="inf712"><mml:mi class="ltx_font_mathcaligraphic">T</mml:mi></mml:math></inline-formula> implies that the cost to go right, that is, <inline-formula><mml:math id="inf713"><mml:mrow><mml:msub><mml:mi>u</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:msub><mml:mi>w</mml:mi><mml:mrow><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mn>2</mml:mn></mml:mrow></mml:msub><mml:mo>-</mml:mo><mml:msub><mml:mi>w</mml:mi><mml:mrow><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>, is less than the cost to go up, that is, <inline-formula><mml:math id="inf714"><mml:mrow><mml:msub><mml:mi>v</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:msub><mml:mi>w</mml:mi><mml:mrow><mml:mn>2</mml:mn><mml:mo>,</mml:mo><mml:mn>2</mml:mn></mml:mrow></mml:msub><mml:mo>-</mml:mo><mml:msub><mml:mi>w</mml:mi><mml:mrow><mml:mn>2</mml:mn><mml:mo>,</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>. Otherwise, the label 2 would be on top the label 1. Thus, we necessarily have <inline-formula><mml:math id="inf715"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msub><mml:mi>u</mml:mi><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>§lt;</mml:mo><mml:msub><mml:mi>v</mml:mi><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub></mml:mrow></mml:mstyle></mml:math></inline-formula>. The same reasoning for the sequence <inline-formula><mml:math id="inf716"><mml:mrow><mml:mn>4</mml:mn><mml:mo>→</mml:mo><mml:mn>5</mml:mn></mml:mrow></mml:math></inline-formula> implies <inline-formula><mml:math id="inf717"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msub><mml:mi>v</mml:mi><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msub><mml:mo>&lt;</mml:mo><mml:msub><mml:mi>u</mml:mi><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub></mml:mrow></mml:mstyle></mml:math></inline-formula>, so that we have <inline-formula><mml:math id="inf718"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msub><mml:mi>v</mml:mi><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msub><mml:mo>&lt;</mml:mo><mml:msub><mml:mi>v</mml:mi><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub></mml:mrow></mml:mstyle></mml:math></inline-formula> The sequence <inline-formula><mml:math id="inf719"><mml:mrow><mml:mn>5</mml:mn><mml:mo>→</mml:mo><mml:mn>6</mml:mn></mml:mrow></mml:math></inline-formula> implies <inline-formula><mml:math id="inf720"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msub><mml:mi>v</mml:mi><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>&lt;</mml:mo><mml:msub><mml:mi>u</mml:mi><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msub></mml:mrow></mml:mstyle></mml:math></inline-formula>, and the sequence <inline-formula><mml:math id="inf721"><mml:mrow><mml:mn>7</mml:mn><mml:mo>→</mml:mo><mml:mn>8</mml:mn></mml:mrow></mml:math></inline-formula> implies <inline-formula><mml:math id="inf722"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msub><mml:mi>u</mml:mi><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msub><mml:mo>&lt;</mml:mo><mml:msub><mml:mi>v</mml:mi><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msub></mml:mrow></mml:mstyle></mml:math></inline-formula>, so that we have <inline-formula><mml:math id="inf723"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msub><mml:mi>v</mml:mi><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>§lt;</mml:mo><mml:msub><mml:mi>v</mml:mi><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msub></mml:mrow></mml:mstyle></mml:math></inline-formula>. Thus, assuming that <inline-formula><mml:math id="inf724"><mml:mi class="ltx_font_mathcaligraphic">T</mml:mi></mml:math></inline-formula> is realizable leads to considering weights for which <inline-formula><mml:math id="inf725"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msub><mml:mi>v</mml:mi><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msub><mml:mo>§lt;</mml:mo><mml:msub><mml:mi>v</mml:mi><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub></mml:mrow></mml:mstyle></mml:math></inline-formula> and <inline-formula><mml:math id="inf726"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msub><mml:mi>v</mml:mi><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>&lt;</mml:mo><mml:msub><mml:mi>v</mml:mi><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msub></mml:mrow></mml:mstyle></mml:math></inline-formula>—a contradiction.</p></sec><sec id="s20" sec-type="appendix"><title>Linearly separable dichotomies for realizable Young diagrams</title><p>Consider a Young <inline-formula><mml:math id="inf727"><mml:mi>M</mml:mi></mml:math></inline-formula>-dimensional diagram <inline-formula><mml:math id="inf728"><mml:mrow><mml:mi class="ltx_font_mathcaligraphic">D</mml:mi><mml:mo>∈</mml:mo><mml:mrow><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mrow><mml:mi mathvariant="normal">…</mml:mi><mml:mo>⁢</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:mrow><mml:mo stretchy="false">}</mml:mo></mml:mrow><mml:mo>×</mml:mo><mml:mi mathvariant="normal">…</mml:mi><mml:mo>×</mml:mo><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mrow><mml:mi mathvariant="normal">…</mml:mi><mml:mo>⁢</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mi>M</mml:mi></mml:msub></mml:mrow><mml:mo stretchy="false">}</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula> that can be realized by a perceptron with modularly ordered, non-negative weights. Such a Young diagram <inline-formula><mml:math id="inf729"><mml:mi class="ltx_font_mathcaligraphic">D</mml:mi></mml:math></inline-formula> is the lattice set whose points represent the phase indices of inactive grid-like inputs. Indeed, if <inline-formula><mml:math id="inf730"><mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>i</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:mi mathvariant="normal">…</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mi>i</mml:mi><mml:mi>M</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>∈</mml:mo><mml:mi class="ltx_font_mathcaligraphic">D</mml:mi></mml:mrow></mml:math></inline-formula>, we have <inline-formula><mml:math id="inf731"><mml:mrow><mml:mrow><mml:msubsup><mml:mo largeop="true" symmetric="true">∑</mml:mo><mml:mrow><mml:mi>m</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>M</mml:mi></mml:msubsup><mml:msub><mml:mi>w</mml:mi><mml:mrow><mml:mi>m</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mi>i</mml:mi><mml:mi>m</mml:mi></mml:msub></mml:mrow></mml:msub></mml:mrow><mml:mo>≤</mml:mo><mml:mi>θ</mml:mi></mml:mrow></mml:math></inline-formula>, which means that the perceptron is inactive for the grid-like input <inline-formula><mml:math id="inf732"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mi mathvariant="bold-italic">c</mml:mi></mml:mrow></mml:mstyle></mml:math></inline-formula> in <inline-formula><mml:math id="inf733"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msub><mml:mrow><mml:mi mathvariant="script">C</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="bold-italic">λ</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mstyle></mml:math></inline-formula> obtained by setting <inline-formula><mml:math id="inf734"><mml:mrow><mml:msub><mml:mi>c</mml:mi><mml:mrow><mml:mi>m</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mi>i</mml:mi><mml:mi>m</mml:mi></mml:msub></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:math></inline-formula> for all <inline-formula><mml:math id="inf735"><mml:mrow><mml:mn>1</mml:mn><mml:mo>≤</mml:mo><mml:mi>m</mml:mi><mml:mo>≤</mml:mo><mml:mi>M</mml:mi></mml:mrow></mml:math></inline-formula>. Thus, the perceptron implements the dichotomy for which the inactive grid-like inputs are exactly represented by <inline-formula><mml:math id="inf736"><mml:mi class="ltx_font_mathcaligraphic">D</mml:mi></mml:math></inline-formula>. Are there more dichotomies associated to <inline-formula><mml:math id="inf737"><mml:mi class="ltx_font_mathcaligraphic">D</mml:mi></mml:math></inline-formula>? Answering this question requires revisiting the correspondence between perceptrons and Young diagrams. The key property in establishing this correspondence is the assumption of modularly ordered weights. In Section B.1, we justified that such an assumption incurs no loss of generality by permutation invariance of the grid cells within each modules. Thus, each Young diagram <inline-formula><mml:math id="inf738"><mml:mi class="ltx_font_mathcaligraphic">D</mml:mi></mml:math></inline-formula> is in fact associated to the class of perceptrons<disp-formula id="equ32"><label>(31)</label><mml:math id="m32"><mml:mrow><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mo fence="false" stretchy="false">{</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi>P</mml:mi><mml:mi mathvariant="bold-italic">w</mml:mi><mml:mo>,</mml:mo><mml:mi>θ</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mrow><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:mrow><mml:mi mathvariant="script">D</mml:mi></mml:mrow><mml:mo>=</mml:mo><mml:mrow><mml:mi mathvariant="script">D</mml:mi></mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="bold-italic">w</mml:mi><mml:mo>,</mml:mo><mml:mi>θ</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mi>P</mml:mi><mml:mo>∈</mml:mo><mml:msub><mml:mi mathvariant="normal">Π</mml:mi><mml:mrow><mml:mi mathvariant="bold-italic">λ</mml:mi></mml:mrow></mml:msub><mml:mo fence="false" stretchy="false">}</mml:mo><mml:mo>,</mml:mo></mml:mstyle></mml:mrow></mml:math></disp-formula></p><p>where <inline-formula><mml:math id="inf739"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msub><mml:mi mathvariant="normal">Π</mml:mi><mml:mrow><mml:mi mathvariant="bold-italic">λ</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mstyle></mml:math></inline-formula> denotes the set of permutation matrix stabilizing the modules of periods <inline-formula><mml:math id="inf740"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mi mathvariant="bold-italic">λ</mml:mi></mml:mrow></mml:mstyle></mml:math></inline-formula>. Clearly, for <inline-formula><mml:math id="inf741"><mml:mrow><mml:mi>P</mml:mi><mml:mo>≠</mml:mo><mml:msup><mml:mi>P</mml:mi><mml:mo>′</mml:mo></mml:msup></mml:mrow></mml:math></inline-formula>, the perceptron <inline-formula><mml:math id="inf742"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>P</mml:mi><mml:mi mathvariant="bold-italic">w</mml:mi><mml:mo>,</mml:mo><mml:mi>θ</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mstyle></mml:math></inline-formula> generally implements a distinct dichotomy than that of <inline-formula><mml:math id="inf743"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msup><mml:mi>P</mml:mi><mml:mrow><mml:mi mathvariant="normal">′</mml:mi></mml:mrow></mml:msup><mml:mi mathvariant="bold-italic">w</mml:mi><mml:mo>,</mml:mo><mml:mi>θ</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mstyle></mml:math></inline-formula>. As a result, there is a class of dichotomies indexed by the Young diagram <inline-formula><mml:math id="inf744"><mml:mi class="ltx_font_mathcaligraphic">D</mml:mi></mml:math></inline-formula>, which we denote by <inline-formula><mml:math id="inf745"><mml:mrow><mml:mi>C</mml:mi><mml:mo>⁢</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi class="ltx_font_mathcaligraphic">D</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula>.</p><p>Evaluating the cardinality of <inline-formula><mml:math id="inf746"><mml:mrow><mml:mi>C</mml:mi><mml:mo>⁢</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi class="ltx_font_mathcaligraphic">D</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula> via simple combinatorial arguments first requires a crude description of the geometry of <inline-formula><mml:math id="inf747"><mml:mi class="ltx_font_mathcaligraphic">D</mml:mi></mml:math></inline-formula>, and specifically of its degenerate symmetries. For all <inline-formula><mml:math id="inf748"><mml:mrow><mml:mn>1</mml:mn><mml:mo>≤</mml:mo><mml:mi>m</mml:mi><mml:mo>≤</mml:mo><mml:mi>M</mml:mi></mml:mrow></mml:math></inline-formula>, <inline-formula><mml:math id="inf749"><mml:mrow><mml:mn>1</mml:mn><mml:mo>≤</mml:mo><mml:mi>i</mml:mi><mml:mo>≤</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mi>m</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula>, let us denote the restriction of <inline-formula><mml:math id="inf750"><mml:mi class="ltx_font_mathcaligraphic">D</mml:mi></mml:math></inline-formula> to the hyperplane <inline-formula><mml:math id="inf751"><mml:mrow><mml:msub><mml:mi>i</mml:mi><mml:mi>m</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mi>i</mml:mi></mml:mrow></mml:math></inline-formula> by<disp-formula id="equ33"><label>(32)</label><mml:math id="m33"><mml:mrow><mml:mrow><mml:mrow><mml:msub><mml:mi>R</mml:mi><mml:mrow><mml:mi>m</mml:mi><mml:mo>,</mml:mo><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mo>⁢</mml:mo><mml:mrow><mml:mo>(</mml:mo><mml:mi class="ltx_font_mathcaligraphic">D</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:mrow><mml:mo>=</mml:mo><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>i</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:mi mathvariant="normal">…</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mi>i</mml:mi><mml:mi>M</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>∈</mml:mo><mml:mpadded width="+1.7pt"><mml:mi class="ltx_font_mathcaligraphic">D</mml:mi></mml:mpadded></mml:mrow><mml:mo rspace="4.2pt" stretchy="false">|</mml:mo><mml:mrow><mml:msub><mml:mi>i</mml:mi><mml:mi>m</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mi>i</mml:mi></mml:mrow><mml:mo rspace="4.2pt" stretchy="false">}</mml:mo></mml:mrow></mml:mrow><mml:mo>.</mml:mo></mml:mrow></mml:math></disp-formula></p><p>By definition of the Young diagrams, we have <inline-formula><mml:math id="inf752"><mml:mrow><mml:mrow><mml:msub><mml:mi>R</mml:mi><mml:mrow><mml:mi>m</mml:mi><mml:mo>,</mml:mo><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mo>⁢</mml:mo><mml:mrow><mml:mo>(</mml:mo><mml:mi class="ltx_font_mathcaligraphic">D</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:mrow><mml:mo>⊃</mml:mo><mml:mrow><mml:msub><mml:mi>R</mml:mi><mml:mrow><mml:mi>m</mml:mi><mml:mo>,</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:mrow></mml:msub><mml:mo>⁢</mml:mo><mml:mrow><mml:mo>(</mml:mo><mml:mi class="ltx_font_mathcaligraphic">D</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula> for all <inline-formula><mml:math id="inf753"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mn>1</mml:mn><mml:mo>≤</mml:mo><mml:mi>i</mml:mi><mml:mo>§lt;</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mi>m</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mstyle></mml:math></inline-formula>. We say that a Young diagram exhibits a degenerate symmetry along the mth dimension whenever two consecutive restrictions coincide: <inline-formula><mml:math id="inf754"><mml:mrow><mml:mrow><mml:msub><mml:mi>R</mml:mi><mml:mrow><mml:mi>m</mml:mi><mml:mo>,</mml:mo><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mo>⁢</mml:mo><mml:mrow><mml:mo>(</mml:mo><mml:mi class="ltx_font_mathcaligraphic">D</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:mrow><mml:mo>=</mml:mo><mml:mrow><mml:msub><mml:mi>R</mml:mi><mml:mrow><mml:mi>m</mml:mi><mml:mo>,</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:mrow></mml:msub><mml:mo>⁢</mml:mo><mml:mrow><mml:mo>(</mml:mo><mml:mi class="ltx_font_mathcaligraphic">D</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula>. To make the notion of degeneracy more precise, let us consider the equivalence relation on <inline-formula><mml:math id="inf755"><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mi mathvariant="normal">…</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mi>m</mml:mi></mml:msub><mml:mo stretchy="false">}</mml:mo></mml:mrow></mml:math></inline-formula> defined by <inline-formula><mml:math id="inf756"><mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>∼</mml:mo><mml:mi>j</mml:mi></mml:mrow><mml:mo>⇔</mml:mo><mml:mrow><mml:mrow><mml:msub><mml:mi>R</mml:mi><mml:mrow><mml:mi>m</mml:mi><mml:mo>,</mml:mo><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mo>⁢</mml:mo><mml:mrow><mml:mo>(</mml:mo><mml:mi class="ltx_font_mathcaligraphic">D</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:mrow><mml:mo>=</mml:mo><mml:mrow><mml:msub><mml:mi>R</mml:mi><mml:mrow><mml:mi>m</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>⁢</mml:mo><mml:mrow><mml:mo>(</mml:mo><mml:mi class="ltx_font_mathcaligraphic">D</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula>. Given <inline-formula><mml:math id="inf757"><mml:mi>i</mml:mi></mml:math></inline-formula> in <inline-formula><mml:math id="inf758"><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mi mathvariant="normal">…</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mi>m</mml:mi></mml:msub><mml:mo stretchy="false">}</mml:mo></mml:mrow></mml:math></inline-formula>, the equivalence class of <inline-formula><mml:math id="inf759"><mml:mi>i</mml:mi></mml:math></inline-formula> is then <inline-formula><mml:math id="inf760"><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:mrow><mml:mi>j</mml:mi><mml:mo>∈</mml:mo><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mi mathvariant="normal">…</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mi>m</mml:mi></mml:msub><mml:mo rspace="4.2pt" stretchy="false">}</mml:mo></mml:mrow></mml:mrow><mml:mo rspace="4.2pt" stretchy="false">|</mml:mo><mml:mrow><mml:mrow><mml:msub><mml:mi>R</mml:mi><mml:mrow><mml:mi>m</mml:mi><mml:mo>,</mml:mo><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mo>⁢</mml:mo><mml:mrow><mml:mo>(</mml:mo><mml:mi class="ltx_font_mathcaligraphic">D</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:mrow><mml:mo>=</mml:mo><mml:mrow><mml:msub><mml:mi>R</mml:mi><mml:mrow><mml:mi>m</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>⁢</mml:mo><mml:mrow><mml:mo>(</mml:mo><mml:mi class="ltx_font_mathcaligraphic">D</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mrow><mml:mo stretchy="false">}</mml:mo></mml:mrow></mml:math></inline-formula>. Let us denote the total number of such equivalence classes by <italic>k</italic><sub><italic>m</italic></sub>, <inline-formula><mml:math id="inf761"><mml:mrow><mml:mn>1</mml:mn><mml:mo>≤</mml:mo><mml:msub><mml:mi>k</mml:mi><mml:mi>m</mml:mi></mml:msub><mml:mo>≤</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mi>m</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula>. Then, the set <inline-formula><mml:math id="inf762"><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mi mathvariant="normal">…</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mi>m</mml:mi></mml:msub><mml:mo stretchy="false">}</mml:mo></mml:mrow></mml:math></inline-formula> can be partitioned in <italic>k</italic><sub><italic>m</italic></sub> classes, <inline-formula><mml:math id="inf763"><mml:mrow><mml:msub><mml:mi>C</mml:mi><mml:mrow><mml:mi>m</mml:mi><mml:mo>,</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:mi mathvariant="normal">…</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mi>C</mml:mi><mml:mrow><mml:mi>m</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mi>k</mml:mi><mml:mi>m</mml:mi></mml:msub></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula>, where the classes are listed by decreasing order of Young diagrams. For instance <italic>C</italic><sub>1</sub> comprises all the indices for which the restriction along the mth dimension yields the same Young diagram as <inline-formula><mml:math id="inf764"><mml:mrow><mml:msub><mml:mi>R</mml:mi><mml:mrow><mml:mi>m</mml:mi><mml:mo>,</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>⁢</mml:mo><mml:mrow><mml:mo>(</mml:mo><mml:mi class="ltx_font_mathcaligraphic">D</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula>. We denote the cardinality of the thus-ordered equivalence classes by <inline-formula><mml:math id="inf765"><mml:mrow><mml:msub><mml:mi>σ</mml:mi><mml:mrow><mml:mi>m</mml:mi><mml:mo>,</mml:mo><mml:mi>k</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:mo stretchy="false">|</mml:mo><mml:msub><mml:mi>C</mml:mi><mml:mrow><mml:mi>m</mml:mi><mml:mo>,</mml:mo><mml:mi>k</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">|</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula>, <inline-formula><mml:math id="inf766"><mml:mrow><mml:mn>1</mml:mn><mml:mo>≤</mml:mo><mml:mi>k</mml:mi><mml:mo>≤</mml:mo><mml:msub><mml:mi>k</mml:mi><mml:mi>m</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula>, so that we have <inline-formula><mml:math id="inf767"><mml:mrow><mml:msub><mml:mi>λ</mml:mi><mml:mi>m</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:msub><mml:mi>σ</mml:mi><mml:mrow><mml:mi>m</mml:mi><mml:mo>,</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:mi mathvariant="normal">…</mml:mi><mml:mo>+</mml:mo><mml:msub><mml:mi>σ</mml:mi><mml:mrow><mml:mi>m</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mi>k</mml:mi><mml:mi>m</mml:mi></mml:msub></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>. We refer to the <inline-formula><mml:math id="inf768"><mml:msub><mml:mi>σ</mml:mi><mml:mrow><mml:mi>m</mml:mi><mml:mo>,</mml:mo><mml:mi>k</mml:mi></mml:mrow></mml:msub></mml:math></inline-formula> as the degeneracy indices. Degenerate symmetries correspond to degeneracy indices <inline-formula><mml:math id="inf769"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msub><mml:mi>σ</mml:mi><mml:mrow><mml:mi>m</mml:mi><mml:mo>,</mml:mo><mml:mi>k</mml:mi></mml:mrow></mml:msub><mml:mo>§gt;</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:mstyle></mml:math></inline-formula>. We are now in a position to determine the cardinality of <inline-formula><mml:math id="inf770"><mml:mrow><mml:mi>C</mml:mi><mml:mo>⁢</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi class="ltx_font_mathcaligraphic">D</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula>:</p></sec><sec id="s21" sec-type="appendix"><title>Proposition 6</title><p>For integer periods <inline-formula><mml:math id="inf771"><mml:mrow><mml:msub><mml:mi>λ</mml:mi><mml:mn mathvariant="normal">1</mml:mn></mml:msub><mml:mo mathvariant="normal">,</mml:mo><mml:mi mathvariant="normal">…</mml:mi><mml:mo mathvariant="normal">,</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mi>M</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula>, let us consider a realizable Young diagram <inline-formula><mml:math id="inf772"><mml:mi class="ltx_font_mathcaligraphic" mathvariant="normal">D</mml:mi></mml:math></inline-formula> in <inline-formula><mml:math id="inf773"><mml:mrow><mml:mrow><mml:mo mathvariant="normal" stretchy="false">{</mml:mo><mml:mn mathvariant="normal">1</mml:mn><mml:mo mathvariant="normal">,</mml:mo><mml:mi mathvariant="normal">…</mml:mi><mml:mo mathvariant="normal">,</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mn mathvariant="normal">1</mml:mn></mml:msub><mml:mo mathvariant="normal" stretchy="false">}</mml:mo></mml:mrow><mml:mo mathvariant="normal">×</mml:mo><mml:mi mathvariant="normal">…</mml:mi><mml:mo mathvariant="normal">×</mml:mo><mml:mrow><mml:mo mathvariant="normal" stretchy="false">{</mml:mo><mml:mn mathvariant="normal">1</mml:mn><mml:mo mathvariant="normal">,</mml:mo><mml:mi mathvariant="normal">…</mml:mi><mml:mo mathvariant="normal">,</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mi>M</mml:mi></mml:msub><mml:mo mathvariant="normal" stretchy="false">}</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula>. Then, the class of linearly separable dichotomies with Young diagram <inline-formula><mml:math id="inf774"><mml:mi class="ltx_font_mathcaligraphic" mathvariant="normal">D</mml:mi></mml:math></inline-formula>, denoted by <inline-formula><mml:math id="inf775"><mml:mrow><mml:mi>C</mml:mi><mml:mo mathvariant="italic">⁢</mml:mo><mml:mrow><mml:mo mathvariant="normal" stretchy="false">(</mml:mo><mml:mi class="ltx_font_mathcaligraphic" mathvariant="normal">D</mml:mi><mml:mo mathvariant="normal" stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula>, has cardinality<disp-formula id="equ34"><label>(33)</label><mml:math id="m34"><mml:mrow><mml:mrow><mml:mrow><mml:mo stretchy="false">|</mml:mo><mml:mrow><mml:mi>C</mml:mi><mml:mo>⁢</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi class="ltx_font_mathcaligraphic">D</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:mrow><mml:mstyle displaystyle="true" scriptlevel="0"><mml:munderover><mml:mo largeop="true" movablelimits="false" symmetric="true">∏</mml:mo><mml:mrow><mml:mi>m</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>M</mml:mi></mml:munderover></mml:mstyle><mml:mpadded width="+1.7pt"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mfrac><mml:mrow><mml:msub><mml:mi>λ</mml:mi><mml:mi>m</mml:mi></mml:msub><mml:mo lspace="0pt" rspace="3.5pt">!</mml:mo></mml:mrow><mml:mrow><mml:mrow><mml:msub><mml:mi>σ</mml:mi><mml:mrow><mml:mi>m</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mi>k</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:msub><mml:mo lspace="0pt" rspace="3.5pt">!</mml:mo></mml:mrow><mml:mo>⁢</mml:mo><mml:mi mathvariant="normal">…</mml:mi><mml:mo>⁢</mml:mo><mml:mrow><mml:msub><mml:mi>σ</mml:mi><mml:mrow><mml:mi>m</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mi>k</mml:mi><mml:mi>m</mml:mi></mml:msub></mml:mrow></mml:msub><mml:mo lspace="0pt" rspace="3.5pt">!</mml:mo></mml:mrow></mml:mrow></mml:mfrac></mml:mstyle></mml:mpadded></mml:mrow></mml:mrow><mml:mo>.</mml:mo></mml:mrow></mml:math></disp-formula></p><p>where <inline-formula><mml:math id="inf776"><mml:msub><mml:mi>σ</mml:mi><mml:mrow><mml:mi>m</mml:mi><mml:mo mathvariant="normal">,</mml:mo><mml:mi>k</mml:mi></mml:mrow></mml:msub></mml:math></inline-formula>, <inline-formula><mml:math id="inf777"><mml:mrow><mml:mn mathvariant="normal">1</mml:mn><mml:mo mathvariant="normal">≤</mml:mo><mml:mi>k</mml:mi><mml:mo mathvariant="normal">≤</mml:mo><mml:mi>m</mml:mi></mml:mrow></mml:math></inline-formula> are the degeneracy indices of the Young diagram along the mth dimension.</p><p>Proof. A dichotomy is specified by enumerating the set of inactive grid-like inputs <inline-formula><mml:math id="inf778"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mi mathvariant="bold-italic">c</mml:mi></mml:mrow></mml:mstyle></mml:math></inline-formula> in <inline-formula><mml:math id="inf779"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msub><mml:mrow><mml:mi mathvariant="script">C</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="bold-italic">λ</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mstyle></mml:math></inline-formula>. Each pattern <inline-formula><mml:math id="inf780"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mi mathvariant="bold-italic">c</mml:mi></mml:mrow></mml:mstyle></mml:math></inline-formula> can be conveniently represented as a lattice point in <inline-formula><mml:math id="inf781"><mml:mrow><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mi mathvariant="normal">…</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo stretchy="false">}</mml:mo></mml:mrow><mml:mo>×</mml:mo><mml:mi mathvariant="normal">…</mml:mi><mml:mo>×</mml:mo><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mi mathvariant="normal">…</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mi>M</mml:mi></mml:msub><mml:mo stretchy="false">}</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula> by considering the phase indices of the active cell in the <inline-formula><mml:math id="inf782"><mml:mi>M</mml:mi></mml:math></inline-formula> modules of pattern <inline-formula><mml:math id="inf783"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mi mathvariant="bold-italic">c</mml:mi></mml:mrow></mml:mstyle></mml:math></inline-formula>. Thus, a generic dichotomy is just a configuration of lattice points in <inline-formula><mml:math id="inf784"><mml:mrow><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mi mathvariant="normal">…</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo stretchy="false">}</mml:mo></mml:mrow><mml:mo>×</mml:mo><mml:mi mathvariant="normal">…</mml:mi><mml:mo>×</mml:mo><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mi mathvariant="normal">…</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mi>M</mml:mi></mml:msub><mml:mo stretchy="false">}</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula>. The class of dichotomies <inline-formula><mml:math id="inf785"><mml:mrow><mml:mi>C</mml:mi><mml:mo>⁢</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi class="ltx_font_mathcaligraphic">D</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula> comprises all lattice-point configurations in <inline-formula><mml:math id="inf786"><mml:mrow><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mi mathvariant="normal">…</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo stretchy="false">}</mml:mo></mml:mrow><mml:mo>×</mml:mo><mml:mi mathvariant="normal">…</mml:mi><mml:mo>×</mml:mo><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mi mathvariant="normal">…</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mi>M</mml:mi></mml:msub><mml:mo stretchy="false">}</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula> obtained by permutations of the indices along the <inline-formula><mml:math id="inf787"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mi mathvariant="bold-italic">c</mml:mi></mml:mrow></mml:mstyle></mml:math></inline-formula> dimensions:<disp-formula id="equ35"><label>(34)</label><mml:math id="m35"><mml:mrow><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mi>C</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi mathvariant="script">D</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mrow><mml:mo maxsize="1.2em" minsize="1.2em">{</mml:mo></mml:mrow><mml:msub><mml:mi>π</mml:mi><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>…</mml:mo><mml:msub><mml:mi>π</mml:mi><mml:mrow><mml:mi>M</mml:mi></mml:mrow></mml:msub><mml:mrow><mml:mi mathvariant="script">D</mml:mi></mml:mrow><mml:mspace width="thinmathspace"/><mml:mrow><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:mspace width="thinmathspace"/><mml:msub><mml:mi>π</mml:mi><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>∈</mml:mo><mml:msub><mml:mrow><mml:mi mathvariant="double-struck">S</mml:mi></mml:mrow><mml:mrow><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>π</mml:mi><mml:mrow><mml:mi>M</mml:mi></mml:mrow></mml:msub><mml:mo>∈</mml:mo><mml:msub><mml:mrow><mml:mi mathvariant="double-struck">S</mml:mi></mml:mrow><mml:mrow><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mi>M</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub><mml:mrow><mml:mo maxsize="1.2em" minsize="1.2em">}</mml:mo></mml:mrow><mml:mspace width="thinmathspace"/><mml:mo>,</mml:mo></mml:mstyle></mml:mrow></mml:math></disp-formula></p><p>where we define<disp-formula id="equ36"><label>(35)</label><mml:math id="m36"><mml:mrow><mml:mstyle displaystyle="true" scriptlevel="0"><mml:msub><mml:mi>π</mml:mi><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>…</mml:mo><mml:msub><mml:mi>π</mml:mi><mml:mrow><mml:mi>M</mml:mi></mml:mrow></mml:msub><mml:mrow><mml:mi mathvariant="script">D</mml:mi></mml:mrow><mml:mo>=</mml:mo><mml:mrow><mml:mo maxsize="1.2em" minsize="1.2em">{</mml:mo></mml:mrow><mml:mrow><mml:mo maxsize="1.2em" minsize="1.2em">(</mml:mo></mml:mrow><mml:msub><mml:mi>π</mml:mi><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>i</mml:mi><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>π</mml:mi><mml:mrow><mml:mi>M</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>i</mml:mi><mml:mrow><mml:mi>M</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mrow><mml:mo maxsize="1.2em" minsize="1.2em">)</mml:mo></mml:mrow><mml:mspace width="thinmathspace"/><mml:mrow><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:mspace width="thinmathspace"/><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>i</mml:mi><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>i</mml:mi><mml:mrow><mml:mi>M</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mo>∈</mml:mo><mml:mrow><mml:mi mathvariant="script">D</mml:mi></mml:mrow><mml:mrow><mml:mo maxsize="1.2em" minsize="1.2em">}</mml:mo></mml:mrow><mml:mspace width="thinmathspace"/><mml:mo>,</mml:mo></mml:mstyle></mml:mrow></mml:math></disp-formula></p><p>and where <inline-formula><mml:math id="inf788"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msub><mml:mrow><mml:mi mathvariant="double-struck">S</mml:mi></mml:mrow><mml:mrow><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mi>m</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub></mml:mrow></mml:mstyle></mml:math></inline-formula> denotes the set of permutation of <inline-formula><mml:math id="inf789"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mo fence="false" stretchy="false">{</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mi>m</mml:mi></mml:mrow></mml:msub><mml:mo fence="false" stretchy="false">}</mml:mo></mml:mrow></mml:mstyle></mml:math></inline-formula>. Let us denote a generic lattice-point configuration in <inline-formula><mml:math id="inf790"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mo fence="false" stretchy="false">{</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo fence="false" stretchy="false">}</mml:mo><mml:mo>×</mml:mo><mml:mo>…</mml:mo><mml:mo>×</mml:mo><mml:mo fence="false" stretchy="false">{</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mi>M</mml:mi></mml:mrow></mml:msub><mml:mo fence="false" stretchy="false">}</mml:mo></mml:mrow></mml:mstyle></mml:math></inline-formula> by <inline-formula><mml:math id="inf791"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mrow><mml:mi mathvariant="script">S</mml:mi></mml:mrow></mml:mrow></mml:mstyle></mml:math></inline-formula>. By permuting the indices of the points in <inline-formula><mml:math id="inf792"><mml:mi class="ltx_font_mathcaligraphic">S</mml:mi></mml:math></inline-formula>, each transformation <inline-formula><mml:math id="inf793"><mml:msub><mml:mi>π</mml:mi><mml:mi>m</mml:mi></mml:msub></mml:math></inline-formula> is actually permuting <inline-formula><mml:math id="inf794"><mml:mrow><mml:msub><mml:mi>R</mml:mi><mml:mrow><mml:mi>m</mml:mi><mml:mo>,</mml:mo><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi class="ltx_font_mathcaligraphic">S</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula>, <inline-formula><mml:math id="inf795"><mml:mrow><mml:mn>1</mml:mn><mml:mo>≤</mml:mo><mml:mi>i</mml:mi><mml:mo>≤</mml:mo><mml:mi>m</mml:mi></mml:mrow></mml:math></inline-formula>, the restrictions of the lattice-point configuration along the mth dimension. The partial order defined by inclusion is preserved by permutations in the sense that given <inline-formula><mml:math id="inf796"><mml:msub><mml:mi>π</mml:mi><mml:mi>m</mml:mi></mml:msub></mml:math></inline-formula> in <inline-formula><mml:math id="inf797"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msub><mml:mrow><mml:mi mathvariant="double-struck">S</mml:mi></mml:mrow><mml:mrow><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mi>m</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub></mml:mrow></mml:mstyle></mml:math></inline-formula>, <inline-formula><mml:math id="inf798"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mn>1</mml:mn><mml:mo>≤</mml:mo><mml:mi>m</mml:mi><mml:mo>≤</mml:mo><mml:mi>M</mml:mi></mml:mrow></mml:mstyle></mml:math></inline-formula>, we have <inline-formula><mml:math id="inf799"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msub><mml:mi>R</mml:mi><mml:mrow><mml:mi>m</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mi>π</mml:mi><mml:mrow><mml:mi>m</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:mi>i</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>π</mml:mi><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>…</mml:mo><mml:msub><mml:mi>π</mml:mi><mml:mrow><mml:mi>M</mml:mi></mml:mrow></mml:msub><mml:mrow><mml:mi mathvariant="script">S</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo><mml:mo>⊂</mml:mo><mml:msub><mml:mi>R</mml:mi><mml:mrow><mml:mi>m</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mi>π</mml:mi><mml:mrow><mml:mi>m</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:mi>j</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>π</mml:mi><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>…</mml:mo><mml:msub><mml:mi>π</mml:mi><mml:mrow><mml:mi>M</mml:mi></mml:mrow></mml:msub><mml:mrow><mml:mi mathvariant="script">S</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mstyle></mml:math></inline-formula> if and only if <inline-formula><mml:math id="inf800"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msub><mml:mi>R</mml:mi><mml:mrow><mml:mi>m</mml:mi><mml:mo>,</mml:mo><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi mathvariant="script">S</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo><mml:mo>⊂</mml:mo><mml:msub><mml:mi>R</mml:mi><mml:mrow><mml:mi>m</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi mathvariant="script">S</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mstyle></mml:math></inline-formula>. In particular, <italic>k</italic><sub><italic>m</italic></sub>, the number of restriction classes induced by the relation <inline-formula><mml:math id="inf801"><mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>∼</mml:mo><mml:mi>j</mml:mi></mml:mrow><mml:mo>⇔</mml:mo><mml:mrow><mml:mrow><mml:msub><mml:mi>R</mml:mi><mml:mrow><mml:mi>m</mml:mi><mml:mo>,</mml:mo><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mi class="ltx_font_mathcaligraphic">S</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:mrow><mml:mo>=</mml:mo><mml:mrow><mml:msub><mml:mi>R</mml:mi><mml:mrow><mml:mi>m</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mi class="ltx_font_mathcaligraphic">S</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula>, is invariant to permutations, and so are their cardinalities. These cardinalities specify the degeneracy indices <inline-formula><mml:math id="inf802"><mml:mrow><mml:msub><mml:mi>σ</mml:mi><mml:mrow><mml:mi>m</mml:mi><mml:mo>,</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:mi mathvariant="normal">…</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mi>σ</mml:mi><mml:mrow><mml:mi>m</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mi>k</mml:mi><mml:mi>m</mml:mi></mml:msub></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> of <inline-formula><mml:math id="inf803"><mml:mi class="ltx_font_mathcaligraphic">S</mml:mi></mml:math></inline-formula> along the mth dimension. Thus, all configurations <inline-formula><mml:math id="inf804"><mml:mi class="ltx_font_mathcaligraphic">S</mml:mi></mml:math></inline-formula> obtained via permutation of <inline-formula><mml:math id="inf805"><mml:mi class="ltx_font_mathcaligraphic">D</mml:mi></mml:math></inline-formula> have the same degeneracy indices as <inline-formula><mml:math id="inf806"><mml:mi class="ltx_font_mathcaligraphic">D</mml:mi></mml:math></inline-formula>. Moreover, for a Young diagram <inline-formula><mml:math id="inf807"><mml:mi class="ltx_font_mathcaligraphic">D</mml:mi></mml:math></inline-formula>, these degeneracy indices simply count the equivalence classes formed by restrictions of identical size along the same dimension. Thus, the number of dichotomies in <inline-formula><mml:math id="inf808"><mml:mrow><mml:mo stretchy="false">|</mml:mo><mml:mrow><mml:mi>C</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi class="ltx_font_mathcaligraphic">D</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow><mml:mo stretchy="false">|</mml:mo></mml:mrow></mml:math></inline-formula> is determined as the number of ways to independently assign the indices <inline-formula><mml:math id="inf809"><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mi mathvariant="normal">…</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mi>m</mml:mi></mml:msub><mml:mo stretchy="false">}</mml:mo></mml:mrow></mml:math></inline-formula> to <italic>k</italic><sub><italic>m</italic></sub> restriction classes of size <inline-formula><mml:math id="inf810"><mml:mrow><mml:msub><mml:mi>σ</mml:mi><mml:mrow><mml:mi>m</mml:mi><mml:mo>,</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:mi mathvariant="normal">…</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mi>σ</mml:mi><mml:mrow><mml:mi>m</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mi>k</mml:mi><mml:mi>m</mml:mi></mml:msub></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> for all <inline-formula><mml:math id="inf811"><mml:mi>m</mml:mi></mml:math></inline-formula>, <inline-formula><mml:math id="inf812"><mml:mrow><mml:mn>1</mml:mn><mml:mo>≤</mml:mo><mml:mi>m</mml:mi><mml:mo>≤</mml:mo><mml:mi>M</mml:mi></mml:mrow></mml:math></inline-formula>. For each <inline-formula><mml:math id="inf813"><mml:mi>m</mml:mi></mml:math></inline-formula>, this number is given by the multinomial coefficient: <inline-formula><mml:math id="inf814"><mml:mrow><mml:mrow><mml:msub><mml:mi>λ</mml:mi><mml:mi>m</mml:mi></mml:msub><mml:mo lspace="0pt" rspace="3.5pt">!</mml:mo></mml:mrow><mml:mo>/</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mrow><mml:msub><mml:mi>σ</mml:mi><mml:mrow><mml:mi>m</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mi>k</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:msub><mml:mo lspace="0pt" rspace="3.5pt">!</mml:mo></mml:mrow><mml:mi mathvariant="normal">…</mml:mi><mml:mrow><mml:msub><mml:mi>σ</mml:mi><mml:mrow><mml:mi>m</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mi>k</mml:mi><mml:mi>m</mml:mi></mml:msub></mml:mrow></mml:msub><mml:mo lspace="0pt" rspace="3.5pt">!</mml:mo></mml:mrow></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula>.</p><p>As opposed to the case of random configurations in general position, the many symmetries of the grid-like inputs in <inline-formula><mml:math id="inf815"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msub><mml:mrow><mml:mi mathvariant="script">C</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="bold-italic">λ</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mstyle></mml:math></inline-formula> allow one to enumerate dichotomies of specific cardinalities. We define the cardinality of a dichotomy by the size of the set of active pattern it separates. Thus, a perceptron <inline-formula><mml:math id="inf816"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="bold-italic">w</mml:mi><mml:mo>,</mml:mo><mml:mi>θ</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mstyle></mml:math></inline-formula> realizing a <inline-formula><mml:math id="inf817"><mml:mi>k</mml:mi></mml:math></inline-formula>-dichotomy is one for which exactly <inline-formula><mml:math id="inf818"><mml:mi>k</mml:mi></mml:math></inline-formula> patterns <inline-formula><mml:math id="inf819"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mi mathvariant="bold-italic">c</mml:mi></mml:mrow></mml:mstyle></mml:math></inline-formula> in <inline-formula><mml:math id="inf820"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msub><mml:mrow><mml:mi mathvariant="script">C</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="bold-italic">λ</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mstyle></mml:math></inline-formula> are such that <inline-formula><mml:math id="inf821"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msup><mml:mi mathvariant="bold-italic">w</mml:mi><mml:mrow><mml:mi>T</mml:mi></mml:mrow></mml:msup><mml:mi mathvariant="bold-italic">c</mml:mi><mml:mo>&gt;</mml:mo><mml:mi>θ</mml:mi></mml:mrow></mml:mstyle></mml:math></inline-formula>. Proposition 7 reduces the problem of counting realizable <inline-formula><mml:math id="inf822"><mml:mi>k</mml:mi></mml:math></inline-formula>-dichotomies to that of enumerating realizable Young diagrams <inline-formula><mml:math id="inf823"><mml:mi class="ltx_font_mathcaligraphic">D</mml:mi></mml:math></inline-formula> of size <inline-formula><mml:math id="inf824"><mml:mrow><mml:mrow><mml:mo stretchy="false">|</mml:mo><mml:mi class="ltx_font_mathcaligraphic">D</mml:mi><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:mi>k</mml:mi></mml:mrow></mml:math></inline-formula>. Such an enumeration depends on the number of modules <inline-formula><mml:math id="inf825"><mml:mi>M</mml:mi></mml:math></inline-formula>, which sets the dimensionality of the Young diagrams, as well as the periods <inline-formula><mml:math id="inf826"><mml:msub><mml:mi>λ</mml:mi><mml:mi>m</mml:mi></mml:msub></mml:math></inline-formula>, <inline-formula><mml:math id="inf827"><mml:mrow><mml:mn>1</mml:mn><mml:mo>≤</mml:mo><mml:mi>m</mml:mi><mml:mo>≤</mml:mo><mml:mi>M</mml:mi></mml:mrow></mml:math></inline-formula>. Unfortunately, even without considering the constraint of being a realizable Young diagram, there is no convenient way to enumerate Young diagrams of fixed size for general dimension <inline-formula><mml:math id="inf828"><mml:mi>M</mml:mi></mml:math></inline-formula>. However, for low cardinality, for example, <inline-formula><mml:math id="inf829"><mml:mrow><mml:mi>k</mml:mi><mml:mo>≤</mml:mo><mml:mn>5</mml:mn></mml:mrow></mml:math></inline-formula>, there are only a few Young diagrams such that <inline-formula><mml:math id="inf830"><mml:mrow><mml:mrow><mml:mo stretchy="false">|</mml:mo><mml:mi class="ltx_font_mathcaligraphic">D</mml:mi><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:mi>k</mml:mi></mml:mrow></mml:math></inline-formula>, and it turns out that all of them are realizable. In the following, and without aiming at exhaustivity, we exploit the latter fact to characterize the sets of <inline-formula><mml:math id="inf831"><mml:mi>k</mml:mi></mml:math></inline-formula>-dichotomies for <inline-formula><mml:math id="inf832"><mml:mrow><mml:mi>k</mml:mi><mml:mo>≤</mml:mo><mml:mn>5</mml:mn></mml:mrow></mml:math></inline-formula> and to compute their cardinalities.</p><p>There are <inline-formula><mml:math id="inf833"><mml:mi>M</mml:mi></mml:math></inline-formula> possible <inline-formula><mml:math id="inf834"><mml:mi>M</mml:mi></mml:math></inline-formula>-dimensional Young diagram of size 2, according to the dimension along which the two lattice points are positioned. The Young diagram extending along the mth dimension, <inline-formula><mml:math id="inf835"><mml:mrow><mml:mn>1</mml:mn><mml:mo>≤</mml:mo><mml:mi>m</mml:mi><mml:mo>≤</mml:mo><mml:mi>M</mml:mi></mml:mrow></mml:math></inline-formula>, has degeneracy indices <inline-formula><mml:math id="inf836"><mml:mrow><mml:msub><mml:mi>σ</mml:mi><mml:mrow><mml:mi>m</mml:mi><mml:mo>,</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mn>2</mml:mn></mml:mrow></mml:math></inline-formula> and <inline-formula><mml:math id="inf837"><mml:mrow><mml:msub><mml:mi>σ</mml:mi><mml:mrow><mml:mi>m</mml:mi><mml:mo>,</mml:mo><mml:mn>2</mml:mn></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:msub><mml:mi>λ</mml:mi><mml:mi>m</mml:mi></mml:msub><mml:mo>-</mml:mo><mml:mn>2</mml:mn></mml:mrow></mml:mrow></mml:math></inline-formula> or <inline-formula><mml:math id="inf838"><mml:mrow><mml:msub><mml:mi>σ</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mo>,</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:math></inline-formula> and <inline-formula><mml:math id="inf839"><mml:mrow><mml:msub><mml:mi>σ</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mo>,</mml:mo><mml:mn>2</mml:mn></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:msub><mml:mi>λ</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:mrow></mml:math></inline-formula> for <inline-formula><mml:math id="inf840"><mml:mrow><mml:mi>n</mml:mi><mml:mo>≠</mml:mo><mml:mi>m</mml:mi></mml:mrow></mml:math></inline-formula>. As a result, the number of 2-dichotomies of grid-like inputs is given by<disp-formula id="equ37"><label>(36)</label><mml:math id="m37"><mml:mrow><mml:mstyle displaystyle="true" scriptlevel="0"><mml:msub><mml:mrow><mml:mi mathvariant="script">N</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:munderover><mml:mo>∑</mml:mo><mml:mrow><mml:mi>m</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mi>M</mml:mi></mml:mrow></mml:munderover><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:munder><mml:mo>∏</mml:mo><mml:mrow><mml:mi>n</mml:mi><mml:mo>≠</mml:mo><mml:mi>m</mml:mi></mml:mrow></mml:munder><mml:mfrac><mml:mrow><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:msub><mml:mo>!</mml:mo></mml:mrow><mml:mrow><mml:mn>1</mml:mn><mml:mo>!</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:msub><mml:mo>−</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">)</mml:mo><mml:mo>!</mml:mo></mml:mrow></mml:mfrac></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mfrac><mml:mrow><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mi>m</mml:mi></mml:mrow></mml:msub><mml:mo>!</mml:mo></mml:mrow><mml:mrow><mml:mn>2</mml:mn><mml:mo>!</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mi>m</mml:mi></mml:mrow></mml:msub><mml:mo>−</mml:mo><mml:mn>2</mml:mn><mml:mo stretchy="false">)</mml:mo><mml:mo>!</mml:mo></mml:mrow></mml:mfrac><mml:mo>=</mml:mo><mml:mfrac><mml:mn>1</mml:mn><mml:mn>2</mml:mn></mml:mfrac><mml:munderover><mml:mo>∑</mml:mo><mml:mrow><mml:mi>m</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mi>M</mml:mi></mml:mrow></mml:munderover><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mi>m</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mi>m</mml:mi></mml:mrow></mml:msub><mml:mo>−</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">)</mml:mo><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:munder><mml:mo>∏</mml:mo><mml:mrow><mml:mi>n</mml:mi><mml:mo>≠</mml:mo><mml:mi>m</mml:mi></mml:mrow></mml:munder><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:msub></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mspace width="thinmathspace"/><mml:mo>.</mml:mo></mml:mstyle></mml:mrow></mml:math></disp-formula></p><p>There are two types of Young diagram of size 3, type <inline-formula><mml:math id="inf841"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mn>3</mml:mn><mml:mo>⁢</mml:mo><mml:mi>a</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> for which the three lattice points span one dimension and type <inline-formula><mml:math id="inf842"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mn>3</mml:mn><mml:mo>⁢</mml:mo><mml:mi>b</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> for which the lattice points span two dimensions. There are <inline-formula><mml:math id="inf843"><mml:mi>M</mml:mi></mml:math></inline-formula> possible M-dimensional Young diagram of type <inline-formula><mml:math id="inf844"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mn>3</mml:mn><mml:mo>⁢</mml:mo><mml:mi>a</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula>. The degeneracy indices for the Young diagram extending along the mth dimension, <inline-formula><mml:math id="inf845"><mml:mrow><mml:mn>1</mml:mn><mml:mo>≤</mml:mo><mml:mi>m</mml:mi><mml:mo>≤</mml:mo><mml:mi>M</mml:mi></mml:mrow></mml:math></inline-formula>, are <inline-formula><mml:math id="inf846"><mml:mrow><mml:msub><mml:mi>σ</mml:mi><mml:mrow><mml:mi>m</mml:mi><mml:mo>,</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mn>3</mml:mn></mml:mrow></mml:math></inline-formula> and <inline-formula><mml:math id="inf847"><mml:mrow><mml:msub><mml:mi>σ</mml:mi><mml:mrow><mml:mi>m</mml:mi><mml:mo>,</mml:mo><mml:mn>3</mml:mn></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:msub><mml:mi>λ</mml:mi><mml:mi>m</mml:mi></mml:msub><mml:mo>-</mml:mo><mml:mn>3</mml:mn></mml:mrow></mml:mrow></mml:math></inline-formula>, and <inline-formula><mml:math id="inf848"><mml:mrow><mml:msub><mml:mi>σ</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mo>,</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:math></inline-formula> and <inline-formula><mml:math id="inf849"><mml:mrow><mml:msub><mml:mi>σ</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mo>,</mml:mo><mml:mn>2</mml:mn></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:msub><mml:mi>λ</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:mrow></mml:math></inline-formula> for <inline-formula><mml:math id="inf850"><mml:mrow><mml:mi>n</mml:mi><mml:mo>≠</mml:mo><mml:mi>m</mml:mi></mml:mrow></mml:math></inline-formula>, yielding<disp-formula id="equ38"><label>(37)</label><mml:math id="m38"><mml:mrow><mml:mstyle displaystyle="true" scriptlevel="0"><mml:msub><mml:mrow><mml:mi mathvariant="script">N</mml:mi></mml:mrow><mml:mrow><mml:mn>3</mml:mn><mml:mi>a</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:munderover><mml:mo>∑</mml:mo><mml:mrow><mml:mi>m</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mi>M</mml:mi></mml:mrow></mml:munderover><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:munder><mml:mo>∏</mml:mo><mml:mrow><mml:mi>n</mml:mi><mml:mo>≠</mml:mo><mml:mi>m</mml:mi></mml:mrow></mml:munder><mml:mfrac><mml:mrow><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:msub><mml:mo>!</mml:mo></mml:mrow><mml:mrow><mml:mn>1</mml:mn><mml:mo>!</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:msub><mml:mo>−</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">)</mml:mo><mml:mo>!</mml:mo></mml:mrow></mml:mfrac></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mfrac><mml:mrow><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mi>m</mml:mi></mml:mrow></mml:msub><mml:mo>!</mml:mo></mml:mrow><mml:mrow><mml:mn>3</mml:mn><mml:mo>!</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mi>m</mml:mi></mml:mrow></mml:msub><mml:mo>−</mml:mo><mml:mn>3</mml:mn><mml:mo stretchy="false">)</mml:mo><mml:mo>!</mml:mo></mml:mrow></mml:mfrac><mml:mo>=</mml:mo><mml:mfrac><mml:mn>1</mml:mn><mml:mn>6</mml:mn></mml:mfrac><mml:munder><mml:mo>∑</mml:mo><mml:mrow><mml:mi>m</mml:mi></mml:mrow></mml:munder><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:munder><mml:mo>∏</mml:mo><mml:mrow><mml:mi>n</mml:mi><mml:mo>≠</mml:mo><mml:mi>m</mml:mi></mml:mrow></mml:munder><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:msub></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mi>m</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mi>m</mml:mi></mml:mrow></mml:msub><mml:mo>−</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">)</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mi>m</mml:mi></mml:mrow></mml:msub><mml:mo>−</mml:mo><mml:mn>2</mml:mn><mml:mo stretchy="false">)</mml:mo><mml:mspace width="thinmathspace"/><mml:mo>.</mml:mo></mml:mstyle></mml:mrow></mml:math></disp-formula></p><p>There are <inline-formula><mml:math id="inf851"><mml:mrow><mml:mrow><mml:mi>M</mml:mi><mml:mo>⁢</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi>M</mml:mi><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow><mml:mo>/</mml:mo><mml:mn>2</mml:mn></mml:mrow></mml:math></inline-formula> possible <inline-formula><mml:math id="inf852"><mml:mi>M</mml:mi></mml:math></inline-formula>-dimensional Young diagram of type <inline-formula><mml:math id="inf853"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mn>3</mml:mn><mml:mo>⁢</mml:mo><mml:mi>b</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula>, as many as choices of two dimensions among <inline-formula><mml:math id="inf854"><mml:mi>M</mml:mi></mml:math></inline-formula>. The degeneracy indices of the Young diagram extending along dimensions <inline-formula><mml:math id="inf855"><mml:mi>m</mml:mi></mml:math></inline-formula> and <inline-formula><mml:math id="inf856"><mml:mi>n</mml:mi></mml:math></inline-formula>, <inline-formula><mml:math id="inf857"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mn>1</mml:mn><mml:mo>≤</mml:mo><mml:mi>m</mml:mi><mml:mo>§lt;</mml:mo><mml:mi>n</mml:mi><mml:mo>≤</mml:mo><mml:mi>M</mml:mi></mml:mrow></mml:mstyle></mml:math></inline-formula>, are <inline-formula><mml:math id="inf858"><mml:mrow><mml:msub><mml:mi>σ</mml:mi><mml:mrow><mml:mi>m</mml:mi><mml:mo>,</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mi>σ</mml:mi><mml:mrow><mml:mi>m</mml:mi><mml:mo>,</mml:mo><mml:mn>2</mml:mn></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:math></inline-formula> and <inline-formula><mml:math id="inf859"><mml:mrow><mml:msub><mml:mi>σ</mml:mi><mml:mrow><mml:mi>m</mml:mi><mml:mo>,</mml:mo><mml:mn>3</mml:mn></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:msub><mml:mi>λ</mml:mi><mml:mi>m</mml:mi></mml:msub><mml:mo>-</mml:mo><mml:mn>2</mml:mn></mml:mrow></mml:mrow></mml:math></inline-formula>, <inline-formula><mml:math id="inf860"><mml:mrow><mml:msub><mml:mi>σ</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mo>,</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mi>σ</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mo>,</mml:mo><mml:mn>2</mml:mn></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:math></inline-formula> and <inline-formula><mml:math id="inf861"><mml:mrow><mml:msub><mml:mi>σ</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mo>,</mml:mo><mml:mn>3</mml:mn></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:msub><mml:mi>λ</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mo>-</mml:mo><mml:mn>2</mml:mn></mml:mrow></mml:mrow></mml:math></inline-formula>, and <inline-formula><mml:math id="inf862"><mml:mrow><mml:msub><mml:mi>σ</mml:mi><mml:mrow><mml:mi>k</mml:mi><mml:mo>,</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:math></inline-formula> and <inline-formula><mml:math id="inf863"><mml:mrow><mml:msub><mml:mi>σ</mml:mi><mml:mrow><mml:mi>k</mml:mi><mml:mo>,</mml:mo><mml:mn>2</mml:mn></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:msub><mml:mi>λ</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:mrow></mml:math></inline-formula> for <inline-formula><mml:math id="inf864"><mml:mrow><mml:mi>k</mml:mi><mml:mo>≠</mml:mo><mml:mrow><mml:mi>m</mml:mi><mml:mo>,</mml:mo><mml:mi>n</mml:mi></mml:mrow></mml:mrow></mml:math></inline-formula>, yielding<disp-formula id="equ39"><label>(38)</label><mml:math id="m39"><mml:mrow><mml:mstyle displaystyle="true" scriptlevel="0"><mml:msub><mml:mrow><mml:mi mathvariant="script">N</mml:mi></mml:mrow><mml:mrow><mml:mn>3</mml:mn><mml:mi>b</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:munder><mml:mo>∑</mml:mo><mml:mrow><mml:mn>1</mml:mn><mml:mo>≤</mml:mo><mml:mi>m</mml:mi><mml:mo>§lt;</mml:mo><mml:mi>n</mml:mi><mml:mo>≤</mml:mo><mml:mi>M</mml:mi></mml:mrow></mml:munder><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:munder><mml:mo>∏</mml:mo><mml:mrow><mml:mi>k</mml:mi><mml:mo>≠</mml:mo><mml:mi>m</mml:mi><mml:mo>,</mml:mo><mml:mi>n</mml:mi></mml:mrow></mml:munder><mml:mfrac><mml:mrow><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mi>k</mml:mi></mml:mrow></mml:msub><mml:mo>!</mml:mo></mml:mrow><mml:mrow><mml:mn>1</mml:mn><mml:mo>!</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mi>k</mml:mi></mml:mrow></mml:msub><mml:mo>−</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">)</mml:mo><mml:mo>!</mml:mo></mml:mrow></mml:mfrac></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mfrac><mml:mrow><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mi>m</mml:mi></mml:mrow></mml:msub><mml:mo>!</mml:mo></mml:mrow><mml:mrow><mml:mn>1</mml:mn><mml:mo>!</mml:mo><mml:mn>1</mml:mn><mml:mo>!</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mi>m</mml:mi></mml:mrow></mml:msub><mml:mo>−</mml:mo><mml:mn>2</mml:mn><mml:mo stretchy="false">)</mml:mo><mml:mo>!</mml:mo></mml:mrow></mml:mfrac><mml:mfrac><mml:mrow><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:msub><mml:mo>!</mml:mo></mml:mrow><mml:mrow><mml:mn>1</mml:mn><mml:mo>!</mml:mo><mml:mn>1</mml:mn><mml:mo>!</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:msub><mml:mo>−</mml:mo><mml:mn>2</mml:mn><mml:mo stretchy="false">)</mml:mo><mml:mo>!</mml:mo></mml:mrow></mml:mfrac></mml:mstyle></mml:mrow></mml:math></disp-formula><disp-formula id="equ40"><label>(39)</label><mml:math id="m40"><mml:mo>=</mml:mo><mml:mrow><mml:mrow><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mfrac><mml:mn>1</mml:mn><mml:mn>2</mml:mn></mml:mfrac></mml:mstyle><mml:mo>⁢</mml:mo><mml:mrow><mml:mstyle displaystyle="true" scriptlevel="0"><mml:munder><mml:mo largeop="true" movablelimits="false" symmetric="true">∑</mml:mo><mml:mrow><mml:mi>n</mml:mi><mml:mo>≠</mml:mo><mml:mi>m</mml:mi></mml:mrow></mml:munder></mml:mstyle><mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mstyle displaystyle="true" scriptlevel="0"><mml:munder><mml:mo largeop="true" movablelimits="false" symmetric="true">∏</mml:mo><mml:mrow><mml:mi>k</mml:mi><mml:mo>≠</mml:mo><mml:mrow><mml:mi>m</mml:mi><mml:mo>,</mml:mo><mml:mi>n</mml:mi></mml:mrow></mml:mrow></mml:munder></mml:mstyle><mml:msub><mml:mi>λ</mml:mi><mml:mi>k</mml:mi></mml:msub></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>⁢</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mi>m</mml:mi></mml:msub><mml:mo>⁢</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:msub><mml:mi>λ</mml:mi><mml:mi>m</mml:mi></mml:msub><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>⁢</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mo>⁢</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:msub><mml:mi>λ</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mo rspace="4.2pt" stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:mrow><mml:mo>.</mml:mo></mml:mrow></mml:math></disp-formula></p><p>As a result, the number of 3-dichotomies of grid-like inputs is given by<disp-formula id="equ41"><label>(40)</label><mml:math id="m41"><mml:mrow><mml:mstyle displaystyle="true" scriptlevel="0"><mml:msub><mml:mrow><mml:mi mathvariant="script">N</mml:mi></mml:mrow><mml:mrow><mml:mn>3</mml:mn></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:msubsup><mml:mrow><mml:mi mathvariant="script">N</mml:mi></mml:mrow><mml:mrow><mml:mn>3</mml:mn></mml:mrow><mml:mrow><mml:mi>a</mml:mi></mml:mrow></mml:msubsup><mml:mo>+</mml:mo><mml:msubsup><mml:mrow><mml:mi mathvariant="script">N</mml:mi></mml:mrow><mml:mrow><mml:mn>3</mml:mn></mml:mrow><mml:mrow><mml:mi>b</mml:mi></mml:mrow></mml:msubsup><mml:mo>=</mml:mo><mml:mfrac><mml:mn>1</mml:mn><mml:mn>2</mml:mn></mml:mfrac><mml:munder><mml:mo>∏</mml:mo><mml:mrow><mml:mi>m</mml:mi></mml:mrow></mml:munder><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mi>m</mml:mi></mml:mrow></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:munder><mml:mo>∑</mml:mo><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:munder><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:msub><mml:mo>−</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">)</mml:mo><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mfrac><mml:mrow><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:msub><mml:mo>−</mml:mo><mml:mn>2</mml:mn></mml:mrow><mml:mn>3</mml:mn></mml:mfrac><mml:mo>+</mml:mo><mml:munder><mml:mo>∑</mml:mo><mml:mrow><mml:mi>k</mml:mi><mml:mo>≠</mml:mo><mml:mi>n</mml:mi></mml:mrow></mml:munder><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mi>k</mml:mi></mml:mrow></mml:msub><mml:mo>−</mml:mo><mml:mi>n</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mspace width="thinmathspace"/><mml:mo>.</mml:mo></mml:mstyle></mml:mrow></mml:math></disp-formula></p><fig id="app2fig1" position="float"><label>Appendix 2—figure 1.</label><caption><title>Multidimensional Young diagrams.</title><p>a. Lattice representations of the 2-dimensional Young diagrams of size 4, depicting the integer partitions of 4. b. Lattice representation of a 3-dimensional Young diagram with two 2-dimensional Young diagrams defined as horizontal restrictions.</p></caption><graphic mime-subtype="tiff" mimetype="image" xlink:href="elife-62702-app2-fig1-v3.tif"/></fig><fig id="app2fig2" position="float"><label>Appendix 2—figure 2.</label><caption><title>Linearly separable 4-dichotomies.</title><p>Top: there are four possible Young diagrams a, b, c, and d, of size 4, spanning at most three dimensions. Lattice points lying along the mth dimension represent grid-like inputs in <inline-formula><mml:math id="inf865"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msub><mml:mrow><mml:mi mathvariant="script">C</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="bold-italic">λ</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mstyle></mml:math></inline-formula> whose coordinates only differ in the mth module. Bottom: Graphical edge structure arising from embedding a Young diagram within <inline-formula><mml:math id="inf866"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mi>H</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mrow><mml:mi mathvariant="script">C</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="bold-italic">λ</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mstyle></mml:math></inline-formula>, the convex polytope defined by grid-like inputs.</p></caption><graphic mime-subtype="tiff" mimetype="image" xlink:href="elife-62702-app2-fig2-v3.tif"/></fig><p>A similar analysis reveals that there are four types of Young diagrams of size 4, which span up to three dimensions if <inline-formula><mml:math id="inf867"><mml:mrow><mml:mi>M</mml:mi><mml:mo>≤</mml:mo><mml:mn>3</mml:mn></mml:mrow></mml:math></inline-formula>. These Young diagrams, denoted by <inline-formula><mml:math id="inf868"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mn>4</mml:mn><mml:mi>a</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula>, <inline-formula><mml:math id="inf869"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mn>4</mml:mn><mml:mi>b</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula>, <inline-formula><mml:math id="inf870"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mn>4</mml:mn><mml:mi>c</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula>, and <inline-formula><mml:math id="inf871"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mn>4</mml:mn><mml:mi>d</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula>, are represented in <xref ref-type="fig" rid="fig6">Figure 6</xref>, where degeneracy indices can be read graphically. As a result, the number of 4-dichotomies of grid-like inputs is given by <inline-formula><mml:math id="inf872"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msub><mml:mrow><mml:mi mathvariant="script">N</mml:mi></mml:mrow><mml:mrow><mml:mn>4</mml:mn></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:msubsup><mml:mrow><mml:mi mathvariant="script">N</mml:mi></mml:mrow><mml:mrow><mml:mn>4</mml:mn></mml:mrow><mml:mrow><mml:mi>a</mml:mi></mml:mrow></mml:msubsup><mml:mo>+</mml:mo><mml:msubsup><mml:mrow><mml:mi mathvariant="script">N</mml:mi></mml:mrow><mml:mrow><mml:mn>4</mml:mn></mml:mrow><mml:mrow><mml:mi>b</mml:mi></mml:mrow></mml:msubsup><mml:mo>+</mml:mo><mml:msubsup><mml:mrow><mml:mi mathvariant="script">N</mml:mi></mml:mrow><mml:mrow><mml:mn>4</mml:mn></mml:mrow><mml:mrow><mml:mi>c</mml:mi></mml:mrow></mml:msubsup><mml:mo>+</mml:mo><mml:msubsup><mml:mrow><mml:mi mathvariant="script">N</mml:mi></mml:mrow><mml:mrow><mml:mn>4</mml:mn></mml:mrow><mml:mrow><mml:mi>d</mml:mi></mml:mrow></mml:msubsup></mml:mrow></mml:mstyle></mml:math></inline-formula> where the number of type-specific dichotomies is given by<disp-formula id="equ42"><label>(41)</label><mml:math id="m42"><mml:mrow><mml:mstyle displaystyle="true" scriptlevel="0"><mml:msub><mml:mrow><mml:mi mathvariant="script">N</mml:mi></mml:mrow><mml:mrow><mml:mn>4</mml:mn><mml:mi>a</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mfrac><mml:mn>1</mml:mn><mml:mn>24</mml:mn></mml:mfrac><mml:munderover><mml:mo>∑</mml:mo><mml:mrow><mml:mi>m</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mi>M</mml:mi></mml:mrow></mml:munderover><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:munder><mml:mo>∏</mml:mo><mml:mrow><mml:mi>n</mml:mi><mml:mo>≠</mml:mo><mml:mi>m</mml:mi></mml:mrow></mml:munder><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:msub></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mi>m</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mi>m</mml:mi></mml:mrow></mml:msub><mml:mo>−</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">)</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mi>m</mml:mi></mml:mrow></mml:msub><mml:mo>−</mml:mo><mml:mn>2</mml:mn><mml:mo stretchy="false">)</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mi>m</mml:mi></mml:mrow></mml:msub><mml:mo>−</mml:mo><mml:mn>3</mml:mn><mml:mo stretchy="false">)</mml:mo><mml:mspace width="thinmathspace"/><mml:mo>,</mml:mo></mml:mstyle></mml:mrow></mml:math></disp-formula><disp-formula id="equ43"><label>(42)</label><mml:math id="m43"><mml:mrow><mml:mstyle displaystyle="true" scriptlevel="0"><mml:msub><mml:mrow><mml:mi mathvariant="script">N</mml:mi></mml:mrow><mml:mrow><mml:mn>4</mml:mn><mml:mi>b</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mfrac><mml:mn>1</mml:mn><mml:mn>2</mml:mn></mml:mfrac><mml:munder><mml:mo>∑</mml:mo><mml:mrow><mml:mn>1</mml:mn><mml:mo>≤</mml:mo><mml:mi>m</mml:mi><mml:mo>≤</mml:mo><mml:mi>M</mml:mi></mml:mrow></mml:munder><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:munder><mml:mo>∏</mml:mo><mml:mrow><mml:mi>k</mml:mi><mml:mo>≠</mml:mo><mml:mi>m</mml:mi><mml:mo>,</mml:mo><mml:mi>n</mml:mi></mml:mrow></mml:munder><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mi>k</mml:mi></mml:mrow></mml:msub></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mi>m</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mi>m</mml:mi></mml:mrow></mml:msub><mml:mo>−</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">)</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mi>m</mml:mi></mml:mrow></mml:msub><mml:mo>−</mml:mo><mml:mn>2</mml:mn><mml:mo stretchy="false">)</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:msub><mml:mo>−</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">)</mml:mo><mml:mspace width="thinmathspace"/><mml:mo>,</mml:mo></mml:mstyle></mml:mrow></mml:math></disp-formula><disp-formula id="equ44"><label>(43)</label><mml:math id="m44"><mml:mrow><mml:mstyle displaystyle="true" scriptlevel="0"><mml:msub><mml:mrow><mml:mi mathvariant="script">N</mml:mi></mml:mrow><mml:mrow><mml:mn>4</mml:mn><mml:mi>c</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mfrac><mml:mn>1</mml:mn><mml:mn>4</mml:mn></mml:mfrac><mml:munder><mml:mo>∑</mml:mo><mml:mrow><mml:mn>1</mml:mn><mml:mo>≤</mml:mo><mml:mi>m</mml:mi><mml:mo>≤</mml:mo><mml:mi>M</mml:mi></mml:mrow></mml:munder><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:munder><mml:mo>∏</mml:mo><mml:mrow><mml:mi>k</mml:mi><mml:mo>≠</mml:mo><mml:mi>m</mml:mi><mml:mo>,</mml:mo><mml:mi>n</mml:mi></mml:mrow></mml:munder><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mi>k</mml:mi></mml:mrow></mml:msub></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mi>m</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mi>m</mml:mi></mml:mrow></mml:msub><mml:mo>−</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">)</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:msub><mml:mo>−</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">)</mml:mo><mml:mspace width="thinmathspace"/><mml:mo>,</mml:mo></mml:mstyle></mml:mrow></mml:math></disp-formula><disp-formula id="equ45"><label>(44)</label><mml:math id="m45"><mml:mrow><mml:mstyle displaystyle="true" scriptlevel="0"><mml:msub><mml:mrow><mml:mi mathvariant="script">N</mml:mi></mml:mrow><mml:mrow><mml:mn>4</mml:mn><mml:mi>d</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:munder><mml:mo>∑</mml:mo><mml:mrow><mml:mn>1</mml:mn><mml:mo>≤</mml:mo><mml:mi>m</mml:mi><mml:mo>≤</mml:mo><mml:mi>M</mml:mi></mml:mrow></mml:munder><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:munder><mml:mo>∏</mml:mo><mml:mrow><mml:mi>l</mml:mi><mml:mo>≠</mml:mo><mml:mi>m</mml:mi><mml:mo>,</mml:mo><mml:mi>n</mml:mi><mml:mo>,</mml:mo><mml:mi>k</mml:mi></mml:mrow></mml:munder><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mi>l</mml:mi></mml:mrow></mml:msub></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mi>m</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mi>m</mml:mi></mml:mrow></mml:msub><mml:mo>−</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">)</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:msub><mml:mo>−</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">)</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mi>k</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mi>k</mml:mi></mml:mrow></mml:msub><mml:mo>−</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">)</mml:mo><mml:mspace width="thinmathspace"/><mml:mo>.</mml:mo></mml:mstyle></mml:mrow></mml:math></disp-formula></p><p>The classification of dichotomies via Young diagrams also illuminates the geometrical structure of linearly separable <inline-formula><mml:math id="inf873"><mml:mi>k</mml:mi></mml:math></inline-formula>-dichotomies, at least for small <inline-formula><mml:math id="inf874"><mml:mi>k</mml:mi></mml:math></inline-formula>. In particular, 2-dichotomies are linearly separable if they involve two lattice points forming an edge of the convex polytope, that is, if these points correspond to patterns in <inline-formula><mml:math id="inf875"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msub><mml:mrow><mml:mi mathvariant="script">C</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="bold-italic">λ</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mstyle></mml:math></inline-formula> whose coordinates only differ in one module. Similarly, 3-dichotomies are linearly separable if and only if <inline-formula><mml:math id="inf876"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mn>3</mml:mn><mml:mo>⁢</mml:mo><mml:mi>a</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> they involve three lattice points representing patterns in <inline-formula><mml:math id="inf877"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msub><mml:mrow><mml:mi mathvariant="script">C</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="bold-italic">λ</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mstyle></mml:math></inline-formula> whose coordinates only differ in one module or <inline-formula><mml:math id="inf878"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mn>3</mml:mn><mml:mo>⁢</mml:mo><mml:mi>b</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> they involve two pairs of lattice points representing patterns in <inline-formula><mml:math id="inf879"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msub><mml:mrow><mml:mi mathvariant="script">C</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="bold-italic">λ</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mstyle></mml:math></inline-formula> whose coordinates only differ in one module. Thus, <inline-formula><mml:math id="inf880"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mn>3</mml:mn><mml:mo>⁢</mml:mo><mml:mi>a</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> corresponds to the case of three lattice points specifying a clique of convex-polytope edges, while <inline-formula><mml:math id="inf881"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mn>3</mml:mn><mml:mo>⁢</mml:mo><mml:mi>b</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> corresponds to the case of three lattice points specifying two convex-polytope edges. We illustrate the four geometrical structures of the linearly separable 4-dichotomies in <xref ref-type="fig" rid="fig6">Figure 6</xref>.</p></sec><sec id="s22" sec-type="appendix"><title>Numbers of dichotomies for two modules</title><p>For two modules of period <inline-formula><mml:math id="inf882"><mml:msub><mml:mi>λ</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:math></inline-formula> and <inline-formula><mml:math id="inf883"><mml:msub><mml:mi>λ</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:math></inline-formula>, recall that each grid pattern in <inline-formula><mml:math id="inf884"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msub><mml:mrow><mml:mi mathvariant="script">C</mml:mi></mml:mrow><mml:mrow><mml:mi>λ</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mstyle></mml:math></inline-formula> is a <inline-formula><mml:math id="inf885"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mstyle></mml:math></inline-formula>-dimensional vector, which is entirely specified by the indices of its two active neurons: <inline-formula><mml:math id="inf886"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula>, <inline-formula><mml:math id="inf887"><mml:mrow><mml:mn>1</mml:mn><mml:mo>≤</mml:mo><mml:mi>i</mml:mi><mml:mo>≤</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula>, <inline-formula><mml:math id="inf888"><mml:mrow><mml:mn>1</mml:mn><mml:mo>≤</mml:mo><mml:mi>j</mml:mi><mml:mo>≤</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula>. Thus, it is convenient to consider a set of grid patterns as a collection of points in the discrete lattice <inline-formula><mml:math id="inf889"><mml:mrow><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mi mathvariant="normal">…</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo stretchy="false">}</mml:mo></mml:mrow><mml:mo>×</mml:mo><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mi mathvariant="normal">…</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mo stretchy="false">}</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula>. From Proposition 4, we know that linearly separable dichotomies are made of those sets of grid patterns <inline-formula><mml:math id="inf890"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msub><mml:mrow><mml:mi mathvariant="script">C</mml:mi></mml:mrow><mml:mrow><mml:mi>λ</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mstyle></mml:math></inline-formula> for which a Young diagram can be formed via permutations of rows and columns in the lattice (see <xref ref-type="fig" rid="fig7">Figure 7</xref>). By convention, we consider that the marked lattice points forming a Young diagram define the set of active grid patterns. The remaining unmarked lattice points define the set of inactive grid patterns. To each 2D Young diagrams in the lattice <inline-formula><mml:math id="inf891"><mml:mrow><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mi mathvariant="normal">…</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo stretchy="false">}</mml:mo></mml:mrow><mml:mo>×</mml:mo><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mi mathvariant="normal">…</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mo stretchy="false">}</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula> corresponds a class of linearly separable dichotomies. Counting the total number of linearly separable dichotomies when <inline-formula><mml:math id="inf892"><mml:mrow><mml:mi>M</mml:mi><mml:mo>=</mml:mo><mml:mn>2</mml:mn></mml:mrow></mml:math></inline-formula> will proceed in two steps: (i) we first give a slightly stronger result than Proposition about the cardinality of the classes of dichotomies associated to a Young diagram, and (ii) we evaluate the total number of dichotomies by summing class cardinalities over the set of Young diagrams.</p></sec><sec id="s23" sec-type="appendix"><title>Proposition 7</title><p>For two integer periods <inline-formula><mml:math id="inf893"><mml:msub><mml:mi>λ</mml:mi><mml:mn mathvariant="normal">1</mml:mn></mml:msub></mml:math></inline-formula> and <inline-formula><mml:math id="inf894"><mml:msub><mml:mi>λ</mml:mi><mml:mn mathvariant="normal">2</mml:mn></mml:msub></mml:math></inline-formula>, let us consider a Young diagram <inline-formula><mml:math id="inf895"><mml:mi class="ltx_font_mathcaligraphic" mathvariant="normal">D</mml:mi></mml:math></inline-formula> in the lattice <inline-formula><mml:math id="inf896"><mml:mrow><mml:mrow><mml:mo mathvariant="normal" stretchy="false">{</mml:mo><mml:mn mathvariant="normal">1</mml:mn><mml:mo mathvariant="normal">,</mml:mo><mml:mi mathvariant="normal">…</mml:mi><mml:mo mathvariant="normal">,</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mn mathvariant="normal">1</mml:mn></mml:msub><mml:mo mathvariant="normal" stretchy="false">}</mml:mo></mml:mrow><mml:mo mathvariant="normal">×</mml:mo><mml:mrow><mml:mo mathvariant="normal" stretchy="false">{</mml:mo><mml:mn mathvariant="normal">1</mml:mn><mml:mo mathvariant="normal">,</mml:mo><mml:mi mathvariant="normal">…</mml:mi><mml:mo mathvariant="normal">,</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mn mathvariant="normal">2</mml:mn></mml:msub><mml:mo mathvariant="normal" stretchy="false">}</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula>. Without loss of generality, <inline-formula><mml:math id="inf897"><mml:mi class="ltx_font_mathcaligraphic" mathvariant="normal">D</mml:mi></mml:math></inline-formula> can be specified via the degeneracy indices <inline-formula><mml:math id="inf898"><mml:mrow><mml:msub><mml:mi>σ</mml:mi><mml:mrow><mml:mn mathvariant="normal">1</mml:mn><mml:mo mathvariant="normal">,</mml:mo><mml:mn mathvariant="normal">1</mml:mn></mml:mrow></mml:msub><mml:mo mathvariant="normal">,</mml:mo><mml:mrow><mml:mi mathvariant="normal">…</mml:mi><mml:mo mathvariant="italic">⁢</mml:mo><mml:msub><mml:mi>σ</mml:mi><mml:mrow><mml:mn mathvariant="normal">1</mml:mn><mml:mo mathvariant="normal">,</mml:mo><mml:mi>k</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>, and <inline-formula><mml:math id="inf899"><mml:mrow><mml:msub><mml:mi>σ</mml:mi><mml:mrow><mml:mn mathvariant="normal">2</mml:mn><mml:mo mathvariant="normal">,</mml:mo><mml:mn mathvariant="normal">1</mml:mn></mml:mrow></mml:msub><mml:mo mathvariant="normal">,</mml:mo><mml:mrow><mml:mi mathvariant="normal">…</mml:mi><mml:mo mathvariant="italic">⁢</mml:mo><mml:msub><mml:mi>σ</mml:mi><mml:mrow><mml:mn mathvariant="normal">2</mml:mn><mml:mo mathvariant="normal">,</mml:mo><mml:mi>k</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>, chosen such that<disp-formula id="equ46"><label>(45)</label><mml:math id="m46"><mml:mrow><mml:mrow><mml:mi mathvariant="script">D</mml:mi></mml:mrow><mml:mtext> </mml:mtext><mml:mi mathvariant="normal">h</mml:mi><mml:mi mathvariant="normal">a</mml:mi><mml:mi mathvariant="normal">s</mml:mi><mml:mtext> </mml:mtext><mml:msub><mml:mi>σ</mml:mi><mml:mrow><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mi mathvariant="normal">i</mml:mi></mml:mrow></mml:msub><mml:mtext> </mml:mtext><mml:mi mathvariant="normal">r</mml:mi><mml:mi mathvariant="normal">o</mml:mi><mml:mi mathvariant="normal">w</mml:mi><mml:mi mathvariant="normal">s</mml:mi><mml:mtext> </mml:mtext><mml:mi mathvariant="normal">o</mml:mi><mml:mi mathvariant="normal">f</mml:mi><mml:mtext> </mml:mtext><mml:mi mathvariant="normal">l</mml:mi><mml:mi mathvariant="normal">e</mml:mi><mml:mi mathvariant="normal">n</mml:mi><mml:mi mathvariant="normal">g</mml:mi><mml:mi mathvariant="normal">t</mml:mi><mml:mi mathvariant="normal">h</mml:mi><mml:munderover><mml:mo>∑</mml:mo><mml:mrow><mml:mi mathvariant="normal">j</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mi mathvariant="normal">k</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn><mml:mo>−</mml:mo><mml:mi mathvariant="normal">i</mml:mi></mml:mrow></mml:munderover><mml:msub><mml:mi>σ</mml:mi><mml:mrow><mml:mn>2</mml:mn><mml:mo>,</mml:mo><mml:mi mathvariant="normal">j</mml:mi></mml:mrow></mml:msub><mml:mspace width="1em"/><mml:mo stretchy="false">⟺</mml:mo><mml:mspace width="1em"/><mml:mtext> </mml:mtext><mml:mrow><mml:mi mathvariant="script">D</mml:mi></mml:mrow><mml:mtext> </mml:mtext><mml:mi mathvariant="normal">h</mml:mi><mml:mi mathvariant="normal">a</mml:mi><mml:mi mathvariant="normal">s</mml:mi><mml:mtext> </mml:mtext><mml:msub><mml:mi>σ</mml:mi><mml:mrow><mml:mn>2</mml:mn><mml:mo>,</mml:mo><mml:mi mathvariant="normal">j</mml:mi></mml:mrow></mml:msub><mml:mtext> </mml:mtext><mml:mi mathvariant="normal">c</mml:mi><mml:mi mathvariant="normal">o</mml:mi><mml:mi mathvariant="normal">l</mml:mi><mml:mi mathvariant="normal">u</mml:mi><mml:mi mathvariant="normal">m</mml:mi><mml:mi mathvariant="normal">n</mml:mi><mml:mi mathvariant="normal">s</mml:mi><mml:mtext> </mml:mtext><mml:mi mathvariant="normal">o</mml:mi><mml:mi mathvariant="normal">f</mml:mi><mml:mtext> </mml:mtext><mml:mi mathvariant="normal">l</mml:mi><mml:mi mathvariant="normal">e</mml:mi><mml:mi mathvariant="normal">n</mml:mi><mml:mi mathvariant="normal">g</mml:mi><mml:mi mathvariant="normal">t</mml:mi><mml:mi mathvariant="normal">h</mml:mi><mml:munderover><mml:mo>∑</mml:mo><mml:mrow><mml:mi mathvariant="normal">i</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mi mathvariant="normal">k</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn><mml:mo>−</mml:mo><mml:mi mathvariant="normal">i</mml:mi></mml:mrow></mml:munderover><mml:msub><mml:mi>σ</mml:mi><mml:mrow><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mi mathvariant="normal">i</mml:mi></mml:mrow></mml:msub><mml:mo>.</mml:mo></mml:mrow></mml:math></disp-formula></p><p>Then, the class of linearly separable dichotomies with Young diagram <inline-formula><mml:math id="inf900"><mml:mi class="ltx_font_mathcaligraphic" mathvariant="normal">D</mml:mi></mml:math></inline-formula>, denoted by <inline-formula><mml:math id="inf901"><mml:mrow><mml:mi>C</mml:mi><mml:mo mathvariant="italic">⁢</mml:mo><mml:mrow><mml:mo mathvariant="normal" stretchy="false">(</mml:mo><mml:mi class="ltx_font_mathcaligraphic" mathvariant="normal">D</mml:mi><mml:mo mathvariant="normal" stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula>, has cardinality<disp-formula id="equ47"><label>(46)</label><mml:math id="m47"><mml:mrow><mml:mrow><mml:mrow><mml:mo stretchy="false">|</mml:mo><mml:mrow><mml:mi>C</mml:mi><mml:mo>⁢</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi class="ltx_font_mathcaligraphic">D</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:mrow><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mfrac><mml:mrow><mml:msub><mml:mi>λ</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo lspace="0pt" rspace="3.5pt">!</mml:mo></mml:mrow><mml:mrow><mml:mrow><mml:msub><mml:mi>σ</mml:mi><mml:mrow><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo lspace="0pt" rspace="3.5pt">!</mml:mo></mml:mrow><mml:mo>⁢</mml:mo><mml:mi mathvariant="normal">…</mml:mi><mml:mo>⁢</mml:mo><mml:mrow><mml:msub><mml:mi>σ</mml:mi><mml:mrow><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mrow><mml:mi>k</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:mrow></mml:msub><mml:mo lspace="0pt" rspace="3.5pt">!</mml:mo></mml:mrow></mml:mrow></mml:mfrac></mml:mstyle><mml:mo>⁢</mml:mo><mml:mpadded width="+1.7pt"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mfrac><mml:mrow><mml:msub><mml:mi>λ</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mo lspace="0pt" rspace="3.5pt">!</mml:mo></mml:mrow><mml:mrow><mml:mrow><mml:msub><mml:mi>σ</mml:mi><mml:mrow><mml:mn>2</mml:mn><mml:mo>,</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo lspace="0pt" rspace="3.5pt">!</mml:mo></mml:mrow><mml:mo>⁢</mml:mo><mml:mi mathvariant="normal">…</mml:mi><mml:mo>⁢</mml:mo><mml:mrow><mml:msub><mml:mi>σ</mml:mi><mml:mrow><mml:mn>2</mml:mn><mml:mo>,</mml:mo><mml:mrow><mml:mi>k</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:mrow></mml:msub><mml:mo lspace="0pt" rspace="3.5pt">!</mml:mo></mml:mrow></mml:mrow></mml:mfrac></mml:mstyle></mml:mpadded></mml:mrow></mml:mrow><mml:mo>,</mml:mo></mml:mrow></mml:math></disp-formula></p><p>where we have <inline-formula><mml:math id="inf902"><mml:mrow><mml:mrow><mml:msub><mml:mi>σ</mml:mi><mml:mrow><mml:mn mathvariant="normal">1</mml:mn><mml:mo mathvariant="normal">,</mml:mo><mml:mn mathvariant="normal">1</mml:mn></mml:mrow></mml:msub><mml:mo mathvariant="normal">+</mml:mo><mml:mi mathvariant="normal">…</mml:mi><mml:mo mathvariant="normal">+</mml:mo><mml:msub><mml:mi>σ</mml:mi><mml:mrow><mml:mn mathvariant="normal">1</mml:mn><mml:mo mathvariant="normal">,</mml:mo><mml:mrow><mml:mi>k</mml:mi><mml:mo mathvariant="normal">+</mml:mo><mml:mn mathvariant="normal">1</mml:mn></mml:mrow></mml:mrow></mml:msub></mml:mrow><mml:mo mathvariant="normal">=</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mn mathvariant="normal">1</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> and <inline-formula><mml:math id="inf903"><mml:mrow><mml:mrow><mml:msub><mml:mi>σ</mml:mi><mml:mrow><mml:mn mathvariant="normal">2</mml:mn><mml:mo mathvariant="normal">,</mml:mo><mml:mn mathvariant="normal">1</mml:mn></mml:mrow></mml:msub><mml:mo mathvariant="normal">+</mml:mo><mml:mi mathvariant="normal">…</mml:mi><mml:mo mathvariant="normal">+</mml:mo><mml:msub><mml:mi>σ</mml:mi><mml:mrow><mml:mn mathvariant="normal">2</mml:mn><mml:mo mathvariant="normal">,</mml:mo><mml:mrow><mml:mi>k</mml:mi><mml:mo mathvariant="normal">+</mml:mo><mml:mn mathvariant="normal">1</mml:mn></mml:mrow></mml:mrow></mml:msub></mml:mrow><mml:mo mathvariant="normal">=</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mn mathvariant="normal">2</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula>.</p><fig id="app2fig3" position="float"><label>Appendix 2—figure 3.</label><caption><title>Counting 2-module Young diagram.</title><p>Linearly separable dichotomies (left panel) can be associated to a unique Young diagram (middle panel). These Young diagrams are entirely specified by their frontier path, separating active positions from inactive ones. Enumerating all possible frontier paths allows one to count all the linearly separable dichotomies for two modules.</p></caption><graphic mime-subtype="tiff" mimetype="image" xlink:href="elife-62702-app2-fig3-v3.tif"/></fig><p>Proof. Consider a Young diagram <inline-formula><mml:math id="inf904"><mml:mi class="ltx_font_mathcaligraphic">D</mml:mi></mml:math></inline-formula> in <inline-formula><mml:math id="inf905"><mml:mrow><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mi mathvariant="normal">…</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo stretchy="false">}</mml:mo></mml:mrow><mml:mo>×</mml:mo><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mi mathvariant="normal">…</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mo stretchy="false">}</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula> with <inline-formula><mml:math id="inf906"><mml:mi>p</mml:mi></mml:math></inline-formula> inactive patterns. The diagram <inline-formula><mml:math id="inf907"><mml:mi class="ltx_font_mathcaligraphic">D</mml:mi></mml:math></inline-formula> is uniquely defined by the row partition <inline-formula><mml:math id="inf908"><mml:mrow><mml:mi>p</mml:mi><mml:mo>=</mml:mo><mml:mrow><mml:msub><mml:mi>r</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>+</mml:mo><mml:mi mathvariant="normal">…</mml:mi><mml:mo>+</mml:mo><mml:msub><mml:mi>r</mml:mi><mml:msub><mml:mi>λ</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>, <inline-formula><mml:math id="inf909"><mml:mrow><mml:msub><mml:mi>r</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>≥</mml:mo><mml:mi mathvariant="normal">…</mml:mi><mml:mo>≥</mml:mo><mml:msub><mml:mi>r</mml:mi><mml:msub><mml:mi>λ</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:msub></mml:mrow></mml:math></inline-formula>, where <italic>r</italic><sub><italic>i</italic></sub> denotes the occupancy of row <inline-formula><mml:math id="inf910"><mml:mi>i</mml:mi></mml:math></inline-formula>, or equivalently by the column partition <inline-formula><mml:math id="inf911"><mml:mrow><mml:mi>p</mml:mi><mml:mo>=</mml:mo><mml:mrow><mml:msub><mml:mi>s</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>+</mml:mo><mml:mi mathvariant="normal">…</mml:mi><mml:mo>+</mml:mo><mml:msub><mml:mi>s</mml:mi><mml:msub><mml:mi>λ</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>, <inline-formula><mml:math id="inf912"><mml:mrow><mml:msub><mml:mi>s</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>≥</mml:mo><mml:mi mathvariant="normal">…</mml:mi><mml:mo>≥</mml:mo><mml:msub><mml:mi>s</mml:mi><mml:msub><mml:mi>λ</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:msub></mml:mrow></mml:math></inline-formula>, where <italic>s</italic><sub><italic>j</italic></sub> denotes the occupancy of column <inline-formula><mml:math id="inf913"><mml:mi>j</mml:mi></mml:math></inline-formula>. The occupancies <inline-formula><mml:math id="inf914"><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:msub><mml:mi>r</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:mi mathvariant="normal">…</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mi>r</mml:mi><mml:msub><mml:mi>λ</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:msub><mml:mo stretchy="false">}</mml:mo></mml:mrow></mml:math></inline-formula> and <inline-formula><mml:math id="inf915"><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:msub><mml:mi>s</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:mi mathvariant="normal">…</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mi>s</mml:mi><mml:msub><mml:mi>λ</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:msub><mml:mo stretchy="false">}</mml:mo></mml:mrow></mml:math></inline-formula> entirely define restrictions along each dimension and each set of occupancies along a dimension is invariant to row and column permutations. The corresponding degeneracy indices can be determined straightforwardly by counting the number of rows or columns with a given occupancy, that is, within a given equivalence class. Denoting the necessarily identical number of rows classes and columns classes by <inline-formula><mml:math id="inf916"><mml:mrow><mml:mi>k</mml:mi><mml:mo>≤</mml:mo><mml:mrow><mml:mi>min</mml:mi><mml:mo>⁡</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula>, Proposition yields directly the announced result.</p></sec><sec id="s24" sec-type="appendix"><title>Proposition 8</title><p>For two integer periods <inline-formula><mml:math id="inf917"><mml:msub><mml:mi>λ</mml:mi><mml:mn mathvariant="normal">1</mml:mn></mml:msub></mml:math></inline-formula> and <inline-formula><mml:math id="inf918"><mml:msub><mml:mi>λ</mml:mi><mml:mn mathvariant="normal">2</mml:mn></mml:msub></mml:math></inline-formula>, the number of linearly separable dichotomies in <inline-formula><mml:math id="inf919"><mml:msub><mml:mi class="ltx_font_mathcaligraphic" mathvariant="normal">C</mml:mi><mml:mrow><mml:mo mathvariant="normal" stretchy="false">(</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mn mathvariant="normal">1</mml:mn></mml:msub><mml:mo mathvariant="normal">,</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mn mathvariant="normal">2</mml:mn></mml:msub><mml:mo mathvariant="normal" stretchy="false">)</mml:mo></mml:mrow></mml:msub></mml:math></inline-formula> is<disp-formula id="equ48"><label>(47)</label><mml:math id="m48"><mml:mrow><mml:mstyle displaystyle="true" scriptlevel="0"><mml:msub><mml:mrow><mml:mi mathvariant="script">N</mml:mi></mml:mrow><mml:mrow><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msub></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:munderover><mml:mo>∑</mml:mo><mml:mrow><mml:mi>k</mml:mi><mml:mo>=</mml:mo><mml:mn>0</mml:mn></mml:mrow><mml:mrow><mml:mo form="prefix" movablelimits="true">min</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:munderover><mml:mo stretchy="false">(</mml:mo><mml:mi>k</mml:mi><mml:mo>!</mml:mo><mml:msup><mml:mo stretchy="false">)</mml:mo><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msup><mml:mi>S</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mi>k</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">)</mml:mo><mml:mi>S</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mi>k</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:msubsup><mml:mi>B</mml:mi><mml:mrow><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msub></mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mo>−</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msubsup><mml:mspace width="thinmathspace"/><mml:mo>,</mml:mo></mml:mstyle></mml:mrow></mml:math></disp-formula></p><p>where <inline-formula><mml:math id="inf920"><mml:mrow><mml:mi>S</mml:mi><mml:mo mathvariant="italic">⁢</mml:mo><mml:mrow><mml:mo mathvariant="normal" stretchy="false">(</mml:mo><mml:mi>n</mml:mi><mml:mo mathvariant="normal">,</mml:mo><mml:mi>k</mml:mi><mml:mo mathvariant="normal" stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula> denotes the Stirling numbers of the second kind and where <inline-formula><mml:math id="inf921"><mml:msubsup><mml:mi>B</mml:mi><mml:mi>k</mml:mi><mml:mrow><mml:mo mathvariant="normal" stretchy="false">(</mml:mo><mml:mi>n</mml:mi><mml:mo mathvariant="normal" stretchy="false">)</mml:mo></mml:mrow></mml:msubsup></mml:math></inline-formula> denotes the poly-Bernoulli numbers.</p><p>Proof. Our goal is to evaluate the total number of dichotomies <inline-formula><mml:math id="inf922"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msub><mml:mrow><mml:mi mathvariant="script">N</mml:mi></mml:mrow><mml:mrow><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msub></mml:mrow></mml:msub></mml:mrow></mml:mstyle></mml:math></inline-formula>. To achieve this goal, we will exploit the combinatorics of 2D Young diagrams to specify <inline-formula><mml:math id="inf923"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msub><mml:mrow><mml:mi mathvariant="script">N</mml:mi></mml:mrow><mml:mrow><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msub></mml:mrow></mml:msub></mml:mrow></mml:mstyle></mml:math></inline-formula> as<disp-formula id="equ49"><label>(48)</label><mml:math id="m49"><mml:mrow><mml:mstyle displaystyle="true" scriptlevel="0"><mml:msub><mml:mrow><mml:mi mathvariant="script">N</mml:mi></mml:mrow><mml:mrow><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msub></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:munder><mml:mo>∑</mml:mo><mml:mrow><mml:mrow><mml:mi mathvariant="script">D</mml:mi></mml:mrow><mml:mo>⊂</mml:mo><mml:mo fence="false" stretchy="false">{</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo fence="false" stretchy="false">}</mml:mo><mml:mo>×</mml:mo><mml:mo fence="false" stretchy="false">{</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msub><mml:mo fence="false" stretchy="false">}</mml:mo></mml:mrow></mml:munder><mml:mrow><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:mi>C</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi mathvariant="script">D</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo><mml:mrow><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:mspace width="thinmathspace"/><mml:mo>,</mml:mo></mml:mstyle></mml:mrow></mml:math></disp-formula></p><p>where <inline-formula><mml:math id="inf924"><mml:mi class="ltx_font_mathcaligraphic">D</mml:mi></mml:math></inline-formula> runs over all possible Young diagrams. Because of the multinomial nature of the cardinalities <inline-formula><mml:math id="inf925"><mml:mrow><mml:mo stretchy="false">|</mml:mo><mml:mrow><mml:mi>C</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi class="ltx_font_mathcaligraphic">D</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow><mml:mo stretchy="false">|</mml:mo></mml:mrow></mml:math></inline-formula>, it is advantageous to adopt an alternative representation for Young diagrams. This alternative representation will require utilizing the frontier of a Young diagram. Given a Young diagram <inline-formula><mml:math id="inf926"><mml:mi class="ltx_font_mathcaligraphic">D</mml:mi></mml:math></inline-formula> with <inline-formula><mml:math id="inf927"><mml:mi>k</mml:mi></mml:math></inline-formula> distinct nonempty rows and <inline-formula><mml:math id="inf928"><mml:mi>k</mml:mi></mml:math></inline-formula> distinct nonempty columns, we define its frontier as the path joining the lattice points <inline-formula><mml:math id="inf929"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mn>0</mml:mn><mml:mo>,</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> and <inline-formula><mml:math id="inf930"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:mn>0</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula>, via lattice positions in <inline-formula><mml:math id="inf931"><mml:mi class="ltx_font_mathcaligraphic">D</mml:mi></mml:math></inline-formula> separating the active region from the inactive region (see <xref ref-type="fig" rid="fig7">Figure 7</xref>). Such a path is uniquely defined via <inline-formula><mml:math id="inf932"><mml:mrow><mml:mi>k</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:math></inline-formula> downward steps of size <inline-formula><mml:math id="inf933"><mml:mrow><mml:msub><mml:mi>σ</mml:mi><mml:mrow><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mrow><mml:mi>k</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:mi mathvariant="normal">…</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mi>σ</mml:mi><mml:mrow><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> and <inline-formula><mml:math id="inf934"><mml:mrow><mml:mi>k</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:math></inline-formula> rightward steps of sizes <inline-formula><mml:math id="inf935"><mml:mrow><mml:msub><mml:mi>σ</mml:mi><mml:mrow><mml:mn>2</mml:mn><mml:mo>,</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:mi mathvariant="normal">…</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mi>σ</mml:mi><mml:mrow><mml:mn>2</mml:mn><mml:mo>,</mml:mo><mml:mrow><mml:mi>k</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula>, which satisfy <inline-formula><mml:math id="inf936"><mml:mrow><mml:mrow><mml:msub><mml:mi>σ</mml:mi><mml:mrow><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:mi mathvariant="normal">…</mml:mi><mml:mo>+</mml:mo><mml:msub><mml:mi>σ</mml:mi><mml:mrow><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mrow><mml:mi>k</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:mrow></mml:msub></mml:mrow><mml:mo>=</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> and <inline-formula><mml:math id="inf937"><mml:mrow><mml:mrow><mml:msub><mml:mi>σ</mml:mi><mml:mrow><mml:mn>2</mml:mn><mml:mo>,</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:mi mathvariant="normal">…</mml:mi><mml:mo>+</mml:mo><mml:msub><mml:mi>σ</mml:mi><mml:mrow><mml:mn>2</mml:mn><mml:mo>,</mml:mo><mml:mrow><mml:mi>k</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:mrow></mml:msub></mml:mrow><mml:mo>=</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula>. Clearly, the frontier of <inline-formula><mml:math id="inf938"><mml:mi class="ltx_font_mathcaligraphic">D</mml:mi></mml:math></inline-formula> determines the cardinality of <inline-formula><mml:math id="inf939"><mml:mrow><mml:mi>C</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi class="ltx_font_mathcaligraphic">D</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula> via (46). To evaluate <inline-formula><mml:math id="inf940"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msub><mml:mrow><mml:mi mathvariant="script">N</mml:mi></mml:mrow><mml:mrow><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msub></mml:mrow></mml:msub></mml:mrow></mml:mstyle></mml:math></inline-formula> in (48), we partition Young diagrams based on <inline-formula><mml:math id="inf941"><mml:mi>k</mml:mi></mml:math></inline-formula>, the number of distinct row and column sizes. For <inline-formula><mml:math id="inf942"><mml:mrow><mml:mi>k</mml:mi><mml:mo>=</mml:mo><mml:mn>0</mml:mn></mml:mrow></mml:math></inline-formula>, we have <inline-formula><mml:math id="inf943"><mml:mrow><mml:msub><mml:mi>σ</mml:mi><mml:mrow><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> and <inline-formula><mml:math id="inf944"><mml:mrow><mml:msub><mml:mi>σ</mml:mi><mml:mrow><mml:mn>2</mml:mn><mml:mo>,</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula>, corresponding to <inline-formula><mml:math id="inf945"><mml:mrow><mml:mrow><mml:msub><mml:mi>N</mml:mi><mml:mrow><mml:msub><mml:mi>λ</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:mrow></mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mn>0</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:math></inline-formula> Young diagram, the empty diagram, where all patterns are inactive. For <inline-formula><mml:math id="inf946"><mml:mrow><mml:mi>k</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:math></inline-formula>, there is a single row and column size, corresponding to Young diagrams where the active patterns are arranged in a rectangle, with edge lengths <inline-formula><mml:math id="inf947"><mml:msub><mml:mi>σ</mml:mi><mml:mrow><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub></mml:math></inline-formula> and <inline-formula><mml:math id="inf948"><mml:msub><mml:mi>σ</mml:mi><mml:mrow><mml:mn>2</mml:mn><mml:mo>,</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub></mml:math></inline-formula>. Nonempty rectangular diagrams correspond to <inline-formula><mml:math id="inf949"><mml:mrow><mml:msub><mml:mi>σ</mml:mi><mml:mrow><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>§gt;</mml:mo><mml:mn>0</mml:mn></mml:mrow></mml:math></inline-formula> and <inline-formula><mml:math id="inf950"><mml:mrow><mml:msub><mml:mi>σ</mml:mi><mml:mrow><mml:mn>2</mml:mn><mml:mo>,</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>§gt;</mml:mo><mml:mn>0</mml:mn></mml:mrow></mml:math></inline-formula>, and thus contribute<disp-formula id="equ50"><label>(49)</label><mml:math id="m50"><mml:mrow><mml:msub><mml:mi>N</mml:mi><mml:mrow><mml:msub><mml:mi>λ</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:mrow></mml:msub><mml:mo>⁢</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow><mml:mo>=</mml:mo><mml:mrow><mml:mstyle displaystyle="true" scriptlevel="0"><mml:munderover><mml:mo largeop="true" movablelimits="false" symmetric="true">∑</mml:mo><mml:mrow><mml:msub><mml:mi>ρ</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:msub><mml:mi>λ</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:munderover></mml:mstyle><mml:mrow><mml:mstyle displaystyle="true" scriptlevel="0"><mml:munderover><mml:mo largeop="true" movablelimits="false" symmetric="true">∑</mml:mo><mml:mrow><mml:msub><mml:mi>σ</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:msub><mml:mi>λ</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:munderover></mml:mstyle><mml:mrow><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mfrac><mml:mrow><mml:msub><mml:mi>λ</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo lspace="0pt" rspace="3.5pt">!</mml:mo></mml:mrow><mml:mrow><mml:mrow><mml:msub><mml:mi>σ</mml:mi><mml:mrow><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo lspace="0pt" rspace="3.5pt">!</mml:mo></mml:mrow><mml:mo>⁢</mml:mo><mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:msub><mml:mi>λ</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>-</mml:mo><mml:msub><mml:mi>σ</mml:mi><mml:mrow><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo lspace="0pt" rspace="3.5pt">!</mml:mo></mml:mrow></mml:mrow></mml:mfrac></mml:mstyle><mml:mo>⁢</mml:mo><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mfrac><mml:mrow><mml:msub><mml:mi>λ</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mo lspace="0pt" rspace="3.5pt">!</mml:mo></mml:mrow><mml:mrow><mml:mrow><mml:msub><mml:mi>σ</mml:mi><mml:mrow><mml:mn>2</mml:mn><mml:mo>,</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo lspace="0pt" rspace="3.5pt">!</mml:mo></mml:mrow><mml:mo>⁢</mml:mo><mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:msub><mml:mi>λ</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mo>-</mml:mo><mml:msub><mml:mi>σ</mml:mi><mml:mrow><mml:mn>2</mml:mn><mml:mo>,</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo lspace="0pt" rspace="3.5pt">!</mml:mo></mml:mrow></mml:mrow></mml:mfrac></mml:mstyle></mml:mrow></mml:mrow></mml:mrow></mml:math></disp-formula><disp-formula id="equ51"><label>(50)</label><mml:math id="m51"><mml:mo>=</mml:mo><mml:mrow><mml:mrow><mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mrow><mml:mstyle displaystyle="true" scriptlevel="0"><mml:munderover><mml:mo largeop="true" movablelimits="false" symmetric="true">∑</mml:mo><mml:mrow><mml:msub><mml:mi>ρ</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>=</mml:mo><mml:mn>0</mml:mn></mml:mrow><mml:msub><mml:mi>λ</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:munderover></mml:mstyle><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mfrac><mml:mrow><mml:msub><mml:mi>λ</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo lspace="0pt" rspace="3.5pt">!</mml:mo></mml:mrow><mml:mrow><mml:mrow><mml:msub><mml:mi>σ</mml:mi><mml:mrow><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo lspace="0pt" rspace="3.5pt">!</mml:mo></mml:mrow><mml:mo>⁢</mml:mo><mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:msub><mml:mi>λ</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>-</mml:mo><mml:msub><mml:mi>σ</mml:mi><mml:mrow><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo lspace="0pt" rspace="3.5pt">!</mml:mo></mml:mrow></mml:mrow></mml:mfrac></mml:mstyle></mml:mrow><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>⁢</mml:mo><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mrow><mml:mstyle displaystyle="true" scriptlevel="0"><mml:munderover><mml:mo largeop="true" movablelimits="false" symmetric="true">∑</mml:mo><mml:mrow><mml:msub><mml:mi>σ</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>=</mml:mo><mml:mn>0</mml:mn></mml:mrow><mml:msub><mml:mi>λ</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:munderover></mml:mstyle><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mfrac><mml:mrow><mml:msub><mml:mi>λ</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mo lspace="0pt" rspace="3.5pt">!</mml:mo></mml:mrow><mml:mrow><mml:mrow><mml:msub><mml:mi>σ</mml:mi><mml:mrow><mml:mn>2</mml:mn><mml:mo>,</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo lspace="0pt" rspace="3.5pt">!</mml:mo></mml:mrow><mml:mo>⁢</mml:mo><mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:msub><mml:mi>λ</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mo>-</mml:mo><mml:msub><mml:mi>σ</mml:mi><mml:mrow><mml:mn>2</mml:mn><mml:mo>,</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo lspace="0pt" rspace="3.5pt">!</mml:mo></mml:mrow></mml:mrow></mml:mfrac></mml:mstyle></mml:mrow><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow><mml:mo>=</mml:mo><mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:msup><mml:mn>2</mml:mn><mml:msub><mml:mi>λ</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:msup><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>⁢</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:msup><mml:mn>2</mml:mn><mml:msub><mml:mi>λ</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:msup><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mo rspace="4.2pt" stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:mrow><mml:mo>,</mml:mo></mml:mrow></mml:math></disp-formula></p><p>to the sum (48). The contribution of diagrams with general <inline-formula><mml:math id="inf951"><mml:mi>k</mml:mi></mml:math></inline-formula>-frontier, denoted by <inline-formula><mml:math id="inf952"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msub><mml:mi>N</mml:mi><mml:mrow><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msub></mml:mrow></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:mi>k</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mstyle></mml:math></inline-formula>, follows from the multinomial theorem, where one ensures that frontiers with less than <inline-formula><mml:math id="inf953"><mml:mrow><mml:mi>k</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:math></inline-formula> downward and rightward steps do not get repeated. These <inline-formula><mml:math id="inf954"><mml:mi>k</mml:mi></mml:math></inline-formula>-frontiers correspond to <inline-formula><mml:math id="inf955"><mml:mrow><mml:mi>k</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:math></inline-formula> sequences of downward and rightward steps for which no step has zero size, except possibly for the first downward step emanating from <inline-formula><mml:math id="inf956"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mn>0</mml:mn><mml:mo>,</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mstyle></mml:math></inline-formula> and the last rightward step arriving at <inline-formula><mml:math id="inf957"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:mn>0</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mstyle></mml:math></inline-formula>. Under these conditions, the downward and rightward steps can be chosen independently, so that we can write <inline-formula><mml:math id="inf958"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msub><mml:mi>N</mml:mi><mml:mrow><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msub></mml:mrow></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:mi>k</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:msub><mml:mi>f</mml:mi><mml:mrow><mml:mi>k</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:msub><mml:mi>f</mml:mi><mml:mrow><mml:mi>k</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mstyle></mml:math></inline-formula>, where the factors <inline-formula><mml:math id="inf959"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msub><mml:mi>f</mml:mi><mml:mrow><mml:mi>k</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mstyle></mml:math></inline-formula> and <inline-formula><mml:math id="inf960"><mml:mrow><mml:msub><mml:mi>f</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:mo>⁢</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula> only depend on the downward steps and rightward steps, respectively. Let us focus on the downward steps alone, that is, on the term <inline-formula><mml:math id="inf961"><mml:mrow><mml:msub><mml:mi>f</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:mo>⁢</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula>. The admissible sequences of steps satisfy <inline-formula><mml:math id="inf962"><mml:mrow><mml:mrow><mml:msub><mml:mi>σ</mml:mi><mml:mrow><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:mi mathvariant="normal">…</mml:mi><mml:mo>+</mml:mo><mml:msub><mml:mi>σ</mml:mi><mml:mrow><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mrow><mml:mi>k</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:mrow></mml:msub></mml:mrow><mml:mo>=</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula>, with <inline-formula><mml:math id="inf963"><mml:mrow><mml:mrow><mml:msub><mml:mi>σ</mml:mi><mml:mrow><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:mi mathvariant="normal">…</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mi>σ</mml:mi><mml:mrow><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mi>k</mml:mi></mml:mrow></mml:msub></mml:mrow><mml:mo>≠</mml:mo><mml:mn>0</mml:mn></mml:mrow></mml:math></inline-formula>. From the multinomial theorem, we have<disp-formula id="equ52"><label>(51)</label><mml:math id="m52"><mml:mrow><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mo stretchy="false">(</mml:mo><mml:mi>k</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn><mml:msup><mml:mo stretchy="false">)</mml:mo><mml:mrow><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub></mml:mrow></mml:msup><mml:mo>=</mml:mo><mml:munder><mml:mo>∑</mml:mo><mml:mrow><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mtable columnspacing="0em" displaystyle="false" rowspacing="0.1em"><mml:mtr><mml:mtd><mml:msub><mml:mi>σ</mml:mi><mml:mrow><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:mo>…</mml:mo><mml:mo>+</mml:mo><mml:msub><mml:mi>σ</mml:mi><mml:mrow><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mi>k</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:msub><mml:mi>σ</mml:mi><mml:mrow><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>…</mml:mo><mml:msub><mml:mi>σ</mml:mi><mml:mrow><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mi>k</mml:mi></mml:mrow></mml:msub><mml:mo>≠</mml:mo><mml:mn>0</mml:mn></mml:mtd></mml:mtr></mml:mtable></mml:mstyle></mml:mrow></mml:munder><mml:mfrac><mml:mrow><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>!</mml:mo></mml:mrow><mml:mrow><mml:msub><mml:mi>σ</mml:mi><mml:mrow><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>!</mml:mo><mml:mo>…</mml:mo><mml:msub><mml:mi>σ</mml:mi><mml:mrow><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mi>k</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>!</mml:mo></mml:mrow></mml:mfrac><mml:mo>+</mml:mo><mml:munder><mml:mo>∑</mml:mo><mml:mrow><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mtable columnspacing="0em" displaystyle="false" rowspacing="0.1em"><mml:mtr><mml:mtd><mml:msub><mml:mi>σ</mml:mi><mml:mrow><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:mo>…</mml:mo><mml:mo>+</mml:mo><mml:msub><mml:mi>σ</mml:mi><mml:mrow><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mi>k</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:msub><mml:mi>σ</mml:mi><mml:mrow><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>…</mml:mo><mml:msub><mml:mi>σ</mml:mi><mml:mrow><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mi>k</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mn>0</mml:mn></mml:mtd></mml:mtr></mml:mtable></mml:mstyle></mml:mrow></mml:munder><mml:mfrac><mml:mrow><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>!</mml:mo></mml:mrow><mml:mrow><mml:msub><mml:mi>σ</mml:mi><mml:mrow><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>!</mml:mo><mml:mo>…</mml:mo><mml:msub><mml:mi>σ</mml:mi><mml:mrow><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mi>k</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>!</mml:mo></mml:mrow></mml:mfrac><mml:mspace width="thinmathspace"/><mml:mo>,</mml:mo></mml:mstyle></mml:mrow></mml:math></disp-formula></p><p>where the first term of the right-hand side is <inline-formula><mml:math id="inf964"><mml:mrow><mml:msub><mml:mi>f</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:mo>⁢</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula> and the second term of the right-hand side collects the contribution of sequences that are not <inline-formula><mml:math id="inf965"><mml:mi>k</mml:mi></mml:math></inline-formula>-frontiers. The latter term can be evaluated explicitly via the exclusion-inclusion principle yielding<disp-formula id="equ53"><label>(52)</label><mml:math id="m53"><mml:mrow><mml:mstyle displaystyle="true" scriptlevel="0"><mml:munder><mml:mo>∑</mml:mo><mml:mrow><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mtable columnspacing="0em" displaystyle="false" rowspacing="0.1em"><mml:mtr><mml:mtd><mml:msub><mml:mi>σ</mml:mi><mml:mrow><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:mo>…</mml:mo><mml:mo>+</mml:mo><mml:msub><mml:mi>σ</mml:mi><mml:mrow><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mi>k</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:msub><mml:mi>σ</mml:mi><mml:mrow><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>…</mml:mo><mml:msub><mml:mi>σ</mml:mi><mml:mrow><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mi>k</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mn>0</mml:mn></mml:mtd></mml:mtr></mml:mtable></mml:mstyle></mml:mrow></mml:munder><mml:mfrac><mml:mrow><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>!</mml:mo></mml:mrow><mml:mrow><mml:msub><mml:mi>σ</mml:mi><mml:mrow><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>!</mml:mo><mml:mo>…</mml:mo><mml:msub><mml:mi>σ</mml:mi><mml:mrow><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mi>k</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>!</mml:mo></mml:mrow></mml:mfrac><mml:mo>=</mml:mo><mml:munderover><mml:mo>∑</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mi>k</mml:mi></mml:mrow></mml:munderover><mml:mo stretchy="false">(</mml:mo><mml:mo>−</mml:mo><mml:mn>1</mml:mn><mml:msup><mml:mo stretchy="false">)</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>−</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msup><mml:mrow><mml:mrow><mml:mo maxsize="2.047em" minsize="2.047em">(</mml:mo></mml:mrow><mml:mfrac linethickness="0pt"><mml:mi>k</mml:mi><mml:mi>i</mml:mi></mml:mfrac><mml:mrow><mml:mo maxsize="2.047em" minsize="2.047em">)</mml:mo></mml:mrow></mml:mrow><mml:munder><mml:mo>∑</mml:mo><mml:mrow><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mtable columnspacing="0em" displaystyle="false" rowspacing="0.1em"><mml:mtr><mml:mtd><mml:msub><mml:mi>σ</mml:mi><mml:mrow><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:mo>…</mml:mo><mml:mo>+</mml:mo><mml:msub><mml:mi>σ</mml:mi><mml:mrow><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mi>k</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:msub><mml:mi>σ</mml:mi><mml:mrow><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mn>0</mml:mn><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>σ</mml:mi><mml:mrow><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mn>0</mml:mn></mml:mtd></mml:mtr></mml:mtable></mml:mstyle></mml:mrow></mml:munder><mml:mfrac><mml:mrow><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>!</mml:mo></mml:mrow><mml:mrow><mml:msub><mml:mi>σ</mml:mi><mml:mrow><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>!</mml:mo><mml:mo>…</mml:mo><mml:msub><mml:mi>σ</mml:mi><mml:mrow><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mi>k</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>!</mml:mo></mml:mrow></mml:mfrac><mml:mo>,</mml:mo></mml:mstyle></mml:mrow></mml:math></disp-formula><disp-formula id="equ54"><label>(53)</label><mml:math id="m54"><mml:mo>=</mml:mo><mml:mrow><mml:mstyle displaystyle="true" scriptlevel="0"><mml:munderover><mml:mo largeop="true" movablelimits="false" symmetric="true">∑</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>k</mml:mi></mml:munderover></mml:mstyle><mml:mrow><mml:msup><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msup><mml:mo>⁢</mml:mo><mml:mrow><mml:mo>(</mml:mo><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mfrac linethickness="0pt"><mml:mi>k</mml:mi><mml:mi>i</mml:mi></mml:mfrac></mml:mstyle><mml:mo>)</mml:mo></mml:mrow><mml:mo>⁢</mml:mo><mml:mrow><mml:mstyle displaystyle="true" scriptlevel="0"><mml:munder><mml:mo largeop="true" movablelimits="false" symmetric="true">∑</mml:mo><mml:mtable class="ltx_align_c"><mml:mtr><mml:mtd><mml:mrow><mml:mrow><mml:msub><mml:mi>σ</mml:mi><mml:mrow><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:mi mathvariant="normal">…</mml:mi><mml:mo>+</mml:mo><mml:msub><mml:mi>σ</mml:mi><mml:mrow><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mrow><mml:mi>k</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:mrow></mml:msub></mml:mrow><mml:mo>=</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:munder></mml:mstyle><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mfrac><mml:mrow><mml:msub><mml:mi>λ</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo lspace="0pt" rspace="3.5pt">!</mml:mo></mml:mrow><mml:mrow><mml:mrow><mml:msub><mml:mi>σ</mml:mi><mml:mrow><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:mrow></mml:msub><mml:mo lspace="0pt" rspace="3.5pt">!</mml:mo></mml:mrow><mml:mo>⁢</mml:mo><mml:mi mathvariant="normal">…</mml:mi><mml:mo>⁢</mml:mo><mml:mrow><mml:msub><mml:mi>σ</mml:mi><mml:mrow><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mrow><mml:mi>k</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:mrow></mml:msub><mml:mo lspace="0pt" rspace="3.5pt">!</mml:mo></mml:mrow></mml:mrow></mml:mfrac></mml:mstyle></mml:mrow></mml:mrow></mml:mrow></mml:math></disp-formula><disp-formula id="equ55"><label>(54)</label><mml:math id="m55"><mml:mrow><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mo>=</mml:mo><mml:munderover><mml:mo>∑</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mi>k</mml:mi></mml:mrow></mml:munderover><mml:mo stretchy="false">(</mml:mo><mml:mo>−</mml:mo><mml:mn>1</mml:mn><mml:msup><mml:mo stretchy="false">)</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>−</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msup><mml:mrow><mml:mrow><mml:mo maxsize="2.047em" minsize="2.047em">(</mml:mo></mml:mrow><mml:mfrac linethickness="0pt"><mml:mi>k</mml:mi><mml:mi>i</mml:mi></mml:mfrac><mml:mrow><mml:mo maxsize="2.047em" minsize="2.047em">)</mml:mo></mml:mrow></mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>k</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn><mml:mo>−</mml:mo><mml:mi>i</mml:mi><mml:msup><mml:mo stretchy="false">)</mml:mo><mml:mrow><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub></mml:mrow></mml:msup><mml:mo>,</mml:mo></mml:mstyle></mml:mrow></mml:math></disp-formula></p><p>where we have used the multinomial theorem for the last equality. Together with (51), the above equation allows one to specify <inline-formula><mml:math id="inf966"><mml:mrow><mml:msub><mml:mi>f</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:mo>⁢</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>λ</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula> in terms of the Sterling numbers of the second kind, denoted by <inline-formula><mml:math id="inf967"><mml:mrow><mml:mi>S</mml:mi><mml:mo>⁢</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>n</mml:mi><mml:mo>,</mml:mo><mml:mi>k</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula>, as<disp-formula id="equ56"><label>(55)</label><mml:math id="m56"><mml:mrow><mml:msub><mml:mi>f</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:mo>⁢</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>λ</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow><mml:mo>=</mml:mo><mml:mrow><mml:mrow><mml:mstyle displaystyle="true" scriptlevel="0"><mml:munderover><mml:mo largeop="true" movablelimits="false" symmetric="true">∑</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>=</mml:mo><mml:mn>0</mml:mn></mml:mrow><mml:mi>k</mml:mi></mml:munderover></mml:mstyle><mml:mrow><mml:msup><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mi>i</mml:mi></mml:msup><mml:mo>⁢</mml:mo><mml:mrow><mml:mo>(</mml:mo><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mfrac linethickness="0pt"><mml:mi>k</mml:mi><mml:mi>i</mml:mi></mml:mfrac></mml:mstyle><mml:mo>)</mml:mo></mml:mrow><mml:mo>⁢</mml:mo><mml:mpadded width="+1.7pt"><mml:msup><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mrow><mml:mi>k</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mo>-</mml:mo><mml:mi>i</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mi>λ</mml:mi></mml:msup></mml:mpadded></mml:mrow></mml:mrow><mml:mo>,</mml:mo></mml:mrow></mml:math></disp-formula><disp-formula id="equ57"><label>(56)</label><mml:math id="m57"><mml:mrow><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mo>=</mml:mo><mml:munderover><mml:mo>∑</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>=</mml:mo><mml:mn>0</mml:mn></mml:mrow><mml:mrow><mml:mi>k</mml:mi></mml:mrow></mml:munderover><mml:mo stretchy="false">(</mml:mo><mml:mo>−</mml:mo><mml:mn>1</mml:mn><mml:msup><mml:mo stretchy="false">)</mml:mo><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msup><mml:mrow><mml:mrow><mml:mo maxsize="2.047em" minsize="2.047em">(</mml:mo></mml:mrow><mml:mfrac linethickness="0pt"><mml:mi>k</mml:mi><mml:mi>i</mml:mi></mml:mfrac><mml:mrow><mml:mo maxsize="2.047em" minsize="2.047em">)</mml:mo></mml:mrow></mml:mrow><mml:munderover><mml:mo>∑</mml:mo><mml:mrow><mml:mi>j</mml:mi><mml:mo>=</mml:mo><mml:mn>0</mml:mn></mml:mrow><mml:mrow><mml:mi>λ</mml:mi></mml:mrow></mml:munderover><mml:mrow><mml:mrow><mml:mo maxsize="2.047em" minsize="2.047em">(</mml:mo></mml:mrow><mml:mfrac linethickness="0pt"><mml:mi>λ</mml:mi><mml:mi>j</mml:mi></mml:mfrac><mml:mrow><mml:mo maxsize="2.047em" minsize="2.047em">)</mml:mo></mml:mrow></mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>k</mml:mi><mml:mo>−</mml:mo><mml:mi>i</mml:mi><mml:msup><mml:mo stretchy="false">)</mml:mo><mml:mrow><mml:mi>j</mml:mi></mml:mrow></mml:msup><mml:mo>,</mml:mo></mml:mstyle></mml:mrow></mml:math></disp-formula><disp-formula id="equ58"><label>(57)</label><mml:math id="m58"><mml:mo>=</mml:mo><mml:mrow><mml:mrow><mml:mstyle displaystyle="true" scriptlevel="0"><mml:munderover><mml:mo largeop="true" movablelimits="false" symmetric="true">∑</mml:mo><mml:mrow><mml:mi>j</mml:mi><mml:mo>=</mml:mo><mml:mn>0</mml:mn></mml:mrow><mml:mi>λ</mml:mi></mml:munderover></mml:mstyle><mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mfrac linethickness="0pt"><mml:mi>λ</mml:mi><mml:mi>j</mml:mi></mml:mfrac></mml:mstyle><mml:mo>)</mml:mo></mml:mrow><mml:mo>⁢</mml:mo><mml:mrow><mml:mstyle displaystyle="true" scriptlevel="0"><mml:munderover><mml:mo largeop="true" movablelimits="false" symmetric="true">∑</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>=</mml:mo><mml:mn>0</mml:mn></mml:mrow><mml:mi>k</mml:mi></mml:munderover></mml:mstyle><mml:mrow><mml:msup><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mi>i</mml:mi></mml:msup><mml:mo>⁢</mml:mo><mml:mrow><mml:mo>(</mml:mo><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mfrac linethickness="0pt"><mml:mi>k</mml:mi><mml:mi>i</mml:mi></mml:mfrac></mml:mstyle><mml:mo>)</mml:mo></mml:mrow><mml:mo>⁢</mml:mo><mml:mpadded width="+1.7pt"><mml:msup><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi>k</mml:mi><mml:mo>-</mml:mo><mml:mi>i</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mi>j</mml:mi></mml:msup></mml:mpadded></mml:mrow></mml:mrow></mml:mrow></mml:mrow><mml:mo>,</mml:mo></mml:mrow></mml:math></disp-formula><disp-formula id="equ59"><label>(58)</label><mml:math id="m59"><mml:mo>=</mml:mo><mml:mrow><mml:mrow><mml:mrow><mml:mi>k</mml:mi><mml:mo lspace="0pt" rspace="3.5pt">!</mml:mo></mml:mrow><mml:mo>⁢</mml:mo><mml:mrow><mml:mstyle displaystyle="true" scriptlevel="0"><mml:munderover><mml:mo largeop="true" movablelimits="false" symmetric="true">∑</mml:mo><mml:mrow><mml:mi>j</mml:mi><mml:mo>=</mml:mo><mml:mn>0</mml:mn></mml:mrow><mml:mi>λ</mml:mi></mml:munderover></mml:mstyle><mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mfrac linethickness="0pt"><mml:mi>λ</mml:mi><mml:mi>j</mml:mi></mml:mfrac></mml:mstyle><mml:mo>)</mml:mo></mml:mrow><mml:mo>⁢</mml:mo><mml:mi>S</mml:mi><mml:mo>⁢</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>j</mml:mi><mml:mo>,</mml:mo><mml:mi>k</mml:mi><mml:mo rspace="4.2pt" stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:mrow><mml:mo>,</mml:mo></mml:mrow></mml:math></disp-formula><disp-formula id="equ60"><label>(59)</label><mml:math id="m60"><mml:mo>=</mml:mo><mml:mrow><mml:mrow><mml:mrow><mml:mi>k</mml:mi><mml:mo lspace="0pt" rspace="3.5pt">!</mml:mo></mml:mrow><mml:mo>⁢</mml:mo><mml:mi>S</mml:mi><mml:mo>⁢</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi>λ</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mo>,</mml:mo><mml:mrow><mml:mi>k</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mo rspace="4.2pt" stretchy="false">)</mml:mo></mml:mrow></mml:mrow><mml:mo>,</mml:mo></mml:mrow></mml:math></disp-formula></p><p>where the last equality follows from a well-known identity about Stirling numbers of the second kind. Then, the overall number of dichotomies follows from the fact that the frontier has at most <inline-formula><mml:math id="inf968"><mml:mrow><mml:mi>min</mml:mi><mml:mo>⁡</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula> distinct values of row/column sizes, which implies<disp-formula id="equ61"><label>(60)</label><mml:math id="m61"><mml:mrow><mml:mstyle displaystyle="true" scriptlevel="0"><mml:msub><mml:mrow><mml:mi mathvariant="script">N</mml:mi></mml:mrow><mml:mrow><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msub></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:munderover><mml:mo>∑</mml:mo><mml:mrow><mml:mi>k</mml:mi><mml:mo>=</mml:mo><mml:mn>0</mml:mn></mml:mrow><mml:mrow><mml:mo form="prefix" movablelimits="true">min</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:munderover><mml:msub><mml:mi>N</mml:mi><mml:mrow><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msub></mml:mrow></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:mi>k</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:munderover><mml:mo>∑</mml:mo><mml:mrow><mml:mi>k</mml:mi><mml:mo>=</mml:mo><mml:mn>0</mml:mn></mml:mrow><mml:mrow><mml:mo form="prefix" movablelimits="true">min</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:munderover><mml:mo stretchy="false">(</mml:mo><mml:mi>k</mml:mi><mml:mo>!</mml:mo><mml:msup><mml:mo stretchy="false">)</mml:mo><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msup><mml:mi>S</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mi>k</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">)</mml:mo><mml:mi>S</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mi>k</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:msubsup><mml:mi>B</mml:mi><mml:mrow><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msub></mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mo>−</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msubsup><mml:mspace width="thinmathspace"/><mml:mo>.</mml:mo></mml:mstyle></mml:mrow></mml:math></disp-formula></p><p>where we have recognized the definition of the poly-Bernoulli numbers <inline-formula><mml:math id="inf969"><mml:msubsup><mml:mi>B</mml:mi><mml:mi>k</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>n</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msubsup></mml:math></inline-formula>. These numbers are defined via the generating function<disp-formula id="equ62"><label>(61)</label><mml:math id="m62"><mml:mrow><mml:mrow><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mfrac><mml:mrow><mml:msub><mml:mi>Li</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:mo>⁢</mml:mo><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mn>1</mml:mn><mml:mo>-</mml:mo><mml:msup><mml:mi>e</mml:mi><mml:mrow><mml:mo>-</mml:mo><mml:mi>x</mml:mi></mml:mrow></mml:msup></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow><mml:mrow><mml:mn>1</mml:mn><mml:mo>-</mml:mo><mml:msup><mml:mi>e</mml:mi><mml:mrow><mml:mo>-</mml:mo><mml:mi>x</mml:mi></mml:mrow></mml:msup></mml:mrow></mml:mfrac></mml:mstyle><mml:mo>=</mml:mo><mml:mrow><mml:mstyle displaystyle="true" scriptlevel="0"><mml:munderover><mml:mo largeop="true" movablelimits="false" symmetric="true">∑</mml:mo><mml:mrow><mml:mi>n</mml:mi><mml:mo>=</mml:mo><mml:mn>0</mml:mn></mml:mrow><mml:mi mathvariant="normal">∞</mml:mi></mml:munderover></mml:mstyle><mml:mrow><mml:msubsup><mml:mi>B</mml:mi><mml:mi>k</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>n</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msubsup><mml:mo>⁢</mml:mo><mml:mpadded width="+1.7pt"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mfrac><mml:msup><mml:mi>x</mml:mi><mml:mi>n</mml:mi></mml:msup><mml:mrow><mml:mi>n</mml:mi><mml:mo lspace="0pt" rspace="3.5pt">!</mml:mo></mml:mrow></mml:mfrac></mml:mstyle></mml:mpadded></mml:mrow></mml:mrow></mml:mrow><mml:mo>,</mml:mo></mml:mrow></mml:math></disp-formula></p><p>where <inline-formula><mml:math id="inf970"><mml:msub><mml:mi>Li</mml:mi><mml:mi>k</mml:mi></mml:msub></mml:math></inline-formula> denotes the poly-logarithm.</p><p>Poly-Bernoulli numbers were originally introduced by Kaneko to enumerate the set of binary <inline-formula><mml:math id="inf971"><mml:mi>k</mml:mi></mml:math></inline-formula>-by-<inline-formula><mml:math id="inf972"><mml:mi>n</mml:mi></mml:math></inline-formula> matrices that are uniquely reconstructible from their row and column sums (<xref ref-type="bibr" rid="bib41">Kaneko, 1997</xref>). The use of poly-Bernoulli numbers to enumerate permutations of Young tableaux was pioneered by Postnikov while investigating totally Grassmannian cells (<xref ref-type="bibr" rid="bib67">Postnikov, 2006</xref>). While studying the asymptotics of the extremal excedance set statistic, <xref ref-type="bibr" rid="bib23">de Andrade et al., 2015</xref> obtained the asymptotics of the poly-Bernoulli numbers along the diagonal:<disp-formula id="equ63"><label>(62)</label><mml:math id="m63"><mml:mrow><mml:mstyle displaystyle="true" scriptlevel="0"><mml:msub><mml:mrow><mml:mi mathvariant="script">N</mml:mi></mml:mrow><mml:mrow><mml:mi>λ</mml:mi><mml:mo>,</mml:mo><mml:mi>λ</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:msubsup><mml:mi>B</mml:mi><mml:mrow><mml:mi>λ</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mo>−</mml:mo><mml:mi>λ</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msubsup><mml:mo>=</mml:mo><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mfrac><mml:mn>1</mml:mn><mml:mrow><mml:mi>log</mml:mi><mml:mo>⁡</mml:mo><mml:mn>2</mml:mn><mml:msqrt><mml:mn>1</mml:mn><mml:mo>−</mml:mo><mml:mi>log</mml:mi><mml:mo>⁡</mml:mo><mml:mn>2</mml:mn></mml:msqrt></mml:mrow></mml:mfrac><mml:mo>+</mml:mo><mml:mi>o</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mfrac><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mn>2</mml:mn><mml:mi>λ</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>!</mml:mo></mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mn>2</mml:mn><mml:mi>log</mml:mi><mml:mo>⁡</mml:mo><mml:mn>2</mml:mn><mml:msup><mml:mo stretchy="false">)</mml:mo><mml:mrow><mml:mn>2</mml:mn><mml:mi>λ</mml:mi></mml:mrow></mml:msup></mml:mrow></mml:mfrac><mml:mspace width="thinmathspace"/><mml:mo>.</mml:mo></mml:mstyle></mml:mrow></mml:math></disp-formula></p></sec></app><app id="appendix-3"><title>Appendix 3</title><sec id="s25" sec-type="appendix"><title>Spatial embedding of the grid code</title><p>In this Appendix, we address the limitations entailed by spatially embedding grid-like inputs. First, we define the grid-cell-activity matrix that specifies the spatial assignment of grid-like inputs for 1D space. Second, we show that the contiguous-separating capacity, defined as the maximum spatial extent over which all possible dichotomies are linearly separable, is determined by the rank of the grid-cell-activity matrix. Third, we generalize our results about the separating capacity to spaces of arbitrary dimensions.</p></sec><sec id="s26" sec-type="appendix"><title>Grid-cell-activity matrix for 1D space</title><p>The fundamental object of our combinatorial analysis is the polytope whose vertices have all possible grid-cell patterns as coordinates. Thanks to the many symmetries of this polytope, we can enumerate linearly separable dichotomies of grid-like inputs. However, such an approach makes no explicit reference the actual physical space that these grid-like inputs encode. Making these reference consists in specifying a mapping between spatial positions and grid-like inputs. Unfortunately, this generally involves breaking many of the polytope symmetries, precluding any combinatorial analysis. It is especially true if one considers spaces encoded by a subset of grid-cell patterns, as opposed to the full set <inline-formula><mml:math id="inf973"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msub><mml:mrow><mml:mi mathvariant="script">C</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="bold-italic">λ</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mstyle></mml:math></inline-formula>, a situation that leads to considering nonsymmetrical polytopes.</p><p>Let us explain this point by considering the case of a discrete 1D space where each position is marked by an integer in <inline-formula><mml:math id="inf974"><mml:mi>ℤ</mml:mi></mml:math></inline-formula>. In this setting, positional information about <inline-formula><mml:math id="inf975"><mml:mi>ℤ</mml:mi></mml:math></inline-formula> is encoded by <inline-formula><mml:math id="inf976"><mml:mi>M</mml:mi></mml:math></inline-formula> modules of grid cells with integer periods <inline-formula><mml:math id="inf977"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mi mathvariant="bold-italic">λ</mml:mi><mml:mo>=</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mi>M</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mstyle></mml:math></inline-formula>. Recall that each module comprises <inline-formula><mml:math id="inf978"><mml:msub><mml:mi>λ</mml:mi><mml:mi>m</mml:mi></mml:msub></mml:math></inline-formula> cells, each active at a distinct phase within the period <inline-formula><mml:math id="inf979"><mml:msub><mml:mi>λ</mml:mi><mml:mi>m</mml:mi></mml:msub></mml:math></inline-formula>, and that the corresponding repertoire of grid-like inputs <inline-formula><mml:math id="inf980"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msub><mml:mrow><mml:mi mathvariant="script">C</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="bold-italic">λ</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mstyle></mml:math></inline-formula> has cardinality <inline-formula><mml:math id="inf981"><mml:mrow><mml:mi mathvariant="normal">Λ</mml:mi><mml:mo>=</mml:mo><mml:mrow><mml:msubsup><mml:mo largeop="true" symmetric="true">∏</mml:mo><mml:mrow><mml:mi>m</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>M</mml:mi></mml:msubsup><mml:msub><mml:mi>λ</mml:mi><mml:mi>m</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>. Because the spatial activity of grid cells is periodic and because we consider a finite number of grid cells, the mappings between spatial positions and grid-like inputs are necessarily periodic functions <inline-formula><mml:math id="inf982"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msub><mml:mi>A</mml:mi><mml:mrow><mml:mi mathvariant="bold-italic">λ</mml:mi></mml:mrow></mml:msub><mml:mo>:</mml:mo><mml:mrow><mml:mi mathvariant="double-struck">Z</mml:mi></mml:mrow><mml:mo stretchy="false">→</mml:mo><mml:msub><mml:mrow><mml:mi mathvariant="script">C</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="bold-italic">λ</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mstyle></mml:math></inline-formula>. Let us denote by <inline-formula><mml:math id="inf983"><mml:mi>L</mml:mi></mml:math></inline-formula> the period of <inline-formula><mml:math id="inf984"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msub><mml:mi>A</mml:mi><mml:mrow><mml:mi mathvariant="bold-italic">λ</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mstyle></mml:math></inline-formula>. It is then convenient to consider the functions <inline-formula><mml:math id="inf985"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msub><mml:mi>A</mml:mi><mml:mrow><mml:mi mathvariant="bold-italic">λ</mml:mi></mml:mrow></mml:msub><mml:mo>:</mml:mo><mml:mrow><mml:mi mathvariant="double-struck">Z</mml:mi></mml:mrow><mml:mrow><mml:mo>/</mml:mo></mml:mrow><mml:mi>L</mml:mi><mml:mrow><mml:mi mathvariant="double-struck">Z</mml:mi></mml:mrow><mml:mo stretchy="false">→</mml:mo><mml:msub><mml:mrow><mml:mi mathvariant="script">C</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="bold-italic">λ</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mstyle></mml:math></inline-formula> as matrices, called grid-cell-activity matrices, whose jth column is the pattern in <inline-formula><mml:math id="inf986"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msub><mml:mrow><mml:mi mathvariant="script">C</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="bold-italic">λ</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mstyle></mml:math></inline-formula> that encodes the jth spatial position in <inline-formula><mml:math id="inf987"><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mi mathvariant="normal">…</mml:mi><mml:mo>,</mml:mo><mml:mi>L</mml:mi><mml:mo stretchy="false">}</mml:mo></mml:mrow></mml:math></inline-formula>, seen as the element <inline-formula><mml:math id="inf988"><mml:mi>j</mml:mi></mml:math></inline-formula> in <inline-formula><mml:math id="inf989"><mml:mrow><mml:mrow><mml:mi>ℤ</mml:mi><mml:mo>/</mml:mo><mml:mi>L</mml:mi></mml:mrow><mml:mo>⁢</mml:mo><mml:mi>ℤ</mml:mi></mml:mrow></mml:math></inline-formula>. In particular, the matrices <inline-formula><mml:math id="inf990"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msub><mml:mi>A</mml:mi><mml:mrow><mml:mi mathvariant="bold-italic">λ</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mstyle></mml:math></inline-formula> have <inline-formula><mml:math id="inf991"><mml:mrow><mml:mi>N</mml:mi><mml:mo>=</mml:mo><mml:mrow><mml:msubsup><mml:mo largeop="true" symmetric="true">∑</mml:mo><mml:mrow><mml:mi>m</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>M</mml:mi></mml:msubsup><mml:msub><mml:mi>λ</mml:mi><mml:mi>m</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> rows, each row corresponding to the periodic activity of a grid cell. Moreover, at every position <inline-formula><mml:math id="inf992"><mml:mi>j</mml:mi></mml:math></inline-formula>, <inline-formula><mml:math id="inf993"><mml:mrow><mml:mn>1</mml:mn><mml:mo>≤</mml:mo><mml:mi>j</mml:mi><mml:mo>≤</mml:mo><mml:mi>L</mml:mi></mml:mrow></mml:math></inline-formula>, each module has a single active cell. For the sake of clarity, here follows a concrete example of grid-cell-activity matrix for <inline-formula><mml:math id="inf994"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mi mathvariant="bold-italic">λ</mml:mi><mml:mo>=</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mn>2</mml:mn><mml:mo>,</mml:mo><mml:mn>3</mml:mn><mml:mo>,</mml:mo><mml:mn>5</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mstyle></mml:math></inline-formula>:<disp-formula id="equ64"><label>(63)</label><mml:math id="m64"><mml:mrow><mml:msub><mml:mi>A</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mn>2</mml:mn><mml:mo>,</mml:mo><mml:mn>3</mml:mn><mml:mo>,</mml:mo><mml:mn>5</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:mo>(</mml:mo><mml:mtable columnalign="center center center center center center center center center center center center center center center center center center center center center center center center center center center center center center center" columnspacing="1em" rowlines="none solid none none solid none" rowspacing="4pt"><mml:mtr><mml:mtd><mml:mn>1</mml:mn></mml:mtd><mml:mtd><mml:mrow><mml:mn>0</mml:mn></mml:mrow></mml:mtd><mml:mtd><mml:mn>1</mml:mn></mml:mtd><mml:mtd><mml:mrow><mml:mn>0</mml:mn></mml:mrow></mml:mtd><mml:mtd><mml:mn>1</mml:mn></mml:mtd><mml:mtd><mml:mrow><mml:mn>0</mml:mn></mml:mrow></mml:mtd><mml:mtd><mml:mn>1</mml:mn></mml:mtd><mml:mtd><mml:mrow><mml:mn>0</mml:mn></mml:mrow></mml:mtd><mml:mtd><mml:mn>1</mml:mn></mml:mtd><mml:mtd><mml:mrow><mml:mn>0</mml:mn></mml:mrow></mml:mtd><mml:mtd><mml:mo>…</mml:mo></mml:mtd><mml:mtd/><mml:mtd><mml:mo>…</mml:mo></mml:mtd><mml:mtd><mml:mrow><mml:mn>0</mml:mn></mml:mrow></mml:mtd><mml:mtd><mml:mn>1</mml:mn></mml:mtd><mml:mtd><mml:mrow><mml:mn>0</mml:mn></mml:mrow></mml:mtd><mml:mtd><mml:mn>1</mml:mn></mml:mtd><mml:mtd><mml:mn>0</mml:mn></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mn>0</mml:mn></mml:mtd><mml:mtd><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:mtd><mml:mtd><mml:mn>0</mml:mn></mml:mtd><mml:mtd><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:mtd><mml:mtd><mml:mn>0</mml:mn></mml:mtd><mml:mtd><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:mtd><mml:mtd><mml:mn>0</mml:mn></mml:mtd><mml:mtd><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:mtd><mml:mtd><mml:mn>0</mml:mn></mml:mtd><mml:mtd><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:mtd><mml:mtd><mml:mo>…</mml:mo></mml:mtd><mml:mtd/><mml:mtd><mml:mo>…</mml:mo></mml:mtd><mml:mtd><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:mtd><mml:mtd><mml:mn>0</mml:mn></mml:mtd><mml:mtd><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:mtd><mml:mtd><mml:mn>0</mml:mn></mml:mtd><mml:mtd><mml:mn>1</mml:mn></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mn>1</mml:mn></mml:mtd><mml:mtd><mml:mn>0</mml:mn></mml:mtd><mml:mtd><mml:mrow><mml:mn>0</mml:mn></mml:mrow></mml:mtd><mml:mtd><mml:mn>1</mml:mn></mml:mtd><mml:mtd><mml:mn>0</mml:mn></mml:mtd><mml:mtd><mml:mrow><mml:mn>0</mml:mn></mml:mrow></mml:mtd><mml:mtd><mml:mn>1</mml:mn></mml:mtd><mml:mtd><mml:mn>0</mml:mn></mml:mtd><mml:mtd><mml:mrow><mml:mn>0</mml:mn></mml:mrow></mml:mtd><mml:mtd><mml:mn>1</mml:mn></mml:mtd><mml:mtd><mml:mo>…</mml:mo></mml:mtd><mml:mtd/><mml:mtd><mml:mo>…</mml:mo></mml:mtd><mml:mtd><mml:mn>0</mml:mn></mml:mtd><mml:mtd><mml:mrow><mml:mn>0</mml:mn></mml:mrow></mml:mtd><mml:mtd><mml:mn>1</mml:mn></mml:mtd><mml:mtd><mml:mn>0</mml:mn></mml:mtd><mml:mtd><mml:mn>0</mml:mn></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mn>0</mml:mn></mml:mtd><mml:mtd><mml:mn>1</mml:mn></mml:mtd><mml:mtd><mml:mrow><mml:mn>0</mml:mn></mml:mrow></mml:mtd><mml:mtd><mml:mn>0</mml:mn></mml:mtd><mml:mtd><mml:mn>1</mml:mn></mml:mtd><mml:mtd><mml:mrow><mml:mn>0</mml:mn></mml:mrow></mml:mtd><mml:mtd><mml:mn>0</mml:mn></mml:mtd><mml:mtd><mml:mn>1</mml:mn></mml:mtd><mml:mtd><mml:mrow><mml:mn>0</mml:mn></mml:mrow></mml:mtd><mml:mtd><mml:mn>0</mml:mn></mml:mtd><mml:mtd><mml:mo>…</mml:mo></mml:mtd><mml:mtd/><mml:mtd><mml:mo>…</mml:mo></mml:mtd><mml:mtd><mml:mn>1</mml:mn></mml:mtd><mml:mtd><mml:mrow><mml:mn>0</mml:mn></mml:mrow></mml:mtd><mml:mtd><mml:mn>0</mml:mn></mml:mtd><mml:mtd><mml:mn>1</mml:mn></mml:mtd><mml:mtd><mml:mn>0</mml:mn></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mn>0</mml:mn></mml:mtd><mml:mtd><mml:mn>0</mml:mn></mml:mtd><mml:mtd><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:mtd><mml:mtd><mml:mn>0</mml:mn></mml:mtd><mml:mtd><mml:mn>0</mml:mn></mml:mtd><mml:mtd><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:mtd><mml:mtd><mml:mn>0</mml:mn></mml:mtd><mml:mtd><mml:mn>0</mml:mn></mml:mtd><mml:mtd><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:mtd><mml:mtd><mml:mn>0</mml:mn></mml:mtd><mml:mtd><mml:mo>…</mml:mo></mml:mtd><mml:mtd/><mml:mtd><mml:mo>…</mml:mo></mml:mtd><mml:mtd><mml:mn>0</mml:mn></mml:mtd><mml:mtd><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:mtd><mml:mtd><mml:mn>0</mml:mn></mml:mtd><mml:mtd><mml:mn>0</mml:mn></mml:mtd><mml:mtd><mml:mn>1</mml:mn></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mn>1</mml:mn></mml:mtd><mml:mtd><mml:mn>0</mml:mn></mml:mtd><mml:mtd><mml:mn>0</mml:mn></mml:mtd><mml:mtd><mml:mn>0</mml:mn></mml:mtd><mml:mtd><mml:mrow><mml:mn>0</mml:mn></mml:mrow></mml:mtd><mml:mtd><mml:mn>1</mml:mn></mml:mtd><mml:mtd><mml:mn>0</mml:mn></mml:mtd><mml:mtd><mml:mn>0</mml:mn></mml:mtd><mml:mtd><mml:mn>0</mml:mn></mml:mtd><mml:mtd><mml:mrow><mml:mn>0</mml:mn></mml:mrow></mml:mtd><mml:mtd><mml:mo>…</mml:mo></mml:mtd><mml:mtd/><mml:mtd><mml:mrow><mml:mo>…</mml:mo></mml:mrow></mml:mtd><mml:mtd><mml:mn>1</mml:mn></mml:mtd><mml:mtd><mml:mn>0</mml:mn></mml:mtd><mml:mtd><mml:mn>0</mml:mn></mml:mtd><mml:mtd><mml:mn>0</mml:mn></mml:mtd><mml:mtd><mml:mn>0</mml:mn></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mn>0</mml:mn></mml:mtd><mml:mtd><mml:mn>1</mml:mn></mml:mtd><mml:mtd><mml:mn>0</mml:mn></mml:mtd><mml:mtd><mml:mn>0</mml:mn></mml:mtd><mml:mtd><mml:mrow><mml:mn>0</mml:mn></mml:mrow></mml:mtd><mml:mtd><mml:mn>0</mml:mn></mml:mtd><mml:mtd><mml:mn>1</mml:mn></mml:mtd><mml:mtd><mml:mn>0</mml:mn></mml:mtd><mml:mtd><mml:mn>0</mml:mn></mml:mtd><mml:mtd><mml:mrow><mml:mn>0</mml:mn></mml:mrow></mml:mtd><mml:mtd><mml:mo>…</mml:mo></mml:mtd><mml:mtd/><mml:mtd><mml:mrow><mml:mo>…</mml:mo></mml:mrow></mml:mtd><mml:mtd><mml:mn>0</mml:mn></mml:mtd><mml:mtd><mml:mn>1</mml:mn></mml:mtd><mml:mtd><mml:mn>0</mml:mn></mml:mtd><mml:mtd><mml:mn>0</mml:mn></mml:mtd><mml:mtd><mml:mn>0</mml:mn></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mn>0</mml:mn></mml:mtd><mml:mtd><mml:mn>0</mml:mn></mml:mtd><mml:mtd><mml:mn>1</mml:mn></mml:mtd><mml:mtd><mml:mn>0</mml:mn></mml:mtd><mml:mtd><mml:mrow><mml:mn>0</mml:mn></mml:mrow></mml:mtd><mml:mtd><mml:mn>0</mml:mn></mml:mtd><mml:mtd><mml:mn>0</mml:mn></mml:mtd><mml:mtd><mml:mn>1</mml:mn></mml:mtd><mml:mtd><mml:mn>0</mml:mn></mml:mtd><mml:mtd><mml:mrow><mml:mn>0</mml:mn></mml:mrow></mml:mtd><mml:mtd><mml:mo>…</mml:mo></mml:mtd><mml:mtd/><mml:mtd><mml:mrow><mml:mo>…</mml:mo></mml:mrow></mml:mtd><mml:mtd><mml:mn>0</mml:mn></mml:mtd><mml:mtd><mml:mn>0</mml:mn></mml:mtd><mml:mtd><mml:mn>1</mml:mn></mml:mtd><mml:mtd><mml:mn>0</mml:mn></mml:mtd><mml:mtd><mml:mn>0</mml:mn></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mn>0</mml:mn></mml:mtd><mml:mtd><mml:mn>0</mml:mn></mml:mtd><mml:mtd><mml:mn>0</mml:mn></mml:mtd><mml:mtd><mml:mn>1</mml:mn></mml:mtd><mml:mtd><mml:mrow><mml:mn>0</mml:mn></mml:mrow></mml:mtd><mml:mtd><mml:mn>0</mml:mn></mml:mtd><mml:mtd><mml:mn>0</mml:mn></mml:mtd><mml:mtd><mml:mn>0</mml:mn></mml:mtd><mml:mtd><mml:mn>1</mml:mn></mml:mtd><mml:mtd><mml:mrow><mml:mn>0</mml:mn></mml:mrow></mml:mtd><mml:mtd><mml:mo>…</mml:mo></mml:mtd><mml:mtd/><mml:mtd><mml:mrow><mml:mo>…</mml:mo></mml:mrow></mml:mtd><mml:mtd><mml:mn>0</mml:mn></mml:mtd><mml:mtd><mml:mn>0</mml:mn></mml:mtd><mml:mtd><mml:mn>0</mml:mn></mml:mtd><mml:mtd><mml:mn>1</mml:mn></mml:mtd><mml:mtd><mml:mn>0</mml:mn></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mn>0</mml:mn></mml:mtd><mml:mtd><mml:mn>0</mml:mn></mml:mtd><mml:mtd><mml:mn>0</mml:mn></mml:mtd><mml:mtd><mml:mn>0</mml:mn></mml:mtd><mml:mtd><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:mtd><mml:mtd><mml:mn>0</mml:mn></mml:mtd><mml:mtd><mml:mn>0</mml:mn></mml:mtd><mml:mtd><mml:mn>0</mml:mn></mml:mtd><mml:mtd><mml:mn>0</mml:mn></mml:mtd><mml:mtd><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:mtd><mml:mtd><mml:mo>…</mml:mo></mml:mtd><mml:mtd/><mml:mtd><mml:mrow><mml:mo>…</mml:mo></mml:mrow></mml:mtd><mml:mtd><mml:mn>0</mml:mn></mml:mtd><mml:mtd><mml:mn>0</mml:mn></mml:mtd><mml:mtd><mml:mn>0</mml:mn></mml:mtd><mml:mtd><mml:mn>0</mml:mn></mml:mtd><mml:mtd><mml:mn>1</mml:mn></mml:mtd></mml:mtr></mml:mtable><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:math></disp-formula></p><p>As the labelling of grid cells is arbitrary within a module, grid-population activity is actually represented by a class of matrices, which is invariant to permutation of the grid cells <inline-formula><mml:math id="inf995"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>m</mml:mi><mml:mo>,</mml:mo><mml:mi>i</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula>, <inline-formula><mml:math id="inf996"><mml:mrow><mml:mn>1</mml:mn><mml:mo>≤</mml:mo><mml:mi>i</mml:mi><mml:mo>≤</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mi>m</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula>, within a module <inline-formula><mml:math id="inf997"><mml:mi>m</mml:mi></mml:math></inline-formula>. Here, with no loss of generality, we consider the class representatives obtained by ordering the grid cells by increasing phase within each module. This convention allows us to simply define the activity matrix <inline-formula><mml:math id="inf998"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msub><mml:mi>A</mml:mi><mml:mrow><mml:mi mathvariant="bold-italic">λ</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mstyle></mml:math></inline-formula> via the introduction of a spatial shift operator <inline-formula><mml:math id="inf999"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msub><mml:mi>J</mml:mi><mml:mrow><mml:mi mathvariant="bold-italic">λ</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mstyle></mml:math></inline-formula>. We define the shift operator <inline-formula><mml:math id="inf1000"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msub><mml:mi>J</mml:mi><mml:mrow><mml:mi mathvariant="bold-italic">λ</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mstyle></mml:math></inline-formula> as the linear operator that cyclically increments the phases by one unit within each module, that is,<disp-formula id="equ65"><label>(64)</label><mml:math id="m65"><mml:mrow><mml:mstyle displaystyle="true" scriptlevel="0"><mml:msub><mml:mi>J</mml:mi><mml:mrow><mml:mi mathvariant="bold-italic">λ</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:mo>(</mml:mo><mml:mtable columnalign="center center center center center" columnspacing="1em" rowspacing="4pt"><mml:mtr><mml:mtd><mml:msub><mml:mi>J</mml:mi><mml:mrow><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub></mml:mrow></mml:msub></mml:mtd><mml:mtd/><mml:mtd/><mml:mtd/></mml:mtr><mml:mtr><mml:mtd/><mml:mtd><mml:msub><mml:mi>J</mml:mi><mml:mrow><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msub></mml:mrow></mml:msub></mml:mtd><mml:mtd/><mml:mtd/></mml:mtr><mml:mtr><mml:mtd/><mml:mtd/><mml:mtd><mml:mo>⋱</mml:mo></mml:mtd><mml:mtd/></mml:mtr><mml:mtr><mml:mtd/><mml:mtd/><mml:mtd/><mml:mtd><mml:msub><mml:mi>J</mml:mi><mml:mrow><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mi>M</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub></mml:mtd></mml:mtr></mml:mtable><mml:mo>)</mml:mo></mml:mrow><mml:mspace width="1em"/><mml:mrow><mml:mi mathvariant="normal">w</mml:mi><mml:mi mathvariant="normal">i</mml:mi><mml:mi mathvariant="normal">t</mml:mi><mml:mi mathvariant="normal">h</mml:mi></mml:mrow><mml:mtext> </mml:mtext><mml:mspace width="1em"/><mml:msub><mml:mi>J</mml:mi><mml:mrow><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mi>m</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:mo>(</mml:mo><mml:mtable columnalign="center center center center center" columnspacing="1em" rowspacing="4pt"><mml:mtr><mml:mtd><mml:mn>0</mml:mn></mml:mtd><mml:mtd><mml:mn>1</mml:mn></mml:mtd><mml:mtd><mml:mn>0</mml:mn></mml:mtd><mml:mtd><mml:mn>0</mml:mn></mml:mtd><mml:mtd><mml:mo>…</mml:mo></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mn>0</mml:mn></mml:mtd><mml:mtd><mml:mn>0</mml:mn></mml:mtd><mml:mtd><mml:mn>1</mml:mn></mml:mtd><mml:mtd><mml:mn>0</mml:mn></mml:mtd><mml:mtd><mml:mo>…</mml:mo></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mo>⋮</mml:mo></mml:mtd><mml:mtd/><mml:mtd><mml:mo>⋱</mml:mo></mml:mtd><mml:mtd><mml:mo>⋱</mml:mo></mml:mtd><mml:mtd><mml:mo>⋱</mml:mo></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mn>1</mml:mn></mml:mtd><mml:mtd><mml:mn>0</mml:mn></mml:mtd><mml:mtd><mml:mo>…</mml:mo></mml:mtd><mml:mtd/><mml:mtd/></mml:mtr></mml:mtable><mml:mo>)</mml:mo></mml:mrow><mml:mspace width="thinmathspace"/><mml:mo>,</mml:mo></mml:mstyle></mml:mrow></mml:math></disp-formula></p><p>where <inline-formula><mml:math id="inf1001"><mml:msub><mml:mi>J</mml:mi><mml:msub><mml:mi>λ</mml:mi><mml:mi>m</mml:mi></mml:msub></mml:msub></mml:math></inline-formula> is the canonical circulant permutation matrix of order <inline-formula><mml:math id="inf1002"><mml:msub><mml:mi>λ</mml:mi><mml:mi>m</mml:mi></mml:msub></mml:math></inline-formula>. We refer to <inline-formula><mml:math id="inf1003"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msub><mml:mi>J</mml:mi><mml:mrow><mml:mi mathvariant="bold-italic">λ</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mstyle></mml:math></inline-formula> as a shift operator because its action on any vector of <inline-formula><mml:math id="inf1004"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msub><mml:mi>A</mml:mi><mml:mrow><mml:mi mathvariant="bold-italic">λ</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mstyle></mml:math></inline-formula> corresponds to a positional shift by one unit of space: if <inline-formula><mml:math id="inf1005"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msub><mml:mi mathvariant="bold-italic">c</mml:mi><mml:mrow><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mstyle></mml:math></inline-formula>, <inline-formula><mml:math id="inf1006"><mml:mrow><mml:mn>1</mml:mn><mml:mo>≤</mml:mo><mml:mi>j</mml:mi><mml:mo>≤</mml:mo><mml:mi>L</mml:mi></mml:mrow></mml:math></inline-formula>, denotes the jth column of <inline-formula><mml:math id="inf1007"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msub><mml:mi>A</mml:mi><mml:mrow><mml:mi mathvariant="bold-italic">λ</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mstyle></mml:math></inline-formula>, then <inline-formula><mml:math id="inf1008"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msub><mml:mi>J</mml:mi><mml:mrow><mml:mi mathvariant="bold-italic">λ</mml:mi></mml:mrow></mml:msub><mml:msub><mml:mi mathvariant="bold-italic">c</mml:mi><mml:mrow><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mi mathvariant="bold-italic">c</mml:mi><mml:mrow><mml:mi>j</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub></mml:mrow></mml:mstyle></mml:math></inline-formula> if <inline-formula><mml:math id="inf1009"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mi>j</mml:mi><mml:mo>§lt;</mml:mo><mml:mi>L</mml:mi></mml:mrow></mml:mstyle></mml:math></inline-formula>, and <inline-formula><mml:math id="inf1010"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msub><mml:mi>J</mml:mi><mml:mrow><mml:mi mathvariant="bold-italic">λ</mml:mi></mml:mrow></mml:msub><mml:msub><mml:mi mathvariant="bold-italic">c</mml:mi><mml:mrow><mml:mi>L</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mi mathvariant="bold-italic">c</mml:mi><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub></mml:mrow></mml:mstyle></mml:math></inline-formula>. Thus, we can define the grid-cell-activity matrix as the matrix obtained by enumerating in order the grid-cell patterns <inline-formula><mml:math id="inf1011"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msubsup><mml:mi>J</mml:mi><mml:mrow><mml:mi mathvariant="bold-italic">λ</mml:mi></mml:mrow><mml:mrow><mml:mi>k</mml:mi></mml:mrow></mml:msubsup><mml:msub><mml:mi mathvariant="bold-italic">c</mml:mi><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub></mml:mrow></mml:mstyle></mml:math></inline-formula>, <inline-formula><mml:math id="inf1012"><mml:mrow><mml:mi>k</mml:mi><mml:mo>∈</mml:mo><mml:mi>ℕ</mml:mi></mml:mrow></mml:math></inline-formula>, up to redundancies. Such a definition of the grid-cell-activity matrix prominently features the relation between the symmetries of the grid code and those of the actual physical space. In particular, it clearly shows that the formulation of our problem is invariant to rotation of the discretized space <inline-formula><mml:math id="inf1013"><mml:mrow><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mn>2</mml:mn><mml:mo>,</mml:mo><mml:mi mathvariant="normal">…</mml:mi><mml:mo>,</mml:mo><mml:mi>L</mml:mi></mml:mrow></mml:math></inline-formula>, that is, by shift in <inline-formula><mml:math id="inf1014"><mml:mrow><mml:mrow><mml:mi>ℤ</mml:mi><mml:mo>/</mml:mo><mml:mi>L</mml:mi></mml:mrow><mml:mo>⁢</mml:mo><mml:mi>ℤ</mml:mi></mml:mrow></mml:math></inline-formula>. We show that grid-cell-activity matrix can be similarly defined for lattice space of higher dimensions in Section C.3, including the relevant case of the 2D hexagonal lattice.</p><p>A key observation is that the periodicity <inline-formula><mml:math id="inf1015"><mml:mi>L</mml:mi></mml:math></inline-formula>, that is, the number of positions univocally tagged by grid-like inputs, is directly related to the periods <inline-formula><mml:math id="inf1016"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mi mathvariant="bold-italic">λ</mml:mi></mml:mrow></mml:mstyle></mml:math></inline-formula> via the Chinese remainder theorem. Indeed, by the Chinese remainder theorem, the first redundant grid-like input occurs for <inline-formula><mml:math id="inf1017"><mml:mrow><mml:mi>L</mml:mi><mml:mo>=</mml:mo><mml:mrow><mml:mi>lcm</mml:mi><mml:mo>⁢</mml:mo><mml:mrow><mml:mo>(</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:mi mathvariant="normal">…</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mi>M</mml:mi></mml:msub><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula>, therefore specifying the number of columns of the activity matrix. Thus, for pairwise coprime periods <inline-formula><mml:math id="inf1018"><mml:msub><mml:mi>λ</mml:mi><mml:mi>m</mml:mi></mml:msub></mml:math></inline-formula>, <inline-formula><mml:math id="inf1019"><mml:mrow><mml:mn>1</mml:mn><mml:mo>≤</mml:mo><mml:mi>m</mml:mi><mml:mo>≤</mml:mo><mml:mi>M</mml:mi></mml:mrow></mml:math></inline-formula>, we have <inline-formula><mml:math id="inf1020"><mml:mrow><mml:mi>L</mml:mi><mml:mo>=</mml:mo><mml:mi mathvariant="normal">Λ</mml:mi></mml:mrow></mml:math></inline-formula> and the columns of the activity matrix <inline-formula><mml:math id="inf1021"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msub><mml:mi>A</mml:mi><mml:mrow><mml:mi mathvariant="bold-italic">λ</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mstyle></mml:math></inline-formula> exhaustively enumerate all grid-like inputs in <inline-formula><mml:math id="inf1022"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msub><mml:mrow><mml:mi mathvariant="script">C</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="bold-italic">λ</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mstyle></mml:math></inline-formula>. As a result, all the combinatorial results obtained for the full set of patterns <inline-formula><mml:math id="inf1023"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msub><mml:mi mathvariant="bold-italic">C</mml:mi><mml:mrow><mml:mi mathvariant="bold-italic">λ</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mstyle></mml:math></inline-formula> directly apply over the full linear space <inline-formula><mml:math id="inf1024"><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mi mathvariant="normal">…</mml:mi><mml:mo>,</mml:mo><mml:mi>L</mml:mi><mml:mo stretchy="false">}</mml:mo></mml:mrow></mml:math></inline-formula> for pairwise coprime periods. In particular, for pairwise coprime periods, we have <inline-formula><mml:math id="inf1025"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mrow><mml:mi mathvariant="normal">r</mml:mi><mml:mi mathvariant="normal">a</mml:mi><mml:mi mathvariant="normal">n</mml:mi><mml:mi mathvariant="normal">k</mml:mi></mml:mrow><mml:mrow><mml:msub><mml:mi>A</mml:mi><mml:mrow><mml:mi mathvariant="bold-italic">λ</mml:mi></mml:mrow></mml:msub></mml:mrow><mml:mo>=</mml:mo><mml:munderover><mml:mo>∑</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mi>M</mml:mi></mml:mrow></mml:munderover><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mo>−</mml:mo><mml:mi>M</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:mstyle></mml:math></inline-formula> by Proposition 1.</p><p>Unfortunately, our combinatorial results do not directly extend to a spatial context for integer periods that are not pairwise coprime or for incomplete spaces <inline-formula><mml:math id="inf1026"><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mi mathvariant="normal">…</mml:mi><mml:mo>,</mml:mo><mml:msup><mml:mi>L</mml:mi><mml:mo>′</mml:mo></mml:msup><mml:mo stretchy="false">}</mml:mo></mml:mrow></mml:math></inline-formula>, <inline-formula><mml:math id="inf1027"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msup><mml:mi>L</mml:mi><mml:mrow><mml:mi mathvariant="normal">′</mml:mi></mml:mrow></mml:msup><mml:mo>§lt;</mml:mo><mml:mi>L</mml:mi></mml:mrow></mml:mstyle></mml:math></inline-formula>. For non-coprime periods, we have <inline-formula><mml:math id="inf1028"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mi>L</mml:mi><mml:mo>§lt;</mml:mo><mml:mi mathvariant="normal">Λ</mml:mi></mml:mrow></mml:mstyle></mml:math></inline-formula>, as exemplified by the grid-cell-activity matrix for <inline-formula><mml:math id="inf1029"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mi mathvariant="bold-italic">λ</mml:mi><mml:mo>=</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mn>2</mml:mn><mml:mo>,</mml:mo><mml:mn>8</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mstyle></mml:math></inline-formula> given by<disp-formula id="equ66"><label>(65)</label><mml:math id="m66"><mml:mrow><mml:msub><mml:mi>A</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mn>2</mml:mn><mml:mo>,</mml:mo><mml:mn>8</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:mo>(</mml:mo><mml:mtable columnalign="center center center center center center center center" columnspacing="1em" rowlines="none solid none" rowspacing="4pt"><mml:mtr><mml:mtd><mml:mn>1</mml:mn></mml:mtd><mml:mtd><mml:mrow><mml:mn>0</mml:mn></mml:mrow></mml:mtd><mml:mtd><mml:mn>1</mml:mn></mml:mtd><mml:mtd><mml:mn>0</mml:mn></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mn>0</mml:mn></mml:mtd><mml:mtd><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:mtd><mml:mtd><mml:mn>0</mml:mn></mml:mtd><mml:mtd><mml:mn>1</mml:mn></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mn>1</mml:mn></mml:mtd><mml:mtd><mml:mn>0</mml:mn></mml:mtd><mml:mtd><mml:mn>0</mml:mn></mml:mtd><mml:mtd><mml:mn>0</mml:mn></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mn>0</mml:mn></mml:mtd><mml:mtd><mml:mn>1</mml:mn></mml:mtd><mml:mtd><mml:mn>0</mml:mn></mml:mtd><mml:mtd><mml:mn>0</mml:mn></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mn>0</mml:mn></mml:mtd><mml:mtd><mml:mn>0</mml:mn></mml:mtd><mml:mtd><mml:mn>1</mml:mn></mml:mtd><mml:mtd><mml:mn>0</mml:mn></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mn>0</mml:mn></mml:mtd><mml:mtd><mml:mn>0</mml:mn></mml:mtd><mml:mtd><mml:mn>0</mml:mn></mml:mtd><mml:mtd><mml:mn>1</mml:mn></mml:mtd></mml:mtr></mml:mtable><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:math></disp-formula></p><p>which comprises only four of the eight patterns of <inline-formula><mml:math id="inf1030"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msub><mml:mrow><mml:mi mathvariant="script">C</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn><mml:mo>,</mml:mo><mml:mn>4</mml:mn></mml:mrow></mml:msub></mml:mrow></mml:mstyle></mml:math></inline-formula>. Independent of the coprimality of the periods, the grid-cell-activity matrix over incomplete spaces is simply obtained by deleting the columns corresponding to the missing positions. In particular, we clearly have <inline-formula><mml:math id="inf1031"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msup><mml:mi>L</mml:mi><mml:mrow><mml:mi mathvariant="normal">′</mml:mi></mml:mrow></mml:msup><mml:mo>§lt;</mml:mo><mml:mi>L</mml:mi><mml:mo>≤</mml:mo><mml:mi mathvariant="normal">Λ</mml:mi></mml:mrow></mml:mstyle></mml:math></inline-formula>. Excluding some grid-like inputs has two opposite implications: (i) the total number of dichotomies is reduced in keeping with considering a smaller space but (ii) some dichotomies that were previously not linearly separable can become realizable. Disentangling these opposite implications is obscured by the many broken symmetries of the polytope formed by the subset patterns under consideration. For this reason, we essentially resort to studying spatial embedding of the grid code numerically. Such numerical analysis reveals, perhaps not surprisingly, that a key role is played by the embedding dimension of the grid code, especially in relation to the concept of contiguous-separating capacity.</p></sec><sec id="s27" sec-type="appendix"><title>Contiguous-separating capacity</title><p>We define the contiguous-separating capacity of a grid code as the maximum physical extent over which all possible dichotomies are linearly separable. Classically, for <inline-formula><mml:math id="inf1032"><mml:mi>N</mml:mi></mml:math></inline-formula>-dimensional inputs in general position, the separating capacity is defined as the maximum number of patterns for which all possible dichotomies are linearly separable, without any reference to contiguity. Within this context, Cover’s counting function theorem implies that the separating capacity equals the dimension of the input space. Should the grid-like inputs be in general position in the input space, the separating capacity would thus be equal to <inline-formula><mml:math id="inf1033"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mrow><mml:mi mathvariant="normal">r</mml:mi><mml:mi mathvariant="normal">a</mml:mi><mml:mi mathvariant="normal">n</mml:mi><mml:mi mathvariant="normal">k</mml:mi></mml:mrow><mml:msub><mml:mrow><mml:mi>A</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="bold-italic">λ</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mstyle></mml:math></inline-formula>. However, being in general position requires that any submatrix formed by <inline-formula><mml:math id="inf1034"><mml:mi>r</mml:mi></mml:math></inline-formula> columns of <inline-formula><mml:math id="inf1035"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msub><mml:mi>A</mml:mi><mml:mrow><mml:mi mathvariant="bold-italic">λ</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mstyle></mml:math></inline-formula> be of rank <inline-formula><mml:math id="inf1036"><mml:mi>r</mml:mi></mml:math></inline-formula> for <inline-formula><mml:math id="inf1037"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mi>r</mml:mi><mml:mo>≤</mml:mo><mml:mrow><mml:mi mathvariant="normal">r</mml:mi><mml:mi mathvariant="normal">a</mml:mi><mml:mi mathvariant="normal">n</mml:mi><mml:mi mathvariant="normal">k</mml:mi></mml:mrow><mml:msub><mml:mrow><mml:mi>A</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="bold-italic">λ</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mstyle></mml:math></inline-formula>. This property does not hold for grid-cell-activity matrices. Moreover, we are interested in a stronger notion of separating capacity as we require that the grid-like inputs achieving separating capacity represent contiguous spatial position. Thankfully, the spatial symmetry of the grid-cell-activity matrices allows us to show that even under these restrictions the separating capacity is indeed <inline-formula><mml:math id="inf1038"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mrow><mml:mi mathvariant="normal">r</mml:mi><mml:mi mathvariant="normal">a</mml:mi><mml:mi mathvariant="normal">n</mml:mi><mml:mi mathvariant="normal">k</mml:mi></mml:mrow><mml:msub><mml:mrow><mml:mi>A</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="bold-italic">λ</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mstyle></mml:math></inline-formula>.</p></sec><sec id="s28" sec-type="appendix"><title>Proposition 9</title><p>The contiguous-separating capacity of the generic grid-cell-activity matrix <inline-formula><mml:math id="inf1039"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msub><mml:mi>A</mml:mi><mml:mrow><mml:mi mathvariant="bold-italic">λ</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mstyle></mml:math></inline-formula> is equal to <inline-formula><mml:math id="inf1040"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mrow><mml:mi mathvariant="normal">r</mml:mi><mml:mi mathvariant="normal">a</mml:mi><mml:mi mathvariant="normal">n</mml:mi><mml:mi mathvariant="normal">k</mml:mi></mml:mrow><mml:msub><mml:mrow><mml:mi>A</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="bold-italic">λ</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mstyle></mml:math></inline-formula>.</p><p>Proof.</p><p>The proof proceeds in two steps. With no loss of generality, we only consider linear classification via perceptron with zero threshold.</p><p>(i) By permutation and shift invariance, it is enough to consider contiguous columns of <inline-formula><mml:math id="inf1041"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msub><mml:mi>A</mml:mi><mml:mrow><mml:mi mathvariant="bold-italic">λ</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mstyle></mml:math></inline-formula> starting from the first column <inline-formula><mml:math id="inf1042"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msub><mml:mi mathvariant="bold-italic">c</mml:mi><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub></mml:mrow></mml:mstyle></mml:math></inline-formula>. From the definition of <inline-formula><mml:math id="inf1043"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msub><mml:mi>A</mml:mi><mml:mrow><mml:mi mathvariant="bold-italic">λ</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mstyle></mml:math></inline-formula>, the <inline-formula><mml:math id="inf1044"><mml:mi>k</mml:mi></mml:math></inline-formula> contiguous columns can be generated in terms of the shift operator <inline-formula><mml:math id="inf1045"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msub><mml:mi>J</mml:mi><mml:mrow><mml:mi mathvariant="bold-italic">λ</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mstyle></mml:math></inline-formula> as the sequence: <inline-formula><mml:math id="inf1046"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msub><mml:mi mathvariant="bold-italic">c</mml:mi><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>J</mml:mi><mml:mrow><mml:mi mathvariant="bold-italic">λ</mml:mi></mml:mrow></mml:msub><mml:msub><mml:mi mathvariant="bold-italic">c</mml:mi><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:msubsup><mml:mi>J</mml:mi><mml:mrow><mml:mi mathvariant="bold-italic">λ</mml:mi></mml:mrow><mml:mrow><mml:mi>k</mml:mi></mml:mrow></mml:msubsup><mml:msub><mml:mi mathvariant="bold-italic">c</mml:mi><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub></mml:mrow></mml:mstyle></mml:math></inline-formula>. Let us consider the sequence <inline-formula><mml:math id="inf1047"><mml:msub><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:msub><mml:mi>d</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:mo stretchy="false">}</mml:mo></mml:mrow><mml:mrow><mml:mi>k</mml:mi><mml:mo>∈</mml:mo><mml:mi>ℕ</mml:mi></mml:mrow></mml:msub></mml:math></inline-formula> defined by <inline-formula><mml:math id="inf1048"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msub><mml:mi>d</mml:mi><mml:mrow><mml:mi>k</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mi>dim</mml:mi><mml:mo>⁡</mml:mo><mml:mo fence="false" stretchy="false">{</mml:mo><mml:msub><mml:mi mathvariant="bold-italic">c</mml:mi><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>J</mml:mi><mml:mrow><mml:mi mathvariant="bold-italic">λ</mml:mi></mml:mrow></mml:msub><mml:msub><mml:mi mathvariant="bold-italic">c</mml:mi><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:msubsup><mml:mi>J</mml:mi><mml:mrow><mml:mi mathvariant="bold-italic">λ</mml:mi></mml:mrow><mml:mrow><mml:mi>k</mml:mi></mml:mrow></mml:msubsup><mml:msub><mml:mi mathvariant="bold-italic">c</mml:mi><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo fence="false" stretchy="false">}</mml:mo></mml:mrow></mml:mstyle></mml:math></inline-formula>. Posit <inline-formula><mml:math id="inf1049"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mi>r</mml:mi><mml:mo>=</mml:mo><mml:mrow><mml:mi mathvariant="normal">r</mml:mi><mml:mi mathvariant="normal">a</mml:mi><mml:mi mathvariant="normal">n</mml:mi><mml:mi mathvariant="normal">k</mml:mi></mml:mrow><mml:msub><mml:mrow><mml:mi>A</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="bold-italic">λ</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mstyle></mml:math></inline-formula>. If there is an integer <inline-formula><mml:math id="inf1050"><mml:mi>n</mml:mi></mml:math></inline-formula> such that <inline-formula><mml:math id="inf1051"><mml:mrow><mml:msub><mml:mi>d</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mi>d</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula>, then necessarily <italic>d</italic><sub><italic>k</italic></sub> is constant for <inline-formula><mml:math id="inf1052"><mml:mrow><mml:mi>k</mml:mi><mml:mo>≥</mml:mo><mml:mi>n</mml:mi></mml:mrow></mml:math></inline-formula>, and is equal to <inline-formula><mml:math id="inf1053"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:munder><mml:mo form="prefix" movablelimits="true">lim</mml:mo><mml:mrow><mml:mi>k</mml:mi><mml:mo stretchy="false">→</mml:mo><mml:mi mathvariant="normal">∞</mml:mi></mml:mrow></mml:munder><mml:msub><mml:mi>d</mml:mi><mml:mrow><mml:mi>k</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mi>d</mml:mi><mml:mrow><mml:mi>L</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mi>r</mml:mi></mml:mrow></mml:mstyle></mml:math></inline-formula>. As <inline-formula><mml:math id="inf1054"><mml:mrow><mml:msub><mml:mi>d</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:math></inline-formula> and <inline-formula><mml:math id="inf1055"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msub><mml:mi>d</mml:mi><mml:mrow><mml:mi>k</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>−</mml:mo><mml:msub><mml:mi>d</mml:mi><mml:mrow><mml:mi>k</mml:mi></mml:mrow></mml:msub><mml:mo>∈</mml:mo><mml:mo fence="false" stretchy="false">{</mml:mo><mml:mn>0</mml:mn><mml:mo>,</mml:mo><mml:mn>1</mml:mn><mml:mo fence="false" stretchy="false">}</mml:mo></mml:mrow></mml:mstyle></mml:math></inline-formula>, the preceding observation implies that <inline-formula><mml:math id="inf1056"><mml:mrow><mml:mrow><mml:msub><mml:mi>d</mml:mi><mml:mrow><mml:mi>k</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>-</mml:mo><mml:msub><mml:mi>d</mml:mi><mml:mi>k</mml:mi></mml:msub></mml:mrow><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:math></inline-formula> for <inline-formula><mml:math id="inf1057"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mn>1</mml:mn><mml:mo>≤</mml:mo><mml:mi>k</mml:mi><mml:mo>&lt;</mml:mo><mml:mrow><mml:mi mathvariant="normal">r</mml:mi><mml:mi mathvariant="normal">a</mml:mi><mml:mi mathvariant="normal">n</mml:mi><mml:mi mathvariant="normal">k</mml:mi></mml:mrow><mml:msub><mml:mrow><mml:mspace width="thinmathspace"/><mml:mi>A</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="bold-italic">λ</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mstyle></mml:math></inline-formula>. This shows that the contiguous columns <inline-formula><mml:math id="inf1058"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msub><mml:mi mathvariant="bold-italic">c</mml:mi><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mstyle></mml:math></inline-formula>, <inline-formula><mml:math id="inf1059"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mn>1</mml:mn><mml:mo>≤</mml:mo><mml:mi>i</mml:mi><mml:mo>≤</mml:mo><mml:mi>r</mml:mi></mml:mrow></mml:mstyle></mml:math></inline-formula>, are linearly independent, and thus are in general position in the input space. By Cover’s counting function theorem, all dichotomies obtained by labeling the positions <inline-formula><mml:math id="inf1060"><mml:mrow><mml:mn>1</mml:mn><mml:mo>≤</mml:mo><mml:mi>i</mml:mi><mml:mo>≤</mml:mo><mml:mi>r</mml:mi></mml:mrow></mml:math></inline-formula> with <inline-formula><mml:math id="inf1061"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mi>r</mml:mi><mml:mo>=</mml:mo><mml:mrow><mml:mi mathvariant="normal">r</mml:mi><mml:mi mathvariant="normal">a</mml:mi><mml:mi mathvariant="normal">n</mml:mi><mml:mi mathvariant="normal">k</mml:mi></mml:mrow><mml:msub><mml:mrow><mml:mspace width="thinmathspace"/><mml:mi>A</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="bold-italic">λ</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mstyle></mml:math></inline-formula> are linearly separable.</p><p>(ii) Considering an extra position, that is, including the column <inline-formula><mml:math id="inf1062"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msub><mml:mi mathvariant="bold-italic">c</mml:mi><mml:mrow><mml:mi>r</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub></mml:mrow></mml:mstyle></mml:math></inline-formula>, produces at least a dichotomy that is not linearly separable. We proceed by contradiction. Assume that all dichotomies of the <inline-formula><mml:math id="inf1063"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mi>r</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:mstyle></mml:math></inline-formula> positions, that is, of the columns <inline-formula><mml:math id="inf1064"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msub><mml:mi mathvariant="bold-italic">c</mml:mi><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mstyle></mml:math></inline-formula> with <inline-formula><mml:math id="inf1065"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mn>1</mml:mn><mml:mo>≤</mml:mo><mml:mi>i</mml:mi><mml:mo>≤</mml:mo><mml:mi>r</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:mstyle></mml:math></inline-formula>, are linearly separable. By Cover’s counting function theorem, this is equivalent to assuming that all dichotomies of the first <inline-formula><mml:math id="inf1066"><mml:mi>r</mml:mi></mml:math></inline-formula> positions, that is, of the columns <inline-formula><mml:math id="inf1067"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msub><mml:mi mathvariant="bold-italic">c</mml:mi><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mstyle></mml:math></inline-formula> with <inline-formula><mml:math id="inf1068"><mml:mrow><mml:mn>1</mml:mn><mml:mo>≤</mml:mo><mml:mi>i</mml:mi><mml:mo>≤</mml:mo><mml:mi>r</mml:mi></mml:mrow></mml:math></inline-formula>, can be achieved by an <inline-formula><mml:math id="inf1069"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mpadded width="-1.7pt"><mml:mi>r</mml:mi></mml:mpadded><mml:mo rspace="0.8pt">-</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula>-dimensional hyperplane passing through <inline-formula><mml:math id="inf1070"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msub><mml:mi mathvariant="bold-italic">c</mml:mi><mml:mrow><mml:mi>r</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub></mml:mrow></mml:mstyle></mml:math></inline-formula>. In other words, for all <inline-formula><mml:math id="inf1071"><mml:mi>r</mml:mi></mml:math></inline-formula>-dichotomies <inline-formula><mml:math id="inf1072"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mi mathvariant="bold-italic">y</mml:mi></mml:mrow></mml:mstyle></mml:math></inline-formula> in <inline-formula><mml:math id="inf1073"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mo fence="false" stretchy="false">{</mml:mo><mml:mn>0</mml:mn><mml:mo>,</mml:mo><mml:mn>1</mml:mn><mml:msup><mml:mo fence="false" stretchy="false">}</mml:mo><mml:mi>r</mml:mi></mml:msup></mml:mrow></mml:mstyle></mml:math></inline-formula>, there is a weight vector <inline-formula><mml:math id="inf1074"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mi mathvariant="bold-italic">w</mml:mi></mml:mrow></mml:mstyle></mml:math></inline-formula> such that <inline-formula><mml:math id="inf1075"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msub><mml:mi>y</mml:mi><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:msup><mml:mi mathvariant="bold-italic">w</mml:mi><mml:mrow><mml:mi>T</mml:mi></mml:mrow></mml:msup><mml:msub><mml:mi mathvariant="bold-italic">c</mml:mi><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mo>&gt;</mml:mo><mml:mn>0</mml:mn></mml:mrow></mml:mstyle></mml:math></inline-formula> for <inline-formula><mml:math id="inf1076"><mml:mrow><mml:mn>1</mml:mn><mml:mo>≤</mml:mo><mml:mi>i</mml:mi><mml:mo>≤</mml:mo><mml:mi>r</mml:mi></mml:mrow></mml:math></inline-formula> and such that <inline-formula><mml:math id="inf1077"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msup><mml:mi>w</mml:mi><mml:mrow><mml:mi>T</mml:mi></mml:mrow></mml:msup><mml:msub><mml:mi mathvariant="bold-italic">c</mml:mi><mml:mrow><mml:mi>r</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mn>0</mml:mn></mml:mrow></mml:mstyle></mml:math></inline-formula>. However, by linear dependence, there are nonzero coefficients <italic>a</italic><sub><italic>i</italic></sub> such that <inline-formula><mml:math id="inf1078"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msub><mml:mi mathvariant="bold-italic">c</mml:mi><mml:mrow><mml:mi>r</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:munderover><mml:mo>∑</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mi>r</mml:mi></mml:mrow></mml:munderover><mml:msub><mml:mi>a</mml:mi><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:msub><mml:mi mathvariant="bold-italic">c</mml:mi><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mstyle></mml:math></inline-formula>, so that for any <inline-formula><mml:math id="inf1079"><mml:mi>r</mml:mi></mml:math></inline-formula>-dichotomy, we can find <inline-formula><mml:math id="inf1080"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mi mathvariant="bold-italic">w</mml:mi></mml:mrow></mml:mstyle></mml:math></inline-formula> achieving that dichotomy and such that<disp-formula id="equ67"><label>(66)</label><mml:math id="m67"><mml:mrow><mml:mstyle displaystyle="true" scriptlevel="0"><mml:munderover><mml:mo>∑</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mi>r</mml:mi></mml:mrow></mml:munderover><mml:msub><mml:mi>a</mml:mi><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:msup><mml:mi mathvariant="bold-italic">w</mml:mi><mml:mrow><mml:mi>T</mml:mi></mml:mrow></mml:msup><mml:msub><mml:mi mathvariant="bold-italic">c</mml:mi><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mn>0</mml:mn><mml:mo>.</mml:mo></mml:mstyle></mml:mrow></mml:math></disp-formula></p><p>Considering a dichotomy for which <inline-formula><mml:math id="inf1081"><mml:mrow><mml:msub><mml:mi>y</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:msub><mml:mi>a</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>/</mml:mo><mml:mrow><mml:mo stretchy="false">|</mml:mo><mml:msub><mml:mi>a</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo stretchy="false">|</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula> for nonzero coefficients yields<disp-formula id="equ68"><label>(67)</label><mml:math id="m68"><mml:mrow><mml:mstyle displaystyle="true" scriptlevel="0"><mml:munderover><mml:mo>∑</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mi>r</mml:mi></mml:mrow></mml:munderover><mml:msub><mml:mi>a</mml:mi><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:msup><mml:mi mathvariant="bold-italic">w</mml:mi><mml:mrow><mml:mi>T</mml:mi></mml:mrow></mml:msup><mml:msub><mml:mi mathvariant="bold-italic">c</mml:mi><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:munderover><mml:mo>∑</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mi>r</mml:mi></mml:mrow></mml:munderover><mml:mrow><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:msub><mml:mi>a</mml:mi><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mrow><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:mrow><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:msup><mml:mi mathvariant="bold-italic">w</mml:mi><mml:mrow><mml:mi>T</mml:mi></mml:mrow></mml:msup><mml:msub><mml:mi mathvariant="bold-italic">c</mml:mi><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mrow><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:mo>&gt;</mml:mo><mml:mn>0</mml:mn><mml:mo>.</mml:mo></mml:mstyle></mml:mrow></mml:math></disp-formula></p><p>which is a contradiction with (66).</p><p>The above proposition specifies <inline-formula><mml:math id="inf1082"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mrow><mml:mi mathvariant="normal">r</mml:mi><mml:mi mathvariant="normal">a</mml:mi><mml:mi mathvariant="normal">n</mml:mi><mml:mi mathvariant="normal">k</mml:mi></mml:mrow><mml:msub><mml:mrow><mml:mi>A</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="bold-italic">λ</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mstyle></mml:math></inline-formula> as the contiguous-separating capacity for 1D spatial model. This rank also specifies the dimension of the space containing the subset of grid-like inputs to be linearly classified. For pairwise coprime periods <inline-formula><mml:math id="inf1083"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mi mathvariant="bold-italic">λ</mml:mi></mml:mrow></mml:mstyle></mml:math></inline-formula>, Proposition 1 shows that <inline-formula><mml:math id="inf1084"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mrow><mml:mi mathvariant="normal">r</mml:mi><mml:mi mathvariant="normal">a</mml:mi><mml:mi mathvariant="normal">n</mml:mi><mml:mi mathvariant="normal">k</mml:mi></mml:mrow><mml:msub><mml:mrow><mml:mi>A</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="bold-italic">λ</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:munderover><mml:mo>∑</mml:mo><mml:mrow><mml:mi>m</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mi>M</mml:mi></mml:mrow></mml:munderover><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mi>m</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mstyle></mml:math></inline-formula>. The following proposition generalizes this result to generic integer periods.</p></sec><sec id="s29" sec-type="appendix"><title>Proposition 10</title><p>Let <inline-formula><mml:math id="inf1085"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msub><mml:mi>A</mml:mi><mml:mrow><mml:mi mathvariant="bold-italic">λ</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mstyle></mml:math></inline-formula> denote the grid-cell-activity matrix specified by <italic>M</italic> grid modules with integer periods <inline-formula><mml:math id="inf1086"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mi mathvariant="bold-italic">λ</mml:mi><mml:mo>=</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mi>M</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mstyle></mml:math></inline-formula>. The rank of the activity matrix <italic>A</italic><sub>λ</sub> is given by<disp-formula id="equ69"><label>(68)</label><mml:math id="m69"><mml:mrow><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mi mathvariant="normal">r</mml:mi><mml:mi mathvariant="normal">a</mml:mi><mml:mi mathvariant="normal">n</mml:mi><mml:mi mathvariant="normal">k</mml:mi></mml:mrow><mml:mrow><mml:mspace width="thinmathspace"/><mml:msub><mml:mi>A</mml:mi><mml:mrow><mml:mi mathvariant="bold-italic">λ</mml:mi></mml:mrow></mml:msub></mml:mrow><mml:mo>=</mml:mo><mml:munderover><mml:mo>∑</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mi>M</mml:mi></mml:mrow></mml:munderover><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mo>−</mml:mo><mml:munder><mml:mo>∑</mml:mo><mml:mrow><mml:mn>1</mml:mn><mml:mo>≤</mml:mo><mml:mi>i</mml:mi><mml:mo>&lt;</mml:mo><mml:mi>j</mml:mi><mml:mo>≤</mml:mo><mml:mi>M</mml:mi></mml:mrow></mml:munder><mml:mo form="prefix" movablelimits="true">gcd</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mo>+</mml:mo><mml:munder><mml:mo>∑</mml:mo><mml:mrow><mml:mn>1</mml:mn><mml:mo>≤</mml:mo><mml:mi>i</mml:mi><mml:mo>&lt;</mml:mo><mml:mi>j</mml:mi><mml:mo>&lt;</mml:mo><mml:mi>k</mml:mi><mml:mo>≤</mml:mo><mml:mi>M</mml:mi></mml:mrow></mml:munder><mml:mo form="prefix" movablelimits="true">gcd</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mi>k</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mo>−</mml:mo><mml:mo>⋯</mml:mo><mml:mo>+</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mo>−</mml:mo><mml:mn>1</mml:mn><mml:msup><mml:mo stretchy="false">)</mml:mo><mml:mrow><mml:mi>M</mml:mi><mml:mo>−</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msup><mml:mo form="prefix" movablelimits="true">gcd</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mi>M</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:munderover><mml:mo>∑</mml:mo><mml:mrow><mml:mi>k</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mi>M</mml:mi></mml:mrow></mml:munderover><mml:mo stretchy="false">(</mml:mo><mml:mo>−</mml:mo><mml:mn>1</mml:mn><mml:msup><mml:mo stretchy="false">)</mml:mo><mml:mrow><mml:mi>k</mml:mi><mml:mo>−</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msup><mml:munder><mml:mo>∑</mml:mo><mml:mrow><mml:mi>S</mml:mi><mml:mo>⊂</mml:mo><mml:mi mathvariant="bold-italic">λ</mml:mi><mml:mo>,</mml:mo><mml:mrow><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:mi>S</mml:mi><mml:mrow><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:mi>k</mml:mi></mml:mrow></mml:munder><mml:mo form="prefix" movablelimits="true">gcd</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi>S</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mstyle></mml:mrow></mml:math></disp-formula></p><p>where <inline-formula><mml:math id="inf1087"><mml:mi>S</mml:mi></mml:math></inline-formula> is a subset of integer periods and <inline-formula><mml:math id="inf1088"><mml:mrow><mml:mo mathvariant="normal" stretchy="false">|</mml:mo><mml:mi>S</mml:mi><mml:mo mathvariant="normal" stretchy="false">|</mml:mo></mml:mrow></mml:math></inline-formula> denotes the cardinality of the set <inline-formula><mml:math id="inf1089"><mml:mi>S</mml:mi></mml:math></inline-formula>. If the periods are pairwise coprime, the above formula yields <inline-formula><mml:math id="inf1090"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mrow><mml:mi mathvariant="normal">r</mml:mi><mml:mi mathvariant="normal">a</mml:mi><mml:mi mathvariant="normal">n</mml:mi><mml:mi mathvariant="normal">k</mml:mi></mml:mrow><mml:mrow><mml:msub><mml:mi>A</mml:mi><mml:mrow><mml:mi mathvariant="bold-italic">λ</mml:mi></mml:mrow></mml:msub></mml:mrow><mml:mo>=</mml:mo><mml:munderover><mml:mo>∑</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mi>M</mml:mi></mml:mrow></mml:munderover><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mo>−</mml:mo><mml:mi>M</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:mstyle></mml:math></inline-formula>.</p><p>Proof. The proof will proceed in three steps.</p><p>(i) The first step is to realize that <inline-formula><mml:math id="inf1091"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mrow><mml:mi mathvariant="normal">r</mml:mi><mml:mi mathvariant="normal">a</mml:mi><mml:mi mathvariant="normal">n</mml:mi><mml:mi mathvariant="normal">k</mml:mi></mml:mrow><mml:mrow><mml:msub><mml:mi>A</mml:mi><mml:mrow><mml:mi mathvariant="bold-italic">λ</mml:mi></mml:mrow></mml:msub></mml:mrow><mml:mo>=</mml:mo><mml:mrow><mml:mi mathvariant="normal">r</mml:mi><mml:mi mathvariant="normal">a</mml:mi><mml:mi mathvariant="normal">n</mml:mi><mml:mi mathvariant="normal">k</mml:mi></mml:mrow><mml:mrow><mml:msubsup><mml:mi>A</mml:mi><mml:mrow><mml:mi mathvariant="bold-italic">λ</mml:mi></mml:mrow><mml:mrow><mml:mi>T</mml:mi></mml:mrow></mml:msubsup></mml:mrow><mml:mo>=</mml:mo><mml:mi>dim</mml:mi><mml:mo>⁡</mml:mo><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msub><mml:mi>V</mml:mi><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:mo>…</mml:mo><mml:mo>+</mml:mo><mml:msub><mml:mi>V</mml:mi><mml:mrow><mml:mi>M</mml:mi></mml:mrow></mml:msub></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mstyle></mml:math></inline-formula>, where the vector spaces <inline-formula><mml:math id="inf1092"><mml:msub><mml:mi>V</mml:mi><mml:mi>m</mml:mi></mml:msub></mml:math></inline-formula>, <inline-formula><mml:math id="inf1093"><mml:mrow><mml:mn>1</mml:mn><mml:mo>≤</mml:mo><mml:mi>m</mml:mi><mml:mo>≤</mml:mo><mml:mi>M</mml:mi></mml:mrow></mml:math></inline-formula>, are generated by the rows of the mth module of the activity matrix. Then, the exclusion-inclusion principle applied to the sum of <inline-formula><mml:math id="inf1094"><mml:mrow><mml:msub><mml:mi>V</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>+</mml:mo><mml:mi mathvariant="normal">…</mml:mi><mml:mo>+</mml:mo><mml:msub><mml:mi>V</mml:mi><mml:mi>M</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> yields an expression for  <italic>A</italic><sub>λ</sub> as the alternated sum:<disp-formula id="equ70"><label>(69)</label><mml:math id="m70"><mml:mrow><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mi mathvariant="normal">r</mml:mi><mml:mi mathvariant="normal">a</mml:mi><mml:mi mathvariant="normal">n</mml:mi><mml:mi mathvariant="normal">k</mml:mi></mml:mrow><mml:mtext> </mml:mtext><mml:mrow><mml:mspace width="thinmathspace"/><mml:msub><mml:mi>A</mml:mi><mml:mrow><mml:mi mathvariant="bold-italic">λ</mml:mi></mml:mrow></mml:msub></mml:mrow><mml:mo>=</mml:mo><mml:mi>dim</mml:mi><mml:mo>⁡</mml:mo><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msub><mml:mi>V</mml:mi><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:mo>…</mml:mo><mml:mo>+</mml:mo><mml:msub><mml:mi>V</mml:mi><mml:mrow><mml:mi>M</mml:mi></mml:mrow></mml:msub></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mstyle></mml:mrow></mml:math></disp-formula><disp-formula id="equ71"><label>(70)</label><mml:math id="m71"><mml:mrow><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mo>=</mml:mo><mml:munderover><mml:mo>∑</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mi>M</mml:mi></mml:mrow></mml:munderover><mml:mi>dim</mml:mi><mml:mo>⁡</mml:mo><mml:msub><mml:mi>V</mml:mi><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mo>−</mml:mo><mml:munder><mml:mo>∑</mml:mo><mml:mrow><mml:mn>1</mml:mn><mml:mo>≤</mml:mo><mml:mi>i</mml:mi><mml:mo>§lt;</mml:mo><mml:mi>j</mml:mi><mml:mo>≤</mml:mo><mml:mi>M</mml:mi></mml:mrow></mml:munder><mml:mi>dim</mml:mi><mml:mo>⁡</mml:mo><mml:msub><mml:mi>V</mml:mi><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mo>∩</mml:mo><mml:msub><mml:mi>V</mml:mi><mml:mrow><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:munder><mml:mo>∑</mml:mo><mml:mrow><mml:mn>1</mml:mn><mml:mo>≤</mml:mo><mml:mi>i</mml:mi><mml:mo>§lt;</mml:mo><mml:mi>j</mml:mi><mml:mo>§lt;</mml:mo><mml:mi>k</mml:mi><mml:mo>≤</mml:mo><mml:mi>M</mml:mi></mml:mrow></mml:munder><mml:mi>dim</mml:mi><mml:mo>⁡</mml:mo><mml:msub><mml:mi>V</mml:mi><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mo>∩</mml:mo><mml:msub><mml:mi>V</mml:mi><mml:mrow><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>∩</mml:mo><mml:msub><mml:mi>V</mml:mi><mml:mrow><mml:mi>k</mml:mi></mml:mrow></mml:msub><mml:mo>−</mml:mo><mml:mo>…</mml:mo><mml:mspace width="thinmathspace"/><mml:mo>.</mml:mo></mml:mstyle></mml:mrow></mml:math></disp-formula></p><p>By definition of the activity matrix, the space <inline-formula><mml:math id="inf1095"><mml:msub><mml:mi>V</mml:mi><mml:mi>m</mml:mi></mml:msub></mml:math></inline-formula> is generated by <inline-formula><mml:math id="inf1096"><mml:msub><mml:mi>λ</mml:mi><mml:mi>m</mml:mi></mml:msub></mml:math></inline-formula> row vectors, which are cyclically permuted versions of the <inline-formula><mml:math id="inf1097"><mml:msub><mml:mi>λ</mml:mi><mml:mi>m</mml:mi></mml:msub></mml:math></inline-formula>-periodic vector <inline-formula><mml:math id="inf1098"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msub><mml:mrow><mml:mi mathvariant="bold-italic">r</mml:mi></mml:mrow><mml:mrow><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mi>m</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mn>0</mml:mn><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:mn>0</mml:mn><mml:mrow><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mn>0</mml:mn><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:mn>0</mml:mn><mml:mrow><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mn>0</mml:mn><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mstyle></mml:math></inline-formula>. In particular, these <inline-formula><mml:math id="inf1099"><mml:msub><mml:mi>λ</mml:mi><mml:mi>m</mml:mi></mml:msub></mml:math></inline-formula> row vectors can be enumerated by iterated application of <inline-formula><mml:math id="inf1100"><mml:mi>J</mml:mi></mml:math></inline-formula>, the canonical <inline-formula><mml:math id="inf1101"><mml:mi>L</mml:mi></mml:math></inline-formula>-dimensional circulant permutation operator. The resulting sequence <inline-formula><mml:math id="inf1102"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msub><mml:mrow><mml:mi mathvariant="bold-italic">r</mml:mi></mml:mrow><mml:mrow><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mi>m</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:mi>J</mml:mi><mml:mrow><mml:mi mathvariant="bold-italic">r</mml:mi></mml:mrow><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:msup><mml:mi>J</mml:mi><mml:mrow><mml:mrow><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mi>m</mml:mi></mml:mrow></mml:msub></mml:mrow><mml:mo>−</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msup><mml:msub><mml:mrow><mml:mi mathvariant="bold-italic">r</mml:mi></mml:mrow><mml:mrow><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mi>m</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub></mml:mrow></mml:mstyle></mml:math></inline-formula> actually forms a basis of <inline-formula><mml:math id="inf1103"><mml:msub><mml:mi>V</mml:mi><mml:mi>m</mml:mi></mml:msub></mml:math></inline-formula>, identified to the space of <inline-formula><mml:math id="inf1104"><mml:msub><mml:mi>λ</mml:mi><mml:mi>m</mml:mi></mml:msub></mml:math></inline-formula>-periodic vectors of length <inline-formula><mml:math id="inf1105"><mml:mi>L</mml:mi></mml:math></inline-formula>, and thus <inline-formula><mml:math id="inf1106"><mml:mrow><mml:mrow><mml:mo>dim</mml:mo><mml:mo>⁡</mml:mo><mml:msub><mml:mi>V</mml:mi><mml:mi>m</mml:mi></mml:msub></mml:mrow><mml:mo>=</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mi>m</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula>. The announced formula will follow from evaluation of the dimension of the intersection of the vector spaces <inline-formula><mml:math id="inf1107"><mml:msub><mml:mi>V</mml:mi><mml:mi>m</mml:mi></mml:msub></mml:math></inline-formula>.</p><p>(ii) The second step is to observe that one can specify the set of spaces <inline-formula><mml:math id="inf1108"><mml:msub><mml:mi>V</mml:mi><mml:mi>m</mml:mi></mml:msub></mml:math></inline-formula>, <inline-formula><mml:math id="inf1109"><mml:mrow><mml:mn>1</mml:mn><mml:mo>≤</mml:mo><mml:mi>m</mml:mi><mml:mo>≤</mml:mo><mml:mi>M</mml:mi></mml:mrow></mml:math></inline-formula>, as the span of vectors chosen from a common basis of <inline-formula><mml:math id="inf1110"><mml:msup><mml:mi>ℝ</mml:mi><mml:mi>L</mml:mi></mml:msup></mml:math></inline-formula>, where we recall that <inline-formula><mml:math id="inf1111"><mml:mrow><mml:mi>L</mml:mi><mml:mo>=</mml:mo><mml:mrow><mml:mi>lcm</mml:mi><mml:mo>⁢</mml:mo><mml:mrow><mml:mo>(</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:mi mathvariant="normal">…</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mi>M</mml:mi></mml:msub><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula>. We identify such a common basis by considering the action of the operator <inline-formula><mml:math id="inf1112"><mml:mi>J</mml:mi></mml:math></inline-formula> on <inline-formula><mml:math id="inf1113"><mml:mi>L</mml:mi></mml:math></inline-formula>-dimensional periodic vectors. As a circulant permutation operator, <inline-formula><mml:math id="inf1114"><mml:mi>J</mml:mi></mml:math></inline-formula> admits a diagonal matrix representation in the basis of eigenvectors <inline-formula><mml:math id="inf1115"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mo fence="false" stretchy="false">{</mml:mo><mml:msub><mml:mi mathvariant="bold-italic">e</mml:mi><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mo fence="false" stretchy="false">}</mml:mo></mml:mrow></mml:mstyle></mml:math></inline-formula>, <inline-formula><mml:math id="inf1116"><mml:mrow><mml:mn>1</mml:mn><mml:mo>≤</mml:mo><mml:mi>i</mml:mi><mml:mo>≤</mml:mo><mml:mi>L</mml:mi></mml:mrow></mml:math></inline-formula>,<disp-formula id="equ72"><label>(71)</label><mml:math id="m72"><mml:mrow><mml:mstyle displaystyle="true" scriptlevel="0"><mml:msub><mml:mi mathvariant="bold-italic">e</mml:mi><mml:mrow><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:msub><mml:mi>ω</mml:mi><mml:mrow><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msubsup><mml:mi>ω</mml:mi><mml:mrow><mml:mi>j</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msubsup><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:msubsup><mml:mi>ω</mml:mi><mml:mrow><mml:mi>j</mml:mi></mml:mrow><mml:mrow><mml:mi>L</mml:mi><mml:mo>−</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msubsup><mml:mo stretchy="false">)</mml:mo><mml:mo>,</mml:mo></mml:mstyle></mml:mrow></mml:math></disp-formula></p><p>associated to the eigenvalue <inline-formula><mml:math id="inf1117"><mml:mrow><mml:msub><mml:mi>ω</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:msup><mml:mi>e</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>⁢</mml:mo><mml:mfrac><mml:mrow><mml:mn>2</mml:mn><mml:mo>⁢</mml:mo><mml:mi>π</mml:mi><mml:mo>⁢</mml:mo><mml:mi>j</mml:mi></mml:mrow><mml:mi>L</mml:mi></mml:mfrac></mml:mrow></mml:msup></mml:mrow></mml:math></inline-formula>, where <inline-formula><mml:math id="inf1118"><mml:mrow><mml:msup><mml:mi>i</mml:mi><mml:mn>2</mml:mn></mml:msup><mml:mo>=</mml:mo><mml:mrow><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:mrow></mml:math></inline-formula>. Moreover, <inline-formula><mml:math id="inf1119"><mml:mi>J</mml:mi></mml:math></inline-formula> clearly preserves periodicity when acting on row vectors in <inline-formula><mml:math id="inf1120"><mml:msup><mml:mi>ℝ</mml:mi><mml:mi>L</mml:mi></mml:msup></mml:math></inline-formula>, so that the spaces <inline-formula><mml:math id="inf1121"><mml:msub><mml:mi>V</mml:mi><mml:mi>m</mml:mi></mml:msub></mml:math></inline-formula>, <inline-formula><mml:math id="inf1122"><mml:mrow><mml:mn>1</mml:mn><mml:mo>≤</mml:mo><mml:mi>m</mml:mi><mml:mo>≤</mml:mo><mml:mi>M</mml:mi></mml:mrow></mml:math></inline-formula>, are stable by <inline-formula><mml:math id="inf1123"><mml:mi>J</mml:mi></mml:math></inline-formula>. As a consequence, each space <inline-formula><mml:math id="inf1124"><mml:msub><mml:mi>V</mml:mi><mml:mi>m</mml:mi></mml:msub></mml:math></inline-formula> can be represented as the span of a subset of the eigenvectors of <inline-formula><mml:math id="inf1125"><mml:mi>J</mml:mi></mml:math></inline-formula>. In principle, the existence of a basis spanning the spaces <inline-formula><mml:math id="inf1126"><mml:msub><mml:mi>V</mml:mi><mml:mi>m</mml:mi></mml:msub></mml:math></inline-formula>, <inline-formula><mml:math id="inf1127"><mml:mrow><mml:mn>1</mml:mn><mml:mo>≤</mml:mo><mml:mi>m</mml:mi><mml:mo>≤</mml:mo><mml:mi>M</mml:mi></mml:mrow></mml:math></inline-formula>, allows one to compute the dimension of the intersections of these spaces by counting the number of common basis elements in their span.</p><p>(iii)The last step is to show that counting the number of common basis elements <inline-formula><mml:math id="inf1128"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msub><mml:mrow><mml:mi mathvariant="bold-italic">e</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mstyle></mml:math></inline-formula> in the subsets of <inline-formula><mml:math id="inf1129"><mml:msub><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:msub><mml:mi>V</mml:mi><mml:mi>m</mml:mi></mml:msub><mml:mo stretchy="false">}</mml:mo></mml:mrow><mml:mrow><mml:mn>1</mml:mn><mml:mo>≤</mml:mo><mml:mi>m</mml:mi><mml:mo>≤</mml:mo><mml:mi>M</mml:mi></mml:mrow></mml:msub></mml:math></inline-formula> yields the announced formula. Proving this point relies on elementary results from the theory of cyclic groups. Let us first consider the basis elements generating <inline-formula><mml:math id="inf1130"><mml:msub><mml:mi>V</mml:mi><mml:mi>m</mml:mi></mml:msub></mml:math></inline-formula>, which are the elements <inline-formula><mml:math id="inf1131"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msub><mml:mi mathvariant="bold-italic">e</mml:mi><mml:mrow><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mstyle></mml:math></inline-formula> that are <inline-formula><mml:math id="inf1132"><mml:msub><mml:mi>λ</mml:mi><mml:mi>m</mml:mi></mml:msub></mml:math></inline-formula>-periodic. These basis elements are precisely those for which <inline-formula><mml:math id="inf1133"><mml:mrow><mml:msubsup><mml:mi>ω</mml:mi><mml:mi>j</mml:mi><mml:msub><mml:mi>λ</mml:mi><mml:mi>m</mml:mi></mml:msub></mml:msubsup><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:math></inline-formula>, that is, <inline-formula><mml:math id="inf1134"><mml:mrow><mml:mrow><mml:msub><mml:mi>λ</mml:mi><mml:mi>m</mml:mi></mml:msub><mml:mo>⁢</mml:mo><mml:mi>j</mml:mi></mml:mrow><mml:mo>=</mml:mo><mml:mn>0</mml:mn></mml:mrow></mml:math></inline-formula> in the cyclic group <inline-formula><mml:math id="inf1135"><mml:mrow><mml:mrow><mml:mi>ℤ</mml:mi><mml:mo>/</mml:mo><mml:mi>L</mml:mi></mml:mrow><mml:mo>⁢</mml:mo><mml:mi>ℤ</mml:mi></mml:mrow></mml:math></inline-formula>. Considering the integers <inline-formula><mml:math id="inf1136"><mml:mi>j</mml:mi></mml:math></inline-formula> as elements of <inline-formula><mml:math id="inf1137"><mml:mrow><mml:mrow><mml:mi>ℤ</mml:mi><mml:mo>/</mml:mo><mml:mi>L</mml:mi></mml:mrow><mml:mo>⁢</mml:mo><mml:mi>ℤ</mml:mi></mml:mrow></mml:math></inline-formula>, we can then specify the basis vectors generating <inline-formula><mml:math id="inf1138"><mml:msub><mml:mi>V</mml:mi><mml:mi>m</mml:mi></mml:msub></mml:math></inline-formula> by invoking the subgroup structure of the cyclic groups. Specifically, the basis elements generating <inline-formula><mml:math id="inf1139"><mml:msub><mml:mi>V</mml:mi><mml:mi>m</mml:mi></mml:msub></mml:math></inline-formula> are indexed by the elements of the unique subgroup of order <inline-formula><mml:math id="inf1140"><mml:msub><mml:mi>λ</mml:mi><mml:mi>m</mml:mi></mml:msub></mml:math></inline-formula> in <inline-formula><mml:math id="inf1141"><mml:mrow><mml:mrow><mml:mi>ℤ</mml:mi><mml:mo>/</mml:mo><mml:mi>L</mml:mi></mml:mrow><mml:mo>⁢</mml:mo><mml:mi>ℤ</mml:mi></mml:mrow></mml:math></inline-formula>. Thus, as expected, the number of basis elements equates the otherwise known dimension of <inline-formula><mml:math id="inf1142"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msub><mml:mi>V</mml:mi><mml:mrow><mml:mi>m</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mstyle></mml:math></inline-formula>. Let us then consider the basis elements generating the intersection space <inline-formula><mml:math id="inf1143"><mml:mrow><mml:msub><mml:mi>V</mml:mi><mml:mi>m</mml:mi></mml:msub><mml:mo>∩</mml:mo><mml:msub><mml:mi>V</mml:mi><mml:mi>n</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula>, <inline-formula><mml:math id="inf1144"><mml:mrow><mml:mi>m</mml:mi><mml:mo>≠</mml:mo><mml:mi>n</mml:mi></mml:mrow></mml:math></inline-formula>, which are the elements <inline-formula><mml:math id="inf1145"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msub><mml:mi mathvariant="bold-italic">e</mml:mi><mml:mrow><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mstyle></mml:math></inline-formula> that are both <inline-formula><mml:math id="inf1146"><mml:msub><mml:mi>λ</mml:mi><mml:mi>m</mml:mi></mml:msub></mml:math></inline-formula>-periodic and <inline-formula><mml:math id="inf1147"><mml:msub><mml:mi>λ</mml:mi><mml:mi>n</mml:mi></mml:msub></mml:math></inline-formula>-periodic. These basis elements correspond to those indices <inline-formula><mml:math id="inf1148"><mml:mi>j</mml:mi></mml:math></inline-formula> for which we have <inline-formula><mml:math id="inf1149"><mml:mrow><mml:mrow><mml:msub><mml:mi>λ</mml:mi><mml:mi>m</mml:mi></mml:msub><mml:mo>⁢</mml:mo><mml:mi>j</mml:mi></mml:mrow><mml:mo>=</mml:mo><mml:mn>0</mml:mn></mml:mrow></mml:math></inline-formula> and <inline-formula><mml:math id="inf1150"><mml:mrow><mml:mrow><mml:msub><mml:mi>λ</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mo>⁢</mml:mo><mml:mi>j</mml:mi></mml:mrow><mml:mo>=</mml:mo><mml:mn>0</mml:mn></mml:mrow></mml:math></inline-formula> in the cyclic group <inline-formula><mml:math id="inf1151"><mml:mrow><mml:mrow><mml:mi>ℤ</mml:mi><mml:mo>/</mml:mo><mml:mi>L</mml:mi></mml:mrow><mml:mo>⁢</mml:mo><mml:mi>ℤ</mml:mi></mml:mrow></mml:math></inline-formula>, that is, for which <inline-formula><mml:math id="inf1152"><mml:mrow><mml:mrow><mml:mrow><mml:mi>gcd</mml:mi><mml:mo>⁡</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mi>m</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow><mml:mo>⁢</mml:mo><mml:mi>j</mml:mi></mml:mrow><mml:mo>=</mml:mo><mml:mn>0</mml:mn></mml:mrow></mml:math></inline-formula> in <inline-formula><mml:math id="inf1153"><mml:mrow><mml:mrow><mml:mi>ℤ</mml:mi><mml:mo>/</mml:mo><mml:mi>L</mml:mi></mml:mrow><mml:mo>⁢</mml:mo><mml:mi>ℤ</mml:mi></mml:mrow></mml:math></inline-formula>. By the subgroup structure of cyclic groups, the basis elements generating <inline-formula><mml:math id="inf1154"><mml:mrow><mml:msub><mml:mi>V</mml:mi><mml:mi>m</mml:mi></mml:msub><mml:mo>∩</mml:mo><mml:msub><mml:mi>V</mml:mi><mml:mi>n</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> are thus indexed by the elements of the unique subgroup of order <inline-formula><mml:math id="inf1155"><mml:mrow><mml:mi>gcd</mml:mi><mml:mo>⁡</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mi>m</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula> in <inline-formula><mml:math id="inf1156"><mml:mrow><mml:mrow><mml:mi>ℤ</mml:mi><mml:mo>/</mml:mo><mml:mi>L</mml:mi></mml:mrow><mml:mo>⁢</mml:mo><mml:mi>ℤ</mml:mi></mml:mrow></mml:math></inline-formula>. Thus, we have <inline-formula><mml:math id="inf1157"><mml:mrow><mml:mrow><mml:mrow><mml:mo>dim</mml:mo><mml:mo>⁡</mml:mo><mml:msub><mml:mi>V</mml:mi><mml:mi>m</mml:mi></mml:msub></mml:mrow><mml:mo>∩</mml:mo><mml:msub><mml:mi>V</mml:mi><mml:mi>n</mml:mi></mml:msub></mml:mrow><mml:mo>=</mml:mo><mml:mrow><mml:mi>gcd</mml:mi><mml:mo>⁡</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mi>m</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula>. The above reasoning generalizes straightforwardly to any set of indices <inline-formula><mml:math id="inf1158"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mn>1</mml:mn><mml:mo>≤</mml:mo><mml:msub><mml:mi>m</mml:mi><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>§lt;</mml:mo><mml:mo>…</mml:mo><mml:mo>§lt;</mml:mo><mml:msub><mml:mi>m</mml:mi><mml:mrow><mml:mi>k</mml:mi></mml:mrow></mml:msub><mml:mo>≤</mml:mo><mml:mi>M</mml:mi></mml:mrow></mml:mstyle></mml:math></inline-formula>, <inline-formula><mml:math id="inf1159"><mml:mrow><mml:mn>1</mml:mn><mml:mo>≤</mml:mo><mml:mi>k</mml:mi><mml:mo>≤</mml:mo><mml:mi>m</mml:mi></mml:mrow></mml:math></inline-formula>, leading to<disp-formula id="equ73"><label>(72)</label><mml:math id="m73"><mml:mrow><mml:mrow><mml:mrow><mml:mo>dim</mml:mo><mml:mo>⁡</mml:mo><mml:msub><mml:mi>V</mml:mi><mml:msub><mml:mi>m</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:msub></mml:mrow><mml:mo>∩</mml:mo><mml:mi mathvariant="normal">…</mml:mi><mml:mo>∩</mml:mo><mml:msub><mml:mi>V</mml:mi><mml:msub><mml:mi>m</mml:mi><mml:mi>k</mml:mi></mml:msub></mml:msub></mml:mrow><mml:mo>=</mml:mo><mml:mrow><mml:mi>gcd</mml:mi><mml:mo>⁡</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:msub><mml:mi>m</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:msub><mml:mo>,</mml:mo><mml:mi mathvariant="normal">…</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:msub><mml:mi>m</mml:mi><mml:mi>k</mml:mi></mml:msub></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:math></disp-formula></p><p>Specifying the dimension of the intersection spaces in (69) derived from the exclusion-inclusion principle yields the rank formula given in (68).</p></sec><sec id="s30" sec-type="appendix"><title>Generalization to higher dimensional lattices</title><p>Our two results about (i) the number of dichotomies for grid code with two modules and about (ii) the separating capacity for an arbitrary number of modules generalize to an arbitrary number of dimensions. The generalization of (i) is straightforward as our results bear on the set of grid-like inputs with no reference to physical space. The only caveat has to do with the fact that for <inline-formula><mml:math id="inf1160"><mml:mi>d</mml:mi></mml:math></inline-formula>-dimensional lattice, each module <inline-formula><mml:math id="inf1161"><mml:mi>m</mml:mi></mml:math></inline-formula>, <inline-formula><mml:math id="inf1162"><mml:mrow><mml:mn>1</mml:mn><mml:mo>≤</mml:mo><mml:mi>m</mml:mi><mml:mo>≤</mml:mo><mml:mi>M</mml:mi></mml:mrow></mml:math></inline-formula>, contains <inline-formula><mml:math id="inf1163"><mml:msubsup><mml:mi>λ</mml:mi><mml:mi>m</mml:mi><mml:mi>d</mml:mi></mml:msubsup></mml:math></inline-formula> cells so that <inline-formula><mml:math id="inf1164"><mml:msubsup><mml:mi>λ</mml:mi><mml:mi>m</mml:mi><mml:mi>d</mml:mi></mml:msubsup></mml:math></inline-formula> has to be substituted for <inline-formula><mml:math id="inf1165"><mml:msub><mml:mi>λ</mml:mi><mml:mi>m</mml:mi></mml:msub></mml:math></inline-formula> in formula (47). It turns out that the generalization of (ii) proceeds in the exact same way, albeit in a less direct fashion. In the following, we prove that the separating capacity for a <inline-formula><mml:math id="inf1166"><mml:mi>d</mml:mi></mml:math></inline-formula>-dimensional lattice model, including the 2D hexagonal lattice, is still given by the rank of the corresponding activity matrix.</p><p>A couple of remarks are in order before justifying the generalization of (ii):</p><p>First, let us specify how to construct activity matrices in d-dimensional space by considering a simple example. Consider the hexagonal-lattice model for two modules with <inline-formula><mml:math id="inf1167"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mi mathvariant="bold-italic">λ</mml:mi><mml:mo>=</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mn>2</mml:mn><mml:mo>,</mml:mo><mml:mn>3</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mstyle></mml:math></inline-formula>. As illustrated in <xref ref-type="fig" rid="fig1">Figure 1</xref>, there are four possible 2-periodic lattices and nine possible 3-periodic lattices, each lattice representing the spatial activity pattern of a grid cell. Combining the encoding of the two modules yield a periodic lattice, with lattice mesh comprising <inline-formula><mml:math id="inf1168"><mml:mrow><mml:mrow><mml:mi>lcm</mml:mi><mml:mo>⁢</mml:mo><mml:msup><mml:mrow><mml:mo>(</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mo>)</mml:mo></mml:mrow><mml:mn>2</mml:mn></mml:msup></mml:mrow><mml:mo>=</mml:mo><mml:mn>36</mml:mn></mml:mrow></mml:math></inline-formula> positions. Every position within the mesh size is uniquely labeled by the grid-like input, and any subset of positions with larger cardinality has redundancy. Observe moreover that the lattice mesh is equivalent to that of a (2, 3)-square lattice, and in fact, the activity matrix for an (2, 3)-hexagonal lattice model is the same as that for a (2, 3)-square lattice. As a result, the spatial dependence of the grid-cell population is described by a matrix in <inline-formula><mml:math id="inf1169"><mml:msup><mml:mi>ℝ</mml:mi><mml:mrow><mml:mn>13</mml:mn><mml:mo>×</mml:mo><mml:mn>36</mml:mn></mml:mrow></mml:msup></mml:math></inline-formula> with the following block structure:<disp-formula id="equ74"><label>(73)</label><mml:math id="m74"><mml:mrow><mml:msubsup><mml:mi>A</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mn>2</mml:mn><mml:mo>,</mml:mo><mml:mn>3</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mn>2</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msubsup><mml:mo>=</mml:mo><mml:mrow><mml:mo>(</mml:mo><mml:mtable columnalign="center center center center center center" columnspacing="1em" rowlines="none solid none" rowspacing="4pt"><mml:mtr><mml:mtd><mml:msub><mml:mi>B</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mn>2</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msub></mml:mtd><mml:mtd><mml:mrow><mml:mn>0</mml:mn></mml:mrow></mml:mtd><mml:mtd><mml:msub><mml:mi>B</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mn>2</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msub></mml:mtd><mml:mtd><mml:mrow><mml:mn>0</mml:mn></mml:mrow></mml:mtd><mml:mtd><mml:msub><mml:mi>B</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mn>2</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msub></mml:mtd><mml:mtd><mml:mn>0</mml:mn></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mn>0</mml:mn></mml:mtd><mml:mtd><mml:mrow><mml:msub><mml:mi>B</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mn>2</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msub></mml:mrow></mml:mtd><mml:mtd><mml:mn>0</mml:mn></mml:mtd><mml:mtd><mml:mrow><mml:msub><mml:mi>B</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mn>2</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msub></mml:mrow></mml:mtd><mml:mtd><mml:mn>0</mml:mn></mml:mtd><mml:mtd><mml:msub><mml:mi>B</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mn>2</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msub></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:msub><mml:mi>B</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mn>3</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msub></mml:mtd><mml:mtd><mml:mn>0</mml:mn></mml:mtd><mml:mtd><mml:mrow><mml:mn>0</mml:mn></mml:mrow></mml:mtd><mml:mtd><mml:msub><mml:mi>B</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mn>3</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msub></mml:mtd><mml:mtd><mml:mn>0</mml:mn></mml:mtd><mml:mtd><mml:mn>0</mml:mn></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mn>0</mml:mn></mml:mtd><mml:mtd><mml:msub><mml:mi>B</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mn>3</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msub></mml:mtd><mml:mtd><mml:mrow><mml:mn>0</mml:mn></mml:mrow></mml:mtd><mml:mtd><mml:mn>0</mml:mn></mml:mtd><mml:mtd><mml:msub><mml:mi>B</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mn>3</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msub></mml:mtd><mml:mtd><mml:mn>0</mml:mn></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mn>0</mml:mn></mml:mtd><mml:mtd><mml:mn>0</mml:mn></mml:mtd><mml:mtd><mml:mrow><mml:msub><mml:mi>B</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mn>3</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msub></mml:mrow></mml:mtd><mml:mtd><mml:mn>0</mml:mn></mml:mtd><mml:mtd><mml:mn>0</mml:mn></mml:mtd><mml:mtd><mml:msub><mml:mi>B</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mn>3</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msub></mml:mtd></mml:mtr></mml:mtable><mml:mo>)</mml:mo></mml:mrow><mml:mspace width="1em"/><mml:mrow><mml:mi mathvariant="normal">w</mml:mi><mml:mi mathvariant="normal">i</mml:mi><mml:mi mathvariant="normal">t</mml:mi><mml:mi mathvariant="normal">h</mml:mi></mml:mrow><mml:mspace width="1em"/><mml:mtable columnspacing="1em" rowspacing="4pt"><mml:mtr><mml:mtd><mml:msub><mml:mi>B</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mn>2</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:mo>(</mml:mo><mml:mtable columnalign="center center center center center center" columnspacing="1em" rowspacing="4pt"><mml:mtr><mml:mtd><mml:mn>1</mml:mn></mml:mtd><mml:mtd><mml:mrow><mml:mn>0</mml:mn></mml:mrow></mml:mtd><mml:mtd><mml:mn>1</mml:mn></mml:mtd><mml:mtd><mml:mrow><mml:mn>0</mml:mn></mml:mrow></mml:mtd><mml:mtd><mml:mn>1</mml:mn></mml:mtd><mml:mtd><mml:mn>0</mml:mn></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mn>0</mml:mn></mml:mtd><mml:mtd><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:mtd><mml:mtd><mml:mn>0</mml:mn></mml:mtd><mml:mtd><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:mtd><mml:mtd><mml:mn>0</mml:mn></mml:mtd><mml:mtd><mml:mn>1</mml:mn></mml:mtd></mml:mtr></mml:mtable><mml:mo>)</mml:mo></mml:mrow><mml:mspace width="thinmathspace"/><mml:mo>,</mml:mo></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:msub><mml:mi>B</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mn>3</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:mo>(</mml:mo><mml:mtable columnalign="center center center center center center" columnspacing="1em" rowspacing="4pt"><mml:mtr><mml:mtd><mml:mn>1</mml:mn></mml:mtd><mml:mtd><mml:mn>0</mml:mn></mml:mtd><mml:mtd><mml:mrow><mml:mn>0</mml:mn></mml:mrow></mml:mtd><mml:mtd><mml:mn>1</mml:mn></mml:mtd><mml:mtd><mml:mn>0</mml:mn></mml:mtd><mml:mtd><mml:mn>0</mml:mn></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mn>0</mml:mn></mml:mtd><mml:mtd><mml:mn>1</mml:mn></mml:mtd><mml:mtd><mml:mrow><mml:mn>0</mml:mn></mml:mrow></mml:mtd><mml:mtd><mml:mn>0</mml:mn></mml:mtd><mml:mtd><mml:mn>1</mml:mn></mml:mtd><mml:mtd><mml:mn>0</mml:mn></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mn>0</mml:mn></mml:mtd><mml:mtd><mml:mn>0</mml:mn></mml:mtd><mml:mtd><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:mtd><mml:mtd><mml:mn>0</mml:mn></mml:mtd><mml:mtd><mml:mn>0</mml:mn></mml:mtd><mml:mtd><mml:mn>1</mml:mn></mml:mtd></mml:mtr></mml:mtable><mml:mo>)</mml:mo></mml:mrow><mml:mspace width="thinmathspace"/><mml:mo>.</mml:mo></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math></disp-formula></p><p>In the above matrix <inline-formula><mml:math id="inf1170"><mml:msubsup><mml:mi>A</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mn>2</mml:mn><mml:mo>,</mml:mo><mml:mn>3</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mn>2</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msubsup></mml:math></inline-formula>, the top-two block rows represent the activity of 2-periodic cells, while the bottom-three block rows represent the activity of 3-periodic cells. By convention, we consider blocks <inline-formula><mml:math id="inf1171"><mml:msub><mml:mi>B</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mn>2</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msub></mml:math></inline-formula> and <inline-formula><mml:math id="inf1172"><mml:msub><mml:mi>B</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mn>3</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msub></mml:math></inline-formula>, comprising respectively two and three cells, represent the activity of grid cells along the horizontal <inline-formula><mml:math id="inf1173"><mml:mi>x</mml:mi></mml:math></inline-formula>-axis. There are two rows of blocks <inline-formula><mml:math id="inf1174"><mml:msub><mml:mi>B</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mn>2</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msub></mml:math></inline-formula> and three rows of blocks <inline-formula><mml:math id="inf1175"><mml:msub><mml:mi>B</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mn>3</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msub></mml:math></inline-formula> to encode 2-periodicity and 3-periodicity, respectively, along the vertical <inline-formula><mml:math id="inf1176"><mml:mi>y</mml:mi></mml:math></inline-formula>-axis. It is straightforward to generalize this hierarchical block structure to construct an activity matrix <inline-formula><mml:math id="inf1177"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msubsup><mml:mi>A</mml:mi><mml:mrow><mml:mi mathvariant="bold-italic">λ</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>d</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msubsup></mml:mrow></mml:mstyle></mml:math></inline-formula> for arbitrary periods <inline-formula><mml:math id="inf1178"><mml:msub><mml:mi>λ</mml:mi><mml:mi>m</mml:mi></mml:msub></mml:math></inline-formula> and arbitrary square-lattice dimension <inline-formula><mml:math id="inf1179"><mml:mi>d</mml:mi></mml:math></inline-formula>. In particular, the matrix <inline-formula><mml:math id="inf1180"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msubsup><mml:mi>A</mml:mi><mml:mrow><mml:mi mathvariant="bold-italic">λ</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>d</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msubsup></mml:mrow></mml:mstyle></mml:math></inline-formula> has <inline-formula><mml:math id="inf1181"><mml:mrow><mml:msubsup><mml:mo largeop="true" symmetric="true">∑</mml:mo><mml:mrow><mml:mi>m</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>M</mml:mi></mml:msubsup><mml:msubsup><mml:mi>λ</mml:mi><mml:mi>m</mml:mi><mml:mi>d</mml:mi></mml:msubsup></mml:mrow></mml:math></inline-formula> rows and <inline-formula><mml:math id="inf1182"><mml:mrow><mml:mi>L</mml:mi><mml:mo>=</mml:mo><mml:mrow><mml:mi>lcm</mml:mi><mml:mo>⁢</mml:mo><mml:msup><mml:mrow><mml:mo>(</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:mi mathvariant="normal">…</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mi>M</mml:mi></mml:msub><mml:mo>)</mml:mo></mml:mrow><mml:mi>d</mml:mi></mml:msup></mml:mrow></mml:mrow></mml:math></inline-formula> columns.</p><fig id="app3fig1" position="float"><label>Appendix 3—figure 1.</label><caption><title>Hexagonal and square lattice in two dimensions.</title><p>(<bold>a</bold>) In two dimensions, 2-periodic and 3-periodic modules comprise respectively four and nine possible grid-cell-activity pattern. For instance, red, green, blue, and yellow patterns in the leftmost lattice correspond to the four possible patterns of activity that a 2-periodic cell can exhibit on an hexagonal lattice. (<bold>b</bold>) The maximum lattice mesh over which each position is uniquely encoded by the grid-like code is given as <inline-formula><mml:math id="inf1183"><mml:mrow><mml:mrow><mml:mn>6</mml:mn><mml:mo>×</mml:mo><mml:mn>6</mml:mn></mml:mrow><mml:mo>=</mml:mo><mml:mrow><mml:msup><mml:mn>2</mml:mn><mml:mn>2</mml:mn></mml:msup><mml:mo>×</mml:mo><mml:msup><mml:mn>3</mml:mn><mml:mn>2</mml:mn></mml:msup></mml:mrow></mml:mrow></mml:math></inline-formula>. Moreover, the hexagonal symmetry plays no role in our capacity calculations and one can consider a square lattice of positions instead.</p></caption><graphic mime-subtype="tiff" mimetype="image" xlink:href="elife-62702-app3-fig1-v3.tif"/></fig><p>Second, let us define the notion of contiguous-separating capacity for <inline-formula><mml:math id="inf1184"><mml:mi>d</mml:mi></mml:math></inline-formula>-dimensional lattice with <inline-formula><mml:math id="inf1185"><mml:mrow><mml:mi>d</mml:mi><mml:mo>§gt;</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:math></inline-formula>. In one dimension, we define the contiguous-separating capacity as the maximum spatial extent for which all dichotomies involving its discrete set of positions are linearly separable. We generalize this notion for arbitrary dimensions <inline-formula><mml:math id="inf1186"><mml:mi>d</mml:mi></mml:math></inline-formula> by defining the contiguous-separating capacity as the maximum connected component of <inline-formula><mml:math id="inf1187"><mml:mi>d</mml:mi></mml:math></inline-formula>-dimensional positions for which all dichotomies are possible. Observe that thus-defined, we are rather oblivious about the geometric arrangement of this connected components. This is due to the fact that in dimension <inline-formula><mml:math id="inf1188"><mml:mrow><mml:mi>d</mml:mi><mml:mo>§gt;</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:math></inline-formula>, the contiguous-separating capacity can be achieved by many distinct arrangements.</p><p>After these preliminary remarks, we can now prove the following proposition.</p></sec><sec id="s31" sec-type="appendix"><title>Proposition 11</title><p>The contiguous-separating capacity of the generic grid-cell-activity matrix <inline-formula><mml:math id="inf1189"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msub><mml:mi>A</mml:mi><mml:mrow><mml:mi mathvariant="bold-italic">λ</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mstyle></mml:math></inline-formula> is equal to <inline-formula><mml:math id="inf1190"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mrow><mml:mi mathvariant="normal">r</mml:mi><mml:mi mathvariant="normal">a</mml:mi><mml:mi mathvariant="normal">n</mml:mi><mml:mi mathvariant="normal">k</mml:mi></mml:mrow><mml:msubsup><mml:mrow><mml:mi>A</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="bold-italic">λ</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>d</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msubsup></mml:mrow></mml:mstyle></mml:math></inline-formula>, where we have<disp-formula id="equ75"><label>(74)</label><mml:math id="m75"><mml:mrow><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mi mathvariant="normal">r</mml:mi><mml:mi mathvariant="normal">a</mml:mi><mml:mi mathvariant="normal">n</mml:mi><mml:mi mathvariant="normal">k</mml:mi></mml:mrow><mml:mtext> </mml:mtext><mml:mrow><mml:mspace width="thinmathspace"/><mml:msubsup><mml:mi>A</mml:mi><mml:mrow><mml:mi mathvariant="bold-italic">λ</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>d</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msubsup></mml:mrow><mml:mo>=</mml:mo><mml:munderover><mml:mo>∑</mml:mo><mml:mrow><mml:mi>k</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mi>M</mml:mi></mml:mrow></mml:munderover><mml:mo stretchy="false">(</mml:mo><mml:mo>−</mml:mo><mml:mn>1</mml:mn><mml:msup><mml:mo stretchy="false">)</mml:mo><mml:mrow><mml:mi>k</mml:mi><mml:mo>−</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msup><mml:munder><mml:mo>∑</mml:mo><mml:mrow><mml:mi>S</mml:mi><mml:mo>⊂</mml:mo><mml:mi mathvariant="bold-italic">λ</mml:mi><mml:mo>,</mml:mo><mml:mrow><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:mi>S</mml:mi><mml:mrow><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:mi>k</mml:mi></mml:mrow></mml:munder><mml:mo form="prefix" movablelimits="true">gcd</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi>S</mml:mi><mml:msup><mml:mo stretchy="false">)</mml:mo><mml:mrow><mml:mi>d</mml:mi></mml:mrow></mml:msup></mml:mstyle></mml:mrow></mml:math></disp-formula></p><p>Proof. We only justify the formula for the case <inline-formula><mml:math id="inf1191"><mml:mrow><mml:mi>d</mml:mi><mml:mo>=</mml:mo><mml:mn>2</mml:mn></mml:mrow></mml:math></inline-formula> as similar arguments apply for all integers <inline-formula><mml:math id="inf1192"><mml:mrow><mml:mi>d</mml:mi><mml:mo>§gt;</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:math></inline-formula> (see Remark after this proof). The proof will proceed in two steps: (i) we justify the formula for <inline-formula><mml:math id="inf1193"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mrow><mml:mi mathvariant="normal">r</mml:mi><mml:mi mathvariant="normal">a</mml:mi><mml:mi mathvariant="normal">n</mml:mi><mml:mi mathvariant="normal">k</mml:mi></mml:mrow><mml:mrow><mml:msubsup><mml:mi>A</mml:mi><mml:mrow><mml:mi mathvariant="bold-italic">λ</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>d</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msubsup></mml:mrow></mml:mrow></mml:mstyle></mml:math></inline-formula> and (ii) we justify that the contiguous-separating capacity equals <inline-formula><mml:math id="inf1194"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mrow><mml:mi mathvariant="normal">r</mml:mi><mml:mi mathvariant="normal">a</mml:mi><mml:mi mathvariant="normal">n</mml:mi><mml:mi mathvariant="normal">k</mml:mi></mml:mrow><mml:mrow><mml:msubsup><mml:mi>A</mml:mi><mml:mrow><mml:mi mathvariant="bold-italic">λ</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>d</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msubsup></mml:mrow></mml:mrow></mml:mstyle></mml:math></inline-formula>.</p><p>(i) We follow the same strategy as for dimension 1 to establish the rank formula for <inline-formula><mml:math id="inf1195"><mml:mrow><mml:mi>d</mml:mi><mml:mo>=</mml:mo><mml:mn>2</mml:mn></mml:mrow></mml:math></inline-formula> via exclusion-inclusion principle. The key point is to exhibit a basis of vectors <inline-formula><mml:math id="inf1196"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi mathvariant="bold-italic">e</mml:mi><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi mathvariant="bold-italic">e</mml:mi><mml:mrow><mml:mi>L</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mstyle></mml:math></inline-formula> in <inline-formula><mml:math id="inf1197"><mml:msup><mml:mi>ℝ</mml:mi><mml:mrow><mml:mi>L</mml:mi><mml:mo>×</mml:mo><mml:mi>L</mml:mi></mml:mrow></mml:msup></mml:math></inline-formula>, with <inline-formula><mml:math id="inf1198"><mml:mrow><mml:mi>L</mml:mi><mml:mo>=</mml:mo><mml:mrow><mml:mi>lcm</mml:mi><mml:mo>⁢</mml:mo><mml:mrow><mml:mo>(</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:mi mathvariant="normal">…</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mi>M</mml:mi></mml:msub><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula>, which spans all the vector spaces <inline-formula><mml:math id="inf1199"><mml:msub><mml:mi>V</mml:mi><mml:mi>m</mml:mi></mml:msub></mml:math></inline-formula>, <inline-formula><mml:math id="inf1200"><mml:mrow><mml:mn>1</mml:mn><mml:mo>≤</mml:mo><mml:mi>m</mml:mi><mml:mo>≤</mml:mo><mml:mi>M</mml:mi></mml:mrow></mml:math></inline-formula>, where <inline-formula><mml:math id="inf1201"><mml:msub><mml:mi>V</mml:mi><mml:mi>m</mml:mi></mml:msub></mml:math></inline-formula> denotes the space of <inline-formula><mml:math id="inf1202"><mml:msub><mml:mi>λ</mml:mi><mml:mi>m</mml:mi></mml:msub></mml:math></inline-formula> periodic functions on the <inline-formula><mml:math id="inf1203"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mpadded width="-1.7pt"><mml:mi>L</mml:mi></mml:mpadded><mml:mo rspace="0.8pt">×</mml:mo><mml:mi>L</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula>-lattice mesh. To specify such a basis, we consider the two operators <inline-formula><mml:math id="inf1204"><mml:msub><mml:mi>J</mml:mi><mml:mi>x</mml:mi></mml:msub></mml:math></inline-formula> and <inline-formula><mml:math id="inf1205"><mml:msub><mml:mi>J</mml:mi><mml:mi>y</mml:mi></mml:msub></mml:math></inline-formula> acting on the grid-like inputs and representing the one-unit shift along horizontal <inline-formula><mml:math id="inf1206"><mml:mi>x</mml:mi></mml:math></inline-formula>-axis and along the vertical <inline-formula><mml:math id="inf1207"><mml:mi>y</mml:mi></mml:math></inline-formula>-axis, respectively. A basis of the space of <inline-formula><mml:math id="inf1208"><mml:msub><mml:mi>λ</mml:mi><mml:mi>m</mml:mi></mml:msub></mml:math></inline-formula> periodic functions on the <inline-formula><mml:math id="inf1209"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mpadded width="-1.7pt"><mml:mi>L</mml:mi></mml:mpadded><mml:mo rspace="0.8pt">×</mml:mo><mml:mi>L</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula>-lattice mesh is generated by iterated action of <inline-formula><mml:math id="inf1210"><mml:msub><mml:mi>J</mml:mi><mml:mi>x</mml:mi></mml:msub></mml:math></inline-formula> and <inline-formula><mml:math id="inf1211"><mml:msub><mml:mi>J</mml:mi><mml:mi>y</mml:mi></mml:msub></mml:math></inline-formula> on the activity lattice of a <inline-formula><mml:math id="inf1212"><mml:msub><mml:mi>λ</mml:mi><mml:mi>m</mml:mi></mml:msub></mml:math></inline-formula>-periodic cell, that is, on a <inline-formula><mml:math id="inf1213"><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:mn>0</mml:mn><mml:mo>,</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">}</mml:mo></mml:mrow></mml:math></inline-formula>-row vector <inline-formula><mml:math id="inf1214"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msub><mml:mi mathvariant="bold-italic">r</mml:mi><mml:mrow><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mi>m</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub></mml:mrow></mml:mstyle></mml:math></inline-formula> of the mth module of <inline-formula><mml:math id="inf1215"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mrow><mml:mi mathvariant="normal">r</mml:mi><mml:mi mathvariant="normal">a</mml:mi><mml:mi mathvariant="normal">n</mml:mi><mml:mi mathvariant="normal">k</mml:mi></mml:mrow><mml:mrow><mml:msubsup><mml:mi>A</mml:mi><mml:mrow><mml:mi mathvariant="bold-italic">λ</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>d</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msubsup></mml:mrow></mml:mrow></mml:mstyle></mml:math></inline-formula>. Specifically, a basis of <inline-formula><mml:math id="inf1216"><mml:msub><mml:mi>V</mml:mi><mml:mi>m</mml:mi></mml:msub></mml:math></inline-formula> is given by the <inline-formula><mml:math id="inf1217"><mml:msubsup><mml:mi>λ</mml:mi><mml:mi>m</mml:mi><mml:mn>2</mml:mn></mml:msubsup></mml:math></inline-formula> vectors <inline-formula><mml:math id="inf1218"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msubsup><mml:mi>J</mml:mi><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mi>k</mml:mi></mml:mrow></mml:msubsup><mml:msubsup><mml:mi>J</mml:mi><mml:mrow><mml:mi>y</mml:mi></mml:mrow><mml:mrow><mml:mi>l</mml:mi></mml:mrow></mml:msubsup><mml:msub><mml:mi mathvariant="bold-italic">r</mml:mi><mml:mrow><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mi>m</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub></mml:mrow></mml:mstyle></mml:math></inline-formula>, with <inline-formula><mml:math id="inf1219"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mn>0</mml:mn><mml:mo>≤</mml:mo><mml:mi>k</mml:mi><mml:mo>§lt;</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mi>m</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mstyle></mml:math></inline-formula> and <inline-formula><mml:math id="inf1220"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mn>0</mml:mn><mml:mo>≤</mml:mo><mml:mi>l</mml:mi><mml:mo>§lt;</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mi>m</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mstyle></mml:math></inline-formula>. Moreover, the operators <inline-formula><mml:math id="inf1221"><mml:msub><mml:mi>J</mml:mi><mml:mi>x</mml:mi></mml:msub></mml:math></inline-formula> and <inline-formula><mml:math id="inf1222"><mml:msub><mml:mi>J</mml:mi><mml:mi>y</mml:mi></mml:msub></mml:math></inline-formula> commute on <inline-formula><mml:math id="inf1223"><mml:msup><mml:mi>ℝ</mml:mi><mml:mrow><mml:mi>L</mml:mi><mml:mo>×</mml:mo><mml:mi>L</mml:mi></mml:mrow></mml:msup></mml:math></inline-formula>, as by construction, shifting lattices by <inline-formula><mml:math id="inf1224"><mml:mrow><mml:msub><mml:mi>J</mml:mi><mml:mi>x</mml:mi></mml:msub><mml:mo>⁢</mml:mo><mml:msub><mml:mi>J</mml:mi><mml:mi>y</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> yields the same lattice as the one obtained by shifting the original lattice by <inline-formula><mml:math id="inf1225"><mml:mrow><mml:msub><mml:mi>J</mml:mi><mml:mi>y</mml:mi></mml:msub><mml:mo>⁢</mml:mo><mml:msub><mml:mi>J</mml:mi><mml:mi>x</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula>. Thus, if <inline-formula><mml:math id="inf1226"><mml:msub><mml:mi>J</mml:mi><mml:mi>x</mml:mi></mml:msub></mml:math></inline-formula> and <inline-formula><mml:math id="inf1227"><mml:msub><mml:mi>J</mml:mi><mml:mi>y</mml:mi></mml:msub></mml:math></inline-formula> are diagonalizable, they can be diagonalized in the same basis <inline-formula><mml:math id="inf1228"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msub><mml:mi mathvariant="bold-italic">ϵ</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mstyle></mml:math></inline-formula>, <inline-formula><mml:math id="inf1229"><mml:mrow><mml:mrow><mml:mn>1</mml:mn><mml:mo>≤</mml:mo><mml:mi>i</mml:mi></mml:mrow><mml:mo>,</mml:mo><mml:mrow><mml:mi>j</mml:mi><mml:mo>≤</mml:mo><mml:mi>L</mml:mi></mml:mrow></mml:mrow></mml:math></inline-formula>. Close inspection of the operators <inline-formula><mml:math id="inf1230"><mml:msub><mml:mi>J</mml:mi><mml:mi>x</mml:mi></mml:msub></mml:math></inline-formula> and <inline-formula><mml:math id="inf1231"><mml:msub><mml:mi>J</mml:mi><mml:mi>y</mml:mi></mml:msub></mml:math></inline-formula> reveals that they admit matrix representations that are closely related to the canonical <inline-formula><mml:math id="inf1232"><mml:mi>L</mml:mi></mml:math></inline-formula>-dimensional circulant matrix <inline-formula><mml:math id="inf1233"><mml:msub><mml:mi>J</mml:mi><mml:mi>L</mml:mi></mml:msub></mml:math></inline-formula>:<disp-formula id="equ76"><label>(75)</label><mml:math id="m76"><mml:mrow><mml:mrow><mml:mrow><mml:msub><mml:mi>J</mml:mi><mml:mi>x</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:mo>(</mml:mo><mml:mtable columnspacing="5pt" rowspacing="0pt"><mml:mtr><mml:mtd columnalign="center"><mml:msub><mml:mi>J</mml:mi><mml:mi>L</mml:mi></mml:msub></mml:mtd><mml:mtd/><mml:mtd/></mml:mtr><mml:mtr><mml:mtd/><mml:mtd columnalign="center"><mml:mi mathvariant="normal">⋱</mml:mi></mml:mtd><mml:mtd/></mml:mtr><mml:mtr><mml:mtd/><mml:mtd/><mml:mtd columnalign="center"><mml:msub><mml:mi>J</mml:mi><mml:mi>L</mml:mi></mml:msub></mml:mtd></mml:mtr></mml:mtable><mml:mo rspace="4.2pt">)</mml:mo></mml:mrow></mml:mrow><mml:mo rspace="12.5pt">,</mml:mo><mml:mrow><mml:mrow><mml:msub><mml:mi>J</mml:mi><mml:mi>y</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:mtable columnspacing="5pt" rowspacing="0pt"><mml:mtr><mml:mtd columnalign="center"><mml:mn>0</mml:mn></mml:mtd><mml:mtd columnalign="center"><mml:msub><mml:mi>I</mml:mi><mml:mi>L</mml:mi></mml:msub></mml:mtd><mml:mtd/></mml:mtr><mml:mtr><mml:mtd/><mml:mtd columnalign="center"><mml:mi mathvariant="normal">⋱</mml:mi></mml:mtd><mml:mtd columnalign="center"><mml:msub><mml:mi>I</mml:mi><mml:mi>L</mml:mi></mml:msub></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="center"><mml:msub><mml:mi>I</mml:mi><mml:mi>L</mml:mi></mml:msub></mml:mtd><mml:mtd/><mml:mtd columnalign="center"><mml:mn>0</mml:mn></mml:mtd></mml:mtr></mml:mtable><mml:mo>)</mml:mo></mml:mrow><mml:mo mathvariant="italic" separator="true"> </mml:mo><mml:mi>and</mml:mi></mml:mrow></mml:mrow><mml:mo mathvariant="italic" separator="true"> </mml:mo><mml:mrow><mml:mrow><mml:msub><mml:mi>J</mml:mi><mml:mi>x</mml:mi></mml:msub><mml:mo>⁢</mml:mo><mml:msub><mml:mi>J</mml:mi><mml:mi>y</mml:mi></mml:msub></mml:mrow><mml:mo>=</mml:mo><mml:mrow><mml:msub><mml:mi>J</mml:mi><mml:mi>y</mml:mi></mml:msub><mml:mo>⁢</mml:mo><mml:msub><mml:mi>J</mml:mi><mml:mi>x</mml:mi></mml:msub></mml:mrow><mml:mo>=</mml:mo><mml:mrow><mml:mo>(</mml:mo><mml:mtable columnspacing="5pt" rowspacing="0pt"><mml:mtr><mml:mtd columnalign="center"><mml:mn>0</mml:mn></mml:mtd><mml:mtd columnalign="center"><mml:msub><mml:mi>J</mml:mi><mml:mi>L</mml:mi></mml:msub></mml:mtd><mml:mtd/></mml:mtr><mml:mtr><mml:mtd/><mml:mtd columnalign="center"><mml:mi mathvariant="normal">⋱</mml:mi></mml:mtd><mml:mtd columnalign="center"><mml:msub><mml:mi>J</mml:mi><mml:mi>L</mml:mi></mml:msub></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="center"><mml:msub><mml:mi>J</mml:mi><mml:mi>L</mml:mi></mml:msub></mml:mtd><mml:mtd/><mml:mtd columnalign="center"><mml:mn>0</mml:mn></mml:mtd></mml:mtr></mml:mtable><mml:mo rspace="4.2pt">)</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:mrow><mml:mo>.</mml:mo></mml:mrow></mml:math></disp-formula></p><p>Concretely, the operator <inline-formula><mml:math id="inf1234"><mml:msub><mml:mi>J</mml:mi><mml:mi>x</mml:mi></mml:msub></mml:math></inline-formula> cyclically shifts columns within each blocks <inline-formula><mml:math id="inf1235"><mml:mrow><mml:mpadded width="+1.7pt"><mml:mi>rank</mml:mi></mml:mpadded><mml:mo>⁢</mml:mo><mml:msub><mml:mi>B</mml:mi><mml:mi>λ</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula>, whereas the operator <inline-formula><mml:math id="inf1236"><mml:msub><mml:mi>J</mml:mi><mml:mi>y</mml:mi></mml:msub></mml:math></inline-formula> cyclically shifts the blocks within <inline-formula><mml:math id="inf1237"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msubsup><mml:mi>A</mml:mi><mml:mrow><mml:mi mathvariant="bold-italic">λ</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>d</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msubsup></mml:mrow></mml:mstyle></mml:math></inline-formula>. Considering the basis of eigenvector <inline-formula><mml:math id="inf1238"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msub><mml:mi mathvariant="bold-italic">e</mml:mi><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mstyle></mml:math></inline-formula>, <inline-formula><mml:math id="inf1239"><mml:mrow><mml:mn>1</mml:mn><mml:mo>≤</mml:mo><mml:mi>i</mml:mi><mml:mo>≤</mml:mo><mml:mi>L</mml:mi></mml:mrow></mml:math></inline-formula>, of <inline-formula><mml:math id="inf1240"><mml:msub><mml:mi>J</mml:mi><mml:mi>L</mml:mi></mml:msub></mml:math></inline-formula>, we define the basis <inline-formula><mml:math id="inf1241"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msub><mml:mi mathvariant="bold-italic">ϵ</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mstyle></mml:math></inline-formula>, <inline-formula><mml:math id="inf1242"><mml:mrow><mml:mrow><mml:mn>1</mml:mn><mml:mo>≤</mml:mo><mml:mi>i</mml:mi></mml:mrow><mml:mo>,</mml:mo><mml:mrow><mml:mi>j</mml:mi><mml:mo>≤</mml:mo><mml:mi>L</mml:mi></mml:mrow></mml:mrow></mml:math></inline-formula>, as <inline-formula><mml:math id="inf1243"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msub><mml:mi mathvariant="bold-italic">ϵ</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msub><mml:mi mathvariant="bold-italic">e</mml:mi><mml:mrow><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mrow><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:msub><mml:mi>w</mml:mi><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:msub><mml:mi mathvariant="bold-italic">e</mml:mi><mml:mrow><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mrow><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:mo>…</mml:mo><mml:mrow><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:msubsup><mml:mi>w</mml:mi><mml:mrow><mml:mi>i</mml:mi></mml:mrow><mml:mrow><mml:mi>L</mml:mi><mml:mo>−</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msubsup><mml:msub><mml:mi mathvariant="bold-italic">e</mml:mi><mml:mrow><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mstyle></mml:math></inline-formula>, where <italic>w</italic><sub><italic>i</italic></sub> is the eigenvalue associated to <inline-formula><mml:math id="inf1244"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msub><mml:mi mathvariant="bold-italic">e</mml:mi><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mstyle></mml:math></inline-formula>. We have<disp-formula id="equ77"><label>(76)</label><mml:math id="m77"><mml:mrow><mml:mstyle displaystyle="true" scriptlevel="0"><mml:msub><mml:mi>J</mml:mi><mml:mrow><mml:mi>x</mml:mi></mml:mrow></mml:msub><mml:msub><mml:mi mathvariant="bold-italic">ϵ</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msub><mml:mi>J</mml:mi><mml:mrow><mml:mi>L</mml:mi></mml:mrow></mml:msub><mml:msub><mml:mi mathvariant="bold-italic">e</mml:mi><mml:mrow><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mrow><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:msub><mml:mi>w</mml:mi><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:msub><mml:mi>J</mml:mi><mml:mrow><mml:mi>L</mml:mi></mml:mrow></mml:msub><mml:msub><mml:mi mathvariant="bold-italic">e</mml:mi><mml:mrow><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mrow><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:mo>…</mml:mo><mml:mrow><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:msubsup><mml:mi>w</mml:mi><mml:mrow><mml:mi>i</mml:mi></mml:mrow><mml:mrow><mml:mi>L</mml:mi><mml:mo>−</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msubsup><mml:msub><mml:mi>J</mml:mi><mml:mrow><mml:mi>L</mml:mi></mml:mrow></mml:msub><mml:msub><mml:mi mathvariant="bold-italic">e</mml:mi><mml:mrow><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:msub><mml:mi>ω</mml:mi><mml:mrow><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msub><mml:mi mathvariant="bold-italic">e</mml:mi><mml:mrow><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mrow><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:msub><mml:mi>w</mml:mi><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:msub><mml:mi mathvariant="bold-italic">e</mml:mi><mml:mrow><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mrow><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:mo>…</mml:mo><mml:mrow><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:msubsup><mml:mi>w</mml:mi><mml:mrow><mml:mi>i</mml:mi></mml:mrow><mml:mrow><mml:mi>L</mml:mi><mml:mo>−</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msubsup><mml:msub><mml:mi mathvariant="bold-italic">e</mml:mi><mml:mrow><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:msub><mml:mi>ω</mml:mi><mml:mrow><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:msub><mml:mi mathvariant="bold-italic">ϵ</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo></mml:mstyle></mml:mrow></mml:math></disp-formula><disp-formula id="equ78"><label>(77)</label><mml:math id="m78"><mml:mrow><mml:mstyle displaystyle="true" scriptlevel="0"><mml:msub><mml:mi>J</mml:mi><mml:mrow><mml:mi>y</mml:mi></mml:mrow></mml:msub><mml:msub><mml:mi mathvariant="bold-italic">ϵ</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msub><mml:mi>w</mml:mi><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:msub><mml:mi mathvariant="bold-italic">e</mml:mi><mml:mrow><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mrow><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:mo>…</mml:mo><mml:mrow><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:msubsup><mml:mi>w</mml:mi><mml:mrow><mml:mi>i</mml:mi></mml:mrow><mml:mrow><mml:mi>L</mml:mi><mml:mo>−</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msubsup><mml:msub><mml:mi mathvariant="bold-italic">e</mml:mi><mml:mrow><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mrow><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:msub><mml:mi mathvariant="bold-italic">e</mml:mi><mml:mrow><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:msub><mml:mi>ω</mml:mi><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msub><mml:mi mathvariant="bold-italic">e</mml:mi><mml:mrow><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mrow><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:msub><mml:mi>w</mml:mi><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:msub><mml:mi mathvariant="bold-italic">e</mml:mi><mml:mrow><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mrow><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:mo>…</mml:mo><mml:mrow><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:msubsup><mml:mi>w</mml:mi><mml:mrow><mml:mi>i</mml:mi></mml:mrow><mml:mrow><mml:mi>L</mml:mi><mml:mo>−</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msubsup><mml:msub><mml:mi mathvariant="bold-italic">e</mml:mi><mml:mrow><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:msub><mml:mi>ω</mml:mi><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:msub><mml:mi mathvariant="bold-italic">ϵ</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo></mml:mstyle></mml:mrow></mml:math></disp-formula></p><p>which shows that <inline-formula><mml:math id="inf1245"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msub><mml:mi mathvariant="bold-italic">ϵ</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mstyle></mml:math></inline-formula> is indeed a basis diagonalizing <inline-formula><mml:math id="inf1246"><mml:msub><mml:mi>J</mml:mi><mml:mi>x</mml:mi></mml:msub></mml:math></inline-formula> and <inline-formula><mml:math id="inf1247"><mml:msub><mml:mi>J</mml:mi><mml:mi>y</mml:mi></mml:msub></mml:math></inline-formula>. Moreover, as <inline-formula><mml:math id="inf1248"><mml:msub><mml:mi>J</mml:mi><mml:mi>x</mml:mi></mml:msub></mml:math></inline-formula> and <inline-formula><mml:math id="inf1249"><mml:msub><mml:mi>J</mml:mi><mml:mi>y</mml:mi></mml:msub></mml:math></inline-formula> stabilize the space <inline-formula><mml:math id="inf1250"><mml:msub><mml:mi>V</mml:mi><mml:mi>m</mml:mi></mml:msub></mml:math></inline-formula>, the basis <inline-formula><mml:math id="inf1251"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msub><mml:mi mathvariant="bold-italic">ϵ</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mstyle></mml:math></inline-formula> spans the space <inline-formula><mml:math id="inf1252"><mml:msub><mml:mi>V</mml:mi><mml:mi>m</mml:mi></mml:msub></mml:math></inline-formula>, as well as all the spaces defined as intersections of subsets of <inline-formula><mml:math id="inf1253"><mml:msub><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:msub><mml:mi>V</mml:mi><mml:mi>m</mml:mi></mml:msub><mml:mo stretchy="false">}</mml:mo></mml:mrow><mml:mrow><mml:mn>1</mml:mn><mml:mo>≤</mml:mo><mml:mi>m</mml:mi><mml:mo>≤</mml:mo><mml:mi>M</mml:mi></mml:mrow></mml:msub></mml:math></inline-formula>. Consider the set of indices <inline-formula><mml:math id="inf1254"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mn>1</mml:mn><mml:mo>≤</mml:mo><mml:msub><mml:mi>m</mml:mi><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>§lt;</mml:mo><mml:mo>…</mml:mo><mml:mo>§lt;</mml:mo><mml:msub><mml:mi>m</mml:mi><mml:mrow><mml:mi>k</mml:mi></mml:mrow></mml:msub><mml:mo>§lt;</mml:mo><mml:mi>M</mml:mi></mml:mrow></mml:mstyle></mml:math></inline-formula>, <inline-formula><mml:math id="inf1255"><mml:mrow><mml:mn>1</mml:mn><mml:mo>≤</mml:mo><mml:mi>k</mml:mi><mml:mo>≤</mml:mo><mml:mi>M</mml:mi></mml:mrow></mml:math></inline-formula>, specifying the intersection <inline-formula><mml:math id="inf1256"><mml:mrow><mml:msub><mml:mi>V</mml:mi><mml:msub><mml:mi>m</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:msub><mml:mo>∩</mml:mo><mml:mi mathvariant="normal">…</mml:mi><mml:mo>∩</mml:mo><mml:msub><mml:mi>V</mml:mi><mml:msub><mml:mi>m</mml:mi><mml:mi>k</mml:mi></mml:msub></mml:msub></mml:mrow></mml:math></inline-formula>. By the same reasoning as for dimension 1, the basis elements spanning <inline-formula><mml:math id="inf1257"><mml:mrow><mml:msub><mml:mi>V</mml:mi><mml:msub><mml:mi>m</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:msub><mml:mo>∩</mml:mo><mml:mi mathvariant="normal">…</mml:mi><mml:mo>∩</mml:mo><mml:msub><mml:mi>V</mml:mi><mml:msub><mml:mi>m</mml:mi><mml:mi>k</mml:mi></mml:msub></mml:msub></mml:mrow></mml:math></inline-formula> are those eigenvectors <inline-formula><mml:math id="inf1258"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msub><mml:mi mathvariant="bold-italic">ϵ</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mstyle></mml:math></inline-formula> that are <inline-formula><mml:math id="inf1259"><mml:mrow><mml:mi>gcd</mml:mi><mml:mo>⁡</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:msub><mml:mi>m</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:msub><mml:mo>,</mml:mo><mml:mi mathvariant="normal">…</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:msub><mml:mi>m</mml:mi><mml:mi>k</mml:mi></mml:msub></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula>-periodic in both <inline-formula><mml:math id="inf1260"><mml:mi>x</mml:mi></mml:math></inline-formula>-direction and <inline-formula><mml:math id="inf1261"><mml:mi>y</mml:mi></mml:math></inline-formula>-direction. As <inline-formula><mml:math id="inf1262"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msub><mml:mi>J</mml:mi><mml:mrow><mml:mi>x</mml:mi></mml:mrow></mml:msub><mml:msub><mml:mi mathvariant="bold-italic">ϵ</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mi>ω</mml:mi><mml:mrow><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:msub><mml:mi mathvariant="bold-italic">ϵ</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mstyle></mml:math></inline-formula> and <inline-formula><mml:math id="inf1263"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msub><mml:mi>J</mml:mi><mml:mrow><mml:mi>y</mml:mi></mml:mrow></mml:msub><mml:msub><mml:mi mathvariant="bold-italic">ϵ</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mi>ω</mml:mi><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:msub><mml:mi mathvariant="bold-italic">ϵ</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mstyle></mml:math></inline-formula>, posing <inline-formula><mml:math id="inf1264"><mml:mrow><mml:mi>g</mml:mi><mml:mo>=</mml:mo><mml:mrow><mml:mi>gcd</mml:mi><mml:mo>⁡</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:msub><mml:mi>m</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:msub><mml:mo>,</mml:mo><mml:mi mathvariant="normal">…</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:msub><mml:mi>m</mml:mi><mml:mi>k</mml:mi></mml:msub></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula>, this is equivalent to <inline-formula><mml:math id="inf1265"><mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi>g</mml:mi><mml:mo>⁢</mml:mo><mml:mi>i</mml:mi></mml:mrow><mml:mo>,</mml:mo><mml:mrow><mml:mi>g</mml:mi><mml:mo>⁢</mml:mo><mml:mi>j</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mn>0</mml:mn><mml:mo>,</mml:mo><mml:mn>0</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula> in <inline-formula><mml:math id="inf1266"><mml:mrow><mml:mrow><mml:mrow><mml:mrow><mml:mrow><mml:mi>ℤ</mml:mi><mml:mo>/</mml:mo><mml:mi>g</mml:mi></mml:mrow><mml:mo>⁢</mml:mo><mml:mi>ℤ</mml:mi></mml:mrow><mml:mo>×</mml:mo><mml:mi>ℤ</mml:mi></mml:mrow><mml:mo>/</mml:mo><mml:mi>g</mml:mi></mml:mrow><mml:mo>⁢</mml:mo><mml:mi>ℤ</mml:mi></mml:mrow></mml:math></inline-formula>. By the subgroup structure of cyclic group, the basis elements <inline-formula><mml:math id="inf1267"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msub><mml:mi mathvariant="bold-italic">ϵ</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mstyle></mml:math></inline-formula> generating <inline-formula><mml:math id="inf1268"><mml:mrow><mml:msub><mml:mi>V</mml:mi><mml:msub><mml:mi>m</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:msub><mml:mo>∩</mml:mo><mml:mi mathvariant="normal">…</mml:mi><mml:mo>∩</mml:mo><mml:msub><mml:mi>V</mml:mi><mml:msub><mml:mi>m</mml:mi><mml:mi>k</mml:mi></mml:msub></mml:msub></mml:mrow></mml:math></inline-formula> are thus indexed by <inline-formula><mml:math id="inf1269"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> where <inline-formula><mml:math id="inf1270"><mml:mi>i</mml:mi></mml:math></inline-formula> and <inline-formula><mml:math id="inf1271"><mml:mi>j</mml:mi></mml:math></inline-formula> are elements of the unique subgroup of order <inline-formula><mml:math id="inf1272"><mml:mi>g</mml:mi></mml:math></inline-formula> in <inline-formula><mml:math id="inf1273"><mml:mrow><mml:mrow><mml:mi>ℤ</mml:mi><mml:mo>/</mml:mo><mml:mi>L</mml:mi></mml:mrow><mml:mo>⁢</mml:mo><mml:mi>ℤ</mml:mi></mml:mrow></mml:math></inline-formula>. There are <inline-formula><mml:math id="inf1274"><mml:msup><mml:mi>g</mml:mi><mml:mn>2</mml:mn></mml:msup></mml:math></inline-formula> such basis elements, showing that<disp-formula id="equ79"><label>(78)</label><mml:math id="m79"><mml:mrow><mml:mo>dim</mml:mo><mml:msub><mml:mi>V</mml:mi><mml:msub><mml:mi>m</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:msub><mml:mo>∩</mml:mo><mml:mi mathvariant="normal">…</mml:mi><mml:mo>∩</mml:mo><mml:msub><mml:mi>V</mml:mi><mml:msub><mml:mi>m</mml:mi><mml:mi>k</mml:mi></mml:msub></mml:msub><mml:mo>=</mml:mo><mml:msup><mml:mi>g</mml:mi><mml:mn>2</mml:mn></mml:msup><mml:mo>=</mml:mo><mml:mi>gcd</mml:mi><mml:mpadded width="+1.7pt"><mml:msup><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:msub><mml:mi>m</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:msub><mml:mo>,</mml:mo><mml:mi mathvariant="normal">…</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:msub><mml:mi>m</mml:mi><mml:mi>k</mml:mi></mml:msub></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mn>2</mml:mn></mml:msup></mml:mpadded><mml:mo>.</mml:mo></mml:mrow></mml:math></disp-formula></p><p>The rank formula follows immediately from expressing <inline-formula><mml:math id="inf1275"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mrow><mml:mi mathvariant="normal">r</mml:mi><mml:mi mathvariant="normal">a</mml:mi><mml:mi mathvariant="normal">n</mml:mi><mml:mi mathvariant="normal">k</mml:mi></mml:mrow><mml:mrow><mml:msubsup><mml:mi>A</mml:mi><mml:mrow><mml:mi mathvariant="bold-italic">λ</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>d</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msubsup></mml:mrow><mml:mo>=</mml:mo><mml:mi>dim</mml:mi><mml:mo>⁡</mml:mo><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msub><mml:mi>V</mml:mi><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:mo>…</mml:mo><mml:mo>+</mml:mo><mml:msub><mml:mi>V</mml:mi><mml:mrow><mml:mi>M</mml:mi></mml:mrow></mml:msub></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mstyle></mml:math></inline-formula> via the exclusion-inclusion principle.</p><p>(ii) Just as for <inline-formula><mml:math id="inf1276"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>i</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula>, we follow the same strategy as for dimension 1 to show that the contiguous-separating capacity equals <inline-formula><mml:math id="inf1277"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mrow><mml:mi mathvariant="normal">r</mml:mi><mml:mi mathvariant="normal">a</mml:mi><mml:mi mathvariant="normal">n</mml:mi><mml:mi mathvariant="normal">k</mml:mi></mml:mrow><mml:mrow><mml:msubsup><mml:mi>A</mml:mi><mml:mrow><mml:mi mathvariant="bold-italic">λ</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>d</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msubsup></mml:mrow></mml:mrow></mml:mstyle></mml:math></inline-formula>. The only caveat to address is that the grid-like inputs, that is, the columns of <inline-formula><mml:math id="inf1278"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msubsup><mml:mi>A</mml:mi><mml:mrow><mml:mi mathvariant="bold-italic">λ</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>d</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msubsup></mml:mrow></mml:mstyle></mml:math></inline-formula>, are generated by the action of two shift operators instead of one. Specifically, starting from the first column <inline-formula><mml:math id="inf1279"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msub><mml:mi mathvariant="bold-italic">c</mml:mi><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub></mml:mrow></mml:mstyle></mml:math></inline-formula> of <inline-formula><mml:math id="inf1280"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msubsup><mml:mi>A</mml:mi><mml:mrow><mml:mi mathvariant="bold-italic">λ</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>d</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msubsup></mml:mrow></mml:mstyle></mml:math></inline-formula>, we can generate all subsequent columns by action of the operators <inline-formula><mml:math id="inf1281"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msub><mml:mi>J</mml:mi><mml:mrow><mml:mi mathvariant="bold-italic">λ</mml:mi><mml:mo>,</mml:mo><mml:mi>x</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mstyle></mml:math></inline-formula> and <inline-formula><mml:math id="inf1282"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msub><mml:mi>J</mml:mi><mml:mrow><mml:mi mathvariant="bold-italic">λ</mml:mi><mml:mo>,</mml:mo><mml:mi>y</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mstyle></mml:math></inline-formula>, whose matrix representations are given by<disp-formula id="equ80"><label>(79)</label><mml:math id="m80"><mml:mrow><mml:mstyle displaystyle="true" scriptlevel="0"><mml:msub><mml:mi>J</mml:mi><mml:mrow><mml:mi mathvariant="bold-italic">λ</mml:mi><mml:mo>,</mml:mo><mml:mi>x</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:mo>(</mml:mo><mml:mtable columnalign="center center center center" columnspacing="1em" rowspacing="4pt"><mml:mtr><mml:mtd><mml:msub><mml:mi>J</mml:mi><mml:mrow><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>×</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub></mml:mrow></mml:msub></mml:mtd><mml:mtd/><mml:mtd/></mml:mtr><mml:mtr><mml:mtd/><mml:mtd><mml:msub><mml:mi>J</mml:mi><mml:mrow><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msub><mml:mo>×</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msub></mml:mrow></mml:msub></mml:mtd><mml:mtd/><mml:mtd/></mml:mtr><mml:mtr><mml:mtd/><mml:mtd/><mml:mtd><mml:mo>⋱</mml:mo></mml:mtd><mml:mtd/></mml:mtr><mml:mtr><mml:mtd/><mml:mtd/><mml:mtd/><mml:mtd><mml:msub><mml:mi>J</mml:mi><mml:mrow><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mi>M</mml:mi></mml:mrow></mml:msub><mml:mo>×</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mi>M</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub></mml:mtd></mml:mtr></mml:mtable><mml:mo>)</mml:mo></mml:mrow><mml:mspace width="thinmathspace"/><mml:mo>,</mml:mo><mml:mspace width="1em"/><mml:mrow><mml:mi mathvariant="normal">w</mml:mi><mml:mi mathvariant="normal">i</mml:mi><mml:mi mathvariant="normal">t</mml:mi><mml:mi mathvariant="normal">h</mml:mi></mml:mrow><mml:mtext> </mml:mtext><mml:mspace width="1em"/><mml:msub><mml:mi>J</mml:mi><mml:mrow><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mi>m</mml:mi></mml:mrow></mml:msub><mml:mo>×</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mi>m</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:mo>(</mml:mo><mml:mtable columnalign="center center center center" columnspacing="1em" rowspacing="4pt"><mml:mtr><mml:mtd><mml:msub><mml:mi>J</mml:mi><mml:mrow><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mi>m</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub></mml:mtd><mml:mtd/><mml:mtd/></mml:mtr><mml:mtr><mml:mtd/><mml:mtd><mml:msub><mml:mi>J</mml:mi><mml:mrow><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mi>m</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub></mml:mtd><mml:mtd/><mml:mtd/></mml:mtr><mml:mtr><mml:mtd/><mml:mtd/><mml:mtd><mml:mo>⋱</mml:mo></mml:mtd><mml:mtd/></mml:mtr><mml:mtr><mml:mtd/><mml:mtd/><mml:mtd/><mml:mtd><mml:msub><mml:mi>J</mml:mi><mml:mrow><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mi>m</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub></mml:mtd></mml:mtr></mml:mtable><mml:mo>)</mml:mo></mml:mrow><mml:mspace width="thinmathspace"/><mml:mo>,</mml:mo></mml:mstyle></mml:mrow></mml:math></disp-formula><disp-formula id="equ81"><label>(80)</label><mml:math id="m81"><mml:mrow><mml:mstyle displaystyle="true" scriptlevel="0"><mml:msub><mml:mi>J</mml:mi><mml:mrow><mml:mi mathvariant="bold-italic">λ</mml:mi><mml:mo>,</mml:mo><mml:mi>y</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:mo>(</mml:mo><mml:mtable columnalign="center center center center" columnspacing="1em" rowspacing="4pt"><mml:mtr><mml:mtd><mml:msubsup><mml:mi>J</mml:mi><mml:mrow><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>×</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub></mml:mrow><mml:mrow><mml:mi mathvariant="normal">′</mml:mi></mml:mrow></mml:msubsup></mml:mtd><mml:mtd/><mml:mtd/></mml:mtr><mml:mtr><mml:mtd/><mml:mtd><mml:msubsup><mml:mi>J</mml:mi><mml:mrow><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msub><mml:mo>×</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msub></mml:mrow><mml:mrow><mml:mi mathvariant="normal">′</mml:mi></mml:mrow></mml:msubsup></mml:mtd><mml:mtd/><mml:mtd/></mml:mtr><mml:mtr><mml:mtd/><mml:mtd/><mml:mtd><mml:mo>⋱</mml:mo></mml:mtd><mml:mtd/></mml:mtr><mml:mtr><mml:mtd/><mml:mtd/><mml:mtd/><mml:mtd><mml:msubsup><mml:mi>J</mml:mi><mml:mrow><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mi>M</mml:mi></mml:mrow></mml:msub><mml:mo>×</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mi>M</mml:mi></mml:mrow></mml:msub></mml:mrow><mml:mrow><mml:mi mathvariant="normal">′</mml:mi></mml:mrow></mml:msubsup></mml:mtd></mml:mtr></mml:mtable><mml:mo>)</mml:mo></mml:mrow><mml:mspace width="thinmathspace"/><mml:mo>,</mml:mo><mml:mspace width="1em"/><mml:mrow><mml:mi mathvariant="normal">w</mml:mi><mml:mi mathvariant="normal">i</mml:mi><mml:mi mathvariant="normal">t</mml:mi><mml:mi mathvariant="normal">h</mml:mi></mml:mrow><mml:mtext> </mml:mtext><mml:mspace width="1em"/><mml:msubsup><mml:mi>J</mml:mi><mml:mrow><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mi>m</mml:mi></mml:mrow></mml:msub><mml:mo>×</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mi>m</mml:mi></mml:mrow></mml:msub></mml:mrow><mml:mrow><mml:mi mathvariant="normal">′</mml:mi></mml:mrow></mml:msubsup><mml:mo>=</mml:mo><mml:mrow><mml:mo>(</mml:mo><mml:mtable columnalign="center center center center" columnspacing="1em" rowspacing="4pt"><mml:mtr><mml:mtd><mml:mn>0</mml:mn></mml:mtd><mml:mtd><mml:msub><mml:mi>I</mml:mi><mml:mrow><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mi>m</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub></mml:mtd><mml:mtd/></mml:mtr><mml:mtr><mml:mtd/><mml:mtd><mml:mo>⋱</mml:mo></mml:mtd><mml:mtd><mml:mo>⋱</mml:mo></mml:mtd><mml:mtd/></mml:mtr><mml:mtr><mml:mtd/><mml:mtd/><mml:mtd><mml:mo>⋱</mml:mo></mml:mtd><mml:mtd><mml:msub><mml:mi>I</mml:mi><mml:mrow><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mi>m</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:msub><mml:mi>I</mml:mi><mml:mrow><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mi>m</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub></mml:mtd><mml:mtd/><mml:mtd/><mml:mtd><mml:mn>0</mml:mn></mml:mtd></mml:mtr></mml:mtable><mml:mo>)</mml:mo></mml:mrow><mml:mspace width="thinmathspace"/><mml:mo>.</mml:mo></mml:mstyle></mml:mrow></mml:math></disp-formula></p><p>Notice that <inline-formula><mml:math id="inf1283"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msub><mml:mi>J</mml:mi><mml:mrow><mml:mi mathvariant="bold-italic">λ</mml:mi><mml:mo>,</mml:mo><mml:mi>x</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mstyle></mml:math></inline-formula> and <inline-formula><mml:math id="inf1284"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msub><mml:mi>J</mml:mi><mml:mrow><mml:mi mathvariant="bold-italic">λ</mml:mi><mml:mo>,</mml:mo><mml:mi>y</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mstyle></mml:math></inline-formula> commute. By the same reasoning as for dimension 1, we know that the separating capacity cannot exceed <inline-formula><mml:math id="inf1285"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mrow><mml:mi mathvariant="normal">r</mml:mi><mml:mi mathvariant="normal">a</mml:mi><mml:mi mathvariant="normal">n</mml:mi><mml:mi mathvariant="normal">k</mml:mi></mml:mrow><mml:mrow><mml:msubsup><mml:mi>A</mml:mi><mml:mrow><mml:mi mathvariant="bold-italic">λ</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>d</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msubsup></mml:mrow></mml:mrow></mml:mstyle></mml:math></inline-formula>. Then, to prove that the separating capacity equals <inline-formula><mml:math id="inf1286"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mrow><mml:mi mathvariant="normal">r</mml:mi><mml:mi mathvariant="normal">a</mml:mi><mml:mi mathvariant="normal">n</mml:mi><mml:mi mathvariant="normal">k</mml:mi></mml:mrow><mml:mrow><mml:msubsup><mml:mi>A</mml:mi><mml:mrow><mml:mi mathvariant="bold-italic">λ</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>d</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msubsup></mml:mrow></mml:mrow></mml:mstyle></mml:math></inline-formula>, it is enough to exhibit a linearly independent set of contiguous positions with cardinality <inline-formula><mml:math id="inf1287"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mrow><mml:mi mathvariant="normal">r</mml:mi><mml:mi mathvariant="normal">a</mml:mi><mml:mi mathvariant="normal">n</mml:mi><mml:mi mathvariant="normal">k</mml:mi></mml:mrow><mml:mrow><mml:msubsup><mml:mi>A</mml:mi><mml:mrow><mml:mi mathvariant="bold-italic">λ</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>d</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msubsup></mml:mrow></mml:mrow></mml:mstyle></mml:math></inline-formula>. Let us exhibit such positions. Mirroring the 1D case, let us consider the sequence <inline-formula><mml:math id="inf1288"><mml:msubsup><mml:mi>d</mml:mi><mml:mi>l</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msubsup></mml:math></inline-formula> defined by<disp-formula id="equ82"><label>(81)</label><mml:math id="m82"><mml:mrow><mml:mstyle displaystyle="true" scriptlevel="0"><mml:msubsup><mml:mi>d</mml:mi><mml:mrow><mml:mi>l</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msubsup><mml:mo>=</mml:mo><mml:mi>dim</mml:mi><mml:mo>⁡</mml:mo><mml:mrow><mml:mi mathvariant="normal">s</mml:mi><mml:mi mathvariant="normal">p</mml:mi><mml:mi mathvariant="normal">a</mml:mi><mml:mi mathvariant="normal">n</mml:mi></mml:mrow><mml:mrow><mml:mo>{</mml:mo><mml:mrow><mml:msubsup><mml:mi>J</mml:mi><mml:mrow><mml:mi mathvariant="bold-italic">λ</mml:mi><mml:mo>,</mml:mo><mml:mi>y</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msubsup><mml:msub><mml:mi mathvariant="bold-italic">c</mml:mi><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mrow><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:mn>1</mml:mn><mml:mo>≤</mml:mo><mml:mi>i</mml:mi><mml:mo>≤</mml:mo><mml:mi>l</mml:mi></mml:mrow><mml:mo>}</mml:mo></mml:mrow><mml:mo>.</mml:mo></mml:mstyle></mml:mrow></mml:math></disp-formula></p><p>The above sequence is strictly increasing by unit step until some <italic>l</italic><sub>1</sub>, after which it remains constant at value<disp-formula id="equ83"><label>(82)</label><mml:math id="m83"><mml:mrow><mml:mstyle displaystyle="true" scriptlevel="0"><mml:msubsup><mml:mi>d</mml:mi><mml:mrow><mml:msub><mml:mi>l</mml:mi><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub></mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msubsup><mml:mo>=</mml:mo><mml:mi>dim</mml:mi><mml:mo>⁡</mml:mo><mml:msub><mml:mi>V</mml:mi><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:mrow><mml:mi mathvariant="normal">w</mml:mi><mml:mi mathvariant="normal">i</mml:mi><mml:mi mathvariant="normal">t</mml:mi><mml:mi mathvariant="normal">h</mml:mi></mml:mrow><mml:msub><mml:mi>V</mml:mi><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:mi mathvariant="normal">s</mml:mi><mml:mi mathvariant="normal">p</mml:mi><mml:mi mathvariant="normal">a</mml:mi><mml:mi mathvariant="normal">n</mml:mi></mml:mrow><mml:mrow><mml:mo>{</mml:mo><mml:mrow><mml:msubsup><mml:mi>J</mml:mi><mml:mrow><mml:mi mathvariant="bold-italic">λ</mml:mi><mml:mo>,</mml:mo><mml:mi>y</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msubsup><mml:msub><mml:mi mathvariant="bold-italic">c</mml:mi><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mrow><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:mn>1</mml:mn><mml:mo>≤</mml:mo><mml:mi>i</mml:mi><mml:mo>≤</mml:mo><mml:mi>L</mml:mi></mml:mrow><mml:mo>}</mml:mo></mml:mrow><mml:mo>.</mml:mo></mml:mstyle></mml:mrow></mml:math></disp-formula></p><p>Let us then consider the sequence<disp-formula id="equ84"><label>(83)</label><mml:math id="m84"><mml:mrow><mml:mi>dim</mml:mi><mml:mo>⁡</mml:mo><mml:msub><mml:mi>V</mml:mi><mml:mi>L</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mi>dim</mml:mi><mml:mo>⁡</mml:mo><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msub><mml:mi>V</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>J</mml:mi><mml:mrow><mml:mi mathvariant="bold-italic">λ</mml:mi><mml:mo>,</mml:mo><mml:mi>x</mml:mi></mml:mrow></mml:msub><mml:msub><mml:mi>V</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:msubsup><mml:mi>J</mml:mi><mml:mrow><mml:mi mathvariant="bold-italic">λ</mml:mi><mml:mo>,</mml:mo><mml:mi>x</mml:mi></mml:mrow><mml:mi>L</mml:mi></mml:msubsup><mml:msub><mml:mi>V</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:mi>dim</mml:mi><mml:mo>⁡</mml:mo><mml:mrow><mml:mi mathvariant="normal">s</mml:mi><mml:mi mathvariant="normal">p</mml:mi><mml:mi mathvariant="normal">a</mml:mi><mml:mi mathvariant="normal">n</mml:mi></mml:mrow><mml:mrow><mml:mo>{</mml:mo><mml:mrow><mml:msubsup><mml:mi>J</mml:mi><mml:mrow><mml:mi mathvariant="bold-italic">λ</mml:mi><mml:mo>,</mml:mo><mml:mi>y</mml:mi></mml:mrow><mml:mi>i</mml:mi></mml:msubsup><mml:msubsup><mml:mi>J</mml:mi><mml:mrow><mml:mi mathvariant="bold-italic">λ</mml:mi><mml:mo>,</mml:mo><mml:mi>x</mml:mi></mml:mrow><mml:mi>j</mml:mi></mml:msubsup><mml:msub><mml:mrow><mml:mi mathvariant="bold">c</mml:mi></mml:mrow><mml:mn>1</mml:mn></mml:msub><mml:mspace width="thinmathspace"/><mml:mo fence="false" stretchy="false">|</mml:mo><mml:mspace width="thinmathspace"/><mml:mn>1</mml:mn><mml:mo>≤</mml:mo><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi><mml:mo>≤</mml:mo><mml:mi>L</mml:mi></mml:mrow><mml:mo>}</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:mrow><mml:mi mathvariant="normal">r</mml:mi><mml:mi mathvariant="normal">a</mml:mi><mml:mi mathvariant="normal">n</mml:mi><mml:mi mathvariant="normal">k</mml:mi></mml:mrow><mml:mspace width="thickmathspace"/><mml:msubsup><mml:mi>A</mml:mi><mml:mrow><mml:mi mathvariant="bold-italic">λ</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>d</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msubsup><mml:mspace width="thinmathspace"/><mml:mo>.</mml:mo></mml:mrow></mml:math></disp-formula></p><p>The above sequence is also strictly increasing by unit step until some <italic>l</italic><sub>2</sub>, after which it remains constant at value<disp-formula id="equ85"><label>(84)</label><mml:math id="m85"><mml:mrow><mml:mstyle displaystyle="true" scriptlevel="0"><mml:msubsup><mml:mi>d</mml:mi><mml:mrow><mml:msub><mml:mi>l</mml:mi><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msub></mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mn>2</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msubsup><mml:mo>=</mml:mo><mml:mi>dim</mml:mi><mml:mo>⁡</mml:mo><mml:msub><mml:mi>V</mml:mi><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:mrow><mml:mi mathvariant="normal">w</mml:mi><mml:mi mathvariant="normal">i</mml:mi><mml:mi mathvariant="normal">t</mml:mi><mml:mi mathvariant="normal">h</mml:mi></mml:mrow><mml:msub><mml:mi>V</mml:mi><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mi>V</mml:mi><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:msub><mml:mi>J</mml:mi><mml:mrow><mml:mi mathvariant="bold-italic">λ</mml:mi><mml:mo>,</mml:mo><mml:mi>x</mml:mi></mml:mrow></mml:msub><mml:msub><mml:mi>V</mml:mi><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>.</mml:mo></mml:mstyle></mml:mrow></mml:math></disp-formula></p><p>Moreover, <italic>V</italic><sub>2</sub> admits for basis the vectors <inline-formula><mml:math id="inf1289"><mml:mrow><mml:mn>1</mml:mn><mml:mo>≤</mml:mo><mml:mi>i</mml:mi><mml:mo>≤</mml:mo><mml:msub><mml:mi>l</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula>, and <inline-formula><mml:math id="inf1290"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msubsup><mml:mi>J</mml:mi><mml:mrow><mml:mi>λ</mml:mi><mml:mo>,</mml:mo><mml:mi>y</mml:mi></mml:mrow><mml:mi>i</mml:mi></mml:msubsup><mml:msub><mml:mi>c</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:mn>1</mml:mn><mml:mo>≤</mml:mo><mml:mi>i</mml:mi><mml:mo>≤</mml:mo><mml:msub><mml:mi>l</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:mstyle></mml:math></inline-formula>, <inline-formula><mml:math id="inf1291"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msubsup><mml:mi>J</mml:mi><mml:mrow><mml:mi>λ</mml:mi><mml:mo>,</mml:mo><mml:mi>y</mml:mi></mml:mrow><mml:mi>i</mml:mi></mml:msubsup><mml:msub><mml:mi>J</mml:mi><mml:mrow><mml:mi>λ</mml:mi><mml:mo>,</mml:mo><mml:mi>y</mml:mi></mml:mrow></mml:msub><mml:msub><mml:mi>c</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:mn>1</mml:mn><mml:mo>≤</mml:mo><mml:mi>i</mml:mi><mml:mo>≤</mml:mo><mml:msub><mml:mi>l</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:mrow></mml:mstyle></mml:math></inline-formula>. We can iterate this construction by repeated action of the operator <inline-formula><mml:math id="inf1292"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msub><mml:mi>J</mml:mi><mml:mrow><mml:mi mathvariant="bold-italic">λ</mml:mi><mml:mo>,</mml:mo><mml:mi>x</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mstyle></mml:math></inline-formula>, yielding a sequence of number <italic>l</italic><sub><italic>k</italic></sub> and a sequence of space <inline-formula><mml:math id="inf1293"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msub><mml:mi>V</mml:mi><mml:mrow><mml:mi>k</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mi>V</mml:mi><mml:mrow><mml:mi>k</mml:mi><mml:mo>−</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:msub><mml:mi>J</mml:mi><mml:mrow><mml:mi mathvariant="bold-italic">λ</mml:mi><mml:mo>,</mml:mo><mml:mi>x</mml:mi></mml:mrow></mml:msub><mml:msub><mml:mi>V</mml:mi><mml:mrow><mml:mi>k</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mstyle></mml:math></inline-formula>. Necessarily, the sequence <italic>l</italic><sub><italic>k</italic></sub> becomes eventually zero as<disp-formula id="equ86"><label>(85)</label><mml:math id="m86"><mml:mrow><mml:mi>dim</mml:mi><mml:mo>⁡</mml:mo><mml:msub><mml:mi>V</mml:mi><mml:mi>L</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mi>dim</mml:mi><mml:mo>⁡</mml:mo><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msub><mml:mi>V</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>J</mml:mi><mml:mrow><mml:mi mathvariant="bold-italic">λ</mml:mi><mml:mo>,</mml:mo><mml:mi>x</mml:mi></mml:mrow></mml:msub><mml:msub><mml:mi>V</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:msubsup><mml:mi>J</mml:mi><mml:mrow><mml:mi mathvariant="bold-italic">λ</mml:mi><mml:mo>,</mml:mo><mml:mi>x</mml:mi></mml:mrow><mml:mi>L</mml:mi></mml:msubsup><mml:msub><mml:mi>V</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:mi>dim</mml:mi><mml:mo>⁡</mml:mo><mml:mrow><mml:mi mathvariant="normal">s</mml:mi><mml:mi mathvariant="normal">p</mml:mi><mml:mi mathvariant="normal">a</mml:mi><mml:mi mathvariant="normal">n</mml:mi></mml:mrow><mml:mrow><mml:mo>{</mml:mo><mml:mrow><mml:msubsup><mml:mi>J</mml:mi><mml:mrow><mml:mi mathvariant="bold-italic">λ</mml:mi><mml:mo>,</mml:mo><mml:mi>y</mml:mi></mml:mrow><mml:mi>i</mml:mi></mml:msubsup><mml:msubsup><mml:mi>J</mml:mi><mml:mrow><mml:mi mathvariant="bold-italic">λ</mml:mi><mml:mo>,</mml:mo><mml:mi>x</mml:mi></mml:mrow><mml:mi>j</mml:mi></mml:msubsup><mml:msub><mml:mi mathvariant="bold-italic">c</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mspace width="thinmathspace"/><mml:mo fence="false" stretchy="false">|</mml:mo><mml:mspace width="thinmathspace"/><mml:mn>1</mml:mn><mml:mo>≤</mml:mo><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi><mml:mo>≤</mml:mo><mml:mi>L</mml:mi></mml:mrow><mml:mo>}</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:mrow><mml:mi mathvariant="normal">r</mml:mi><mml:mi mathvariant="normal">a</mml:mi><mml:mi mathvariant="normal">n</mml:mi><mml:mi mathvariant="normal">k</mml:mi></mml:mrow><mml:mtext> </mml:mtext><mml:mrow><mml:msubsup><mml:mi>A</mml:mi><mml:mrow><mml:mi mathvariant="bold-italic">λ</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>d</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msubsup></mml:mrow><mml:mspace width="thinmathspace"/></mml:mrow></mml:math></disp-formula></p><p>Let us consider the smallest <inline-formula><mml:math id="inf1294"><mml:mrow><mml:mi>k</mml:mi><mml:mo>§gt;</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:math></inline-formula> for which <inline-formula><mml:math id="inf1295"><mml:mrow><mml:msub><mml:mi>l</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mn>0</mml:mn></mml:mrow></mml:math></inline-formula>, than the set of vectors<disp-formula id="equ87"><label>(86)</label><mml:math id="m87"><mml:mrow><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mo fence="false" stretchy="false">{</mml:mo><mml:mspace width="thinmathspace"/><mml:msubsup><mml:mi>J</mml:mi><mml:mrow><mml:mi mathvariant="bold-italic">λ</mml:mi><mml:mo>,</mml:mo><mml:mi>y</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msubsup><mml:msubsup><mml:mi>J</mml:mi><mml:mrow><mml:mi mathvariant="bold-italic">λ</mml:mi><mml:mo>,</mml:mo><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mi>j</mml:mi></mml:mrow></mml:msubsup><mml:msub><mml:mi mathvariant="bold-italic">c</mml:mi><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mrow><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:mspace width="thinmathspace"/><mml:mn>1</mml:mn><mml:mo>≤</mml:mo><mml:mi>j</mml:mi><mml:mo>&lt;</mml:mo><mml:mi>k</mml:mi><mml:mspace width="thinmathspace"/><mml:mo>,</mml:mo><mml:mn>0</mml:mn><mml:mo>≤</mml:mo><mml:mi>i</mml:mi><mml:mo>≤</mml:mo><mml:msub><mml:mi>l</mml:mi><mml:mrow><mml:mi>k</mml:mi></mml:mrow></mml:msub><mml:mo fence="false" stretchy="false">}</mml:mo></mml:mstyle></mml:mrow></mml:math></disp-formula></p><p>is linearly independent by construction and generates the range of <inline-formula><mml:math id="inf1296"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msubsup><mml:mi>A</mml:mi><mml:mrow><mml:mi mathvariant="bold-italic">λ</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>d</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msubsup></mml:mrow></mml:mstyle></mml:math></inline-formula>. In particular, we necessarily have <inline-formula><mml:math id="inf1297"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msub><mml:mi>l</mml:mi><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:mo>…</mml:mo><mml:mo>+</mml:mo><mml:msub><mml:mi>l</mml:mi><mml:mrow><mml:mi>k</mml:mi><mml:mo>−</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:mi mathvariant="normal">r</mml:mi><mml:mi mathvariant="normal">a</mml:mi><mml:mi mathvariant="normal">n</mml:mi><mml:mi mathvariant="normal">k</mml:mi></mml:mrow><mml:mrow><mml:mspace width="thinmathspace"/><mml:msubsup><mml:mi>A</mml:mi><mml:mrow><mml:mi mathvariant="bold-italic">λ</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>d</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msubsup></mml:mrow></mml:mrow></mml:mstyle></mml:math></inline-formula>. Observing that these vectors correspond to a connected component of positions concludes the proof.</p></sec><sec id="s32" sec-type="appendix"><title>Remark</title><p>Although we do not give the proof for arbitrary spatial dimension <inline-formula><mml:math id="inf1298"><mml:mrow><mml:mi>d</mml:mi><mml:mo>§gt;</mml:mo><mml:mn>2</mml:mn></mml:mrow></mml:math></inline-formula>, let us briefly comment on extending the above arguments to higher dimension. Such a generalization is straightforward but requires the utilization of tensor calculus. For integer periods <inline-formula><mml:math id="inf1299"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mi mathvariant="bold-italic">λ</mml:mi></mml:mrow></mml:mstyle></mml:math></inline-formula> and generic dimension <inline-formula><mml:math id="inf1300"><mml:mi>d</mml:mi></mml:math></inline-formula>, the activity tensor can be defined as<disp-formula id="equ88"><label>(87)</label><mml:math id="m88"><mml:mrow><mml:mstyle displaystyle="true" scriptlevel="0"><mml:msubsup><mml:mrow><mml:mi mathvariant="script">A</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="bold-italic">λ</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>d</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msubsup><mml:mo>=</mml:mo><mml:munder><mml:mo>∑</mml:mo><mml:mrow><mml:msub><mml:mi>i</mml:mi><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>i</mml:mi><mml:mrow><mml:mi>d</mml:mi></mml:mrow></mml:msub><mml:mo>∈</mml:mo><mml:msup><mml:mi>L</mml:mi><mml:mrow><mml:mi>d</mml:mi></mml:mrow></mml:msup></mml:mrow></mml:munder><mml:munderover><mml:mo>∑</mml:mo><mml:mrow><mml:mi>m</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mi>M</mml:mi></mml:mrow></mml:munderover><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msubsup><mml:mi>y</mml:mi><mml:mrow><mml:msub><mml:mi>i</mml:mi><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub></mml:mrow><mml:mrow><mml:mi>m</mml:mi></mml:mrow></mml:msubsup><mml:mo>⊗</mml:mo><mml:mo>…</mml:mo><mml:mo>⊗</mml:mo><mml:msubsup><mml:mi>y</mml:mi><mml:mrow><mml:msub><mml:mi>i</mml:mi><mml:mrow><mml:mi>d</mml:mi></mml:mrow></mml:msub></mml:mrow><mml:mrow><mml:mi>m</mml:mi></mml:mrow></mml:msubsup></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>⊗</mml:mo><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msubsup><mml:mi>x</mml:mi><mml:mrow><mml:msub><mml:mi>i</mml:mi><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub></mml:mrow><mml:mrow><mml:mo>⋆</mml:mo></mml:mrow></mml:msubsup><mml:mo>⊗</mml:mo><mml:mo>…</mml:mo><mml:mo>⊗</mml:mo><mml:msubsup><mml:mi>x</mml:mi><mml:mrow><mml:msub><mml:mi>i</mml:mi><mml:mrow><mml:mi>d</mml:mi></mml:mrow></mml:msub></mml:mrow><mml:mrow><mml:mo>⋆</mml:mo></mml:mrow></mml:msubsup></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mstyle></mml:mrow></mml:math></disp-formula></p><p>where <inline-formula><mml:math id="inf1301"><mml:mrow><mml:msubsup><mml:mi>y</mml:mi><mml:msub><mml:mi>i</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mi>m</mml:mi></mml:msubsup><mml:mo>⊗</mml:mo><mml:mi mathvariant="normal">…</mml:mi><mml:mo>⊗</mml:mo><mml:msubsup><mml:mi>y</mml:mi><mml:msub><mml:mi>i</mml:mi><mml:mi>d</mml:mi></mml:msub><mml:mi>m</mml:mi></mml:msubsup></mml:mrow></mml:math></inline-formula> is the canonical basis vector associated to the <inline-formula><mml:math id="inf1302"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>i</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:mi mathvariant="normal">…</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mi>i</mml:mi><mml:mi>d</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> coordinate in <inline-formula><mml:math id="inf1303"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msup><mml:mrow><mml:mi mathvariant="double-struck">R</mml:mi></mml:mrow><mml:mrow><mml:msubsup><mml:mi>λ</mml:mi><mml:mrow><mml:mi>m</mml:mi></mml:mrow><mml:mrow><mml:mi>d</mml:mi></mml:mrow></mml:msubsup></mml:mrow></mml:msup></mml:mrow></mml:mstyle></mml:math></inline-formula>, with <inline-formula><mml:math id="inf1304"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>i</mml:mi><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>i</mml:mi><mml:mrow><mml:mi>d</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mstyle></mml:math></inline-formula> considered as an element of <inline-formula><mml:math id="inf1305"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msup><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mrow><mml:mi mathvariant="double-struck">Z</mml:mi></mml:mrow><mml:mrow><mml:mo>/</mml:mo></mml:mrow><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mi>m</mml:mi></mml:mrow></mml:msub><mml:mrow><mml:mi mathvariant="double-struck">Z</mml:mi></mml:mrow></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mrow><mml:mi>d</mml:mi></mml:mrow></mml:msup></mml:mrow></mml:mstyle></mml:math></inline-formula>, and where <inline-formula><mml:math id="inf1306"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msubsup><mml:mi>x</mml:mi><mml:mrow><mml:msub><mml:mi>i</mml:mi><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub></mml:mrow><mml:mrow><mml:mo>⋆</mml:mo></mml:mrow></mml:msubsup><mml:mo>⊗</mml:mo><mml:mo>…</mml:mo><mml:mo>⊗</mml:mo><mml:msubsup><mml:mi>x</mml:mi><mml:mrow><mml:msub><mml:mi>i</mml:mi><mml:mrow><mml:mi>d</mml:mi></mml:mrow></mml:msub></mml:mrow><mml:mrow><mml:mo>⋆</mml:mo></mml:mrow></mml:msubsup></mml:mrow></mml:mstyle></mml:math></inline-formula> is the linear form associated to the <inline-formula><mml:math id="inf1307"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>i</mml:mi><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>i</mml:mi><mml:mrow><mml:mi>d</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mstyle></mml:math></inline-formula> coordinate in <inline-formula><mml:math id="inf1308"><mml:msup><mml:mi>ℝ</mml:mi><mml:msup><mml:mi>L</mml:mi><mml:mi>d</mml:mi></mml:msup></mml:msup></mml:math></inline-formula>. In tensorial form, the operators <inline-formula><mml:math id="inf1309"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msub><mml:mi>J</mml:mi><mml:mrow><mml:mi>k</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mstyle></mml:math></inline-formula>, <inline-formula><mml:math id="inf1310"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mn>1</mml:mn><mml:mo>≤</mml:mo><mml:mi>k</mml:mi><mml:mo>≤</mml:mo><mml:mi>d</mml:mi></mml:mrow></mml:mstyle></mml:math></inline-formula>, representing unit shift along the kth dimension, have the simple form <inline-formula><mml:math id="inf1311"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msub><mml:mi>J</mml:mi><mml:mrow><mml:mi>k</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mi>I</mml:mi><mml:mrow><mml:mi>L</mml:mi></mml:mrow></mml:msub><mml:mo>⊗</mml:mo><mml:mo>…</mml:mo><mml:mo>⊗</mml:mo><mml:msub><mml:mi>J</mml:mi><mml:mrow><mml:mi>L</mml:mi></mml:mrow></mml:msub><mml:mo>⊗</mml:mo><mml:mo>…</mml:mo><mml:mo>⊗</mml:mo><mml:msub><mml:mi>I</mml:mi><mml:mrow><mml:mi>L</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mstyle></mml:math></inline-formula> such that<disp-formula id="equ89"><label>(88)</label><mml:math id="m89"><mml:mrow><mml:mstyle displaystyle="true" scriptlevel="0"><mml:msub><mml:mi>J</mml:mi><mml:mrow><mml:mi>k</mml:mi></mml:mrow></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msub><mml:mi>x</mml:mi><mml:mrow><mml:msub><mml:mi>i</mml:mi><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub></mml:mrow></mml:msub><mml:mo>⊗</mml:mo><mml:mo>…</mml:mo><mml:mo>⊗</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mrow><mml:msub><mml:mi>i</mml:mi><mml:mrow><mml:mi>k</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub><mml:mo>⊗</mml:mo><mml:mo>…</mml:mo><mml:mo>⊗</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mrow><mml:msub><mml:mi>i</mml:mi><mml:mrow><mml:mi>L</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msub><mml:mi>I</mml:mi><mml:mrow><mml:mi>L</mml:mi></mml:mrow></mml:msub><mml:mo>⊗</mml:mo><mml:mo>…</mml:mo><mml:mo>⊗</mml:mo><mml:msub><mml:mi>J</mml:mi><mml:mrow><mml:mi>L</mml:mi></mml:mrow></mml:msub><mml:mo>⊗</mml:mo><mml:mo>…</mml:mo><mml:mo>⊗</mml:mo><mml:msub><mml:mi>I</mml:mi><mml:mrow><mml:mi>L</mml:mi></mml:mrow></mml:msub></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msub><mml:mi>x</mml:mi><mml:mrow><mml:msub><mml:mi>i</mml:mi><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub></mml:mrow></mml:msub><mml:mo>⊗</mml:mo><mml:mo>…</mml:mo><mml:mo>⊗</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mrow><mml:msub><mml:mi>i</mml:mi><mml:mrow><mml:mi>k</mml:mi></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>⊗</mml:mo><mml:mo>…</mml:mo><mml:mo>⊗</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mrow><mml:msub><mml:mi>i</mml:mi><mml:mrow><mml:mi>L</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mstyle></mml:mrow></mml:math></disp-formula></p><p>where <inline-formula><mml:math id="inf1312"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msub><mml:mi>i</mml:mi><mml:mrow><mml:mi>k</mml:mi></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:mstyle></mml:math></inline-formula> is considered as an element of <inline-formula><mml:math id="inf1313"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mrow><mml:mi mathvariant="double-struck">Z</mml:mi></mml:mrow><mml:mrow><mml:mo>/</mml:mo></mml:mrow><mml:mi>L</mml:mi><mml:mrow><mml:mi mathvariant="double-struck">Z</mml:mi></mml:mrow></mml:mrow></mml:mstyle></mml:math></inline-formula>. The generalization to arbitrary <inline-formula><mml:math id="inf1314"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mi>d</mml:mi></mml:mrow></mml:mstyle></mml:math></inline-formula>-dimension follows from realizing that <inline-formula><mml:math id="inf1315"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msub><mml:mi mathvariant="bold-italic">ϵ</mml:mi><mml:mrow><mml:msub><mml:mi>i</mml:mi><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>i</mml:mi><mml:mrow><mml:mi>L</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mi mathvariant="bold-italic">e</mml:mi><mml:mrow><mml:msub><mml:mi>i</mml:mi><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub></mml:mrow></mml:msub><mml:mo>⊗</mml:mo><mml:mo>…</mml:mo><mml:mo>⊗</mml:mo><mml:msub><mml:mi mathvariant="bold-italic">e</mml:mi><mml:mrow><mml:msub><mml:mi>i</mml:mi><mml:mrow><mml:mi>L</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub></mml:mrow></mml:mstyle></mml:math></inline-formula>, <inline-formula><mml:math id="inf1316"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msub><mml:mi>i</mml:mi><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>i</mml:mi><mml:mrow><mml:mi>d</mml:mi></mml:mrow></mml:msub><mml:mo>∈</mml:mo><mml:msup><mml:mi>L</mml:mi><mml:mrow><mml:mi>d</mml:mi></mml:mrow></mml:msup></mml:mrow></mml:mstyle></mml:math></inline-formula>, where <inline-formula><mml:math id="inf1317"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msub><mml:mi mathvariant="bold-italic">e</mml:mi><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mstyle></mml:math></inline-formula> is the eigenvector of <inline-formula><mml:math id="inf1318"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msub><mml:mi>J</mml:mi><mml:mrow><mml:mi>L</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mstyle></mml:math></inline-formula> associated to <inline-formula><mml:math id="inf1319"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msub><mml:mi>ω</mml:mi><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mstyle></mml:math></inline-formula>, form a basis diagonalizing all the operators <inline-formula><mml:math id="inf1320"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msub><mml:mi>J</mml:mi><mml:mrow><mml:mi>k</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mstyle></mml:math></inline-formula>, <inline-formula><mml:math id="inf1321"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mn>1</mml:mn><mml:mo>≤</mml:mo><mml:mi>k</mml:mi><mml:mo>≤</mml:mo><mml:mi>d</mml:mi></mml:mrow></mml:mstyle></mml:math></inline-formula> with <inline-formula><mml:math id="inf1322"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msub><mml:mi>J</mml:mi><mml:mrow><mml:mi>k</mml:mi></mml:mrow></mml:msub><mml:msub><mml:mi mathvariant="bold-italic">ϵ</mml:mi><mml:mrow><mml:msub><mml:mi>i</mml:mi><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>i</mml:mi><mml:mrow><mml:mi>L</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mi>ω</mml:mi><mml:mrow><mml:msub><mml:mi>i</mml:mi><mml:mrow><mml:mi>k</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub><mml:msub><mml:mi mathvariant="bold-italic">ϵ</mml:mi><mml:mrow><mml:msub><mml:mi>i</mml:mi><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>i</mml:mi><mml:mrow><mml:mi>L</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub></mml:mrow></mml:mstyle></mml:math></inline-formula>.</p></sec></app></app-group></back><sub-article article-type="decision-letter" id="sa1"><front-stub><article-id pub-id-type="doi">10.7554/eLife.62702.sa1</article-id><title-group><article-title>Decision letter</article-title></title-group><contrib-group content-type="section"><contrib contrib-type="editor"><name><surname>Berman</surname><given-names>Gordon J</given-names></name><role>Reviewing Editor</role><aff><institution>Emory University</institution><country>United States</country></aff></contrib></contrib-group><contrib-group><contrib contrib-type="reviewer"><name><surname>Brunel</surname><given-names>Nicolas</given-names></name><role>Reviewer</role></contrib></contrib-group></front-stub><body><boxed-text id="box1"><p>In the interests of transparency, eLife publishes the most substantive revision requests and the accompanying author responses.</p></boxed-text><p><bold>Acceptance summary:</bold></p><p>Hippocampal place cells and entorhinal grid cells are crucial elements of the spatial representation system of the brain, but the mechanisms underlying their emergence are still poorly understood. A long-standing hypothesis in the field is that the properties of place cells can be well described as a non-linear function of a weighted sum of inputs coming from entorhinal grid cells. In this paper, the authors explore the implications of this scenario, in a simplified model with discretized space, where grid cells are part of a discrete set of modules, and each cell has a perfectly periodic firing in space with a period that depends on the module. They compute analytically the number of possible place field arrangements, and the separating capacity, in this scenario, through a very nice extension of the classic Cover calculation for inputs in general position. These calculations show that the number of possible arrangements is much smaller than when inputs are in general position, but that they are more robust.</p><p><bold>Decision letter after peer review:</bold></p><p>Thank you for submitting your article &quot;Where can a place cell put its fields? Let us count the ways&quot; for consideration by <italic>eLife</italic>. Your article has been reviewed by 3 peer reviewers, and the evaluation has been overseen by a Reviewing Editor and Michael Frank as the Senior Editor. The following individual involved in review of your submission has agreed to reveal their identity: Nicolas Brunel, PhD (Reviewer #2).</p><p>The reviewers have discussed the reviews with one another and the Reviewing Editor has drafted this decision to help you prepare a revised submission. The reviewers were generally positive about the manuscript, finding that it significantly expands our understanding of the constraints on place field arrangements arising from grid cell inputs, but they would like to see several revisions and clarifications before being able to recommend it for publication. Please see the list of essential revisions below.</p><p>Summary:</p><p>Hippocampal place cells and entorhinal grid cells are crucial elements of the spatial representation system of the brain, but the mechanisms underlying their emergence are still poorly understood. A long standing hypothesis in the field is that the properties of place cells can be well described as a non-linear function of a weighted sum of inputs coming from entorhinal grid cells. In this paper, the authors explore implications of this scenario, in a simplified model with discretized space, where grid cells are part of a discrete set of modules, and each cell has a perfectly periodic firing in space with a period that depends on the module. They compute analytically the number of possible place field arrangements, and the separating capacity, in this scenario, through a very nice extension of the classic Cover calculation for inputs in general position. These calculations shows that the number of possible arrangements is much smaller than when inputs are in general position, but that they are more robust.</p><p>Essential revisions:</p><p>1. The questions that are addressed in the manuscript are interesting mathematically but do not map directly to realistic properties of place cells. The reviewers were concerned that many readers won't understand the limitations. Therefore, the limitations of the approach should be acknowledged and spelled out more clearly. The first question, whether grid cell inputs can produce all possible patterns of place cell activity, is quite detached from biological reality because in the vast majority of these patterns the place cell would fluctuate wildly between on and off states as a function of position, whereas in reality place cells fire sparsely. Importantly, the sparseness is not a conclusion or a prediction of the theory because any degree of sparseness can be easily achieved by varying the threshold. Instead, from the point of view of biological realism, sparseness must be imposed.</p><p>The work does consider also patterns that are sparse, having K fields over the whole range of input patterns, where K is small. This question, too, is detached from the reality of place cell firing because place cells would clearly exhibit many firing fields (not just a handful of fields) over the vast range of positions that correspond to all input patterns. Place cells can have multiple firing fields in large continuous environments, and each place cell may have a different field in a significant fraction of small environments. Thus, it is important to consider sparse patterns where the number of firing fields is proportional to the range of positions that are represented by the input patterns. In addition, ideally, it would be interesting to consider this question on a large set of disjoint sets of inputs patterns, each corresponding individually to a continuous stretch of positions (one environment) instead of one long stretch (or the full range). The two cases considered in the work, of arbitrary (dense) patterns and of extremely sparse patterns can be thought of as two extremes where it was possible to derive precise results. These results are suggestive of what might happen with more biologically relevant activity patterns, but the limitations should be acknowledged.</p><p>2. The reviewers found the discussion on graded receptive fields (lines 429-438) to be unconvincing, and it may convey an incorrect message about graded receptive fields once noise is taken into account. The argument is based on the observation that graded receptive fields can be related to narrow ones by a linear transformation. If this linear transformation is invertible, it does not alter the set of linearly separable patterns. However, the transformation under consideration is a low-pass filter. For all practical purposes, this transformation, which suppresses high frequency components of the input is non-invertible. The slightest amount of high frequency noise in the grid cell inputs would be dramatically amplified by applying the inverse transformation, and will destroy the correspondence with the case of the narrow input vectors. It is perhaps possible to conduct a more thorough analysis with graded receptive fields, either analytically or numerically. If this is beyond what the authors wish to do in this work, the best course of action might be to acknowledge the limitation of the theory and to leave the question of graded receptive fields open for future study.</p><p>3. In the model proposed by the authors, all inputs to a hippocampal place cell are grid cells with perfectly periodic firing in space. This is a very idealized setting that is far from the reality – many cells in entorhinal cortex are far from having spatially periodic firing, and even in those that exhibit strong periodicity, there are often significant variations in the average firing rate from peak to peak. This leads to the concern that purely periodic inputs might not represent the relevant scenario for hippocampal place cells. While the authors discuss briefly the addition of noisy non-periodic inputs at the end of the Results section (Figures 7C and D), they only discuss the robustness of place fields generated by periodic grid inputs to such noisy inputs, but not number of arrangements or separating capacity. The reader is left to wonder how the other results presented in the paper (number of arrangements, separating capacity) are affected by such non-periodic inputs. Are these results still relevant in the presence of realistic heterogeneities?</p><p>4. The authors show that beyond the scale of the separating capacity, not all place field arrangements are realizable. Could the authors characterize non-realizable place field arrangements? It would be nice in particular to see specific examples in simple situations like the (3,4) case discussed in Figure 5. It would be even nicer if one can derive general results on such non-realizable arrangements, possibly leading to experimental predictions (see also points 3 and 4 below). In addition, it would be nice if the authors could provide non-trivial predictions about the statistical structure of place cells that are due to the fact that place cells are given from a sum of spatially periodic inputs. An obvious prediction is that one would predict periodicity to appear at a sufficiently large spatial scale, but can one say something about this spatial scale given current data on grid cell periods? Are this, or other, predictions, testable experimentally?</p><p>5. Currently available recordings of place cells in large scale environments suggest the statistics of place cells are indistinguishable from a spatial Poisson process (see for instance papers from Albert Lee's lab, in Science (2014) and Cell (2020)). The authors should discuss how their results fit with this picture. It seems in particular that in their model, place fields are consistent with Poisson (in the sense that all possible configurations are possible) on short spatial scales (below the separating capacity), but not on larger spatial scales. Is it possible to characterize deviations from Poissoniality induced by the spatial structure in the inputs?</p><p>6. The manuscript (especially the first half) is not particularly easy to read even for a computational neuroscientist and the general conclusion was that for an audience composed mainly of non-theoreticians, it is rather inaccessible. The results (and the ideas behind the analyses) can potentially be understood by a broader audience, but the authors need to make a substantial communication effort. For example, Even the abstract, which should be readily understood by all neuroscientists, takes for granted the meaning of &quot;separating capacity&quot; or &quot;unique input coding range&quot;. The abstract should be comprehensible before reading the whole paper (not after). We ask the authors to take care to make sure that their manuscript speaks to a broader audience than those well-versed in the theory behind grid and place cells.</p></body></sub-article><sub-article article-type="reply" id="sa2"><front-stub><article-id pub-id-type="doi">10.7554/eLife.62702.sa2</article-id><title-group><article-title>Author response</article-title></title-group></front-stub><body><disp-quote content-type="editor-comment"><p>Essential revisions:</p><p>1. The questions that are addressed in the manuscript are interesting mathematically but do not map directly to realistic properties of place cells. The reviewers were concerned that many readers won't understand the limitations. Therefore, the limitations of the approach should be acknowledged and spelled out more clearly. The first question, whether grid cell inputs can produce all possible patterns of place cell activity, is quite detached from biological reality because in the vast majority of these patterns the place cell would fluctuate wildly between on and off states as a function of position, whereas in reality place cells fire sparsely. Importantly, the sparseness is not a conclusion or a prediction of the theory because any degree of sparseness can be easily achieved by varying the threshold. Instead, from the point of view of biological realism, sparseness must be imposed.</p><p>The work does consider also patterns that are sparse, having K fields over the whole range of input patterns, where K is small. This question, too, is detached from the reality of place cell firing because place cells would clearly exhibit many firing fields (not just a handful of fields) over the vast range of positions that correspond to all input patterns. Place cells can have multiple firing fields in large continuous environments, and each place cell may have a different field in a significant fraction of small environments. Thus, it is important to consider sparse patterns where the number of firing fields is proportional to the range of positions that are represented by the input patterns. In addition, ideally, it would be interesting to consider this question on a large set of disjoint sets of inputs patterns, each corresponding individually to a continuous stretch of positions (one environment) instead of one long stretch (or the full range). The two cases considered in the work, of arbitrary (dense) patterns and of extremely sparse patterns can be thought of as two extremes where it was possible to derive precise results. These results are suggestive of what might happen with more biologically relevant activity patterns, but the limitations should be acknowledged.</p></disp-quote><p>Thank you for this comment. Indeed, as noted by the reviewer, we have covered two regimes in characterizing realizable field arrangements by place cells driven by grid-like inputs: in one regime we do so without regard to sparseness of the arrangements (Table 1), and in the other, we consider &quot;ultra&quot; sparse arrangements (K-sparse, or K fields/cell, where K is a small fixed number), with a small number of fields that does not scale with the number of modules or module periods (and thus with the full range of the code).</p><p>We would very much like to generate results in the intermediate regime where place fields are sparse but scale in number proportionally with the full range, as the reviewers note might be the most biologically relevant case. Mathematically, this involves a constraint that is difficult to implement: in the case of counting arrangements, it involves counting the number of Young diagrams with a fixed area.</p><p>However, for both non-sparse field arrangements and ultra-sparse field arrangements (K=1,2,3,…), we find that the grid code enables a large number of field arrangements (e.g. relative to just one-hot input codes; we have now added a comparison of K-field arrangement counting of grid-like inputs with one-hot inputs, which we did not have earlier), that are nevertheless a vanishingly small fraction of all arrangements, leading to our conclusion that the grid code's its modular structure enables the formation of many arrangements but that it simultaneously imposes strong structure on the place field arrangements. Thus, as the reviewer notes, given similar conclusions on two extremes, we may expect similar qualitative results on structure and richness in the intermediate regime of sparse but not ultra-sparse field arrangements. This will be the basis of future work.</p><p>In both our Results and Discussion sections, we now explicitly comment that we consider dense and ultra-sparse field arrangements but do not have analytical results for the sparse case.</p><disp-quote content-type="editor-comment"><p>2. The reviewers found the discussion on graded receptive fields (lines 429-438) to be unconvincing, and it may convey an incorrect message about graded receptive fields once noise is taken into account. The argument is based on the observation that graded receptive fields can be related to narrow ones by a linear transformation. If this linear transformation is invertible, it does not alter the set of linearly separable patterns. However, the transformation under consideration is a low-pass filter. For all practical purposes, this transformation, which suppresses high frequency components of the input is non-invertible. The slightest amount of high frequency noise in the grid cell inputs would be dramatically amplified by applying the inverse transformation, and will destroy the correspondence with the case of the narrow input vectors. It is perhaps possible to conduct a more thorough analysis with graded receptive fields, either analytically or numerically. If this is beyond what the authors wish to do in this work, the best course of action might be to acknowledge the limitation of the theory and to leave the question of graded receptive fields open for future study.</p></disp-quote><p>We thank the reviewers for this comment, which has allowed us to improve our argument for the generalization of our results to graded receptive fields. In particular, we discussed that an invertible convolution applied to the {0,1} codewords would generate graded tuning curves, and because the transformation is invertible, the linear separability of the {0,1} original codewords would remain unchanged post-convolution. The reviewer notes that if, after convolution, the codewords were perturbed by noise, an inverse convolution would produce very different states than the original codewords. First, note that in going from binary to smoothed tuning, there is no sense in which the system is &quot;allowed&quot; to add high-frequency noise to the smoothed tuning curves: low-dimensional continuous attractor dynamics keep the tuning curve shapes fixed to a canonical set of translationally shifted smooth shapes, and perturbations to the shape count as off-manifold perturbations that are rapidly erased; any high-dimensional/ high-frequency shape-altering noise is projected onto the nearest point on the low-dimensional manifold, resulting at worst in small shifts in the encoded phases of each grid module (the attractor dynamics also collectively maintains the relative phases of all cells within a module); thus, we should think of the convolved codewords and their relative phases as not subject to noise, and the only noise is in collective shifts of the full module phase relative to the actual spatial position. The mapping from internal coding states to positions is not used for counting arguments, and thus this type of noise is not relevant to our discussions.</p><p>Second, the argument for why the convolved codewords possess the same geometry as the uninvolved {0,1} codewords can be made without reference to invertibility of the convolution: If the convolution kernel maintains the sufficient statistic of position phase within each cell and module (and it will do so if the kernel exhibits no periodicity on the scale of the period of each module: thus, it cannot be doubly-bumped within a period, or be constant in amplitude across the period), then: (1) the sufficient statistic of each codeword, the phase encoding of position, is maintained; (2) the cells within each module are still equivalent and can be permuted; (3) the code retains its modular structure, lacking permutation invariance of cells across modules; and (4) the module states can be described as independently updating from each other. These properties mean that the qualitative geometry of the convolved code is again the orthogonal product of simplicies, with the individual simplices having the same geometry as the original {0,1} codeword simplicies. Thus, the counting arguments go through unchanged.</p><p>Finally, the effect of the convolution is a rescaling of the sides of the convex polytopes, which will affect the robustness (margins) of the codewords to noise relative to the original {0,1} codewords. We discuss this in the section on margins.</p><p>In sum, the counting arguments are not affected by convolution of codewords by kernels that convert {0,1} activations into graded phase-encoding activation profiles. Different encodings of phase will affect the margins and noise-robustness of the resulting field arrangements.</p><p>We have replaced our previous argument on the structure of graded grid-like codewords based on invertibility, with the second argument above.</p><disp-quote content-type="editor-comment"><p>3. In the model proposed by the authors, all inputs to a hippocampal place cell are grid cells with perfectly periodic firing in space. This is a very idealized setting that is far from the reality – many cells in entorhinal cortex are far from having spatially periodic firing, and even in those that exhibit strong periodicity, there are often significant variations in the average firing rate from peak to peak. This leads to the concern that purely periodic inputs might not represent the relevant scenario for hippocampal place cells. While the authors discuss briefly the addition of noisy non-periodic inputs at the end of the Results section (Figures 7C and D), they only discuss the robustness of place fields generated by periodic grid inputs to such noisy inputs, but not number of arrangements or separating capacity. The reader is left to wonder how the other results presented in the paper (number of arrangements, separating capacity) are affected by such non-periodic inputs. Are these results still relevant in the presence of realistic heterogeneities?</p></disp-quote><p>Thank you for the opportunity to clarify.</p><p>We have shown that the field arrangements that are realizable with grid inputs have bigger margins than if driven by shuffled grid codes and random codes, and thus are more robust to noise (Figure 7a-b). Thus, the existing counting and capacity results will be robust to the addition of noise upto the size of the margins: existing field arrangements will not be destabilized by any noise smaller in size than these broad margins, and the number of realizable arrangements will therefore not decrease.</p><p>Moreover, we have shown (Figure 7c-d, filled green violins) that the addition of noise or sparse spatial inputs, in addition to mostly not destroying existing field arrangements, creates new realizable field arrangements: this is because the addition of random inputs to the grid inputs moves the overall input vectors towards more general position. At the same time, however, these additional field arrangements are not stable/robust: their margins are much smaller. We have clarified these points in the manuscript.<bold> </bold></p><disp-quote content-type="editor-comment"><p>4. The authors show that beyond the scale of the separating capacity, not all place field arrangements are realizable. Could the authors characterize non-realizable place field arrangements? It would be nice in particular to see specific examples in simple situations like the (3,4) case discussed in Figure 5.</p></disp-quote><p>Thank you for this suggestion. We have added examples of non-realizable place field arrangements in the caption of Figure 3. Geometrically, a 2-field arrangement with positive labels for a pair of vertices that are not adjacent (directly connected by an edge) and negative labels for all the rest is not realizable. Conceptually, there are many unrealizable field arrangements (we know most are unrealizable because realizable one are a vanishing fraction) including some obvious ones: for the two-module case with co-prime periods, one cannot have a field arrangement with fields only every other lambda1 (e.g. a periodic arrangement with 2*lambda1). One cannot have a field arrangement with fields only at locations 1 and 2 (two adjacent locations) and nowhere else. This is because for the chosen locations to be above threshold, the periodic nature of the grid drive means that other locations, shifted by multiples of the module periods will also be above threshold. Given the very large set of unrealizable field arrangements, it actually is more tractable to characterize the structure expected in realizable arrangements – please see next response.</p><disp-quote content-type="editor-comment"><p>It would be even nicer if one can derive general results on such non-realizable arrangements, possibly leading to experimental predictions (see also points 3 and 4 below). In addition, it would be nice if the authors could provide non-trivial predictions about the statistical structure of place cells that are due to the fact that place cells are given from a sum of spatially periodic inputs. An obvious prediction is that one would predict periodicity to appear at a sufficiently large spatial scale, but can one say something about this spatial scale given current data on grid cell periods? Are this, or other, predictions, testable experimentally?</p></disp-quote><p>This is a very good question – quantification of what structures are present within the special set of realizable arrangements, which we have counted in this work.</p><p>We are in the middle of a separate collaborative theory-experimental work on this question, and to deal extensively with it is beyond the scope of this already very full paper.</p><p>We have seen that grid-driven place field arrangements are highly constrained such that only a tiny fraction of potential field arrangements within or across environments are realizable. Realizable arrangements can be understood intuitively with a simple picture: A place cell could choose its input weights and threshold to produce a field at one location. But because grid-cell inputs are multiply peaked and non-local, strengthening weights from grid cells with certain phases and periods to obtain a field at one location means that the place cell will also be strongly driven wherever a similar pattern of inputs recurs in the grid input. This will happen periodically at multiples of the full range <italic>L</italic>, but given that the separating capacity is given by a much smaller range, $\Sigma$, it follows that there should also be visible structure on this scale.</p><p>Specifically, we expect to see echoes of the grid structure in both grid-place relationships and in relationships between place fields: (i) Grid-place relationships: A place field strongly driven by a grid cell of a certain phase at one location will be more likely to also be driven by those cells at other locations. Thus, we expect an elevation in the conditional probability, given that a place and grid cell have a coincident field, that the next field by that place cell will also coincide with a field from that grid cell. (ii) Place field relationships: The combined drive of multiple grid periods and phases to a place cell makes its responses appear random (Figure, panel B). However, these realizable arrangements will be geometrically constrained in a scaffold, with more regularity in field spacing over the scale of the summed grid module periods than expected from purely random placement. The inter-field interval (IFI) distributions of place fields, if tested along sufficiently long linear tracks with motion and orienting cues but the absence of many spatially localized landmarks, should exhibit peaks that reflect the combination of inter-field intervals [Yoon et al., 2016] in the underlying periodic grid inputs (Figure, panel C).</p><disp-quote content-type="editor-comment"><p>5. Currently available recordings of place cells in large scale environments suggest the statistics of place cells are indistinguishable from a spatial Poisson process (see for instance papers from Albert Lee's lab, in Science (2014) and Cell (2020)). The authors should discuss how their results fit with this picture. It seems in particular that in their model, place fields are consistent with Poisson (in the sense that all possible configurations are possible) on short spatial scales (below the separating capacity), but not on larger spatial scales. Is it possible to characterize deviations from Poissoniality induced by the spatial structure in the inputs?</p></disp-quote><p>This question is very closely tied to question (4), please see our response above showing that Poisson-like field distributions can be consistent with periodic input drive, even though structure in the interfield intervals is visible over similarly short scales. We also show in the proposed new Figure that the interfield interval distribution quantifies deviations from Poissoniality induced by the structure of the inputs.</p><disp-quote content-type="editor-comment"><p>6. The manuscript (especially the first half) is not particularly easy to read even for a computational neuroscientist and the general conclusion was that for an audience composed mainly of non-theoreticians, it is rather inaccessible. The results (and the ideas behind the analyses) can potentially be understood by a broader audience, but the authors need to make a substantial communication effort. For example, Even the abstract, which should be readily understood by all neuroscientists, takes for granted the meaning of &quot;separating capacity&quot; or &quot;unique input coding range&quot;. The abstract should be comprehensible before reading the whole paper (not after). We ask the authors to take care to make sure that their manuscript speaks to a broader audience than those well-versed in the theory behind grid and place cells.</p></disp-quote><p>Thank you very much for this comment. We have significantly edited the full manuscript for clarity, including by improving definitions. We have also: (1) edited the full manuscript, including text, figures, and captions to make it more accessible and clear; this includes the addition of more conceptual and high-level overviews and interpretative descriptions; (2) added a new figure (<xref ref-type="fig" rid="fig3">Figure 3</xref>) showing the overall approach of the mathematical computations to follow early in Results, to guide readers at a high level through the conceptual steps; (3) added a note about 1assumptions and limitations as suggested by the reviewers, including about place field sparseness.</p></body></sub-article></article>