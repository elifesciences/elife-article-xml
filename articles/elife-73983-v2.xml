<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE article PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Archiving and Interchange DTD with MathML3 v1.2 20190208//EN"  "JATS-archivearticle1-mathml3.dtd"><article article-type="research-article" dtd-version="1.2" xmlns:ali="http://www.niso.org/schemas/ali/1.0/" xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink"><front><journal-meta><journal-id journal-id-type="nlm-ta">elife</journal-id><journal-id journal-id-type="publisher-id">eLife</journal-id><journal-title-group><journal-title>eLife</journal-title></journal-title-group><issn pub-type="epub" publication-format="electronic">2050-084X</issn><publisher><publisher-name>eLife Sciences Publications, Ltd</publisher-name></publisher></journal-meta><article-meta><article-id pub-id-type="publisher-id">73983</article-id><article-id pub-id-type="doi">10.7554/eLife.73983</article-id><article-categories><subj-group subj-group-type="display-channel"><subject>Research Article</subject></subj-group><subj-group subj-group-type="heading"><subject>Evolutionary Biology</subject></subj-group><subj-group subj-group-type="heading"><subject>Genetics and Genomics</subject></subj-group></article-categories><title-group><article-title>Barcoded bulk QTL mapping reveals highly polygenic and epistatic architecture of complex traits in yeast</article-title></title-group><contrib-group><contrib contrib-type="author" equal-contrib="yes" id="author-212035"><name><surname>Nguyen Ba</surname><given-names>Alex N</given-names></name><contrib-id authenticated="true" contrib-id-type="orcid">https://orcid.org/0000-0003-1357-6386</contrib-id><xref ref-type="aff" rid="aff1">1</xref><xref ref-type="fn" rid="equal-contrib1">†</xref><xref ref-type="fn" rid="pa1">‡</xref><xref ref-type="other" rid="fund1"/><xref ref-type="other" rid="fund6"/><xref ref-type="fn" rid="con1"/><xref ref-type="fn" rid="conf1"/></contrib><contrib contrib-type="author" equal-contrib="yes" id="author-212029"><name><surname>Lawrence</surname><given-names>Katherine R</given-names></name><xref ref-type="aff" rid="aff2">2</xref><xref ref-type="aff" rid="aff3">3</xref><xref ref-type="aff" rid="aff4">4</xref><xref ref-type="fn" rid="equal-contrib1">†</xref><xref ref-type="other" rid="fund2"/><xref ref-type="other" rid="fund7"/><xref ref-type="fn" rid="con2"/><xref ref-type="fn" rid="conf1"/></contrib><contrib contrib-type="author" equal-contrib="yes" id="author-255967"><name><surname>Rego-Costa</surname><given-names>Artur</given-names></name><contrib-id authenticated="true" contrib-id-type="orcid">https://orcid.org/0000-0001-9604-4208</contrib-id><xref ref-type="aff" rid="aff1">1</xref><xref ref-type="fn" rid="equal-contrib1">†</xref><xref ref-type="fn" rid="con3"/><xref ref-type="fn" rid="conf2"/></contrib><contrib contrib-type="author" id="author-255968"><name><surname>Gopalakrishnan</surname><given-names>Shreyas</given-names></name><xref ref-type="aff" rid="aff1">1</xref><xref ref-type="aff" rid="aff5">5</xref><xref ref-type="fn" rid="con4"/><xref ref-type="fn" rid="conf1"/></contrib><contrib contrib-type="author" id="author-255969"><name><surname>Temko</surname><given-names>Daniel</given-names></name><xref ref-type="aff" rid="aff6">6</xref><xref ref-type="aff" rid="aff7">7</xref><xref ref-type="aff" rid="aff8">8</xref><xref ref-type="fn" rid="con5"/><xref ref-type="fn" rid="conf1"/></contrib><contrib contrib-type="author" id="author-27708"><name><surname>Michor</surname><given-names>Franziska</given-names></name><xref ref-type="aff" rid="aff6">6</xref><xref ref-type="aff" rid="aff7">7</xref><xref ref-type="aff" rid="aff8">8</xref><xref ref-type="aff" rid="aff9">9</xref><xref ref-type="aff" rid="aff10">10</xref><xref ref-type="aff" rid="aff11">11</xref><xref ref-type="other" rid="fund4"/><xref ref-type="fn" rid="con6"/><xref ref-type="fn" rid="conf1"/></contrib><contrib contrib-type="author" corresp="yes" id="author-40694"><name><surname>Desai</surname><given-names>Michael M</given-names></name><contrib-id authenticated="true" contrib-id-type="orcid">https://orcid.org/0000-0002-9581-1150</contrib-id><email>mdesai@oeb.harvard.edu</email><xref ref-type="aff" rid="aff1">1</xref><xref ref-type="aff" rid="aff2">2</xref><xref ref-type="aff" rid="aff3">3</xref><xref ref-type="aff" rid="aff12">12</xref><xref ref-type="other" rid="fund3"/><xref ref-type="other" rid="fund5"/><xref ref-type="fn" rid="con7"/><xref ref-type="fn" rid="conf1"/></contrib><aff id="aff1"><label>1</label><institution-wrap><institution-id institution-id-type="ror">https://ror.org/03vek6s52</institution-id><institution>Department of Organismic and Evolutionary Biology, Harvard University</institution></institution-wrap><addr-line><named-content content-type="city">Cambridge</named-content></addr-line><country>United States</country></aff><aff id="aff2"><label>2</label><institution-wrap><institution-id institution-id-type="ror">https://ror.org/03vek6s52</institution-id><institution>NSF-Simons Center for Mathematical and Statistical Analysis of Biology, Harvard University</institution></institution-wrap><addr-line><named-content content-type="city">Cambridge</named-content></addr-line><country>United States</country></aff><aff id="aff3"><label>3</label><institution-wrap><institution-id institution-id-type="ror">https://ror.org/03vek6s52</institution-id><institution>Quantitative Biology Initiative, Harvard University</institution></institution-wrap><addr-line><named-content content-type="city">Cambridge</named-content></addr-line><country>United States</country></aff><aff id="aff4"><label>4</label><institution-wrap><institution-id institution-id-type="ror">https://ror.org/042nb2s44</institution-id><institution>Department of Physics, Massachusetts Institute of Technology</institution></institution-wrap><addr-line><named-content content-type="city">Cambridge</named-content></addr-line><country>United States</country></aff><aff id="aff5"><label>5</label><institution-wrap><institution-id institution-id-type="ror">https://ror.org/03vek6s52</institution-id><institution>Department of Molecular and Cellular Biology, Harvard University</institution></institution-wrap><addr-line><named-content content-type="city">Cambridge</named-content></addr-line><country>United States</country></aff><aff id="aff6"><label>6</label><institution-wrap><institution-id institution-id-type="ror">https://ror.org/02jzgtq86</institution-id><institution>Department of Data Science, Dana-Farber Cancer Institute</institution></institution-wrap><addr-line><named-content content-type="city">Boston</named-content></addr-line><country>United States</country></aff><aff id="aff7"><label>7</label><institution-wrap><institution-id institution-id-type="ror">https://ror.org/03vek6s52</institution-id><institution>Department of Biostatistics, Harvard T.H. Chan School of Public Health</institution></institution-wrap><addr-line><named-content content-type="city">Boston</named-content></addr-line><country>United States</country></aff><aff id="aff8"><label>8</label><institution-wrap><institution-id institution-id-type="ror">https://ror.org/03vek6s52</institution-id><institution>Department of Stem Cell and Regenerative Biology, Harvard University</institution></institution-wrap><addr-line><named-content content-type="city">Cambridge</named-content></addr-line><country>United States</country></aff><aff id="aff9"><label>9</label><institution-wrap><institution-id institution-id-type="ror">https://ror.org/02jzgtq86</institution-id><institution>Center for Cancer Evolution, Dana-Farber Cancer Institute</institution></institution-wrap><addr-line><named-content content-type="city">Boston</named-content></addr-line><country>United States</country></aff><aff id="aff10"><label>10</label><institution-wrap><institution-id institution-id-type="ror">https://ror.org/03vek6s52</institution-id><institution>The Ludwig Center at Harvard</institution></institution-wrap><addr-line><named-content content-type="city">Boston</named-content></addr-line><country>United States</country></aff><aff id="aff11"><label>11</label><institution-wrap><institution-id institution-id-type="ror">https://ror.org/05a0ya142</institution-id><institution>The Broad Institute of MIT and Harvard</institution></institution-wrap><addr-line><named-content content-type="city">Cambridge</named-content></addr-line><country>United States</country></aff><aff id="aff12"><label>12</label><institution-wrap><institution-id institution-id-type="ror">https://ror.org/03vek6s52</institution-id><institution>Department of Physics, Harvard University</institution></institution-wrap><addr-line><named-content content-type="city">Cambridge</named-content></addr-line><country>United States</country></aff></contrib-group><contrib-group content-type="section"><contrib contrib-type="editor"><name><surname>Verstrepen</surname><given-names>Kevin J</given-names></name><role>Reviewing Editor</role><aff><institution-wrap><institution-id institution-id-type="ror">https://ror.org/02bpp8r91</institution-id><institution>VIB-KU Leuven Center for Microbiology</institution></institution-wrap><country>Belgium</country></aff></contrib><contrib contrib-type="senior_editor"><name><surname>Barkai</surname><given-names>Naama</given-names></name><role>Senior Editor</role><aff><institution-wrap><institution-id institution-id-type="ror">https://ror.org/0316ej306</institution-id><institution>Weizmann Institute of Science</institution></institution-wrap><country>Israel</country></aff></contrib></contrib-group><author-notes><fn fn-type="con" id="equal-contrib1"><label>†</label><p>These authors contributed equally to this work</p></fn><fn fn-type="present-address" id="pa1"><label>‡</label><p>Department of Biology, University of Toronto at Mississauga, Mississauga, Canada</p></fn></author-notes><pub-date date-type="publication" publication-format="electronic"><day>11</day><month>02</month><year>2022</year></pub-date><pub-date pub-type="collection"><year>2022</year></pub-date><volume>11</volume><elocation-id>e73983</elocation-id><history><date date-type="received" iso-8601-date="2021-09-16"><day>16</day><month>09</month><year>2021</year></date><date date-type="accepted" iso-8601-date="2022-02-11"><day>11</day><month>02</month><year>2022</year></date></history><pub-history><event><event-desc>This manuscript was published as a preprint at .</event-desc><date date-type="preprint" iso-8601-date="2021-09-09"><day>09</day><month>09</month><year>2021</year></date><self-uri content-type="preprint" xlink:href="https://doi.org/10.1101/2021.09.08.459513"/></event></pub-history><permissions><copyright-statement>© 2022, Nguyen Ba et al</copyright-statement><copyright-year>2022</copyright-year><copyright-holder>Nguyen Ba et al</copyright-holder><ali:free_to_read/><license xlink:href="http://creativecommons.org/licenses/by/4.0/"><ali:license_ref>http://creativecommons.org/licenses/by/4.0/</ali:license_ref><license-p>This article is distributed under the terms of the <ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/licenses/by/4.0/">Creative Commons Attribution License</ext-link>, which permits unrestricted use and redistribution provided that the original author and source are credited.</license-p></license></permissions><self-uri content-type="pdf" xlink:href="elife-73983-v2.pdf"/><self-uri content-type="figures-pdf" xlink:href="elife-73983-figures-v2.pdf"/><abstract><p>Mapping the genetic basis of complex traits is critical to uncovering the biological mechanisms that underlie disease and other phenotypes. Genome-wide association studies (GWAS) in humans and quantitative trait locus (QTL) mapping in model organisms can now explain much of the observed heritability in many traits, allowing us to predict phenotype from genotype. However, constraints on power due to statistical confounders in large GWAS and smaller sample sizes in QTL studies still limit our ability to resolve numerous small-effect variants, map them to causal genes, identify pleiotropic effects across multiple traits, and infer non-additive interactions between loci (epistasis). Here, we introduce barcoded bulk quantitative trait locus (BB-QTL) mapping, which allows us to construct, genotype, and phenotype 100,000 offspring of a budding yeast cross, two orders of magnitude larger than the previous state of the art. We use this panel to map the genetic basis of eighteen complex traits, finding that the genetic architecture of these traits involves hundreds of small-effect loci densely spaced throughout the genome, many with widespread pleiotropic effects across multiple traits. Epistasis plays a central role, with thousands of interactions that provide insight into genetic networks. By dramatically increasing sample size, BB-QTL mapping demonstrates the potential of natural variants in high-powered QTL studies to reveal the highly polygenic, pleiotropic, and epistatic architecture of complex traits.</p></abstract><kwd-group kwd-group-type="author-keywords"><kwd>quantitative trait loci</kwd><kwd>pleiotropy</kwd><kwd>epistasis</kwd><kwd>polygenic traits</kwd></kwd-group><kwd-group kwd-group-type="research-organism"><title>Research organism</title><kwd><italic>S. cerevisiae</italic></kwd></kwd-group><funding-group><award-group id="fund1"><funding-source><institution-wrap><institution-id institution-id-type="FundRef">http://dx.doi.org/10.13039/501100000038</institution-id><institution>Natural Sciences and Engineering Research Council of Canada</institution></institution-wrap></funding-source><award-id>RGPIN-2021-02716</award-id><principal-award-recipient><name><surname>Nguyen Ba</surname><given-names>Alex N</given-names></name></principal-award-recipient></award-group><award-group id="fund2"><funding-source><institution-wrap><institution-id institution-id-type="FundRef">http://dx.doi.org/10.13039/100000001</institution-id><institution>National Science Foundation</institution></institution-wrap></funding-source><award-id>#1764269</award-id><principal-award-recipient><name><surname>Lawrence</surname><given-names>Katherine R</given-names></name></principal-award-recipient></award-group><award-group id="fund3"><funding-source><institution-wrap><institution-id institution-id-type="FundRef">http://dx.doi.org/10.13039/100000002</institution-id><institution>National Institutes of Health</institution></institution-wrap></funding-source><award-id>U54CA193461</award-id><principal-award-recipient><name><surname>Desai</surname><given-names>Michael M</given-names></name></principal-award-recipient></award-group><award-group id="fund4"><funding-source><institution-wrap><institution-id institution-id-type="FundRef">http://dx.doi.org/10.13039/100000001</institution-id><institution>National Science Foundation</institution></institution-wrap></funding-source><award-id>PHY-1914916</award-id><principal-award-recipient><name><surname>Michor</surname><given-names>Franziska</given-names></name></principal-award-recipient></award-group><award-group id="fund5"><funding-source><institution-wrap><institution-id institution-id-type="FundRef">http://dx.doi.org/10.13039/100000002</institution-id><institution>National Institutes of Health</institution></institution-wrap></funding-source><award-id>GM104239</award-id><principal-award-recipient><name><surname>Desai</surname><given-names>Michael M</given-names></name></principal-award-recipient></award-group><award-group id="fund6"><funding-source><institution-wrap><institution-id institution-id-type="FundRef">http://dx.doi.org/10.13039/501100000038</institution-id><institution>Natural Sciences and Engineering Research Council of Canada</institution></institution-wrap></funding-source><award-id>DGECR-2021-00117</award-id><principal-award-recipient><name><surname>Nguyen Ba</surname><given-names>Alex N</given-names></name></principal-award-recipient></award-group><award-group id="fund7"><funding-source><institution-wrap><institution-id institution-id-type="FundRef">http://dx.doi.org/10.13039/100005883</institution-id><institution>Fannie &amp; John Hertz Foundation</institution></institution-wrap></funding-source><award-id>Graduate Fellowship Award</award-id><principal-award-recipient><name><surname>Lawrence</surname><given-names>Katherine R</given-names></name></principal-award-recipient></award-group><funding-statement>The funders had no role in study design, data collection and interpretation, or the decision to submit the work for publication.</funding-statement></funding-group><custom-meta-group><custom-meta specific-use="meta-only"><meta-name>Author impact statement</meta-name><meta-value>A bulk barcoded quantitative trait locus approach increases the power and resolution of genotype-phenotype mapping in yeast, revealing that the genetic architecture of 18 complex traits is highly polygenic, and is characterized by widespread epistatic interactions and pleiotropic effects.</meta-value></custom-meta></custom-meta-group></article-meta></front><body><sec id="s1" sec-type="intro"><title>Introduction</title><p>In recent years, the sample size and statistical power of genome-wide association studies (GWAS) in humans has expanded dramatically (<xref ref-type="bibr" rid="bib23">Bycroft et al., 2018</xref>; <xref ref-type="bibr" rid="bib40">Eichler et al., 2010</xref>; <xref ref-type="bibr" rid="bib79">Manolio et al., 2009</xref>). Studies investigating the genetic basis of important phenotypes such as height, BMI, and risk for diseases such as schizophrenia now involve sample sizes of hundreds of thousands or even millions of individuals. The corresponding increase in power has shown that these traits are very highly polygenic, with a large fraction of segregating polymorphisms (hundreds of thousands of loci) having a causal effect on phenotype (<xref ref-type="bibr" rid="bib115">Yang et al., 2010</xref>; <xref ref-type="bibr" rid="bib63">International Schizophrenia Consortium et al., 2009</xref>). However, the vast majority of these loci have extremely small effects, and we remain unable to explain most of the heritable variation in many of these traits (the ‘missing heritability’ problem; <xref ref-type="bibr" rid="bib79">Manolio et al., 2009</xref>).</p><p>In contrast to GWAS, quantitative trait locus (QTL) mapping studies in model organisms such as budding yeast tend to have much smaller sample sizes of at most a few thousand individuals (<xref ref-type="bibr" rid="bib106">Steinmetz et al., 2002</xref>; <xref ref-type="bibr" rid="bib13">Bloom et al., 2013</xref>; <xref ref-type="bibr" rid="bib21">Burga et al., 2019</xref>; <xref ref-type="bibr" rid="bib77">Mackay and Huang, 2018</xref>; <xref ref-type="bibr" rid="bib11">Bergelson and Roux, 2010</xref>). Due to their lower power, most of these studies are only able to identify relatively few loci (typically at most dozens, though see below) with a causal effect on phenotype. Despite this, these few loci explain most or all of the observed phenotypic variation in many of the traits studied (<xref ref-type="bibr" rid="bib45">Fay, 2013</xref>).</p><p>The reasons for this striking discrepancy between GWAS and QTL mapping studies remain unclear. It may be that segregating variation in human populations has different properties than the between-strain polymorphisms analyzed in QTL mapping studies, or the nature of the traits being studied may be different. However, it is also possible that the discrepancy arises for more technical reasons associated with the limitations of GWAS and/or QTL mapping studies. For example, GWAS studies suffer from statistical confounders due to population structure, and the low median minor allele frequencies in these studies limit power and mapping resolution (<xref ref-type="bibr" rid="bib13">Bloom et al., 2013</xref>; <xref ref-type="bibr" rid="bib104">Sohail et al., 2019</xref>; <xref ref-type="bibr" rid="bib68">King et al., 2012</xref>; <xref ref-type="bibr" rid="bib26">Consortium, 2012</xref>). These factors make it difficult to distinguish between alternative models of genetic architecture, or to detect specific individual small-effect causal loci. Thus, it may be the case that the highly polygenic architectures apparently observed in GWAS studies are at least in part artifacts introduced by these confounding factors. Alternatively, the limited power of existing QTL mapping studies in model organisms such as budding yeast (perhaps combined with the relatively high functional density of these genomes) may cause them to aggregate numerous linked small-effect causal loci into single large-effect ‘composite’ QTL. This would allow these studies to successfully explain most of the observed phenotypic heritability in terms of an apparently small number of causal loci, even if the true architecture was in fact highly polygenic (<xref ref-type="bibr" rid="bib45">Fay, 2013</xref>).</p><p>More recently, numerous studies have worked to advance the power and resolution of QTL mapping studies, and have begun to shed light on the discrepancy with GWAS (<xref ref-type="bibr" rid="bib13">Bloom et al., 2013</xref>; <xref ref-type="bibr" rid="bib14">Bloom et al., 2015</xref>; <xref ref-type="bibr" rid="bib100">She and Jarosz, 2018</xref>; <xref ref-type="bibr" rid="bib15">Bloom et al., 2019</xref>; <xref ref-type="bibr" rid="bib29">Cubillos et al., 2011</xref>). One direction has been to use advanced crosses to introduce more recombination breakpoints into mapping panels (<xref ref-type="bibr" rid="bib100">She and Jarosz, 2018</xref>). This improves fine-mapping resolution and under some circumstances may be able to resolve composite QTL into individual causal loci, but it does not in itself improve power to detect small-effect alleles. Another approach is to use a multiparental cross (<xref ref-type="bibr" rid="bib30">Cubillos et al., 2013</xref>) or multiple individual crosses (e.g. in a round-robin mating; <xref ref-type="bibr" rid="bib15">Bloom et al., 2019</xref>). Several recent studies have constructed somewhat larger mapping panels with this type of design (as many as 14,000 segregants; <xref ref-type="bibr" rid="bib15">Bloom et al., 2019</xref>); these offer the potential to gain more insight into trait architecture by surveying a broader spectrum of natural variation that could potentially contribute to phenotype. However, because multiparental crosses reduce the allele frequency of each variant (and in round-robin schemes each variant is present in only a few matings), these studies also have limited power to detect small-effect alleles. Finally, several recent studies have constructed large panels of diploid genotypes by mating smaller pools of haploid parents (e.g. a 384 × 104 mating leading to 18,126 F6 diploids; <xref ref-type="bibr" rid="bib64">Jakobson and Jarosz, 2019</xref>). These studies are essential to understand potential dominance effects. However, the ability to identify small-effect alleles scales only with the number of unique haploid parents rather than the number of diploid genotypes, so these studies also lack power for this purpose. Thus, previous studies have been unable to observe the polygenic regime of complex traits or to offer insight into its consequences.</p><p>Here, rather than adopting any of these more complex study designs, we sought to increase the power and resolution of QTL mapping in budding yeast simply by dramatically increasing sample size. To do so, we introduce a barcoded bulk QTL (BB-QTL) mapping approach that allows us to construct and measure phenotypes in a panel of 100,000 F1 segregants from a single yeast cross, a sample size almost two orders of magnitude larger than the current state of the art (<xref ref-type="fig" rid="fig1">Figure 1A</xref>). We combined several recent technical advances to overcome the challenges of QTL mapping at the scale of 100,000 segregants: (<italic>i</italic>) unique DNA barcoding of every strain, which allows us to conduct sequencing-based bulk phenotype measurements; (<italic>ii</italic>) a highly multiplexed sequencing approach that exploits our knowledge of the parental genotypes to accurately infer the genotype of each segregant from low-coverage (&lt;1x) sequence data; (<italic>iii</italic>) liquid handling robotics and combinatorial pooling to create, array, manipulate, and store this segregant collection in 96/384-well plates; and (<italic>iv</italic>) a highly conservative cross-validated forward search approach to confidently infer large numbers of small-effect QTL.</p><fig-group><fig id="fig1" position="float"><label>Figure 1.</label><caption><title>Cross design, genotyping, phenotyping, and barcode association.</title><p>(<bold>A</bold>) Construction, genotyping, and phenotyping of segregant panel. Founding strains BY (blue) and RM (red) are transformed with diverse barcode libraries (colored rectangles) and mated in bulk. Cre recombination combines barcodes onto the same chromosome. After meiosis, sporulation, and selection for barcode retention, we sort single haploid cells into 96-well plates. Top: whole- genome sequencing of segregants via multiplexed tagmentation. Middle: barcode-well association by combinatorial pooling. Bottom: bulk phenotyping by pooled competition assays and barcode frequency tracking. See <xref ref-type="fig" rid="fig1s1">Figure 1—figure supplements 1</xref>–<xref ref-type="fig" rid="fig1s3">3</xref>, and Materials and methods for details. (<bold>B</bold>) Histogram and cumulative distribution function (CDF) of genotyping coverage of our panel (<xref ref-type="supplementary-material" rid="fig1sdata1">Figure 1—source data 1</xref>). (<bold>C</bold>) Inferred probabilistic genotypes for two representative individuals from low coverage (solid) and high coverage (dashed) sequencing, with the genotyping error (difference between low and high coverage probabilistic genotypes) indicated by shaded blue regions (<xref ref-type="supplementary-material" rid="fig1sdata2">Figure 1—source data 2</xref>). (<bold>D</bold>) Distribution of genotyping error by SNP for the two individuals shown in (<bold>C</bold>). (<bold>E</bold>) Reproducibility of phenotype measurements in 30 C environment (see <xref ref-type="fig" rid="fig1s4">Figure 1—figure supplement 4</xref> for other environments). Here, fitness values are inferred on data from each individual replicate assay. For all other analyses, we use fitness values jointly inferred across both replicates (see Appendix 2, <xref ref-type="supplementary-material" rid="fig1sdata3">Figure 1—source data 3</xref>).</p><p><supplementary-material id="fig1sdata1"><label>Figure 1—source data 1.</label><caption><title>Genotyping coverage of all strains in our panel.</title></caption><media mime-subtype="plain" mimetype="text" xlink:href="elife-73983-fig1-data1-v2.txt"/></supplementary-material></p><p><supplementary-material id="fig1sdata2"><label>Figure 1—source data 2.</label><caption><title>Inferred genotype for resequenced clones in Chr XVI.</title></caption><media mime-subtype="plain" mimetype="text" xlink:href="elife-73983-fig1-data2-v2.txt"/></supplementary-material></p><p><supplementary-material id="fig1sdata3"><label>Figure 1—source data 3.</label><caption><title>Replicate fitness measurements in 30C.</title></caption><media mime-subtype="plain" mimetype="text" xlink:href="elife-73983-fig1-data3-v2.txt"/></supplementary-material></p></caption><graphic mime-subtype="tiff" mimetype="image" xlink:href="elife-73983-fig1-v2.tif"/></fig><fig id="fig1s1" position="float" specific-use="child-fig"><label>Figure 1—figure supplement 1.</label><caption><title>Barcoding plasmids.</title><p>The first type (<bold>A</bold>) has configuration pAN3H5a-1/2URA3-KanP1-ccdB-LoxPR, while the second type (<bold>B</bold>) has configuration pAN3H5a-LoxPL-HygP1-ccdB-2/2URA3. The ccdB gene is later replaced by diverse barcode libraries, as described in the Materials and methods and shown in <xref ref-type="fig" rid="fig1s2">Figure 1—figure supplement 2</xref>.</p></caption><graphic mime-subtype="tiff" mimetype="image" xlink:href="elife-73983-fig1-figsupp1-v2.tif"/></fig><fig id="fig1s2" position="float" specific-use="child-fig"><label>Figure 1—figure supplement 2.</label><caption><title>Detailed schematic of procedure to generate 100,000 F1 segregants.</title><p>(<bold>a</bold>) Generating the barcode plasmid library: (1) Oligonucleotides containing random nucleotides are flanked by BsaI restriction endonuclease sites, converted to dsDNA, and cloned into a recipient plasmid using a Golden Gate reaction. The recipient plasmid contains a ccdB gene, which is toxic to sensitive <italic>E. coli</italic> strains. (2) Plasmid libraries are transformed into <italic>E. coli</italic> by electroporation and (3) the cells are recovered in a thin layer of media containing soft agar. (<bold>b</bold>) Generating sorted F1 segregants: (1) Barcode libraries are transformed into parental strains. (2) Barcoded parental strains are mated and their barcodes recombined by Cre-Lox recombination. (3) Diploid cells are sporulated, and (4) MATa haploid spores are germinated and (5) sorted into single wells.</p></caption><graphic mime-subtype="tiff" mimetype="image" xlink:href="elife-73983-fig1-figsupp2-v2.tif"/></fig><fig id="fig1s3" position="float" specific-use="child-fig"><label>Figure 1—figure supplement 3.</label><caption><title>Allele frequencies of the RM parental allele for the genotyped pool of 99,950 segregants.</title><p>The dashed line indicates 50% frequency. Marker loci used in the cross are indicated with arrows: the mating locus MAT on chromosome III and CAN1::pSTE2-SpHIS5 on chromosome V are selected for the BY allele, and the barcode locus HO on chromosome IV is selected for the Cre-induced recombination of two barcodes (the first from the RM parent and the second from the BY parent).</p></caption><graphic mime-subtype="tiff" mimetype="image" xlink:href="elife-73983-fig1-figsupp3-v2.tif"/></fig><fig id="fig1s4" position="float" specific-use="child-fig"><label>Figure 1—figure supplement 4.</label><caption><title>Phenotype measurement reproducibility, as in <xref ref-type="fig" rid="fig1">Figure 1D</xref>, for all other environments.</title></caption><graphic mime-subtype="tiff" mimetype="image" xlink:href="elife-73983-fig1-figsupp4-v2.tif"/></fig></fig-group><p>Using this BB-QTL approach, we mapped the genetic basis of 18 complex phenotypes. Despite the fact that earlier lower-powered QTL mapping studies in yeast have successfully explained most or all of the heritability of similar phenotypes with models involving only a handful of loci, we find that the increased power of our approach reveals that these traits are in fact highly polygenic, with more than a hundred causal loci contributing to almost every phenotype. We also exploit our increased power to investigate widespread patterns of pleiotropy across the eighteen phenotypes, and to analyze the role of epistatic interactions in the genetic architecture of each trait.</p></sec><sec id="s2" sec-type="results"><title>Results</title><sec id="s2-1"><title>Construction of the barcoded segregant panel</title><p>To generate our segregant collection, we began by mating a laboratory (BY) and vineyard (RM) strain (<xref ref-type="fig" rid="fig1">Figure 1A</xref>), which differ at 41,594 single-nucleotide polymorphisms (SNPs) and vary in many relevant phenotypes (<xref ref-type="bibr" rid="bib13">Bloom et al., 2013</xref>). We labeled each parent strain with diverse DNA barcodes (a random sequence of 16 nucleotides), to create pools of each parent that are isogenic except for this barcode (12 and 23 pools of ∼1000 unique barcodes in the RM and BY parental pools, respectively). Barcodes are integrated at a neutral locus containing <italic>Cre-Lox</italic> machinery for combining barcodes, similar to the ‘renewable’ barcoding system we introduced in recent work (<xref ref-type="bibr" rid="bib87">Nguyen Ba et al., 2019</xref>). We then created 276 sets by mating all combinations of parental pools to create heterozygous RM/BY diploids, each of which contains one barcode from each parent. After mating, we induce <italic>Cre-Lox</italic> recombination to assemble the two barcodes onto the same chromosome, creating a 32-basepair double barcode. After sporulating the diploids and selecting for doubly-barcoded haploid <italic>MATa</italic> offspring using a mating-type specific promoter and selection markers (<xref ref-type="bibr" rid="bib110">Tong et al., 2001</xref>), we used single-cell sorting to select ∼100,000 random segregants and to array them into individual wells in 1,104 96-well plates. Because there are over 1 million possible barcodes per set, and only 384 offspring selected per set, this random sorting is highly unlikely to select duplicates, allowing us to produce a strain collection with one uniquely barcoded genotype in each well that can be manipulated with liquid handling robotics. Finally, we identified the barcode associated with each segregant by constructing orthogonal pools (e.g. all segregants in a given 96-well plate, all segregants in row A of any 96-well plate, all segregants from a set, etc.), and sequencing the barcode locus in each pool. This combinatorial pooling scheme allows us to infer the barcode associated with each segregant in each individual well, based on the unique set of pools in which a given barcode appears (<xref ref-type="bibr" rid="bib44">Erlich et al., 2009</xref>).</p></sec><sec id="s2-2"><title>Inferring segregant genotypes</title><p>We next conducted whole-genome sequencing of every strain using an automated library preparation pipeline that makes use of custom indexed adapters to conduct tagmentation in 384-well plates, after which samples can be pooled for downstream library preparation (<xref ref-type="fig" rid="fig1">Figure 1A</xref>). To limit sequencing costs, we infer segregant genotypes from low-coverage sequencing data (median coverage of 0.6 x per segregant; <xref ref-type="fig" rid="fig1">Figure 1B</xref>). We can obtain high genotyping accuracy despite such low coverage due to our cross design: because we use an F1 rather than an advanced cross, we have a high density of SNPs relative to recombination breakpoints in each individual (&gt;700 SNPs between recombination breakpoints on average). Exploiting this fact in combination with our knowledge of the parental genotypes, we developed a Hidden Markov Model (HMM) to infer the complete segregant genotypes from this data (see Appendix 1). This HMM is similar in spirit to earlier imputation approaches (<xref ref-type="bibr" rid="bib5">Arends et al., 2010</xref>; <xref ref-type="bibr" rid="bib80">Marchini and Howie, 2010</xref>; <xref ref-type="bibr" rid="bib12">Bilton et al., 2018</xref>); it infers genotypes at unobserved loci (and corrects for sequencing errors and index-swapping artifacts) by assuming that each segregant consists of stretches of RM and BY loci, separated by relatively sparse recombination events. We note that this model produces probabilistic estimates of genotypes (i.e. the posterior probability that segregant genotypes is either RM or BY at each SNP; <xref ref-type="fig" rid="fig1">Figure 1C</xref>), which we account for in our analysis below.</p><p>We assessed two key aspects of the performance of this sequencing approach: the confidence with which it infers genotypes, and the accuracy of the genotypes assigned. We find that at 0.1 x coverage and above, our HMM approach confidently assigns genotypes at almost all loci (posterior probability of &gt;92% of the inferred genotype at &gt;99% of loci; see <xref ref-type="fig" rid="app1fig2">Appendix 1—figure 2</xref> and Appendix 1 for a discussion of our validation of these posterior probability estimates). Loci not confidently assigned to either parental genotype largely correspond to SNPs in the immediate vicinity of breakpoints, which cannot be precisely resolved with low-coverage sequencing (we note that these uncertainties do affect mapping resolution, as the precise location of breakpoints is important for this purpose; see Appendix 1-1.4 for an extensive discussion and analysis of this uncertainty). To assess the accuracy of our genotyping, we conducted high-coverage sequencing of a small subset of segregants and compared the results to the inferred genotypes from our low-coverage data. We find that the genotyping is accurate, with detectable error only very near recombination breakpoints (<xref ref-type="fig" rid="fig1">Figure 1C and D</xref>). In addition, we find that our posterior probabilities are well calibrated (e.g. 80% of the loci with an RM posterior probability of 0.8 are indeed RM; see Appendix 1). We also note that, as expected, most SNPs are present across our segregant panel at an allele frequency of 0.5 (<xref ref-type="fig" rid="fig1s3">Figure 1—figure supplement 3</xref>), except for a few marker loci that are selected during engineering of the segregants.</p></sec><sec id="s2-3"><title>Barcoded bulk phenotype measurements</title><p>Earlier QTL mapping studies in budding yeast have typically assayed phenotypes for each segregant in their mapping panels independently, primarily by measuring colony sizes on solid agar plates (<xref ref-type="bibr" rid="bib106">Steinmetz et al., 2002</xref>; <xref ref-type="bibr" rid="bib13">Bloom et al., 2013</xref>; <xref ref-type="bibr" rid="bib14">Bloom et al., 2015</xref>; <xref ref-type="bibr" rid="bib100">She and Jarosz, 2018</xref>; <xref ref-type="bibr" rid="bib15">Bloom et al., 2019</xref>; <xref ref-type="bibr" rid="bib64">Jakobson and Jarosz, 2019</xref>). These colony size phenotypes can be defined on a variety of different solid media, but while they are relatively high throughput (often conducted in 384-well format), they are not readily scalable to measurements of 100,000 segregants.</p><p>Here, we exploit our barcoding system to instead measure phenotypes for all segregants in parallel, in a single bulk pooled assay for each phenotype. The basic idea is straightforward: we combine all segregants into a pool, sequence the barcode locus to measure the relative frequency of each segregant, apply some selection pressure, and then sequence again to measure how relative frequencies change (<xref ref-type="bibr" rid="bib102">Smith et al., 2009</xref>). These bulk assays are easily scalable and can be applied to any phenotype that can be measured based on changes in relative strain frequencies. Because we only need to sequence the barcode region, we can sequence deeply to obtain high-resolution phenotype measurements at modest cost. In addition, we can correct sequencing errors because the set of true barcodes is known in advance from combinatorial pooling (see above). Importantly, this system allows us to track the frequency changes of each individual in the pool, assigning a phenotype to each specific segregant genotype. This stands in contrast to ‘bulk segregant analysis’ approaches that use whole-genome sequencing of pooled segregant panels to track frequency changes of alleles rather than individual genotypes (<xref ref-type="bibr" rid="bib39">Ehrenreich et al., 2010</xref>; <xref ref-type="bibr" rid="bib83">Michelmore et al., 1991</xref>); our approach increases power and allows us to study interaction effects between loci across the genome.</p><p>Using this BB-QTL system, we investigate eighteen complex traits, defined as competitive fitness in a variety of liquid growth conditions (‘environments’), including minimal, natural, and rich media with several carbon sources and a range of chemical and temperature stressors (<xref ref-type="table" rid="table1">Table 1</xref>). To measure these phenotypes, we pool all strains and track barcode frequencies through 49 generations of competition. We use a maximum likelihood model to jointly infer the relative fitness of each segregant in each assay—a value related to the instantaneous exponential rate of change in frequency of a strain during the course of the assay (<xref ref-type="fig" rid="fig1">Figure 1A</xref>, lower-right inset; see Appendix 2). These measurements are consistent between replicates (average <inline-formula><mml:math id="inf1"><mml:msup><mml:mi>R</mml:mi><mml:mn>2</mml:mn></mml:msup></mml:math></inline-formula> between replicate assays of 0.77), although we note that the inherent correlation between fitness and barcode read counts means that errors are inversely correlated with fitness (<xref ref-type="fig" rid="fig1">Figure 1E</xref>; <xref ref-type="fig" rid="fig1s4">Figure 1—figure supplement 4</xref>). While genetic changes such as de novo mutations and ploidy changes can occur during bulk selection, we estimate their rates to be sufficiently low such that they impact only a small fraction of barcode lineages and thus do not significantly bias the inference of QTL effects over the strain collection (see Appendix 2).</p><table-wrap id="table1" position="float"><label>Table 1.</label><caption><title>Phenotyping growth conditions.</title><p>Summary of the eighteen competitive fitness phenotypes we analyze in this study. All assays were conducted at 30 °C, except when stated otherwise. YP: 1% yeast extract, 2% peptone. YPD: 1% yeast extract, 2% peptone, 2% glucose. SD: synthetic defined medium, 2% glucose. YNB: yeast nitrogen base, 2% glucose. Numbers of inferred additive QTL and epistatic interactions are also shown.</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="left" valign="bottom">Name</th><th align="left" valign="bottom">Description</th><th align="left" valign="bottom">Additive QTL</th><th align="left" valign="bottom">Epistatic QTL</th></tr></thead><tbody><tr><td align="char" char="." valign="bottom">23 C</td><td align="left" valign="bottom">YPD, 23 °C</td><td align="char" char="." valign="bottom">112</td><td align="char" char="." valign="bottom">185</td></tr><tr><td align="char" char="." valign="bottom">25 C</td><td align="left" valign="bottom">YPD, 25 °C</td><td align="char" char="." valign="bottom">134</td><td align="char" char="." valign="bottom">189</td></tr><tr><td align="char" char="." valign="bottom">27 C</td><td align="left" valign="bottom">YPD, 27 °C</td><td align="char" char="." valign="bottom">149</td><td align="char" char="." valign="bottom">255</td></tr><tr><td align="char" char="." valign="bottom">30 C</td><td align="left" valign="bottom">YPD, 30 °C</td><td align="char" char="." valign="bottom">159</td><td align="char" char="." valign="bottom">247</td></tr><tr><td align="char" char="." valign="bottom">33 C</td><td align="left" valign="bottom">YPD, 33 °C</td><td align="char" char="." valign="bottom">147</td><td align="char" char="." valign="bottom">216</td></tr><tr><td align="char" char="." valign="bottom">35 C</td><td align="left" valign="bottom">YPD, 35 °C</td><td align="char" char="." valign="bottom">117</td><td align="char" char="." valign="bottom">250</td></tr><tr><td align="char" char="." valign="bottom">37 C</td><td align="left" valign="bottom">YPD, 37 °C</td><td align="char" char="." valign="bottom">128</td><td align="char" char="." valign="bottom">265</td></tr><tr><td align="left" valign="bottom">sds</td><td align="left" valign="bottom">YPD, 0.005% (w/v) SDS</td><td align="char" char="." valign="bottom">175</td><td align="char" char="." valign="bottom">263</td></tr><tr><td align="left" valign="bottom">raff</td><td align="left" valign="bottom">YP, 2% (w/v) raffinose</td><td align="char" char="." valign="bottom">167</td><td align="char" char="." valign="bottom">221</td></tr><tr><td align="left" valign="bottom">mann</td><td align="left" valign="bottom">YP, 2% (w/v) mannose</td><td align="char" char="." valign="bottom">169</td><td align="char" char="." valign="bottom">341</td></tr><tr><td align="left" valign="bottom">cu</td><td align="left" valign="bottom">YPD, 1 mM copper(II) sulfate</td><td align="char" char="." valign="bottom">143</td><td align="char" char="." valign="bottom">225</td></tr><tr><td align="left" valign="bottom">eth</td><td align="left" valign="bottom">YPD, 5% (v/v) ethanol</td><td align="char" char="." valign="bottom">149</td><td align="char" char="." valign="bottom">247</td></tr><tr><td align="left" valign="bottom">suloc</td><td align="left" valign="bottom">YPD, 50 µM suloctidil</td><td align="char" char="." valign="bottom">173</td><td align="char" char="." valign="bottom">314</td></tr><tr><td align="char" char="." valign="bottom">4NQO</td><td align="left" valign="bottom">SD, 0.05 µg/ml 4-nitroquinoline 1-oxide</td><td align="char" char="." valign="bottom">153</td><td align="char" char="." valign="bottom">394</td></tr><tr><td align="left" valign="bottom">ynb</td><td align="left" valign="bottom">YNB, w/o AAs, w/ ammonium sulfate</td><td align="char" char="." valign="bottom">145</td><td align="char" char="." valign="bottom">303</td></tr><tr><td align="left" valign="bottom">mol</td><td align="left" valign="bottom">molasses, diluted to 20% (w/v) sugars</td><td align="char" char="." valign="bottom">111</td><td align="char" char="." valign="bottom">235</td></tr><tr><td align="left" valign="bottom">gu</td><td align="left" valign="bottom">YPD, 6 mM guanidinium chloride</td><td align="char" char="." valign="bottom">185</td><td align="char" char="." valign="bottom">277</td></tr><tr><td align="left" valign="bottom">li</td><td align="left" valign="bottom">YPD, 20 mM lithium acetate</td><td align="char" char="." valign="bottom">83</td><td align="char" char="." valign="bottom">42</td></tr></tbody></table></table-wrap></sec><sec id="s2-4"><title>Modified stepwise cross-validated forward search approach to mapping QTL</title><p>With genotype and phenotype data for each segregant in hand, we next sought to map the locations and effects of QTL. The typical approach to inferring causal loci would be to use a forward stepwise regression (<xref ref-type="bibr" rid="bib13">Bloom et al., 2013</xref>; <xref ref-type="bibr" rid="bib5">Arends et al., 2010</xref>). This method proceeds by first computing a statistic such as <inline-formula><mml:math id="inf2"><mml:mi>p</mml:mi></mml:math></inline-formula>-value or LOD score for each SNP independently, to test for a statistical association between that SNP and the phenotype. The most-significant SNP is identified as a causal locus, and its estimated effect size is regressed out of the data. This process is then repeated iteratively to identify additional causal loci. These iterations proceed until no loci are identified with a statistic that exceeds a predetermined significance threshold, which is defined based on a desired level of genome-wide significance (e.g. based on a null expectation from permutation tests or assumptions about the numbers of true causal loci). However, although this approach is fast and simple and can identify large numbers of QTL, it is not conservative. Variables added in a stepwise approach do not follow the claimed <inline-formula><mml:math id="inf3"><mml:mi>F</mml:mi></mml:math></inline-formula> or <inline-formula><mml:math id="inf4"><mml:msup><mml:mi>χ</mml:mi><mml:mn>2</mml:mn></mml:msup></mml:math></inline-formula>-distribution, so using p-values or related statistics as a selection criterion is known to produce false positives, especially at large sample sizes or in the presence of strong linkage (<xref ref-type="bibr" rid="bib103">Smith, 2018</xref>). Because our primary goal is to dissect the extent of polygenicity by resolving small-effect loci and decomposing ‘composite’ QTL, these false positives are particularly problematic and we therefore cannot use this traditional approach.</p><p>Fortunately, due to the high statistical power of our study design, we are better positioned to address the question of polygenicity using a more conservative method with lower false discovery rate. To do so, we carried out QTL mapping through a modified stepwise regression approach, with three key differences compared to previous methods (see Appendix 3 for details). First, we use cross-validation rather than statistical significance to terminate the model search procedure, which reduces the false positive rate. Specifically, we divide the data into training and test sets (90% and 10% of segregants respectively, chosen randomly), and add QTL iteratively in a forward stepwise regression on the training set. We terminate this process when performance on the test set declines, and use this point to define an L0-norm sparsity penalty on the number of QTL. We repeat this process for all possible divisions of the data to identify the average sparsity penalty, and then use this sparsity penalty to infer our final model from all the data (in addition, an outer loop involving a validation set is also used to assess the performance of our final model). The second key difference in our method is that we jointly re-optimize inferred effect sizes (i.e. estimated effect on fitness of having the RM versus the BY version of a QTL) and lead SNP positions (i.e. our best estimate of the actual causal SNP for each QTL) at each step. This further reduces the bias introduced by the greedy forward search procedure. Finally, the third key difference in our approach is to estimate the 95% credible interval around each lead SNP using a Bayesian method rather than LOD-drop methods, which is more suitable in polygenic architectures. We describe and validate this modified stepwise regression approach in detail in Appendix 3. Simulations under various QTL architectures show that this approach has a low false positive rate, accurately identifies lead SNPs and credible intervals even with moderate linkage, and generally calls fewer QTL than in the true model, only missing QTL of extremely small effect sizes. The behavior of this approach is simple and intuitive: the algorithm greedily adds QTL to the model if their expected contribution to the total phenotypic variance exceeds the bias and increasing variance of the forward search procedure, which is greatly reduced at large sample size. Thus, it may fail to identify very small effect size variants and may fail to break up composite QTL in extremely strong linkage.</p></sec><sec id="s2-5"><title>Resolving the highly polygenic architecture of complex phenotypes in yeast</title><p>We used our modified stepwise cross-validated forward search to infer the genetic basis of the 18 phenotypes described in <xref ref-type="table" rid="table1">Table 1</xref>, assuming an additive model. We find that these phenotypes are highly polygenic: we identify well over 100 QTL spread throughout the genome for almost every trait, an order of magnitude more than that found for similar phenotypes in most earlier studies (<inline-formula><mml:math id="inf5"><mml:mrow><mml:mi/><mml:mo>∼</mml:mo><mml:mrow><mml:mn>0.3</mml:mn><mml:mo>%</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula> of SNPs in our panel; <xref ref-type="fig" rid="fig2">Figures 2</xref> and <xref ref-type="fig" rid="fig3">3B</xref>). This increase can be directly attributed to our large sample size: inference on a downsampled dataset of 1000 individuals detects no more than 30 QTL for any trait (see Appendix 3).</p><fig-group><fig id="fig2" position="float"><label>Figure 2.</label><caption><title>High-resolution QTL mapping.</title><p>QTL mapping for (<bold>A</bold>) YPD at 30 °C and (<bold>B</bold>) SD with 4-nitroquinoline (4NQO). Inferred QTL are shown as red bars; bar height shows effect size and red shaded regions represent credible intervals. For contrast, effect sizes inferred by a Student’s <italic>t</italic>-test at each locus are shown in blue. Gray bars at top indicate loci with log-odds (LOD) scores surpassing genome-wide significance in this <italic>t</italic>-test, with shading level corresponding to log-LOD score. See <xref ref-type="fig" rid="fig2s1">Figure 2—figure supplements 1</xref>–<xref ref-type="fig" rid="fig2s4">4</xref> for other environments. See <xref ref-type="supplementary-material" rid="supp2">Supplementary file 2</xref> for all inferred additive QTL models.</p></caption><graphic mime-subtype="tiff" mimetype="image" xlink:href="elife-73983-fig2-v2.tif"/></fig><fig id="fig2s1" position="float" specific-use="child-fig"><label>Figure 2—figure supplement 1.</label><caption><title>QTL mapping, as in <xref ref-type="fig" rid="fig2">Figure 2</xref>, for 23 C, 25 C, 27 C, and 33 C.</title></caption><graphic mime-subtype="tiff" mimetype="image" xlink:href="elife-73983-fig2-figsupp1-v2.tif"/></fig><fig id="fig2s2" position="float" specific-use="child-fig"><label>Figure 2—figure supplement 2.</label><caption><title>QTL mapping, as in <xref ref-type="fig" rid="fig2">Figure 2</xref>, for 35 C, 37 C, Cu, and Eth.</title></caption><graphic mime-subtype="tiff" mimetype="image" xlink:href="elife-73983-fig2-figsupp2-v2.tif"/></fig><fig id="fig2s3" position="float" specific-use="child-fig"><label>Figure 2—figure supplement 3.</label><caption><title>QTL mapping, as in <xref ref-type="fig" rid="fig2">Figure 2</xref>, for Gu, Li, Mann, and Mol.</title></caption><graphic mime-subtype="tiff" mimetype="image" xlink:href="elife-73983-fig2-figsupp3-v2.tif"/></fig><fig id="fig2s4" position="float" specific-use="child-fig"><label>Figure 2—figure supplement 4.</label><caption><title>QTL mapping, as in <xref ref-type="fig" rid="fig2">Figure 2</xref>, for Raff, SDS, Suloc, YNB.</title></caption><graphic mime-subtype="tiff" mimetype="image" xlink:href="elife-73983-fig2-figsupp4-v2.tif"/></fig></fig-group><fig-group><fig id="fig3" position="float"><label>Figure 3.</label><caption><title>Genetic architecture and pleiotropy.</title><p>(<bold>A</bold>) Pairwise Pearson correlations between phenotype measurements, ordered by hierarchical clustering (<xref ref-type="supplementary-material" rid="fig3sdata1">Figure 3—source data 1</xref>). (<bold>B</bold>) Inferred genetic architecture for each trait. Each inferred QTL is denoted by a red or blue line for a positive or negative effect of the RM allele, respectively; color intensity denotes effect size on a log scale. Notable genes are indicated above. See <xref ref-type="fig" rid="fig3s1">Figure 3—figure supplement 1</xref> for effect size comparison of the most pleiotropic genes. (<bold>C</bold>) Smoothed distribution of absolute effect sizes for each trait, normalized by the median effect for each trait. See <xref ref-type="fig" rid="fig3s2">Figure 3—figure supplement 2</xref> for a breakdown of the distributions by QTL effect sign. (<bold>D</bold>) Distribution of the number of genes within the 95% credible interval for each QTL (<xref ref-type="supplementary-material" rid="fig3sdata2">Figure 3—source data 2</xref>). (<bold>E</bold>) Distribution of SNP types. “High posterior” lead SNPs are those with &gt;50% posterior probability. (<bold>F</bold>) Fractions of synonymous SNPs, nonsynonymous SNPs, and QTL lead SNPs as a function of their frequency in the 1011 Yeast Genomes panel (<xref ref-type="supplementary-material" rid="fig3sdata3">Figure 3—source data 3</xref>). (<bold>G</bold>) Pairwise model similarity scores (which quantify differences in QTL positions and effect sizes between traits; see Appendix 3) across traits. (<bold>H</bold>) Pairwise model similarity scores for each temperature trait against all other temperature traits (<xref ref-type="supplementary-material" rid="fig3sdata4">Figure 3—source data 4</xref>). See <xref ref-type="fig" rid="fig3s3">Figure 3—figure supplement 3</xref> for effect size comparisons between related environments. (<bold>I</bold>) Cumulative distribution functions (CDFs) of differences in effect size for each locus between each pair of traits (orange). Grey traces represent null expectations (differences between cross-validation sets for the same trait). The least and most similar trait pairs are highlighted in red and purple, respectively, and indicated in the legend.</p><p><supplementary-material id="fig3sdata1"><label>Figure 3—source data 1.</label><caption><title>Phenotypic correlation across environments.</title></caption><media mime-subtype="plain" mimetype="text" xlink:href="elife-73983-fig3-data1-v2.txt"/></supplementary-material></p><p><supplementary-material id="fig3sdata2"><label>Figure 3—source data 2.</label><caption><title>Number of genes within confidence intervals of inferred QTL.</title></caption><media mime-subtype="plain" mimetype="text" xlink:href="elife-73983-fig3-data2-v2.txt"/></supplementary-material></p><p><supplementary-material id="fig3sdata3"><label>Figure 3—source data 3.</label><caption><title>Frequency of lead SNPs in 1011 Yeast Genomes panel.</title></caption><media mime-subtype="plain" mimetype="text" xlink:href="elife-73983-fig3-data3-v2.txt"/></supplementary-material></p><p><supplementary-material id="fig3sdata4"><label>Figure 3—source data 4.</label><caption><title>Pairwise model similarity scores across environments.</title></caption><media mime-subtype="plain" mimetype="text" xlink:href="elife-73983-fig3-data4-v2.txt"/></supplementary-material></p></caption><graphic mime-subtype="tiff" mimetype="image" xlink:href="elife-73983-fig3-v2.tif"/></fig><fig id="fig3s1" position="float" specific-use="child-fig"><label>Figure 3—figure supplement 1.</label><caption><title>Highly pleiotropic genes.</title><p>For QTL that are observed in nine or more environments, we plot effect sizes for uncorrelated traits (4NQO, YNB, suloc, gu, li, mol; black dots) and for correlated traits (all others; colored dots). Effect sizes with magnitudes larger than 2.5% are shown on the boundaries.</p></caption><graphic mime-subtype="tiff" mimetype="image" xlink:href="elife-73983-fig3-figsupp1-v2.tif"/></fig><fig id="fig3s2" position="float" specific-use="child-fig"><label>Figure 3—figure supplement 2.</label><caption><title>Comparison of positive and negative QTL effect signs.</title><p>(<bold>A</bold>) Fraction of inferred QTL with a positive effect sign. (<bold>B</bold>) Effect size magnitude of both positive and negative inferred QTL.</p></caption><graphic mime-subtype="tiff" mimetype="image" xlink:href="elife-73983-fig3-figsupp2-v2.tif"/></fig><fig id="fig3s3" position="float" specific-use="child-fig"><label>Figure 3—figure supplement 3.</label><caption><title>Correlations of pleiotropic effects across example traits.</title><p>(<bold>A</bold>) Scatterplots of QTL effects for QTL matched by pairwise model comparison. Left, 30 C <italic>vs</italic> Li; right, 30 C v<italic>s</italic> 27 C. Regression slopes and <inline-formula><mml:math id="inf6"><mml:msup><mml:mi>R</mml:mi><mml:mn>2</mml:mn></mml:msup></mml:math></inline-formula> values are indicated. (<bold>B</bold>) Scatterplots of effect size changes for pleiotropic genes detected along a temperature gradient. Left, 30C–27C <italic>vs</italic> 27C–25C changes; right, 27C–25C <italic>vs</italic> 25C–23C changes.</p></caption><graphic mime-subtype="tiff" mimetype="image" xlink:href="elife-73983-fig3-figsupp3-v2.tif"/></fig></fig-group><p>The distribution of effect sizes of detected QTL shows a large enrichment of small-effect loci, and has similar shape (though different scale) across all phenotypes (<xref ref-type="fig" rid="fig3">Figure 3C</xref>), consistent with an exponential-like distribution above the limit of detection. This distribution suggests that further increases in sample size would reveal a further enrichment of even smaller-effect loci. While our SNP density is high relative to the recombination rate, our sample size is large enough that there are many individuals with a recombination breakpoint between any pair of neighboring SNPs (over 100 such individuals with breakpoints between each SNP on average). This allows us to precisely fine-map many of these QTL to causal genes or even nucleotides. We find that most QTL with substantial effect sizes are mapped to one or two genes, with dozens mapped to single SNPs (<xref ref-type="fig" rid="fig3">Figure 3D</xref>). In many cases these genes and precise causal nucleotides are consistent with previous mapping studies (e.g. MKT1, <xref ref-type="bibr" rid="bib34">Deutschbauer and Davis, 2005</xref>; PHO84, <xref ref-type="bibr" rid="bib89">Perlstein et al., 2007</xref>; HAP1, <xref ref-type="bibr" rid="bib19">Brem et al., 2002</xref>); in some cases we resolve for the first time the causal SNP within a previously identified gene (e.g. IRA2, <xref ref-type="bibr" rid="bib101">Smith and Kruglyak, 2008</xref>; VPS70, <xref ref-type="bibr" rid="bib36">Duitama et al., 2014</xref>). However, we note that because our SNP panel does not capture all genetic variation, such as transposon insertions or small deletions, some QTL lead positions may tag linked variation rather than being causal themselves.</p><p>The SNP density in our panel and resolution of our approach highly constrain these regions of linked variation, providing guidance for future studies of specific QTL, but as a whole we find that our collection of lead SNPs displays some characteristic features of causal variants. Across all identified lead SNPs, we observe a significant enrichment of nonsynonymous substitutions, especially when considering lead SNPs with posterior probability above 0.5 (<xref ref-type="fig" rid="fig3">Figure 3E</xref>; <inline-formula><mml:math id="inf7"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mi>p</mml:mi><mml:mo>&lt;</mml:mo><mml:msup><mml:mn>10</mml:mn><mml:mrow><mml:mo>−</mml:mo><mml:mn>10</mml:mn></mml:mrow></mml:msup></mml:mrow></mml:mstyle></mml:math></inline-formula> , <inline-formula><mml:math id="inf8"><mml:msup><mml:mi>χ</mml:mi><mml:mn>2</mml:mn></mml:msup></mml:math></inline-formula>-test, <inline-formula><mml:math id="inf9"><mml:mrow><mml:mtext>df</mml:mtext><mml:mo>=</mml:mo><mml:mn>2</mml:mn></mml:mrow></mml:math></inline-formula>), as expected for causal changes in protein function. Lead SNPs are also more likely to be found within disordered regions of proteins (1.22 x fold increase, <inline-formula><mml:math id="inf10"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mi>p</mml:mi><mml:mo>&lt;</mml:mo><mml:msup><mml:mn>10</mml:mn><mml:mrow><mml:mo>−</mml:mo><mml:mn>5</mml:mn></mml:mrow></mml:msup></mml:mrow></mml:mstyle></mml:math></inline-formula>, Fisher’s exact test), even when constrained to nonsynonymous variants (1.28 x fold increase beyond the enrichment for nonsynonymous variants in disordered regions, <inline-formula><mml:math id="inf11"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mi>p</mml:mi><mml:mo>&lt;</mml:mo><mml:msup><mml:mn>10</mml:mn><mml:mrow><mml:mo>−</mml:mo><mml:mn>4</mml:mn></mml:mrow></mml:msup></mml:mrow></mml:mstyle></mml:math></inline-formula>, Fisher’s exact test), indicating potential causal roles in regulation (<xref ref-type="bibr" rid="bib37">Dyson and Wright, 2005</xref>). Lead SNP alleles, especially those with large effect size, are observed at significantly lower minor allele frequencies (MAF) in the 1011 Yeast Genomes collection (<xref ref-type="bibr" rid="bib90">Peter et al., 2018</xref>) compared to random SNPs (<xref ref-type="fig" rid="fig3">Figure 3F</xref>; <inline-formula><mml:math id="inf12"><mml:mrow><mml:mi>p</mml:mi><mml:mo>=</mml:mo><mml:mn>0.0004</mml:mn></mml:mrow></mml:math></inline-formula>, Fisher’s exact test considering alleles with effect &gt;1% and rare alleles with MAF &lt;5%) and minor alleles are more likely to be deleterious (<inline-formula><mml:math id="inf13"><mml:mrow><mml:mi>p</mml:mi><mml:mo>=</mml:mo><mml:mn>0.006</mml:mn></mml:mrow></mml:math></inline-formula>, permutation test) regardless of which parental allele is rarer. These results are consistent with the view that rare, strongly deleterious alleles subject to negative selection can contribute substantially to complex trait architecture (<xref ref-type="bibr" rid="bib15">Bloom et al., 2019</xref>; <xref ref-type="bibr" rid="bib47">Fournier et al., 2019</xref>). However, we were unable to detect strong evidence of directional selection (see Appendix 3-1.7), possibly as a consequence of high polygenicity or weak concordance between our assay environments and selection pressure in the wild.</p></sec><sec id="s2-6"><title>Patterns of pleiotropy</title><p>Our eighteen assay environments range widely in their similarity to each other: some groups of traits exhibit a high degree of phenotype correlation across strains, such as rich medium at a gradient of temperatures, while other groups of traits are almost completely uncorrelated, such as molasses, rich medium with suloctidil, and rich medium with guanidinium (<xref ref-type="fig" rid="fig3">Figure 3A</xref>). Because many of these phenotypes are likely to involve overlapping aspects of cellular function, we expect the inferred genetic architectures to exhibit substantial pleiotropy, where individual variants are causal for multiple traits. In addition, in highly polygenic architectures, pleiotropy across highly dissimilar traits is also expected to emerge due to properties of the interconnected cellular network. For example, SNPs in regulatory genes may affect key functional targets (some of them regulatory themselves) that directly influence a given phenotype, as well as other functional targets that may, in turn, influence other phenotypes (<xref ref-type="bibr" rid="bib74">Liu et al., 2019a</xref>).</p><p>Consistent with these expectations, we observe diverse patterns of shared QTL across traits (<xref ref-type="fig" rid="fig3">Figure 3B</xref>). To examine these pleiotropic patterns at the gene level, we group QTL across traits whose lead SNP is within the same gene (or in the case of intergenic lead SNPs, the nearest gene). In total, we identify 449 such pleiotropic genes with lead SNPs affecting multiple traits (see Appendix 3). These genes encompass the majority of QTL across all phenotypes, and are highly enriched for regulatory function (<xref ref-type="table" rid="table2">Table 2</xref>) and for intrinsically disordered regions, which have been implicated in regulation (<inline-formula><mml:math id="inf14"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mi>p</mml:mi><mml:mo>&lt;</mml:mo><mml:mn>0.005</mml:mn></mml:mrow></mml:mstyle></mml:math></inline-formula>, Fisher’s exact test; <xref ref-type="bibr" rid="bib37">Dyson and Wright, 2005</xref>). The most pleiotropic genes (<xref ref-type="fig" rid="fig3s1">Figure 3—figure supplement 1</xref>) correspond to known variants frequently associated with quantitative variation in yeast (e.g. MKT1, HAP1, IRA2).</p><table-wrap id="table2" position="float"><label>Table 2.</label><caption><title>Summary of significant GO enrichment terms (<xref ref-type="supplementary-material" rid="table2sdata1">Table 2—source data 1</xref>).</title><p><supplementary-material id="table2sdata1"><label>Table 2—source data 1.</label><caption><title>Full results of GO analysis on pleiotropic genes.</title></caption><media mime-subtype="plain" mimetype="text" xlink:href="elife-73983-table2-data1-v2.txt"/></supplementary-material></p></caption><table frame="hsides" rules="groups"><thead><tr><th align="left" valign="bottom">Go id</th><th align="left" valign="bottom">Term</th><th align="left" valign="bottom">Corrected p-value</th><th align="left" valign="bottom"># Genes</th></tr></thead><tbody><tr><td align="left" valign="bottom">GO:0000981</td><td align="left" valign="bottom">RNA polymerase II transcription factor activity, sequence-specific DNA binding</td><td align="char" char="." valign="bottom">0.000026</td><td align="char" char="." valign="bottom">30</td></tr><tr><td align="left" valign="bottom">GO:0140110</td><td align="left" valign="bottom">Transcription regulator activity</td><td align="char" char="." valign="bottom">0.000066</td><td align="char" char="." valign="bottom">42</td></tr><tr><td align="left" valign="bottom">GO:0000976</td><td align="left" valign="bottom">Transcription regulatory region sequence-specific DNA binding</td><td align="char" char="." valign="bottom">0.000095</td><td align="char" char="." valign="bottom">29</td></tr><tr><td align="left" valign="bottom">GO:0044212</td><td align="left" valign="bottom">Transcription regulatory region DNA binding</td><td align="char" char="." valign="bottom">0.000113</td><td align="char" char="." valign="bottom">29</td></tr><tr><td align="left" valign="bottom">GO:0003700</td><td align="left" valign="bottom">DNA binding transcription factor activity</td><td align="char" char="." valign="bottom">0.000148</td><td align="char" char="." valign="bottom">31</td></tr><tr><td align="left" valign="bottom">GO:0001067</td><td align="left" valign="bottom">Regulatory region nucleic acid binding</td><td align="char" char="." valign="bottom">0.000161</td><td align="char" char="." valign="bottom">29</td></tr><tr><td align="left" valign="bottom">GO:0043565</td><td align="left" valign="bottom">Sequence-specific DNA binding</td><td align="char" char="." valign="bottom">0.000269</td><td align="char" char="." valign="bottom">41</td></tr><tr><td align="left" valign="bottom">GO:0001227</td><td align="left" valign="bottom">Transcriptional repressor activity, RNA polymerase II transcription regulatory region sequence-specific DNA binding</td><td align="char" char="." valign="bottom">0.000417</td><td align="char" char="." valign="bottom">9</td></tr><tr><td align="left" valign="bottom">GO:0003677</td><td align="left" valign="bottom">DNA binding</td><td align="char" char="." valign="bottom">0.000453</td><td align="char" char="." valign="bottom">65</td></tr><tr><td align="left" valign="bottom">GO:0043167</td><td align="left" valign="bottom">Ion binding</td><td align="char" char="." valign="bottom">0.000999</td><td align="char" char="." valign="bottom">143</td></tr><tr><td align="left" valign="bottom">GO:1990837</td><td align="left" valign="bottom">Sequence-specific double-stranded DNA binding</td><td align="char" char="." valign="bottom">0.001449</td><td align="char" char="." valign="bottom">32</td></tr><tr><td align="left" valign="bottom">GO:0000977</td><td align="left" valign="bottom">RNA polymerase II regulatory region sequence-specific DNA binding</td><td align="char" char="." valign="bottom">0.007709</td><td align="char" char="." valign="bottom">21</td></tr><tr><td align="left" valign="bottom">GO:0001012</td><td align="left" valign="bottom">RNA polymerase II regulatory region DNA binding</td><td align="char" char="." valign="bottom">0.007709</td><td align="char" char="." valign="bottom">21</td></tr></tbody></table></table-wrap><p>The highly polygenic nature of our phenotypes highlights the difficulty in identifying modules of target genes with interpretable functions related to the measured traits (<xref ref-type="bibr" rid="bib18">Boyle et al., 2017</xref>). However, we can take advantage of our high-powered mapping approach to explore how pleiotropy leads to diverging phenotypes in different environments. Specifically, to obtain a global view of pleiotropy and characterize the shifting patterns of QTL effects across traits, we adopt a method inspired by sequence alignment strategies to match (or to leave unmatched) QTL from one trait with QTL from another trait, in a way that depends on the similarity in their effect sizes and distance between lead SNPs (see Appendix 3). From this, for each pair of environments we can find the change in effect size for each QTL, as well as an overall metric of model similarity (essentially a Pearson’s correlation coefficient between aligned model parameters, with highest score of 1 meaning two identical models, and a score of 0 meaning no similar QTL detected in both position and effect size). We find that pairwise model similarity scores recapitulate the phenotype correlation structure (<xref ref-type="fig" rid="fig3">Figure 3G</xref>), including smoothly varying similarity across the temperature gradient (<xref ref-type="fig" rid="fig3">Figure 3H</xref>), indicating that changes in our inferred model coefficients accurately capture patterns of pleiotropy.</p><p>For most comparisons between environments, substantial effect size changes are distributed over all QTL, indicating a broad response to the environmental shift (<xref ref-type="fig" rid="fig3">Figure 3I</xref>). For example, while growth in Li (rich medium+ lithium) is strongly affected by a single locus directly involved in salt tolerance (three tandem repeats of the ENA cluster in S288C, corresponding to 82% of explained variance; <xref ref-type="bibr" rid="bib114">Wieland et al., 1995</xref>), 63 of the remaining 82 QTL are also detected in 30 C (rich medium only), explaining a further 15% of variance. To some extent, these 63 QTL may represent a ‘module’ of genes with functional relevance for growth in rich medium, but their effect sizes are far less correlated than would be expected from noise or for a similar pair of environments (e.g. 30 C and 27 C, <xref ref-type="fig" rid="fig3s3">Figure 3—figure supplement 3</xref>). For the temperature gradient, while we observe high correlations between similar temperatures overall, these are not due to specific subsets of genes with simple, interpretable monotonic changes in effect size. Indeed, effect size differences between temperature pairs are typically uncorrelated; thus, QTL that were more beneficial when moving from 30C to 27C may become less beneficial when moving from 27C to 25C or 25C to 23C (<xref ref-type="fig" rid="fig3s3">Figure 3—figure supplement 3</xref>). Together, these patterns of pleiotropy reveal large numbers of regulatory variants with widespread, important, and yet somewhat unpredictable effects on diverse phenotypes, implicating a highly interconnected cellular network while obscuring potential signatures of specific functional genes or modules.</p></sec><sec id="s2-7"><title>Epistasis</title><p>To characterize the structure of this complex cellular network in more detail, numerous studies have used genetic perturbations to measure epistatic interactions between genes, which in turn shed light on functional interactions (<xref ref-type="bibr" rid="bib110">Tong et al., 2001</xref>; <xref ref-type="bibr" rid="bib61">Horlbeck et al., 2018</xref>; <xref ref-type="bibr" rid="bib22">Butland et al., 2008</xref>; <xref ref-type="bibr" rid="bib35">Dixon et al., 2008</xref>; <xref ref-type="bibr" rid="bib28">Costanzo et al., 2016</xref>; <xref ref-type="bibr" rid="bib27">Costanzo et al., 2010</xref>). However, the role of epistasis in GWAS and QTL mapping studies remains controversial; these studies largely focus on variance partitioning to measure the strength of epistasis, as they are underpowered to infer specific interaction terms (<xref ref-type="bibr" rid="bib62">Huang et al., 2016</xref>). We sought to leverage the large sample size and high allele frequencies of our study to infer epistatic interactions, by extending our inference method to include potential pairwise interactions among the loci previously identified as having an additive effect (see Appendix 3). Our approach builds on the modified stepwise cross-validated search described above: after obtaining the additive model, we perform a similar iterative forward search on pairwise interactions, re-optimizing both additive and pairwise effect sizes at each step and applying a second L0-norm sparsity penalty, similarly chosen by cross-validation, to terminate the model search. We note that restricting our analysis of epistasis to loci identified as having an additive effect does not represent a major limitation. This is because a pair of loci that have a pairwise interaction but no additive effects will tend to be (incorrectly) assigned additive effects in our additive-only model, since the epistatic interaction will typically lead to background-averaged associations between each locus and the phenotype. These spurious additive effects will then tend to be reduced upon addition of the pairwise interaction term.</p><p>Using this approach, we detect widespread epistasis: hundreds of pairwise interactions for each phenotype (<xref ref-type="fig" rid="fig4">Figure 4A and B</xref>, <xref ref-type="table" rid="table1">Table 1</xref>; detected interactions are broadly consistent with results of a pairwise regression approach, as in <xref ref-type="fig" rid="fig4s4">Figure 4—figure supplement 4</xref>), which corresponds to an average of 1.7 epistatic interactions per QTL, substantially more than has been detected in previous mapping studies (<xref ref-type="bibr" rid="bib14">Bloom et al., 2015</xref>). Most of these epistatic effects are modest, shifting predicted double mutant fitness values by a small amount in relation to additive predictions, although a small number largely exaggerate or completely suppress additive effects (<xref ref-type="fig" rid="fig4s5">Figure 4—figure supplement 5A</xref>). Overall, a slight majority of epistatic interactions are compensatory (<xref ref-type="fig" rid="fig4s5">Figure 4—figure supplement 5B</xref>), and nearly 55% of epistatic interactions have a positive sign (i.e. RM/RM and BY/BY genotypes are more fit than the additive expectation; <xref ref-type="fig" rid="fig4s5">Figure 4—figure supplement 5C</xref>). Finally, our procedure picks more epistatic interactions among intra- than between inter-chromosomal pairs of QTL (2.9% vs 2.3% among all environments; <inline-formula><mml:math id="inf15"><mml:mrow><mml:msubsup><mml:mi>χ</mml:mi><mml:mrow><mml:mrow><mml:mi>d</mml:mi><mml:mo>⁢</mml:mo><mml:mi>f</mml:mi></mml:mrow><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mn>2</mml:mn></mml:msubsup><mml:mo>=</mml:mo><mml:mn>25.5</mml:mn></mml:mrow></mml:math></inline-formula>, <inline-formula><mml:math id="inf16"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mi>p</mml:mi><mml:mo>&lt;</mml:mo><mml:msup><mml:mn>10</mml:mn><mml:mrow><mml:mo>−</mml:mo><mml:mn>6</mml:mn></mml:mrow></mml:msup></mml:mrow></mml:mstyle></mml:math></inline-formula>).</p><fig-group><fig id="fig4" position="float"><label>Figure 4.</label><caption><title>Pairwise epistasis.</title><p>(<bold>A, B</bold>) Inferred pairwise epistatic interactions between QTL (with additive effects as shown in outer ring) for (<bold>A</bold>) the 4NQO environment and (<bold>B</bold>) the ynb environment. Interactions that are also observed for at least one other trait are highlighted in purple. See <xref ref-type="fig" rid="fig4s1">Figure 4—figure supplements 1</xref>–<xref ref-type="fig" rid="fig4s3">3</xref> for other environments, <xref ref-type="fig" rid="fig4s4">Figure 4—figure supplement 4</xref> for a simpler pairwise regression method, and <xref ref-type="fig" rid="fig4s5">Figure 4—figure supplement 5</xref> for a breakdown of epistatic effects and comparison to additive effects. (<bold>C</bold>) Network statistics across environments (<xref ref-type="supplementary-material" rid="fig4sdata1">Figure 4—source data 1</xref>). The pooled degree distribution for the eighteen phenotype networks is compared with 50 network realizations generated by an Erdos-Renyi random model (white) or an effect-size-correlation-preserving null model (orange; see Appendix 3). Inset: average clustering coefficient for the eighteen phenotypes, compared to 50 realizations of the null and random models. (<bold>D</bold>) Consensus network of inferred epistatic interactions. Nodes represent genes (with size scaled by degree) and edges represent interactions that were detected in more than one environment (with color and weight scaled by the number of occurrences). Notable genes are labeled. See <xref ref-type="fig" rid="fig4s6">Figure 4—figure supplement 6</xref> for the same consensus network restricted to either highly-correlated or uncorrelated traits.</p><p><supplementary-material id="fig4sdata1"><label>Figure 4—source data 1.</label><caption><title>Network statistics of observed and simulated epistatic networks.</title></caption><media mime-subtype="plain" mimetype="text" xlink:href="elife-73983-fig4-data1-v2.txt"/></supplementary-material></p></caption><graphic mime-subtype="tiff" mimetype="image" xlink:href="elife-73983-fig4-v2.tif"/></fig><fig id="fig4s1" position="float" specific-use="child-fig"><label>Figure 4—figure supplement 1.</label><caption><title>Epistatic interactions, as in <xref ref-type="fig" rid="fig4">Figure 4A and B</xref>, for 23 C, 25 C, 27 C, 30 C, 33 C, and 35 C.</title></caption><graphic mime-subtype="tiff" mimetype="image" xlink:href="elife-73983-fig4-figsupp1-v2.tif"/></fig><fig id="fig4s2" position="float" specific-use="child-fig"><label>Figure 4—figure supplement 2.</label><caption><title>Epistatic interactions, as in <xref ref-type="fig" rid="fig4">Figure 4A and B</xref>, for 37 C, Cu, Eth, Gu, Li, and Mann.</title></caption><graphic mime-subtype="tiff" mimetype="image" xlink:href="elife-73983-fig4-figsupp2-v2.tif"/></fig><fig id="fig4s3" position="float" specific-use="child-fig"><label>Figure 4—figure supplement 3.</label><caption><title>Epistatic interactions, as in <xref ref-type="fig" rid="fig4">Figure 4A and B</xref>, for Mol, Raff, SDS, Suloc, and YNB.</title></caption><graphic mime-subtype="tiff" mimetype="image" xlink:href="elife-73983-fig4-figsupp3-v2.tif"/></fig><fig id="fig4s4" position="float" specific-use="child-fig"><label>Figure 4—figure supplement 4.</label><caption><title>Parwise regression in <italic>4NQO</italic>.</title><p>(<bold>A, B</bold>) Interaction coefficient and assoociated LOD for all pairs of QTL for which we previously infer an additive effect, estimated by linear regression of the measured <italic>4NQO</italic> fitness on the genotype posterior probabilities at two sites at a time. (<bold>C</bold>) Epistatic interaction coefficients selected by the forward search procedure described in the text. (<bold>D</bold>) Comparison of forward search interaction coefficients and their respective pairwise regression estimates. In (<bold>A–C</bold>) QTL are organized in genomic order, with vertical and horizontal lines indicating chromosome limits. Among highlighted genes, MAT and HO are marker loci used in our cross. CAN1 is linked to the the highlighted FLO8 QTL. See <xref ref-type="fig" rid="fig1s3">Figure 1—figure supplement 3</xref> for more info.</p></caption><graphic mime-subtype="tiff" mimetype="image" xlink:href="elife-73983-fig4-figsupp4-v2.tif"/></fig><fig id="fig4s5" position="float" specific-use="child-fig"><label>Figure 4—figure supplement 5.</label><caption><title>Comparison between additive and epistatic effects.</title><p>(<bold>A</bold>) Sum of additive and epistatic effects versus sum of additive effects only for all pairs of interacting QTL selected across all our epistatic models. Notable examples are highlighted and labeled with corresponding pair of genes and environment. Diagonal dashed line is the identity. Inset is zoomed in the indicated region. Breakdown of epistatic interactions between (<bold>B</bold>) synergistic or compensatory, and (<bold>C</bold>) positive or negative, classified in relation to panel A as indicated in the diagrams. Error bars are 95% confidence intervals of the binomial proportion estimate.</p></caption><graphic mime-subtype="tiff" mimetype="image" xlink:href="elife-73983-fig4-figsupp5-v2.tif"/></fig><fig id="fig4s6" position="float" specific-use="child-fig"><label>Figure 4—figure supplement 6.</label><caption><title>Consensus epistatic networks, as in <xref ref-type="fig" rid="fig4">Figure 4D</xref>.</title><p>(<bold>A</bold>) Consensus network for correlated traits (23 C, 25 C, 27 C, 30 C, 33 C, 35 C, 37 C, cu, eth, mann, raff, sds). (<bold>B</bold>) Consensus network for uncorrelated traits (4NQO, li, gu, mol, suloc, ynb).</p></caption><graphic mime-subtype="tiff" mimetype="image" xlink:href="elife-73983-fig4-figsupp6-v2.tif"/></fig></fig-group><p>To interpret these epistatic interactions in the context of cellular networks, we can represent our model as a graph for each phenotype, where nodes represent genes with QTL lead SNPs and edges represent epistatic interactions between those QTL (this perspective is distinct from and complementary to <xref ref-type="bibr" rid="bib27">Costanzo et al., 2010</xref>, where nodes represent gene deletions and edges represent similar patterns of interaction). Notably, in contrast to a random graph, the epistatic graphs across phenotypes show heavy-tailed degree distributions, high clustering coefficients, and small average shortest paths (∼three steps between any pair of genes; <xref ref-type="fig" rid="fig4">Figure 4C</xref>); these features are characteristic of the small-world networks posited by the ‘omnigenic’ view of genetic architecture (<xref ref-type="bibr" rid="bib18">Boyle et al., 2017</xref>). These results hold even when accounting for ascertainment bias (i.e. loci with large additive effects have more detected epistatic interactions; see Appendix 3).</p><p>We also find that hundreds of epistatic interactions are repeatedly found across environments (<xref ref-type="fig" rid="fig4">Figure 4D and</xref> <xref ref-type="fig" rid="fig4s6">Figure 4—figure supplement 6</xref>). Overall, epistatic interactions are more likely to be detected in multiple environments than expected by chance, even when considering only uncorrelated environments (simulation-based <inline-formula><mml:math id="inf17"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mi>p</mml:mi><mml:mo>&lt;</mml:mo><mml:msup><mml:mn>10</mml:mn><mml:mrow><mml:mo>−</mml:mo><mml:mn>3</mml:mn></mml:mrow></mml:msup></mml:mrow></mml:mstyle></mml:math></inline-formula>; see Appendix 3), as expected if these interactions accurately represent the underlying regulatory network. Considering interactions found in all environments, we see a small but significant overlap of detected interactions with previous genome-wide deletion screens (<xref ref-type="bibr" rid="bib28">Costanzo et al., 2016</xref>; <inline-formula><mml:math id="inf18"><mml:mrow><mml:mi>p</mml:mi><mml:mo>=</mml:mo><mml:mn>0.03</mml:mn></mml:mrow></mml:math></inline-formula>, <inline-formula><mml:math id="inf19"><mml:mrow><mml:msup><mml:mi>χ</mml:mi><mml:mn>2</mml:mn></mml:msup><mml:mo>=</mml:mo><mml:mn>4.46</mml:mn></mml:mrow></mml:math></inline-formula>, <inline-formula><mml:math id="inf20"><mml:mrow><mml:mtext>df</mml:mtext><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:math></inline-formula>; see Appendix 3). Taken together, these results suggest that inference of epistatic interactions in a sufficiently high-powered QTL mapping study provides a consistent and complementary method to reveal both global properties and specific features of underlying functional networks.</p></sec><sec id="s2-8"><title>Validating QTL inferences with reconstructions</title><p>We next sought to experimentally validate the specific inferred QTL and their effect sizes from our additive and additive-plus-pairwise models. To do so, we reconstructed six individual and nine pairs of RM SNPs on the BY background and measured their competitive fitness in 11 of the original 18 conditions in individual competition assays (although note that for technical reasons these measurement conditions are not precisely identical to those used in the original bulk fitness assays; see Materials and methods). These mutations were chosen because they represent a mixture of known and unknown causal SNPs in known QTL, were amenable to the technical details of our reconstruction methods, and had a predicted effect size larger than the detection limit of our low-throughput assays to measure competitive fitness (approximately 0.5%) in at least one environment. We find that the QTL effects inferred with the additive-only models are correlated with the phenotypes of these reconstructed genotypes, although the predicted effects are systematically larger than the measured phenotypes (<xref ref-type="fig" rid="fig5">Figure 5A</xref>, cyan). To some extent, these errors may arise from differences in measurement conditions, undetected smaller-effect linked loci that bias inferred additive effect sizes, and from the confidence intervals around the lead SNP, which introduce uncertainty about the identity of the precise causal locus, among other factors. However, this limited power is also somewhat unsurprising even if our inferred lead SNPs are correct, because the effect sizes inferred from the additive-only model measure the effect of a given locus averaged across the F1 genetic backgrounds in our segregant panel. Thus, if there is significant epistasis, we expect the effect of these loci in the specific strain background chosen for the reconstruction (the BY parent in this case) to differ from the background-averaged effect inferred by BB-QTL.</p><fig-group><fig id="fig5" position="float"><label>Figure 5.</label><caption><title>Evaluating model performance.</title><p>(<bold>A</bold>) Comparison between the measured fitness of reconstructions of 6 single (crosses) and nine double mutants (circles) in 11 environments, and their fitness in those environments as predicted by our inferred additive-only (cyan) or additive-plus-pairwise-epistasis models (magenta). The one-to-one line is shown in gray. <inline-formula><mml:math id="inf21"><mml:msup><mml:mi>R</mml:mi><mml:mn mathvariant="normal">2</mml:mn></mml:msup></mml:math></inline-formula> values correspond to to shown fitted linear regressions for each type of model (colored lines), excluding MKT1 mutants measured in gu environment (outliers indicated by arrows). Inset shows the histogram of the absolute difference between observed and predicted reconstruction fitness under our two models, with the <inline-formula><mml:math id="inf22"><mml:mi>p</mml:mi></mml:math></inline-formula>-value from the permutation test of the difference between these distributions indicated. See <xref ref-type="fig" rid="fig5s1">Figure 5—figure supplements 1</xref> and <xref ref-type="fig" rid="fig5s2">2</xref> for a full breakdown of the data, and <xref ref-type="supplementary-material" rid="fig5sdata1">Figure 5—source data 1</xref> for measured and predicted fitness values. (<bold>B</bold>) Comparison between estimated phenotypic variance explained by the additive-plus-pairwise-epistasis model and a trained dense neural network of optimized architecture.</p><p><supplementary-material id="fig5sdata1"><label>Figure 5—source data 1.</label><caption><title>SNP reconstructions’ fitness measurements and predictions.</title></caption><media mime-subtype="plain" mimetype="text" xlink:href="elife-73983-fig5-data1-v2.txt"/></supplementary-material></p></caption><graphic mime-subtype="tiff" mimetype="image" xlink:href="elife-73983-fig5-v2.tif"/></fig><fig id="fig5s1" position="float" specific-use="child-fig"><label>Figure 5—figure supplement 1.</label><caption><title>Comparison between measured and predicted fitness of reconstructions, as in <xref ref-type="fig" rid="fig5">Figure 5</xref>, broken down by mutation (single or double) and model type (additive-only or additive-plus-pairwise).</title><p>We also compare the measured fitness of double mutants, with the sum of the measured fitness of the respective single mutants. Highlighted in yellow are outlier strains removed from analyses and <xref ref-type="fig" rid="fig5">Figure 5</xref>, as explained in the Materials and Methods: BUL2-MKT1, HAP1-BUL2, HAP1-VPS70, and MKT1-VPS70. Arrow indicates the strains containing the MKT1 mutation in Gu, which were also removed from analyses. In gray is the 1:1 line. Dashed lines show a linear regression (excluding outliers), with their <inline-formula><mml:math id="inf23"><mml:msup><mml:mi>R</mml:mi><mml:mn>2</mml:mn></mml:msup></mml:math></inline-formula>-values indicated.</p></caption><graphic mime-subtype="tiff" mimetype="image" xlink:href="elife-73983-fig5-figsupp1-v2.tif"/></fig><fig id="fig5s2" position="float" specific-use="child-fig"><label>Figure 5—figure supplement 2.</label><caption><title>Comparison between observed and predicted reconstruction strain fitness, as in the inset of <xref ref-type="fig" rid="fig5">Figure 5A</xref>.</title><p>The histogram of the absolute difference between predicted and observed values is shown for both single and double mutation reconstructions with their respective permutation test <inline-formula><mml:math id="inf24"><mml:mi>p</mml:mi></mml:math></inline-formula>-values indicated above each.</p></caption><graphic mime-subtype="tiff" mimetype="image" xlink:href="elife-73983-fig5-figsupp2-v2.tif"/></fig></fig-group><p>In agreement with this interpretation, we find that the predictions from our additive-plus-pairwise inference agree better with the measured values in our reconstructed mutants (<xref ref-type="fig" rid="fig5">Figure 5A</xref>, magenta). Specifically, we find that the correlation between predicted and measured phenotypes is similar to the additive-only model, but the systematic overestimates of effect sizes are significantly reduced (<xref ref-type="fig" rid="fig5">Figure 5A</xref>, inset; <inline-formula><mml:math id="inf25"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mi>p</mml:mi><mml:mo>&lt;</mml:mo><mml:msup><mml:mn>10</mml:mn><mml:mrow><mml:mo>−</mml:mo><mml:mn>4</mml:mn></mml:mrow></mml:msup></mml:mrow></mml:mstyle></mml:math></inline-formula> from permutation test; see Materials and Methods). This suggests a substantial effect of nonlinear terms, although the predictive power of our additive-plus-pairwise model remains modest. As above, this limited predictive power could be a consequence of undetected linked loci or errors in the identification of interacting loci. However, it may also indicate the presence of further epistasis of higher order than the pairwise terms we infer. To explore these potential effects of higher-order interactions, we trained a dense neural network to jointly predict 17 out of our 18 phenotypes from genotype data (see Appendix 3). The network architecture involves three densely connected layers, allowing it to capture arbitrary nonlinear mappings. Indeed, we find that this neural network approach does explain slightly more phenotypic variance (on average 1% more variance than the additive-plus-pairwise QTL model, <xref ref-type="fig" rid="fig5">Figure 5B</xref>; see Appendix 4), although specific interactions and causal SNPs are harder to interpret in this case. Together, these results suggest that although our ability to pinpoint precise causal loci and their effect sizes is likely limited by a variety of factors, the models with epistasis do more closely approach the correct genetic architecture despite explaining only marginally more variance than the additive model (<xref ref-type="fig" rid="app4fig1">Appendix 4—figure 1</xref>), as suggested by previous studies (<xref ref-type="bibr" rid="bib46">Forsberg et al., 2017</xref>).</p></sec></sec><sec id="s3" sec-type="discussion"><title>Discussion</title><p>The BB-QTL mapping approach we have introduced in this study increases the scale at which QTL mapping can be performed in budding yeast, primarily by taking advantage of automated liquid handling techniques and barcoded phenotyping. While the initial construction of our segregant panel involved substantial brute force, this has now generated a resource that can be easily shared (particularly in pooled form) and used for similar studies aiming to investigate a variety of related questions in quantitative genetics. In addition, the approaches we have developed here provide a template for the systematic construction of additional mapping panels in future work, which would offer the opportunity to survey the properties of a broader range of natural variation. While our methods are largely specific to budding yeast, conceptually similar high-throughput automated handling systems and barcoding methods may also offer promise in studying quantitative genetics in other model organisms, though substantial effort would be required to develop appropriate techniques in each specific system.</p><p>Here, we have used our large segregant panel to investigate the genetic basis of 18 phenotypes, defined as competitive fitness in a variety of different liquid media. The increased power of our study reveals that these traits are all highly polygenic: using a conservative cross-validation method, we find more than 100 QTL at high precision and low false-positive rate for almost every environment in a single F1 cross. Our detected QTL include many of the key genes identified in earlier studies, along with many novel loci. These QTL overall are consistent with statistical features observed in previous studies. For example, we find an enrichment in nonsynonymous variants among inferred causal loci in regulatory genes, and a tendency for rare variants (as defined by their frequency in the 1,011 Yeast Genomes collection; <xref ref-type="bibr" rid="bib90">Peter et al., 2018</xref>) to have larger effect sizes.</p><p>While the QTL we detect do explain most of the narrow-sense heritability across all traits (<xref ref-type="fig" rid="app4fig1">Appendix 4—figure 1</xref>), this does not represent a substantial increase relative to the heritability explained by earlier, smaller studies with far fewer QTL detected (<xref ref-type="bibr" rid="bib13">Bloom et al., 2013</xref>; <xref ref-type="bibr" rid="bib14">Bloom et al., 2015</xref>; <xref ref-type="bibr" rid="bib15">Bloom et al., 2019</xref>). Instead, the increased power of our approach allows us to dissect multiple causal loci within broad regions previously detected as a single ‘composite’ QTL (<xref ref-type="fig" rid="fig2">Figure 2A</xref>, zoom-ins), and to detect numerous novel small-effect QTL. Thus, our results suggest that, despite their success in explaining observed phenotypic heritability, these earlier QTL mapping studies in budding yeast fail to accurately resolve the highly polygenic nature of these phenotypes. This, in turn, implies that the apparent discrepancy in the extent of polygenicity inferred by GWAS compared to QTL mapping studies in model organisms arises at least in part as an artifact of the limited sample sizes and power of the latter.</p><p>Our finding that increasing power reveals increasingly polygenic architectures of complex traits is broadly consistent with several other recent studies that have improved the scale and power of QTL mapping in yeast in different ways. For example, advanced crosses have helped to resolve composite QTL into multiple causal loci (<xref ref-type="bibr" rid="bib100">She and Jarosz, 2018</xref>), and multiparental or round-robin crosses have identified numerous additional causal loci by more broadly surveying natural variation in yeast (<xref ref-type="bibr" rid="bib15">Bloom et al., 2019</xref>; <xref ref-type="bibr" rid="bib30">Cubillos et al., 2013</xref>). In addition, recent work has used very large panels of diploid genotypes to infer highly polygenic trait architectures, though this study involves a much more permissive approach to identifying QTL that may lead to a substantial false positive rate (<xref ref-type="bibr" rid="bib64">Jakobson and Jarosz, 2019</xref>). Here, we have shown that by simply increasing sample size we can both resolve composite QTL into multiple causal loci and also identify numerous additional small-effect loci that previous studies have been underpowered to detect. The distribution of QTL effect sizes we infer is consistent with an exponential distribution up to our limit of detection, suggesting that there may be many more even smaller-effect causal loci that could be revealed by further increases in sample size.</p><p>By applying BB-QTL mapping to eighteen different fitness traits, we explored how the effects of individual loci shift across small and large environmental perturbations. Quantifying the structure of these pleiotropic effects is technically challenging, particularly for many QTL of modest effect that are not resolved to a single SNP or gene. In these cases, it is difficult to determine whether a particular region contains a single truly pleiotropic locus, or multiple linked variants that each influence a different trait. While we have used one particular approach to this problem, other choices are also possible, and ideally future work to jointly infer QTL using data from all phenotypes simultaneously could provide a more rigorous method for identifying pleiotropic loci. However, we do find that the structure of the pleiotropy in our inferred models largely recapitulates the observed correlations between phenotypes, suggesting that the causal loci we identify are largely sufficient to explain these patterns. Many of the same genes are implicated across many traits, often with similar strong effect sizes in distinct environments, and as we might expect these highly pleiotropic QTL are enriched for regulatory function. However, dividing QTL into modules that affect subsets of environments, predicting how their effect sizes change across environments (even our temperature gradient), and identifying core or peripheral genes (as in <xref ref-type="bibr" rid="bib18">Boyle et al., 2017</xref>) remains difficult. Future work to assay a larger number and wider range of phenotypes could potentially provide more detailed insight into the structure of relationships between traits and how they arise from shared genetic architectures.</p><p>We also leveraged the statistical power of our approach to explore the role of epistatic interactions between QTL. Previous studies have addressed this question through the lens of variance partitioning, concluding that epistasis contributes less than additive effects to predicting phenotype (<xref ref-type="bibr" rid="bib14">Bloom et al., 2015</xref>). However, it is a well-known statistical phenomenon that variance partitioning alone cannot determine the relative importance of additive, epistatic, or dominance factors in gene action or genetic architectures (<xref ref-type="bibr" rid="bib62">Huang et al., 2016</xref>). Here, we instead explore the role of epistasis by inferring specific pairwise interaction terms and analyzing their statistical and functional patterns. We find that epistasis is widespread, with nearly twice as many interaction terms as additive QTL. The resulting interaction graphs show characteristic features of biological networks, including heavy-tailed degree distributions and small shortest paths, and we see a significant overlap with interaction network maps from previous studies despite the different sources of variation (naturally occurring SNPs versus whole-gene deletions). Notably, the set of genes with the most numerous interactions overlaps with the set of highly pleiotropic genes, which are themselves enriched for regulatory function. Together, these findings indicate that we are capturing features of underlying regulatory and functional networks, although we are far from revealing the complete picture. In particular, we expect that we fail to detect many interactions that have small effect sizes below our detection limit, that the interactions we observe are limited by our choice of phenotypes, and that higher-order interactions may also be widespread.</p><p>To validate our QTL inference, we reconstructed a small set of single and double mutations by introducing RM alleles into the BY parental background. We find that our ability to predict the effects of these putatively causal loci remains somewhat limited: the inferred effect sizes in our additive plus pairwise epistasis models have relatively modest power to predict the fitness effects of reconstructed mutations and pairs of mutations. Thus, despite the unprecedented scale and power of our study, we still cannot claim to precisely infer the true genetic architecture of complex traits. This failure presumably arises in part from limitations to our inference, which could lead to inaccuracies in effect sizes or the precise locations of causal loci. In addition, the presence of higher order epistatic interactions (or interactions with the mitochondria) would imply that we cannot expect to accurately predict phenotypes for genotypes far outside of our F1 segregant panel, such as single- and double-SNP reconstructions on the BY genetic background. While both of these sources of error could in principle be reduced by further increases in sample size and power, it is unlikely that substantial improvements are likely to be realized in the near future.</p><p>However, despite these limitations, our BB-QTL mapping approach helps bridge the gap between well-controlled laboratory studies and high-powered, large-scale GWAS, revealing that complex trait architecture in model organisms is indeed influenced by large numbers of previously unobserved small-effect variants. We examined in detail how this architecture shifts across a spectrum of related traits, observing that while pleiotropy is common, changes in effects are largely unpredictable, even for similar traits. Further, we characterized specific epistatic interactions across traits, revealing not only their substantial contribution to phenotype but also the underlying network structure, in which a subset of genes occupy central roles. Future work in this and related systems is needed to illuminate the landscape of pleiotropy and epistasis more broadly, which will be crucial not merely for phenotype prediction but for our fundamental understanding of cellular organization and function.</p></sec><sec id="s4" sec-type="materials|methods"><title>Materials and methods</title><table-wrap id="keyresource" position="anchor"><label>Key resources table</label><table frame="hsides" rules="groups"><thead><tr><th align="left" valign="bottom">Reagent type (species) or resource</th><th align="left" valign="bottom">Designation</th><th align="left" valign="bottom">Source or reference</th><th align="left" valign="bottom">Identifiers</th><th align="left" valign="bottom">Additional information</th></tr></thead><tbody><tr><td align="left" valign="bottom">Strain, strain background (<italic>S. cerevisiae</italic>)</td><td align="left" valign="bottom">BY4741</td><td align="left" valign="bottom"><xref ref-type="bibr" rid="bib6">Baker Brachmann et al., 1998</xref></td><td align="left" valign="bottom">–</td><td align="left" valign="bottom">BY parent background</td></tr><tr><td align="left" valign="bottom">Strain, strain background (<italic>S. cerevisiae</italic>)</td><td align="left" valign="bottom">RM11-1a</td><td align="char" char="." valign="bottom"><xref ref-type="bibr" rid="bib19">Brem et al., 2002</xref></td><td align="left" valign="bottom">–</td><td align="left" valign="bottom">RM parent background</td></tr><tr><td align="left" valign="bottom">Strain, strain background (<italic>S. cerevisiae</italic>)</td><td align="left" valign="bottom">YAN696</td><td align="left" valign="bottom">This paper</td><td align="left" valign="bottom">–</td><td align="left" valign="bottom">BY parent</td></tr><tr><td align="left" valign="bottom">Strain, strain background (<italic>S. cerevisiae</italic>)</td><td align="left" valign="bottom">YAN695</td><td align="left" valign="bottom">This paper</td><td align="left" valign="bottom">–</td><td align="left" valign="bottom">RM parent</td></tr><tr><td align="left" valign="bottom">Strain, strain background (<italic>S. cerevisiae</italic>)</td><td align="left" valign="bottom">BB-QTL F1 strain library</td><td align="left" valign="bottom">This paper</td><td align="left" valign="bottom">–</td><td align="left" valign="bottom">100,000 strains of barcoded BYxRM F1 produced, genotyped and characterized in this paper</td></tr><tr><td align="left" valign="bottom">Strain, strain background (<italic>E. coli</italic>)</td><td align="left" valign="bottom">BL21(DE3)</td><td align="left" valign="bottom">NEB</td><td align="left" valign="bottom">NEB:C2527I</td><td align="left" valign="bottom">Zymolyase and barcoded Tn-5 expression system</td></tr><tr><td align="left" valign="bottom">Recombinant DNA reagent</td><td align="left" valign="bottom">pAN216a pGAL1-HO pSTE2-HIS3 pSTE3 LEU2 (plasmid)</td><td align="left" valign="bottom">This paper</td><td align="left" valign="bottom">–</td><td align="left" valign="bottom">For MAT-type switching</td></tr><tr><td align="left" valign="bottom">Recombinant DNA reagent</td><td align="left" valign="bottom">pAN3H5a 1/2URA3 KanP1 ccdB LoxPR (plasmid)</td><td align="left" valign="bottom">This paper</td><td align="left" valign="bottom">–</td><td align="left" valign="bottom">Type one barcoding plasmid, without barcode library</td></tr><tr><td align="left" valign="bottom">Recombinant DNA reagent</td><td align="left" valign="bottom">pAN3H5a LoxPL ccdB HygP1 2/2URA3 (plasmid)</td><td align="left" valign="bottom">This paper</td><td align="left" valign="bottom">–</td><td align="left" valign="bottom">Type two barcoding plasmid, without barcode library</td></tr><tr><td align="left" valign="bottom">Sequence-based reagent</td><td align="left" valign="bottom">Custom Tn5 adapter oligos</td><td align="left" valign="bottom">This paper</td><td align="left" valign="bottom">Tn5-L and -R</td><td align="left" valign="bottom">See Materials and methods</td></tr><tr><td align="left" valign="bottom">Sequence-based reagent</td><td align="left" valign="bottom">Custom sequencing adapter primers</td><td align="left" valign="bottom">This paper</td><td align="left" valign="bottom">P5mod and P7mod</td><td align="left" valign="bottom">See Materials and methods</td></tr><tr><td align="left" valign="bottom">Sequence-based reagent</td><td align="left" valign="bottom">Custom barcode amplification primers</td><td align="left" valign="bottom">This paper</td><td align="left" valign="bottom">P1 and P2</td><td align="left" valign="bottom">See Materials and methods</td></tr><tr><td align="left" valign="bottom">Sequence-based reagent</td><td align="left" valign="bottom">Custom sequencing primers for Illumina</td><td align="left" valign="bottom">This paper</td><td align="left" valign="bottom">Custom_read_1 through 4</td><td align="left" valign="bottom">See Materials and methods</td></tr><tr><td align="left" valign="bottom">Software, algorithm</td><td align="left" valign="bottom">Custom code for genotype inference</td><td align="left" valign="bottom">This paper</td><td align="left" valign="bottom">–</td><td align="left" valign="bottom">See code repository</td></tr><tr><td align="left" valign="bottom">Software, algorithm</td><td align="left" valign="bottom">Custom code for phenotype inference</td><td align="left" valign="bottom">This paper</td><td align="left" valign="bottom">–</td><td align="left" valign="bottom">See code repository</td></tr><tr><td align="left" valign="bottom">Software, algorithm</td><td align="left" valign="bottom">Custom code for compressed sensing</td><td align="left" valign="bottom">This paper</td><td align="left" valign="bottom">–</td><td align="left" valign="bottom">See code repository</td></tr><tr><td align="left" valign="bottom">Software, algorithm</td><td align="left" valign="bottom">Custom code for qtl inference</td><td align="left" valign="bottom">This paper</td><td align="left" valign="bottom">–</td><td align="left" valign="bottom">See code repository</td></tr></tbody></table></table-wrap><sec id="s4-1"><title>Design and construction of the barcoded cross</title><p>A key design choice in any QTL mapping study is what genetic variation will be included (i.e. the choice of parental strains) and how that variation will be arranged (i.e. the cross design). In choosing strains, wild isolates may display more genotypic and phenotypic diversity than lab-adapted strains, but may also have poor efficiency during the mating, sporulation, and transformation steps required for barcoding. In designing the cross, one must balance several competing constraints, prioritizing different factors according to the goals of the particular study. Increasing the number of parental strains involved increases genetic diversity, but can also increase genotyping costs (see Appendix 1); increasing the number of crosses or segregants improves fine-mapping resolution by increasing the number of recombination events, but also increases strain production time and costs. For a study primarily interested in precise fine-mapping of strong effects, a modest number of segregants from a deep cross may be most appropriate <xref ref-type="bibr" rid="bib100">She and Jarosz, 2018</xref>; for a study interested in a broad view of diversity across natural isolates, a modest number of segregants produced from a shallow multi-parent cross may be preferred (<xref ref-type="bibr" rid="bib15">Bloom et al., 2019</xref>). However, we are primarily interested in achieving maximum statistical power to map large numbers of small-effect loci; for this, we choose to map an extremely large number of segregants from a simple, shallow cross. We begin in this section by describing our choice of strains, cross design, and barcoding strategy.</p><sec id="s4-1-1"><title>Strains</title><p>The two parental strains used in this study, YAN696 and YAN695, are derived from the BY4741 (<xref ref-type="bibr" rid="bib6">Baker Brachmann et al., 1998</xref>) (S288C: MATa, his3Δ1, ura3Δ0, leu2Δ0, met17Δ0) and RM11-1a (haploid derived from Robert Mortimer’s Bb32(3): MATa, ura3Δ0, leu2Δ0, ho::KanMX; <xref ref-type="bibr" rid="bib19">Brem et al., 2002</xref>) backgrounds respectively, with several modifications required for our barcoding strategy. We chose to work in these backgrounds (later denoted as BY and RM) due to their history in QTL mapping studies in yeast (<xref ref-type="bibr" rid="bib39">Ehrenreich et al., 2010</xref>; <xref ref-type="bibr" rid="bib13">Bloom et al., 2013</xref>; <xref ref-type="bibr" rid="bib19">Brem et al., 2002</xref>), which demonstrate a rich phenotypic diversity in many environments.</p><p>The ancestral RM11-1a is known to incompletely divide due to the AMN1(A1103) allele (<xref ref-type="bibr" rid="bib118">Yvert et al., 2003</xref>). To avoid this, we introduced the A1103T allele by Delitto Perfetto (<xref ref-type="bibr" rid="bib107">Storici et al., 2001</xref>), yielding YAN497. This strain also contains an HO deletion that is incompatible with HO-targeting plasmids (<xref ref-type="bibr" rid="bib113">Voth et al., 2001</xref>). We replaced this deletion by introducing the S288C version of HO with the NAT marker (resistance to nourseothricin; <xref ref-type="bibr" rid="bib50">Goldstein and McCusker, 1999</xref>) driven by the TEF promoter from <italic>Lachancea waltii</italic>, and terminated with tSynth7 (<xref ref-type="bibr" rid="bib31">Curran et al., 2015</xref>) (ho::LwpTEF-Nat-tSynth7), creating YAN503. In parallel, a MATα strain was created by converting the mating type of the ancestral RM11-1a using a centromeric plasmid carrying a galactose-inducible functional HO endonuclease (pAN216a_pGAL1-HO_pSTE2-HIS3_pSTE3_LEU2), creating YAN494. In this MATα strain, the HIS3 gene was knocked out with the his3d1 allele of BY4741, generating YAN501. This strain was crossed with YAN503 to generate a diploid (YAN501xYAN503) and sporulated to obtain a spore containing the desired set of markers (YAN515: MATα, ura3Δ0, leu2Δ0, his3Δ1, AMN1(A1103T), ho::LwpTEF-NAT-tSynth7). A ‘landing pad’ for later barcode insertion was introduced into this strain by swapping the NAT marker with pGAL1-Cre-CaURA3MX creating YAN616. This landing pad contains the Cre recombinase under the control of the galactose promoter and the URA3 gene from <italic>Candida albicans</italic> driven by the TEF promoter from <italic>Ashbya gossypii</italic>. This landing pad can be targeted by HO-targeting plasmids containing barcodes (see <xref ref-type="fig" rid="fig1s1">Figure 1—figure supplement 1</xref>). To allow future selection for diploids, the G418 resistance marker was introduced between the Cre gene and the CaURA3 gene, yielding the final RM11-1a strain YAN695.</p><p>The BY4741 strain was first converted to methionine prototrophy by transforming the <italic>MET17</italic> gene into <italic>Δmet17</italic>, generating YAN599. The CAN1 gene was subsequently replaced with a MATa mating type reporter construct (<xref ref-type="bibr" rid="bib111">Tong and Boone, 2006</xref>) (pSTE2-SpHIS5) which expresses the HIS5 gene from <italic>Schizosaccharomyces pombe</italic> (orthologous to the <italic>S. cerevisiae</italic> HIS3) in MATa cells. A landing pad was introduced into this strain with CaURA3MX-NAT-pGAL1-Cre, yielding YAN696; this landing pad differs from the one in YAN695 by the location of the pGAL1-Cre and the presence of a NAT marker rather than a G418 marker (see <xref ref-type="fig" rid="fig1s2">Figure 1—figure supplement 2</xref>).</p></sec><sec id="s4-1-2"><title>Construction of barcoding plasmids</title><p>The central consideration in designing our barcoding strategy was ensuring sufficient diversity, such that no two out of 100,000 individual cells sorted from a pool will share the same barcode. To ensure this, the total number of barcodes in the pool must be several orders of magnitude larger than 10<sup>5</sup>, which is infeasible even with maximal transformation efficiency. Our solution employs combinatorics: each spore receives two barcodes, one from each parent, such that mating two parental pools of ∼10<sup>4</sup> unique barcodes produces a pool of ∼10<sup>8</sup> uniquely barcoded spores. This requires efficient barcoding of the parental strains, efficient recombination of the two barcodes onto the same chromosome in the mated diploids, and efficient selection of double-barcoded haploids after sporulation.</p><p>Our barcoding system makes use of two types of barcoding plasmids, which we refer to as Type 1 and Type 2. Both types are based on the HO-targeting plasmid pAN3H5a (<xref ref-type="fig" rid="fig1s1">Figure 1—figure supplement 1</xref>), which contains the LEU2 gene for selection as well as homologous sequences that lead to integration of insert sequences with high efficiency. The Type 1 barcoding plasmid has the configuration pAN3H5a–1/2URA3–KanP1–ccdB–LoxPR, while Type 2 has the configuration pAN3H5a–LoxPL–ccdB–HygP1–2/2URA3. Here the selection marker URA3 is split across the two different plasmids: 1/2URA3 contains the first half of the URA3 coding sequence and an intron 5’ splice donor, while 2/2URA3 contains the 3’ splice acceptor site and the second half of the URA3 coding sequence. Thus we create an artificial intron within URA3, using the 5’ splice donor from RPS17a and the 3’ splice acceptor from RPS6a (<xref ref-type="bibr" rid="bib93">Plass, 2020</xref>), that will eventually contain both barcodes. KanP1 and HygP1 represent primer sequences. The ccdB gene provides counter-selection for plasmids lacking barcodes (see below). Finally, LoxPR and LoxPL are sites in the Cre-Lox recombination system (<xref ref-type="bibr" rid="bib3">Albert et al., 1995</xref>) used for recombining the two barcodes in the mated diploids. These sites contain arm mutations on the right and left side, respectively, that render them partially functional before recombination; after recombination, the site located between the barcodes is fully functional, while the one on the opposite chromosome has slightly reduced recombination efficiency (<xref ref-type="bibr" rid="bib87">Nguyen Ba et al., 2019</xref>).</p><p>We next introduced a diverse barcode library into the barcoding plasmids using a Golden Gate reaction (<xref ref-type="bibr" rid="bib42">Engler, 2009</xref>), exploiting the fact that the ccdB gene (with BsaI site removed) is flanked by two BsaI restriction endonuclease sites. Barcodes were ordered as single-stranded oligos from Integrated DNA Technologies (IDT) with degenerate bases (ordered as ‘hand-mixed’) flanked by priming sequences: P_BC1 = CTAGTT ATTGCT CAGCGG AGGTCT CAtact NNNatN NNNNat NNNNNg cNNNcg ctAGAG ACCGTC ATAGCT GTTTCC TG, P_BC2 = CTAGTT ATTGCT CAGCGG AGGTCT CAtact NNNatN NNNNgc NNNNNa tNNNcg ctAGAG ACCGTC ATAGCT GTTTCC TG. These differ only in nucleotides inserted at the 16 degenerate bases (represented by ‘N’), which comprise the barcodes; these barcodes are flanked by two BsaI sites that leave ‘tact’ and ‘cgct’ as overhangs. Conversion of the oligos to double-stranded DNA and preparation of the <italic>Escherichia coli</italic> library was performed as in <xref ref-type="bibr" rid="bib87">Nguyen Ba et al., 2019</xref>. Briefly, Golden Gate reactions were carried out to insert P_BC1 and P_BC2 barcodes into Type 1 and Type 2 barcoding plasmids, respectively. Reactions were purified and electroporated into <italic>E. coli</italic> DH10β cells (Invitrogen) and recovered in about 1 L of molten LB (1% tryptone, 0.5% yeast extract) containing 0.3% SeaPrep agarose (Lonza) and 100 µg/mL ampicillin. The mixture was allowed to gel on ice for an hour and then placed at 37 °C overnight for recovery of the transformants. We routinely observed over 10<sup>6</sup> transformants from this procedure, and the two barcoded plasmid libraries were recovered by standard maxiprep (<xref ref-type="fig" rid="fig1s2">Figure 1—figure supplement 2a</xref>).</p></sec><sec id="s4-1-3"><title>Parental barcoding procedure</title><p>Distinct libraries of barcoded parental BY and RM strains were generated by transforming parental strains with barcoded plasmid libraries (<xref ref-type="fig" rid="fig1s2">Figure 1—figure supplement 2b</xref>): YAN696 (BY) with Type 1, and YAN695 (RM) with Type 2. Barcoded plasmids were digested with PmeI (New England Biolabs) prior to transformation, and transformants were selected on several SD –leu agar plates (6.71 g/L yeast nitrogen base, complete amino acid supplements lacking leucine, 2% dextrose). In total, 23 pools of ∼1000 transformants each were obtained for BY, and 12 pools of ∼1,000 transformants each were obtained for RM. After scraping the plates, we grew these pools overnight in SD –leu +5 FOA (6.71 g/L yeast nitrogen base, complete amino acid supplements lacking leucine, 2% dextrose, 1 g/L 5-fluoroorotic acid) to select for integration at the correct locus. Each of the BY and RM libraries were kept separate, and for each library we sequenced the barcode locus on an Illumina NextSeq to confirm the diversity and identity of parental barcodes. This allows for 23 × 12 distinct sets of diploid pools with approximately 1 million possible barcode combinations each, for a total of ∼3 × 10<sup>8</sup> barcodes.</p></sec><sec id="s4-1-4"><title>Generation of 100,000 barcoded F1 segregants</title><p>Each of the 23 × 12 combinations of BY and RM barcoded libraries was processed separately, from mating through sorting of the resulting F1 haploids (<xref ref-type="fig" rid="fig1s2">Figure 1—figure supplement 2b</xref>). For each distinct mating, the two parental libraries were first grown separately in 5 mL YPD (1% Difco yeast extract, 2% Bacto peptone, 2% dextrose) at 30 °C. The overnight cultures were plated on a single YPD agar plate and allowed to mate overnight at room temperature. The following day, the diploids were scraped and inoculated into 5 mL YPG (1% Difco yeast extract, 2% Bacto peptone, 2% galactose) containing 200 µg/mL G418 (GoldBio) and 10 µg/mL Nourseothricin (GoldBio) at a density of approximately <inline-formula><mml:math id="inf26"><mml:mrow><mml:mn>2</mml:mn><mml:mo>⋅</mml:mo><mml:msup><mml:mn>10</mml:mn><mml:mn>6</mml:mn></mml:msup></mml:mrow></mml:math></inline-formula> cells/mL and allowed to grow for 24 hr at 30 °C. The next day, the cells were again diluted 1:2<sup>5</sup> into the same media and allowed to grow for 24 hr at 30 °C. This results in ∼10 generations of growth in galactose-containing media, which serves to induce Cre recombinase to recombine the barcoded landing pads, generating Ura+ cells (which therefore contain both barcodes on the same chromosome) at very high efficiency.</p><p>Recombinants were selected by 10 generations of growth (two cycles of 1:2<sup>5</sup> dilution and 24 hr of growth at 30 °C) in SD –ura (6.71 g/L Yeast Nitrogen Base with complete amino acid supplements lacking uracil, 2% dextrose). Cells were then diluted 1:2<sup>5</sup> into pre-sporulation media (1% Difco yeast extract, 2% Bacto peptone, 1% potassium acetate, 0.005% zinc acetate) and grown for 24 hr at room temperature. The next day, the whole culture was pelleted and resuspended into 5 mL sporulation media (1% potassium acetate, 0.005% zinc acetate) and grown for 72 hr at room temperature. Sporulation efficiency typically reached &gt;75%.</p><p>Cells were germinated by pelleting approximately 100 µL of spores and digesting their asci with 50 µL of 5 mg/mL Zymolyase 20T (Zymo Research) containing 20 mM DTT for 15 min at 37 °C. The tetrads were subsequently disrupted by mild sonication (3 cycles of 30 s at 70% power), and the dispersed spores were recovered in 100 mL of molten SD –leu –ura –his + canavanine (6.71 g/L Yeast Nitrogen Base, complete amino acid supplements lacking uracil, leucine and histidine, 50 µg/mL canavanine, 2% dextrose) containing 0.3% SeaPrep agarose (Lonza) spread into a thin layer (about 1 cm deep). The mixture was allowed to set on ice for an hour, after which it was kept for 48 hr at 30 °C to allow for dispersed growth of colonies in 3D. This procedure routinely resulted in ∼10<sup>6</sup> colonies of uniquely double-barcoded MATa F1 haploid segregants for each pair of parental libraries.</p><p>F1 segregants obtained using our approach are expected to be prototrophic haploid MATa cells, with approximately half their genome derived from the BY parent and half from the RM parent, except at marker loci (see <xref ref-type="fig" rid="fig1s3">Figure 1—figure supplement 3</xref>).</p></sec><sec id="s4-1-5"><title>Sorting F1 segregants into single wells</title><p>After growth, germinated cells in soft agar were mixed by thorough shaking. Fifty µL of this suspension was inoculated in 5 mL SD –leu –ura –his + canavanine and allowed to grow for 2–4 hr at 30 °C. The cells were then stained with DiOC6(3) (Sigma) at a final concentration of 0.1 µM and incubated for 1 hr at room temperature. DiOC6(3) is a green-fluorescent lipophilic dye that stains for functional mitochondria (<xref ref-type="bibr" rid="bib91">Petit et al., 1996</xref>). We used flow cytometry to sort single cells into individual wells of polypropylene 96-well round-bottom microtiter plates containing 150 µL YPD per well. During sorting we applied gates for front and side scatter to select for dispersed cells as well as a FITC gate for functional mitochondria. From each mating, we sorted 384 single cells into 4 96-well plates; because the possible diversity in each mating is about 10<sup>6</sup> unique barcodes, the probability that two F1 segregants share the same barcode is extremely low.</p><p>The single cells were then allowed to grow unshaken for 48 hr at 30 °C, forming a single colony at the bottom of each well. The plates were then scanned on a flatbed scanner and the scan images were used to identify blank wells. We observed 4843 blanks among a total of 105,984 wells (sorting efficiency of ≥95%), resulting in a total of 101,141 F1 segregants in our panel. Plates were then used for archiving, genotyping, barcode association, and phenotyping as described below.</p><p>We expect F1 segregants obtained using our approach to be prototrophic haploid MATa cells, with approximately half their genome derived from the BY parent and half from the RM parent, except at marker loci in chromosome III, IV, and V (see <xref ref-type="fig" rid="fig1s3">Figure 1—figure supplement 3</xref> for allele frequencies).</p></sec><sec id="s4-1-6"><title>Reference parental strains</title><p>Although not strictly necessary for future analysis, it is often informative to phenotype the parental strains in the same assay as the F1 segregants. However, the parental strains described above (YAN695 and YAN696) do not contain the full recombined barcode locus and are thus not compatible with bulk-phenotyping strategies described in Appendix 2. We therefore created reference strains whose barcode locus and selection markers are identical to the F1 segregants, while their remaining genotypes are identical to the parental strains.</p><p>The parental BY strain YAN696 required little modification: we simply transformed its landing pad with a known double barcode (barcode sequence <named-content content-type="sequence">ATTTGACCCAAAGCTT</named-content> – <named-content content-type="sequence">GGCATGGCGCCGTACG</named-content>). In contrast, the parental RM strain is of the opposite mating type to the F1 segregants and differs at the CAN1 locus. From the YAN501xYAN503 diploid, we generated a MATa spore containing otherwise identical genotype as YAN515, producing YAN516. The CAN1 locus of this strain was replaced with the MATa mating type reporter as described previously (pSTE2-SpHIS5) producing YAN684. Finally, we transformed the landing pad with a known double barcode (barcode sequence <named-content content-type="sequence">AGAAGAAGTCACCGTA</named-content> – <named-content content-type="sequence">TACTACGTCTTATTTA</named-content>). We refer to these strains as RMref and BYref in Appendix 2.</p></sec></sec><sec id="s4-2"><title>Whole-genome sequencing of all F1 segregants</title><p>The SNP density in the BYxRM cross is such that there is on average one SNP every few hundred basepairs (i.e. on the order of one SNP per sequencing read), making whole-genome sequencing an attractive genotyping strategy. However, there are obvious time and cost constraints to preparing 100,000 sequencing libraries and sequencing 100,000 whole genomes to high coverage. We overcome these challenges by creating a highly automated and multiplexed library preparation pipeline, and by utilizing low-coverage sequencing in combination with genotype imputation methods. In this section we describe the general procedure for producing sequencing libraries, while sections below describe how we automate the procedure in 96-well format using liquid handling robots.</p><sec id="s4-2-1"><title>Cell lysis and zymolyase purification</title><p>Typical tagmentase-based library preparation protocols start with purified genomic DNA of normalized concentration (<xref ref-type="bibr" rid="bib9">Baym et al., 2015</xref>). However, we found that the transposition reaction is efficient in crude yeast lysate, provided that the yeast cells are lysed appropriately. This approach significantly reduces costs and increases throughput of library preparation.</p><p>Efficient cell lysis can be accomplished with the use of zymolyase, a mixture of lytic enzymes that can digest the yeast cell wall in the presence of mild detergents. However, we and others (<xref ref-type="bibr" rid="bib84">Miyajima et al., 2009</xref>) have found that commercial preparations of zymolyase from <italic>Arthrobacter luteus</italic> contain contaminating yeast DNA. The amount of contaminating DNA in the preparations is low (estimates of 10<sup>7</sup> copies of the rRNA gene per mL of extraction buffer can be found <xref ref-type="bibr" rid="bib84">Miyajima et al., 2009</xref>), but this level of contamination is problematic for low-coverage sequencing of yeast strains, as it complicates later genotype imputation (see Appendix 1). Attempts to reduce yeast DNA contamination from either commercial or in-house preparation from <italic>A. luteus</italic> were unsuccessful. Thus, we take a different approach by recombinantly producing large quantities of beta-1,3-glucanase (<xref ref-type="bibr" rid="bib95">Rodríguez-Peña et al., 2013</xref>), the major lytic component of zymolyase, in <italic>E. coli</italic>. The protease that is also required for natural zymolyase activity can be omitted if the reaction is supplemented with DTT (<xref ref-type="bibr" rid="bib98">Scott and Schekman, 1980</xref>).</p><p>We produce two isoforms of beta-1,3-glucanase. One is an N-terminal 6xHIS-tag version of the <italic>A. luteus</italic> enzyme, where the nickel-binding tag is inserted after a consensus periplasmic signal sequence (<xref ref-type="bibr" rid="bib58">Heggeset et al., 2013</xref>). The other is the (T149A/G145D/A344V) variant of the enzyme from <italic>Oerskovia xanthineolytica</italic> with the 6xHIS-tag placed at the C-terminus of the enzyme (<xref ref-type="bibr" rid="bib96">Salazar et al., 2006</xref>). Both enzymes are produced by T7 IPTG induction. We grow <italic>E. coli</italic> BL21(DE3) cells in autoinduction medium ZYM-5052 (<xref ref-type="bibr" rid="bib108">Studier, 2005</xref>), induce at 18 °C, and purify the recombinant proteins on nickel-NTA resin. Briefly, cell pellets are lysed by sonication in 50 mM sodium phosphate pH 8, 300 mM NaCl, 10 mM imidazole, 10% glycerol, and 0.1% Triton X-100. After lysate clarification, contaminating DNA from the lysate is removed by ion-exchange by the addition of 1 mL neutralized PEI (10% solution) per 10 g wet cell pellet. The opaque mixture is centrifuged, and the supernatant is incubated on a 10 mL Ni-NTA resin bed. After extensive washing of the resin, the protein is eluted with 250 mM imidazole and dialyzed against 50 mM sodium phosphate pH 7.5, 50 mM NaCl, 10% glycerol. We finally add DTT to 10 mM and Triton X-100% to 0.1%. The enzymes can be stored in these buffers indefinitely at –20 °C. We produce approximately 150 mg of enzyme per liter of culture for the <italic>A. luteus</italic> enzyme and 60 mg of enzyme per liter of culture for the <italic>O. xanthineolytica</italic> enzyme.</p><p>We mix the two purified enzymes at a 1:1 ratio, and find that these enzymes act synergistically in the presence of DTT to lyse yeast cells. Cell lysis of the F1 segregants is carried out by mixing saturated cultures with glucanase mix at a 5:3 ratio and incubating for 45 min at 30 °C for cell wall digestion. Cells are then heated to 80 °C for 5 min to lyse the nuclei and denature DNA binding proteins. The resulting lysate can be stored at 4 °C and used directly for tagmentation.</p></sec><sec id="s4-2-2"><title>Barcoded Tn5-mediated sequencing</title><p>The tagmentase enzyme Tn5 is often used in library preparation for its ability to fragment double-stranded DNA and add oligos to both ends of each fragment in a single isothermal reaction, a process first described by <xref ref-type="bibr" rid="bib2">Adey et al., 2010</xref> and later commercialized as Nextera by Illumina. The attached oligos serve as priming sites for the addition of indexed sequencing adaptors by PCR, which identify individual samples in a multiplexed pool. Since carrying out 100,000 individual PCR reactions would be challenging, we aimed to incorporate indexed oligos during the tagmentation reaction itself, which would allow us to pool samples for the following PCR step. Similar reaction protocols are commercially available (e.g. plexWell by seqWell).</p><p>The tagmentase enzyme Tn5 can be purchased (e.g. from Lucigen) or produced according to published protocols (<xref ref-type="bibr" rid="bib92">Picelli et al., 2014</xref>; <xref ref-type="bibr" rid="bib60">Hennig et al., 2018</xref>). Briefly, <italic>E. coli</italic> cells expressing Tn5 tagged with intein-CBD (chitin binding domain) were grown at 37 °C and induced at 18 °C. Cells were then lysed by sonication in high-salt buffer (20 mM HEPES-KOH pH 7.2, 800 mM NaCl, 10% glycerol, 1 mM EDTA, 0.2% Triton X-100). After clarifying the lysate by centrifugation, neutralized PEI was added dropwise to 0.1% and stirred for 15 min. The opaque mixture was centrifuged and the supernatant was loaded on chitin resin (New England Biolabs). After extensive washing with lysis buffer, DTT was added to 100 mM to initiate intein cleavage, after which the column was incubated for 48 hr. The eluted product was then collected and concentrated to approximately 1.5 mg/mL (as determined by Bradford assay using bovine serum albumin as standard), and dialyzed against dialysis buffer (50 mM HEPES-KOH pH 7.2, 800 mM NaCl, 0.2 mM EDTA, 2 mM DTT, 20% glycerol). The enzyme was stored by mixing 1:1 with a buffer containing 80% glycerol and 800 mM NaCl to produce the final storage conditions (25 mM HEPES-KOH pH 7.2, 800 mM NaCl, 0.1 mM EDTA, 1 mM DTT, 50% glycerol). Aliquots were then flash-frozen in liquid nitrogen and stored at –80 °C.</p><p>Before use, purified Tn5 needs to be activated with appropriate oligonucleotide adapters, which in our case carry unique indices. These oligos are double-stranded DNA molecules composed of a constant region for the Illumina sequencing adapters, a variable region for unique indices, and a constant region (mosaic ends) to which the enzyme binds (Tn5ME: AGATGT GTATAA GAGACA G). The Illumina-compatible region comes in two versions, corresponding to the priming sequences to attach P5 and P7 sequencing adapters in a subsequent PCR step; we term these as Left (for P5) and Right (for P7). For unique identification of each well in a 384-well plate, we chose 16 different Left adapter indices and 24 different Right adapter indices, and ordered the resulting constructs as single-stranded oligos. Our oligos have the following configuration: Tn5-L = 5’-GCCTCC CTCGAG CCATGA AGTCGC AGCGTY YYYYYA GATGTG TATAAG AGACAG-3’, Tn5-R = 5’-GCCTTG CCAGCC CGAGTG TTGGAC GGTAGY YYYYYA GATGTG TATAAG AGACAG-3’, where the variable region for unique indices is represented by YYYYYY. These oligos are converted to double-stranded oligos by annealing to a single reverse sequence complementary to Tn5ME (Tn5ME-Rev: 5’-[phos]CTGTCT CTTATA CACATC T-3’). We mix 157.5 µM Tn5ME-Rev with 157.5 µM indexed oligo (a single L or a single R oligo), 10 mM Tris pH 8, 1 mM EDTA, and 100 mM NaCl in 50 µL final volume. In a thermocycler, the mixture is heated to 95 °C and cooled at a rate of 1 °C/min until 15 °C is reached. To activate the enzyme, we thoroughly mix 50 µL annealed adapters with 600 µL prepared Tn5 (at about 0.75 mg/mL) and incubate for 1 hr at room temperature. Activated Tn5 can then be stored at –20 °C. The enzyme preparation for each index is tested for activity and approximately normalized by dilution if needed (this is important for maintaining consistency in DNA fragment size across samples).</p><p>The Tn5 tagmentation reaction of genomic DNA is performed by mixing approximately 40 ng genomic DNA, 25 µL of 2 x transposition buffer (20% propylene glycol, 24% dimethylformamide, 150 mM KCl, 20 mM MgCl<sub>2</sub>, 4 mM Tris pH 7.6, 200 µg/mL BSA), and an equal mixture of L and R activated Tn5 (at an empirically determined concentration corresponding to optimal activity for each activated preparation of Tn5) in a final reaction volume of 50 µL. The reaction is assembled, mixed, and incubated for 10 min at 55 °C. After the transposition reaction, we immediately add 12.5 µL of stop buffer (100 mM MES pH 5, 4.125 M guanidine thiocyanate, 25% isopropanol, 10 mM EDTA). The resulting reactions from different combinations of L and R indices (i.e. up to 384 reactions) can be pooled at this stage. We proceed with purification by mixing 125 µL of the pooled samples with 375 µL of additional stop buffer and passing through a single silica mini-preparative column. The column is washed once with buffer containing 10% guanidine thiocyanate, 25% isopropanol, and 10 mM EDTA; then washed once with buffer containing 80% ethanol and 10 mM Tris pH 8; then dried and eluted with 10 mM Tris pH 8.5.</p><p>The resulting library can be amplified by PCR with indexed primers carrying the P5 and P7 adapter sequences: P5mod = 5’-AATGAT ACGGCG ACCACC GAGATC TACACY YYYYYG CCTCCC TCGAGC CA-3’, P7mod = 5’-CAAGCA GAAGAC GGCATA CGAGAT YYYYYY GCCTTG CCAGCC CG-3’. Here YYYYYY represents 6 bp multiplexing indexes, which are chosen to maximize Levenshtein distance between every pair. To 20 µL purified transposase reaction, we add 25 µL 2 x Kapa HIFI master mix (KAPA Biosystems) and 2.5 µL each of P5mod and P7mod primers at 10 µM. We use the following cycling protocol: (1) 72 °C for 3 min, (2) 98 °C for 5 min, (3) 98 °C for 10 s, (4) 63 °C for 10 s, (5) 72 °C for 30 s, (6) Repeat steps (3)–(5) an additional 13 times, (7) 72 °C for 30 s, (8) Hold at 10 °C.</p><p>We then perform a double-size selection with AMPure beads (Beckman Coulter) to select for fragments between 300 bp and 600 bp. Finally, we quantify DNA concentration with AccuClear Ultra High Sensitivity (Biotium) and pool libraries at equimolar concentration. For sequencing on Illumina machines with the paired-end workflow of the NextSeq 500, we use the following custom primers: Custom_read_1 = 5’-GCCTCC CTCGAG CCATGA AGTCGC AGCGT-3’, Custom_read_2 = 5’3’, Custom_read_3 = 5’-ACGCTG CGACTT CATGGC TCGAGG GAGGC-3’, Custom_read_4 = 5’-GCCTTG CCAGCC CGAGTG TTGGAC GGTAG-3’. On the NovaSeq 6000, the paired-end workflow does not use Custom_read_3.</p><p>To reduce sequencing costs, we sequence each individual only to low coverage and then impute the full genotypes (see Appendix 1). We can quantify the SNP coverage (average number of reads per SNP) and SNP coverage fraction (number of SNPs seen in at least one read) for each individual. From a single NovaSeq S4 sequencing flowcell and 4 NextSeq 500 High flowcells (total ∼11.5 billion reads), we obtained a median coverage of 0.57 X (median coverage fraction 0.26) and a mean coverage of 1.23 X (mean coverage fraction 0.34).</p></sec></sec><sec id="s4-3"><title>Combinatorial indexing and sequencing of barcodes</title><p>One consequence of low-coverage sequencing of our individuals is that the barcode locus is not guaranteed to be observed. Therefore, we need a separate method to associate the genotype of each individual with its barcode. The genotype information is already associated to the physical location of each segregant in the 384-well plates, via the Tn5-L and -R indices used during tagmentation and the P5mod and P7mod indices used during PCR. We can therefore match barcodes with segregants by associating the physical location of each segregant with its barcode. We achieve this with minimal additional sequencing cost using a multidimensional pooling approach (<xref ref-type="bibr" rid="bib44">Erlich et al., 2009</xref>).</p><sec id="s4-3-1"><title>Combinatorial pooling</title><p>The key idea of multidimensional pooling is to identify the location of many points using only a few measurements, by projecting the points onto several orthogonal axes and measuring them in bulk along each axis. In our case, we construct various orthogonal pools of all of the segregants (such that each segregant is present in a unique set of pools). We then perform bulk barcode sequencing on each pool, to identify all the barcodes present in that pool. Because we know which segregant is in which specific set of pools, from its physical location, we can then associate barcodes with segregants by looking for the unique barcode which is present in the set of pools corresponding to that segregant.</p><p>There are many equivalent choices of pooling strategies; our choice was mainly informed by the physical layout of our segregants and experimental convenience. For example, since all segregants are originally grown in 96-well plates, a natural choice is to pool all segregants in each row across all plates, producing eight row pools, and similarly to pool all segregants in each column across all plates, producing 12 column pools. In addition, we construct three other types of pools that are orthogonal and convenient to assemble within our large-scale experimental workflow: plate pools (4), set pools (12), and batch pools (23). These five pools provide sufficient information to uniquely triangulate the specific well of each barcode within our full collection of archived plates. This pooling strategy also means that we expect each barcode to be present in exactly one of each of the five sets of pools (e.g. one of the eight row pools, one of the twelve column pools, etc.), which is useful in correcting errors that arise during the bulk barcode sequencing.</p><p>Amplicon barcode sequencing is performed as described below for bulk phenotyping measurements. Each pool contains between 4608 and 26,496 barcodes, and we sequence the pools with on average 61 x coverage per barcode per pool.</p></sec><sec id="s4-3-2"><title>Barcode assignment to single wells</title><p>In theory, with enough orthogonal pools and exact measurements of each pool, the reconstruction of the full data is unambiguous: each barcode appears in exactly one of the row pools, giving its row location, and exactly one of the column pools, giving its column location, and so on. However, because sequencing readout is not exact, there are several types of errors that can occur. First, there can be sequencing errors in the barcode regions themselves, producing novel barcodes. Second, due to index-swapping and PCR chimera artifacts, a barcode may appear in multiple of one type of pool (e.g. some reads in multiple row pools), leaving its location partially undetermined (e.g. missing row information). Third, due to differences in coverage, a barcode may not appear in any of one type of pool (e.g. no reads in any row pool), again leaving its location partially undetermined. Fourth, due to PCR chimera artifacts, some reads are observed with a barcode pair that does not correspond to a real segregant; these typically appear as singletons in one instance of one type of pool. And finally, our observation for each pool is an integer number of read counts, which can contain more useful information than a simple binary presence/absence.</p><p>To address the first source of error, we must ‘correct’ barcodes with sequencing errors. This is possible because we expect sequencing errors to be rare (affecting at most a few bases in a barcode) and because the barcodes themselves, due to their length and random composition, are well-separated in sequence space. Clusters of similar barcodes separated by only one to three nucleotide substitutions thus typically represent a single true barcode. Here, we leverage the fact that barcodes are recombined from two parental sources (the BY and RM parent). Since there are relatively few single parental barcodes (∼23,000 BY barcodes and ∼ 12,000 RM barcodes) compared to double-barcode combinations, we can sequence the single parental barcodes to much higher depth. We sequenced the 23 BY and 12 RM parental libraries on an Illumina NextSeq with 383 X reads per barcode on average. We then perform error correction on these parental libraries, by identifying sequence clusters and correcting all reads within each to the consensus sequence, as described in <xref ref-type="bibr" rid="bib87">Nguyen Ba et al., 2019</xref>. This generates two ‘dictionaries’ containing all verified BY and RM barcodes, respectively. We then use these dictionaries to correct errors in the barcode sequencing reads from the compressed sensing pools, correcting BY (RM) barcodes according to the BY (RM) dictionary. Specifically, a 16 bp barcode within Levenshtein distance three or fewer from a verified dictionary barcode is corrected to the dictionary sequence, while those further than Levenshtein distance three are discarded.</p><p>Subsequently, to assign barcodes to unique wells, we use a combination of heuristic and algorithmic assignment procedures that incorporate our prior knowledge of the error processes mentioned above. First, we impose a cutoff threshold of 5 reads for each barcode in each pool, such that any instances of fewer than five reads are discarded. This removes a large portion of index-swapping and PCR chimera errors (and the accuracy of barcode assignment is robust to thresholds of 3–10 reads).</p><p>Next, we extract those barcodes with unambiguous assignments (i.e. barcodes that appear in exactly one of each of the ive types of pools). These barcodes can have any number of reads (above the threshold) in the pool where they appear, but must have no reads (i.e. fewer than the threshold) in all other pools of that type. The resulting five numbers (e.g. batch pool 7, set pool 9, plate pool 3, row pool 8, column pool 8) constitute what we term the ‘address’ of that barcode, and indicate its physical location in our archive plates. From the genotype sequencing indices (Tn5-L and -R, and P5mod and P7mod), we can extract the same five numbers for each genotype. We thus match the genotype with its barcode via its location in the archive collection. Within these ‘first pass’ assignments, only 190 wells are assigned two or more barcodes, representing 0.2% of all non-blank wells. These wells and barcodes are removed from further analysis. After these are removed, the first pass produces 46,403 unique barcode-address assignments, representing 45.9% of all non-blank wells in our full collection.</p><p>From inspection of the remaining unassigned barcodes, we find that most either appear in multiple pools of one type or do not appear in any pool of one type (i.e. the second and third problems mentioned above). However, given that they tend to have clear assignments for three or four of the five pool types, and that we already have many wells successfully matched, we might expect that in some cases the ambiguous pools could be identified by deduction (e.g. if one barcode has a known column but is missing row information, and the other seven of eight wells in that particular column have already been assigned, then this barcode must belong to the only unoccupied well). Once that well is assigned, perhaps other ambiguities in that row will be resolved, and so forth. This is an example of a linear assignment problem (LAP), for which fast algorithms have been developed (<xref ref-type="bibr" rid="bib65">Jonker and Volgenant, 1987</xref>). We can use such an algorithm to identify matches between our remaining unassigned wells and unassigned barcodes.</p><p>To implement a LAP solver, we need to define a suitable cost function for assigning a barcode to a well based on read count data. Our intuition is that larger read counts for a particular barcode in any pool should decrease the cost of an assignment to that pool, relative to others. Formally we calculate the likelihood of observing a certain pattern of counts across pools, and our cost function is given by the negative log-likelihood. Our cost function will produce an <inline-formula><mml:math id="inf27"><mml:mrow><mml:mi>n</mml:mi><mml:mo>×</mml:mo><mml:mi>w</mml:mi></mml:mrow></mml:math></inline-formula> matrix where <inline-formula><mml:math id="inf28"><mml:mi>n</mml:mi></mml:math></inline-formula> is the number of barcodes to be assigned and <inline-formula><mml:math id="inf29"><mml:mi>w</mml:mi></mml:math></inline-formula> is the number of wells to be assigned. Specifically, after the first pass and after removing blank wells, we have n=53,560 barcodes and w=54,483 wells.</p><p>For clarity we first consider a single type of pool, here row pools (of which there are 8). We consider a particular barcode belonging to segregant i. This segregant exists at some true frequency <inline-formula><mml:math id="inf30"><mml:msub><mml:mi>f</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>r</mml:mi></mml:mrow></mml:msub></mml:math></inline-formula> in each row pool <inline-formula><mml:math id="inf31"><mml:mrow><mml:mi>r</mml:mi><mml:mo>=</mml:mo><mml:mrow><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mi mathvariant="normal">…</mml:mi><mml:mo>,</mml:mo><mml:mn>8</mml:mn></mml:mrow></mml:mrow></mml:math></inline-formula>. One of these pools (that representing the true location) should have a substantial frequency, while the frequency in the other pools would represent index-swapping, cross-contamination, or other sources of error. Instead of these frequencies, what we observe are read counts <inline-formula><mml:math id="inf32"><mml:msub><mml:mi>m</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>r</mml:mi></mml:mrow></mml:msub></mml:math></inline-formula> for each of the eight pools.</p><p>Let us consider a particular pool <inline-formula><mml:math id="inf33"><mml:mi>r</mml:mi></mml:math></inline-formula>, where barcode i has true frequency <inline-formula><mml:math id="inf34"><mml:msub><mml:mi>f</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>r</mml:mi></mml:mrow></mml:msub></mml:math></inline-formula> and is observed with read counts <inline-formula><mml:math id="inf35"><mml:msub><mml:mi>m</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>r</mml:mi></mml:mrow></mml:msub></mml:math></inline-formula>. We will calculate the probability for the observed pattern of read counts under the assumption that this pool <inline-formula><mml:math id="inf36"><mml:mi>r</mml:mi></mml:math></inline-formula> is the true pool, and the other pools <inline-formula><mml:math id="inf37"><mml:mrow><mml:msup><mml:mi>r</mml:mi><mml:mo>′</mml:mo></mml:msup><mml:mo>≠</mml:mo><mml:mi>r</mml:mi></mml:mrow></mml:math></inline-formula> are ‘error’ pools (we will evaluate this probability for each pool in turn, and then normalize to obtain posterior probabilities, see below). We group the other pools together into one error pool where the barcode i exists at a true frequency <inline-formula><mml:math id="inf38"><mml:msub><mml:mover accent="true"><mml:mi>f</mml:mi><mml:mo stretchy="false">~</mml:mo></mml:mover><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>r</mml:mi></mml:mrow></mml:msub></mml:math></inline-formula> and is observed with read counts<disp-formula id="equ1"><label>(1)</label><mml:math id="m1"><mml:msub><mml:mover accent="true"><mml:mi>m</mml:mi><mml:mo stretchy="false">~</mml:mo></mml:mover><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>r</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:mrow><mml:mstyle displaystyle="true" scriptlevel="0"><mml:munder><mml:mo largeop="true" movablelimits="false" symmetric="true">∑</mml:mo><mml:mrow><mml:msup><mml:mi>r</mml:mi><mml:mo>′</mml:mo></mml:msup><mml:mo>≠</mml:mo><mml:mi>r</mml:mi></mml:mrow></mml:munder></mml:mstyle><mml:msub><mml:mi>m</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:msup><mml:mi>r</mml:mi><mml:mo>′</mml:mo></mml:msup></mml:mrow></mml:msub></mml:mrow><mml:mo>.</mml:mo></mml:mrow></mml:math></disp-formula></p><p>We also define the total read counts observed for the pool under consideration and the remaining pools, respectively, as<disp-formula id="equ2"><label>(2)</label><mml:math id="m2"><mml:mrow><mml:mstyle displaystyle="true" scriptlevel="0"><mml:msub><mml:mi>M</mml:mi><mml:mrow><mml:mi>r</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:munderover><mml:mo movablelimits="false">∑</mml:mo><mml:mrow><mml:mi>i</mml:mi></mml:mrow><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:munderover><mml:mrow><mml:msub><mml:mi>m</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>r</mml:mi></mml:mrow></mml:msub></mml:mrow><mml:mo>,</mml:mo></mml:mstyle></mml:mrow></mml:math></disp-formula><disp-formula id="equ3"><label>(3)</label><mml:math id="m3"><mml:mrow><mml:msub><mml:mrow><mml:mover><mml:mi>M</mml:mi><mml:mo stretchy="false">~</mml:mo></mml:mover></mml:mrow><mml:mrow><mml:mi>r</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:munderover><mml:mo>∑</mml:mo><mml:mrow><mml:mi>i</mml:mi></mml:mrow><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:munderover><mml:msub><mml:mrow><mml:mover><mml:mi>m</mml:mi><mml:mo stretchy="false">~</mml:mo></mml:mover></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>r</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo></mml:mrow></mml:math></disp-formula></p><p>where the sums are taken over all segregant barcodes <italic>i</italic>. Since we have observed two counts <inline-formula><mml:math id="inf39"><mml:msub><mml:mi>m</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>r</mml:mi></mml:mrow></mml:msub></mml:math></inline-formula> and <inline-formula><mml:math id="inf40"><mml:msub><mml:mover accent="true"><mml:mi>m</mml:mi><mml:mo stretchy="false">~</mml:mo></mml:mover><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>r</mml:mi></mml:mrow></mml:msub></mml:math></inline-formula> sampled from two underlying frequencies <inline-formula><mml:math id="inf41"><mml:msub><mml:mi>f</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>r</mml:mi></mml:mrow></mml:msub></mml:math></inline-formula> and <inline-formula><mml:math id="inf42"><mml:msub><mml:mover accent="true"><mml:mi>f</mml:mi><mml:mo stretchy="false">~</mml:mo></mml:mover><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>r</mml:mi></mml:mrow></mml:msub></mml:math></inline-formula>, we write the probability of observing the count data as a product of two binomials:<disp-formula id="equ4"><label>(4)</label><mml:math id="m4"><mml:mrow><mml:mrow><mml:mrow><mml:mi>P</mml:mi><mml:mo>⁢</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>m</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>r</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:mrow><mml:msub><mml:mover accent="true"><mml:mi>m</mml:mi><mml:mo stretchy="false">~</mml:mo></mml:mover><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>r</mml:mi></mml:mrow></mml:msub><mml:mo lspace="2.5pt" rspace="2.5pt" stretchy="false">|</mml:mo><mml:mrow><mml:msub><mml:mi>M</mml:mi><mml:mi>r</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mover accent="true"><mml:mi>M</mml:mi><mml:mo stretchy="false">~</mml:mo></mml:mover><mml:mi>r</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>f</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>r</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mover accent="true"><mml:mi>f</mml:mi><mml:mo stretchy="false">~</mml:mo></mml:mover><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>r</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow><mml:mo>=</mml:mo><mml:mrow><mml:mrow><mml:mo>[</mml:mo><mml:mrow><mml:msup><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>f</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>r</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:msub><mml:mi>m</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>r</mml:mi></mml:mrow></mml:msub></mml:msup><mml:mo>⁢</mml:mo><mml:msup><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mn>1</mml:mn><mml:mo>-</mml:mo><mml:msub><mml:mi>f</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>r</mml:mi></mml:mrow></mml:msub></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mrow><mml:msub><mml:mi>M</mml:mi><mml:mi>r</mml:mi></mml:msub><mml:mo>-</mml:mo><mml:msub><mml:mi>m</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>r</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msup></mml:mrow><mml:mo>]</mml:mo></mml:mrow><mml:mo>⁢</mml:mo><mml:mrow><mml:mo>[</mml:mo><mml:mrow><mml:msup><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mover accent="true"><mml:mi>f</mml:mi><mml:mo stretchy="false">~</mml:mo></mml:mover><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>r</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:msub><mml:mover accent="true"><mml:mi>m</mml:mi><mml:mo stretchy="false">~</mml:mo></mml:mover><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>r</mml:mi></mml:mrow></mml:msub></mml:msup><mml:mo>⁢</mml:mo><mml:msup><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mn>1</mml:mn><mml:mo>-</mml:mo><mml:msub><mml:mover accent="true"><mml:mi>f</mml:mi><mml:mo stretchy="false">~</mml:mo></mml:mover><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>r</mml:mi></mml:mrow></mml:msub></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mrow><mml:msub><mml:mover accent="true"><mml:mi>M</mml:mi><mml:mo stretchy="false">~</mml:mo></mml:mover><mml:mi>r</mml:mi></mml:msub><mml:mo>-</mml:mo><mml:msub><mml:mover accent="true"><mml:mi>m</mml:mi><mml:mo stretchy="false">~</mml:mo></mml:mover><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>r</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msup></mml:mrow><mml:mo>]</mml:mo></mml:mrow></mml:mrow></mml:mrow><mml:mo>.</mml:mo></mml:mrow></mml:math></disp-formula></p><p>Since we do not have access to the true frequencies <inline-formula><mml:math id="inf43"><mml:msub><mml:mi>f</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>r</mml:mi></mml:mrow></mml:msub></mml:math></inline-formula> and <inline-formula><mml:math id="inf44"><mml:msub><mml:mover accent="true"><mml:mi>f</mml:mi><mml:mo stretchy="false">~</mml:mo></mml:mover><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>r</mml:mi></mml:mrow></mml:msub></mml:math></inline-formula>, we replace them with their maximum likelihood estimates, that is, the observed frequencies in the read count data:<disp-formula id="equ5"><label>(5)</label><mml:math id="m5"><mml:msub><mml:mi>f</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>r</mml:mi></mml:mrow></mml:msub><mml:mo>→</mml:mo><mml:mrow><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mfrac><mml:msub><mml:mi>m</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>r</mml:mi></mml:mrow></mml:msub><mml:msub><mml:mi>M</mml:mi><mml:mi>r</mml:mi></mml:msub></mml:mfrac></mml:mstyle><mml:mo>,</mml:mo></mml:mrow></mml:math></disp-formula><disp-formula id="equ6"><label>(6)</label><mml:math id="m6"><mml:msub><mml:mover accent="true"><mml:mi>f</mml:mi><mml:mo stretchy="false">~</mml:mo></mml:mover><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>r</mml:mi></mml:mrow></mml:msub><mml:mo>→</mml:mo><mml:mrow><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mfrac><mml:msub><mml:mover accent="true"><mml:mi>m</mml:mi><mml:mo stretchy="false">~</mml:mo></mml:mover><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>r</mml:mi></mml:mrow></mml:msub><mml:msub><mml:mover accent="true"><mml:mi>M</mml:mi><mml:mo stretchy="false">~</mml:mo></mml:mover><mml:mi>r</mml:mi></mml:msub></mml:mfrac></mml:mstyle><mml:mo>.</mml:mo></mml:mrow></mml:math></disp-formula></p><p>Under the assumption that pool <inline-formula><mml:math id="inf45"><mml:mi>r</mml:mi></mml:math></inline-formula> is the correct pool, we expect <inline-formula><mml:math id="inf46"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msub><mml:mrow><mml:mover><mml:mi>f</mml:mi><mml:mo stretchy="false">~</mml:mo></mml:mover></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>r</mml:mi></mml:mrow></mml:msub><mml:mo>&lt;</mml:mo><mml:msub><mml:mi>f</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>r</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mstyle></mml:math></inline-formula>. To enforce this prior, we set<disp-formula id="equ7"><label>(7)</label><mml:math id="m7"><mml:msub><mml:mi>f</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>r</mml:mi></mml:mrow></mml:msub><mml:mo>→</mml:mo><mml:mrow><mml:mrow><mml:mtext>max</mml:mtext><mml:mo>⁢</mml:mo><mml:mrow><mml:mo>(</mml:mo><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mfrac><mml:msub><mml:mi>m</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>r</mml:mi></mml:mrow></mml:msub><mml:msub><mml:mi>M</mml:mi><mml:mi>r</mml:mi></mml:msub></mml:mfrac></mml:mstyle><mml:mo>,</mml:mo><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mfrac><mml:msub><mml:mover accent="true"><mml:mi>m</mml:mi><mml:mo stretchy="false">~</mml:mo></mml:mover><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>r</mml:mi></mml:mrow></mml:msub><mml:msub><mml:mover accent="true"><mml:mi>M</mml:mi><mml:mo stretchy="false">~</mml:mo></mml:mover><mml:mi>r</mml:mi></mml:msub></mml:mfrac></mml:mstyle><mml:mo>)</mml:mo></mml:mrow></mml:mrow><mml:mo>,</mml:mo></mml:mrow></mml:math></disp-formula><disp-formula id="equ8"><label>(8)</label><mml:math id="m8"><mml:msub><mml:mover accent="true"><mml:mi>f</mml:mi><mml:mo stretchy="false">~</mml:mo></mml:mover><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>r</mml:mi></mml:mrow></mml:msub><mml:mo>→</mml:mo><mml:mrow><mml:mrow><mml:mtext>min</mml:mtext><mml:mo>⁢</mml:mo><mml:mrow><mml:mo>(</mml:mo><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mfrac><mml:msub><mml:mi>m</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>r</mml:mi></mml:mrow></mml:msub><mml:msub><mml:mi>M</mml:mi><mml:mi>r</mml:mi></mml:msub></mml:mfrac></mml:mstyle><mml:mo>,</mml:mo><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mfrac><mml:msub><mml:mover accent="true"><mml:mi>m</mml:mi><mml:mo stretchy="false">~</mml:mo></mml:mover><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>r</mml:mi></mml:mrow></mml:msub><mml:msub><mml:mover accent="true"><mml:mi>M</mml:mi><mml:mo stretchy="false">~</mml:mo></mml:mover><mml:mi>r</mml:mi></mml:msub></mml:mfrac></mml:mstyle><mml:mo>)</mml:mo></mml:mrow></mml:mrow><mml:mo>.</mml:mo></mml:mrow></mml:math></disp-formula></p><p>This also breaks the symmetry inherent in <xref ref-type="disp-formula" rid="equ4">Equation 4</xref> when there are counts in only two pools (i.e. if there are only pools <inline-formula><mml:math id="inf47"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mi>r</mml:mi></mml:mrow></mml:mstyle></mml:math></inline-formula> and <inline-formula><mml:math id="inf48"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msup><mml:mi>r</mml:mi><mml:mo>′</mml:mo></mml:msup></mml:mrow></mml:mstyle></mml:math></inline-formula>, then <inline-formula><mml:math id="inf49"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msub><mml:mi>m</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:msup><mml:mi>r</mml:mi><mml:mo>′</mml:mo></mml:msup></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mrow><mml:mover><mml:mi>m</mml:mi><mml:mo stretchy="false">~</mml:mo></mml:mover></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:msup><mml:mi>r</mml:mi><mml:mo>′</mml:mo></mml:msup></mml:mrow></mml:msub></mml:mrow></mml:mstyle></mml:math></inline-formula>, and thus <inline-formula><mml:math id="inf50"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mrow><mml:mi mathvariant="script">P</mml:mi></mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>m</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>r</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mrow><mml:mover><mml:mi>m</mml:mi><mml:mo stretchy="false">~</mml:mo></mml:mover></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>r</mml:mi></mml:mrow></mml:msub><mml:mrow><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:msub><mml:mi>M</mml:mi><mml:mrow><mml:mi>r</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mrow><mml:mover><mml:mi>M</mml:mi><mml:mo stretchy="false">~</mml:mo></mml:mover></mml:mrow><mml:mrow><mml:mi>r</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>f</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>r</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mrow><mml:mover><mml:mi>f</mml:mi><mml:mo stretchy="false">~</mml:mo></mml:mover></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>r</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mrow><mml:mi mathvariant="script">P</mml:mi></mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>m</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:msup><mml:mi>r</mml:mi><mml:mo>′</mml:mo></mml:msup></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mrow><mml:mover><mml:mi>m</mml:mi><mml:mo stretchy="false">~</mml:mo></mml:mover></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:msup><mml:mi>r</mml:mi><mml:mo>′</mml:mo></mml:msup></mml:mrow></mml:msub><mml:mrow><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:msub><mml:mi>M</mml:mi><mml:mrow><mml:mi>r</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mrow><mml:mover><mml:mi>M</mml:mi><mml:mo stretchy="false">~</mml:mo></mml:mover></mml:mrow><mml:mrow><mml:msup><mml:mi>r</mml:mi><mml:mo>′</mml:mo></mml:msup></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>f</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:msup><mml:mi>r</mml:mi><mml:mo>′</mml:mo></mml:msup></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mrow><mml:mover><mml:mi>f</mml:mi><mml:mo stretchy="false">~</mml:mo></mml:mover></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:msup><mml:mi>r</mml:mi><mml:mo>′</mml:mo></mml:msup></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mstyle></mml:math></inline-formula>, such that the probabilities for <inline-formula><mml:math id="inf51"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mi>r</mml:mi></mml:mrow></mml:mstyle></mml:math></inline-formula> and <inline-formula><mml:math id="inf52"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msup><mml:mi>r</mml:mi><mml:mo>′</mml:mo></mml:msup></mml:mrow></mml:mstyle></mml:math></inline-formula> to be the true pool would be equal even when the counts are very different.)</p><p>We evaluate this probability (<xref ref-type="disp-formula" rid="equ4">Equation 4</xref> with replacements from <xref ref-type="disp-formula" rid="equ7">Equation 7</xref> and <xref ref-type="disp-formula" rid="equ8">Equation 8</xref>) for each pool <inline-formula><mml:math id="inf53"><mml:mi>r</mml:mi></mml:math></inline-formula> in turn. We then normalize to obtain the final posterior probabilities for the observed read counts:<disp-formula id="equ9"><label>(9)</label><mml:math id="m9"><mml:mrow><mml:mrow><mml:mi mathvariant="script">P</mml:mi></mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>r</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>≡</mml:mo><mml:mrow><mml:mi mathvariant="script">P</mml:mi></mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>m</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>r</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mrow><mml:mover><mml:mi>m</mml:mi><mml:mo stretchy="false">~</mml:mo></mml:mover></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>r</mml:mi></mml:mrow></mml:msub><mml:mrow><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:msub><mml:mi>M</mml:mi><mml:mrow><mml:mi>r</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mrow><mml:mover><mml:mi>M</mml:mi><mml:mo stretchy="false">~</mml:mo></mml:mover></mml:mrow><mml:mrow><mml:mi>r</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>f</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>r</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mrow><mml:mover><mml:mi>f</mml:mi><mml:mo stretchy="false">~</mml:mo></mml:mover></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>r</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mfrac><mml:mrow><mml:mi>P</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>m</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>r</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mrow><mml:mover><mml:mi>m</mml:mi><mml:mo stretchy="false">~</mml:mo></mml:mover></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>r</mml:mi></mml:mrow></mml:msub><mml:mrow><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:msub><mml:mi>M</mml:mi><mml:mrow><mml:mi>r</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mrow><mml:mover><mml:mi>M</mml:mi><mml:mo stretchy="false">~</mml:mo></mml:mover></mml:mrow><mml:mrow><mml:mi>r</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>f</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>r</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mrow><mml:mover><mml:mi>f</mml:mi><mml:mo stretchy="false">~</mml:mo></mml:mover></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>r</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mrow><mml:munderover><mml:mo>∑</mml:mo><mml:mrow><mml:mi>r</mml:mi></mml:mrow><mml:mrow><mml:mn>8</mml:mn></mml:mrow></mml:munderover><mml:mi>P</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>m</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>r</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mrow><mml:mover><mml:mi>m</mml:mi><mml:mo stretchy="false">~</mml:mo></mml:mover></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>r</mml:mi></mml:mrow></mml:msub><mml:mrow><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:msub><mml:mi>M</mml:mi><mml:mrow><mml:mi>r</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mrow><mml:mover><mml:mi>M</mml:mi><mml:mo stretchy="false">~</mml:mo></mml:mover></mml:mrow><mml:mrow><mml:mi>r</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>f</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>r</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mrow><mml:mover><mml:mi>f</mml:mi><mml:mo stretchy="false">~</mml:mo></mml:mover></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>r</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mfrac></mml:mstyle><mml:mo>.</mml:mo></mml:mrow></mml:math></disp-formula></p><p>Our cost function for assigning barcode <italic>i</italic> to any well in row <inline-formula><mml:math id="inf54"><mml:mi>r</mml:mi></mml:math></inline-formula> is then given by the negative log posterior probability:<disp-formula id="equ10"><label>(10)</label><mml:math id="m10"><mml:mrow><mml:mrow><mml:mi mathvariant="script">C</mml:mi></mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>r</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mo>−</mml:mo><mml:mi>log</mml:mi><mml:mo>⁡</mml:mo><mml:mrow><mml:mi mathvariant="script">P</mml:mi></mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>r</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>.</mml:mo></mml:mrow></mml:math></disp-formula></p><p>For the row in the cost matrix corresponding to segregant <italic>i</italic>, and for one out of every eight columns (i.e. all of the wells across all of the plates that correspond to row <inline-formula><mml:math id="inf55"><mml:mi>r</mml:mi></mml:math></inline-formula>), we add this cost. We then repeat for all of the other row pools, completing the row costs for this segregant.</p><p>Next we proceed in the same manner with the 12 column pools, 4 plate pools, 12 set pools, and 23 batch pools. For each type of pool, we scan through each pool, evaluating the probability for each pool, normalizing by the sum across pools, taking the negative log, and adding the resulting cost to all wells corresponding to that pool. Once this process is complete, we have finished calculating the costs for segregant i, that is, we have filled in one complete row of the cost matrix. Each entry in this row represents one assignment (i.e. one unique row/column/plate/set/batch combination <inline-formula><mml:math id="inf56"><mml:mrow><mml:mi>r</mml:mi><mml:mo>,</mml:mo><mml:mi>c</mml:mi><mml:mo>,</mml:mo><mml:mi>p</mml:mi><mml:mo>,</mml:mo><mml:mi>s</mml:mi><mml:mo>,</mml:mo><mml:mi>b</mml:mi></mml:mrow></mml:math></inline-formula> paired with segregant barcode i), and since we have summed the costs over all of the 5 types of pools, the final posterior probability for each assignment is given by<disp-formula id="equ11"><label>(11)</label><mml:math id="m11"><mml:mrow><mml:mrow><mml:mi mathvariant="script">P</mml:mi></mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>r</mml:mi><mml:mo>,</mml:mo><mml:mi>c</mml:mi><mml:mo>,</mml:mo><mml:mi>p</mml:mi><mml:mo>,</mml:mo><mml:mi>s</mml:mi><mml:mo>,</mml:mo><mml:mi>b</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mrow><mml:mi mathvariant="script">P</mml:mi></mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>r</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>⋅</mml:mo><mml:mrow><mml:mi mathvariant="script">P</mml:mi></mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>c</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>⋅</mml:mo><mml:mrow><mml:mi mathvariant="script">P</mml:mi></mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>p</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>⋅</mml:mo><mml:mrow><mml:mi mathvariant="script">P</mml:mi></mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>s</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>⋅</mml:mo><mml:mrow><mml:mi mathvariant="script">P</mml:mi></mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>b</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>.</mml:mo></mml:mrow></mml:math></disp-formula></p><p>Finally, we repeat this process for all segregants <inline-formula><mml:math id="inf57"><mml:mrow><mml:mi>i</mml:mi><mml:mo>=</mml:mo><mml:mrow><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mi mathvariant="normal">…</mml:mi><mml:mo>,</mml:mo><mml:mi>n</mml:mi></mml:mrow></mml:mrow></mml:math></inline-formula>. This produces our final cost matrix of dimension <inline-formula><mml:math id="inf58"><mml:mrow><mml:mi>n</mml:mi><mml:mo>=</mml:mo><mml:mrow><mml:mn>53</mml:mn><mml:mo>,</mml:mo><mml:mn>560</mml:mn></mml:mrow></mml:mrow></mml:math></inline-formula> barcodes by <inline-formula><mml:math id="inf59"><mml:mrow><mml:mi>w</mml:mi><mml:mo>=</mml:mo><mml:mrow><mml:mn>54</mml:mn><mml:mo>,</mml:mo><mml:mn>483</mml:mn></mml:mrow></mml:mrow></mml:math></inline-formula> wells.</p><p>With the cost matrix in hand, we use the Python package lapsolver (<xref ref-type="bibr" rid="bib59">Heindl, 2020</xref>) to find the optimal assignment. Since our cost matrix is rectangular (fewer barcodes than wells), we obtain an assignment for every barcode but some wells remain unassigned. These can be clearly interpreted as “quasi-blanks”: in our plate scans, we see a small number of wells that contain only tiny colonies after two days of growth, large enough to be distinguished by eye from true blanks but too small to be represented well in pool sequencing, genotyping, or bulk fitness assays.</p><p>Combining the first-pass assignments and LAP assignments, we obtain a list of 99,963 unique barcode-well pairs. These assignments allow us to link the genotyping information for each segregant, which is indexed by well location, to the phenotyping information for each segregant, which consists of barcode sequencing from bulk fitness assays (see Appendix 2). By comparing well addresses to our list of inferred genotypes, we find 99,950 matches, producing our final strain collection with confirmed genotype-barcode association.</p><p>Next we consider several validations of these assignments. If mis-assignments occur, such that genotype and phenotype data are mis-paired, we expect this to reduce signal and add noise to our QTL inference procedure. We do not expect systematic errors to arise from mis-assignment, as the distribution of genotypes across well locations is sufficiently random (because cells are sorted into plates from large well-mixed liquid cultures). Thus, we expect our QTL inference results to be robust to a small level of mis-assignment (i.e. a few percent of barcodes).</p><p>While we cannot have complete confidence in every assignment, especially those with sparse read data, we can validate that the large majority of assignments are indeed correct by making use of our knowledge of parental barcodes. Recall that each segregant contains two barcodes, the first from its BY parent (the ‘BY barcode’) and the second from its RM parent (the ‘RM barcode’), and that the matings were done from 23 × 12 separate pools with unique barcodes. Here the 23 BY parental libraries were used for the 23 batches, and the 12 RM parental libraries were used for 12 ‘sets’ of 4 96-well plates within each batch. We also deeply sequenced each parental library, so that we know which BY barcodes belong to each batch and which RM barcodes belong to each set. Thus, for each assignment, we can check whether the batch and set, obtained from the above procedure, agree with the parental libraries. For the first-pass barcodes (those with complete and unique addresses), we observe that 99.5% of the 46,403 assignments have correct matches for both batch and set. For the second-pass barcodes (those obtained through the LAP algorithm), the fraction with both batch and set correct is 97.7% of the 53,560 assignments. Although this method does not allow us to verify the other three types of pools (plate, row, and column), these high fractions of correct assignments indicate that both passes are extremely effective at extracting robust assignments from our noisy read count data.</p></sec></sec><sec id="s4-4"><title>High-throughput liquid handling of the F1 segregants</title><p>All of the procedures described in sections above (i.e. the segregant production, selection, and sorting, the combinatorial pooling, and the individual whole genome sequencing library preparation) must be performed at the scale of 100,000 segregants, corresponding to more than 1000 96-well plates. To accomplish this within time and cost constraints, we relied on extensive use of liquid-handling robots as well as a batch process workflow. Here we describe the operational protocol for large-scale processing.</p><p>Many of our processes require simple pipetting in 96-well format and/or pooling across rows and columns of 96-well plates. These operations lend themselves readily to automation by liquid-handling robots. We made extensive use of two Beckman Coulter Biomek FXp instruments, each with a 96-channel pipetting head and one with an additional Span-8 head.</p><p>We chose to break the full experiment into manageable ‘batches’ to reduce equipment costs (by reusing consumables and equipment for each batch) and improve consistency (by ensuring each step is performed near-simultaneously for all segregants in a batch). Due to our time and equipment constraints, we chose a batch size of 48 96-well plates, or 4608 segregants. Each batch requires 14 days to process, but multiple batches can be processed concurrently in a staggered fashion. We regularly maintained 2–6 batches in various stages, allowing us to complete 23 batches in about 6 months.</p><sec id="s4-4-1"><title>Production of barcoded F1 segregants</title><p>As described above, we produced multiple separate parental barcode libraries (23 for BY and 12 for RM). For each of the 23 batches, we mated one of the BY barcoded libraries to all 12 RM libraries separately, each mating representing a ‘set’ within that batch. We proceeded with mating, barcode recombination, barcode selection, sporulation, single-cell sorting and growth as described above, with the 12 sets kept separate throughout. From each of the 12 sets, we sorted 384 individual cells into four 96-well plates, resulting in the 48 96-well plates for that batch. From these plates, we use a portion of cells for the archive construction, combinatorial pool construction, and genotyping as described below. Note that because we sequenced each of the BY and RM parental libraries, we can identify in which batch and set each segregant was produced based on its first (BY) and second (RM) barcode, respectively.</p></sec><sec id="s4-4-2"><title>Archiving of the F1 segregants</title><p>Once the cells have grown, we create a frozen archive with segregants individually arrayed in 384-well format, to serve as an ultimate repository of the strain collection. For each batch, we use the Biomek to fill twelve 384-well ‘archive’ plates (Bio-Rad, Hard-Shell #HSP3801) with 10 µL of 15% glycerol. The 48 96-well plates of saturated cultures were shaken in a tabletop plate shaker (Heidolph Titramax 100) to ensure cell dispersion. The Biomek was then used to transfer and mix 20 µL of culture into each well of the archive plates (final concentration of 5% glycerol) in groups of 8 plates at a time. Archive plates were sealed with aluminum foil and stored at –80 °C.</p></sec><sec id="s4-4-3"><title>Cell lysis</title><p>After archiving, another portion of cells is transferred to 384-well ‘lysis’ plates for the lysis, extraction, and tagmentation reactions. We first use the Biomek to transfer 3 µL of glucanase mix to the twelve 384-well lysis plates. We use the Biomek to add and mix 5 µL of saturated culture into each well, again processing eight plates at a time. We seal the plates with PCR sealing film (VWR 89134–428) and then incubate at 37 °C in an air-incubator for 45 min, followed by heating in a thermocycler at 80 °C for 5 min. The cell lysates are stable at 4 °C or can be immediately processed.</p></sec><sec id="s4-4-4"><title>Tn5 transposition</title><p>According to our indexed tagmentation design, each well in a 384-well plate is uniquely indexed by the combination of L-indexed and R-indexed Tn5 preparations that it receives. We implement this reaction by first using the Biomek Span-8 to array the concentrated enzymes in four 96-well master mix plates; for each 384-well lysis plate in the batch, we then add enzyme mixture to the corresponding wells, perform the tagmentation reaction, and then pool the samples into one tube for later purification and PCR.</p><p>Starting from 16 L-indexed and 24 R-indexed Tn5 preparations, we aim to generate four 96-well plates where each well is indexed by a unique L/R pair. As the enzyme is very viscous, thorough mixing at this step is critical, and we take advantage of inert dyes to judge mixing. We dye the Tn5 preparations with xylene cyanol FF at 500 µg/mL, and the 2 x tagmentation buffer with orange G at 140 µg/mL, which when mixed will yield a green enzyme master mix. 82.5 µL of 2 x buffer is first aliquotted into six 96-well polypropylene PCR plates (VWR 89049–178; polystyrene is sensitive to dimethylformamide in the buffer). The L-indexed activated Tn5 preparations are then aliquotted row-wise in four of the plates (7.5 µL per well), while the R-indexes are aliquotted column-wise in the remaining two plates (7.5 µL per well). We then transfer from the R-index plates into the L-index plates in such a way as to form unique L/R combinations in each of the wells of the four 96-well plates. We perform thorough pipette mixing with the Biomek and visually check the master mix color to ensure consistency across all wells before use. These four plates contain sufficient master mix for one batch of reactions (12 384-well plates).</p><p>Activated Tn5 is stable on ice. We also found that loss of activity is negligible in the presence of buffer containing magnesium as long as the enzyme is not allowed to warm above 4 °C. To maintain enzyme temperature for the processing duration of a full batch (several hours at ambient temperature on the Biomek), we take advantage of Biomek-compatible prechilled Isofreeze thermal blocks (VWR 490004–218), swapped out as needed, as well as chilled buffer kept at –20 °C.</p><p>To form the final tagmentation reaction, we add 12 µL of master mix (10 µL of 2 x buffer, 1 µL of L-index enzyme, 1 µL of R-index enzyme) to the 8 µL of cell lysate in the 384-well plates. After thorough pipette mixing, the reaction is incubated for 10 min at 55 °C in an air incubator. We process three rounds of four 384-well plates to complete the batch.</p><p>Once completed, the reaction is quickly stopped by adding 2.5 µL of stop buffer to every well using the Biomek. We then use the Span-8 head to pool each 384-well plate into a single 1.5 mL microfuge tube, resulting in 12 tubes per batch. Column purification and PCR are performed as described above.</p></sec><sec id="s4-4-5"><title>Combinatorial pooling</title><p>For our combinatorial pooling barcode association, we chose to create the following pools: 12 column pools, each drawn from one of twelve columns from every 96-well plate in the experiment; eight row pools, each drawn from one of eight rows from every 96-well plate in the experiment; four plate pools, each drawn from one of the four 96-well plates in every set of the experiment; 12 set pools, each drawn from one of the twelve sets in every batch of the experiment; and 23 batch pools, each drawn from a whole batch of the experiment. This resulted in 59 total pools, each containing between 4608 and 26,496 barcodes, depending on the type of pool.</p><p>We constructed these pools by processing four 96-well plates at a time on the BioMek using the Span-8 head. Briefly, for each set, we first duplicate the original four plates of segregants (after cells for archiving and tagmentation have been removed) by aliquotting culture into four new 96-well plates. One group was pooled row-wise and the other pooled column-wise into tubes representing row and column pools respectively. For a batch, we process the 12 sets sequentially, adding to the same final tubes. These tubes can later be pooled by hand across batches before DNA extraction, PCR, and barcode sequencing.</p><p>For each batch, we also pooled each of the 48 96-well plates into their own single tube. These tubes are later pooled by hand across plates, sets, or batches as appropriate to produce the plate pools, set pools, and batch pools.</p></sec><sec id="s4-4-6"><title>Producing pools for bulk phenotyping assays</title><p>It is convenient for our bulk phenotyping assays to produce frozen stocks containing all of our segregants, as well as the reference parental strains BYref and RMref, in a single pool. As we process each batch, we use the Biomek to pool across all 48 96-well plates of segregants into a single tube, to which we manually add glycerol to a final concentration of 5% before storage at –80 °C. After we have processed all 23 batches, these 23 individual pools can be later thawed, diluted 1:2<sup>5</sup> in 5 mL YPD, and grown for 24 hr, after which they are combined at equal frequency into a master pool containing all 99,950 lineages. To this pool, we add our reference (parental) strains BYref and RMref at a frequency approximately 100 times larger than the average barcode frequency. We then add glycerol to 5% final concentration and store this master pool in aliquots at –80 °C. Each aliquot can then be thawed as needed to conduct bulk phenotyping assays.</p></sec><sec id="s4-4-7"><title>Material reuse by washing</title><p>In an effort to reduce material cost and waste, we wash and reuse both Biomek liquid handling tips and polypropylene 96-well plates. Polypropylene 96-well plates used to grow and pool yeast cells are thoroughly washed with water and sterilized by autoclave, after which they can be reused with no ill effects.</p><p>We developed Biomek-based tip washing protocols that successfully prevent cell and DNA cross-contamination between wells. Tips that contact living cells are sterilized by pipette-mixing several times with sterile water, followed by pipette-mixing several times in 100% ethanol. After air-drying in boxes overnight, tips are ready to be reused. However, this protocol is insufficient for potential DNA cross-contamination during the tagmentation reaction. Tips that contact DNA are first decontaminated by pipette-mixing several times in 20% bleach, followed by water and ethanol wash steps as above. We found this to be sufficient to remove any traces of DNA contamination.</p></sec></sec><sec id="s4-5"><title>Bulk phenotyping</title><p>A key challenge for QTL mapping at scale is performing large numbers of accurate phenotype measurements. In our case, we require millions of measurements (dozens of phenotypes for each of <inline-formula><mml:math id="inf60"><mml:mrow><mml:mi/><mml:mo>∼</mml:mo><mml:mrow><mml:mn>100</mml:mn><mml:mo>,</mml:mo><mml:mn>000</mml:mn></mml:mrow></mml:mrow></mml:math></inline-formula> segregants). Each measurement must be made with high precision to achieve accurate mapping of polygenic traits. We achieve this using barcode-based assays which we can perform in bulk and read out by sequencing. The key simplification is that, because we know the genotype corresponding to each barcode, sequencing the barcode locus compresses each segregant’s full genotype information into a single sequencing read. This high information density, combined with the flexibility of sequencing-based assays and the decreasing cost per base of next-generation sequencing, allow us to collect a wide variety of phenotype measurements for reasonable cost and time expenditures.</p><p>One type of trait that lends itself well to bulk sequencing-based assays is growth rate in different media conditions, which we refer to here as ‘fitness’. Previous QTL mapping work in yeast often measured growth rate by observing the growth of individual colonies on agar plates (<xref ref-type="bibr" rid="bib13">Bloom et al., 2013</xref>; <xref ref-type="bibr" rid="bib15">Bloom et al., 2019</xref>). Instead, we can combine all of our segregants into one well-mixed liquid culture, resulting in an all-to-all competition throughout multiple rounds of serial dilution passaging. Barcoded lineages will change in frequency in the population according to their relative fitness, which we read out by population barcode sequencing at multiple timepoints. Note that in our serial dilution assays, ‘fitness’ is determined from the frequency change over multiple passages (see Appendix 2), which is not exactly equal to the growth rate as measured in log phase. We typically maintain such bulk fitness assays for about 50 generations, which provides enough time for lineages of similar fitness to be distinguished, while not allowing for lineages to fix in the population or acquire additional mutations that would significantly impact the frequency trajectories. To avoid the introduction of noise from genetic drift, we maintain effective population sizes of <inline-formula><mml:math id="inf61"><mml:mrow><mml:mi/><mml:mo>∼</mml:mo><mml:msup><mml:mn>10</mml:mn><mml:mn>8</mml:mn></mml:msup></mml:mrow></mml:math></inline-formula>.</p><p>All of the phenotypes reported in this paper are ‘fitness’ phenotypes, obtained by bulk fitness assays as we describe here. However, we also note that bulk barcode-based phenotyping is not limited to fitness phenotypes. Any phenotype that can be translated by some assay into barcode frequency changes is amenable. This includes ‘shock’ phenotypes, where frequencies are measured before and after a sudden perturbation; plating-based phenotypes, like mating efficiency and transformation efficiency; and fluorescence phenotypes, obtained by flow cytometry sorting and sequencing, among others.</p><sec id="s4-5-1"><title>Growth experiments</title><p>The complete frozen pool of F1 segregants (containing reference parental strains) was grown in 5 mL YPD by inoculating approximately 10<sup>7</sup> total cells. We diluted these populations by 1:2<sup>7</sup> daily by passaging 781 µL into 100 mL fresh media in 500 mL baffled flasks. Whole population pellets, obtained from 1.5 mL of saturated culture, were stored daily at –20 °C for later sequencing. As previously described (<xref ref-type="bibr" rid="bib87">Nguyen Ba et al., 2019</xref>), this protocol results in about seven generations per day, with a daily bottleneck size of about 10<sup>8</sup> in most assay environments. We performed two replicates of each assay and sampled for 49 generations (seven timepoints). Only five timepoints (representing 7, 14, 28, 42, and 49 generations) were sequenced.</p></sec><sec id="s4-5-2"><title>Amplicon barcode sequencing</title><p>Genomic DNA from cell pellets was processed as in <xref ref-type="bibr" rid="bib87">Nguyen Ba et al., 2019</xref>. Briefly, DNA was obtained by zymolyase-mediated cell lysis (5 mg/mL Zymolyase 20T (Nacalai Tesque), 1 M sorbitol, 100 mM sodium phosphate pH 7.4, 10 mM EDTA, 0.5% 3-(N,N-Dimethylmyristylammonio)propanesulfonate (Sigma, T7763), 200 µg/mL RNAse A, and 20 mM DTT) and binding on silica mini-preparative columns with guanidine thiocyanate buffer (4 volumes of 100 mM MES pH 5, 4.125 M guanidine thiocyanate, 25% isopropanol, and 10 mM EDTA). After binding, the columns were washed with a first wash buffer (10% guanidine thiocyanate, 25% isopropanol, 10 mM EDTA) and then a second wash buffer (80% ethanol, 10 mM Tris pH 8), followed by elution into elution buffer (10 mM Tris pH 8.5). 1.5 mL of pelleted cells eluted into 100 µL routinely provided about 1–2 µg of total DNA.</p><p>PCR of the barcodes was performed using a two-stage procedure previously described to attach unique molecular identifiers (UMIs) to PCR fragments (see <xref ref-type="bibr" rid="bib87">Nguyen Ba et al., 2019</xref> for a detailed protocol). Primers used in the first-stage PCR contained a priming sequence, a multiplexing index, 8 random nucleotides as UMIs, and an overhang that matched the Tn5 transposome present in our indexed tagmentase. These two primers had the configurations P1 = GCCTCC CTCGAG CCATGA AGTCGC AGCGTN NNNNNN NYYYYY YYGCAA TTAACC CTCACT AAAGG, P2 = GCCTTG CCA-GCC CGAGTG TTGGAC GGTAGN NNNNNN NYYYYY YYGCTA GTTATT GCTCAG CGG. Here, N corresponds to degenerate bases used as UMIs, and Y corresponds to multiplexing indexes. These primers anneal within the artificial intron of the URA3 gene in our recombined landing pad, at the KanP1 and HygP1 sites respectively. After attachment of molecular identifiers to template molecules during one PCR cycle, the first stage amplicons were cleaned using Ampure beads according to <xref ref-type="bibr" rid="bib87">Nguyen Ba et al., 2019</xref>. The elution of this clean-up was used directly as template for the second stage PCR with primers that contained multiplexing indexes and adapters that anneal to the Illumina flowcells (P5mod and P7mod primers, as described above). After 31 further cycles, these final PCR products were then purified using Ampure beads, quantified, and pooled to equimolar concentration. The PCR products were sequenced with a NextSeq 500 high-output v.2 (Illumina) or a NovaSeq S2 (Illumina) by paired-end sequencing using custom primers compatible with the indexed tagmentases.</p><p>We first processed our raw sequencing reads to identify and extract the indexes and barcode sequences, discarding Lox sites and other extraneous regions. To do so, we developed custom Python scripts using the approximate regular expression library regex (<xref ref-type="bibr" rid="bib7">Barnett, 2010</xref>), which allowed us to handle complications in identifying the barcodes that arise from the irregular lengths of the indices and from sequencing errors. We used the following mismatch tolerances: 2 mismatches in the multiplexing index, 4 mismatches in the priming site, 1 mismatch in the barcode overhangs, 1 mismatch in the barcode spacers, and four mismatches in the Lox sites.</p><p>This initial processing results in a set of putative barcodes. However, these putative barcodes do not all correspond to true barcodes from the F1 segregants. Instead, a small fraction of reads contain chimeric barcodes as well as barcodes that differ from true barcodes due to sequencing error. Here we leverage our dictionary of verified barcodes obtained from the barcode association procedure. Because we have knowledge of all individual barcodes that can be present in the assay and we expect errors to be rare, we can make ‘corrections’ to reads with sequencing errors by direct lookup of the lowest Levenshtein distance to the dictionary of verified barcodes. Chimeric reads (with two barcodes that should never appear together) can be easily discarded.</p><p>Finally, we can calculate the counts of each error-corrected true barcode by removing duplicate reads, using the unique molecular identifiers from the first-stage PCRs. Frequencies calculated from these counts are used to infer fitnesses for all segregants, as explained in Appendix 2. After all filtering, and across all assays, our final mean (median) sequencing coverage was 185 (48) reads per barcode per timepoint per replicate.</p></sec></sec><sec id="s4-6"><title>Reconstruction of causal variants</title><p>To confirm the estimated fitness effects of candidate lead SNPs and their interactions from our model, we reconstructed potentially causal variants either as single or double-mutants onto the BY background. Briefly, we started from YAN564 (MATα, his3Δ1, ura3Δ0, leu2Δ0, lys2Δ0, RME1pr::ins-308A, ybr209w:: Gal10pr-Cre, can1::Ste2pr-SpHIS5-Ste3pr-LEU2, HO::SpCas9-B112-ER), which expresses Cas9 under an inducible promoter with 20 μM estradiol. Cells were induced with estradiol and co-transformed with a plasmid expressing a guide RNA targeting the SNP of interest under the SNR52 promoter and with a double-stranded linear fragment that simultaneously removes the guide targeting sequence and introduces the SNP of interest (allele from RM11-1a). In some cases, guide RNAs were not effective and reconstructions were performed using Delitto Perfetto. Resulting strains also harbor synonymous mutations on the vicinity of the reconstructed SNP as required for the mutagenesis procedure. Reconstructed SNPs were all confirmed by Sanger sequencing. To maximize the probability to observe an effect, we chose lead SNPs that had predicted effects in multiple environments and had small credible intervals, prioritizing non-synonymous variants, and reconstructed key known QTL. In total, we reconstructed the following QTL: HAP1(Ty1*), IRA2(A345T), VPS70(P199L), BUL2(L883F), PHO84(L259P) and MKT1(D30G). For practical reasons, we reconstructed only 13 out of the 15 possible pairwise combinations of these 6 QTL.</p><p>The reconstruction strains, as well as YAN564, were individually competed against the diploid fluorescent reference strain YAN563 (MATα/MATa his3Δ1/his3Δ1, ura3Δ0/ura3Δ0, leu2Δ0/leu2Δ0, lys2Δ0/lys2Δ0, RME1pr::ins-308A/RME1pr::ins-308A, ycr043cΔ0::HphMX4/ycr043cΔ0::NatMX, can1::RPL39pr-ymCherry-Ste2pr-SpHIS5-Ste3pr-LEU2/can1::RPL39pr-ymGFP-Ste2pr-SpHIS5-St e3pr-LEU2) in each of 11 environments: 23 C, 30 C, 37 C, SDS, Li, Cu, Gu, Mann, Raff, Eth, and Suloc. Competition assays were performed in duplicate in shaken microtiter plates with 128 µL of liquid culture, following a daily 1:2<sup>6</sup> dilution protocol for a total of 3 days (18 generations). The fraction of reference strain in the cultures was tracked daily by flow cytometry, and used to estimate the fitness of each strain relative to the reference strain. Finally, we subtracted the fitness of YAN564 from the fitness of the reconstruction strains and averaged over duplicates to arrive at the relative fitness of each strain relative to BY, which we use for all analyses below.</p><p>We compared the measured fitness of each reconstruction strain to the predictions from our additive-only and additive-plus-pairwise models, for both single and double-mutant strains (<xref ref-type="fig" rid="fig5s1">Figure 5—figure supplement 1</xref> top and middle row). We find general concordance between predicted and measured fitnesses, except for discrepancies in magnitude (as discussed in the main text). We also find that four out of the double-mutant strains largely depart from values predicted from the models, as well as from the sum of the measured fitnesses of the respective single mutants (<xref ref-type="fig" rid="fig5s1">Figure 5—figure supplement 1</xref> yellow-highlighted datapoints), suggesting either a much larger epistatic effect than estimated by our models, or unaccounted mutations from the transformation process such as ploidy changes or mitochondrial disruptions. In line with the second hypothesis, we found that three out of four of these mutants were non-respiring petites (MKT1/VPS70 being the one that respires), and therefore we removed all four incongruent strains from further analyses. We also excluded the outlier measurements from MKT1 mutants assayed in Gu; a measurement that has been independently confirmed in other experiments from our group (unpublished). Possible explanations for this and other discrepancies between predicted and measured effects are additional epistatic terms not detected by our QTL models (e.g. closely linked, or higher-order effects), systematic differences between the environments in bulk fitness assays and reconstruction competition assays, or differences between the panel and reconstruction strains.</p><p>To compare how well the additive-only and the additive-plus-pairwise model predictions match measured reconstruction fitness values, we used a permutation test (<italic>H</italic><sub>0</sub>: additive-only and additive-plus-epistasis terms fit measured effects equally well; <italic>H</italic><sub>1</sub>: additive-plus-epistasis terms fit measured effects better than additive-only). We calculated the ratio between the sum squared errors (SSE) between measured and predicted values of the two models, and computed a one-sided p-value from an empirical distribution obtained through 10,000 random permutations of the data. This test rejected <italic>H</italic><sub>0</sub> when pooling single and double mutant data (SSE ratio of 0.46, <inline-formula><mml:math id="inf62"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mi>p</mml:mi><mml:mo>&lt;</mml:mo><mml:msup><mml:mn>10</mml:mn><mml:mrow><mml:mo>−</mml:mo><mml:mn>4</mml:mn></mml:mrow></mml:msup></mml:mrow></mml:mstyle></mml:math></inline-formula>; <xref ref-type="fig" rid="fig5">Figure 5A</xref>, inset), as well as when keeping single and double-mutant data separate (<xref ref-type="fig" rid="fig5s2">Figure 5—figure supplement 2</xref>; single: SSE ratio of 0.40, <inline-formula><mml:math id="inf63"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mi>p</mml:mi><mml:mo>&lt;</mml:mo><mml:mn>0.01</mml:mn></mml:mrow></mml:mstyle></mml:math></inline-formula>; double: SSE ratio of 0.48, <inline-formula><mml:math id="inf64"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mi>p</mml:mi><mml:mo>&lt;</mml:mo><mml:msup><mml:mn>10</mml:mn><mml:mrow><mml:mo>−</mml:mo><mml:mn>4</mml:mn></mml:mrow></mml:msup></mml:mrow></mml:mstyle></mml:math></inline-formula>).</p></sec></sec></body><back><sec id="s5" sec-type="additional-information"><title>Additional information</title><fn-group content-type="competing-interest"><title>Competing interests</title><fn fn-type="COI-statement" id="conf1"><p>No competing interests declared</p></fn><fn fn-type="COI-statement" id="conf2"><p>No competing interests declared</p></fn></fn-group><fn-group content-type="author-contribution"><title>Author contributions</title><fn fn-type="con" id="con1"><p>Conceptualization, Formal analysis, Investigation, Methodology, Software, Visualization, Writing – original draft, Writing – review and editing</p></fn><fn fn-type="con" id="con2"><p>Conceptualization, Formal analysis, Investigation, Methodology, Software, Visualization, Writing – original draft, Writing – review and editing</p></fn><fn fn-type="con" id="con3"><p>Conceptualization, Formal analysis, Investigation, Methodology, Software, Visualization, Writing – original draft, Writing – review and editing</p></fn><fn fn-type="con" id="con4"><p>Investigation, Writing – review and editing</p></fn><fn fn-type="con" id="con5"><p>Investigation, Methodology, Software, Writing – review and editing</p></fn><fn fn-type="con" id="con6"><p>Methodology, Writing – review and editing</p></fn><fn fn-type="con" id="con7"><p>Conceptualization, Funding acquisition, Methodology, Supervision, Writing – original draft, Writing – review and editing</p></fn></fn-group></sec><sec id="s6" sec-type="supplementary-material"><title>Additional files</title><supplementary-material id="supp1"><label>Supplementary file 1.</label><caption><title>SNP list<monospace>.</monospace></title><p>Our final list of 41,594 SNPs. We provide the chromosome; the SNP index (note these are indexed from 1, while SNP indices in other files are indexed from 0); the chromosome position in basepairs; and the BY and RM alleles.</p></caption><media mime-subtype="xlsx" mimetype="application" xlink:href="elife-73983-supp1-v2.xlsx"/></supplementary-material><supplementary-material id="supp2"><label>Supplementary file 2.</label><caption><title>Inferred additive QTL.</title><p>For each trait, a list of all inferred additive QTL is ranked in order of decreasing effect size magnitude. For each QTL, we provide the effect size; SNP list index of the lead SNP, credible interval (CI) start, and CI end; chromosome; chromosome position (in basepairs) of the lead SNP, CI start, and CI end; and the list of genes with coding regions at least partially overlapping the CI (gene names are given when possible, otherwise ORF names are given).</p></caption><media mime-subtype="xlsx" mimetype="application" xlink:href="elife-73983-supp2-v2.xlsx"/></supplementary-material><supplementary-material id="supp3"><label>Supplementary file 3.</label><caption><title>Pleiotropic genes<monospace>.</monospace></title><p>A list of genes containing a lead SNP in two or more traits (‘pleiotropic genes’), ranked by the number of traits. For each gene, we give the number of traits in which a lead SNP was detected; the chromosome; the gene name; the number of consensus genes (genes which overlap the intersection of credible intervals from all traits); the names of consensus genes; the lead SNP index identified in each of the traits (blank entries for traits in which the gene was not detected); the lead SNP chromosome position in basepairs in each of the traits; and the effect size in each of the traits. Following the list of pleiotropic genes, we provide a list of remaining QTL detected in only one environment, with associated data in the same format.</p></caption><media mime-subtype="xlsx" mimetype="application" xlink:href="elife-73983-supp3-v2.xlsx"/></supplementary-material><supplementary-material id="supp4"><label>Supplementary file 4.</label><caption><title>Inferred epistatic QTL<monospace>.</monospace></title><p>For each trait, separate lists of the additive QTL and pairwise epistatic QTL inferred in additive-plus-pairwise models, ranked in order of decreasing effect size magnitude. For additive QTL, we provide the effect size; SNP list index of the lead SNP; chromosome; and gene in which the lead SNP is located (uppercase gene/ORF names indicate SNPs in coding regions, and lowercase gene/ORF names indicate that the SNP is intergenic but located closest to the gene given). For epistatic QTL, we provide the effect size; SNP list indices of both lead SNPs; chromosomes of both lead SNPs; chromosome positions in basepairs of both lead SNPs; and the gene name of both lead SNPs (formatted as for additive QTL). For both additive and epistatic QTL, we denote QTL located at selection markers (or immediately neighboring genes) in grey and place them at the bottom of the list; see Appendix 3.</p></caption><media mime-subtype="xlsx" mimetype="application" xlink:href="elife-73983-supp4-v2.xlsx"/></supplementary-material><supplementary-material id="supp5"><label>Supplementary file 5.</label><caption><title>Multiplicity of epistatic QTL across traits<monospace>.</monospace></title><p>A list of gene pairs that are observed in epistatic interactions across all traits, ranked by the number of traits in which they occur (‘edge multiplicity’). For each gene pair, we provide the gene names, corresponding to those in <xref ref-type="supplementary-material" rid="supp3">Supplementary file 3</xref>; edge multiplicity (number of traits in which this pair of genes had a detected interaction); node pair multiplicity (number of traits in which this pair of genes were both detected as additive QTL, whether or not an interaction was detected); and the list of traits in which an interaction was detected. QTL located at selection markers (or immediately neighboring genes) are denoted in grey and placed at the bottom of the list; see Appendix 3.</p></caption><media mime-subtype="xlsx" mimetype="application" xlink:href="elife-73983-supp5-v2.xlsx"/></supplementary-material><supplementary-material id="supp6"><label>Supplementary file 6.</label><caption><title>Variance partitioning<monospace>.</monospace></title><p>Variance partitioning, including error, additive genetic, epistatic genetic components, and neural-network on both raw and resampled phenotype data. See Appendix 4 for full definitions and discussion of all components.</p></caption><media mime-subtype="xlsx" mimetype="application" xlink:href="elife-73983-supp6-v2.xlsx"/></supplementary-material><supplementary-material id="transrepform"><label>Transparent reporting form</label><media mime-subtype="pdf" mimetype="application" xlink:href="elife-73983-transrepform1-v2.pdf"/></supplementary-material></sec><sec id="s7" sec-type="data-availability"><title>Data availability</title><p>Code used for this study is available at <ext-link ext-link-type="uri" xlink:href="https://github.com/arturrc/bbqtl_inference">https://github.com/arturrc/bbqtl_inference</ext-link>, (copy archived at <ext-link ext-link-type="uri" xlink:href="https://archive.softwareheritage.org/swh:1:dir:7c209e7b0838f9d2be7a8f1e0f417e69d78125a2;origin=https://github.com/arturrc/bbqtl_inference;visit=swh:1:snp:36908786f8576d15db711ec66db293338c6bc387;anchor=swh:1:rev:2b1c89d6a602a8001b3b18dd00e75a8c97950d9d">swh:1:rev:2b1c89d6a602a8001b3b18dd00e75a8c97950d9d</ext-link>). FASTQ files from high-throughput sequencing have been deposited in the NCBI BioProject database with accession number PRJNA767876. Inferred genotype and phenotype data is deposited in Dryad (<ext-link ext-link-type="uri" xlink:href="https://doi.org/10.5061/dryad.1rn8pk0vd">https://doi.org/10.5061/dryad.1rn8pk0vd</ext-link>).</p><p>The following datasets were generated:</p><p><element-citation id="dataset1" publication-type="data" specific-use="isSupplementedBy"><person-group person-group-type="author"><name><surname>Nguyen Ba</surname><given-names>AN</given-names></name><name><surname>Lawrence</surname><given-names>KR</given-names></name><name><surname>Rego-Costa</surname><given-names>A</given-names></name><name><surname>Gopalakrishnan</surname><given-names>S</given-names></name><name><surname>Temko</surname><given-names>D</given-names></name><name><surname>Michor</surname><given-names>F</given-names></name><name><surname>Desai</surname><given-names>MM</given-names></name></person-group><year iso-8601-date="2021">2021</year><data-title>Barcoded Bulk QTL mapping reveals highly polygenic and epistatic architecture of complex traits in yeast</data-title><source>Dryad Digital Repository</source><pub-id pub-id-type="doi">10.5061/dryad.1rn8pk0vd</pub-id></element-citation></p><p><element-citation id="dataset2" publication-type="data" specific-use="isSupplementedBy"><person-group person-group-type="author"><name><surname>Nguyen Ba</surname><given-names>AN</given-names></name><name><surname>Lawrence</surname><given-names>KR</given-names></name><name><surname>Rego-Costa</surname><given-names>A</given-names></name><name><surname>Gopalakrishnan</surname><given-names>S</given-names></name><name><surname>Temko</surname><given-names>D</given-names></name><name><surname>Michor</surname><given-names>F</given-names></name><name><surname>Desai</surname><given-names>MM</given-names></name></person-group><year iso-8601-date="2021">2021</year><data-title>Barcoded Bulk QTL mapping reveals highly polygenic and epistatic architecture of complex traits in yeast</data-title><source>NCBI BioProject</source><pub-id pub-id-type="accession" xlink:href="https://www.ncbi.nlm.nih.gov/bioproject/PRJNA767876">PRJNA767876</pub-id></element-citation></p></sec><ack id="ack"><title>Acknowledgements</title><p>We thank the Bauer Core facility at Harvard and the Broad Institute Genomic Services sequencing core for assistance with sequencing. We thank Alan Moses, Andrew Murray, Hunter Fraser, Dan Rice, and members of the Desai lab for comments on the manuscript. ANNB. acknowledges support from the National Science and Engineering Research Council of Canada (NSERC RGPIN-2021–02716 and DGECR-2021–00117). KRL acknowledges support from the Fannie &amp; John Hertz Foundation Graduate Fellowship Award, the National Science Foundation (NSF) Graduate Research Fellowship Program, and fellowship award #1764269 from the NSF-Simons Center for Mathematical and Statistical Analysis of Biology at Harvard. FM gratefully acknowledges support of the Dana-Farber Cancer Institute Physical Sciences-Oncology Center (NIH U54CA193461). MMD. acknowledges support from grant PHY-1914916 from the NSF and grant GM104239 from the National Institutes of Health (NIH). The computations in this paper were run on the Faculty of Arts and Sciences Research Computing (FASRC) Cannon cluster supported by the FAS Division of Science Research Computing Group at Harvard University.</p></ack><ref-list><title>References</title><ref id="bib1"><element-citation publication-type="web"><person-group person-group-type="author"><name><surname>Abadi</surname><given-names>M</given-names></name><name><surname>Agarwal</surname><given-names>A</given-names></name><name><surname>Barham</surname><given-names>P</given-names></name><name><surname>Brevdo</surname><given-names>E</given-names></name><name><surname>Chen</surname><given-names>Z</given-names></name><name><surname>Citro</surname><given-names>C</given-names></name><name><surname>Corrado</surname><given-names>GS</given-names></name><name><surname>Davis</surname><given-names>A</given-names></name><name><surname>Dean</surname><given-names>J</given-names></name><name><surname>Devin</surname><given-names>M</given-names></name><name><surname>Ghemawat</surname><given-names>S</given-names></name><name><surname>Goodfellow</surname><given-names>I</given-names></name><name><surname>Harp</surname><given-names>A</given-names></name><name><surname>Irving</surname><given-names>G</given-names></name><name><surname>Isard</surname><given-names>M</given-names></name><name><surname>Jia</surname><given-names>Y</given-names></name><name><surname>Jozefowicz</surname><given-names>R</given-names></name><name><surname>Kaiser</surname><given-names>L</given-names></name><name><surname>Kudlur</surname><given-names>M</given-names></name><name><surname>Levenberg</surname><given-names>J</given-names></name></person-group><year iso-8601-date="2015">2015</year><article-title>TensorFlow: Large-Scale Machine Learning on Heterogeneous Systems</article-title><ext-link ext-link-type="uri" xlink:href="https://www.tensorflow.org">https://www.tensorflow.org</ext-link><date-in-citation iso-8601-date="2021-09-20">September 20, 2021</date-in-citation></element-citation></ref><ref id="bib2"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Adey</surname><given-names>A</given-names></name><name><surname>Morrison</surname><given-names>HG</given-names></name><name><surname>Asan</surname><given-names>XX</given-names></name><name><surname>Kitzman</surname><given-names>JO</given-names></name><name><surname>Turner</surname><given-names>EH</given-names></name><name><surname>Stackhouse</surname><given-names>B</given-names></name><name><surname>MacKenzie</surname><given-names>AP</given-names></name><name><surname>Caruccio</surname><given-names>NC</given-names></name><name><surname>Zhang</surname><given-names>X</given-names></name><name><surname>Shendure</surname><given-names>J</given-names></name></person-group><year iso-8601-date="2010">2010</year><article-title>Rapid, low-input, low-bias construction of shotgun fragment libraries by high-density in vitro transposition</article-title><source>Genome Biology</source><volume>11</volume><elocation-id>R119</elocation-id><pub-id pub-id-type="doi">10.1186/gb-2010-11-12-r119</pub-id></element-citation></ref><ref id="bib3"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Albert</surname><given-names>H</given-names></name><name><surname>Dale</surname><given-names>EC</given-names></name><name><surname>Lee</surname><given-names>E</given-names></name><name><surname>Ow</surname><given-names>DW</given-names></name></person-group><year iso-8601-date="1995">1995</year><article-title>Site-specific integration of DNA into wild-type and mutant lox sites placed in the plant genome</article-title><source>The Plant Journal</source><volume>7</volume><fpage>649</fpage><lpage>659</lpage><pub-id pub-id-type="doi">10.1046/j.1365-313X.1995.7040649.x</pub-id></element-citation></ref><ref id="bib4"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Allen</surname><given-names>DM</given-names></name></person-group><year iso-8601-date="1974">1974</year><article-title>The Relationship Between Variable Selection and Data Agumentation and a Method for Prediction</article-title><source>Technometrics</source><volume>16</volume><fpage>125</fpage><lpage>127</lpage><pub-id pub-id-type="doi">10.1080/00401706.1974.10489157</pub-id><pub-id pub-id-type="pmid">4810869</pub-id></element-citation></ref><ref id="bib5"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Arends</surname><given-names>D</given-names></name><name><surname>Prins</surname><given-names>P</given-names></name><name><surname>Jansen</surname><given-names>RC</given-names></name><name><surname>Broman</surname><given-names>KW</given-names></name></person-group><year iso-8601-date="2010">2010</year><article-title>R/QTL: high-throughput multiple QTL mapping: Fig. 1</article-title><source>Bioinformatics</source><volume>26</volume><fpage>2990</fpage><lpage>2992</lpage><pub-id pub-id-type="doi">10.1093/bioinformatics/btq565</pub-id><pub-id pub-id-type="pmid">20966004</pub-id></element-citation></ref><ref id="bib6"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Baker Brachmann</surname><given-names>C</given-names></name><name><surname>Davies</surname><given-names>A</given-names></name><name><surname>Cost</surname><given-names>GJ</given-names></name><name><surname>Caputo</surname><given-names>E</given-names></name><name><surname>Li</surname><given-names>J</given-names></name><name><surname>Hieter</surname><given-names>P</given-names></name><name><surname>Boeke</surname><given-names>JD</given-names></name></person-group><year iso-8601-date="1998">1998</year><article-title>Designer deletion strains derived from <italic>Saccharomyces cerevisiae</italic> S288C: A useful set of strains and plasmids for PCR-mediated gene disruption and other applications</article-title><source>Yeast (Chichester, England)</source><volume>14</volume><fpage>115</fpage><lpage>132</lpage><pub-id pub-id-type="doi">10.1002/(SICI)1097-0061(19980130)14:2&lt;115::AID-YEA204&gt;3.0.CO;2-2</pub-id></element-citation></ref><ref id="bib7"><element-citation publication-type="software"><person-group person-group-type="author"><name><surname>Barnett</surname><given-names>M</given-names></name></person-group><year iso-8601-date="2010">2010</year><data-title>mrab-regex</data-title><source>Bitbucket</source><ext-link ext-link-type="uri" xlink:href="https://bitbucket.org/mrabarnett/mrab-regex/src/hg/">https://bitbucket.org/mrabarnett/mrab-regex/src/hg/</ext-link></element-citation></ref><ref id="bib8"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Baum</surname><given-names>LE</given-names></name><name><surname>Petrie</surname><given-names>T</given-names></name><name><surname>Soules</surname><given-names>G</given-names></name><name><surname>Weiss</surname><given-names>N</given-names></name></person-group><year iso-8601-date="1970">1970</year><article-title>A Maximization Technique Occurring in the Statistical Analysis of Probabilistic Functions of Markov Chains</article-title><source>The Annals of Mathematical Statistics</source><volume>41</volume><fpage>164</fpage><lpage>171</lpage><pub-id pub-id-type="doi">10.1214/aoms/1177697196</pub-id></element-citation></ref><ref id="bib9"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Baym</surname><given-names>M</given-names></name><name><surname>Kryazhimskiy</surname><given-names>S</given-names></name><name><surname>Lieberman</surname><given-names>TD</given-names></name><name><surname>Chung</surname><given-names>H</given-names></name><name><surname>Desai</surname><given-names>MM</given-names></name><name><surname>Kishony</surname><given-names>R</given-names></name></person-group><year iso-8601-date="2015">2015</year><article-title>Inexpensive multiplexed library preparation for megabase-sized genomes</article-title><source>PLOS ONE</source><volume>10</volume><elocation-id>e0128036</elocation-id><pub-id pub-id-type="doi">10.1371/journal.pone.0128036</pub-id><pub-id pub-id-type="pmid">26000737</pub-id></element-citation></ref><ref id="bib10"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Bellot</surname><given-names>P</given-names></name><name><surname>de Los Campos</surname><given-names>G</given-names></name><name><surname>Pérez-Enciso</surname><given-names>M</given-names></name></person-group><year iso-8601-date="2018">2018</year><article-title>Can Deep Learning Improve Genomic Prediction of Complex Human Traits?</article-title><source>Genetics</source><volume>210</volume><fpage>809</fpage><lpage>819</lpage><pub-id pub-id-type="doi">10.1534/genetics.118.301298</pub-id><pub-id pub-id-type="pmid">30171033</pub-id></element-citation></ref><ref id="bib11"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Bergelson</surname><given-names>J</given-names></name><name><surname>Roux</surname><given-names>F</given-names></name></person-group><year iso-8601-date="2010">2010</year><article-title>Towards identifying genes underlying ecologically relevant traits in <italic>Arabidopsis thaliana</italic></article-title><source>Nature Reviews Genetics</source><volume>11</volume><fpage>867</fpage><lpage>879</lpage><pub-id pub-id-type="doi">10.1038/nrg2896</pub-id><pub-id pub-id-type="pmid">21085205</pub-id></element-citation></ref><ref id="bib12"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Bilton</surname><given-names>TP</given-names></name><name><surname>Schofield</surname><given-names>MR</given-names></name><name><surname>Black</surname><given-names>MA</given-names></name><name><surname>Chagné</surname><given-names>D</given-names></name><name><surname>Wilcox</surname><given-names>PL</given-names></name><name><surname>Dodds</surname><given-names>KG</given-names></name></person-group><year iso-8601-date="2018">2018</year><article-title>Accounting for Errors in Low Coverage High-Throughput Sequencing Data When Constructing Genetic Maps Using Biparental Outcrossed Populations</article-title><source>Genetics</source><volume>209</volume><fpage>65</fpage><lpage>76</lpage><pub-id pub-id-type="doi">10.1534/genetics.117.300627</pub-id><pub-id pub-id-type="pmid">29487138</pub-id></element-citation></ref><ref id="bib13"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Bloom</surname><given-names>JS</given-names></name><name><surname>Ehrenreich</surname><given-names>IM</given-names></name><name><surname>Loo</surname><given-names>WT</given-names></name><name><surname>Lite</surname><given-names>TLV</given-names></name><name><surname>Kruglyak</surname><given-names>L</given-names></name></person-group><year iso-8601-date="2013">2013</year><article-title>Finding the sources of missing heritability in a yeast cross</article-title><source>Nature</source><volume>494</volume><fpage>234</fpage><lpage>237</lpage><pub-id pub-id-type="doi">10.1038/nature11867</pub-id><pub-id pub-id-type="pmid">23376951</pub-id></element-citation></ref><ref id="bib14"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Bloom</surname><given-names>JS</given-names></name><name><surname>Kotenko</surname><given-names>I</given-names></name><name><surname>Sadhu</surname><given-names>MJ</given-names></name><name><surname>Treusch</surname><given-names>S</given-names></name><name><surname>Albert</surname><given-names>FW</given-names></name><name><surname>Kruglyak</surname><given-names>L</given-names></name></person-group><year iso-8601-date="2015">2015</year><article-title>Genetic interactions contribute less than additive effects to quantitative trait variation in yeast</article-title><source>Nature Communications</source><volume>6</volume><elocation-id>8712</elocation-id><pub-id pub-id-type="doi">10.1038/ncomms9712</pub-id><pub-id pub-id-type="pmid">26537231</pub-id></element-citation></ref><ref id="bib15"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Bloom</surname><given-names>JS</given-names></name><name><surname>Boocock</surname><given-names>J</given-names></name><name><surname>Treusch</surname><given-names>S</given-names></name><name><surname>Sadhu</surname><given-names>MJ</given-names></name><name><surname>Day</surname><given-names>L</given-names></name><name><surname>Oates-Barker</surname><given-names>H</given-names></name><name><surname>Kruglyak</surname><given-names>L</given-names></name></person-group><year iso-8601-date="2019">2019</year><article-title>Rare variants contribute disproportionately to quantitative trait variation in yeast</article-title><source>eLife</source><volume>8</volume><elocation-id>e49212</elocation-id><pub-id pub-id-type="doi">10.7554/eLife.49212</pub-id><pub-id pub-id-type="pmid">31647408</pub-id></element-citation></ref><ref id="bib16"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Bolger</surname><given-names>AM</given-names></name><name><surname>Lohse</surname><given-names>M</given-names></name><name><surname>Usadel</surname><given-names>B</given-names></name></person-group><year iso-8601-date="2014">2014</year><article-title>Trimmomatic: a flexible trimmer for Illumina sequence data</article-title><source>Bioinformatics (Oxford, England)</source><volume>30</volume><fpage>2114</fpage><lpage>2120</lpage><pub-id pub-id-type="doi">10.1093/bioinformatics/btu170</pub-id><pub-id pub-id-type="pmid">24695404</pub-id></element-citation></ref><ref id="bib17"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Boyle</surname><given-names>EI</given-names></name><name><surname>Weng</surname><given-names>S</given-names></name><name><surname>Gollub</surname><given-names>J</given-names></name><name><surname>Jin</surname><given-names>H</given-names></name><name><surname>Botstein</surname><given-names>D</given-names></name><name><surname>Cherry</surname><given-names>JM</given-names></name><name><surname>Sherlock</surname><given-names>G</given-names></name></person-group><year iso-8601-date="2004">2004</year><article-title>GO::TermFinder--open source software for accessing Gene Ontology information and finding significantly enriched Gene Ontology terms associated with a list of genes</article-title><source>Bioinformatics (Oxford, England)</source><volume>20</volume><fpage>3710</fpage><lpage>3715</lpage><pub-id pub-id-type="doi">10.1093/bioinformatics/bth456</pub-id><pub-id pub-id-type="pmid">15297299</pub-id></element-citation></ref><ref id="bib18"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Boyle</surname><given-names>EA</given-names></name><name><surname>Li</surname><given-names>YI</given-names></name><name><surname>Pritchard</surname><given-names>JK</given-names></name></person-group><year iso-8601-date="2017">2017</year><article-title>An Expanded View of Complex Traits: From Polygenic to Omnigenic</article-title><source>Cell</source><volume>169</volume><fpage>1177</fpage><lpage>1186</lpage><pub-id pub-id-type="doi">10.1016/j.cell.2017.05.038</pub-id><pub-id pub-id-type="pmid">28622505</pub-id></element-citation></ref><ref id="bib19"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Brem</surname><given-names>RB</given-names></name><name><surname>Yvert</surname><given-names>G</given-names></name><name><surname>Clinton</surname><given-names>R</given-names></name><name><surname>Kruglyak</surname><given-names>L</given-names></name></person-group><year iso-8601-date="2002">2002</year><article-title>Genetic dissection of transcriptional regulation in budding yeast</article-title><source>Science (New York, N.Y.)</source><volume>296</volume><fpage>752</fpage><lpage>755</lpage><pub-id pub-id-type="doi">10.1126/science.1069516</pub-id><pub-id pub-id-type="pmid">11923494</pub-id></element-citation></ref><ref id="bib20"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Broman</surname><given-names>KW</given-names></name><name><surname>Wu</surname><given-names>H</given-names></name><name><surname>Sen</surname><given-names>S</given-names></name><name><surname>Churchill</surname><given-names>GA</given-names></name></person-group><year iso-8601-date="2003">2003</year><article-title>R/QTL: QTL mapping in experimental crosses</article-title><source>Bioinformatics (Oxford, England)</source><volume>19</volume><fpage>889</fpage><lpage>890</lpage><pub-id pub-id-type="doi">10.1093/bioinformatics/btg112</pub-id><pub-id pub-id-type="pmid">12724300</pub-id></element-citation></ref><ref id="bib21"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Burga</surname><given-names>A</given-names></name><name><surname>Ben-David</surname><given-names>E</given-names></name><name><surname>Lemus Vergara</surname><given-names>T</given-names></name><name><surname>Boocock</surname><given-names>J</given-names></name><name><surname>Kruglyak</surname><given-names>L</given-names></name></person-group><year iso-8601-date="2019">2019</year><article-title>Fast genetic mapping of complex traits in <italic>C. elegans</italic> using millions of individuals in bulk</article-title><source>Nature Communications</source><volume>10</volume><elocation-id>2680</elocation-id><pub-id pub-id-type="doi">10.1038/s41467-019-10636-9</pub-id><pub-id pub-id-type="pmid">31213597</pub-id></element-citation></ref><ref id="bib22"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Butland</surname><given-names>G</given-names></name><name><surname>Babu</surname><given-names>M</given-names></name><name><surname>Díaz-Mejía</surname><given-names>JJ</given-names></name><name><surname>Bohdana</surname><given-names>F</given-names></name><name><surname>Phanse</surname><given-names>S</given-names></name><name><surname>Gold</surname><given-names>B</given-names></name><name><surname>Yang</surname><given-names>W</given-names></name><name><surname>Li</surname><given-names>J</given-names></name><name><surname>Gagarinova</surname><given-names>AG</given-names></name><name><surname>Pogoutse</surname><given-names>O</given-names></name><name><surname>Mori</surname><given-names>H</given-names></name><name><surname>Wanner</surname><given-names>BL</given-names></name><name><surname>Lo</surname><given-names>H</given-names></name><name><surname>Wasniewski</surname><given-names>J</given-names></name><name><surname>Christopolous</surname><given-names>C</given-names></name><name><surname>Ali</surname><given-names>M</given-names></name><name><surname>Venn</surname><given-names>P</given-names></name><name><surname>Safavi-Naini</surname><given-names>A</given-names></name><name><surname>Sourour</surname><given-names>N</given-names></name><name><surname>Caron</surname><given-names>S</given-names></name><name><surname>Choi</surname><given-names>J-Y</given-names></name><name><surname>Laigle</surname><given-names>L</given-names></name><name><surname>Nazarians-Armavil</surname><given-names>A</given-names></name><name><surname>Deshpande</surname><given-names>A</given-names></name><name><surname>Joe</surname><given-names>S</given-names></name><name><surname>Datsenko</surname><given-names>KA</given-names></name><name><surname>Yamamoto</surname><given-names>N</given-names></name><name><surname>Andrews</surname><given-names>BJ</given-names></name><name><surname>Boone</surname><given-names>C</given-names></name><name><surname>Ding</surname><given-names>H</given-names></name><name><surname>Sheikh</surname><given-names>B</given-names></name><name><surname>Moreno-Hagelseib</surname><given-names>G</given-names></name><name><surname>Greenblatt</surname><given-names>JF</given-names></name><name><surname>Emili</surname><given-names>A</given-names></name></person-group><year iso-8601-date="2008">2008</year><article-title>eSGA: <italic>E. coli</italic> synthetic genetic array analysis</article-title><source>Nature Methods</source><volume>5</volume><fpage>789</fpage><lpage>795</lpage><pub-id pub-id-type="doi">10.1038/nmeth.1239</pub-id><pub-id pub-id-type="pmid">18677321</pub-id></element-citation></ref><ref id="bib23"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Bycroft</surname><given-names>C</given-names></name><name><surname>Freeman</surname><given-names>C</given-names></name><name><surname>Petkova</surname><given-names>D</given-names></name><name><surname>Band</surname><given-names>G</given-names></name><name><surname>Elliott</surname><given-names>LT</given-names></name><name><surname>Sharp</surname><given-names>K</given-names></name><name><surname>Motyer</surname><given-names>A</given-names></name><name><surname>Vukcevic</surname><given-names>D</given-names></name><name><surname>Delaneau</surname><given-names>O</given-names></name><name><surname>O’Connell</surname><given-names>J</given-names></name><name><surname>Cortes</surname><given-names>A</given-names></name><name><surname>Welsh</surname><given-names>S</given-names></name><name><surname>Young</surname><given-names>A</given-names></name><name><surname>Effingham</surname><given-names>M</given-names></name><name><surname>McVean</surname><given-names>G</given-names></name><name><surname>Leslie</surname><given-names>S</given-names></name><name><surname>Allen</surname><given-names>N</given-names></name><name><surname>Donnelly</surname><given-names>P</given-names></name><name><surname>Marchini</surname><given-names>J</given-names></name></person-group><year iso-8601-date="2018">2018</year><article-title>The UK Biobank resource with deep phenotyping and genomic data</article-title><source>Nature</source><volume>562</volume><fpage>203</fpage><lpage>209</lpage><pub-id pub-id-type="doi">10.1038/s41586-018-0579-z</pub-id><pub-id pub-id-type="pmid">30305743</pub-id></element-citation></ref><ref id="bib24"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Cawley</surname><given-names>GC</given-names></name><name><surname>Talbot</surname><given-names>NLC</given-names></name></person-group><year iso-8601-date="2010">2010</year><article-title>On Over-fitting in Model Selection and Subsequent Selection Bias in Performance Evaluation</article-title><source>The Journal of Machine Learning Research</source><volume>11</volume><fpage>2079</fpage><lpage>2107</lpage></element-citation></ref><ref id="bib25"><element-citation publication-type="web"><person-group person-group-type="author"><name><surname>Chollet</surname><given-names>F</given-names></name></person-group><year iso-8601-date="2015">2015</year><article-title>Keras</article-title><ext-link ext-link-type="uri" xlink:href="https://keras.io">https://keras.io</ext-link><date-in-citation iso-8601-date="2021-09-20">September 20, 2021</date-in-citation></element-citation></ref><ref id="bib26"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Consortium</surname><given-names>CC</given-names></name></person-group><year iso-8601-date="2012">2012</year><article-title>The genome architecture of the Collaborative Cross mouse genetic reference population</article-title><source>Genetics</source><volume>190</volume><fpage>389</fpage><lpage>401</lpage><pub-id pub-id-type="doi">10.1534/genetics.111.132639</pub-id><pub-id pub-id-type="pmid">22345608</pub-id></element-citation></ref><ref id="bib27"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Costanzo</surname><given-names>M</given-names></name><name><surname>Baryshnikova</surname><given-names>A</given-names></name><name><surname>Bellay</surname><given-names>J</given-names></name><name><surname>Kim</surname><given-names>Y</given-names></name><name><surname>Spear</surname><given-names>ED</given-names></name><name><surname>Sevier</surname><given-names>CS</given-names></name><name><surname>Ding</surname><given-names>H</given-names></name><name><surname>Koh</surname><given-names>JLY</given-names></name><name><surname>Toufighi</surname><given-names>K</given-names></name><name><surname>Mostafavi</surname><given-names>S</given-names></name><name><surname>Prinz</surname><given-names>J</given-names></name><name><surname>St Onge</surname><given-names>RP</given-names></name><name><surname>VanderSluis</surname><given-names>B</given-names></name><name><surname>Makhnevych</surname><given-names>T</given-names></name><name><surname>Vizeacoumar</surname><given-names>FJ</given-names></name><name><surname>Alizadeh</surname><given-names>S</given-names></name><name><surname>Bahr</surname><given-names>S</given-names></name><name><surname>Brost</surname><given-names>RL</given-names></name><name><surname>Chen</surname><given-names>Y</given-names></name><name><surname>Cokol</surname><given-names>M</given-names></name><name><surname>Deshpande</surname><given-names>R</given-names></name><name><surname>Li</surname><given-names>Z</given-names></name><name><surname>Lin</surname><given-names>Z-Y</given-names></name><name><surname>Liang</surname><given-names>W</given-names></name><name><surname>Marback</surname><given-names>M</given-names></name><name><surname>Paw</surname><given-names>J</given-names></name><name><surname>San Luis</surname><given-names>B-J</given-names></name><name><surname>Shuteriqi</surname><given-names>E</given-names></name><name><surname>Tong</surname><given-names>AHY</given-names></name><name><surname>van Dyk</surname><given-names>N</given-names></name><name><surname>Wallace</surname><given-names>IM</given-names></name><name><surname>Whitney</surname><given-names>JA</given-names></name><name><surname>Weirauch</surname><given-names>MT</given-names></name><name><surname>Zhong</surname><given-names>G</given-names></name><name><surname>Zhu</surname><given-names>H</given-names></name><name><surname>Houry</surname><given-names>WA</given-names></name><name><surname>Brudno</surname><given-names>M</given-names></name><name><surname>Ragibizadeh</surname><given-names>S</given-names></name><name><surname>Papp</surname><given-names>B</given-names></name><name><surname>Pál</surname><given-names>C</given-names></name><name><surname>Roth</surname><given-names>FP</given-names></name><name><surname>Giaever</surname><given-names>G</given-names></name><name><surname>Nislow</surname><given-names>C</given-names></name><name><surname>Troyanskaya</surname><given-names>OG</given-names></name><name><surname>Bussey</surname><given-names>H</given-names></name><name><surname>Bader</surname><given-names>GD</given-names></name><name><surname>Gingras</surname><given-names>A-C</given-names></name><name><surname>Morris</surname><given-names>QD</given-names></name><name><surname>Kim</surname><given-names>PM</given-names></name><name><surname>Kaiser</surname><given-names>CA</given-names></name><name><surname>Myers</surname><given-names>CL</given-names></name><name><surname>Andrews</surname><given-names>BJ</given-names></name><name><surname>Boone</surname><given-names>C</given-names></name></person-group><year iso-8601-date="2010">2010</year><article-title>The genetic landscape of a cell</article-title><source>Science (New York, N.Y.)</source><volume>327</volume><fpage>425</fpage><lpage>431</lpage><pub-id pub-id-type="doi">10.1126/science.1180823</pub-id><pub-id pub-id-type="pmid">20093466</pub-id></element-citation></ref><ref id="bib28"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Costanzo</surname><given-names>M</given-names></name><name><surname>VanderSluis</surname><given-names>B</given-names></name><name><surname>Koch</surname><given-names>EN</given-names></name><name><surname>Baryshnikova</surname><given-names>A</given-names></name><name><surname>Pons</surname><given-names>C</given-names></name><name><surname>Tan</surname><given-names>G</given-names></name><name><surname>Wang</surname><given-names>W</given-names></name><name><surname>Usaj</surname><given-names>M</given-names></name><name><surname>Hanchard</surname><given-names>J</given-names></name><name><surname>Lee</surname><given-names>SD</given-names></name><name><surname>Pelechano</surname><given-names>V</given-names></name><name><surname>Styles</surname><given-names>EB</given-names></name><name><surname>Billmann</surname><given-names>M</given-names></name><name><surname>van Leeuwen</surname><given-names>J</given-names></name><name><surname>van Dyk</surname><given-names>N</given-names></name><name><surname>Lin</surname><given-names>ZY</given-names></name><name><surname>Kuzmin</surname><given-names>E</given-names></name><name><surname>Nelson</surname><given-names>J</given-names></name><name><surname>Piotrowski</surname><given-names>JS</given-names></name><name><surname>Srikumar</surname><given-names>T</given-names></name><name><surname>Bahr</surname><given-names>S</given-names></name><name><surname>Chen</surname><given-names>Y</given-names></name><name><surname>Deshpande</surname><given-names>R</given-names></name><name><surname>Kurat</surname><given-names>CF</given-names></name><name><surname>Li</surname><given-names>SC</given-names></name><name><surname>Li</surname><given-names>Z</given-names></name><name><surname>Usaj</surname><given-names>MM</given-names></name><name><surname>Okada</surname><given-names>H</given-names></name><name><surname>Pascoe</surname><given-names>N</given-names></name><name><surname>San Luis</surname><given-names>BJ</given-names></name><name><surname>Sharifpoor</surname><given-names>S</given-names></name><name><surname>Shuteriqi</surname><given-names>E</given-names></name><name><surname>Simpkins</surname><given-names>SW</given-names></name><name><surname>Snider</surname><given-names>J</given-names></name><name><surname>Suresh</surname><given-names>HG</given-names></name><name><surname>Tan</surname><given-names>Y</given-names></name><name><surname>Zhu</surname><given-names>H</given-names></name><name><surname>Malod-Dognin</surname><given-names>N</given-names></name><name><surname>Janjic</surname><given-names>V</given-names></name><name><surname>Przulj</surname><given-names>N</given-names></name><name><surname>Troyanskaya</surname><given-names>OG</given-names></name><name><surname>Stagljar</surname><given-names>I</given-names></name><name><surname>Xia</surname><given-names>T</given-names></name><name><surname>Ohya</surname><given-names>Y</given-names></name><name><surname>Gingras</surname><given-names>AC</given-names></name><name><surname>Raught</surname><given-names>B</given-names></name><name><surname>Boutros</surname><given-names>M</given-names></name><name><surname>Steinmetz</surname><given-names>LM</given-names></name><name><surname>Moore</surname><given-names>CL</given-names></name><name><surname>Rosebrock</surname><given-names>AP</given-names></name><name><surname>Caudy</surname><given-names>AA</given-names></name><name><surname>Myers</surname><given-names>CL</given-names></name><name><surname>Andrews</surname><given-names>B</given-names></name><name><surname>Boone</surname><given-names>C</given-names></name></person-group><year iso-8601-date="2016">2016</year><article-title>A global genetic interaction network maps A wiring diagram of cellular function</article-title><source>Science (New York, N.Y.)</source><volume>353</volume><elocation-id>6306</elocation-id><pub-id pub-id-type="doi">10.1126/science.aaf1420</pub-id><pub-id pub-id-type="pmid">27708008</pub-id></element-citation></ref><ref id="bib29"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Cubillos</surname><given-names>FA</given-names></name><name><surname>Billi</surname><given-names>E</given-names></name><name><surname>Zörgö</surname><given-names>E</given-names></name><name><surname>Parts</surname><given-names>L</given-names></name><name><surname>Fargier</surname><given-names>P</given-names></name><name><surname>Omholt</surname><given-names>S</given-names></name><name><surname>Blomberg</surname><given-names>A</given-names></name><name><surname>Warringer</surname><given-names>J</given-names></name><name><surname>Louis</surname><given-names>EJ</given-names></name><name><surname>Liti</surname><given-names>G</given-names></name></person-group><year iso-8601-date="2011">2011</year><article-title>Assessing the complex architecture of polygenic traits in diverged yeast populations</article-title><source>Molecular Ecology</source><volume>20</volume><fpage>1401</fpage><lpage>1413</lpage><pub-id pub-id-type="doi">10.1111/j.1365-294X.2011.05005.x</pub-id><pub-id pub-id-type="pmid">21261765</pub-id></element-citation></ref><ref id="bib30"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Cubillos</surname><given-names>FA</given-names></name><name><surname>Parts</surname><given-names>L</given-names></name><name><surname>Salinas</surname><given-names>F</given-names></name><name><surname>Bergström</surname><given-names>A</given-names></name><name><surname>Scovacricchi</surname><given-names>E</given-names></name><name><surname>Zia</surname><given-names>A</given-names></name><name><surname>Illingworth</surname><given-names>CJR</given-names></name><name><surname>Mustonen</surname><given-names>V</given-names></name><name><surname>Ibstedt</surname><given-names>S</given-names></name><name><surname>Warringer</surname><given-names>J</given-names></name><name><surname>Louis</surname><given-names>EJ</given-names></name><name><surname>Durbin</surname><given-names>R</given-names></name><name><surname>Liti</surname><given-names>G</given-names></name></person-group><year iso-8601-date="2013">2013</year><article-title>High-resolution mapping of complex traits with a four-parent advanced intercross yeast population</article-title><source>Genetics</source><volume>195</volume><fpage>1141</fpage><lpage>1155</lpage><pub-id pub-id-type="doi">10.1534/genetics.113.155515</pub-id><pub-id pub-id-type="pmid">24037264</pub-id></element-citation></ref><ref id="bib31"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Curran</surname><given-names>KA</given-names></name><name><surname>Morse</surname><given-names>NJ</given-names></name><name><surname>Markham</surname><given-names>KA</given-names></name><name><surname>Wagman</surname><given-names>AM</given-names></name><name><surname>Gupta</surname><given-names>A</given-names></name><name><surname>Alper</surname><given-names>HS</given-names></name></person-group><year iso-8601-date="2015">2015</year><article-title>Short Synthetic Terminators for Improved Heterologous Gene Expression in Yeast</article-title><source>ACS Synthetic Biology</source><volume>4</volume><fpage>824</fpage><lpage>832</lpage><pub-id pub-id-type="doi">10.1021/sb5003357</pub-id><pub-id pub-id-type="pmid">25686303</pub-id></element-citation></ref><ref id="bib32"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Daniel</surname><given-names>JW</given-names></name><name><surname>Gragg</surname><given-names>WB</given-names></name><name><surname>Kaufman</surname><given-names>L</given-names></name><name><surname>Stewart</surname><given-names>GW</given-names></name></person-group><year iso-8601-date="1976">1976</year><article-title>Reorthogonalization and Stable Algorithms for Updating the Gram-Schmidt QR Factorization</article-title><source>Mathematics of Computation</source><volume>30</volume><elocation-id>772</elocation-id><pub-id pub-id-type="doi">10.2307/2005398</pub-id></element-citation></ref><ref id="bib33"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Dempster</surname><given-names>AP</given-names></name><name><surname>Laird</surname><given-names>NM</given-names></name><name><surname>Rubin</surname><given-names>DB</given-names></name></person-group><year iso-8601-date="1977">1977</year><article-title>Maximum Likelihood from Incomplete Data Via the EM Algorithm</article-title><source>Journal of the Royal Statistical Society</source><volume>39</volume><fpage>1</fpage><lpage>22</lpage><pub-id pub-id-type="doi">10.1111/j.2517-6161.1977.tb01600.x</pub-id></element-citation></ref><ref id="bib34"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Deutschbauer</surname><given-names>AM</given-names></name><name><surname>Davis</surname><given-names>RW</given-names></name></person-group><year iso-8601-date="2005">2005</year><article-title>Quantitative trait loci mapped to single-nucleotide resolution in yeast</article-title><source>Nature Genetics</source><volume>37</volume><fpage>1333</fpage><lpage>1340</lpage><pub-id pub-id-type="doi">10.1038/ng1674</pub-id><pub-id pub-id-type="pmid">16273108</pub-id></element-citation></ref><ref id="bib35"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Dixon</surname><given-names>SJ</given-names></name><name><surname>Fedyshyn</surname><given-names>Y</given-names></name><name><surname>Koh</surname><given-names>JLY</given-names></name><name><surname>Prasad</surname><given-names>TSK</given-names></name><name><surname>Chahwan</surname><given-names>C</given-names></name><name><surname>Chua</surname><given-names>G</given-names></name><name><surname>Toufighi</surname><given-names>K</given-names></name><name><surname>Baryshnikova</surname><given-names>A</given-names></name><name><surname>Hayles</surname><given-names>J</given-names></name><name><surname>Hoe</surname><given-names>KL</given-names></name><name><surname>Kim</surname><given-names>DU</given-names></name><name><surname>Park</surname><given-names>HO</given-names></name><name><surname>Myers</surname><given-names>CL</given-names></name><name><surname>Pandey</surname><given-names>A</given-names></name><name><surname>Durocher</surname><given-names>D</given-names></name><name><surname>Andrews</surname><given-names>BJ</given-names></name><name><surname>Boone</surname><given-names>C</given-names></name></person-group><year iso-8601-date="2008">2008</year><article-title>Significant conservation of synthetic lethal genetic interaction networks between distantly related eukaryotes</article-title><source>PNAS</source><volume>105</volume><fpage>16653</fpage><lpage>16658</lpage><pub-id pub-id-type="doi">10.1073/pnas.0806261105</pub-id><pub-id pub-id-type="pmid">18931302</pub-id></element-citation></ref><ref id="bib36"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Duitama</surname><given-names>J</given-names></name><name><surname>Sánchez-Rodríguez</surname><given-names>A</given-names></name><name><surname>Goovaerts</surname><given-names>A</given-names></name><name><surname>Pulido-Tamayo</surname><given-names>S</given-names></name><name><surname>Hubmann</surname><given-names>G</given-names></name><name><surname>Foulquié-Moreno</surname><given-names>MR</given-names></name><name><surname>Thevelein</surname><given-names>JM</given-names></name><name><surname>Verstrepen</surname><given-names>KJ</given-names></name><name><surname>Marchal</surname><given-names>K</given-names></name></person-group><year iso-8601-date="2014">2014</year><article-title>Improved linkage analysis of Quantitative Trait Loci using bulk segregants unveils a novel determinant of high ethanol tolerance in yeast</article-title><source>BMC Genomics</source><volume>15</volume><elocation-id>207</elocation-id><pub-id pub-id-type="doi">10.1186/1471-2164-15-207</pub-id><pub-id pub-id-type="pmid">24640961</pub-id></element-citation></ref><ref id="bib37"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Dyson</surname><given-names>HJ</given-names></name><name><surname>Wright</surname><given-names>PE</given-names></name></person-group><year iso-8601-date="2005">2005</year><article-title>Intrinsically unstructured proteins and their functions</article-title><source>Nature Reviews. Molecular Cell Biology</source><volume>6</volume><fpage>197</fpage><lpage>208</lpage><pub-id pub-id-type="doi">10.1038/nrm1589</pub-id><pub-id pub-id-type="pmid">15738986</pub-id></element-citation></ref><ref id="bib38"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Efron</surname><given-names>B</given-names></name><name><surname>Hastie</surname><given-names>T</given-names></name><name><surname>Johnstone</surname><given-names>I</given-names></name><name><surname>Tibshirani</surname><given-names>R</given-names></name></person-group><year iso-8601-date="2004">2004</year><article-title>Least angle regression</article-title><source>The Annals of Statistics</source><volume>32</volume><fpage>407</fpage><lpage>499</lpage><pub-id pub-id-type="doi">10.1214/009053604000000067</pub-id></element-citation></ref><ref id="bib39"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Ehrenreich</surname><given-names>IM</given-names></name><name><surname>Torabi</surname><given-names>N</given-names></name><name><surname>Jia</surname><given-names>Y</given-names></name><name><surname>Kent</surname><given-names>J</given-names></name><name><surname>Martis</surname><given-names>S</given-names></name><name><surname>Shapiro</surname><given-names>JA</given-names></name><name><surname>Gresham</surname><given-names>D</given-names></name><name><surname>Caudy</surname><given-names>AA</given-names></name><name><surname>Kruglyak</surname><given-names>L</given-names></name></person-group><year iso-8601-date="2010">2010</year><article-title>Dissection of genetically complex traits with extremely large pools of yeast segregants</article-title><source>Nature</source><volume>464</volume><fpage>1039</fpage><lpage>1042</lpage><pub-id pub-id-type="doi">10.1038/nature08923</pub-id><pub-id pub-id-type="pmid">20393561</pub-id></element-citation></ref><ref id="bib40"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Eichler</surname><given-names>EE</given-names></name><name><surname>Flint</surname><given-names>J</given-names></name><name><surname>Gibson</surname><given-names>G</given-names></name><name><surname>Kong</surname><given-names>A</given-names></name><name><surname>Leal</surname><given-names>SM</given-names></name><name><surname>Moore</surname><given-names>JH</given-names></name><name><surname>Nadeau</surname><given-names>JH</given-names></name></person-group><year iso-8601-date="2010">2010</year><article-title>Missing heritability and strategies for finding the underlying causes of complex disease</article-title><source>Nature Reviews. Genetics</source><volume>11</volume><fpage>446</fpage><lpage>450</lpage><pub-id pub-id-type="doi">10.1038/nrg2809</pub-id><pub-id pub-id-type="pmid">20479774</pub-id></element-citation></ref><ref id="bib41"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Engel</surname><given-names>SR</given-names></name><name><surname>Dietrich</surname><given-names>FS</given-names></name><name><surname>Fisk</surname><given-names>DG</given-names></name><name><surname>Binkley</surname><given-names>G</given-names></name><name><surname>Balakrishnan</surname><given-names>R</given-names></name><name><surname>Costanzo</surname><given-names>MC</given-names></name><name><surname>Dwight</surname><given-names>SS</given-names></name><name><surname>Hitz</surname><given-names>BC</given-names></name><name><surname>Karra</surname><given-names>K</given-names></name><name><surname>Nash</surname><given-names>RS</given-names></name><name><surname>Weng</surname><given-names>S</given-names></name><name><surname>Wong</surname><given-names>ED</given-names></name><name><surname>Lloyd</surname><given-names>P</given-names></name><name><surname>Skrzypek</surname><given-names>MS</given-names></name><name><surname>Miyasato</surname><given-names>SR</given-names></name><name><surname>Simison</surname><given-names>M</given-names></name><name><surname>Cherry</surname><given-names>JM</given-names></name></person-group><year iso-8601-date="2014">2014</year><article-title>The reference genome sequence of <italic>Saccharomyces cerevisiae</italic>: then and now</article-title><source>G3: Genes, Genomes, Genetics</source><volume>4</volume><fpage>389</fpage><lpage>398</lpage><pub-id pub-id-type="doi">10.1534/g3.113.008995</pub-id><pub-id pub-id-type="pmid">24374639</pub-id></element-citation></ref><ref id="bib42"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Engler</surname><given-names>C</given-names></name></person-group><year iso-8601-date="2009">2009</year><article-title>Golden gate shuffling: a one-pot DNA shuffling method based on type IIs restriction enzymes</article-title><source>PLOS ONE</source><volume>4</volume><elocation-id>e5553</elocation-id><pub-id pub-id-type="doi">10.1371/journal.pone.0005553</pub-id></element-citation></ref><ref id="bib43"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Erdos</surname><given-names>P</given-names></name><name><surname>Renyi</surname><given-names>A</given-names></name></person-group><year iso-8601-date="1959">1959</year><article-title>On Random Graphs I</article-title><source>Publicationes Mathematicae</source><volume>6</volume><fpage>290</fpage><lpage>297</lpage></element-citation></ref><ref id="bib44"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Erlich</surname><given-names>Y</given-names></name><name><surname>Chang</surname><given-names>K</given-names></name><name><surname>Gordon</surname><given-names>A</given-names></name><name><surname>Ronen</surname><given-names>R</given-names></name><name><surname>Navon</surname><given-names>O</given-names></name><name><surname>Rooks</surname><given-names>M</given-names></name><name><surname>Hannon</surname><given-names>GJ</given-names></name></person-group><year iso-8601-date="2009">2009</year><article-title>DNA Sudoku--harnessing high-throughput sequencing for multiplexed specimen analysis</article-title><source>Genome Research</source><volume>19</volume><fpage>1243</fpage><lpage>1253</lpage><pub-id pub-id-type="doi">10.1101/gr.092957.109</pub-id><pub-id pub-id-type="pmid">19447965</pub-id></element-citation></ref><ref id="bib45"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Fay</surname><given-names>JC</given-names></name></person-group><year iso-8601-date="2013">2013</year><article-title>The molecular basis of phenotypic variation in yeast</article-title><source>Current Opinion in Genetics &amp; Development</source><volume>23</volume><fpage>672</fpage><lpage>677</lpage><pub-id pub-id-type="doi">10.1016/j.gde.2013.10.005</pub-id><pub-id pub-id-type="pmid">24269094</pub-id></element-citation></ref><ref id="bib46"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Forsberg</surname><given-names>SKG</given-names></name><name><surname>Bloom</surname><given-names>JS</given-names></name><name><surname>Sadhu</surname><given-names>MJ</given-names></name><name><surname>Kruglyak</surname><given-names>L</given-names></name><name><surname>Carlborg</surname><given-names>Ö</given-names></name></person-group><year iso-8601-date="2017">2017</year><article-title>Accounting for genetic interactions improves modeling of individual quantitative trait phenotypes in yeast</article-title><source>Nature Genetics</source><volume>49</volume><fpage>497</fpage><lpage>503</lpage><pub-id pub-id-type="doi">10.1038/ng.3800</pub-id><pub-id pub-id-type="pmid">28250458</pub-id></element-citation></ref><ref id="bib47"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Fournier</surname><given-names>T</given-names></name><name><surname>Abou Saada</surname><given-names>O</given-names></name><name><surname>Hou</surname><given-names>J</given-names></name><name><surname>Peter</surname><given-names>J</given-names></name><name><surname>Caudal</surname><given-names>E</given-names></name><name><surname>Schacherer</surname><given-names>J</given-names></name></person-group><year iso-8601-date="2019">2019</year><article-title>Extensive impact of low-frequency variants on the phenotypic landscape at population-scale</article-title><source>eLife</source><volume>8</volume><elocation-id>e49258</elocation-id><pub-id pub-id-type="doi">10.7554/eLife.49258</pub-id><pub-id pub-id-type="pmid">31647416</pub-id></element-citation></ref><ref id="bib48"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Fraser</surname><given-names>HB</given-names></name></person-group><year iso-8601-date="2020">2020</year><article-title>Detecting selection with a genetic cross</article-title><source>PNAS</source><volume>117</volume><fpage>22323</fpage><lpage>22330</lpage><pub-id pub-id-type="doi">10.1073/pnas.2014277117</pub-id><pub-id pub-id-type="pmid">32848059</pub-id></element-citation></ref><ref id="bib49"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Friedman</surname><given-names>JH</given-names></name><name><surname>Hastie</surname><given-names>T</given-names></name><name><surname>Tibshirani</surname><given-names>R</given-names></name></person-group><year iso-8601-date="2010">2010</year><article-title>Regularization Paths for Generalized Linear Models via Coordinate Descent</article-title><source>Journal of Statistical Software</source><volume>33</volume><fpage>1</fpage><lpage>22</lpage><pub-id pub-id-type="doi">10.18637/jss.v033.i01</pub-id></element-citation></ref><ref id="bib50"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Goldstein</surname><given-names>AL</given-names></name><name><surname>McCusker</surname><given-names>JH</given-names></name></person-group><year iso-8601-date="1999">1999</year><article-title>Three new dominant drug resistance cassettes for gene disruption in <italic>Saccharomyces cerevisiae</italic></article-title><source>Yeast (Chichester, England)</source><volume>15</volume><fpage>1541</fpage><lpage>1553</lpage><pub-id pub-id-type="doi">10.1002/(SICI)1097-0061(199910)15:14&lt;1541::AID-YEA476&gt;3.0.CO;2-K</pub-id><pub-id pub-id-type="pmid">10514571</pub-id></element-citation></ref><ref id="bib51"><element-citation publication-type="confproc"><person-group person-group-type="author"><name><surname>Hagberg</surname><given-names>AA</given-names></name><name><surname>Schult</surname><given-names>DA</given-names></name><name><surname>Swart</surname><given-names>PJ</given-names></name><name><surname>Varoquaux</surname><given-names>G</given-names></name><name><surname>Vaught</surname><given-names>T</given-names></name><name><surname>Millman</surname><given-names>J</given-names></name></person-group><article-title>Exploring Network Structure, Dynamics, and Function using NetworkX</article-title><conf-name>Proceedings of the 7th Python in Science Conference</conf-name><year iso-8601-date="2008">2008</year><fpage>11</fpage><lpage>15</lpage><ext-link ext-link-type="uri" xlink:href="http://conference.scipy.org/proceedings/SciPy2008/paper_2">http://conference.scipy.org/proceedings/SciPy2008/paper_2</ext-link></element-citation></ref><ref id="bib52"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Hager</surname><given-names>W</given-names></name><name><surname>Zhang</surname><given-names>H</given-names></name></person-group><year iso-8601-date="2006">2006</year><article-title>A survey of nonlinear conjugate gradient methods</article-title><source>Pacific Journal of Optimization</source><volume>1</volume><elocation-id>2</elocation-id></element-citation></ref><ref id="bib53"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Hager</surname><given-names>WW</given-names></name><name><surname>Zhang</surname><given-names>H</given-names></name></person-group><year iso-8601-date="2013">2013</year><article-title>The Limited Memory Conjugate Gradient Method</article-title><source>SIAM Journal on Optimization</source><volume>23</volume><fpage>2150</fpage><lpage>2168</lpage><pub-id pub-id-type="doi">10.1137/120898097</pub-id></element-citation></ref><ref id="bib54"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Haley</surname><given-names>CS</given-names></name><name><surname>Knott</surname><given-names>SA</given-names></name></person-group><year iso-8601-date="1992">1992</year><article-title>A simple regression method for mapping quantitative trait loci in line crosses using flanking markers</article-title><source>Heredity</source><volume>69</volume><fpage>315</fpage><lpage>324</lpage><pub-id pub-id-type="doi">10.1038/hdy.1992.131</pub-id><pub-id pub-id-type="pmid">16718932</pub-id></element-citation></ref><ref id="bib55"><element-citation publication-type="book"><person-group person-group-type="author"><name><surname>Harrell</surname><given-names>FE</given-names></name></person-group><year iso-8601-date="2001">2001</year><source>Regression Modeling Strategies: With Applications to Linear Models, Logistic and Ordinal Regression, and Survival Analysis</source><publisher-loc>New York, NY</publisher-loc><publisher-name>Springer</publisher-name><pub-id pub-id-type="doi">10.1007/978-1-4757-3462-1</pub-id></element-citation></ref><ref id="bib56"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Hays</surname><given-names>M</given-names></name><name><surname>Young</surname><given-names>JM</given-names></name><name><surname>Levan</surname><given-names>PF</given-names></name><name><surname>Malik</surname><given-names>HS</given-names></name></person-group><year iso-8601-date="2020">2020</year><article-title>A natural variant of the essential host gene <italic>MMS21</italic> restricts the parasitic 2-micron plasmid in <italic>Saccharomyces cerevisiae</italic></article-title><source>eLife</source><volume>9</volume><elocation-id>e62337</elocation-id><pub-id pub-id-type="doi">10.7554/eLife.62337</pub-id><pub-id pub-id-type="pmid">33063663</pub-id></element-citation></ref><ref id="bib57"><element-citation publication-type="software"><person-group person-group-type="author"><name><surname>Head</surname><given-names>T</given-names></name><name><surname>Coder</surname><given-names>M</given-names></name><name><surname>Louppe</surname><given-names>G</given-names></name><name><surname>Shcherbatyi</surname><given-names>I</given-names></name><name><surname>Vinícius</surname><given-names>FZ</given-names></name></person-group><year iso-8601-date="2018">2018</year><data-title>scikit-optimize/scikit-optimize: v0.5.2</data-title><version designator="9dd7a03">9dd7a03</version><source>GitHub</source><ext-link ext-link-type="uri" xlink:href="https://github.com/scikit-optimize/scikit-optimize/tree/v0.5.2">https://github.com/scikit-optimize/scikit-optimize/tree/v0.5.2</ext-link></element-citation></ref><ref id="bib58"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Heggeset</surname><given-names>TMB</given-names></name><name><surname>Kucharova</surname><given-names>V</given-names></name><name><surname>Nærdal</surname><given-names>I</given-names></name><name><surname>Valla</surname><given-names>S</given-names></name><name><surname>Sletta</surname><given-names>H</given-names></name><name><surname>Ellingsen</surname><given-names>TE</given-names></name><name><surname>Brautaset</surname><given-names>T</given-names></name></person-group><year iso-8601-date="2013">2013</year><article-title>Combinatorial Mutagenesis and Selection of Improved Signal Sequences and Their Application for High-Level Production of Translocated Heterologous Proteins in <italic>Escherichia coli</italic></article-title><source>Applied and Environmental Microbiology</source><volume>79</volume><fpage>559</fpage><lpage>568</lpage><pub-id pub-id-type="doi">10.1128/AEM.02407-12</pub-id><pub-id pub-id-type="pmid">23144128</pub-id></element-citation></ref><ref id="bib59"><element-citation publication-type="software"><person-group person-group-type="author"><name><surname>Heindl</surname><given-names>C</given-names></name></person-group><year iso-8601-date="2020">2020</year><data-title>py-lapsolver</data-title><version designator="c6324f3">c6324f3</version><source>GitHub</source><ext-link ext-link-type="uri" xlink:href="https://github.com/cheind/py-lapsolver">https://github.com/cheind/py-lapsolver</ext-link></element-citation></ref><ref id="bib60"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Hennig</surname><given-names>BP</given-names></name><name><surname>Velten</surname><given-names>L</given-names></name><name><surname>Racke</surname><given-names>I</given-names></name><name><surname>Tu</surname><given-names>CS</given-names></name><name><surname>Thoms</surname><given-names>M</given-names></name><name><surname>Rybin</surname><given-names>V</given-names></name><name><surname>Besir</surname><given-names>H</given-names></name><name><surname>Remans</surname><given-names>K</given-names></name><name><surname>Steinmetz</surname><given-names>LM</given-names></name></person-group><year iso-8601-date="2018">2018</year><article-title>Large-Scale Low-Cost NGS Library Preparation Using a Robust Tn5 Purification and Tagmentation Protocol</article-title><source>G3: Genes, Genomes, Genetics</source><volume>8</volume><fpage>79</fpage><lpage>89</lpage><pub-id pub-id-type="doi">10.1534/g3.117.300257</pub-id><pub-id pub-id-type="pmid">29118030</pub-id></element-citation></ref><ref id="bib61"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Horlbeck</surname><given-names>MA</given-names></name><name><surname>Xu</surname><given-names>A</given-names></name><name><surname>Wang</surname><given-names>M</given-names></name><name><surname>Bennett</surname><given-names>NK</given-names></name><name><surname>Park</surname><given-names>CY</given-names></name><name><surname>Bogdanoff</surname><given-names>D</given-names></name><name><surname>Adamson</surname><given-names>B</given-names></name><name><surname>Chow</surname><given-names>ED</given-names></name><name><surname>Kampmann</surname><given-names>M</given-names></name><name><surname>Peterson</surname><given-names>TR</given-names></name><name><surname>Nakamura</surname><given-names>K</given-names></name><name><surname>Fischbach</surname><given-names>MA</given-names></name><name><surname>Weissman</surname><given-names>JS</given-names></name><name><surname>Gilbert</surname><given-names>LA</given-names></name></person-group><year iso-8601-date="2018">2018</year><article-title>Mapping the Genetic Landscape of Human Cells</article-title><source>Cell</source><volume>174</volume><fpage>953</fpage><lpage>967</lpage><pub-id pub-id-type="doi">10.1016/j.cell.2018.06.010</pub-id><pub-id pub-id-type="pmid">30033366</pub-id></element-citation></ref><ref id="bib62"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Huang</surname><given-names>W</given-names></name><name><surname>Mackay</surname><given-names>TFC</given-names></name><name><surname>Zhu</surname><given-names>X</given-names></name></person-group><year iso-8601-date="2016">2016</year><article-title>The Genetic Architecture of Quantitative Traits Cannot Be Inferred from Variance Component Analysis</article-title><source>PLOS Genetics</source><volume>12</volume><elocation-id>e1006421</elocation-id><pub-id pub-id-type="doi">10.1371/journal.pgen.1006421</pub-id><pub-id pub-id-type="pmid">27812106</pub-id></element-citation></ref><ref id="bib63"><element-citation publication-type="journal"><person-group person-group-type="author"><collab>International Schizophrenia Consortium</collab><name><surname>Purcell</surname><given-names>SM</given-names></name><name><surname>Wray</surname><given-names>NR</given-names></name><name><surname>Stone</surname><given-names>JL</given-names></name><name><surname>Visscher</surname><given-names>PM</given-names></name><name><surname>O’Donovan</surname><given-names>MC</given-names></name><name><surname>Sullivan</surname><given-names>PF</given-names></name><name><surname>Sklar</surname><given-names>P</given-names></name></person-group><year iso-8601-date="2009">2009</year><article-title>Common polygenic variation contributes to risk of schizophrenia and bipolar disorder</article-title><source>Nature</source><volume>460</volume><fpage>748</fpage><lpage>752</lpage><pub-id pub-id-type="doi">10.1038/nature08185</pub-id><pub-id pub-id-type="pmid">19571811</pub-id></element-citation></ref><ref id="bib64"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Jakobson</surname><given-names>CM</given-names></name><name><surname>Jarosz</surname><given-names>DF</given-names></name></person-group><year iso-8601-date="2019">2019</year><article-title>Molecular Origins of Complex Heritability in Natural Genotype-to-Phenotype Relationships</article-title><source>Cell Systems</source><volume>8</volume><fpage>363</fpage><lpage>379</lpage><pub-id pub-id-type="doi">10.1016/j.cels.2019.04.002</pub-id><pub-id pub-id-type="pmid">31054809</pub-id></element-citation></ref><ref id="bib65"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Jonker</surname><given-names>R</given-names></name><name><surname>Volgenant</surname><given-names>A</given-names></name></person-group><year iso-8601-date="1987">1987</year><article-title>A shortest augmenting path algorithm for dense and sparse linear assignment problems</article-title><source>Computing</source><volume>38</volume><fpage>325</fpage><lpage>340</lpage><pub-id pub-id-type="doi">10.1007/BF02278710</pub-id></element-citation></ref><ref id="bib66"><element-citation publication-type="software"><person-group person-group-type="author"><name><surname>Kazmar</surname><given-names>T</given-names></name></person-group><year iso-8601-date="2020">2020</year><data-title>lap: Linear Assignment Problem solver</data-title><version designator="ed04ab7">ed04ab7</version><source>GitHub</source><ext-link ext-link-type="uri" xlink:href="https://github.com/gatagat/lap">https://github.com/gatagat/lap</ext-link></element-citation></ref><ref id="bib67"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Kearsey</surname><given-names>MJ</given-names></name><name><surname>Hyne</surname><given-names>V</given-names></name></person-group><year iso-8601-date="1994">1994</year><article-title>QTL analysis: a simple “marker-regression” approach</article-title><source>TAG. Theoretical and Applied Genetics. Theoretische Und Angewandte Genetik</source><volume>89</volume><fpage>698</fpage><lpage>702</lpage><pub-id pub-id-type="doi">10.1007/BF00223708</pub-id><pub-id pub-id-type="pmid">24178014</pub-id></element-citation></ref><ref id="bib68"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>King</surname><given-names>EG</given-names></name><name><surname>Macdonald</surname><given-names>SJ</given-names></name><name><surname>Long</surname><given-names>AD</given-names></name></person-group><year iso-8601-date="2012">2012</year><article-title>Properties and power of the <italic>Drosophila</italic> Synthetic Population Resource for the routine dissection of complex traits</article-title><source>Genetics</source><volume>191</volume><fpage>935</fpage><lpage>949</lpage><pub-id pub-id-type="doi">10.1534/genetics.112.138537</pub-id><pub-id pub-id-type="pmid">22505626</pub-id></element-citation></ref><ref id="bib69"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Koren</surname><given-names>S</given-names></name><name><surname>Walenz</surname><given-names>BP</given-names></name><name><surname>Berlin</surname><given-names>K</given-names></name><name><surname>Miller</surname><given-names>JR</given-names></name><name><surname>Bergman</surname><given-names>NH</given-names></name><name><surname>Phillippy</surname><given-names>AM</given-names></name></person-group><year iso-8601-date="2017">2017</year><article-title>Canu: scalable and accurate long-read assembly via adaptive k-mer weighting and repeat separation</article-title><source>Genome Research</source><volume>27</volume><fpage>722</fpage><lpage>736</lpage><pub-id pub-id-type="doi">10.1101/gr.215087.116</pub-id><pub-id pub-id-type="pmid">28298431</pub-id></element-citation></ref><ref id="bib70"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Kwan</surname><given-names>EX</given-names></name><name><surname>Wang</surname><given-names>XS</given-names></name><name><surname>Amemiya</surname><given-names>HM</given-names></name><name><surname>Brewer</surname><given-names>BJ</given-names></name><name><surname>Raghuraman</surname><given-names>MK</given-names></name></person-group><year iso-8601-date="2016">2016</year><article-title>rDNA Copy Number Variants Are Frequent Passenger Mutations in <italic>Saccharomyces cerevisiae</italic> Deletion Collections and de Novo Transformants</article-title><source>G3: Genes, Genomes, Genetics</source><volume>6</volume><fpage>2829</fpage><lpage>2838</lpage><pub-id pub-id-type="doi">10.1534/g3.116.030296</pub-id><pub-id pub-id-type="pmid">27449518</pub-id></element-citation></ref><ref id="bib71"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Lander</surname><given-names>ES</given-names></name><name><surname>Botstein</surname><given-names>D</given-names></name></person-group><year iso-8601-date="1989">1989</year><article-title>Mapping mendelian factors underlying quantitative traits using RFLP linkage maps</article-title><source>Genetics</source><volume>121</volume><fpage>185</fpage><lpage>199</lpage><pub-id pub-id-type="doi">10.1093/genetics/121.1.185</pub-id><pub-id pub-id-type="pmid">2563713</pub-id></element-citation></ref><ref id="bib72"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Langmead</surname><given-names>B</given-names></name><name><surname>Salzberg</surname><given-names>SL</given-names></name></person-group><year iso-8601-date="2012">2012</year><article-title>Fast gapped-read alignment with Bowtie 2</article-title><source>Nature Methods</source><volume>9</volume><fpage>357</fpage><lpage>359</lpage><pub-id pub-id-type="doi">10.1038/nmeth.1923</pub-id><pub-id pub-id-type="pmid">22388286</pub-id></element-citation></ref><ref id="bib73"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Liu</surname><given-names>Z</given-names></name><name><surname>Sun</surname><given-names>F</given-names></name><name><surname>McGovern</surname><given-names>DP</given-names></name></person-group><year iso-8601-date="2017">2017</year><article-title>Sparse generalized linear model with L 0 approximation for feature selection and prediction with big omics data</article-title><source>BioData Mining</source><volume>10</volume><elocation-id>39</elocation-id><pub-id pub-id-type="doi">10.1186/s13040-017-0159-z</pub-id><pub-id pub-id-type="pmid">29270229</pub-id></element-citation></ref><ref id="bib74"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Liu</surname><given-names>X</given-names></name><name><surname>Li</surname><given-names>YI</given-names></name><name><surname>Pritchard</surname><given-names>JK</given-names></name></person-group><year iso-8601-date="2019">2019a</year><article-title>Trans Effects on Gene Expression Can Drive Omnigenic Inheritance</article-title><source>Cell</source><volume>177</volume><fpage>1022</fpage><lpage>1034</lpage><pub-id pub-id-type="doi">10.1016/j.cell.2019.04.014</pub-id><pub-id pub-id-type="pmid">31051098</pub-id></element-citation></ref><ref id="bib75"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Liu</surname><given-names>Y</given-names></name><name><surname>Wang</surname><given-names>D</given-names></name><name><surname>He</surname><given-names>F</given-names></name><name><surname>Wang</surname><given-names>J</given-names></name><name><surname>Joshi</surname><given-names>T</given-names></name><name><surname>Xu</surname><given-names>D</given-names></name></person-group><year iso-8601-date="2019">2019b</year><article-title>Phenotype Prediction and Genome-Wide Association Study Using Deep Convolutional Neural Network of Soybean</article-title><source>Frontiers in Genetics</source><volume>10</volume><elocation-id>1091</elocation-id><pub-id pub-id-type="doi">10.3389/fgene.2019.01091</pub-id><pub-id pub-id-type="pmid">31824557</pub-id></element-citation></ref><ref id="bib76"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>MacAlpine</surname><given-names>DM</given-names></name><name><surname>Perlman</surname><given-names>PS</given-names></name><name><surname>Butow</surname><given-names>RA</given-names></name></person-group><year iso-8601-date="2000">2000</year><article-title>The numbers of individual mitochondrial DNA molecules and mitochondrial DNA nucleoids in yeast are co-regulated by the general amino acid control pathway</article-title><source>The EMBO Journal</source><volume>19</volume><fpage>767</fpage><lpage>775</lpage><pub-id pub-id-type="doi">10.1093/emboj/19.4.767</pub-id><pub-id pub-id-type="pmid">10675346</pub-id></element-citation></ref><ref id="bib77"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Mackay</surname><given-names>TFC</given-names></name><name><surname>Huang</surname><given-names>W</given-names></name></person-group><year iso-8601-date="2018">2018</year><article-title>Charting the genotype-phenotype map: lessons from the <italic>Drosophila melanogaster</italic> Genetic Reference Panel</article-title><source>Wiley Interdisciplinary Reviews. Developmental Biology</source><volume>7</volume><elocation-id>e289</elocation-id><pub-id pub-id-type="doi">10.1002/wdev.289</pub-id><pub-id pub-id-type="pmid">28834395</pub-id></element-citation></ref><ref id="bib78"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Manichaikul</surname><given-names>A</given-names></name><name><surname>Dupuis</surname><given-names>J</given-names></name><name><surname>Sen</surname><given-names>S</given-names></name><name><surname>Broman</surname><given-names>KW</given-names></name></person-group><year iso-8601-date="2006">2006</year><article-title>Poor performance of bootstrap confidence intervals for the location of a quantitative trait locus</article-title><source>Genetics</source><volume>174</volume><fpage>481</fpage><lpage>489</lpage><pub-id pub-id-type="doi">10.1534/genetics.106.061549</pub-id><pub-id pub-id-type="pmid">16783000</pub-id></element-citation></ref><ref id="bib79"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Manolio</surname><given-names>TA</given-names></name><name><surname>Collins</surname><given-names>FS</given-names></name><name><surname>Cox</surname><given-names>NJ</given-names></name><name><surname>Goldstein</surname><given-names>DB</given-names></name><name><surname>Hindorff</surname><given-names>LA</given-names></name><name><surname>Hunter</surname><given-names>DJ</given-names></name><name><surname>McCarthy</surname><given-names>MI</given-names></name><name><surname>Ramos</surname><given-names>EM</given-names></name><name><surname>Cardon</surname><given-names>LR</given-names></name><name><surname>Chakravarti</surname><given-names>A</given-names></name><name><surname>Cho</surname><given-names>JH</given-names></name><name><surname>Guttmacher</surname><given-names>AE</given-names></name><name><surname>Kong</surname><given-names>A</given-names></name><name><surname>Kruglyak</surname><given-names>L</given-names></name><name><surname>Mardis</surname><given-names>E</given-names></name><name><surname>Rotimi</surname><given-names>CN</given-names></name><name><surname>Slatkin</surname><given-names>M</given-names></name><name><surname>Valle</surname><given-names>D</given-names></name><name><surname>Whittemore</surname><given-names>AS</given-names></name><name><surname>Boehnke</surname><given-names>M</given-names></name><name><surname>Clark</surname><given-names>AG</given-names></name><name><surname>Eichler</surname><given-names>EE</given-names></name><name><surname>Gibson</surname><given-names>G</given-names></name><name><surname>Haines</surname><given-names>JL</given-names></name><name><surname>Mackay</surname><given-names>TFC</given-names></name><name><surname>McCarroll</surname><given-names>SA</given-names></name><name><surname>Visscher</surname><given-names>PM</given-names></name></person-group><year iso-8601-date="2009">2009</year><article-title>Finding the missing heritability of complex diseases</article-title><source>Nature</source><volume>461</volume><fpage>747</fpage><lpage>753</lpage><pub-id pub-id-type="doi">10.1038/nature08494</pub-id><pub-id pub-id-type="pmid">19812666</pub-id></element-citation></ref><ref id="bib80"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Marchini</surname><given-names>J</given-names></name><name><surname>Howie</surname><given-names>B</given-names></name></person-group><year iso-8601-date="2010">2010</year><article-title>Genotype imputation for genome-wide association studies</article-title><source>Nature Reviews Genetics</source><volume>11</volume><fpage>499</fpage><lpage>511</lpage><pub-id pub-id-type="doi">10.1038/nrg2796</pub-id></element-citation></ref><ref id="bib81"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>McCullagh</surname><given-names>P</given-names></name></person-group><year iso-8601-date="1983">1983</year><article-title>Quasi-Likelihood Functions</article-title><source>The Annals of Statistics</source><volume>11</volume><fpage>59</fpage><lpage>67</lpage><pub-id pub-id-type="doi">10.1214/aos/1176346056</pub-id></element-citation></ref><ref id="bib82"><element-citation publication-type="book"><person-group person-group-type="author"><name><surname>McCullagh</surname><given-names>P</given-names></name><name><surname>Nelder</surname><given-names>JA</given-names></name></person-group><year iso-8601-date="1989">1989</year><source>Generalized Linear Models</source><publisher-loc>Boston, MA</publisher-loc><publisher-name>Chapman &amp; Hall</publisher-name><pub-id pub-id-type="doi">10.1007/978-1-4899-3242-6</pub-id></element-citation></ref><ref id="bib83"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Michelmore</surname><given-names>RW</given-names></name><name><surname>Paran</surname><given-names>I</given-names></name><name><surname>Kesseli</surname><given-names>RV</given-names></name></person-group><year iso-8601-date="1991">1991</year><article-title>Identification of markers linked to disease-resistance genes by bulked segregant analysis: a rapid method to detect markers in specific genomic regions by using segregating populations</article-title><source>PNAS</source><volume>88</volume><fpage>9828</fpage><lpage>9832</lpage><pub-id pub-id-type="doi">10.1073/pnas.88.21.9828</pub-id></element-citation></ref><ref id="bib84"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Miyajima</surname><given-names>Y</given-names></name><name><surname>Satoh</surname><given-names>K</given-names></name><name><surname>Umeda</surname><given-names>Y</given-names></name><name><surname>Makimura</surname><given-names>K</given-names></name></person-group><year iso-8601-date="2009">2009</year><article-title>Quantitation of Fungal DNA Contamination in Commercial Zymolyase and Lyticase Used in the Preparation of Fungi</article-title><source>Nippon Ishinkin Gakkai Zasshi</source><volume>50</volume><fpage>259</fpage><lpage>262</lpage><pub-id pub-id-type="doi">10.3314/jjmm.50.259</pub-id></element-citation></ref><ref id="bib85"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Natarajan</surname><given-names>BK</given-names></name></person-group><year iso-8601-date="1995">1995</year><article-title>Sparse Approximate Solutions to Linear Systems</article-title><source>SIAM Journal on Computing</source><volume>24</volume><fpage>227</fpage><lpage>234</lpage><pub-id pub-id-type="doi">10.1137/S0097539792240406</pub-id></element-citation></ref><ref id="bib86"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Needleman</surname><given-names>SB</given-names></name><name><surname>Wunsch</surname><given-names>CD</given-names></name></person-group><year iso-8601-date="1970">1970</year><article-title>A general method applicable to the search for similarities in the amino acid sequence of two proteins</article-title><source>Journal of Molecular Biology</source><volume>48</volume><fpage>443</fpage><lpage>453</lpage><pub-id pub-id-type="doi">10.1016/0022-2836(70)90057-4</pub-id><pub-id pub-id-type="pmid">5420325</pub-id></element-citation></ref><ref id="bib87"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Nguyen Ba</surname><given-names>AN</given-names></name><name><surname>Cvijović</surname><given-names>I</given-names></name><name><surname>Rojas Echenique</surname><given-names>JI</given-names></name><name><surname>Lawrence</surname><given-names>KR</given-names></name><name><surname>Rego-Costa</surname><given-names>A</given-names></name><name><surname>Liu</surname><given-names>X</given-names></name><name><surname>Levy</surname><given-names>SF</given-names></name><name><surname>Desai</surname><given-names>MM</given-names></name></person-group><year iso-8601-date="2019">2019</year><article-title>High-resolution lineage tracking reveals travelling wave of adaptation in laboratory yeast</article-title><source>Nature</source><volume>575</volume><fpage>494</fpage><lpage>499</lpage><pub-id pub-id-type="doi">10.1038/s41586-019-1749-3</pub-id><pub-id pub-id-type="pmid">31723263</pub-id></element-citation></ref><ref id="bib88"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Orr</surname><given-names>HA</given-names></name></person-group><year iso-8601-date="1998">1998</year><article-title>The population genetics of adaption: the distribution of factors fixed during adaptive evolution</article-title><source>Evolution; International Journal of Organic Evolution</source><volume>52</volume><fpage>935</fpage><lpage>949</lpage><pub-id pub-id-type="doi">10.1111/j.1558-5646.1998.tb01823.x</pub-id><pub-id pub-id-type="pmid">28565213</pub-id></element-citation></ref><ref id="bib89"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Perlstein</surname><given-names>EO</given-names></name><name><surname>Ruderfer</surname><given-names>DM</given-names></name><name><surname>Roberts</surname><given-names>DC</given-names></name><name><surname>Schreiber</surname><given-names>SL</given-names></name><name><surname>Kruglyak</surname><given-names>L</given-names></name></person-group><year iso-8601-date="2007">2007</year><article-title>Genetic basis of individual differences in the response to small-molecule drugs in yeast</article-title><source>Nature Genetics</source><volume>39</volume><fpage>496</fpage><lpage>502</lpage><pub-id pub-id-type="doi">10.1038/ng1991</pub-id><pub-id pub-id-type="pmid">17334364</pub-id></element-citation></ref><ref id="bib90"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Peter</surname><given-names>J</given-names></name><name><surname>De Chiara</surname><given-names>M</given-names></name><name><surname>Friedrich</surname><given-names>A</given-names></name><name><surname>Yue</surname><given-names>J-X</given-names></name><name><surname>Pflieger</surname><given-names>D</given-names></name><name><surname>Bergström</surname><given-names>A</given-names></name><name><surname>Sigwalt</surname><given-names>A</given-names></name><name><surname>Barre</surname><given-names>B</given-names></name><name><surname>Freel</surname><given-names>K</given-names></name><name><surname>Llored</surname><given-names>A</given-names></name><name><surname>Cruaud</surname><given-names>C</given-names></name><name><surname>Labadie</surname><given-names>K</given-names></name><name><surname>Aury</surname><given-names>J-M</given-names></name><name><surname>Istace</surname><given-names>B</given-names></name><name><surname>Lebrigand</surname><given-names>K</given-names></name><name><surname>Barbry</surname><given-names>P</given-names></name><name><surname>Engelen</surname><given-names>S</given-names></name><name><surname>Lemainque</surname><given-names>A</given-names></name><name><surname>Wincker</surname><given-names>P</given-names></name><name><surname>Liti</surname><given-names>G</given-names></name><name><surname>Schacherer</surname><given-names>J</given-names></name></person-group><year iso-8601-date="2018">2018</year><article-title>Genome evolution across 1,011 <italic>Saccharomyces cerevisiae</italic> isolates</article-title><source>Nature</source><volume>556</volume><fpage>339</fpage><lpage>344</lpage><pub-id pub-id-type="doi">10.1038/s41586-018-0030-5</pub-id><pub-id pub-id-type="pmid">29643504</pub-id></element-citation></ref><ref id="bib91"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Petit</surname><given-names>PX</given-names></name><name><surname>Glab</surname><given-names>N</given-names></name><name><surname>Marie</surname><given-names>D</given-names></name><name><surname>Kieffer</surname><given-names>H</given-names></name><name><surname>Métézeau</surname><given-names>P</given-names></name></person-group><year iso-8601-date="1996">1996</year><article-title>Discrimination of respiratory dysfunction in yeast mutants by confocal microscopy, image, and flow cytometry</article-title><source>Cytometry</source><volume>23</volume><fpage>28</fpage><lpage>38</lpage><pub-id pub-id-type="doi">10.1002/(SICI)1097-0320(19960101)23:1&lt;28::AID-CYTO5&gt;3.0.CO;2-I</pub-id><pub-id pub-id-type="pmid">14650438</pub-id></element-citation></ref><ref id="bib92"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Picelli</surname><given-names>S</given-names></name><name><surname>Björklund</surname><given-names>AK</given-names></name><name><surname>Reinius</surname><given-names>B</given-names></name><name><surname>Sagasser</surname><given-names>S</given-names></name><name><surname>Winberg</surname><given-names>G</given-names></name><name><surname>Sandberg</surname><given-names>R</given-names></name></person-group><year iso-8601-date="2014">2014</year><article-title>Tn5 transposase and tagmentation procedures for massively scaled sequencing projects</article-title><source>Genome Research</source><volume>24</volume><fpage>2033</fpage><lpage>2040</lpage><pub-id pub-id-type="doi">10.1101/gr.177881.114</pub-id><pub-id pub-id-type="pmid">25079858</pub-id></element-citation></ref><ref id="bib93"><element-citation publication-type="web"><person-group person-group-type="author"><name><surname>Plass</surname><given-names>M</given-names></name></person-group><year iso-8601-date="2020">2020</year><article-title>Yeast intron structures database</article-title><ext-link ext-link-type="uri" xlink:href="http://regulatorygenomics.upf.edu/Software/Yeast_Introns/index.html">http://regulatorygenomics.upf.edu/Software/Yeast_Introns/index.html</ext-link><date-in-citation iso-8601-date="2021-09-20">September 20, 2021</date-in-citation></element-citation></ref><ref id="bib94"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Rice</surname><given-names>DP</given-names></name><name><surname>Townsend</surname><given-names>JP</given-names></name></person-group><year iso-8601-date="2012">2012</year><article-title>Resampling QTL Effects in the QTL Sign Test Leads to Incongruous Sensitivity to Variance in Effect Size</article-title><source>G3: Genes, Genomes, Genetics</source><volume>2</volume><fpage>905</fpage><lpage>911</lpage><pub-id pub-id-type="doi">10.1534/g3.112.003228</pub-id></element-citation></ref><ref id="bib95"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Rodríguez-Peña</surname><given-names>JM</given-names></name><name><surname>Díez-Muñiz</surname><given-names>S</given-names></name><name><surname>Bermejo</surname><given-names>C</given-names></name><name><surname>Nombela</surname><given-names>C</given-names></name><name><surname>Arroyo</surname><given-names>J</given-names></name></person-group><year iso-8601-date="2013">2013</year><article-title>Activation of the yeast cell wall integrity MAPK pathway by zymolyase depends on protease and glucanase activities and requires the mucin-like protein Hkr1 but not Msb2</article-title><source>FEBS Letters</source><volume>587</volume><fpage>3675</fpage><lpage>3680</lpage><pub-id pub-id-type="doi">10.1016/j.febslet.2013.09.030</pub-id><pub-id pub-id-type="pmid">24100139</pub-id></element-citation></ref><ref id="bib96"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Salazar</surname><given-names>O</given-names></name><name><surname>Basso</surname><given-names>C</given-names></name><name><surname>Barba</surname><given-names>P</given-names></name><name><surname>Orellana</surname><given-names>C</given-names></name><name><surname>Asenjo</surname><given-names>JA</given-names></name></person-group><year iso-8601-date="2006">2006</year><article-title>Improvement of the Lytic Properties of a β-1,3-Glucanase by Directed Evolution</article-title><source>Molecular Biotechnology</source><volume>33</volume><fpage>211</fpage><lpage>220</lpage><pub-id pub-id-type="doi">10.1385/MB:33:3:211</pub-id><pub-id pub-id-type="pmid">16946451</pub-id></element-citation></ref><ref id="bib97"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Sandhu</surname><given-names>KS</given-names></name><name><surname>Lozada</surname><given-names>DN</given-names></name><name><surname>Zhang</surname><given-names>Z</given-names></name><name><surname>Pumphrey</surname><given-names>MO</given-names></name><name><surname>Carter</surname><given-names>AH</given-names></name></person-group><year iso-8601-date="2021">2021</year><article-title>Deep Learning for Predicting Complex Traits in Spring Wheat Breeding Program</article-title><source>Frontiers in Plant Science</source><volume>11</volume><elocation-id>2084</elocation-id><pub-id pub-id-type="doi">10.3389/fpls.2020.613325</pub-id></element-citation></ref><ref id="bib98"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Scott</surname><given-names>JH</given-names></name><name><surname>Schekman</surname><given-names>R</given-names></name></person-group><year iso-8601-date="1980">1980</year><article-title>Lyticase: endoglucanase and protease activities that act together in yeast cell lysis</article-title><source>Journal of Bacteriology</source><volume>142</volume><fpage>414</fpage><lpage>423</lpage><pub-id pub-id-type="doi">10.1128/jb.142.2.414-423.1980</pub-id><pub-id pub-id-type="pmid">6991473</pub-id></element-citation></ref><ref id="bib99"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Shao</surname><given-names>J</given-names></name></person-group><year iso-8601-date="1993">1993</year><article-title>Linear Model Selection by Cross-validation</article-title><source>Journal of the American Statistical Association</source><volume>88</volume><fpage>486</fpage><lpage>494</lpage><pub-id pub-id-type="doi">10.1080/01621459.1993.10476299</pub-id></element-citation></ref><ref id="bib100"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>She</surname><given-names>R</given-names></name><name><surname>Jarosz</surname><given-names>DF</given-names></name></person-group><year iso-8601-date="2018">2018</year><article-title>Mapping Causal Variants with Single-Nucleotide Resolution Reveals Biochemical Drivers of Phenotypic Change</article-title><source>Cell</source><volume>172</volume><fpage>478</fpage><lpage>490</lpage><pub-id pub-id-type="doi">10.1016/j.cell.2017.12.015</pub-id><pub-id pub-id-type="pmid">29373829</pub-id></element-citation></ref><ref id="bib101"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Smith</surname><given-names>EN</given-names></name><name><surname>Kruglyak</surname><given-names>L</given-names></name></person-group><year iso-8601-date="2008">2008</year><article-title>Gene-environment interaction in yeast gene expression</article-title><source>PLOS Biology</source><volume>6</volume><elocation-id>e83</elocation-id><pub-id pub-id-type="doi">10.1371/journal.pbio.0060083</pub-id><pub-id pub-id-type="pmid">18416601</pub-id></element-citation></ref><ref id="bib102"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Smith</surname><given-names>AM</given-names></name><name><surname>Heisler</surname><given-names>LE</given-names></name><name><surname>Mellor</surname><given-names>J</given-names></name><name><surname>Kaper</surname><given-names>F</given-names></name><name><surname>Thompson</surname><given-names>MJ</given-names></name><name><surname>Chee</surname><given-names>M</given-names></name><name><surname>Roth</surname><given-names>FP</given-names></name><name><surname>Giaever</surname><given-names>G</given-names></name><name><surname>Nislow</surname><given-names>C</given-names></name></person-group><year iso-8601-date="2009">2009</year><article-title>Quantitative phenotyping via deep barcode sequencing</article-title><source>Genome Research</source><volume>19</volume><fpage>1836</fpage><lpage>1842</lpage><pub-id pub-id-type="doi">10.1101/gr.093955.109</pub-id><pub-id pub-id-type="pmid">19622793</pub-id></element-citation></ref><ref id="bib103"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Smith</surname><given-names>G</given-names></name></person-group><year iso-8601-date="2018">2018</year><article-title>Step away from stepwise</article-title><source>Journal of Big Data</source><volume>5</volume><elocation-id>1</elocation-id><pub-id pub-id-type="doi">10.1186/s40537-018-0143-6</pub-id></element-citation></ref><ref id="bib104"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Sohail</surname><given-names>M</given-names></name><name><surname>Maier</surname><given-names>RM</given-names></name><name><surname>Ganna</surname><given-names>A</given-names></name><name><surname>Bloemendal</surname><given-names>A</given-names></name><name><surname>Martin</surname><given-names>AR</given-names></name><name><surname>Turchin</surname><given-names>MC</given-names></name><name><surname>Chiang</surname><given-names>CW</given-names></name><name><surname>Hirschhorn</surname><given-names>J</given-names></name><name><surname>Daly</surname><given-names>MJ</given-names></name><name><surname>Patterson</surname><given-names>N</given-names></name><name><surname>Neale</surname><given-names>B</given-names></name><name><surname>Mathieson</surname><given-names>I</given-names></name><name><surname>Reich</surname><given-names>D</given-names></name><name><surname>Sunyaev</surname><given-names>SR</given-names></name></person-group><year iso-8601-date="2019">2019</year><article-title>Polygenic adaptation on height is overestimated due to uncorrected stratification in genome-wide association studies</article-title><source>eLife</source><volume>8</volume><elocation-id>e39702</elocation-id><pub-id pub-id-type="doi">10.7554/eLife.39702</pub-id><pub-id pub-id-type="pmid">30895926</pub-id></element-citation></ref><ref id="bib105"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Spearman</surname><given-names>C</given-names></name></person-group><year iso-8601-date="1904">1904</year><article-title>“General Intelligence,” Objectively Determined and Measured</article-title><source>The American Journal of Psychology</source><volume>15</volume><elocation-id>201</elocation-id><pub-id pub-id-type="doi">10.2307/1412107</pub-id></element-citation></ref><ref id="bib106"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Steinmetz</surname><given-names>LM</given-names></name><name><surname>Sinha</surname><given-names>H</given-names></name><name><surname>Richards</surname><given-names>DR</given-names></name><name><surname>Spiegelman</surname><given-names>JI</given-names></name><name><surname>Oefner</surname><given-names>PJ</given-names></name><name><surname>McCusker</surname><given-names>JH</given-names></name><name><surname>Davis</surname><given-names>RW</given-names></name></person-group><year iso-8601-date="2002">2002</year><article-title>Dissecting the architecture of a quantitative trait locus in yeast</article-title><source>Nature</source><volume>416</volume><fpage>326</fpage><lpage>330</lpage><pub-id pub-id-type="doi">10.1038/416326a</pub-id><pub-id pub-id-type="pmid">11907579</pub-id></element-citation></ref><ref id="bib107"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Storici</surname><given-names>F</given-names></name><name><surname>Lewis</surname><given-names>LK</given-names></name><name><surname>Resnick</surname><given-names>MA</given-names></name></person-group><year iso-8601-date="2001">2001</year><article-title>In vivo site-directed mutagenesis using oligonucleotides</article-title><source>Nature Biotechnology</source><volume>19</volume><fpage>773</fpage><lpage>776</lpage><pub-id pub-id-type="doi">10.1038/90837</pub-id><pub-id pub-id-type="pmid">11479573</pub-id></element-citation></ref><ref id="bib108"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Studier</surname><given-names>FW</given-names></name></person-group><year iso-8601-date="2005">2005</year><article-title>Protein production by auto-induction in high-density shaking cultures</article-title><source>Protein Expression and Purification</source><volume>41</volume><fpage>207</fpage><lpage>234</lpage><pub-id pub-id-type="doi">10.1016/j.pep.2005.01.016</pub-id></element-citation></ref><ref id="bib109"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Tibshirani</surname><given-names>R</given-names></name></person-group><year iso-8601-date="1996">1996</year><article-title>Regression Shrinkage and Selection Via the Lasso</article-title><source>Journal of the Royal Statistical Society</source><volume>58</volume><fpage>267</fpage><lpage>288</lpage><pub-id pub-id-type="doi">10.1111/j.2517-6161.1996.tb02080.x</pub-id></element-citation></ref><ref id="bib110"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Tong</surname><given-names>AH</given-names></name><name><surname>Evangelista</surname><given-names>M</given-names></name><name><surname>Parsons</surname><given-names>AB</given-names></name><name><surname>Xu</surname><given-names>H</given-names></name><name><surname>Bader</surname><given-names>GD</given-names></name><name><surname>Pagé</surname><given-names>N</given-names></name><name><surname>Robinson</surname><given-names>M</given-names></name><name><surname>Raghibizadeh</surname><given-names>S</given-names></name><name><surname>Hogue</surname><given-names>CW</given-names></name><name><surname>Bussey</surname><given-names>H</given-names></name><name><surname>Andrews</surname><given-names>B</given-names></name><name><surname>Tyers</surname><given-names>M</given-names></name><name><surname>Boone</surname><given-names>C</given-names></name></person-group><year iso-8601-date="2001">2001</year><article-title>Systematic genetic analysis with ordered arrays of yeast deletion mutants</article-title><source>Science (New York, N.Y.)</source><volume>294</volume><fpage>2364</fpage><lpage>2368</lpage><pub-id pub-id-type="doi">10.1126/science.1065810</pub-id><pub-id pub-id-type="pmid">11743205</pub-id></element-citation></ref><ref id="bib111"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Tong</surname><given-names>AHY</given-names></name><name><surname>Boone</surname><given-names>C</given-names></name></person-group><year iso-8601-date="2006">2006</year><article-title>Synthetic genetic array analysis in <italic>Saccharomyces cerevisiae</italic></article-title><source>Methods in Molecular Biology (Clifton, N.J.)</source><volume>313</volume><fpage>171</fpage><lpage>192</lpage><pub-id pub-id-type="doi">10.1385/1-59259-958-3:171</pub-id><pub-id pub-id-type="pmid">16118434</pub-id></element-citation></ref><ref id="bib112"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>True</surname><given-names>HL</given-names></name><name><surname>Lindquist</surname><given-names>SL</given-names></name></person-group><year iso-8601-date="2000">2000</year><article-title>A yeast prion provides A mechanism for genetic variation and phenotypic diversity</article-title><source>Nature</source><volume>407</volume><fpage>477</fpage><lpage>483</lpage><pub-id pub-id-type="doi">10.1038/35035005</pub-id><pub-id pub-id-type="pmid">11028992</pub-id></element-citation></ref><ref id="bib113"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Voth</surname><given-names>WP</given-names></name><name><surname>Richards</surname><given-names>JD</given-names></name><name><surname>Shaw</surname><given-names>JM</given-names></name><name><surname>Stillman</surname><given-names>DJ</given-names></name></person-group><year iso-8601-date="2001">2001</year><article-title>Yeast vectors for integration at the HO locus</article-title><source>Nucleic Acids Research</source><volume>29</volume><elocation-id>E59</elocation-id><pub-id pub-id-type="doi">10.1093/nar/29.12.e59</pub-id><pub-id pub-id-type="pmid">11410682</pub-id></element-citation></ref><ref id="bib114"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Wieland</surname><given-names>J</given-names></name><name><surname>Nitsche</surname><given-names>AM</given-names></name><name><surname>Strayle</surname><given-names>J</given-names></name><name><surname>Steiner</surname><given-names>H</given-names></name><name><surname>Rudolph</surname><given-names>HK</given-names></name></person-group><year iso-8601-date="1995">1995</year><article-title>The PMR2 gene cluster encodes functionally distinct isoforms of a putative na pump in the yeast plasma membrane</article-title><source>The EMBO Journal</source><volume>14</volume><fpage>3870</fpage><lpage>3882</lpage></element-citation></ref><ref id="bib115"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Yang</surname><given-names>J</given-names></name><name><surname>Benyamin</surname><given-names>B</given-names></name><name><surname>McEvoy</surname><given-names>BP</given-names></name><name><surname>Gordon</surname><given-names>S</given-names></name><name><surname>Henders</surname><given-names>AK</given-names></name><name><surname>Nyholt</surname><given-names>DR</given-names></name><name><surname>Madden</surname><given-names>PA</given-names></name><name><surname>Heath</surname><given-names>AC</given-names></name><name><surname>Martin</surname><given-names>NG</given-names></name><name><surname>Montgomery</surname><given-names>GW</given-names></name><name><surname>Goddard</surname><given-names>ME</given-names></name><name><surname>Visscher</surname><given-names>PM</given-names></name></person-group><year iso-8601-date="2010">2010</year><article-title>Common SNPs explain a large proportion of the heritability for human height</article-title><source>Nature Genetics</source><volume>42</volume><fpage>565</fpage><lpage>569</lpage><pub-id pub-id-type="doi">10.1038/ng.608</pub-id><pub-id pub-id-type="pmid">20562875</pub-id></element-citation></ref><ref id="bib116"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Yang</surname><given-names>J</given-names></name><name><surname>Lee</surname><given-names>SH</given-names></name><name><surname>Goddard</surname><given-names>ME</given-names></name><name><surname>Visscher</surname><given-names>PM</given-names></name></person-group><year iso-8601-date="2011">2011</year><article-title>GCTA: a tool for genome-wide complex trait analysis</article-title><source>American Journal of Human Genetics</source><volume>88</volume><fpage>76</fpage><lpage>82</lpage><pub-id pub-id-type="doi">10.1016/j.ajhg.2010.11.011</pub-id><pub-id pub-id-type="pmid">21167468</pub-id></element-citation></ref><ref id="bib117"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Yi</surname><given-names>N</given-names></name></person-group><year iso-8601-date="2004">2004</year><article-title>A unified Markov chain Monte Carlo framework for mapping multiple quantitative trait loci</article-title><source>Genetics</source><volume>167</volume><fpage>967</fpage><lpage>975</lpage><pub-id pub-id-type="doi">10.1534/genetics.104.026286</pub-id><pub-id pub-id-type="pmid">15238545</pub-id></element-citation></ref><ref id="bib118"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Yvert</surname><given-names>G</given-names></name><name><surname>Brem</surname><given-names>RB</given-names></name><name><surname>Whittle</surname><given-names>J</given-names></name><name><surname>Akey</surname><given-names>JM</given-names></name><name><surname>Foss</surname><given-names>E</given-names></name><name><surname>Smith</surname><given-names>EN</given-names></name><name><surname>Mackelprang</surname><given-names>R</given-names></name><name><surname>Kruglyak</surname><given-names>L</given-names></name></person-group><year iso-8601-date="2003">2003</year><article-title>Trans-acting regulatory variation in <italic>Saccharomyces cerevisiae</italic> and the role of transcription factors</article-title><source>Nature Genetics</source><volume>35</volume><fpage>57</fpage><lpage>64</lpage><pub-id pub-id-type="doi">10.1038/ng1222</pub-id><pub-id pub-id-type="pmid">12897782</pub-id></element-citation></ref><ref id="bib119"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Zeng</surname><given-names>ZB</given-names></name></person-group><year iso-8601-date="1994">1994</year><article-title>Precision mapping of quantitative trait loci</article-title><source>Genetics</source><volume>136</volume><fpage>1457</fpage><lpage>1468</lpage><pub-id pub-id-type="doi">10.1093/genetics/136.4.1457</pub-id></element-citation></ref><ref id="bib120"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Zeng</surname><given-names>Y</given-names></name><name><surname>Breheny</surname><given-names>P</given-names></name></person-group><year iso-8601-date="2020">2020</year><article-title>The biglasso Package: A Memory- and Computation-Efficient Solver for Lasso Model Fitting with Big Data in R</article-title><source>The R Journal</source><volume>12</volume><elocation-id>6</elocation-id><pub-id pub-id-type="doi">10.32614/RJ-2021-001</pub-id></element-citation></ref><ref id="bib121"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Zhao</surname><given-names>P</given-names></name><name><surname>Yu</surname><given-names>B</given-names></name></person-group><year iso-8601-date="2006">2006</year><article-title>On Model Selection Consistency of Lasso</article-title><source>The Journal of Machine Learning Research</source><volume>7</volume><fpage>2541</fpage><lpage>2563</lpage></element-citation></ref><ref id="bib122"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Zingaretti</surname><given-names>LM</given-names></name><name><surname>Gezan</surname><given-names>SA</given-names></name><name><surname>Ferrão</surname><given-names>LFV</given-names></name><name><surname>Osorio</surname><given-names>LF</given-names></name><name><surname>Monfort</surname><given-names>A</given-names></name><name><surname>Muñoz</surname><given-names>PR</given-names></name><name><surname>Whitaker</surname><given-names>VM</given-names></name><name><surname>Pérez-Enciso</surname><given-names>M</given-names></name></person-group><year iso-8601-date="2020">2020</year><article-title>Exploring Deep Learning for Complex Trait Genomic Prediction in Polyploid Outcrossing Species</article-title><source>Frontiers in Plant Science</source><volume>11</volume><elocation-id>25</elocation-id><pub-id pub-id-type="doi">10.3389/fpls.2020.00025</pub-id><pub-id pub-id-type="pmid">32117371</pub-id></element-citation></ref></ref-list><app-group><app id="appendix-1"><title>Appendix 1</title><sec id="s8" sec-type="appendix"><title>Genotype inference</title><sec id="s8-1" sec-type="appendix"><title>Probabilistic genotype imputation</title><p>In humans, plants, and other species with large genomes, genome information for GWAS or QTL mapping has typically been obtained by microarray sequencing of a set of tagging SNPs (although whole-exome sequencing by target, capture methods is becoming more common). In yeast, because the genome is relatively small (12 Mb) and the SNP density in crosses can be high (∼1 SNP per short read), whole-genome sequencing is an attractive option. Previous studies aimed for at least ∼10X coverage per individual to minimize the impact of sequencing errors (<xref ref-type="bibr" rid="bib100">She and Jarosz, 2018</xref>). However, at the scale of 100,000 individuals, sequencing at 10 X coverage would require over 50 billion reads. Even with state-of-the-art NGS platforms such as the Illumina Novaseq, this scale of sequencing is cost-prohibitive.</p><p>Fortunately, the known genetic structure of our cross allows us to infer segregant genotypes very accurately with significantly less than 10 X coverage. This is possible because we know a priori the location and identity of all variants from deep sequencing of the parents, so we can fully determine each segregant genotype if we can infer where the recombination breakpoints occur. In our F1 individuals, there are only on average ∼50 breakpoints per individual, meaning that there are on average ∼1000 SNPs in each haplotype block. Thus to accurately reconstruct the location of recombination breakpoints, we can sequence some smaller fraction of SNPs and then impute full genotypes (<xref ref-type="bibr" rid="bib20">Broman et al., 2003</xref>). This approach is similar in spirit to methods for genome imputation from SNP genotyping arrays used in humans and other organisms. However, we note that each individual is observed at a <italic>random</italic> subset of SNPs (rather than observing the same tagging subset across all individuals), and due to random variation in sequencing coverage, some individuals are sequenced nearly completely while others are sequenced more sparsely. In this section, we describe our method for genome imputation, validate its accuracy, quantify the extent of genome uncertainty and errors, and discuss the impact of this uncertainty on QTL inference.</p><sec id="s8-1-1" sec-type="appendix"><title>Variant calling</title><p>Our first task is to identify the SNPs present in the parental cross. We sequenced both parental strains to about 100 X coverage using conventional Illumina Nextera sequencing. Polymorphisms were identified using the breseq pipeline against the reference BY4741 genome (<xref ref-type="bibr" rid="bib41">Engel et al., 2014</xref>). We chose to exclude indels, as their precise location, especially in homopolymeric regions, does not always map uniquely in read aligners. This produced an initial set of 44,650 variants. We further required that polymorphisms were reliably mapped by our sequencing approach (aligning to a single location in the reference genome) and did not show evidence of read bias in the segregant pool. This produced a list of 42,661 SNPs between the two parental strains.</p><p>In addition, pilot experiments showed evidence of chromosomal translocations, primarily near telomeres, when comparing the BY and RM parents. Such translocations or duplications of large (≥1 kb) regions would lead to ambiguities in read mapping, genome inference, and QTL mapping. To identify these problematic regions, we conducted long-read sequencing of both parental strains using the Nanopore MinION platform (FLO-MIN106 flow cell and kit SQK-LSK109). For the RM (BY) strain, we obtained an estimated N50 of 22 kb (17 kb) with 360 X (760 X) coverage of the BY4741 reference genome. We performed de novo assembly using Canu (<xref ref-type="bibr" rid="bib69">Koren et al., 2017</xref>) with default settings. The Canu assemblies each contained 16 contigs that mapped unambiguously to the 16 chromosomes in the reference genome. We then identified regions larger than 1000 bp that mapped to two different positions with greater than 90% sequence identity (either a reference region mapping to two or more contig regions, or a contig region mapping to two or more reference regions). Any SNPs from the original list that were found in these problematic regions were removed, resulting in a final curated list of 41,594 SNPs. We then generated an RM reference genome sequence by introducing these SNPs into the BY reference sequence. The final list of SNPs can be found in <xref ref-type="supplementary-material" rid="supp1">Supplementary file 1</xref>.</p><p>Once this list of variants is established, we can call variants for the F1 segregants. Paired-end reads obtained from sequencing with indexed Tn5 first contain the L and R index, which correspond to a specific well within a 384-well plate, and the constant mosaic end sequences. These are first parsed and removed. Reads are then processed with trimmomatic v.035 (<xref ref-type="bibr" rid="bib16">Bolger et al., 2014</xref>). Trimmed reads are then aligned to both BY and RM reference sequences using bowtie2 (<xref ref-type="bibr" rid="bib72">Langmead and Salzberg, 2012</xref>) with the following commands: <monospace>bowtie2 --local -L 20 --ma 1 -mp 3 np 0 --rdg 2,3 --rfg 2,3 --ignore-quals -i S,1,0.25 --score-min L,1,0.75</monospace>. We verify that reads align at a single location in both references and indicate the same allele in both references. From this, we produce a genotyping file that contains, for each SNP for each individual, the number of reads calling the BY and RM allele.</p></sec><sec id="s8-1-2" sec-type="appendix"><title>Probabilistic genotyping with an error-correcting Hidden Markov Model</title><p>In the absence of sequencing error and with complete coverage, the SNP genotype would be completely known. However, as discussed above, the sequencing cost for high-coverage whole-genome sequencing of 100,000 individuals is prohibitive. Instead, we impute SNP genotypes from low-coverage whole-genome sequencing, using a model that incorporates information about recombination rates and sequencing error rates.</p><p>To implement this imputation approach, we use a hidden Markov model (HMM) framework where the true genotypes <inline-formula><mml:math id="inf65"><mml:msub><mml:mi>g</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>k</mml:mi></mml:mrow></mml:msub></mml:math></inline-formula> are unobserved hidden states. For each chromosome, our model takes the form of a chain across all SNP positions (loci), where there are two possible hidden states (BY and RM) at each locus. Our desired output is the probability that each SNP has the RM (versus BY) parental genotype in each segregant, given the reads at all marker loci and the parameter values (recombination rate and sequencing error rates). In other words, for segregant i at locus <inline-formula><mml:math id="inf66"><mml:mi>k</mml:mi></mml:math></inline-formula> we want to infer:<disp-formula id="equ12"><label>(A1-1)</label><mml:math id="m12"><mml:mrow><mml:mi>p</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>g</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>k</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mtext>RM</mml:mtext><mml:mo stretchy="false">|</mml:mo><mml:mtext>reads, parameters</mml:mtext><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>≡</mml:mo><mml:msub><mml:mi>π</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>k</mml:mi></mml:mrow></mml:msub><mml:mo>.</mml:mo></mml:mrow></mml:math></disp-formula></p><p>Transition probabilities between hidden states at two neighboring loci are determined by the recombination rate and the inter-SNP distance in basepairs. For two loci <inline-formula><mml:math id="inf67"><mml:mi>k</mml:mi></mml:math></inline-formula> and <inline-formula><mml:math id="inf68"><mml:mrow><mml:mi>k</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:math></inline-formula> separated by a distance <inline-formula><mml:math id="inf69"><mml:mi>d</mml:mi></mml:math></inline-formula> basepairs, the transition matrix is as follows:<disp-formula id="equ13"><label>(A1-2)</label><mml:math id="m13"><mml:mrow><mml:msub><mml:mi>T</mml:mi><mml:mrow><mml:mi>k</mml:mi><mml:mo stretchy="false">→</mml:mo><mml:mi>k</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:mtable columnspacing="1em" rowspacing="4pt"><mml:mtr><mml:mtd/><mml:mtd><mml:mrow><mml:mtable columnspacing="1em" rowspacing="4pt"><mml:mtr><mml:mtd><mml:mi>R</mml:mi><mml:mi>M</mml:mi><mml:mspace width="thinmathspace"/><mml:mspace width="thinmathspace"/><mml:mspace width="thinmathspace"/><mml:mspace width="thinmathspace"/><mml:mspace width="thinmathspace"/><mml:mspace width="thinmathspace"/><mml:mspace width="thinmathspace"/><mml:mspace width="thinmathspace"/></mml:mtd><mml:mtd><mml:mi>B</mml:mi><mml:mi>Y</mml:mi></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mrow><mml:mtable columnspacing="1em" rowspacing="4pt"><mml:mtr><mml:mtd><mml:mi>R</mml:mi><mml:mi>M</mml:mi></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mi>B</mml:mi><mml:mi>Y</mml:mi></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:mtd><mml:mtd><mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:mtable columnspacing="1em" rowspacing="4pt"><mml:mtr><mml:mtd><mml:mn>1</mml:mn><mml:mo>−</mml:mo><mml:mi>r</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>d</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mtd><mml:mtd><mml:mi>r</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>d</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mi>r</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>d</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mtd><mml:mtd><mml:mn>1</mml:mn><mml:mo>−</mml:mo><mml:mi>r</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>d</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mtd></mml:mtr></mml:mtable><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:mrow></mml:math></disp-formula></p><p>where for a recombination rate <inline-formula><mml:math id="inf70"><mml:mi>ρ</mml:mi></mml:math></inline-formula> in centimorgans per basepair,<disp-formula id="equ14"><label>(A1-3)</label><mml:math id="m14"><mml:mrow><mml:mi>r</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>d</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mfrac><mml:mn>1</mml:mn><mml:mn>2</mml:mn></mml:mfrac></mml:mstyle><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mn>1</mml:mn><mml:mo>−</mml:mo><mml:msup><mml:mi>e</mml:mi><mml:mrow><mml:mo>−</mml:mo><mml:mn>2</mml:mn><mml:mi>d</mml:mi><mml:mi>ρ</mml:mi><mml:mrow><mml:mo>/</mml:mo></mml:mrow><mml:mn>100</mml:mn></mml:mrow></mml:msup></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>.</mml:mo></mml:mrow></mml:math></disp-formula></p><p>Note that this transition matrix is different for each pair of loci <inline-formula><mml:math id="inf71"><mml:mrow><mml:mi>k</mml:mi><mml:mo>,</mml:mo><mml:mrow><mml:mi>k</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:mrow></mml:math></inline-formula> but the same across all individuals.</p><p>Our observable quantity is not the true state of the genome, but rather read counts for the BY and RM allele at each locus. These are integer numbers rather than binary measurements, they can vary in magnitude between individuals depending on the sequencing coverage obtained, and they can disagree with the underlying state due to sequencing errors. We thus model the emission process as follows. For individual i at locus <inline-formula><mml:math id="inf72"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mi>k</mml:mi></mml:mrow></mml:mstyle></mml:math></inline-formula>, given that we observe <italic>N</italic> total reads, the probability that <inline-formula><mml:math id="inf73"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mi>N</mml:mi><mml:mo>−</mml:mo><mml:mi>m</mml:mi></mml:mrow></mml:mstyle></mml:math></inline-formula> are correct and are incorrect (representing base substitution errors) is given by a binomial distribution:<disp-formula id="equ15"><label>(A1-4)</label><mml:math id="m15"><mml:mrow><mml:mstyle displaystyle="true" scriptlevel="0"><mml:msub><mml:mi>p</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>k</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:mi>m</mml:mi><mml:mrow><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:mi>N</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mrow><mml:mo>(</mml:mo><mml:mtable columnspacing="1em" rowspacing="4pt"><mml:mtr><mml:mtd><mml:mi>N</mml:mi></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mi>m</mml:mi></mml:mtd></mml:mtr></mml:mtable><mml:mo>)</mml:mo></mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>p</mml:mi><mml:mrow><mml:mtext>err</mml:mtext><mml:mo>,</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:msup><mml:mo stretchy="false">)</mml:mo><mml:mrow><mml:mi>m</mml:mi></mml:mrow></mml:msup><mml:mo stretchy="false">(</mml:mo><mml:mn>1</mml:mn><mml:mo>−</mml:mo><mml:msub><mml:mi>p</mml:mi><mml:mrow><mml:mtext>err</mml:mtext><mml:mo>,</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:msup><mml:mo stretchy="false">)</mml:mo><mml:mrow><mml:mi>N</mml:mi><mml:mo>−</mml:mo><mml:mi>m</mml:mi></mml:mrow></mml:msup><mml:mo>.</mml:mo></mml:mstyle></mml:mrow></mml:math></disp-formula></p><p>where <inline-formula><mml:math id="inf74"><mml:mrow><mml:msub><mml:mi>p</mml:mi><mml:mrow><mml:mtext>err</mml:mtext><mml:mo>,</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mn>0.01</mml:mn></mml:mrow></mml:math></inline-formula> represents the probability of single-base substitution errors. If we define <inline-formula><mml:math id="inf75"><mml:mi>m</mml:mi></mml:math></inline-formula> to represent the number of sequencing reads with the RM allele, this gives the emission probabilities for the two hidden states:<disp-formula id="equ16"><label>(A1-5)</label><mml:math id="m16"><mml:mrow><mml:msub><mml:mi>O</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>k</mml:mi></mml:mrow></mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>m</mml:mi><mml:mo stretchy="false">|</mml:mo><mml:mi>N</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mi>g</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>k</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mi>R</mml:mi><mml:mi>M</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow><mml:mo>=</mml:mo><mml:mrow><mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:mtable rowspacing="0pt"><mml:mtr><mml:mtd columnalign="center"><mml:mi>N</mml:mi></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="center"><mml:mi>m</mml:mi></mml:mtd></mml:mtr></mml:mtable><mml:mo>)</mml:mo></mml:mrow><mml:mo>⁢</mml:mo><mml:msup><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mn>1</mml:mn><mml:mo>-</mml:mo><mml:msub><mml:mi>p</mml:mi><mml:mrow><mml:mtext>err</mml:mtext><mml:mo>,</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mi>m</mml:mi></mml:msup><mml:mo>⁢</mml:mo><mml:msup><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>p</mml:mi><mml:mrow><mml:mtext>err</mml:mtext><mml:mo>,</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mrow><mml:mi>N</mml:mi><mml:mo>-</mml:mo><mml:mi>m</mml:mi></mml:mrow></mml:msup></mml:mrow><mml:mo>,</mml:mo></mml:mrow></mml:math></disp-formula><disp-formula id="equ17"><label>(A1-6)</label><mml:math id="m17"><mml:mrow><mml:mstyle displaystyle="true" scriptlevel="0"><mml:msub><mml:mi>O</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>k</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:mi>m</mml:mi><mml:mrow><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:mi>N</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mi>g</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>k</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mi>B</mml:mi><mml:mi>Y</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mrow><mml:mo>(</mml:mo><mml:mtable columnspacing="1em" rowspacing="4pt"><mml:mtr><mml:mtd><mml:mi>N</mml:mi></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mi>m</mml:mi></mml:mtd></mml:mtr></mml:mtable><mml:mo>)</mml:mo></mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>p</mml:mi><mml:mrow><mml:mtext>err</mml:mtext><mml:mo>,</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:msup><mml:mo stretchy="false">)</mml:mo><mml:mrow><mml:mi>m</mml:mi></mml:mrow></mml:msup><mml:mo stretchy="false">(</mml:mo><mml:mn>1</mml:mn><mml:mo>−</mml:mo><mml:msub><mml:mi>p</mml:mi><mml:mrow><mml:mtext>err</mml:mtext><mml:mo>,</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:msup><mml:mo stretchy="false">)</mml:mo><mml:mrow><mml:mi>N</mml:mi><mml:mo>−</mml:mo><mml:mi>m</mml:mi></mml:mrow></mml:msup><mml:mo>.</mml:mo></mml:mstyle></mml:mrow></mml:math></disp-formula></p><p>This captures the effects of single-base substitution errors: for a single BY read among a long RM haplotype block, the probability for an erroneous emission will outweigh the probability of two close recombination events, so the model will tend to correct the error.</p><p>However, there is an additional source of error in Illumina sequencing that is especially prevalent on the Illumina NovaSeq platform: index-swapping, where a full read is assigned to the wrong sample. In this case, a read containing multiple SNPs that are observed as BY may be assigned to another individual that has a RM haplotype block around that locus. This signature –- errors in two or three sequential SNPs within the length of one read –- is not captured by the above model, which will often assign spurious breakpoints in such a situation.</p><p>To address this, one approach would be to structure the HMM as a chain of reads rather than a chain of loci, and account for index-swapping with a probability that an entire read is an error. However, this introduces significant computational complexity. Instead, motivated by the fact that in our cross we have at most a few SNPs per read, we adopt an alternative and approximately equivalent approach. Specifically, we expand our HMM to include two additional hidden states, which we term the error chains. An individual in an RM haplotype block will enter the RM error chain with a rate given by <inline-formula><mml:math id="inf76"><mml:mrow><mml:msub><mml:mi>p</mml:mi><mml:mrow><mml:mtext>err</mml:mtext><mml:mo>,</mml:mo><mml:mn>2</mml:mn></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mn>0.01</mml:mn></mml:mrow></mml:math></inline-formula>, the probability for index-swapping. While in the RM error chain states, it will emit as if it were in the BY chain (i.e. more BY than RM reads), although its true genotype state has not changed. The rate to return from the RM error chain to the RM chain, <inline-formula><mml:math id="inf77"><mml:mrow><mml:msub><mml:mi>p</mml:mi><mml:mtext>ret</mml:mtext></mml:msub><mml:mo>=</mml:mo><mml:mn>0.3</mml:mn></mml:mrow></mml:math></inline-formula>, is high enough that an individual will tend to return after a small number of loci (roughly as many as tend to occur in one read). The BY error chain follows a similar pattern, and other transitions are forbidden. The new transition matrices are<disp-formula id="equ18"><label>(A1-7)</label><mml:math id="m18"><mml:mrow><mml:msub><mml:mi>T</mml:mi><mml:mrow><mml:mi>k</mml:mi><mml:mo stretchy="false">→</mml:mo><mml:mi>k</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:mtable columnspacing="1em" rowspacing="4pt"><mml:mtr><mml:mtd/><mml:mtd><mml:mrow><mml:mtable columnspacing="1em" rowspacing="4pt"><mml:mtr><mml:mtd><mml:mspace width="thinmathspace"/><mml:mspace width="thinmathspace"/><mml:mspace width="thinmathspace"/><mml:mspace width="thinmathspace"/><mml:mspace width="thinmathspace"/><mml:mspace width="thinmathspace"/><mml:mspace width="thinmathspace"/><mml:mspace width="thinmathspace"/><mml:mspace width="thinmathspace"/><mml:mspace width="thinmathspace"/><mml:mspace width="thinmathspace"/><mml:mspace width="thinmathspace"/><mml:mspace width="thinmathspace"/><mml:mspace width="thinmathspace"/><mml:mtext>RM</mml:mtext><mml:mspace width="thinmathspace"/><mml:mspace width="thinmathspace"/><mml:mspace width="thinmathspace"/><mml:mspace width="thinmathspace"/><mml:mspace width="thinmathspace"/><mml:mspace width="thinmathspace"/><mml:mspace width="thinmathspace"/><mml:mspace width="thinmathspace"/><mml:mspace width="thinmathspace"/><mml:mspace width="thinmathspace"/><mml:mspace width="thinmathspace"/><mml:mspace width="thinmathspace"/><mml:mspace width="thinmathspace"/><mml:mspace width="thinmathspace"/><mml:mspace width="thinmathspace"/><mml:mspace width="thinmathspace"/><mml:mspace width="thinmathspace"/><mml:mspace width="thinmathspace"/><mml:mspace width="thinmathspace"/><mml:mspace width="thinmathspace"/><mml:mspace width="thinmathspace"/><mml:mspace width="thinmathspace"/><mml:mspace width="thinmathspace"/><mml:mspace width="thinmathspace"/><mml:mspace width="thinmathspace"/><mml:mspace width="thinmathspace"/><mml:mspace width="thinmathspace"/></mml:mtd><mml:mtd><mml:mtext>BY</mml:mtext><mml:mspace width="thinmathspace"/><mml:mspace width="thinmathspace"/><mml:mspace width="thinmathspace"/><mml:mspace width="thinmathspace"/><mml:mspace width="thinmathspace"/><mml:mspace width="thinmathspace"/><mml:mspace width="thinmathspace"/><mml:mspace width="thinmathspace"/><mml:mspace width="thinmathspace"/><mml:mspace width="thinmathspace"/><mml:mspace width="thinmathspace"/><mml:mspace width="thinmathspace"/><mml:mspace width="thinmathspace"/><mml:mspace width="thinmathspace"/><mml:mspace width="thinmathspace"/></mml:mtd><mml:mtd><mml:mtext>RM-err</mml:mtext></mml:mtd><mml:mtd><mml:mtext>BY-err</mml:mtext></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mrow><mml:mtable columnspacing="1em" rowspacing="4pt"><mml:mtr><mml:mtd><mml:mtext>RM</mml:mtext></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mtext>BY</mml:mtext></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mtext>RM-err</mml:mtext></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mtext>BY-err</mml:mtext></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:mtd><mml:mtd><mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:mtable columnspacing="1em" rowspacing="4pt"><mml:mtr><mml:mtd><mml:mn>1</mml:mn><mml:mo>−</mml:mo><mml:mi>r</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>d</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>−</mml:mo><mml:msub><mml:mi>p</mml:mi><mml:mrow><mml:mtext>err</mml:mtext><mml:mo>,</mml:mo><mml:mn>2</mml:mn></mml:mrow></mml:msub></mml:mtd><mml:mtd><mml:mi>r</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>d</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mtd><mml:mtd><mml:msub><mml:mi>p</mml:mi><mml:mrow><mml:mtext>err</mml:mtext><mml:mo>,</mml:mo><mml:mn>2</mml:mn></mml:mrow></mml:msub></mml:mtd><mml:mtd><mml:mn>0</mml:mn></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mi>r</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>d</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mtd><mml:mtd><mml:mn>1</mml:mn><mml:mo>−</mml:mo><mml:mi>r</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>d</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>−</mml:mo><mml:msub><mml:mi>p</mml:mi><mml:mrow><mml:mtext>err</mml:mtext><mml:mo>,</mml:mo><mml:mn>2</mml:mn></mml:mrow></mml:msub></mml:mtd><mml:mtd><mml:mn>0</mml:mn></mml:mtd><mml:mtd><mml:msub><mml:mi>p</mml:mi><mml:mrow><mml:mtext>err</mml:mtext><mml:mo>,</mml:mo><mml:mn>2</mml:mn></mml:mrow></mml:msub></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:msub><mml:mi>p</mml:mi><mml:mrow><mml:mtext>ret</mml:mtext></mml:mrow></mml:msub></mml:mtd><mml:mtd><mml:mn>0</mml:mn></mml:mtd><mml:mtd><mml:mn>1</mml:mn><mml:mo>−</mml:mo><mml:msub><mml:mi>p</mml:mi><mml:mrow><mml:mtext>ret</mml:mtext></mml:mrow></mml:msub></mml:mtd><mml:mtd><mml:mn>0</mml:mn></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mn>0</mml:mn></mml:mtd><mml:mtd><mml:msub><mml:mi>p</mml:mi><mml:mrow><mml:mtext>ret</mml:mtext></mml:mrow></mml:msub></mml:mtd><mml:mtd><mml:mn>0</mml:mn></mml:mtd><mml:mtd><mml:mn>1</mml:mn><mml:mo>−</mml:mo><mml:msub><mml:mi>p</mml:mi><mml:mrow><mml:mtext>ret</mml:mtext></mml:mrow></mml:msub></mml:mtd></mml:mtr></mml:mtable><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:mrow></mml:math></disp-formula></p><p>and the emission probabilities for the error chains are given by<disp-formula id="equ19"><label>(A1-8)</label><mml:math id="m19"><mml:mrow><mml:msub><mml:mi>O</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>k</mml:mi></mml:mrow></mml:msub><mml:mo>⁢</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi>m</mml:mi><mml:mo lspace="2.5pt" rspace="2.5pt" stretchy="false">|</mml:mo><mml:mrow><mml:mi>N</mml:mi><mml:mo>,</mml:mo><mml:mtext>RM-err</mml:mtext></mml:mrow></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow><mml:mo>=</mml:mo><mml:mrow><mml:mrow><mml:msub><mml:mi>O</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>k</mml:mi></mml:mrow></mml:msub><mml:mo>⁢</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi>m</mml:mi><mml:mo lspace="2.5pt" rspace="2.5pt" stretchy="false">|</mml:mo><mml:mrow><mml:mi>N</mml:mi><mml:mo>,</mml:mo><mml:mtext>BY</mml:mtext></mml:mrow></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow><mml:mo>,</mml:mo></mml:mrow></mml:math></disp-formula><disp-formula id="equ20"><label>(A1-9)</label><mml:math id="m20"><mml:mrow><mml:msub><mml:mi>O</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>k</mml:mi></mml:mrow></mml:msub><mml:mo>⁢</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi>m</mml:mi><mml:mo lspace="2.5pt" rspace="2.5pt" stretchy="false">|</mml:mo><mml:mrow><mml:mi>N</mml:mi><mml:mo>,</mml:mo><mml:mtext>BY-err</mml:mtext></mml:mrow></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow><mml:mo>=</mml:mo><mml:mrow><mml:mrow><mml:msub><mml:mi>O</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>k</mml:mi></mml:mrow></mml:msub><mml:mo>⁢</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi>m</mml:mi><mml:mo lspace="2.5pt" rspace="2.5pt" stretchy="false">|</mml:mo><mml:mrow><mml:mi>N</mml:mi><mml:mo>,</mml:mo><mml:mtext>RM</mml:mtext></mml:mrow></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow><mml:mo>.</mml:mo></mml:mrow></mml:math></disp-formula></p><p>This defines our HMM. We use the forward-backward algorithm to calculate forward and backward probability vectors for each individual i at each locus <inline-formula><mml:math id="inf78"><mml:mi>k</mml:mi></mml:math></inline-formula> along each chromosome, from <inline-formula><mml:math id="inf79"><mml:mrow><mml:mi>k</mml:mi><mml:mo>=</mml:mo><mml:mn>0</mml:mn></mml:mrow></mml:math></inline-formula> to <inline-formula><mml:math id="inf80"><mml:mrow><mml:mi>k</mml:mi><mml:mo>=</mml:mo><mml:mi>K</mml:mi></mml:mrow></mml:math></inline-formula>:<disp-formula id="equ21"><label>(A1-10)</label><mml:math id="m21"><mml:msub><mml:mi>f</mml:mi><mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mn>0</mml:mn></mml:mrow><mml:mo>:</mml:mo><mml:mi>k</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:mtable columnspacing="5pt"><mml:mtr><mml:mtd columnalign="center"><mml:msubsup><mml:mi>f</mml:mi><mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mn>0</mml:mn></mml:mrow><mml:mo>:</mml:mo><mml:mi>k</mml:mi></mml:mrow><mml:mtext>RM</mml:mtext></mml:msubsup></mml:mtd><mml:mtd columnalign="center"><mml:msubsup><mml:mi>f</mml:mi><mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mn>0</mml:mn></mml:mrow><mml:mo>:</mml:mo><mml:mi>k</mml:mi></mml:mrow><mml:mtext>BY</mml:mtext></mml:msubsup></mml:mtd><mml:mtd columnalign="center"><mml:msubsup><mml:mi>f</mml:mi><mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mn>0</mml:mn></mml:mrow><mml:mo>:</mml:mo><mml:mi>k</mml:mi></mml:mrow><mml:mtext>RM-err</mml:mtext></mml:msubsup></mml:mtd><mml:mtd columnalign="center"><mml:msubsup><mml:mi>f</mml:mi><mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mn>0</mml:mn></mml:mrow><mml:mo>:</mml:mo><mml:mi>k</mml:mi></mml:mrow><mml:mtext>BY-err</mml:mtext></mml:msubsup></mml:mtd></mml:mtr></mml:mtable><mml:mo>)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:mrow><mml:msub><mml:mi>f</mml:mi><mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mn>0</mml:mn></mml:mrow><mml:mo>:</mml:mo><mml:mrow><mml:mi>k</mml:mi><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:mrow></mml:msub><mml:mo>⁢</mml:mo><mml:msub><mml:mi>T</mml:mi><mml:mrow><mml:mrow><mml:mi>k</mml:mi><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mo>→</mml:mo><mml:mi>k</mml:mi></mml:mrow></mml:msub><mml:mo>⁢</mml:mo><mml:msub><mml:mi>O</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>k</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mrow><mml:mo>,</mml:mo></mml:mrow></mml:math></disp-formula><disp-formula id="equ22"><label>(A1-11)</label><mml:math id="m22"><mml:msub><mml:mi>f</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mn>0</mml:mn></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:mtable columnspacing="5pt"><mml:mtr><mml:mtd columnalign="center"><mml:mn>0.49</mml:mn></mml:mtd><mml:mtd columnalign="center"><mml:mn>0.49</mml:mn></mml:mtd><mml:mtd columnalign="center"><mml:mn>0.01</mml:mn></mml:mtd><mml:mtd columnalign="center"><mml:mn>0.01</mml:mn></mml:mtd></mml:mtr></mml:mtable><mml:mo>)</mml:mo></mml:mrow><mml:mo>,</mml:mo></mml:mrow></mml:math></disp-formula><disp-formula id="equ23"><label>(A1-12)</label><mml:math id="m23"><mml:msub><mml:mi>b</mml:mi><mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>k</mml:mi></mml:mrow><mml:mo>:</mml:mo><mml:mi>K</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:mtable rowspacing="0pt"><mml:mtr><mml:mtd columnalign="center"><mml:msubsup><mml:mi>b</mml:mi><mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>k</mml:mi></mml:mrow><mml:mo>:</mml:mo><mml:mi>K</mml:mi></mml:mrow><mml:mtext>RM</mml:mtext></mml:msubsup></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="center"><mml:msubsup><mml:mi>b</mml:mi><mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>k</mml:mi></mml:mrow><mml:mo>:</mml:mo><mml:mi>K</mml:mi></mml:mrow><mml:mtext>BY</mml:mtext></mml:msubsup></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="center"><mml:msubsup><mml:mi>b</mml:mi><mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>k</mml:mi></mml:mrow><mml:mo>:</mml:mo><mml:mi>K</mml:mi></mml:mrow><mml:mtext>RM-err</mml:mtext></mml:msubsup></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="center"><mml:msubsup><mml:mi>b</mml:mi><mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>k</mml:mi></mml:mrow><mml:mo>:</mml:mo><mml:mi>K</mml:mi></mml:mrow><mml:mtext>BY-err</mml:mtext></mml:msubsup></mml:mtd></mml:mtr></mml:mtable><mml:mo>)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:mrow><mml:msub><mml:mi>T</mml:mi><mml:mrow><mml:mi>k</mml:mi><mml:mo>→</mml:mo><mml:mrow><mml:mi>k</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:mrow></mml:msub><mml:mo>⁢</mml:mo><mml:msub><mml:mi>O</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mrow><mml:mi>k</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:mrow></mml:msub><mml:mo>⁢</mml:mo><mml:msub><mml:mi>b</mml:mi><mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mrow><mml:mi>k</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:mrow><mml:mo>:</mml:mo><mml:mi>K</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mrow><mml:mo>,</mml:mo></mml:mrow></mml:math></disp-formula><disp-formula id="equ24"><label>(A1-13)</label><mml:math id="m24"><mml:msub><mml:mi>b</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>K</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:mtable rowspacing="0pt"><mml:mtr><mml:mtd columnalign="center"><mml:mn>1</mml:mn></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="center"><mml:mn>1</mml:mn></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="center"><mml:mn>1</mml:mn></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="center"><mml:mn>1</mml:mn></mml:mtd></mml:mtr></mml:mtable><mml:mo>)</mml:mo></mml:mrow><mml:mo>.</mml:mo></mml:mrow></mml:math></disp-formula></p><p>These are then used to calculate the posterior probabilities for each individual to have the RM genotype:<disp-formula id="equ25"><label>(A1-14)</label><mml:math id="m25"><mml:mrow><mml:mrow><mml:msub><mml:mi>π</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>k</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mfrac><mml:mrow><mml:mrow><mml:msubsup><mml:mi>f</mml:mi><mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mn>0</mml:mn></mml:mrow><mml:mo>:</mml:mo><mml:mi>k</mml:mi></mml:mrow><mml:mtext>RM</mml:mtext></mml:msubsup><mml:mo>⁢</mml:mo><mml:msubsup><mml:mi>b</mml:mi><mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mrow><mml:mi>k</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:mrow><mml:mo>:</mml:mo><mml:mi>K</mml:mi></mml:mrow><mml:mtext>RM</mml:mtext></mml:msubsup></mml:mrow><mml:mo>+</mml:mo><mml:mrow><mml:msubsup><mml:mi>f</mml:mi><mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mn>0</mml:mn></mml:mrow><mml:mo>:</mml:mo><mml:mi>k</mml:mi></mml:mrow><mml:mtext>RM-err</mml:mtext></mml:msubsup><mml:mo>⁢</mml:mo><mml:msubsup><mml:mi>b</mml:mi><mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mrow><mml:mi>k</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:mrow><mml:mo>:</mml:mo><mml:mi>K</mml:mi></mml:mrow><mml:mtext>RM-err</mml:mtext></mml:msubsup></mml:mrow></mml:mrow><mml:mrow><mml:mrow><mml:msubsup><mml:mi>f</mml:mi><mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mn>0</mml:mn></mml:mrow><mml:mo>:</mml:mo><mml:mi>k</mml:mi></mml:mrow><mml:mtext>RM</mml:mtext></mml:msubsup><mml:mo>⁢</mml:mo><mml:msubsup><mml:mi>b</mml:mi><mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mrow><mml:mi>k</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:mrow><mml:mo>:</mml:mo><mml:mi>K</mml:mi></mml:mrow><mml:mtext>RM</mml:mtext></mml:msubsup></mml:mrow><mml:mo>+</mml:mo><mml:mrow><mml:msubsup><mml:mi>f</mml:mi><mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mn>0</mml:mn></mml:mrow><mml:mo>:</mml:mo><mml:mi>k</mml:mi></mml:mrow><mml:mtext>BY</mml:mtext></mml:msubsup><mml:mo>⁢</mml:mo><mml:msubsup><mml:mi>b</mml:mi><mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mrow><mml:mi>k</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:mrow><mml:mo>:</mml:mo><mml:mi>K</mml:mi></mml:mrow><mml:mtext>BY</mml:mtext></mml:msubsup></mml:mrow><mml:mo>+</mml:mo><mml:mrow><mml:msubsup><mml:mi>f</mml:mi><mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mn>0</mml:mn></mml:mrow><mml:mo>:</mml:mo><mml:mi>k</mml:mi></mml:mrow><mml:mtext>RM-err</mml:mtext></mml:msubsup><mml:mo>⁢</mml:mo><mml:msubsup><mml:mi>b</mml:mi><mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mrow><mml:mi>k</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:mrow><mml:mo>:</mml:mo><mml:mi>K</mml:mi></mml:mrow><mml:mtext>RM-err</mml:mtext></mml:msubsup></mml:mrow><mml:mo>+</mml:mo><mml:mrow><mml:msubsup><mml:mi>f</mml:mi><mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mn>0</mml:mn></mml:mrow><mml:mo>:</mml:mo><mml:mi>k</mml:mi></mml:mrow><mml:mtext>BY-err</mml:mtext></mml:msubsup><mml:mo>⁢</mml:mo><mml:msubsup><mml:mi>b</mml:mi><mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mrow><mml:mi>k</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:mrow><mml:mo>:</mml:mo><mml:mi>K</mml:mi></mml:mrow><mml:mtext>BY-err</mml:mtext></mml:msubsup></mml:mrow></mml:mrow></mml:mfrac></mml:mrow><mml:mo>.</mml:mo></mml:mrow></mml:math></disp-formula></p><p>We infer this quantity for all 99,950 individuals for all <inline-formula><mml:math id="inf81"><mml:mrow><mml:mi>L</mml:mi><mml:mo>=</mml:mo><mml:mrow><mml:mn>41</mml:mn><mml:mo>,</mml:mo><mml:mn>594</mml:mn></mml:mrow></mml:mrow></mml:math></inline-formula> SNPs across the 16 chromosomes. For each individual, we thus produce a vector <inline-formula><mml:math id="inf82"><mml:mrow><mml:msub><mml:mover accent="true"><mml:mi>π</mml:mi><mml:mo stretchy="false">→</mml:mo></mml:mover><mml:mi>i</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:mo>(</mml:mo><mml:msub><mml:mi>π</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mn>0</mml:mn></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:mi mathvariant="normal">…</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mi>π</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>L</mml:mi></mml:mrow></mml:msub><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula> which we refer to as the ‘probabilistic genotype’ for that individual, using the convention that one indicates the RM allele and 0 the BY allele. We discuss the statistical implications of using real-valued rather than binary genotypes for QTL mapping analysis in Appendix 2.</p><p>The description above assumes known values for the parameters: the error rates <inline-formula><mml:math id="inf83"><mml:msub><mml:mi>p</mml:mi><mml:mrow><mml:mtext>err</mml:mtext><mml:mo>,</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub></mml:math></inline-formula> and <inline-formula><mml:math id="inf84"><mml:msub><mml:mi>p</mml:mi><mml:mrow><mml:mtext>err</mml:mtext><mml:mo>,</mml:mo><mml:mn>2</mml:mn></mml:mrow></mml:msub></mml:math></inline-formula>, the error chain return rate <inline-formula><mml:math id="inf85"><mml:msub><mml:mi>p</mml:mi><mml:mtext>ret</mml:mtext></mml:msub></mml:math></inline-formula>, and the recombination rate <inline-formula><mml:math id="inf86"><mml:mi>ρ</mml:mi></mml:math></inline-formula>. While we have prior estimates for these values informed by our understanding of sequencing errors and recombination in this cross, we can also learn these parameters from the data. In particular, we expect the recombination rate to vary across genomic locations: for example, rates should increase near recombination hotspots and decrease near centromeres or telomeres. To allow for position-specific recombination rates, we can estimate and update the transition matrix using the Baum-Welch algorithm (<xref ref-type="bibr" rid="bib8">Baum et al., 1970</xref>). Because we observe of order 10<sup>6</sup> breakpoints in our pool, we can produce a precise recombination map that captures local variation at many scales. In practice, because our genotypes are well-constrained by sequencing already (see below), successive updates of recombination parameters do not significantly change the genotypes inferred for most segregants. Thus for the results below, we use an average recombination rate for each chromosome obtained from a single Baum-Welch iteration.</p></sec><sec id="s8-1-3" sec-type="appendix"><title>Validation and error metrics</title><p>To evaluate the accuracy of our genome inference, we used several metrics. First, from the inferred genotypes themselves, we can obtain an estimate of our uncertainty: for loci whose posterior probabilities are near 0 or 1, there is strong evidence for a particular allele from the HMM, while for those whose posterior probabilities are near 0.5, there is very weak evidence for either allele. While these are not interpretable in the sense of p-values or other established statistics, we can define an average uncertainty metric for each individual, inspired by the binomial variance:<disp-formula id="equ26"><label>(A1-15)</label><mml:math id="m26"><mml:mrow><mml:mrow><mml:msub><mml:mi>U</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>≡</mml:mo><mml:mrow><mml:mfrac><mml:mn>4</mml:mn><mml:mi>L</mml:mi></mml:mfrac><mml:mo>⁢</mml:mo><mml:mrow><mml:munderover><mml:mo largeop="true" movablelimits="false" symmetric="true">∑</mml:mo><mml:mrow><mml:mi>k</mml:mi><mml:mo>=</mml:mo><mml:mn>0</mml:mn></mml:mrow><mml:mi>L</mml:mi></mml:munderover><mml:mrow><mml:msub><mml:mi>π</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>k</mml:mi></mml:mrow></mml:msub><mml:mo>⁢</mml:mo><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mn>1</mml:mn><mml:mo>-</mml:mo><mml:msub><mml:mi>π</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>k</mml:mi></mml:mrow></mml:msub></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:mrow></mml:mrow><mml:mo>.</mml:mo></mml:mrow></mml:math></disp-formula></p><p>The factor of 4 ensures that this metric ranges from 0 to 1 (i.e. for completely uncertain genotyping, <inline-formula><mml:math id="inf87"><mml:mrow><mml:msub><mml:mi>π</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mn>0.5</mml:mn></mml:mrow></mml:math></inline-formula> for all <inline-formula><mml:math id="inf88"><mml:mi>k</mml:mi></mml:math></inline-formula>, we have <inline-formula><mml:math id="inf89"><mml:mrow><mml:msub><mml:mi>U</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:math></inline-formula>.) For each individual, we also know its coverage (average number of sequencing reads per SNP) and coverage fraction (fraction of SNPs with at least one sequencing read). We expect that our HMM estimates should have very low uncertainty when the coverage/coverage fraction is high (deeply sequenced genomes), and the uncertainty should approach the maximum of 1 when the coverage approaches 0 (no sequencing information). <xref ref-type="fig" rid="app1fig1">Appendix 1—figure 1</xref> below shows inferred genome uncertainty as a function of coverage for all segregants, indicating that our inferred genomes maintain very low uncertainty even when the coverage is as low as 0.1 X.</p><fig id="app1fig1" position="float"><label>Appendix 1—figure 1.</label><caption><title>Density plot of genome uncertainty as a function of coverage (on a log-10 scale) for all 99,950 segregants.</title><p>Marginal distributions show the coverage (above) and uncertainty (left) histograms for all segregants.</p></caption><graphic mime-subtype="tiff" mimetype="image" xlink:href="elife-73983-app1-fig1-v2.tif"/></fig><p>In addition to uncertainty, we would like a metric for accuracy, or the difference between the genotype inferred by our model from low-coverage data and that inferred from high-coverage data, which we presume to represent true genotypes. To estimate this, we selected several segregants with different coverages from our initial sequencing, ranging from 0.15 X (0.1 coverage fraction) to 2.3 X (0.73 coverage fraction), and then individually re-sequenced them to &gt;10 X coverage ( &gt; 0.99 coverage fraction). We can subtract the original low-coverage genotype from that obtained from re-sequencing to obtain the error at each locus: if the low-coverage inference is entirely wrong, the difference will equal 1, whereas if the low-coverage inference had no information, the difference will be about 0.5. For each individual we can make a histogram of this value over all loci, as shown in <xref ref-type="fig" rid="fig1">Figure 1C</xref>.</p><p>In addition, we can use the resequencing data to check the calibration of our posterior probabilities: for loci with posterior probabilities around, say, 0.4, we expect the high-coverage sequencing to show that ∼40% are indeed RM while the remaining ∼60% are BY. As we discuss in Appendix 3, we can leverage probabilistic genotype values to improve QTL inference, but this requires accurate calibration. To show this, we choose the segregant with initial sequencing coverage of 0.15 X and bin its genotype posterior probabilities into ten equal bins (0–0.1, 0.1–0.2, etc; as this individual has relatively low coverage, there are &gt;50 loci in all intermediate bins). For each bin, we count the fraction of loci that are revealed to be RM in the high-coverage sequencing data (defined as a posterior probability ≥0.99). These results are plotted in <xref ref-type="fig" rid="app1fig2">Appendix 1—figure 1</xref>. We see that the posterior probabilities are well-calibrated overall, even at intermediate values.</p><fig id="app1fig2" position="float"><label>Appendix 1—figure 2.</label><caption><title>Genome inference calibration.</title><p>For a segregant initially sequenced to 0.15 X coverage, loci were binned into 10 equal bins according to their genotype posterior probability. For each bin, we plot the average posterior probability for each bin against the fraction of those loci that were found to be RM in high-coverage sequencing data (i.e. showed a posterior probability of ≥0.99). The dashed grey line represents the expectation for perfectly calibrated posterior probabilities. Error bars are given by <inline-formula><mml:math id="inf90"><mml:mrow><mml:mi>σ</mml:mi><mml:mo>=</mml:mo><mml:msqrt><mml:mfrac><mml:mrow><mml:mover accent="true"><mml:mi>p</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover><mml:mo>⁢</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mn>1</mml:mn><mml:mo>-</mml:mo><mml:mover accent="true"><mml:mi>p</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow><mml:mi>n</mml:mi></mml:mfrac></mml:msqrt></mml:mrow></mml:math></inline-formula> where <inline-formula><mml:math id="inf91"><mml:mover accent="true"><mml:mi>p</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover></mml:math></inline-formula> is the fraction of RM loci and <inline-formula><mml:math id="inf92"><mml:mi>n</mml:mi></mml:math></inline-formula> is the total number of loci in the bin.</p></caption><graphic mime-subtype="tiff" mimetype="image" xlink:href="elife-73983-app1-fig2-v2.tif"/></fig><p>These results accord with our intuition: all uncertainty in the inferred genotypes is concentrated in the region around each breakpoint, while far away from breakpoints, the genome is inferred very accurately even when observing only about 1 in 10 variants. Since the uncertain loci near breakpoints represent a small minority of all variants, the genome inference overall is quite accurate.</p></sec><sec id="s8-1-4" sec-type="appendix"><title>Impact on QTL mapping</title><p>Despite the overall accuracy, of course it remains the case that some fraction of segregants will have substantial noise in their genotypes, and that many segregants will have substantial noise in the regions very close to recombination breakpoints. Thus it is important to quantify what impact this genotyping noise may have on our QTL inference and fine-mapping procedures. Since breakpoints are randomly distributed across individuals, we might expect that poor genotyping at a fraction of loci will add noise without introducing systematic bias. The fact that some segregants are poorly genotyped overall may be due to random effects of tagmentation or sequencing; alternatively, some segregants that are less fit in rich media will have smaller colonies at our time of processing and thus be underrepresented in our fitness assays as well as poorly covered in genotype sequencing. Thus, genotype and phenotype noise may not be purely uncorrelated, although we expect a relatively small fraction of segregants to exhibit this effect. In this section, we present some empirical characterizations of the influence of genotype noise on model inference and performance. Detailed descriptions of our approach to QTL inference and fine-mapping can be found in Appendix 3.</p><p>Our approach is to run our QTL inference pipeline on subsets of segregants that have very high and very low sequencing coverage, and to contrast the results. In particular, we divide our segregants into deciles by coverage fraction (ten subsets of 9995 segregants each). Of course, our inference is less powerful using a tenfold smaller sample size, but we expect the relative differences between the lowest and highest deciles to be representative of the differences we would observe if our entire segregant panel was sequenced to the equivalent coverage fractions. The lowest decile has a maximum coverage of 0.05 X (coverage fraction 0.03), while the highest decile has a minimum coverage of 3 X (coverage fraction 0.79). From each of these two sets, one-tenth of segregants (999 individuals) are held out for testing, while the remaining 90% are used to infer QTL models for a selection of 6 traits.</p><p>The results are shown in <xref ref-type="fig" rid="app1fig3">Appendix 1—figure 3</xref> and <xref ref-type="fig" rid="app1fig4">Appendix 1—figure 4</xref>. First, in <xref ref-type="fig" rid="app1fig3">Appendix 1—figure 3</xref>, we see that models inferred on low-coverage training sets have significantly fewer inferred QTL (left panel), but their performance in predicting phenotypes on a high-coverage held-out test set is only marginally reduced (center panel). (We also note that compared to the full panel of 99,950 segregants, the high-coverage panel of 9995 finds fewer QTL but achieves similar performance.) In contrast, the performance of the same models in predicting phenotypes on a low-coverage held-out test set is extremely poor (right panel), regardless of the coverage of the training set. Second, we see in <xref ref-type="fig" rid="app1fig4">Appendix 1—figure 4</xref> that models trained on high-coverage segregants show smaller credible intervals overall compared to models trained on low-coverage segregants. (We note that the full panel of 99,950 segregants has even smaller credible intervals than the high-coverage panel of 9995).</p><fig id="app1fig3" position="float"><label>Appendix 1—figure 3.</label><caption><title>Impact of low vs high coverage on both inference and performance of QTL models.</title><p>Left: numbers of QTL inferred for a selection of 6 traits, using either the highest-coverage decile (dark blue, coverage fraction &gt;0.79, coverage &gt;3X) or lowest-coverage decile (light blue, coverage fraction &lt;0.03, coverage &lt;0.05X) as the training set. Center: performance of the QTL models inferred with high-coverage (dark blue) or low-coverage (light blue) training sets on a high-coverage test set. Right: performance of the QTL models inferred with high-coverage (dark blue) or low-coverage (light blue) training sets on a low-coverage test set.</p></caption><graphic mime-subtype="tiff" mimetype="image" xlink:href="elife-73983-app1-fig3-v2.tif"/></fig><fig id="app1fig4" position="float"><label>Appendix 1—figure 4.</label><caption><title>Credible interval sizes in basepairs (left) or number of contained genes (right), for models inferred from high-coverage training data (dark blue) or low-coverage training data (light blue).</title><p>Distributions represent QTL from all six traits.</p></caption><graphic mime-subtype="tiff" mimetype="image" xlink:href="elife-73983-app1-fig4-v2.tif"/></fig><p>Thus, we observe that extremely noisy genotype data, such as that in our lowest-coverage decile, can reduce our power both to detect QTL and to fine-map their locations precisely. However, it does not significantly impact predictive performance, and it does not induce systematic biases in QTL positions or effect sizes. In this way, the impact of genotyping noise is very similar to the impact of reducing sample size, as each poorly-genotyped individual contributes less to power than each well-genotyped individual. From <xref ref-type="fig" rid="app1fig1">Appendix 1—figure 1</xref>, we see that the majority of our panel has essentially negligible genotyping noise, with only the bottom two deciles demonstrating significant uncertainty and error. Thus, at our current coverage distribution for our full panel, we expect our ‘effective sample size’ to be reduced by at most 10–20% compared to high-coverage sequencing of all individuals. Thus, as expected, our sequencing approach achieves a significant cost savings for only a modest decrease in power.</p><p>We also find that coverage has a much more significant impact on measuring the performance of inferred QTL models than on inferring those models. This is expected: we leverage the power of large sample sizes to infer accurate QTL models, even from noisy data; but a highly accurate model will still have poor predictive performance on individuals with uncertain or incorrect genotypes. We discuss the implications of this for variance partitioning and measuring model performance in Appendix 4.</p><p>Finally, we note from <xref ref-type="fig" rid="fig1s3">Figure 1—figure supplement 3</xref> that certain regions in the genome immediately surrounding our selection markers exhibit strongly biased allele frequencies. Specifically, the region near the MAT locus (for mating type selection) on chromosome III, the region near the HO locus (for barcode retention selection) on chromosome IV, and the region near the CAN1 locus (for haploid selection) on chromosome V show allele frequencies significantly different from 50%. The presence of these regions can impact our QTL inference in two ways. First, if true QTL are located close enough to the selective markers that their allele frequencies are very different from 50%, our power to infer them is reduced. Second, we know that small fractions of segregants can “leak” through our selection process. These segregants would be mating type MATα rather than MATa, and/or not have barcodes, and/or be unsporulated diploids rather than haploids. Segregants without barcodes would not appear in barcode amplicon sequencing for barcode association or fitness assays, so we know there can be at most a few thousand such individuals, and they will not affect phenotyping or QTL inference. Diploids or MATα individuals, on the other hand, could show strong fitness benefits in some assay environments. We estimate that diploid and MATα individuals make up ∼0.7% of our segregant pool, using a combination of computational methods (examining the marker loci in the genotype data) and biological assays (PCR of the MAT locus, growth in selection media, and examination of morphology). Despite these low numbers, our inference is sensitive enough to detect strong discrepancies in the fitnesses of these individuals, and such effects are assigned to the only locus that is systematically different in these individuals – the marker loci. Thus, in some environments we do observe QTL effects mapped to our marker loci or immediately neighboring genes, which we expect to be an artifact of a small fraction of leaker individuals rather than biologically meaningful findings.</p></sec></sec></sec></app><app id="appendix-2"><title>Appendix 2</title><sec id="s9" sec-type="appendix"><title>Phenotype inference</title><sec id="s9-1" sec-type="appendix"><title>Likelihood model for time-dependent barcode frequencies</title><p>Our raw phenotype data consists of a set of integer barcode read counts over time for each individual in each replicate assay. That is, we observe some set, <inline-formula><mml:math id="inf93"><mml:mrow><mml:msub><mml:mi>n</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>r</mml:mi></mml:mrow></mml:msub><mml:mo>⁢</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>t</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula>, of integer numbers of reads that correspond to segregant i in assay replicate <inline-formula><mml:math id="inf94"><mml:mi>r</mml:mi></mml:math></inline-formula> at timepoint <inline-formula><mml:math id="inf95"><mml:mi>t</mml:mi></mml:math></inline-formula>. These read counts reflect the competition between segregants to leave offspring in each daily dilution. We define the phenotype of each segregant genotype, i, in a given environment as its fitness, <italic>y</italic><sub><italic>i</italic></sub>. This fitness is in turn defined as the average number of descendants an individual of that genotype will leave in each daily dilution minus the population average (which is by definition 1). If <inline-formula><mml:math id="inf96"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msub><mml:mi>y</mml:mi><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mo>&gt;</mml:mo><mml:mn>0</mml:mn></mml:mrow></mml:mstyle></mml:math></inline-formula>, then segregant i is more fit than the population average and its frequency will tend to increase with time; if <inline-formula><mml:math id="inf97"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msub><mml:mi>y</mml:mi><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mo>&lt;</mml:mo><mml:mn>0</mml:mn></mml:mrow></mml:mstyle></mml:math></inline-formula>, it is less fit and will tend to decline in frequency. Our goal is then to infer the map between genotype and fitness.</p><p>As mentioned above, we could in principle conduct our QTL mapping inference directly from the raw phenotype data (i.e. <inline-formula><mml:math id="inf98"><mml:mrow><mml:msub><mml:mi>n</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>r</mml:mi></mml:mrow></mml:msub><mml:mo>⁢</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>t</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula>) by constructing a likelihood function that predicts the probability of a set of read counts given a proposed genetic architecture of the phenotype (which implies a set of predicted fitnesses <italic>y</italic><sub><italic>i</italic></sub>). However, this is impractical in practice. Thus we instead use a two-step approach. First, in this section, we infer the maximum-likelihood fitness of each segregant, <inline-formula><mml:math id="inf99"><mml:msub><mml:mover accent="true"><mml:mi>y</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover><mml:mi>i</mml:mi></mml:msub></mml:math></inline-formula>, from the integer barcode read counts, <inline-formula><mml:math id="inf100"><mml:mrow><mml:msub><mml:mi>n</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>r</mml:mi></mml:mrow></mml:msub><mml:mo>⁢</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>t</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula>. Next, in later sections, we infer the genetic basis of these fitnesses.</p><p>To infer the fitness of each segregant, we begin by defining a model for how the frequency, <inline-formula><mml:math id="inf101"><mml:msub><mml:mi>f</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>r</mml:mi></mml:mrow></mml:msub></mml:math></inline-formula> of segregant i in replicate <inline-formula><mml:math id="inf102"><mml:mi>r</mml:mi></mml:math></inline-formula> depends on time. Assuming a deterministic growth process, our definition of fitness implies that<disp-formula id="equ27"><label>(A2-1)</label><mml:math id="m27"><mml:mrow><mml:mrow><mml:mfrac><mml:mrow><mml:mo>∂</mml:mo><mml:mo>⁡</mml:mo><mml:msub><mml:mi>f</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>r</mml:mi></mml:mrow></mml:msub></mml:mrow><mml:mrow><mml:mo>∂</mml:mo><mml:mo>⁡</mml:mo><mml:mi>t</mml:mi></mml:mrow></mml:mfrac><mml:mo>=</mml:mo><mml:mrow><mml:msub><mml:mi>f</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>r</mml:mi></mml:mrow></mml:msub><mml:mo>⋅</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:msub><mml:mi>y</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>-</mml:mo><mml:mover accent="true"><mml:mi>y</mml:mi><mml:mo stretchy="false">¯</mml:mo></mml:mover></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:mrow><mml:mo>.</mml:mo></mml:mrow></mml:math></disp-formula></p><p>Here, <inline-formula><mml:math id="inf103"><mml:mrow><mml:mrow><mml:mover accent="true"><mml:mi>y</mml:mi><mml:mo stretchy="false">¯</mml:mo></mml:mover><mml:mo>⁢</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>t</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow><mml:mo>=</mml:mo><mml:mrow><mml:msub><mml:mo largeop="true" symmetric="true">∑</mml:mo><mml:mi>i</mml:mi></mml:msub><mml:mrow><mml:msub><mml:mi>f</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>r</mml:mi></mml:mrow></mml:msub><mml:mo>⁢</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>t</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>⁢</mml:mo><mml:msub><mml:mi>y</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula> is the population mean fitness of replicate <inline-formula><mml:math id="inf104"><mml:mi>r</mml:mi></mml:math></inline-formula> at time <inline-formula><mml:math id="inf105"><mml:mi>t</mml:mi></mml:math></inline-formula>. In principle, genetic drift could also affect these frequencies, but because we ensure that the bottleneck sizes of our daily dilutions are sufficiently large (∼1000 cells per barcode lineage on average), we expect these effects of drift to be negligible (see <xref ref-type="bibr" rid="bib87">Nguyen Ba et al., 2019</xref> for a discussion of this approximation). Note that we implicitly assume here that the fitness of each genotype does not depend on the frequencies of the other genotypes (i.e. no interaction effects that would lead to frequency-dependent selection). All alleles are present at frequencies close to 50% in our pool (except for those very near selected marker loci), and these frequencies do not change significantly over the course of the fitness assays (except for a few large-effect loci). Thus the effect sizes we infer for QTL are representative of their effect at ∼50% frequency. We cannot rule out that some QTL may have frequency-dependent effects far away from 50%, but these are not expected to influence our results, and a detailed investigation of frequency dependence of QTL is beyond the scope of the current study.</p><p>If we define <inline-formula><mml:math id="inf106"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msubsup><mml:mi>f</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>r</mml:mi></mml:mrow><mml:mn>0</mml:mn></mml:msubsup></mml:mrow></mml:mstyle></mml:math></inline-formula> to be the initial frequency of lineage i at time <inline-formula><mml:math id="inf107"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mi>t</mml:mi><mml:mo>=</mml:mo><mml:mn>0</mml:mn></mml:mrow></mml:mstyle></mml:math></inline-formula> in replicate <inline-formula><mml:math id="inf108"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mi>r</mml:mi></mml:mrow></mml:mstyle></mml:math></inline-formula>, then the solution to <xref ref-type="disp-formula" rid="equ27">Equation A2-1</xref> is given by:<disp-formula id="equ28"><label>(A2-2)</label><mml:math id="m28"><mml:mrow><mml:mrow><mml:mrow><mml:msub><mml:mi>f</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>r</mml:mi></mml:mrow></mml:msub><mml:mo>⁢</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>t</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow><mml:mo>=</mml:mo><mml:mfrac><mml:mrow><mml:msubsup><mml:mi>f</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>r</mml:mi></mml:mrow><mml:mn>0</mml:mn></mml:msubsup><mml:mo>⁢</mml:mo><mml:msup><mml:mi>e</mml:mi><mml:mrow><mml:msub><mml:mi>y</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>⁢</mml:mo><mml:mi>t</mml:mi></mml:mrow></mml:msup></mml:mrow><mml:mrow><mml:msub><mml:mo largeop="true" symmetric="true">∑</mml:mo><mml:mi>j</mml:mi></mml:msub><mml:mrow><mml:msubsup><mml:mi>f</mml:mi><mml:mrow><mml:mi>j</mml:mi><mml:mo>,</mml:mo><mml:mi>r</mml:mi></mml:mrow><mml:mn>0</mml:mn></mml:msubsup><mml:mo>⁢</mml:mo><mml:msup><mml:mi>e</mml:mi><mml:mrow><mml:msub><mml:mi>y</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>⁢</mml:mo><mml:mi>t</mml:mi></mml:mrow></mml:msup></mml:mrow></mml:mrow></mml:mfrac></mml:mrow><mml:mo>.</mml:mo></mml:mrow></mml:math></disp-formula></p><p>Note that the phenotypes of all individuals in one assay are not independent, as the fitness of each is defined relative to the population mean. Thus we must jointly infer the fitnesses of all segregants simultaneously, and these fitnesses are only meaningful in a relative sense (i.e. we can shift all fitnesses by a constant without affecting any predictions). For computational simplicity, a useful variable transformation is setting<disp-formula id="equ29"><label>(A2-3)</label><mml:math id="m29"><mml:mrow><mml:mrow><mml:msub><mml:mover accent="true"><mml:mi>f</mml:mi><mml:mo stretchy="false">~</mml:mo></mml:mover><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>r</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:mi>log</mml:mi><mml:mo>⁡</mml:mo><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msub><mml:mi>f</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>r</mml:mi></mml:mrow></mml:msub><mml:mo>/</mml:mo><mml:msub><mml:mi>f</mml:mi><mml:mtext>ref</mml:mtext></mml:msub></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mrow><mml:mo>.</mml:mo></mml:mrow></mml:math></disp-formula></p><p>This transformed variable represents frequency relative to a reference lineage <inline-formula><mml:math id="inf109"><mml:msub><mml:mi>f</mml:mi><mml:mtext>ref</mml:mtext></mml:msub></mml:math></inline-formula>, where <inline-formula><mml:math id="inf110"><mml:mrow><mml:msubsup><mml:mover accent="true"><mml:mi>f</mml:mi><mml:mo stretchy="false">~</mml:mo></mml:mover><mml:mtext>ref</mml:mtext><mml:mn>0</mml:mn></mml:msubsup><mml:mo>=</mml:mo><mml:mn>0</mml:mn></mml:mrow></mml:math></inline-formula> and we constrain <inline-formula><mml:math id="inf111"><mml:mrow><mml:msub><mml:mi>y</mml:mi><mml:mtext>ref</mml:mtext></mml:msub><mml:mo>=</mml:mo><mml:mn>0</mml:mn></mml:mrow></mml:math></inline-formula> to solve the system uniquely. In each assay, we assign the lineage with highest total read counts to be the reference lineage. Expected frequencies at time <inline-formula><mml:math id="inf112"><mml:mi>t</mml:mi></mml:math></inline-formula> can now be written as:<disp-formula id="equ30"><label>(A2-4)</label><mml:math id="m30"><mml:mrow><mml:mrow><mml:mrow><mml:msub><mml:mover accent="true"><mml:mi>f</mml:mi><mml:mo stretchy="false">~</mml:mo></mml:mover><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>r</mml:mi></mml:mrow></mml:msub><mml:mo>⁢</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>t</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow><mml:mo>=</mml:mo><mml:mfrac><mml:msup><mml:mi>e</mml:mi><mml:mrow><mml:msubsup><mml:mover accent="true"><mml:mi>f</mml:mi><mml:mo stretchy="false">~</mml:mo></mml:mover><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>r</mml:mi></mml:mrow><mml:mn>0</mml:mn></mml:msubsup><mml:mo>+</mml:mo><mml:mrow><mml:msub><mml:mi>y</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>⁢</mml:mo><mml:mi>t</mml:mi></mml:mrow></mml:mrow></mml:msup><mml:mrow><mml:msub><mml:mo largeop="true" symmetric="true">∑</mml:mo><mml:mi>j</mml:mi></mml:msub><mml:msup><mml:mi>e</mml:mi><mml:mrow><mml:msubsup><mml:mover accent="true"><mml:mi>f</mml:mi><mml:mo stretchy="false">~</mml:mo></mml:mover><mml:mrow><mml:mi>j</mml:mi><mml:mo>,</mml:mo><mml:mi>r</mml:mi></mml:mrow><mml:mn>0</mml:mn></mml:msubsup><mml:mo>+</mml:mo><mml:mrow><mml:msub><mml:mi>y</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>⁢</mml:mo><mml:mi>t</mml:mi></mml:mrow></mml:mrow></mml:msup></mml:mrow></mml:mfrac></mml:mrow><mml:mo>.</mml:mo></mml:mrow></mml:math></disp-formula></p><p>Note here that we allow each lineage to have different initial frequencies <inline-formula><mml:math id="inf113"><mml:msubsup><mml:mi>f</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>r</mml:mi></mml:mrow><mml:mn>0</mml:mn></mml:msubsup></mml:math></inline-formula> in different replicates, but the fitness <italic>y</italic><sub><italic>i</italic></sub> is constrained to be the same across replicates.</p><p>Using this model, we wish to maximize the overall likelihood of the data with respect to the fitnesses of all lineages. However, we do not observe the frequencies directly, but instead observe them through the read counts <inline-formula><mml:math id="inf114"><mml:mrow><mml:msub><mml:mi>n</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>r</mml:mi></mml:mrow></mml:msub><mml:mo>⁢</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>t</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula> at each timepoint in each replicate. Because these read counts can be thought of as arising from a sampling process, we might expect the read counts to be multinomially distributed. However, in practice the noise in this process (arising from a combination of DNA extraction, PCR amplification, sequencing, and other effects) often tends to be overdispersed, and can vary substantially between assays (<xref ref-type="bibr" rid="bib87">Nguyen Ba et al., 2019</xref>). One simple and popular method to account for overdispersion is found in the quasi-likelihood framework (<xref ref-type="bibr" rid="bib81">McCullagh, 1983</xref>) because simple quasi-likelihood models add a single multiplicative parameter that inflates the variance function of well-known distributions within the exponential family. In this framework, we cannot write explicitly a functional form for the distribution that represents the data. Nevertheless, quasi-likelihood approaches remain useful because least-squares algorithms to optimize generalized linear models, such as iterative reweighted least-squares, only require the mean and variance function. When the variance function of a probability distribution is simply inflated by a constant factor, this factor cancels out during optimization, and therefore approaches that obtain maximum likelihood estimates also obtain the maximum quasi-likelihood estimates. If we were to write a sampling process for the number of reads without any overdispersion, we could consider data being multinomially distributed with mean <inline-formula><mml:math id="inf115"><mml:mrow><mml:mrow><mml:msub><mml:mover accent="true"><mml:mi>n</mml:mi><mml:mo stretchy="false">¯</mml:mo></mml:mover><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>r</mml:mi></mml:mrow></mml:msub><mml:mo>⁢</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>t</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow><mml:mo>=</mml:mo><mml:mrow><mml:msub><mml:mover accent="true"><mml:mi>f</mml:mi><mml:mo stretchy="false">~</mml:mo></mml:mover><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>r</mml:mi></mml:mrow></mml:msub><mml:mo>⁢</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>t</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>⁢</mml:mo><mml:mrow><mml:msub><mml:mo largeop="true" symmetric="true">∑</mml:mo><mml:mi>i</mml:mi></mml:msub><mml:mrow><mml:msub><mml:mi>n</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>r</mml:mi></mml:mrow></mml:msub><mml:mo>⁢</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>t</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula> and variance <inline-formula><mml:math id="inf116"><mml:mrow><mml:msubsup><mml:mi>σ</mml:mi><mml:mi>i</mml:mi><mml:mn>2</mml:mn></mml:msubsup><mml:mo>=</mml:mo><mml:mrow><mml:msub><mml:mover accent="true"><mml:mi>n</mml:mi><mml:mo stretchy="false">¯</mml:mo></mml:mover><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>r</mml:mi></mml:mrow></mml:msub><mml:mo>⁢</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>t</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>⁢</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mn>1</mml:mn><mml:mo>-</mml:mo><mml:mrow><mml:msub><mml:mover accent="true"><mml:mi>f</mml:mi><mml:mo stretchy="false">~</mml:mo></mml:mover><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>r</mml:mi></mml:mrow></mml:msub><mml:mo>⁢</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>t</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula>. Thus, for the quasi-likelihood approach, we can modify the variance to be <inline-formula><mml:math id="inf117"><mml:mrow><mml:msubsup><mml:mi>σ</mml:mi><mml:mi>i</mml:mi><mml:mn>2</mml:mn></mml:msubsup><mml:mo>=</mml:mo><mml:mrow><mml:mrow><mml:mi>ψ</mml:mi><mml:mo>⋅</mml:mo><mml:msub><mml:mover accent="true"><mml:mi>n</mml:mi><mml:mo stretchy="false">¯</mml:mo></mml:mover><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>r</mml:mi></mml:mrow></mml:msub></mml:mrow><mml:mo>⁢</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>t</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>⁢</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mn>1</mml:mn><mml:mo>-</mml:mo><mml:mrow><mml:msub><mml:mover accent="true"><mml:mi>f</mml:mi><mml:mo stretchy="false">~</mml:mo></mml:mover><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>r</mml:mi></mml:mrow></mml:msub><mml:mo>⁢</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>t</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula>, with <inline-formula><mml:math id="inf118"><mml:mi>ψ</mml:mi></mml:math></inline-formula> the overdispersion parameter. This overdispersion parameter does not alter the parameter estimates but simply inflates their standard error (<inline-formula><mml:math id="inf119"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msub><mml:mrow><mml:mover><mml:mi>y</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">→</mml:mo><mml:mrow/><mml:mrow><mml:mi mathvariant="script">N</mml:mi></mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>y</mml:mi><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:mi>ψ</mml:mi><mml:msubsup><mml:mi>σ</mml:mi><mml:mrow><mml:mtext>i</mml:mtext></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msubsup><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mstyle></mml:math></inline-formula>), and can be fit from the data for each assay (one parameter per environment).</p><p>The overdispersion parameter can be estimated in several ways. A simple and consistent estimator relies on the Pearson goodness-of-fit (<xref ref-type="bibr" rid="bib82">McCullagh and Nelder, 1989</xref>), which estimates <inline-formula><mml:math id="inf120"><mml:mi>ψ</mml:mi></mml:math></inline-formula> as:<disp-formula id="equ31"><label>(A2-5)</label><mml:math id="m31"><mml:mrow><mml:mrow><mml:mover accent="true"><mml:mi>ψ</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover><mml:mo>=</mml:mo><mml:mfrac><mml:msup><mml:mi>χ</mml:mi><mml:mn>2</mml:mn></mml:msup><mml:mtext>dof</mml:mtext></mml:mfrac></mml:mrow><mml:mo>,</mml:mo></mml:mrow></mml:math></disp-formula></p><p>where <inline-formula><mml:math id="inf121"><mml:msup><mml:mi>χ</mml:mi><mml:mn>2</mml:mn></mml:msup></mml:math></inline-formula> is the usual Pearson goodness-of-fit statistic and dof is the number of degrees of freedom. However, this moment estimator can be biased when the asymptotics of the Pearson goodness-of-fit are not met, specifically when many lineages have low read counts.</p><p>We turn instead to a deviance based estimator. If the data were not overdispersed, then it is well-known that the likelihood ratio test statistic (or the deviance) between a parameter-rich statistical model and a nested (more constrained) model is asymptotically distributed as a chi-squared distribution with the usual degrees of freedom:<disp-formula id="equ32"><label>(A2-6)</label><mml:math id="m32"><mml:mrow><mml:mrow><mml:mi>D</mml:mi><mml:mo>=</mml:mo><mml:mrow><mml:mi>L</mml:mi><mml:mo>⁢</mml:mo><mml:mi>R</mml:mi><mml:mo>⁢</mml:mo><mml:mi>T</mml:mi></mml:mrow><mml:mo>=</mml:mo><mml:mrow><mml:mo>-</mml:mo><mml:mrow><mml:mn>2</mml:mn><mml:mo>⋅</mml:mo><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:mrow><mml:mrow><mml:mi>log</mml:mi><mml:mo>⁡</mml:mo><mml:msub><mml:mi>L</mml:mi><mml:mn>0</mml:mn></mml:msub></mml:mrow><mml:mo>-</mml:mo><mml:mrow><mml:mi>log</mml:mi><mml:mo>⁡</mml:mo><mml:msub><mml:mi>L</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:mrow><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:mrow></mml:mrow><mml:mo>∼</mml:mo><mml:msubsup><mml:mi>χ</mml:mi><mml:mtext>dof</mml:mtext><mml:mn>2</mml:mn></mml:msubsup></mml:mrow><mml:mo>.</mml:mo></mml:mrow></mml:math></disp-formula></p><p>When data is overdispersed with overdispersion factor <inline-formula><mml:math id="inf122"><mml:mi>ψ</mml:mi></mml:math></inline-formula>, it is instead the scaled deviance that follows a chi-squared distribution, with:<disp-formula id="equ33"><label>(A2-7)</label><mml:math id="m33"><mml:mrow><mml:mrow><mml:msup><mml:mi>D</mml:mi><mml:mo>*</mml:mo></mml:msup><mml:mo>=</mml:mo><mml:mfrac><mml:mi>D</mml:mi><mml:mi>ψ</mml:mi></mml:mfrac><mml:mo>∼</mml:mo><mml:msubsup><mml:mi>χ</mml:mi><mml:mtext>dof</mml:mtext><mml:mn>2</mml:mn></mml:msubsup></mml:mrow><mml:mo>.</mml:mo></mml:mrow></mml:math></disp-formula></p><p>This yields another estimate of <inline-formula><mml:math id="inf123"><mml:mi>ψ</mml:mi></mml:math></inline-formula>:<disp-formula id="equ34"><label>(A2-8)</label><mml:math id="m34"><mml:mrow><mml:mrow><mml:mover accent="true"><mml:mi>ψ</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover><mml:mo>=</mml:mo><mml:mfrac><mml:mi>D</mml:mi><mml:mtext>dof</mml:mtext></mml:mfrac><mml:mo>=</mml:mo><mml:mfrac><mml:mrow><mml:mo>-</mml:mo><mml:mrow><mml:mn>2</mml:mn><mml:mo>⁢</mml:mo><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:mrow><mml:mrow><mml:mi>log</mml:mi><mml:mo>⁡</mml:mo><mml:msub><mml:mi>L</mml:mi><mml:mn>0</mml:mn></mml:msub></mml:mrow><mml:mo>-</mml:mo><mml:mrow><mml:mi>log</mml:mi><mml:mo>⁡</mml:mo><mml:msub><mml:mi>L</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:mrow><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:mrow></mml:mrow><mml:mtext>dof</mml:mtext></mml:mfrac></mml:mrow><mml:mo>,</mml:mo></mml:mrow></mml:math></disp-formula></p><p>under the assumption that deviations between observed and expected are only attributed to the overdispersed variance, and not to misspecifications of the model (due to an omitted variable, for example). Here, our restricted model is our final regression model (<italic>L</italic><sub>0</sub> is the likelihood of the data under the optimized model described above) while the larger model is one that can fit the observed read counts perfectly (<italic>L</italic><sub>1</sub> is the likelihood of the data under the same multinomial sampling noise model, but with an independent parameter for every lineage at every timepoint in every replicate). This estimate is typically very similar to the Pearson goodness-of-fit estimator, but less biased when the number of low-read-count lineages is large. The estimated scaling factor <inline-formula><mml:math id="inf124"><mml:mover accent="true"><mml:mi>ψ</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover></mml:math></inline-formula> obtained in this way will be used to obtain correct estimates of the standard errors in the lineage fitnesses, which are used in Appendix 4, and is reported in <xref ref-type="supplementary-material" rid="supp6">Supplementary file 6</xref>.</p><p>Under this multinomial model, the optimized estimates for the lineage fitnesses in the quasi-likelihood framework are the same as optimizing the following likelihood function of all of the read count data given the parameters:<disp-formula id="equ35"><label>(A2-9)</label><mml:math id="m35"><mml:mrow><mml:mrow><mml:mrow><mml:mi class="ltx_font_mathcaligraphic">ℒ</mml:mi><mml:mo>⁢</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:mi>n</mml:mi><mml:mo stretchy="false">}</mml:mo></mml:mrow><mml:mo lspace="2.5pt" rspace="2.5pt" stretchy="false">|</mml:mo><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:mi>y</mml:mi><mml:mo>,</mml:mo><mml:msup><mml:mover accent="true"><mml:mi>f</mml:mi><mml:mo stretchy="false">~</mml:mo></mml:mover><mml:mn>0</mml:mn></mml:msup><mml:mo stretchy="false">}</mml:mo></mml:mrow></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow><mml:mo>=</mml:mo><mml:mrow><mml:mi>C</mml:mi><mml:mo>⋅</mml:mo><mml:mrow><mml:munderover><mml:mo largeop="true" movablelimits="false" symmetric="true">∏</mml:mo><mml:mrow><mml:mi>t</mml:mi><mml:mo>,</mml:mo><mml:mi>r</mml:mi><mml:mo>,</mml:mo><mml:mi>i</mml:mi></mml:mrow><mml:mrow><mml:mi>T</mml:mi><mml:mo>,</mml:mo><mml:mi>R</mml:mi><mml:mo>,</mml:mo><mml:mi>N</mml:mi></mml:mrow></mml:munderover><mml:msup><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msub><mml:mover accent="true"><mml:mi>f</mml:mi><mml:mo stretchy="false">~</mml:mo></mml:mover><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>r</mml:mi></mml:mrow></mml:msub><mml:mo>⁢</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>t</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mrow><mml:msub><mml:mi>n</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>r</mml:mi></mml:mrow></mml:msub><mml:mo>⁢</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>t</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:msup></mml:mrow></mml:mrow></mml:mrow><mml:mo>,</mml:mo></mml:mrow></mml:math></disp-formula></p><p>where the product is taken over all timepoints <inline-formula><mml:math id="inf125"><mml:mi>t</mml:mi></mml:math></inline-formula>, replicates <inline-formula><mml:math id="inf126"><mml:mi>r</mml:mi></mml:math></inline-formula>, and individuals i, and <inline-formula><mml:math id="inf127"><mml:mi>C</mml:mi></mml:math></inline-formula> represents a constant factor. Again, here <inline-formula><mml:math id="inf128"><mml:mrow><mml:msub><mml:mi>n</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>r</mml:mi></mml:mrow></mml:msub><mml:mo>⁢</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>t</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula> represents the barcode read counts observed for lineage <inline-formula><mml:math id="inf129"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:mstyle></mml:math></inline-formula> in replicate assay <inline-formula><mml:math id="inf130"><mml:mi>r</mml:mi></mml:math></inline-formula> at timepoint <inline-formula><mml:math id="inf131"><mml:mi>t</mml:mi></mml:math></inline-formula>, and <inline-formula><mml:math id="inf132"><mml:mrow><mml:msub><mml:mover accent="true"><mml:mi>f</mml:mi><mml:mo stretchy="false">~</mml:mo></mml:mover><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>r</mml:mi></mml:mrow></mml:msub><mml:mo>⁢</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>t</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula> represents the expected frequency of lineage <inline-formula><mml:math id="inf133"><mml:mi>i</mml:mi></mml:math></inline-formula> in replicate assay <inline-formula><mml:math id="inf134"><mml:mi>r</mml:mi></mml:math></inline-formula> as calculated from <xref ref-type="disp-formula" rid="equ30">Equation (A2-4)</xref> for the parameters <italic>y</italic><sub><italic>i</italic></sub> and <inline-formula><mml:math id="inf135"><mml:msubsup><mml:mover accent="true"><mml:mi>f</mml:mi><mml:mo stretchy="false">~</mml:mo></mml:mover><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>r</mml:mi></mml:mrow><mml:mn>0</mml:mn></mml:msubsup></mml:math></inline-formula>.</p><p>Our goal is to optimize this likelihood function to find the maximum-likelihood estimates of the fitnesses, <inline-formula><mml:math id="inf136"><mml:mover accent="true"><mml:msub><mml:mi>y</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo stretchy="false">^</mml:mo></mml:mover></mml:math></inline-formula>. To do so, we use a preconditioned nonlinear conjugate gradient approach (<xref ref-type="bibr" rid="bib52">Hager and Zhang, 2006</xref>). We first calculate the partial derivatives of <inline-formula><mml:math id="inf137"><mml:mrow><mml:mi>log</mml:mi><mml:mo>⁡</mml:mo><mml:mi class="ltx_font_mathcaligraphic">ℒ</mml:mi></mml:mrow></mml:math></inline-formula>:<disp-formula id="equ36"><label>(A2-10)</label><mml:math id="m36"><mml:mfrac><mml:mrow><mml:mrow><mml:mo>∂</mml:mo><mml:mo>⁡</mml:mo><mml:mi>log</mml:mi></mml:mrow><mml:mo>⁡</mml:mo><mml:mi class="ltx_font_mathcaligraphic">ℒ</mml:mi></mml:mrow><mml:mrow><mml:mo>∂</mml:mo><mml:mo>⁡</mml:mo><mml:msub><mml:mi>y</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:mfrac><mml:mo>=</mml:mo><mml:mrow><mml:mrow><mml:mstyle displaystyle="true" scriptlevel="0"><mml:munderover><mml:mo largeop="true" movablelimits="false" symmetric="true">∑</mml:mo><mml:mrow><mml:mi>t</mml:mi><mml:mo>,</mml:mo><mml:mi>r</mml:mi></mml:mrow><mml:mrow><mml:mi>T</mml:mi><mml:mo>,</mml:mo><mml:mi>R</mml:mi></mml:mrow></mml:munderover></mml:mstyle><mml:mrow><mml:mi>t</mml:mi><mml:mo>⁢</mml:mo><mml:mrow><mml:mo>[</mml:mo><mml:mrow><mml:mrow><mml:msub><mml:mi>n</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>r</mml:mi></mml:mrow></mml:msub><mml:mo>⁢</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>t</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow><mml:mo>-</mml:mo><mml:mrow><mml:mrow><mml:mrow><mml:msub><mml:mi>n</mml:mi><mml:mrow><mml:mtext>tot</mml:mtext><mml:mo>,</mml:mo><mml:mi>r</mml:mi></mml:mrow></mml:msub><mml:mo>⁢</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>t</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow><mml:mo>⋅</mml:mo><mml:msub><mml:mover accent="true"><mml:mi>f</mml:mi><mml:mo stretchy="false">~</mml:mo></mml:mover><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>r</mml:mi></mml:mrow></mml:msub></mml:mrow><mml:mo>⁢</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>t</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:mrow><mml:mo>]</mml:mo></mml:mrow></mml:mrow></mml:mrow><mml:mo>,</mml:mo></mml:mrow></mml:math></disp-formula><disp-formula id="equ37"><label>(A2-11)</label><mml:math id="m37"><mml:mfrac><mml:mrow><mml:mrow><mml:mo>∂</mml:mo><mml:mo>⁡</mml:mo><mml:mi>log</mml:mi></mml:mrow><mml:mo>⁡</mml:mo><mml:mi class="ltx_font_mathcaligraphic">ℒ</mml:mi></mml:mrow><mml:mrow><mml:mo>∂</mml:mo><mml:mo>⁡</mml:mo><mml:msubsup><mml:mover accent="true"><mml:mi>f</mml:mi><mml:mo stretchy="false">~</mml:mo></mml:mover><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>r</mml:mi></mml:mrow><mml:mn>0</mml:mn></mml:msubsup></mml:mrow></mml:mfrac><mml:mo>=</mml:mo><mml:mrow><mml:mrow><mml:mstyle displaystyle="true" scriptlevel="0"><mml:munderover><mml:mo largeop="true" movablelimits="false" symmetric="true">∑</mml:mo><mml:mi>t</mml:mi><mml:mi>T</mml:mi></mml:munderover></mml:mstyle><mml:mrow><mml:mo>[</mml:mo><mml:mrow><mml:mrow><mml:msub><mml:mi>n</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>r</mml:mi></mml:mrow></mml:msub><mml:mo>⁢</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>t</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow><mml:mo>-</mml:mo><mml:mrow><mml:mrow><mml:mrow><mml:msub><mml:mi>n</mml:mi><mml:mrow><mml:mtext>tot</mml:mtext><mml:mo>,</mml:mo><mml:mi>r</mml:mi></mml:mrow></mml:msub><mml:mo>⁢</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>t</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow><mml:mo>⋅</mml:mo><mml:msub><mml:mover accent="true"><mml:mi>f</mml:mi><mml:mo stretchy="false">~</mml:mo></mml:mover><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>r</mml:mi></mml:mrow></mml:msub></mml:mrow><mml:mo>⁢</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>t</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:mrow><mml:mo>]</mml:mo></mml:mrow></mml:mrow><mml:mo>,</mml:mo></mml:mrow></mml:math></disp-formula></p><p>where <inline-formula><mml:math id="inf138"><mml:mrow><mml:mrow><mml:msub><mml:mi>n</mml:mi><mml:mrow><mml:mtext>tot</mml:mtext><mml:mo>,</mml:mo><mml:mi>r</mml:mi></mml:mrow></mml:msub><mml:mo>⁢</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>t</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow><mml:mo>=</mml:mo><mml:mrow><mml:msub><mml:mo largeop="true" symmetric="true">∑</mml:mo><mml:mi>i</mml:mi></mml:msub><mml:mrow><mml:msub><mml:mi>n</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>r</mml:mi></mml:mrow></mml:msub><mml:mo>⁢</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>t</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula> is the total number of reads from timepoint <inline-formula><mml:math id="inf139"><mml:mi>t</mml:mi></mml:math></inline-formula> in replicate assay <inline-formula><mml:math id="inf140"><mml:mi>r</mml:mi></mml:math></inline-formula>. As a preconditioner, we use an approximation of the inverse Hessian, which can be assumed to be approximately diagonally block dominant when the number of lineages is large. The dominant second derivatives used to approximate the inverse Hessian are:<disp-formula id="equ38"><label>(A2-12)</label><mml:math id="m38"><mml:mfrac><mml:mrow><mml:mrow><mml:msup><mml:mo>∂</mml:mo><mml:mn>2</mml:mn></mml:msup><mml:mo>⁡</mml:mo><mml:mi>log</mml:mi></mml:mrow><mml:mo>⁡</mml:mo><mml:mi class="ltx_font_mathcaligraphic">ℒ</mml:mi></mml:mrow><mml:mrow><mml:mo>∂</mml:mo><mml:mo>⁡</mml:mo><mml:msubsup><mml:mi>y</mml:mi><mml:mi>i</mml:mi><mml:mn>2</mml:mn></mml:msubsup></mml:mrow></mml:mfrac><mml:mo>=</mml:mo><mml:mrow><mml:mrow><mml:mo>-</mml:mo><mml:mrow><mml:mstyle displaystyle="true" scriptlevel="0"><mml:munderover><mml:mo largeop="true" movablelimits="false" symmetric="true">∑</mml:mo><mml:mrow><mml:mi>t</mml:mi><mml:mo>,</mml:mo><mml:mi>r</mml:mi></mml:mrow><mml:mrow><mml:mi>T</mml:mi><mml:mo>,</mml:mo><mml:mi>R</mml:mi></mml:mrow></mml:munderover></mml:mstyle><mml:mrow><mml:mrow><mml:msup><mml:mi>t</mml:mi><mml:mn>2</mml:mn></mml:msup><mml:mo>⋅</mml:mo><mml:msub><mml:mi>n</mml:mi><mml:mrow><mml:mtext>tot</mml:mtext><mml:mo>,</mml:mo><mml:mi>r</mml:mi></mml:mrow></mml:msub></mml:mrow><mml:mo>⁢</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>t</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>⁢</mml:mo><mml:msub><mml:mover accent="true"><mml:mi>f</mml:mi><mml:mo stretchy="false">~</mml:mo></mml:mover><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>r</mml:mi></mml:mrow></mml:msub><mml:mo>⁢</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>t</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>⁢</mml:mo><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mn>1</mml:mn><mml:mo>-</mml:mo><mml:mrow><mml:msub><mml:mover accent="true"><mml:mi>f</mml:mi><mml:mo stretchy="false">~</mml:mo></mml:mover><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>r</mml:mi></mml:mrow></mml:msub><mml:mo>⁢</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>t</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:mrow><mml:mo>,</mml:mo></mml:mrow></mml:math></disp-formula><disp-formula id="equ39"><label>(A2-13)</label><mml:math id="m39"><mml:mrow><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mfrac><mml:mrow><mml:msup><mml:mi mathvariant="normal">∂</mml:mi><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msup><mml:mi>log</mml:mi><mml:mo>⁡</mml:mo><mml:mrow><mml:mi mathvariant="script">L</mml:mi></mml:mrow></mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="normal">∂</mml:mi><mml:msubsup><mml:mrow><mml:mover><mml:mi>f</mml:mi><mml:mo stretchy="false">~</mml:mo></mml:mover></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>r</mml:mi></mml:mrow><mml:mrow><mml:mn>0</mml:mn></mml:mrow></mml:msubsup><mml:msup><mml:mo stretchy="false">)</mml:mo><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msup></mml:mrow></mml:mfrac></mml:mstyle><mml:mo>=</mml:mo><mml:mo>−</mml:mo><mml:munderover><mml:mo>∑</mml:mo><mml:mrow><mml:mi>t</mml:mi></mml:mrow><mml:mrow><mml:mi>T</mml:mi></mml:mrow></mml:munderover><mml:msub><mml:mi>n</mml:mi><mml:mrow><mml:mtext>tot</mml:mtext><mml:mo>,</mml:mo><mml:mi>r</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:mi>t</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:msub><mml:mrow><mml:mover><mml:mi>f</mml:mi><mml:mo stretchy="false">~</mml:mo></mml:mover></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>r</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:mi>t</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mn>1</mml:mn><mml:mo>−</mml:mo><mml:msub><mml:mrow><mml:mover><mml:mi>f</mml:mi><mml:mo stretchy="false">~</mml:mo></mml:mover></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>r</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:mi>t</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>,</mml:mo></mml:mstyle></mml:mrow></mml:math></disp-formula><disp-formula id="equ40"><label>(A2-14)</label><mml:math id="m40"><mml:mfrac><mml:mrow><mml:mrow><mml:msup><mml:mo>∂</mml:mo><mml:mn>2</mml:mn></mml:msup><mml:mo>⁡</mml:mo><mml:mi>log</mml:mi></mml:mrow><mml:mo>⁡</mml:mo><mml:mi class="ltx_font_mathcaligraphic">ℒ</mml:mi></mml:mrow><mml:mrow><mml:mrow><mml:mo>∂</mml:mo><mml:mo>⁡</mml:mo><mml:msub><mml:mi>y</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mrow><mml:mo>⁢</mml:mo><mml:mrow><mml:mo>∂</mml:mo><mml:mo>⁡</mml:mo><mml:msubsup><mml:mover accent="true"><mml:mi>f</mml:mi><mml:mo stretchy="false">~</mml:mo></mml:mover><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>r</mml:mi></mml:mrow><mml:mn>0</mml:mn></mml:msubsup></mml:mrow></mml:mrow></mml:mfrac><mml:mo>=</mml:mo><mml:mrow><mml:mrow><mml:mo>-</mml:mo><mml:mrow><mml:mstyle displaystyle="true" scriptlevel="0"><mml:munderover><mml:mo largeop="true" movablelimits="false" symmetric="true">∑</mml:mo><mml:mi>t</mml:mi><mml:mi>T</mml:mi></mml:munderover></mml:mstyle><mml:mrow><mml:mrow><mml:mi>t</mml:mi><mml:mo>⋅</mml:mo><mml:msub><mml:mi>n</mml:mi><mml:mrow><mml:mtext>tot</mml:mtext><mml:mo>,</mml:mo><mml:mi>r</mml:mi></mml:mrow></mml:msub></mml:mrow><mml:mo>⁢</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>t</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>⁢</mml:mo><mml:msub><mml:mover accent="true"><mml:mi>f</mml:mi><mml:mo stretchy="false">~</mml:mo></mml:mover><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>r</mml:mi></mml:mrow></mml:msub><mml:mo>⁢</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>t</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>⁢</mml:mo><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mn>1</mml:mn><mml:mo>-</mml:mo><mml:mrow><mml:msub><mml:mover accent="true"><mml:mi>f</mml:mi><mml:mo stretchy="false">~</mml:mo></mml:mover><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>r</mml:mi></mml:mrow></mml:msub><mml:mo>⁢</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>t</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:mrow><mml:mo>.</mml:mo></mml:mrow></mml:math></disp-formula></p><p>The algorithm is terminated when the gradient norm is sufficiently small, typically on the order of square root of machine-epsilon. Nonlinear conjugate gradient algorithms differ in their choice of the conjugate direction; we use the updates as in CG_DESCENT (<xref ref-type="bibr" rid="bib53">Hager and Zhang, 2013</xref>).</p></sec><sec id="s9-2" sec-type="appendix"><title>Imposing a prior to deal with low-frequency lineages</title><p>In some cases, the likelihood surface is poorly determined, for example when many lineages are present at low enough frequencies that they do not appear in the sequencing reads at later timepoints. These lineages tend to have relatively low fitness, because they are present at low frequencies and/or decline in frequency over time, but their fitness parameters (and error on these parameters) cannot be accurately determined. Their read count trajectories are consistent with a wide range of negative fitness values, including extremely large ones. We cannot simply remove these segregants from the phenotyping assay using a threshold on read counts, as this would introduce biases (because low-fitness segregants would be preferentially removed). Because the distribution of frequencies is approximately log-normal, it is also impractical to better sample these low-frequency lineages by simply increasing the number of reads.</p><p>When the proportion of lineages with sufficiently low fitness is very high, this introduces two problems. First, the fitness inference algorithm may never terminate at all, as the likelihood surface is flat around many possible values of estimated fitnesses while the norm of the first derivatives can remain high. Second, even if the inference terminates, the incorrect fitness estimates may bias the estimation of QTL effect sizes (if low-fitness segregants tend to have a given allele at a specific causal locus and fitness estimates of these segregants have consistently higher noise).</p><p>One approach to solving these problems is to impose a bias in the estimation of the fitness of lineages, informed by our expectations about the underlying genomic architecture of the trait. In a Bayesian framework, we would like to impose a prior on the population fitness distribution that will constrain fitness values for low-frequency (weak-evidence) lineages, according to our assumptions, but that will not strongly bias the fitness values for high-frequency (strong-evidence) lineages. In addition to allowing the inference to terminate, this framework would also provide an error estimate for each lineage that, for low-frequency lineages, is dominated by the prior, and for high-frequency lineages, is dominated by the read count evidence.</p><p>We now describe our implementation of this approach. We choose to use a Gaussian prior, under the assumption that most traits we consider are at least mildly polygenic, such that the distribution of fitnesses across a large number of segregants will be roughly Gaussian due to the central limit theorem. For each trait, the distribution of true lineage fitnesses will have some unknown mean and some unknown variance due to the genetic architecture of the trait: <inline-formula><mml:math id="inf141"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mi>y</mml:mi><mml:mo>∼</mml:mo><mml:mrow><mml:mi mathvariant="script">N</mml:mi></mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mover><mml:mi>y</mml:mi><mml:mo stretchy="false">¯</mml:mo></mml:mover></mml:mrow><mml:mo>,</mml:mo><mml:msubsup><mml:mi>σ</mml:mi><mml:mrow><mml:mtext>gen</mml:mtext></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msubsup><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mstyle></mml:math></inline-formula>. Our maximum-likelihood estimates of lineage fitnesses from read count data, <inline-formula><mml:math id="inf142"><mml:mover accent="true"><mml:mi>y</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover></mml:math></inline-formula>, will have the same mean but an increased variance due to the error in our fitness inference procedure: <inline-formula><mml:math id="inf143"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mrow><mml:mover><mml:mi>y</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover></mml:mrow><mml:mo>∼</mml:mo><mml:mrow><mml:mi mathvariant="script">N</mml:mi></mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mover><mml:mi>y</mml:mi><mml:mo stretchy="false">¯</mml:mo></mml:mover></mml:mrow><mml:mo>,</mml:mo><mml:msubsup><mml:mi>σ</mml:mi><mml:mrow><mml:mtext>tot</mml:mtext></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msubsup><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mrow><mml:mi mathvariant="script">N</mml:mi></mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mover><mml:mi>y</mml:mi><mml:mo stretchy="false">¯</mml:mo></mml:mover></mml:mrow><mml:mo>,</mml:mo><mml:msubsup><mml:mi>σ</mml:mi><mml:mrow><mml:mtext>gen</mml:mtext></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msubsup><mml:mo>+</mml:mo><mml:msubsup><mml:mi>σ</mml:mi><mml:mrow><mml:mtext>err</mml:mtext></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msubsup><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mstyle></mml:math></inline-formula>. To incorporate this Gaussian prior into our inference, we multiply our likelihood above (<xref ref-type="disp-formula" rid="equ35">Equation A2-9</xref>) by the Gaussian term to obtain our posterior probability:<disp-formula id="equ41"><label>(A2-15)</label><mml:math id="m41"><mml:mrow><mml:mi>log</mml:mi><mml:mo>⁡</mml:mo><mml:mrow><mml:mi mathvariant="script">P</mml:mi></mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mo fence="false" stretchy="false">{</mml:mo><mml:mi>n</mml:mi><mml:mo fence="false" stretchy="false">}</mml:mo><mml:mrow><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:mo fence="false" stretchy="false">{</mml:mo><mml:mi>y</mml:mi><mml:mo>,</mml:mo><mml:msup><mml:mrow><mml:mover><mml:mi>f</mml:mi><mml:mo stretchy="false">~</mml:mo></mml:mover></mml:mrow><mml:mrow><mml:mn>0</mml:mn></mml:mrow></mml:msup><mml:mo fence="false" stretchy="false">}</mml:mo><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:munderover><mml:mo>∑</mml:mo><mml:mrow><mml:mi>t</mml:mi><mml:mo>,</mml:mo><mml:mi>r</mml:mi><mml:mo>,</mml:mo><mml:mi>i</mml:mi></mml:mrow><mml:mrow><mml:mi>T</mml:mi><mml:mo>,</mml:mo><mml:mi>R</mml:mi><mml:mo>,</mml:mo><mml:mi>N</mml:mi></mml:mrow></mml:munderover><mml:msub><mml:mi>n</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>r</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:mi>t</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mi>log</mml:mi><mml:mo>⁡</mml:mo><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msub><mml:mrow><mml:mover><mml:mi>f</mml:mi><mml:mo stretchy="false">~</mml:mo></mml:mover></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>r</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:mi>t</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>−</mml:mo><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mfrac><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>y</mml:mi><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mo>−</mml:mo><mml:mrow><mml:mover><mml:mi>y</mml:mi><mml:mo stretchy="false">¯</mml:mo></mml:mover></mml:mrow><mml:msup><mml:mo stretchy="false">)</mml:mo><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msup></mml:mrow><mml:mrow><mml:mn>2</mml:mn><mml:msubsup><mml:mi>σ</mml:mi><mml:mrow><mml:mtext>tot</mml:mtext></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msubsup></mml:mrow></mml:mfrac></mml:mstyle><mml:mo>+</mml:mo><mml:mtext>const.</mml:mtext></mml:mrow></mml:math></disp-formula></p><p>Maximum-likelihood estimates <inline-formula><mml:math id="inf144"><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:mover accent="true"><mml:mi>y</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover><mml:mo>,</mml:mo><mml:msup><mml:mover accent="true"><mml:mi>f</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover><mml:mn>0</mml:mn></mml:msup><mml:mo stretchy="false">}</mml:mo></mml:mrow></mml:math></inline-formula> are obtained using conjugate gradient descent as described above. Since we do not know <inline-formula><mml:math id="inf145"><mml:mover accent="true"><mml:mi>y</mml:mi><mml:mo stretchy="false">¯</mml:mo></mml:mover></mml:math></inline-formula> and <inline-formula><mml:math id="inf146"><mml:msubsup><mml:mi>σ</mml:mi><mml:mtext>tot</mml:mtext><mml:mn>2</mml:mn></mml:msubsup></mml:math></inline-formula> a priori, we choose initial estimates and iterate the fitness-inference algorithm until the mean and variance converge.</p><p>We now offer some intuition as to why this strategy is appropriate for our case and produces the desirable effects outlined above. We can first write down the standard error obtained for each lineage’s fitness estimate, <inline-formula><mml:math id="inf147"><mml:msubsup><mml:mi>σ</mml:mi><mml:mi>i</mml:mi><mml:mn>2</mml:mn></mml:msubsup></mml:math></inline-formula>. This is done by evaluating the negative Hessian at the maximum likelihood estimates (i.e. the observed Fisher information):<disp-formula id="equ42"><label>(A2-16)</label><mml:math id="m42"><mml:mrow><mml:mo>−</mml:mo><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mfrac><mml:mrow><mml:msup><mml:mi mathvariant="normal">∂</mml:mi><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msup><mml:mi>log</mml:mi><mml:mo>⁡</mml:mo><mml:mrow><mml:mi mathvariant="script">P</mml:mi></mml:mrow></mml:mrow><mml:mrow><mml:mi mathvariant="normal">∂</mml:mi><mml:msubsup><mml:mi>y</mml:mi><mml:mrow><mml:mi>i</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msubsup></mml:mrow></mml:mfrac></mml:mstyle><mml:mo>=</mml:mo><mml:munderover><mml:mo>∑</mml:mo><mml:mrow><mml:mi>t</mml:mi><mml:mo>,</mml:mo><mml:mi>r</mml:mi></mml:mrow><mml:mrow><mml:mi>T</mml:mi><mml:mo>,</mml:mo><mml:mi>R</mml:mi></mml:mrow></mml:munderover><mml:msup><mml:mi>t</mml:mi><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msup><mml:mo>⋅</mml:mo><mml:msub><mml:mi>n</mml:mi><mml:mrow><mml:mtext>tot</mml:mtext><mml:mo>,</mml:mo><mml:mi>r</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:mi>t</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:msub><mml:mrow><mml:mover><mml:mi>f</mml:mi><mml:mo stretchy="false">~</mml:mo></mml:mover></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>r</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:mi>t</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mn>1</mml:mn><mml:mo>−</mml:mo><mml:msub><mml:mrow><mml:mover><mml:mi>f</mml:mi><mml:mo stretchy="false">~</mml:mo></mml:mover></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>r</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:mi>t</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>+</mml:mo><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mfrac><mml:mn>1</mml:mn><mml:msubsup><mml:mi>σ</mml:mi><mml:mrow><mml:mtext>tot</mml:mtext></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msubsup></mml:mfrac></mml:mstyle><mml:mo>=</mml:mo><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mfrac><mml:mn>1</mml:mn><mml:msubsup><mml:mi>σ</mml:mi><mml:mrow><mml:mi>i</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msubsup></mml:mfrac></mml:mstyle><mml:mo>.</mml:mo></mml:mrow></mml:math></disp-formula></p><p>As explained above, the standard errors need to be corrected for the overdispersion factor (<inline-formula><mml:math id="inf148"><mml:mrow><mml:mrow><mml:mi>S</mml:mi><mml:mo>⁢</mml:mo><mml:mi>E</mml:mi></mml:mrow><mml:mo>=</mml:mo><mml:msqrt><mml:mrow><mml:mi>ψ</mml:mi><mml:mo>⁢</mml:mo><mml:msubsup><mml:mi>σ</mml:mi><mml:mi>i</mml:mi><mml:mn>2</mml:mn></mml:msubsup></mml:mrow></mml:msqrt></mml:mrow></mml:math></inline-formula>). Comparing to <xref ref-type="disp-formula" rid="equ38">Equation A2-12</xref>, we see that the standard error for each lineage now comprises a balance of two terms. For lineages at very low frequencies <inline-formula><mml:math id="inf149"><mml:mrow><mml:msub><mml:mover accent="true"><mml:mi>f</mml:mi><mml:mo stretchy="false">~</mml:mo></mml:mover><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>r</mml:mi></mml:mrow></mml:msub><mml:mo>⁢</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>t</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula>, the second term (corresponding to the Gaussian prior) dominates. Since there is little information from read counts to constrain the fitness inference, the prior tends to pull the fitness of these lineages toward <inline-formula><mml:math id="inf150"><mml:mover accent="true"><mml:mi>y</mml:mi><mml:mo stretchy="false">¯</mml:mo></mml:mover></mml:math></inline-formula>, such that they do not run away to extremely low values. For high-frequency lineages, on the other hand, the quantity <inline-formula><mml:math id="inf151"><mml:mrow><mml:msub><mml:mi>n</mml:mi><mml:mrow><mml:mtext>tot</mml:mtext><mml:mo>,</mml:mo><mml:mi>r</mml:mi></mml:mrow></mml:msub><mml:mo>⁢</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>t</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>⁢</mml:mo><mml:msub><mml:mover accent="true"><mml:mi>f</mml:mi><mml:mo stretchy="false">~</mml:mo></mml:mover><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>r</mml:mi></mml:mrow></mml:msub><mml:mo>⁢</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>t</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula> is substantial, so the first term will dominate over the second. These lineages are not strongly affected by the presence of the prior, because their large numbers of reads provide strong evidence for their fitness values.</p></sec><sec id="s9-3" sec-type="appendix"><title>Simulation-based validation of the prior approach</title><p>This procedure inevitably introduces bias into the fitness estimates of low-frequency reads – indeed, the motivation here is to decrease variance in the weak-evidence fitness estimates at the expense of introducing bias. We expect this bias to have negligible impact on our QTL mapping inference only in the regime where the true underlying fitness distribution is sufficiently Gaussian (i.e. our choice of prior is appropriate) and where the proportion of low-frequency lineages is sufficiently small (i.e. the majority of lineages in our population are observed at high read counts). The assumption of a Gaussian fitness distribution, arising from a polygenic trait, also implies that both alleles at a causal locus will be distributed broadly across the full range of segregant fitnesses (i.e. there will be high and low fitness segregants with both alleles at each causal locus). The inferred causal effect size will be less biased in this case, to the extent that the low-frequency, high-error lineages contain both alleles equally (rather than one allele preferentially). Of course, for traits that are bimodal or otherwise strongly non-Gaussian, or for a population with very poor phenotyping for most lineages, the Gaussian prior can introduce significant bias into the estimation of QTL effect sizes.</p><p>To demonstrate this, we conducted simulations of bulk fitness assays with varying true phenotype distributions and varying sequencing coverages. We chose three fitness distributions: first, Gaussian with mean 0 and standard deviation <inline-formula><mml:math id="inf152"><mml:mrow><mml:mi>σ</mml:mi><mml:mo>=</mml:mo><mml:mn>0.04</mml:mn></mml:mrow></mml:math></inline-formula>, representing a genetic architecture with many small-effect QTL; second, a bimodal distribution with means ±0.1 and standard deviation <inline-formula><mml:math id="inf153"><mml:mrow><mml:mi>σ</mml:mi><mml:mo>=</mml:mo><mml:mn>0.04</mml:mn></mml:mrow></mml:math></inline-formula> for each, representing a genetic architecture with one strong QTL of effect 0.2 on a background of many small-effect QTL; and third, a distribution intermediate between these two, with means ±0.05 and standard deviation <inline-formula><mml:math id="inf154"><mml:mrow><mml:mi>σ</mml:mi><mml:mo>=</mml:mo><mml:mn>0.04</mml:mn></mml:mrow></mml:math></inline-formula> for each. These standard deviations are consistent with the scale we observe in our fitness assays, with 0.1 and 0.2 representing extremely strong-effect QTL. These distributions are shown in <xref ref-type="fig" rid="app2fig1">Appendix 2—figure 1</xref> (inset). From these distributions, 1,000 segregant fitnesses were sampled, with initial frequencies drawn from a log-normal distribution with parameters similar to our assay data (mean of 1/(number of lineages) and standard deviation ∼0.5 decades). We simulated deterministic changes in frequency according to the model explained above, and performed multinomial sampling at 5 timepoints over 49 generations (as in our BFAs). We adjusted the depth of sampling to obtain mean coverages (sequencing reads per barcode per timepoint) of 1, 10, 100, and 1000. We then inferred fitnesses using same procedure as for the real data (described above) and examined the performance.</p><fig id="app2fig1" position="float"><label>Appendix 2—figure 1.</label><caption><title>Bulk Fitness Assay simulations.</title><p>Simulated phenotypes are drawn from the distributions shown in the left plot inset, for normal, bimodal, and intermediate distributions. Left: accuracy of fitness inference (<inline-formula><mml:math id="inf155"><mml:msup><mml:mi>R</mml:mi><mml:mn>2</mml:mn></mml:msup></mml:math></inline-formula> of inferred fitnesses on true fitnesses) as a function of sequencing coverage, for the three distributions. Right: Inference of the strong QTL effect as a fraction of the true effect for the bimodal and intermediate distributions, as a function of sequencing coverage.</p></caption><graphic mime-subtype="tiff" mimetype="image" xlink:href="elife-73983-app2-fig1-v2.tif"/></fig><p>As we see in the left panel of <xref ref-type="fig" rid="app2fig1">Appendix 2—figure 1</xref>, the accuracy of our fitness inference (given by the <inline-formula><mml:math id="inf156"><mml:msup><mml:mi>R</mml:mi><mml:mn>2</mml:mn></mml:msup></mml:math></inline-formula> between the inferred and true fitnesses) is strongly dependent on sequencing coverage for all distributions. The bimodal and intermediate phenotypes require more coverage to achieve the same accuracy as the normally distributed phenotype, but all distributions are inferred with high accuracy for sequencing coverage above 100 reads per barcode per timepoint. In addition, for the bimodal and intermediate distributions, we can attempt to infer the strong QTL effect from the peak separation in the inferred phenotype distribution. This inferred effect is plotted as a fraction of the true effect (0.1 for intermediate, 0.2 for bimodal) in the right panel of <xref ref-type="fig" rid="app2fig1">Appendix 2—figure 1</xref>. We can observe that the magnitude of the QTL effect is underestimated when sequencing coverage is low, as the Gaussian prior tends to merge the two peaks towards the mean, and this underestimation is more severe for the more strongly bimodal distribution. However, for sufficiently high coverage, the true fitness distribution is almost perfectly inferred and so the effect estimation is similarly accurate. From this, and given our average coverage of 185 reads per barcode per timepoint, we conclude that fitness inference with the Gaussian prior will be largely accurate, with the caveat that extremely strong effects may be biased towards zero.</p></sec></sec></app><app id="appendix-3"><title>Appendix 3</title><sec id="s10" sec-type="appendix"><title>QTL mapping statistical analysis</title><p>The basic idea of QTL mapping is to statistically associate genotype to phenotype. This requires genotype information for a large number of individuals along with their corresponding phenotypes. As described in Appendix 1 and Appendix 2, both genotype and phenotype in our pool are estimated values rather than known values. Thus, in principle, it might be possible to perform QTL mapping from completely raw data, which for genotyping includes the read information for a random subset of the SNPs and for phenotyping includes the number of sequencing reads at each timepoint of the bulk fitness assays. However, for computational simplicity, we choose instead to perform QTL mapping on summary and sufficient statistics of these raw data. Briefly, we transform the raw genotyping reads into inferred probabilistic genotype values (Appendix 1), and we transform the raw read counts per timepoint into inferred fitness values and standard errors (Appendix 2). As described in this section and as demonstrated in simulations (Section A3-1.5), these summary statistics can capture much of the complexities of working with raw information, while being far more tractable.</p><sec id="s10-1-1" sec-type="appendix"><title>QTL mapping: single-locus and multiple-locus approaches</title><p>Traditional QTL mapping analysis proceeds as a genome-wide scan of a single-QTL model (<xref ref-type="bibr" rid="bib20">Broman et al., 2003</xref>). At each individual locus, one conducts a t-test to determine whether there is a significant difference between the distribution of phenotypes of segregants with one parental allele and the distribution of phenotypes of segregants with the other parental allele. This comparison leads to a log odds score (LOD score) which represents the log of the ratio of the likelihood that the segregants are drawn from different distributions to the likelihood they are drawn from the same distribution. A large LOD score indicates that the locus is associated with the phenotype, either because that locus itself is causal or because it is linked to a causal locus. The LOD score is often plotted as a function of genomic position, typically in so-called Manhattan plots. Because loci linked to a causal locus are also expected to show an association with the phenotype, one expects broad peaks of elevated LOD scores around a causal locus. To identify individual causal loci, one typically looks for peaks above a genome-wide statistical significance threshold (often obtained through permutation tests). Confidence intervals for the precise location of the causal locus can then be obtained in several ways (e.g. the –1.5 LOD drop approach <xref ref-type="bibr" rid="bib71">Lander and Botstein, 1989</xref>).</p><p>These classical techniques are adequate for small crosses which aim to map a relatively small number of QTL with large effects. However, they have assumptions that are clearly violated when considering highly polygenic traits. For example, when multiple causal loci are sufficiently close together, the effect size inferred at each true QTL position will reflect the sum over all linked effects (weighted by their linkage) rather than the isolated single effect. Small-effect loci that are substantially (but not completely) linked to larger-effect loci will be particularly difficult to detect from simple examination of LOD curves. These are critical problems in our regime of extremely large numbers of segregants, where our statistical power is such that entire regions of chromosomes lie above the threshold of statistical significance, due to the presence of many linked QTL (see <xref ref-type="fig" rid="fig2">Figure 2</xref>).</p><p>Therefore, to accurately infer the genetic architecture of polygenic traits, we must move to a multiple-locus framework that jointly estimates positions and effect sizes of large numbers of causal loci. This alternative framing of the problem introduces novel approaches as well as novel complications. We consider the problem in two pieces. First, given a list of putative QTL locations, we develop a method to accurately infer the maximum likelihood effect sizes given our genotype and phenotype data (the optimization problem). Second, we analyze how to select which loci to consider as putative QTL locations, and which to confirm as statistically significant (the feature selection or model search problem). The following two sections address these two problems in turn.</p></sec><sec id="s10-1-2" sec-type="appendix"><title>Maximum-likelihood model for QTL effect sizes at multiple loci</title><p>Here, we aim to develop an inference procedure that, when given a list of loci, will jointly infer maximum-likelihood QTL effect sizes for all. There are two specific considerations regarding our data that differ from traditional QTL analyses, and that must be addressed in choosing this inference framework: (1) the heteroskedasticity in our phenotype estimates (introduced in Appendix 2), and (2) the probabilistic nature of our genotype data (introduced in Appendix 1). While our procedure makes use of classical approaches for QTL mapping, we employ them in novel ways to account for these considerations, as described in this section.</p><p>We begin by defining a general model of genetic architecture for a complex trait. Here we are given a list of loci, indexed by <inline-formula><mml:math id="inf157"><mml:mi>k</mml:mi></mml:math></inline-formula>; each has a true but unknown causal effect <italic>s</italic><sub><italic>k</italic></sub>. An individual segregant, indexed by <italic>i</italic>, will have a particular true but unknown genotype <inline-formula><mml:math id="inf158"><mml:mrow><mml:msub><mml:mi>γ</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:msub><mml:mi>g</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>k</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">}</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula> consisting of values <inline-formula><mml:math id="inf159"><mml:mrow><mml:msub><mml:mi>g</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>k</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mn>0</mml:mn></mml:mrow></mml:math></inline-formula> or 1 at each locus. Under this model, the true phenotype of individual <italic>i</italic> will be determined by its causal alleles and their effect sizes according to a function <inline-formula><mml:math id="inf160"><mml:mi mathvariant="normal">Φ</mml:mi></mml:math></inline-formula>:<disp-formula id="equ43"><label>(A3-1)</label><mml:math id="m43"><mml:mrow><mml:mrow><mml:msub><mml:mi>y</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:mi mathvariant="normal">Φ</mml:mi><mml:mo>⁢</mml:mo><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msub><mml:mi>g</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>k</mml:mi></mml:mrow></mml:msub><mml:mo>⁢</mml:mo><mml:msub><mml:mi>s</mml:mi><mml:mi>k</mml:mi></mml:msub></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mrow><mml:mo>.</mml:mo></mml:mrow></mml:math></disp-formula></p><p>As mentioned above, one significant aspect of our genotype data is that we cannot assume the true binary genotype values <inline-formula><mml:math id="inf161"><mml:msub><mml:mi>g</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>k</mml:mi></mml:mrow></mml:msub></mml:math></inline-formula> to be known, as we instead obtain probabilistic estimates <inline-formula><mml:math id="inf162"><mml:mrow><mml:msub><mml:mi>π</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>k</mml:mi></mml:mrow></mml:msub><mml:mo>∈</mml:mo><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:mn>0</mml:mn><mml:mo>,</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula> (see Appendix 1-1.2). Although for the majority of segregants and loci this probabilistic value is in fact very close to 0 or 1 (Appendix 1-1.2), we would like to appropriately account for the genotype uncertainty as measured by these posterior probabilities.</p><p>For this, we draw inspiration from the classical method of interval mapping (<xref ref-type="bibr" rid="bib71">Lander and Botstein, 1989</xref>). Instead of performing interval mapping between two markers of known genotypes, we instead perform interval mapping on one marker of uncertain genotype. For clarity, we will first examine the case of a single locus; we then extend to the multi-locus case and discuss several approximations that must be made.</p><p>In the single-locus case, where we assume one causal locus with effect size <inline-formula><mml:math id="inf163"><mml:mi>s</mml:mi></mml:math></inline-formula>, we only have two genotypes: <inline-formula><mml:math id="inf164"><mml:mrow><mml:msub><mml:mi>γ</mml:mi><mml:mn>0</mml:mn></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:msub><mml:mi>g</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mn>0</mml:mn><mml:mo stretchy="false">}</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula> and <inline-formula><mml:math id="inf165"><mml:mrow><mml:msub><mml:mi>γ</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:msub><mml:mi>g</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">}</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula>. In the simplest model, these genotypes give rise to only two true phenotypes, <inline-formula><mml:math id="inf166"><mml:mrow><mml:msub><mml:mi>y</mml:mi><mml:msub><mml:mi>γ</mml:mi><mml:mn>0</mml:mn></mml:msub></mml:msub><mml:mo>=</mml:mo><mml:mn>0</mml:mn></mml:mrow></mml:math></inline-formula> and <inline-formula><mml:math id="inf167"><mml:mrow><mml:msub><mml:mi>y</mml:mi><mml:msub><mml:mi>γ</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:msub><mml:mo>=</mml:mo><mml:mi>s</mml:mi></mml:mrow></mml:math></inline-formula>. However, in a more realistic scenario, there will be variation in the phenotypes observed from a single genotype, whether due to experimental noise or non-genetic factors. We model this as a normal distribution of phenotypes observed from one true underlying genotype: <inline-formula><mml:math id="inf168"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msub><mml:mrow><mml:mover><mml:mi>y</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover></mml:mrow><mml:mrow><mml:msub><mml:mi>γ</mml:mi><mml:mrow><mml:mn>0</mml:mn></mml:mrow></mml:msub></mml:mrow></mml:msub><mml:mo>∼</mml:mo><mml:mrow><mml:mi mathvariant="script">N</mml:mi></mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mn>0</mml:mn><mml:mo>,</mml:mo><mml:msubsup><mml:mi>σ</mml:mi><mml:mrow><mml:msub><mml:mi>γ</mml:mi><mml:mrow><mml:mn>0</mml:mn></mml:mrow></mml:msub></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msubsup><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mstyle></mml:math></inline-formula> and <inline-formula><mml:math id="inf169"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msub><mml:mrow><mml:mover><mml:mi>y</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover></mml:mrow><mml:mrow><mml:msub><mml:mi>γ</mml:mi><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub></mml:mrow></mml:msub><mml:mo>∼</mml:mo><mml:mrow><mml:mi mathvariant="script">N</mml:mi></mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>s</mml:mi><mml:mo>,</mml:mo><mml:msubsup><mml:mi>σ</mml:mi><mml:mrow><mml:msub><mml:mi>γ</mml:mi><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msubsup><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mstyle></mml:math></inline-formula>. (Note we use <inline-formula><mml:math id="inf170"><mml:mover accent="true"><mml:mi>y</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover></mml:math></inline-formula> here to refer to <italic>measured</italic> phenotypes, i.e. the maximum likelihood fitness estimates obtained from the barcode trajectory model in Appendix 2).</p><p>For each segregant, we observe some genotyping reads that map either to <inline-formula><mml:math id="inf171"><mml:msub><mml:mi>γ</mml:mi><mml:mn>0</mml:mn></mml:msub></mml:math></inline-formula> or <inline-formula><mml:math id="inf172"><mml:msub><mml:mi>γ</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:math></inline-formula> at the locus of interest. From these, we write the probability for individual i to have genotype <inline-formula><mml:math id="inf173"><mml:mi>γ</mml:mi></mml:math></inline-formula> as <inline-formula><mml:math id="inf174"><mml:mrow><mml:msub><mml:mi>p</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>γ</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mtext>Pr</mml:mtext><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>g</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mi>γ</mml:mi><mml:mo stretchy="false">|</mml:mo><mml:mtext>reads</mml:mtext><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula>, with <inline-formula><mml:math id="inf175"><mml:mrow><mml:mrow><mml:msub><mml:mi>p</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mi>γ</mml:mi><mml:mn>0</mml:mn></mml:msub></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:msub><mml:mi>p</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mi>γ</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:msub></mml:mrow><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:math></inline-formula>. We then expect that the observed phenotype for that individual will be sampled from a mixture of the two normal distributions: <inline-formula><mml:math id="inf176"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mrow><mml:mover><mml:msub><mml:mi>y</mml:mi><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">^</mml:mo></mml:mover></mml:mrow><mml:mo>∼</mml:mo><mml:msub><mml:mi>p</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mrow><mml:msub><mml:mi>γ</mml:mi><mml:mrow><mml:mn>0</mml:mn></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:msub><mml:mrow><mml:mi mathvariant="script">N</mml:mi></mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mn>0</mml:mn><mml:mo>,</mml:mo><mml:msubsup><mml:mi>σ</mml:mi><mml:mrow><mml:msub><mml:mi>γ</mml:mi><mml:mrow><mml:mn>0</mml:mn></mml:mrow></mml:msub></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msubsup><mml:mo stretchy="false">)</mml:mo><mml:mo>+</mml:mo><mml:msub><mml:mi>p</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mrow><mml:msub><mml:mi>γ</mml:mi><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:msub><mml:mrow><mml:mi mathvariant="script">N</mml:mi></mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>s</mml:mi><mml:mo>,</mml:mo><mml:msubsup><mml:mi>σ</mml:mi><mml:mrow><mml:msub><mml:mi>γ</mml:mi><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msubsup><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mstyle></mml:math></inline-formula>. Our goal is then to estimate the parameter of interest <inline-formula><mml:math id="inf177"><mml:mi>s</mml:mi></mml:math></inline-formula> as well as <inline-formula><mml:math id="inf178"><mml:mrow><mml:msubsup><mml:mi>σ</mml:mi><mml:msub><mml:mi>γ</mml:mi><mml:mn>0</mml:mn></mml:msub><mml:mn>2</mml:mn></mml:msubsup><mml:mo>,</mml:mo><mml:msubsup><mml:mi>σ</mml:mi><mml:msub><mml:mi>γ</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mn>2</mml:mn></mml:msubsup></mml:mrow></mml:math></inline-formula> by maximum likelihood. We can write the incomplete-data likelihood function for the phenotype data for all individuals as<disp-formula id="equ44"><label>(A3-2)</label><mml:math id="m44"><mml:mrow><mml:mrow><mml:mi mathvariant="script">L</mml:mi></mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mo fence="false" stretchy="false">{</mml:mo><mml:mrow><mml:mover><mml:mi>y</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover></mml:mrow><mml:mo fence="false" stretchy="false">}</mml:mo><mml:mrow><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:mi>s</mml:mi><mml:mo>,</mml:mo><mml:msubsup><mml:mi>σ</mml:mi><mml:mrow><mml:msub><mml:mi>γ</mml:mi><mml:mrow><mml:mn>0</mml:mn></mml:mrow></mml:msub></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msubsup><mml:mo>,</mml:mo><mml:msubsup><mml:mi>σ</mml:mi><mml:mrow><mml:msub><mml:mi>γ</mml:mi><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msubsup><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:munderover><mml:mo>∏</mml:mo><mml:mrow><mml:mi>i</mml:mi></mml:mrow><mml:mrow><mml:mi>N</mml:mi></mml:mrow></mml:munderover><mml:mrow><mml:mo>[</mml:mo><mml:mrow><mml:msub><mml:mi>p</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mrow><mml:msub><mml:mi>γ</mml:mi><mml:mrow><mml:mn>0</mml:mn></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:msub><mml:mi>φ</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mover><mml:mi>y</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover></mml:mrow><mml:mrow><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:mn>0</mml:mn><mml:mo>,</mml:mo><mml:msubsup><mml:mi>σ</mml:mi><mml:mrow><mml:msub><mml:mi>γ</mml:mi><mml:mrow><mml:mn>0</mml:mn></mml:mrow></mml:msub></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msubsup><mml:mi mathvariant="normal">%</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>+</mml:mo><mml:msub><mml:mi>p</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mrow><mml:msub><mml:mi>γ</mml:mi><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:msub><mml:mi>φ</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mover><mml:mi>y</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover></mml:mrow><mml:mrow><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:mi>s</mml:mi><mml:mo>,</mml:mo><mml:msubsup><mml:mi>σ</mml:mi><mml:mrow><mml:msub><mml:mi>γ</mml:mi><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msubsup><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>]</mml:mo></mml:mrow><mml:mo>,</mml:mo></mml:mrow></mml:math></disp-formula></p><p>where <inline-formula><mml:math id="inf179"><mml:mrow><mml:mi>φ</mml:mi><mml:mo>⁢</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mover accent="true"><mml:mi>y</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover><mml:mo lspace="2.5pt" rspace="2.5pt" stretchy="false">|</mml:mo><mml:mrow><mml:mn>0</mml:mn><mml:mo>,</mml:mo><mml:msup><mml:mi>σ</mml:mi><mml:mn>2</mml:mn></mml:msup></mml:mrow></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula> is the PDF of the normal distribution <inline-formula><mml:math id="inf180"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mrow><mml:mi mathvariant="script">N</mml:mi></mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mn>0</mml:mn><mml:mo>,</mml:mo><mml:msup><mml:mi>σ</mml:mi><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msup><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mstyle></mml:math></inline-formula> evaluated at <inline-formula><mml:math id="inf181"><mml:mover accent="true"><mml:mi>y</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover></mml:math></inline-formula>. The maximum likelihood estimates cannot be obtained in closed form, but can be estimated by expectation-maximization. Assuming that the genotype information is a latent variable, maximizing the expectation of the complete-data log-likelihood over the two possible genotypes (i.e. maximizing the Q function) will yield the maximum-likelihood estimates (<xref ref-type="bibr" rid="bib33">Dempster et al., 1977</xref>). Here this function is:<disp-formula id="equ45"><label>(A3-3)</label><mml:math id="m45"><mml:mrow><mml:msub><mml:mi>E</mml:mi><mml:mrow><mml:mo fence="false" stretchy="false">{</mml:mo><mml:mi>γ</mml:mi><mml:mo fence="false" stretchy="false">}</mml:mo><mml:mrow><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:mo fence="false" stretchy="false">{</mml:mo><mml:mrow><mml:mover><mml:mi>y</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover></mml:mrow><mml:mo fence="false" stretchy="false">}</mml:mo><mml:mo>,</mml:mo><mml:mi>s</mml:mi><mml:mo>,</mml:mo><mml:msubsup><mml:mi>σ</mml:mi><mml:mrow><mml:msub><mml:mi>γ</mml:mi><mml:mrow><mml:mn>0</mml:mn></mml:mrow></mml:msub></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msubsup><mml:mo>,</mml:mo><mml:msubsup><mml:mi>σ</mml:mi><mml:mrow><mml:msub><mml:mi>γ</mml:mi><mml:mrow><mml:mn>0</mml:mn></mml:mrow></mml:msub></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msubsup></mml:mrow></mml:msub><mml:mrow><mml:mo>[</mml:mo><mml:mrow><mml:mi>log</mml:mi><mml:mo>⁡</mml:mo><mml:mrow><mml:mi mathvariant="script">L</mml:mi></mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mo fence="false" stretchy="false">{</mml:mo><mml:mrow><mml:mover><mml:mi>y</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover></mml:mrow><mml:mo fence="false" stretchy="false">}</mml:mo><mml:mrow><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:mi>s</mml:mi><mml:mo>,</mml:mo><mml:msubsup><mml:mi>σ</mml:mi><mml:mrow><mml:msub><mml:mi>γ</mml:mi><mml:mrow><mml:mn>0</mml:mn></mml:mrow></mml:msub></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msubsup><mml:mo>,</mml:mo><mml:msubsup><mml:mi>σ</mml:mi><mml:mrow><mml:msub><mml:mi>γ</mml:mi><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msubsup><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>]</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:munderover><mml:mo>∑</mml:mo><mml:mrow><mml:mi>i</mml:mi></mml:mrow><mml:mrow><mml:mi>N</mml:mi></mml:mrow></mml:munderover><mml:mrow><mml:mo>[</mml:mo><mml:mrow><mml:msub><mml:mi>w</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mrow><mml:msub><mml:mi>γ</mml:mi><mml:mrow><mml:mn>0</mml:mn></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:msub><mml:mi>log</mml:mi><mml:mo>⁡</mml:mo><mml:mi>φ</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mover><mml:mi>y</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover></mml:mrow><mml:mrow><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:mn>0</mml:mn><mml:mo>,</mml:mo><mml:msubsup><mml:mi>σ</mml:mi><mml:mrow><mml:msub><mml:mi>γ</mml:mi><mml:mrow><mml:mn>0</mml:mn></mml:mrow></mml:msub></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msubsup><mml:mo stretchy="false">)</mml:mo><mml:mo>+</mml:mo><mml:msub><mml:mi>w</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mrow><mml:msub><mml:mi>γ</mml:mi><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:msub><mml:mi>log</mml:mi><mml:mo>⁡</mml:mo><mml:mi>φ</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mover><mml:mi>y</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover></mml:mrow><mml:mrow><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:mi>s</mml:mi><mml:mo>,</mml:mo><mml:msubsup><mml:mi>σ</mml:mi><mml:mrow><mml:msub><mml:mi>γ</mml:mi><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msubsup><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>]</mml:mo></mml:mrow><mml:mo>,</mml:mo></mml:mrow></mml:math></disp-formula></p><p>where <inline-formula><mml:math id="inf182"><mml:msub><mml:mi>w</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>γ</mml:mi></mml:mrow></mml:msub></mml:math></inline-formula> is the conditional probability that an individual has genotype <inline-formula><mml:math id="inf183"><mml:mi>γ</mml:mi></mml:math></inline-formula> given its genotype data as well as its phenotype and current estimates of the parameters:<disp-formula id="equ46"><label>(A3-4)</label><mml:math id="m46"><mml:mrow><mml:mstyle displaystyle="true" scriptlevel="0"><mml:msub><mml:mi>w</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:msub><mml:mi>γ</mml:mi><mml:mrow><mml:mn>0</mml:mn></mml:mrow></mml:msub></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mtext>Pr</mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>g</mml:mi><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mi>γ</mml:mi><mml:mrow><mml:mn>0</mml:mn></mml:mrow></mml:msub><mml:mrow><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:msub><mml:mi>p</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mi>γ</mml:mi><mml:mrow><mml:mn>0</mml:mn></mml:mrow></mml:msub></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mrow><mml:mover><mml:mi>y</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:mi>s</mml:mi><mml:mo>,</mml:mo><mml:msubsup><mml:mi>σ</mml:mi><mml:mrow><mml:msub><mml:mi>γ</mml:mi><mml:mrow><mml:mn>0</mml:mn></mml:mrow></mml:msub></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msubsup><mml:mo>,</mml:mo><mml:msubsup><mml:mi>σ</mml:mi><mml:mrow><mml:msub><mml:mi>γ</mml:mi><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msubsup><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mfrac><mml:mrow><mml:msub><mml:mi>p</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mrow><mml:msub><mml:mi>γ</mml:mi><mml:mrow><mml:mn>0</mml:mn></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:msub><mml:mi>φ</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mover><mml:mi>y</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover></mml:mrow><mml:mrow><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:mn>0</mml:mn><mml:mo>,</mml:mo><mml:msubsup><mml:mi>σ</mml:mi><mml:mrow><mml:msub><mml:mi>γ</mml:mi><mml:mrow><mml:mn>0</mml:mn></mml:mrow></mml:msub></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msubsup><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mrow><mml:msub><mml:mi>p</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mrow><mml:msub><mml:mi>γ</mml:mi><mml:mrow><mml:mn>0</mml:mn></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:msub><mml:mi>φ</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mover><mml:mi>y</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover></mml:mrow><mml:mrow><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:mn>0</mml:mn><mml:mo>,</mml:mo><mml:msubsup><mml:mi>σ</mml:mi><mml:mrow><mml:msub><mml:mi>γ</mml:mi><mml:mrow><mml:mn>0</mml:mn></mml:mrow></mml:msub></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msubsup><mml:mo stretchy="false">)</mml:mo><mml:mo>+</mml:mo><mml:msub><mml:mi>p</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mrow><mml:msub><mml:mi>γ</mml:mi><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:msub><mml:mi>φ</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mover><mml:mi>y</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover></mml:mrow><mml:mrow><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:mi>s</mml:mi><mml:mo>,</mml:mo><mml:msubsup><mml:mi>σ</mml:mi><mml:mrow><mml:msub><mml:mi>γ</mml:mi><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msubsup><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mfrac></mml:mstyle><mml:mo>,</mml:mo></mml:mstyle></mml:mrow></mml:math></disp-formula><disp-formula id="equ47"><label>(A3-5)</label><mml:math id="m47"><mml:mrow><mml:mstyle displaystyle="true" scriptlevel="0"><mml:msub><mml:mi>w</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mi>γ</mml:mi><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mn>1</mml:mn><mml:mo>−</mml:mo><mml:msub><mml:mi>w</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mi>γ</mml:mi><mml:mrow><mml:mn>0</mml:mn></mml:mrow></mml:msub></mml:mrow></mml:msub><mml:mo>.</mml:mo></mml:mstyle></mml:mrow></mml:math></disp-formula></p><p>After sufficient expectation-maximization iterations over the parameters and conditional probabilities, we obtain final maximum-likelihood estimates for <inline-formula><mml:math id="inf184"><mml:mrow><mml:msubsup><mml:mi>σ</mml:mi><mml:msub><mml:mi>γ</mml:mi><mml:mn>0</mml:mn></mml:msub><mml:mn>2</mml:mn></mml:msubsup><mml:mo>,</mml:mo><mml:msubsup><mml:mi>σ</mml:mi><mml:msub><mml:mi>γ</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mn>2</mml:mn></mml:msubsup></mml:mrow></mml:math></inline-formula>, and <inline-formula><mml:math id="inf185"><mml:mi>s</mml:mi></mml:math></inline-formula>.</p><p>We now extend this framework to multiple loci, referred to in the literature as composite-interval mapping (<xref ref-type="bibr" rid="bib119">Zeng, 1994</xref>). If we consider <inline-formula><mml:math id="inf186"><mml:mi>K</mml:mi></mml:math></inline-formula> causal loci with effects <italic>s</italic><sub><italic>k</italic></sub>, then we will have <inline-formula><mml:math id="inf187"><mml:msup><mml:mn>2</mml:mn><mml:mi>K</mml:mi></mml:msup></mml:math></inline-formula> distinct genotypes in <inline-formula><mml:math id="inf188"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mrow><mml:mi mathvariant="script">G</mml:mi></mml:mrow></mml:mrow></mml:mstyle></mml:math></inline-formula>. Phenotypes observed from each genotype <inline-formula><mml:math id="inf189"><mml:mi>γ</mml:mi></mml:math></inline-formula> will be distributed as <inline-formula><mml:math id="inf190"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msub><mml:mrow><mml:mover><mml:mi>y</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover></mml:mrow><mml:mrow><mml:mi>γ</mml:mi></mml:mrow></mml:msub><mml:mo>∼</mml:mo><mml:mrow><mml:mi mathvariant="script">N</mml:mi></mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>μ</mml:mi><mml:mrow><mml:mi>γ</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msubsup><mml:mi>σ</mml:mi><mml:mrow><mml:mi>γ</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msubsup><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mstyle></mml:math></inline-formula>, where <inline-formula><mml:math id="inf191"><mml:msub><mml:mi>μ</mml:mi><mml:mi>γ</mml:mi></mml:msub></mml:math></inline-formula> is determined by the effects <italic>s</italic><sub><italic>k</italic></sub> for the alleles present in <inline-formula><mml:math id="inf192"><mml:mi>γ</mml:mi></mml:math></inline-formula> according to <xref ref-type="disp-formula" rid="equ43">Equation A3-1</xref>. Each individual’s observed phenotype is now drawn from a normal mixture of all possible genotypes: <inline-formula><mml:math id="inf193"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msub><mml:mrow><mml:mover><mml:mi>y</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mo>∼</mml:mo><mml:munder><mml:mo>∑</mml:mo><mml:mrow><mml:mi>γ</mml:mi></mml:mrow></mml:munder><mml:msub><mml:mi>p</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>γ</mml:mi></mml:mrow></mml:msub><mml:mrow><mml:mi mathvariant="script">N</mml:mi></mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>μ</mml:mi><mml:mrow><mml:mi>γ</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msubsup><mml:mi>σ</mml:mi><mml:mrow><mml:mi>γ</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msubsup><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mstyle></mml:math></inline-formula>. Here we wish to estimate all means <inline-formula><mml:math id="inf194"><mml:msub><mml:mi>μ</mml:mi><mml:mi>γ</mml:mi></mml:msub></mml:math></inline-formula>, from which we can extract effect sizes <italic>s</italic><sub><italic>k</italic></sub>, as well as variances <inline-formula><mml:math id="inf195"><mml:msubsup><mml:mi>σ</mml:mi><mml:mi>γ</mml:mi><mml:mn>2</mml:mn></mml:msubsup></mml:math></inline-formula>. The incomplete-data likelihood function can now be written as<disp-formula id="equ48"><label>(A3-6)</label><mml:math id="m48"><mml:mrow><mml:mrow><mml:mi mathvariant="script">L</mml:mi></mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mo fence="false" stretchy="false">{</mml:mo><mml:mrow><mml:mover><mml:mi>y</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover></mml:mrow><mml:mo fence="false" stretchy="false">}</mml:mo><mml:mrow><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:mo fence="false" stretchy="false">{</mml:mo><mml:mi>μ</mml:mi><mml:mo>,</mml:mo><mml:msup><mml:mi>σ</mml:mi><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msup><mml:mo fence="false" stretchy="false">}</mml:mo><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:munderover><mml:mo>∏</mml:mo><mml:mrow><mml:mi>i</mml:mi></mml:mrow><mml:mrow><mml:mi>N</mml:mi></mml:mrow></mml:munderover><mml:munderover><mml:mo>∑</mml:mo><mml:mrow><mml:mi>γ</mml:mi></mml:mrow><mml:mrow><mml:mrow><mml:mi mathvariant="script">G</mml:mi></mml:mrow></mml:mrow></mml:munderover><mml:msub><mml:mi>p</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>γ</mml:mi></mml:mrow></mml:msub><mml:mi>φ</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mrow><mml:mover><mml:mi>y</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mrow><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:msub><mml:mi>μ</mml:mi><mml:mrow><mml:mi>γ</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msubsup><mml:mi>σ</mml:mi><mml:mrow><mml:mi>γ</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msubsup><mml:mo stretchy="false">)</mml:mo><mml:mo>.</mml:mo></mml:mrow></mml:math></disp-formula></p><p>As before, we will instead maximize the Q-function, or the expectation of the complete-data log likelihood over all possible genotypes:<disp-formula id="equ49"><label>(A3-7)</label><mml:math id="m49"><mml:mrow><mml:msub><mml:mi>E</mml:mi><mml:mrow><mml:mo fence="false" stretchy="false">{</mml:mo><mml:mi>γ</mml:mi><mml:mo fence="false" stretchy="false">}</mml:mo><mml:mrow><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:mo fence="false" stretchy="false">{</mml:mo><mml:mrow><mml:mover><mml:mi>y</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover></mml:mrow><mml:mo fence="false" stretchy="false">}</mml:mo><mml:mo>,</mml:mo><mml:mo fence="false" stretchy="false">{</mml:mo><mml:mi>μ</mml:mi><mml:mo>,</mml:mo><mml:msup><mml:mi>σ</mml:mi><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msup><mml:mo fence="false" stretchy="false">}</mml:mo></mml:mrow></mml:msub><mml:mrow><mml:mo>[</mml:mo><mml:mrow><mml:mi>log</mml:mi><mml:mo>⁡</mml:mo><mml:mrow><mml:mi mathvariant="script">L</mml:mi></mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mo fence="false" stretchy="false">{</mml:mo><mml:mrow><mml:mover><mml:mi>y</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover></mml:mrow><mml:mo fence="false" stretchy="false">}</mml:mo><mml:mrow><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:mo fence="false" stretchy="false">{</mml:mo><mml:mi>μ</mml:mi><mml:mo>,</mml:mo><mml:msup><mml:mi>σ</mml:mi><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msup><mml:mo fence="false" stretchy="false">}</mml:mo><mml:mo stretchy="false">)</mml:mo><mml:mo>,</mml:mo><mml:mo fence="false" stretchy="false">{</mml:mo><mml:mi>g</mml:mi><mml:mo fence="false" stretchy="false">}</mml:mo></mml:mrow><mml:mo>]</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:munderover><mml:mo>∑</mml:mo><mml:mrow><mml:mi>i</mml:mi></mml:mrow><mml:mrow><mml:mi>N</mml:mi></mml:mrow></mml:munderover><mml:munderover><mml:mo>∑</mml:mo><mml:mrow><mml:mi>γ</mml:mi></mml:mrow><mml:mrow><mml:mrow><mml:mi mathvariant="script">G</mml:mi></mml:mrow></mml:mrow></mml:munderover><mml:msub><mml:mi>w</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>γ</mml:mi></mml:mrow></mml:msub><mml:mi>log</mml:mi><mml:mo>⁡</mml:mo><mml:mi>φ</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mrow><mml:mover><mml:mi>y</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mrow><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:msub><mml:mi>μ</mml:mi><mml:mrow><mml:mi>γ</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msubsup><mml:mi>σ</mml:mi><mml:mrow><mml:mi>γ</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msubsup><mml:mo stretchy="false">)</mml:mo><mml:mo>,</mml:mo></mml:mrow></mml:math></disp-formula></p><p>where the conditional probabilities are now given by<disp-formula id="equ50"><label>(A3-8)</label><mml:math id="m50"><mml:mrow><mml:msub><mml:mi>w</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>γ</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mtext>Pr</mml:mtext><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msub><mml:mi>g</mml:mi><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mi>γ</mml:mi><mml:mrow><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:msub><mml:mi>p</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>γ</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mrow><mml:mover><mml:mi>y</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>μ</mml:mi><mml:mrow><mml:mi>γ</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msubsup><mml:mi>σ</mml:mi><mml:mrow><mml:mi>γ</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msubsup></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mfrac><mml:mrow><mml:msub><mml:mi>p</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>γ</mml:mi></mml:mrow></mml:msub><mml:mi>φ</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mrow><mml:mover><mml:mi>y</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mrow><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:msub><mml:mi>μ</mml:mi><mml:mrow><mml:mi>γ</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msubsup><mml:mi>σ</mml:mi><mml:mrow><mml:mi>γ</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msubsup><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mrow><mml:munderover><mml:mo>∑</mml:mo><mml:mrow><mml:mi>γ</mml:mi></mml:mrow><mml:mrow><mml:mrow><mml:mi mathvariant="script">G</mml:mi></mml:mrow></mml:mrow></mml:munderover><mml:msub><mml:mi>p</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>γ</mml:mi></mml:mrow></mml:msub><mml:mi>φ</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mrow><mml:mover><mml:mi>y</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mrow><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:msub><mml:mi>μ</mml:mi><mml:mrow><mml:mi>γ</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msubsup><mml:mi>σ</mml:mi><mml:mrow><mml:mi>γ</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msubsup><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mfrac></mml:mstyle><mml:mo>.</mml:mo></mml:mrow></mml:math></disp-formula></p><p>Unfortunately, the number of possible genotypes <inline-formula><mml:math id="inf196"><mml:mi>γ</mml:mi></mml:math></inline-formula>, over which we must perform all of these sums, grows exponentially as <inline-formula><mml:math id="inf197"><mml:msup><mml:mn>2</mml:mn><mml:mi>K</mml:mi></mml:msup></mml:math></inline-formula>. Performing the expectation-maximization procedure with these expressions is computationally intractable if we wish to consider hundreds or thousands of potential causal loci, as we might for a highly polygenic trait.</p><p>To proceed, we make use of two approximations to the interval mapping paradigm. First, we will use a well-known approximation to interval mapping called Haley-Knott regression (<xref ref-type="bibr" rid="bib54">Haley and Knott, 1992</xref>; <xref ref-type="bibr" rid="bib67">Kearsey and Hyne, 1994</xref>). Here we approximate <inline-formula><mml:math id="inf198"><mml:msub><mml:mi>w</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>⁢</mml:mo><mml:mi>γ</mml:mi></mml:mrow></mml:msub></mml:math></inline-formula> by <inline-formula><mml:math id="inf199"><mml:msub><mml:mi>p</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>γ</mml:mi></mml:mrow></mml:msub></mml:math></inline-formula>, such that mixing proportions no longer depend on phenotype data. We also approximate the Gaussian mixture model for each individual’s phenotype by a single Gaussian with the appropriate mean, and a variance that is constant over different genotypes:<disp-formula id="equ51"><label>(A3-9)</label><mml:math id="m51"><mml:mrow><mml:msub><mml:mrow><mml:mover><mml:mi>y</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mo>∼</mml:mo><mml:munder><mml:mo>∑</mml:mo><mml:mrow><mml:mi>γ</mml:mi></mml:mrow></mml:munder><mml:msub><mml:mi>p</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>γ</mml:mi></mml:mrow></mml:msub><mml:mrow><mml:mi mathvariant="script">N</mml:mi></mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>μ</mml:mi><mml:mrow><mml:mi>γ</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msubsup><mml:mi>σ</mml:mi><mml:mrow><mml:mi>γ</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msubsup><mml:mo stretchy="false">)</mml:mo><mml:mo>≈</mml:mo><mml:mrow><mml:mi mathvariant="script">N</mml:mi></mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:munder><mml:mo>∑</mml:mo><mml:mrow><mml:mi>γ</mml:mi></mml:mrow></mml:munder><mml:msub><mml:mi>p</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>γ</mml:mi></mml:mrow></mml:msub><mml:msub><mml:mi>μ</mml:mi><mml:mrow><mml:mi>γ</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msup><mml:mi>σ</mml:mi><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msup></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>.</mml:mo></mml:mrow></mml:math></disp-formula></p><p>This is only a good approximation when the phenotype distributions for different genotypes overlap significantly (such that the mixture model is well captured by a single normal distribution). This is expected to be satisfied for polygenic traits, where many different combinations of causal alleles can give similar phenotypes. With this simplification, we can rewrite the likelihood function as<disp-formula id="equ52"><label>(A3-10)</label><mml:math id="m52"><mml:mrow><mml:mrow><mml:mi mathvariant="script">L</mml:mi></mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mo fence="false" stretchy="false">{</mml:mo><mml:mrow><mml:mover><mml:mi>y</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover></mml:mrow><mml:mo fence="false" stretchy="false">}</mml:mo><mml:mrow><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:mo fence="false" stretchy="false">{</mml:mo><mml:mi>μ</mml:mi><mml:mo fence="false" stretchy="false">}</mml:mo><mml:mo>,</mml:mo><mml:msup><mml:mi>σ</mml:mi><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msup><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:munderover><mml:mo>∏</mml:mo><mml:mrow><mml:mi>i</mml:mi></mml:mrow><mml:mrow><mml:mi>N</mml:mi></mml:mrow></mml:munderover><mml:mi>φ</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msub><mml:mrow><mml:mover><mml:mi>y</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mrow><mml:mo maxsize="1.623em" minsize="1.623em">|</mml:mo></mml:mrow><mml:munder><mml:mo>∑</mml:mo><mml:mrow><mml:mi>γ</mml:mi></mml:mrow></mml:munder><mml:msub><mml:mi>p</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>γ</mml:mi></mml:mrow></mml:msub><mml:msub><mml:mi>μ</mml:mi><mml:mrow><mml:mi>γ</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msup><mml:mi>σ</mml:mi><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msup></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>.</mml:mo></mml:mrow></mml:math></disp-formula></p><p>We now recognize this as an ordinary-least-squares likelihood function. We could now solve for the mean for each genotype <inline-formula><mml:math id="inf200"><mml:msub><mml:mi>μ</mml:mi><mml:mi>γ</mml:mi></mml:msub></mml:math></inline-formula> by standard linear regression methods instead of expectation-maximization iterations, and from there extract the locus effect sizes <italic>s</italic><sub><italic>k</italic></sub>. However, this still scales with the total genotype number <inline-formula><mml:math id="inf201"><mml:msup><mml:mn>2</mml:mn><mml:mi>K</mml:mi></mml:msup></mml:math></inline-formula>, and the genotype probabilities for each segregant <inline-formula><mml:math id="inf202"><mml:msub><mml:mi>p</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>γ</mml:mi></mml:mrow></mml:msub></mml:math></inline-formula> are still unspecified.</p><p>To improve this scaling, here we make our second approximation: we restrict our general model of genetic architecture in <xref ref-type="disp-formula" rid="equ43">Equation A3-1</xref> to an additive model, meaning that causal effects at different loci are independent:<disp-formula id="equ53"><label>(A3-11)</label><mml:math id="m53"><mml:mrow><mml:mstyle displaystyle="true" scriptlevel="0"><mml:msub><mml:mi>y</mml:mi><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:munderover><mml:mo>∑</mml:mo><mml:mrow><mml:mi>k</mml:mi></mml:mrow><mml:mrow><mml:mi>K</mml:mi></mml:mrow></mml:munderover><mml:msub><mml:mi>g</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>k</mml:mi></mml:mrow></mml:msub><mml:msub><mml:mi>s</mml:mi><mml:mrow><mml:mi>k</mml:mi></mml:mrow></mml:msub><mml:mo>.</mml:mo></mml:mstyle></mml:mrow></mml:math></disp-formula></p><p>While this approximation substantially restricts the class of genetic architecture models we consider (although see below for a discussion of simple epistasis), it allows us to convert the sum over genotypes in <xref ref-type="disp-formula" rid="equ52">Equation A3-10</xref>, which scales as <inline-formula><mml:math id="inf203"><mml:msup><mml:mn>2</mml:mn><mml:mi>K</mml:mi></mml:msup></mml:math></inline-formula>, to a sum over loci, which scales as <inline-formula><mml:math id="inf204"><mml:mi>K</mml:mi></mml:math></inline-formula>:<disp-formula id="equ54"><label>(A3-12)</label><mml:math id="m54"><mml:mrow><mml:mrow><mml:mi mathvariant="script">L</mml:mi></mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mo fence="false" stretchy="false">{</mml:mo><mml:mrow><mml:mover><mml:mi>y</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover></mml:mrow><mml:mo fence="false" stretchy="false">}</mml:mo><mml:mrow><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:mo fence="false" stretchy="false">{</mml:mo><mml:mi>s</mml:mi><mml:mo fence="false" stretchy="false">}</mml:mo><mml:mo>,</mml:mo><mml:msup><mml:mi>σ</mml:mi><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msup><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:munderover><mml:mo>∏</mml:mo><mml:mrow><mml:mi>i</mml:mi></mml:mrow><mml:mrow><mml:mi>N</mml:mi></mml:mrow></mml:munderover><mml:mi>φ</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msub><mml:mrow><mml:mover><mml:mi>y</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mrow><mml:mo maxsize="1.623em" minsize="1.623em">|</mml:mo></mml:mrow><mml:munderover><mml:mo>∑</mml:mo><mml:mrow><mml:mi>k</mml:mi></mml:mrow><mml:mrow><mml:mi>K</mml:mi></mml:mrow></mml:munderover><mml:msub><mml:mi>π</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>k</mml:mi></mml:mrow></mml:msub><mml:msub><mml:mi>s</mml:mi><mml:mrow><mml:mi>k</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msup><mml:mi>σ</mml:mi><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msup></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>.</mml:mo></mml:mrow></mml:math></disp-formula></p><p>Here we have also assumed that <inline-formula><mml:math id="inf205"><mml:msub><mml:mi>p</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>γ</mml:mi></mml:mrow></mml:msub></mml:math></inline-formula> is well captured by <inline-formula><mml:math id="inf206"><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:msub><mml:mi>π</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>k</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">}</mml:mo></mml:mrow></mml:math></inline-formula>, the posterior probabilities obtained from our HMM at the total set of loci <inline-formula><mml:math id="inf207"><mml:mi>k</mml:mi></mml:math></inline-formula> under consideration. This approximation is valid when most values <inline-formula><mml:math id="inf208"><mml:msub><mml:mi>π</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>k</mml:mi></mml:mrow></mml:msub></mml:math></inline-formula> are close to 0 or 1, as is the case for our genotype data (see Appendix 1-1.2).</p><p>We now rewrite our log-likelihood explicitly as an ordinary-least-squares likelihood:<disp-formula id="equ55"><label>(A3-13)</label><mml:math id="m55"><mml:mrow><mml:mi>log</mml:mi><mml:mo>⁡</mml:mo><mml:mrow><mml:mi mathvariant="script">L</mml:mi></mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mo fence="false" stretchy="false">{</mml:mo><mml:mrow><mml:mover><mml:mi>y</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover></mml:mrow><mml:mo fence="false" stretchy="false">}</mml:mo><mml:mrow><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:mo fence="false" stretchy="false">{</mml:mo><mml:mi>s</mml:mi><mml:mo fence="false" stretchy="false">}</mml:mo><mml:mo>,</mml:mo><mml:msup><mml:mi>σ</mml:mi><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msup><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mo>−</mml:mo><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mfrac><mml:mn>1</mml:mn><mml:mrow><mml:mn>2</mml:mn><mml:msup><mml:mi>σ</mml:mi><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msup></mml:mrow></mml:mfrac></mml:mstyle><mml:munderover><mml:mo>∑</mml:mo><mml:mrow><mml:mi>i</mml:mi></mml:mrow><mml:mrow><mml:mi>N</mml:mi></mml:mrow></mml:munderover><mml:msup><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msub><mml:mrow><mml:mover><mml:mi>y</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mo>−</mml:mo><mml:munderover><mml:mo>∑</mml:mo><mml:mrow><mml:mi>k</mml:mi></mml:mrow><mml:mrow><mml:mi>K</mml:mi></mml:mrow></mml:munderover><mml:msub><mml:mi>π</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>k</mml:mi></mml:mrow></mml:msub><mml:msub><mml:mi>s</mml:mi><mml:mrow><mml:mi>k</mml:mi></mml:mrow></mml:msub></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msup><mml:mo>+</mml:mo><mml:mtext>const.</mml:mtext></mml:mrow></mml:math></disp-formula></p><p>In vector notation, we wish to compute<disp-formula id="equ56"><label>(A3-14)</label><mml:math id="m56"><mml:mrow><mml:munder><mml:mrow><mml:mi mathvariant="normal">a</mml:mi><mml:mi mathvariant="normal">r</mml:mi><mml:mi mathvariant="normal">g</mml:mi><mml:mspace width="thinmathspace"/><mml:mi mathvariant="normal">m</mml:mi><mml:mi mathvariant="normal">i</mml:mi><mml:mi mathvariant="normal">n</mml:mi></mml:mrow><mml:mi>β</mml:mi></mml:munder><mml:mrow><mml:mo>{</mml:mo><mml:mrow><mml:mrow><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:mrow><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:mi>Y</mml:mi><mml:mo>−</mml:mo><mml:mi>X</mml:mi><mml:mi>β</mml:mi><mml:mrow><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:msubsup><mml:mrow><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msubsup></mml:mrow><mml:mo>}</mml:mo></mml:mrow><mml:mo>,</mml:mo></mml:mrow></mml:math></disp-formula></p><p>where <inline-formula><mml:math id="inf209"><mml:mi>Y</mml:mi></mml:math></inline-formula> is a vector of phenotype values <inline-formula><mml:math id="inf210"><mml:mover accent="true"><mml:msub><mml:mi>y</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo stretchy="false">^</mml:mo></mml:mover></mml:math></inline-formula> for individuals <italic>i</italic>, <inline-formula><mml:math id="inf211"><mml:mi>X</mml:mi></mml:math></inline-formula> is a matrix of genotype values <inline-formula><mml:math id="inf212"><mml:msub><mml:mi>π</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>k</mml:mi></mml:mrow></mml:msub></mml:math></inline-formula> for all individuals <italic>i</italic> at locus <inline-formula><mml:math id="inf213"><mml:mi>k</mml:mi></mml:math></inline-formula>, and <inline-formula><mml:math id="inf214"><mml:mi>β</mml:mi></mml:math></inline-formula> is a vector of QTL effect sizes <italic>s</italic><sub><italic>k</italic></sub> at locus <inline-formula><mml:math id="inf215"><mml:mi>k</mml:mi></mml:math></inline-formula>. We can obtain effect sizes directly by the normal equations:<disp-formula id="equ57"><label>(A3-15)</label><mml:math id="m57"><mml:mrow><mml:mrow><mml:mover accent="true"><mml:mi>β</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover><mml:mo>=</mml:mo><mml:mrow><mml:msup><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:msup><mml:mi>X</mml:mi><mml:mi>T</mml:mi></mml:msup><mml:mo>⁢</mml:mo><mml:mi>X</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mrow><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msup><mml:mo>⁢</mml:mo><mml:msup><mml:mi>X</mml:mi><mml:mi>T</mml:mi></mml:msup><mml:mo>⁢</mml:mo><mml:mi>Y</mml:mi></mml:mrow></mml:mrow><mml:mo>.</mml:mo></mml:mrow></mml:math></disp-formula></p><p>Unfortunately, a major assumption of this approach is that phenotype errors are assumed to be equal for all individuals. We already observed above in Appendix 2 that standard errors on phenotype estimates are correlated with frequency: lineages with low frequencies have larger errors on their fitness estimates. Since low-frequency lineages tend to be low-fitness lineages, our phenotype errors are significantly nonrandom (heteroskedastic). As discussed above, these low-frequency lineages can bias the inferred QTL effect sizes towards zero, if they are not equally represented in both parental alleles at the loci under consideration. One might consider using the standard error estimates for each lineage to perform a weighted linear regression to account for this heteroskedasticity. However, there are additional sources of noise that affect phenotyping errors on small numbers of lineages: uncertain genotyping, as described in Appendix 1; novel mutations that arise during strain construction, as described in Appendix 4-1.5; and leakage of MATα and diploid individuals, as described in Appendix 1-1.4. These errors affect only a very small fraction of strains, but they can become problematic when these individuals reach high frequency in the fitness assays (which could occur if, for example, diploidy or a novel mutation is strongly beneficial in an assay environment). These high-frequency, high-error lineages would tend to bias QTL effects away from zero, especially if they were strongly weighted due to their high frequencies. Thus, in our attempt to be conservative in QTL identification in light of multiple sources of heteroskedasticity, we prefer to use unweighted least-squares estimates with their implicit regularization towards zero.</p></sec><sec id="s10-1-3" sec-type="appendix"><title>QTL mapping as feature selection</title><p>So far we have addressed how we can compute QTL effects given a list of known QTL. However, typically, the QTL are unknown and must be identified through a model search procedure. Although some recent models of QTL architecture suggest that nearly all the SNPs in the genome may have small but nonzero effects on some traits (<xref ref-type="bibr" rid="bib18">Boyle et al., 2017</xref>), we assume that we cannot detect QTL that contribute a sufficiently small fraction of the population variance. To see this, consider a model with <inline-formula><mml:math id="inf216"><mml:mi>k</mml:mi></mml:math></inline-formula> QTL that all contribute with equal effect sizes to the population genetic variance <inline-formula><mml:math id="inf217"><mml:msubsup><mml:mi>σ</mml:mi><mml:mtext>gen</mml:mtext><mml:mn>2</mml:mn></mml:msubsup></mml:math></inline-formula>, and whose locations are all known precisely. Each QTL then contributes <inline-formula><mml:math id="inf218"><mml:mrow><mml:msubsup><mml:mi>σ</mml:mi><mml:mrow><mml:mi>Q</mml:mi><mml:mo>⁢</mml:mo><mml:mi>T</mml:mi><mml:mo>⁢</mml:mo><mml:mi>L</mml:mi></mml:mrow><mml:mn>2</mml:mn></mml:msubsup><mml:mo>=</mml:mo><mml:mrow><mml:msubsup><mml:mi>σ</mml:mi><mml:mtext>gen</mml:mtext><mml:mn>2</mml:mn></mml:msubsup><mml:mo>/</mml:mo><mml:mi>k</mml:mi></mml:mrow></mml:mrow></mml:math></inline-formula> to the genetic variance. Assuming each QTL is found in exactly half of the <inline-formula><mml:math id="inf219"><mml:mi>N</mml:mi></mml:math></inline-formula> progeny in the measured panel, the effect size of each QTL is then <inline-formula><mml:math id="inf220"><mml:mrow><mml:msub><mml:mi>s</mml:mi><mml:mrow><mml:mi>Q</mml:mi><mml:mo>⁢</mml:mo><mml:mi>T</mml:mi><mml:mo>⁢</mml:mo><mml:mi>L</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:mn>2</mml:mn><mml:mo>⁢</mml:mo><mml:msub><mml:mi>σ</mml:mi><mml:mrow><mml:mi>Q</mml:mi><mml:mo>⁢</mml:mo><mml:mi>T</mml:mi><mml:mo>⁢</mml:mo><mml:mi>L</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>. With this, we can rewrite our two-sample squared Student’s t-statistic as<disp-formula id="equ58"><label>(A3-16)</label><mml:math id="m58"><mml:mrow><mml:mrow><mml:msup><mml:mi>t</mml:mi><mml:mn>2</mml:mn></mml:msup><mml:mo>=</mml:mo><mml:mfrac><mml:msubsup><mml:mi>s</mml:mi><mml:mrow><mml:mi>Q</mml:mi><mml:mo>⁢</mml:mo><mml:mi>T</mml:mi><mml:mo>⁢</mml:mo><mml:mi>L</mml:mi></mml:mrow><mml:mn>2</mml:mn></mml:msubsup><mml:mrow><mml:msubsup><mml:mi>σ</mml:mi><mml:mtext>tot</mml:mtext><mml:mn>2</mml:mn></mml:msubsup><mml:mo>⁢</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mfrac><mml:mn>4</mml:mn><mml:mi>N</mml:mi></mml:mfrac><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:mfrac><mml:mo>=</mml:mo><mml:mrow><mml:mfrac><mml:mi>N</mml:mi><mml:mn>4</mml:mn></mml:mfrac><mml:mo>⁢</mml:mo><mml:mfrac><mml:mrow><mml:mrow><mml:mn>4</mml:mn><mml:mo>⁢</mml:mo><mml:msubsup><mml:mi>σ</mml:mi><mml:mtext>gen</mml:mtext><mml:mn>2</mml:mn></mml:msubsup></mml:mrow><mml:mo>/</mml:mo><mml:mi>k</mml:mi></mml:mrow><mml:msubsup><mml:mi>σ</mml:mi><mml:mtext>tot</mml:mtext><mml:mn>2</mml:mn></mml:msubsup></mml:mfrac></mml:mrow><mml:mo>=</mml:mo><mml:mrow><mml:mfrac><mml:mi>N</mml:mi><mml:mi>k</mml:mi></mml:mfrac><mml:mo>⁢</mml:mo><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mn>1</mml:mn><mml:mo>-</mml:mo><mml:mfrac><mml:msubsup><mml:mi>σ</mml:mi><mml:mtext>err</mml:mtext><mml:mn>2</mml:mn></mml:msubsup><mml:msubsup><mml:mi>σ</mml:mi><mml:mtext>tot</mml:mtext><mml:mn>2</mml:mn></mml:msubsup></mml:mfrac></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mrow><mml:mo>.</mml:mo></mml:mrow></mml:math></disp-formula></p><p>We can input our panel size (<inline-formula><mml:math id="inf221"><mml:mrow><mml:mi>N</mml:mi><mml:mo>=</mml:mo><mml:mrow><mml:mn>100</mml:mn><mml:mo>,</mml:mo><mml:mn>000</mml:mn></mml:mrow></mml:mrow></mml:math></inline-formula>), a conservative phenotyping error variance (<inline-formula><mml:math id="inf222"><mml:mrow><mml:mfrac><mml:msubsup><mml:mi>σ</mml:mi><mml:mtext>err</mml:mtext><mml:mn>2</mml:mn></mml:msubsup><mml:msubsup><mml:mi>σ</mml:mi><mml:mtext>tot</mml:mtext><mml:mn>2</mml:mn></mml:msubsup></mml:mfrac><mml:mo>=</mml:mo><mml:mn>0.15</mml:mn></mml:mrow></mml:math></inline-formula>), and our desired t-statistic for a specific p-value to solve for the number of QTL <inline-formula><mml:math id="inf223"><mml:mi>k</mml:mi></mml:math></inline-formula> that could be detected under these ideal conditions. For a genome-wide p-value of 0.05, this corresponds to <inline-formula><mml:math id="inf224"><mml:mrow><mml:mi>k</mml:mi><mml:mo>∼</mml:mo><mml:mn>3600</mml:mn></mml:mrow></mml:math></inline-formula> QTL, while for a p-value of 0.01, we obtain only <inline-formula><mml:math id="inf225"><mml:mrow><mml:mi>k</mml:mi><mml:mo>∼</mml:mo><mml:mn>3200</mml:mn></mml:mrow></mml:math></inline-formula> QTL. (For a simple environment such as rich media at <inline-formula><mml:math id="inf226"><mml:msup><mml:mn>30</mml:mn><mml:mo>∘</mml:mo></mml:msup></mml:math></inline-formula>, given the phenotypic variance we observe in our assays, this would correspond to an effect size of <inline-formula><mml:math id="inf227"><mml:mrow><mml:msub><mml:mi>s</mml:mi><mml:mrow><mml:mi>Q</mml:mi><mml:mo>⁢</mml:mo><mml:mi>T</mml:mi><mml:mo>⁢</mml:mo><mml:mi>L</mml:mi></mml:mrow></mml:msub><mml:mo>∼</mml:mo><mml:mrow><mml:mn>6</mml:mn><mml:mo>⋅</mml:mo><mml:msup><mml:mn>10</mml:mn><mml:mrow><mml:mo>-</mml:mo><mml:mn>4</mml:mn></mml:mrow></mml:msup></mml:mrow></mml:mrow></mml:math></inline-formula>.) These would already represent sparse subsets of the total number of SNPs in our cross. In practice, of course, there are several factors that will further reduce our power to detect QTL, most notably the uneven distribution of effect sizes (with more QTL having small effects than large effects), linkage between QTL, and uncertainties in QTL locations.</p><p>Thus, identifying QTL in an experimental cross can be viewed as a model selection problem: we seek to identify the sparse subset of SNPs for which the estimated effect sizes <inline-formula><mml:math id="inf228"><mml:mover accent="true"><mml:mi>s</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover></mml:math></inline-formula> can be distinguished from zero given our statistical power. Unfortunately, the set of possible models is very large: for <inline-formula><mml:math id="inf229"><mml:mi>L</mml:mi></mml:math></inline-formula> polymorphisms, there are <inline-formula><mml:math id="inf230"><mml:msup><mml:mn>2</mml:mn><mml:mi>L</mml:mi></mml:msup></mml:math></inline-formula> possible models. Further, collinearity between neighboring SNPs due to strong linkage complicates the problem, as parameters are no longer independent. Therefore, a model search strategy must choose a model that approximates the best model if we could explore the complete space. Here we focus mainly on the class of additive linear models (later including epistasis, see Section A3-3) as it extends from the marker regression framework, but the approaches we describe here are not limited to these classes of models.</p><p>One regularization approach to enforce model sparsity that is widely used in linear regression is the LASSO <inline-formula><mml:math id="inf231"><mml:msup><mml:mi>l</mml:mi><mml:mn>1</mml:mn></mml:msup></mml:math></inline-formula> penalty. In its basic form, the objective of the LASSO is to solve:<disp-formula id="equ59"><label>(A3-17)</label><mml:math id="m59"><mml:mrow><mml:mrow><mml:msub><mml:mtext>min</mml:mtext><mml:mi>β</mml:mi></mml:msub><mml:mo>⁢</mml:mo><mml:mrow><mml:mo>{</mml:mo><mml:mrow><mml:msubsup><mml:mrow><mml:mo fence="true">||</mml:mo><mml:mrow><mml:mi>Y</mml:mi><mml:mo>-</mml:mo><mml:mrow><mml:mi>X</mml:mi><mml:mo>⁢</mml:mo><mml:mi>β</mml:mi></mml:mrow></mml:mrow><mml:mo fence="true">||</mml:mo></mml:mrow><mml:mn>2</mml:mn><mml:mn>2</mml:mn></mml:msubsup><mml:mo>+</mml:mo><mml:mrow><mml:mi>λ</mml:mi><mml:mo>⁢</mml:mo><mml:msub><mml:mrow><mml:mo fence="true">||</mml:mo><mml:mi>β</mml:mi><mml:mo fence="true">||</mml:mo></mml:mrow><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:mrow><mml:mo>}</mml:mo></mml:mrow></mml:mrow><mml:mo>,</mml:mo></mml:mrow></mml:math></disp-formula></p><p>where, here, <inline-formula><mml:math id="inf232"><mml:mi>Y</mml:mi></mml:math></inline-formula> is a vector of phenotypes <italic>y</italic><sub><italic>i</italic></sub>, <inline-formula><mml:math id="inf233"><mml:mi>X</mml:mi></mml:math></inline-formula> is a matrix of genotype values <inline-formula><mml:math id="inf234"><mml:msub><mml:mi>π</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>k</mml:mi></mml:mrow></mml:msub></mml:math></inline-formula>, and <inline-formula><mml:math id="inf235"><mml:mi>β</mml:mi></mml:math></inline-formula> is a vector of QTL effects <italic>s</italic><sub><italic>k</italic></sub>. Here, sparsity is enforced by penalizing the residuals by the magnitude of the parameters, scaled by a coefficient <inline-formula><mml:math id="inf236"><mml:mi>λ</mml:mi></mml:math></inline-formula>. The LASSO penalty has several attractive properties, particularly that it can be easily computed while allowing model consistency under some conditions. Unfortunately, a harsh condition for model consistency is the lack of strong collinearity between true and spurious predictors (<xref ref-type="bibr" rid="bib121">Zhao and Yu, 2006</xref>). This is always violated in QTL mapping studies if recombination frequencies between nearby SNPs are low. In these cases, the LASSO will almost always choose multiple correlated predictors and distribute the true QTL effect amongst them. An intuition for why this occurs is presented in the LARS algorithm, which is a general case of the LASSO (<xref ref-type="bibr" rid="bib38">Efron et al., 2004</xref>). We also demonstrated this tendency to over-estimate the number of QTL using simulations (see Section A3-1.5).</p><p>Thus, to enforce sparsity in collinear cases, we turn to norm <inline-formula><mml:math id="inf237"><mml:msup><mml:mi>l</mml:mi><mml:mi>α</mml:mi></mml:msup></mml:math></inline-formula> penalties where <inline-formula><mml:math id="inf238"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mi>α</mml:mi><mml:mo>&lt;</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:mstyle></mml:math></inline-formula> (since norm penalties where <inline-formula><mml:math id="inf239"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mi>α</mml:mi><mml:mo>&gt;</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:mstyle></mml:math></inline-formula> do not enforce sparse models <xref ref-type="bibr" rid="bib109">Tibshirani, 1996</xref>). The <inline-formula><mml:math id="inf240"><mml:msup><mml:mi>l</mml:mi><mml:mn>0</mml:mn></mml:msup></mml:math></inline-formula> norm (best-subset problem) has the following objective:<disp-formula id="equ60"><label>(A3-18)</label><mml:math id="m60"><mml:mrow><mml:msub><mml:mtext>min</mml:mtext><mml:mrow><mml:mi>β</mml:mi></mml:mrow></mml:msub><mml:mrow><mml:mo>{</mml:mo><mml:mrow><mml:mrow><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:mrow><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:mi>Y</mml:mi><mml:mo>−</mml:mo><mml:mi>X</mml:mi><mml:mi>β</mml:mi><mml:mrow><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:msubsup><mml:mrow><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msubsup><mml:mo>+</mml:mo><mml:mi>λ</mml:mi><mml:mrow><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:mrow><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:mi>β</mml:mi><mml:mrow><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:msub><mml:mrow><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:mrow><mml:mn>0</mml:mn></mml:mrow></mml:msub></mml:mrow><mml:mo>}</mml:mo></mml:mrow><mml:mo>,</mml:mo></mml:mrow></mml:math></disp-formula></p><p>which penalizes the residuals by the number of non-zero parameters, again scaled by a coefficient <inline-formula><mml:math id="inf241"><mml:mi>λ</mml:mi></mml:math></inline-formula>. The least-squares equation can be rewritten as a likelihood function:<disp-formula id="equ61"><label>(A3-19)</label><mml:math id="m61"><mml:mrow><mml:msub><mml:mtext>min</mml:mtext><mml:mrow><mml:mi>β</mml:mi></mml:mrow></mml:msub><mml:mrow><mml:mo>{</mml:mo><mml:mrow><mml:mn>2</mml:mn><mml:mi>log</mml:mi><mml:mo>⁡</mml:mo><mml:mrow><mml:mi mathvariant="script">L</mml:mi></mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mtext>data</mml:mtext><mml:mrow><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:mi>β</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>+</mml:mo><mml:mi>λ</mml:mi><mml:mrow><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:mrow><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:mi>β</mml:mi><mml:mrow><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:msub><mml:mrow><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:mrow><mml:mn>0</mml:mn></mml:mrow></mml:msub></mml:mrow><mml:mo>}</mml:mo></mml:mrow><mml:mo>.</mml:mo></mml:mrow></mml:math></disp-formula></p><p>Certain choices of <inline-formula><mml:math id="inf242"><mml:mi>λ</mml:mi></mml:math></inline-formula> amount to well-known asymptotic properties: <inline-formula><mml:math id="inf243"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mi>λ</mml:mi><mml:mo>=</mml:mo><mml:mn>2</mml:mn></mml:mrow></mml:mstyle></mml:math></inline-formula> is the Akaike information criterion (AIC), which is equivalent to model selection under leave-one-out cross validation and is known to not yield consistent model selection (<xref ref-type="bibr" rid="bib99">Shao, 1993</xref>); <inline-formula><mml:math id="inf244"><mml:mrow><mml:mi>λ</mml:mi><mml:mo>=</mml:mo><mml:mrow><mml:mi>log</mml:mi><mml:mo>⁡</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>N</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula> is the Bayesian information criterion (BIC). Unfortunately, the best-subset problem cannot be easily solved; solving <inline-formula><mml:math id="inf245"><mml:msup><mml:mi>l</mml:mi><mml:mi>α</mml:mi></mml:msup></mml:math></inline-formula> regularization where <inline-formula><mml:math id="inf246"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mi>α</mml:mi><mml:mo>&lt;</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:mstyle></mml:math></inline-formula> is NP-hard (<xref ref-type="bibr" rid="bib85">Natarajan, 1995</xref>). Several approximations to this optimization function exist (for example one can develop an algorithm based on modifications of the <inline-formula><mml:math id="inf247"><mml:msup><mml:mi>l</mml:mi><mml:mn>2</mml:mn></mml:msup></mml:math></inline-formula> penalty, e.g. <xref ref-type="bibr" rid="bib73">Liu et al., 2017</xref>). However, these algorithms do not perform well in the presence of collinearity.</p><p>Therefore, we choose to employ stepwise regression with forward selection and positional refinement, which we found to have good performance (see Section A3-1.5 for assessment of its accuracy on simulated data). Similar types of forward-search approaches are used in the popular QTL mapping package R/qtl (<xref ref-type="bibr" rid="bib5">Arends et al., 2010</xref>), although other implementational details differ from our methods described here.</p><p>The forward-search approach in variable selection is conceptually simple. We start with an empty model and try adding each possible remaining variable one by one, greedily choosing at each step the best available variable to include in the model (the one that minimizes the residual sum-of-squares (RSS) after optimizing the complete set of coefficients <inline-formula><mml:math id="inf248"><mml:mover accent="true"><mml:mi>β</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover></mml:math></inline-formula>). This process is repeated until a desired stopping criterion (described below) is reached or until all variables have been included in the model. Practically, the optimized coefficients <inline-formula><mml:math id="inf249"><mml:mover accent="true"><mml:mi>β</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover></mml:math></inline-formula> could be obtained by directly solving the normal equations (<xref ref-type="disp-formula" rid="equ57">Equation A3-15)</xref>. However, this approach is computationally slow. Instead, this forward-search can be implemented by QR decomposition of X:<disp-formula id="equ62"><label>(A3-20)</label><mml:math id="m62"><mml:mi>X</mml:mi><mml:mo>=</mml:mo><mml:mrow><mml:mrow><mml:mi>Q</mml:mi><mml:mo>⁢</mml:mo><mml:mi>R</mml:mi></mml:mrow><mml:mo>,</mml:mo></mml:mrow></mml:math></disp-formula><disp-formula id="equ63"><label>(A3-21)</label><mml:math id="m63"><mml:mover accent="true"><mml:mi>β</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover><mml:mo>=</mml:mo><mml:mrow><mml:mrow><mml:msup><mml:mi>R</mml:mi><mml:mrow><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msup><mml:mo>⁢</mml:mo><mml:msup><mml:mi>Q</mml:mi><mml:mi>T</mml:mi></mml:msup><mml:mo>⁢</mml:mo><mml:mi>Y</mml:mi></mml:mrow><mml:mo>.</mml:mo></mml:mrow></mml:math></disp-formula></p><p>This transformation is useful because adding a new variable to X does not require a complete QR re-factorization (<xref ref-type="bibr" rid="bib32">Daniel et al., 1976</xref>).</p><p>One disadvantage of the forward-search approach is that once variables are included in the model, they are never removed. We can improve on this by allowing variables to explore their local neighborhood. Specifically, after each addition of a new QTL, we allow each putative QTL to “search” all locations between its flanking QTL (or the chromosome ends), selecting the location that minimizes the residuals. In this manner, we identify a set of models of increasing size where we search for local maxima at each iteration. We note that several other variations of stepwise search algorithms exist, such as variations on MCMC (<xref ref-type="bibr" rid="bib117">Yi, 2004</xref>), however our motivation here is to implement a relatively simple algorithm which we found to have good performance.</p><p>A major area of contention in stepwise-search approaches is the choice of stopping criteria and/or calculation of p-values for individual variables (<xref ref-type="bibr" rid="bib55">Harrell, 2001</xref>; <xref ref-type="bibr" rid="bib109">Tibshirani, 1996</xref>). We refrain from performing either of these. First, variables are added until well beyond the penalization using <inline-formula><mml:math id="inf250"><mml:mi>λ</mml:mi></mml:math></inline-formula> = log(N), which is the BIC penalty. Although this penalty asymptotically yields the correct model if all models could be explored (in practice we only have a list of <inline-formula><mml:math id="inf251"><mml:mi>K</mml:mi></mml:math></inline-formula> models, where <inline-formula><mml:math id="inf252"><mml:mi>K</mml:mi></mml:math></inline-formula> is the number of variables that were added), we prefer to choose a sparser model if it increases predictive performance (the correct model may not be the best predictive model), and thus enforce <inline-formula><mml:math id="inf253"><mml:mrow><mml:mi>λ</mml:mi><mml:mo>≥</mml:mo><mml:mrow><mml:mi>log</mml:mi><mml:mo>⁡</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>N</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula>. To identify the desired <inline-formula><mml:math id="inf254"><mml:mi>λ</mml:mi></mml:math></inline-formula>, we perform an <inline-formula><mml:math id="inf255"><mml:mrow><mml:mi>a</mml:mi><mml:mo>*</mml:mo><mml:mi>b</mml:mi></mml:mrow></mml:math></inline-formula> nested cross-validation where <inline-formula><mml:math id="inf256"><mml:mrow><mml:mi>a</mml:mi><mml:mo>=</mml:mo><mml:mn>10</mml:mn></mml:mrow></mml:math></inline-formula> and <inline-formula><mml:math id="inf257"><mml:mrow><mml:mi>b</mml:mi><mml:mo>=</mml:mo><mml:mn>9</mml:mn></mml:mrow></mml:math></inline-formula>. Here, the total data set is split in <inline-formula><mml:math id="inf258"><mml:mrow><mml:mi>a</mml:mi><mml:mo>=</mml:mo><mml:mn>10</mml:mn></mml:mrow></mml:math></inline-formula> sets. One by one, a set is selected as (outer) test set for unbiased assessment of model predictive performance, and the other <inline-formula><mml:math id="inf259"><mml:mrow><mml:mrow><mml:mi>a</mml:mi><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mo>=</mml:mo><mml:mn>9</mml:mn></mml:mrow></mml:math></inline-formula> sets are combined into a (outer) training set. We then divided each (outer) training set into <inline-formula><mml:math id="inf260"><mml:mrow><mml:mi>b</mml:mi><mml:mo>=</mml:mo><mml:mn>9</mml:mn></mml:mrow></mml:math></inline-formula> inner sets. One by one, an inner set is selected as (inner) test set for choosing the optimal <inline-formula><mml:math id="inf261"><mml:mi>λ</mml:mi></mml:math></inline-formula>, while the remaining <inline-formula><mml:math id="inf262"><mml:mrow><mml:mrow><mml:mi>b</mml:mi><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mo>=</mml:mo><mml:mn>8</mml:mn></mml:mrow></mml:math></inline-formula> inner sets are combined into a (inner) training set. In this cross-validation procedure, the inner loops are used to choose the hyperparameter <inline-formula><mml:math id="inf263"><mml:mi>λ</mml:mi></mml:math></inline-formula>, and the outer loop to obtain an unbiased estimate of the performance of the model selection procedure (<xref ref-type="bibr" rid="bib24">Cawley and Talbot, 2010</xref>). Finally, the outer loop can be used to choose a new hyperparameter <inline-formula><mml:math id="inf264"><mml:mi>λ</mml:mi></mml:math></inline-formula>, which can be used on the whole dataset to provide a final model with expected performance from this cross-validation procedure. Of course, selecting <inline-formula><mml:math id="inf265"><mml:mi>λ</mml:mi></mml:math></inline-formula> based on predictive performance cannot guarantee the correct model. Note that coefficients identified through a forward stepwise regression procedure are likely to be biased (upwards) if true QTL have been excluded by the search procedure, and have enlarged variances if false positives have been included (<xref ref-type="bibr" rid="bib103">Smith, 2018</xref>). However, simulations under various QTL architectures (see Section A3-1.5) have found that this approach has a tendency to underestimate the total number of QTL, stopping only when simulated QTL effects are lower than the typical error from the experiment, and to perform relatively well at identifying the QTL locations. The bias is thus likely to be small unless the majority of QTL are below the detection limit. These results align with our objective of extracting the QTL information most likely to be biologically meaningful.</p><p>Nevertheless, in a few cases, our SNPs demonstrate extreme collinearity due to tight linkage (e.g. SNPs separated by only a few basepairs). Strong collinearity in the genotype matrix leads to an ill-conditioned problem, with unstable estimates of coefficients due to numerical instabilities in QR decomposition or simply because the likelihood surface is poorly defined. In some cases, our inference procedure detects QTL at SNPs in tight linkage with opposite effects of extreme magnitude, which we believe is not a realistic feature of the genetic architecture of our traits of interest. Typically, collinear features are pre-processed before variable selection. However, in the case of dense genotypic markers, most markers exhibit some degree of collinearity with neighboring markers, and so there is no clear strategy to identify or remove problematic features. Instead, we choose to process the collinear features after feature selection. Once we have obtained the set of cross-validated QTL, we calculate the pairwise genotype correlation between neighboring QTL, and choose a degree of correlation where QTL are ‘merged’. The cutoff value is chosen by cross-validation. When several QTL are merged, we treat it as one effective QTL and re-infer all effect sizes of the model. Finally, we re-optimize all the QTL positions after merging. In rare cases where the re-optimized positions again place two QTL in close proximity (and thus become highly collinear), the procedure is repeated until no more merging occurs. Thus, this procedure is similar to a backwards variable selection process, but the QTL removed by merging are only the ones that are within a high degree of collinearity with other QTL. In our analysis, we report the results of merging for a threshold that is higher than the threshold that minimizes the cross-validation error, but within one standard error of this minimum, as suggested by <xref ref-type="bibr" rid="bib49">Friedman et al., 2010</xref>.</p></sec><sec id="s10-1-4" sec-type="appendix"><title>Fine-mapping of QTL locations</title><p>Once we have obtained a list of putative QTL (“lead SNPs”), we may seek an interval estimate of the location of each QTL; the size of these intervals will be significant for interpreting causal effects of single genes or single SNPs. We expect that our resolution for localizing QTL will depend on the effect size and local recombination rate.</p><p>If we assume a single QTL, then a Bayes credible interval can be obtained by computing the maximum likelihood of the data at every SNP <inline-formula><mml:math id="inf266"><mml:mi>l</mml:mi></mml:math></inline-formula> in the genome (<xref ref-type="bibr" rid="bib78">Manichaikul et al., 2006</xref>). The 95% credible interval can then be defined as the interval I where <inline-formula><mml:math id="inf267"><mml:mrow><mml:msub><mml:mo largeop="true" symmetric="true">∑</mml:mo><mml:mrow><mml:mi>l</mml:mi><mml:mo>∈</mml:mo><mml:mi>I</mml:mi></mml:mrow></mml:msub><mml:mi class="ltx_font_mathcaligraphic">ℒ</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mtext>location</mml:mtext><mml:mo>=</mml:mo><mml:mi>l</mml:mi><mml:mo stretchy="false">|</mml:mo><mml:mtext>data</mml:mtext><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>≥</mml:mo><mml:mn>0.95</mml:mn></mml:mrow></mml:math></inline-formula>. For multiple QTL, this is more complicated, as this requires joint optimization of QTL positions to obtain proper maximum likelihood estimates. Our approach to simplify this problem is to consider one QTL at a time and fix all other QTL positions. The QTL of interest is then constrained to SNP positions between its neighboring QTL (or chromosome ends), and the 95% credible interval is computed as above by obtaining the maximum likelihood of the data given that a single QTL is found at each possible SNP position between its neighboring QTL and given all detected other QTL (thus obtaining a likelihood profile for the considered positions of the QTL). We then used uniform prior on the location of the QTL (between the neighboring QTL) to derive a posterior distribution, from which one can derive an interval that exceeds 0.95.</p><p>The distribution of CI sizes in basepairs across all traits is shown in <xref ref-type="fig" rid="app3fig1">Appendix 3—figure 1</xref>, as well as the distribution of the number of genes at least partially overlapping each. The mean (median) CI size is ∼22 kb (∼12 kb) and the mean (median) gene count is 13 (7) genes. In addition, 282 QTL (11%) are mapped to a single gene (or single intergenic region), and 52 QTL (2%) are mapped to a single lead SNP.</p><fig id="app3fig1" position="float"><label>Appendix 3—figure 1.</label><caption><title>Distributions of credible interval (CI) sizes for inferred QTL across all traits.</title><p>Left: physical size in kilobases, with 2 kb bins. Center: number of genes that overlap each CI, with 2-gene bins. Right: density plot of number of genes that overlap each CI versus absolute effect size (on a log-10 scale). The count in each bin is indicated by the colorbar.</p></caption><graphic mime-subtype="tiff" mimetype="image" xlink:href="elife-73983-app3-fig1-v2.tif"/></fig></sec><sec id="s10-1-5" sec-type="appendix"><title>QTL simulations</title><p>To validate the performance of our analysis methods and its robustness to experimental parameters, we turn to simulated data where the true genomic architecture (positions and effect sizes of QTL) is completely known.</p><p>We first simulated various QTL architectures, by placing 15, 50, 150, or 1000 QTL at random locations in the genome and sampling effect sizes according to an exponential distribution with a mean effect of 1% and a random sign. Using our real genome data, we chose samples of 1000, 10,000, and 99,950 individuals and calculated their phenotypes according to an additive model. We then added varying levels of phenotypic noise to test the effect of heritability on model search performance: we added random Gaussian error with variance <inline-formula><mml:math id="inf268"><mml:msubsup><mml:mi>σ</mml:mi><mml:mi>E</mml:mi><mml:mn>2</mml:mn></mml:msubsup></mml:math></inline-formula> to the true phenotypes with variance <inline-formula><mml:math id="inf269"><mml:msubsup><mml:mi>σ</mml:mi><mml:mi>G</mml:mi><mml:mn>2</mml:mn></mml:msubsup></mml:math></inline-formula> to recover the desired <inline-formula><mml:math id="inf270"><mml:mrow><mml:msup><mml:mi>H</mml:mi><mml:mn>2</mml:mn></mml:msup><mml:mo>=</mml:mo><mml:mrow><mml:msubsup><mml:mi>σ</mml:mi><mml:mi>G</mml:mi><mml:mn>2</mml:mn></mml:msubsup><mml:mo>/</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:msubsup><mml:mi>σ</mml:mi><mml:mi>G</mml:mi><mml:mn>2</mml:mn></mml:msubsup><mml:mo>+</mml:mo><mml:msubsup><mml:mi>σ</mml:mi><mml:mi>E</mml:mi><mml:mn>2</mml:mn></mml:msubsup></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula>.</p><p>With these simulated phenotypes, before turning to our forward search approach, we explored inference with the widely-used LASSO approach (model selection with <inline-formula><mml:math id="inf271"><mml:msup><mml:mi>l</mml:mi><mml:mn>1</mml:mn></mml:msup></mml:math></inline-formula> regularization, see Section A3-1.3 above). We use the R package biglasso (<xref ref-type="bibr" rid="bib120">Zeng and Breheny, 2020</xref>) which is designed for memory-efficient computation on large datasets. For sample sizes of 10,000 segregants, we perform 5-fold cross-validation to choose the optimal regularization penalty <inline-formula><mml:math id="inf272"><mml:mi>λ</mml:mi></mml:math></inline-formula> and obtain the optimized model coefficients.</p><p>We see in <xref ref-type="fig" rid="app3fig2">Appendix 3—figure 2</xref> that the models inferred by LASSO consistently over-estimate the number of QTL by factors of 2–10, for all simulated architectures and all heritabilities, despite achieving high performance (<inline-formula><mml:math id="inf273"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msup><mml:mi>R</mml:mi><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msup><mml:mrow><mml:mo>/</mml:mo></mml:mrow><mml:msup><mml:mi>H</mml:mi><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msup><mml:mo>&gt;</mml:mo><mml:mn>0.9</mml:mn></mml:mrow></mml:mstyle></mml:math></inline-formula>). By examining the location of inferred QTL (see <xref ref-type="fig" rid="app3fig3">Appendix 3—figure 3</xref>), we see that for each true QTL, the model identifies a cluster of several QTL in the vicinity. Thus the LASSO approach does identify correct genomic regions, and can give highly accurate predictive performance, but attempting any detailed analysis of the number of QTL or their positions would be misleading. This accords with our expectation: because our SNPs are dense along the genome and often in strong linkage, LASSO regularization is not effective at enforcing sparsity (see Section A3-1.3 for more detail on the drawbacks of LASSO in the presence of strong collinearities). In addition, when heritability is low, some false positives are identified that are far from any true QTL.</p><fig id="app3fig2" position="float"><label>Appendix 3—figure 2.</label><caption><title>Performance of LASSO inference on simulated QTL architectures with 15, 50, or 150 true QTL at varying heritabilities.</title><p>Left: number of inferred QTL. Center: number of inferred QTL divided by number of true QTL. The dotted line indicates a value of 1 (the correct number of QTL). Right: Proportion of variance explained (<inline-formula><mml:math id="inf274"><mml:msup><mml:mi>R</mml:mi><mml:mn>2</mml:mn></mml:msup></mml:math></inline-formula>) of the model, estimated from cross-validation, as a fraction of the simulated broad-sense heritability. <inline-formula><mml:math id="inf275"><mml:msup><mml:mi>H</mml:mi><mml:mn>2</mml:mn></mml:msup></mml:math></inline-formula> The dotted line indicates a value of 1 (all broad-sense heritability is explained by the model).</p></caption><graphic mime-subtype="tiff" mimetype="image" xlink:href="elife-73983-app3-fig2-v2.tif"/></fig><fig id="app3fig3" position="float"><label>Appendix 3—figure 3.</label><caption><title>QTL inferred by LASSO plotted along the genome, for different heritabilities.</title><p>Models were inferred with a sample of 10,000 segregants, for simulated architectures with (top) 15 or (bottom) 150 true QTL. QTL are colored red (blue) if their effect is positive (negative) and opacity is given by effect size (on a log scale). The number of QTL in the true or inferred models is given to the right.</p></caption><graphic mime-subtype="tiff" mimetype="image" xlink:href="elife-73983-app3-fig3-v2.tif"/></fig><p>We then turn to our cross-validated forward search algorithm as described in Section A3-1.3 to infer QTL locations and effect sizes, and assess the performance of our approach via several metrics. As expected, increasing the number of segregants increases the number of QTL identified, and this is especially evident at low heritabilities (<xref ref-type="fig" rid="app3fig4">Appendix 3—figure 4</xref>, left panel). When the number of segregants used is low, the variance explained can be high despite recovering only a small fraction of the correct genetic architecture (<xref ref-type="fig" rid="app3fig4">Appendix 3—figure 4</xref>, center panel). When the number of QTL is very high, models inferred on small sample sizes often combine several QTL into a single leading one, and the positions are more often incorrect. The QTL that are not identified tend to be of lower effect sizes or are linked in such a way that their identification is more difficult (<xref ref-type="fig" rid="app3fig7">Appendix 3—figure 7</xref> and <xref ref-type="fig" rid="app3fig8">Appendix 3—figure 8</xref>). This is more evident at very high polygenicity (1000 QTL, <xref ref-type="fig" rid="app3fig9">Appendix 3—figure 9</xref>). Importantly, increasing the number of segregants does not lead to overfitting: the number of QTL identified is always less than the true model, for all models and heritabilities.</p><fig id="app3fig4" position="float"><label>Appendix 3—figure 4.</label><caption><title>Effect of sample size on QTL inference.</title><p>Left: Number of inferred QTL. Dashed line represents the number of QTL in the true model (150). Center: Model performance (<inline-formula><mml:math id="inf276"><mml:msup><mml:mi>R</mml:mi><mml:mn>2</mml:mn></mml:msup></mml:math></inline-formula> on a test set of individuals) as a fraction of heritability <inline-formula><mml:math id="inf277"><mml:msup><mml:mi>H</mml:mi><mml:mn>2</mml:mn></mml:msup></mml:math></inline-formula>. Dashed line represents <inline-formula><mml:math id="inf278"><mml:mrow><mml:mrow><mml:msup><mml:mi>R</mml:mi><mml:mn>2</mml:mn></mml:msup><mml:mo>/</mml:mo><mml:msup><mml:mi>H</mml:mi><mml:mn>2</mml:mn></mml:msup></mml:mrow><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:math></inline-formula>, meaning all of the genetic variance is explained by the model. Right: Model similarity score (see Section A3-2.3) between the true and inferred models. Dashed line represents perfect recovery of the true model.</p></caption><graphic mime-subtype="tiff" mimetype="image" xlink:href="elife-73983-app3-fig4-v2.tif"/></fig><fig id="app3fig5" position="float"><label>Appendix 3—figure 5.</label><caption><title>Effect of heritability on QTL inference (for 10,000 segregants).</title><p>Left: Number of inferred QTL, as a fraction of the number of true QTL. Right: Model performance (<inline-formula><mml:math id="inf279"><mml:msup><mml:mi>R</mml:mi><mml:mn>2</mml:mn></mml:msup></mml:math></inline-formula> on a test set of individuals) as a fraction of heritability <inline-formula><mml:math id="inf280"><mml:msup><mml:mi>H</mml:mi><mml:mn>2</mml:mn></mml:msup></mml:math></inline-formula>. Dashed line represents <inline-formula><mml:math id="inf281"><mml:mrow><mml:mrow><mml:msup><mml:mi>R</mml:mi><mml:mn>2</mml:mn></mml:msup><mml:mo>/</mml:mo><mml:msup><mml:mi>H</mml:mi><mml:mn>2</mml:mn></mml:msup></mml:mrow><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:math></inline-formula>, meaning all of the genetic variance is explained by the model.</p></caption><graphic mime-subtype="tiff" mimetype="image" xlink:href="elife-73983-app3-fig5-v2.tif"/></fig><fig id="app3fig6" position="float"><label>Appendix 3—figure 6.</label><caption><title>Number of genes contained in 95% credible intervals inferred on simulated data (at 150 QTL), for 1000 segregants (light blue shaded) and 100,000 segregants (dark blue outline).</title><p>Total numbers of inferred QTL are given in the legend.</p></caption><graphic mime-subtype="tiff" mimetype="image" xlink:href="elife-73983-app3-fig6-v2.tif"/></fig><fig id="app3fig7" position="float"><label>Appendix 3—figure 7.</label><caption><title>Inferred QTL plotted along the genome, for different sample sizes.</title><p>The true model (same for all subfigures) has 150 QTL and heritability given in the subfigure title. QTL are colored red (blue) if their effect is positive (negative) and opacity is given by effect size (on a log scale). Number of inferred QTL for each model is shown on the right.</p></caption><graphic mime-subtype="tiff" mimetype="image" xlink:href="elife-73983-app3-fig7-v2.tif"/></fig><fig id="app3fig8" position="float"><label>Appendix 3—figure 8.</label><caption><title>Inferred QTL plotted along the genome, for different heritabilities.</title><p>The true model has 150 QTL, and all inference is performed on a sample size of 10,000 segregants. QTL are colored red (blue) if their effect is positive (negative) and opacity is given by effect size (on a log scale). Number of inferred QTL for each model is shown on the right.</p></caption><graphic mime-subtype="tiff" mimetype="image" xlink:href="elife-73983-app3-fig8-v2.tif"/></fig><fig id="app3fig9" position="float"><label>Appendix 3—figure 9.</label><caption><title>Inferred QTL plotted along the genome, for different heritabilities.</title><p>The true model has 1000 QTL, and all inference is performed on a sample size of 10,000 segregants. QTL are colored red (blue) if their effect is positive (negative) and opacity is given by effect size (on a log scale). Number of inferred QTL for each model is shown on the right.</p></caption><graphic mime-subtype="tiff" mimetype="image" xlink:href="elife-73983-app3-fig9-v2.tif"/></fig><p>We can also evaluate the influence of sample size on our ability to fine-map detected QTL to causal genes. In <xref ref-type="fig" rid="app3fig6">Appendix 3—figure 6</xref> we show the distribution of credible interval sizes (in terms of number of genes contained) for sample sizes of 1,000 and 100,000 segregants. We observe that at larger sample sizes, we decrease the median CI size from 6 genes to one gene. In fact, for 100,000 segregants, 91 of 128 detected QTL (70%) are mapped to a single causal gene or intergenic region, as opposed to 9 of 77 detected QTL (12%) for the smaller sample size.</p><p>These results allow us to gain some intuition for how our cross-validated forward search operates. The algorithm greedily adds QTL to the model until their inclusion to the model (and thus, explained phenotypic variance) no longer exceeds the model bias (squared) and variance. Both these increase the expected error but are greatly reduced at large sample size (but are increased at low heritabilities), and the forward search can therefore identify more QTL as sample size increases. However, while our panel of spores is very large, it remains underpowered in several cases: (1) when QTL have very low effect size, therefore not contributing significantly to the phenotypic variance, and (2) when composite QTL are in strong linkage and few spores have recombination between the QTL, then the individual identification of QTL only contributes marginally to the explained variance and the forward search may also miss them.</p><p>However, even given this “true” model, it can be difficult to quantitatively compare the accuracy of a list of putative models from different model search procedures. Typically, a variable-inclusion error rate is used, by simply assessing the number of false positives and false negatives. These metrics are adequate in the absence of strong collinearity. In the QTL mapping case, we believe that it may be more beneficial to assess models based on their identification of the correct number of QTL, the correct effect size estimates, and at least an approximately correct location if not the exact nucleotide. We therefore define an alternative model accuracy metric that combines both effect size and proximity while penalizing missed QTL or false positives. We adapt the model similarity metric developed in Section A3-2.3 for comparing QTL models across traits; this metric ranges from 0 to 1 and can be loosely interpreted as the degree at which two models are correlated with each other. Here, instead of using two inferred models, we simply compare the true model to an inferred model; the resulting similarity <inline-formula><mml:math id="inf282"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msup><mml:mrow><mml:mi mathvariant="double-struck">S</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msup></mml:mrow></mml:mstyle></mml:math></inline-formula> can then be interpreted as the accuracy of the inferred model. Results from the simulations (see <xref ref-type="fig" rid="app3fig4">Appendix 3—figure 4</xref>, right panel) show again that increasing the number of segregants used in the inference greatly increases the accuracy of the model, especially at low heritabilities. We highlight the difference between metrics of predictive performance such as <inline-formula><mml:math id="inf283"><mml:msup><mml:mi>R</mml:mi><mml:mn>2</mml:mn></mml:msup></mml:math></inline-formula> (<xref ref-type="fig" rid="app3fig4">Appendix 3—figure 4</xref>, center panel) and this metric of model accuracy: <inline-formula><mml:math id="inf284"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msup><mml:mrow><mml:mi mathvariant="double-struck">S</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msup></mml:mrow></mml:mstyle></mml:math></inline-formula> penalizes models explicitly for false negatives and false positives, while as we have seen, <inline-formula><mml:math id="inf285"><mml:msup><mml:mi>R</mml:mi><mml:mn>2</mml:mn></mml:msup></mml:math></inline-formula> values can remain high for models with many false negatives (ie models with low heritability) or many false positives (as in LASSO inference, see above). Thus, our stringent model comparison framework suggests that increasing the heritability or the number of segregants lead to a more accurate view of the genetic architecture of the trait.</p></sec><sec id="s10-1-6" sec-type="appendix"><title>LOD scores</title><p>To compare with our forward search procedure, we also calculate LOD scores and estimated effect sizes for each SNP in the classical manner, by independent t-tests (<xref ref-type="bibr" rid="bib20">Broman et al., 2003</xref>; <xref ref-type="bibr" rid="bib71">Lander and Botstein, 1989</xref>). These values are shown in <xref ref-type="fig" rid="fig2">Figure 2</xref>. We obtain a measure of genome-wide significance by permutation test (95th percentile of genome-wide maximum LOD scores observed over 1,000 permutations) (<xref ref-type="bibr" rid="bib20">Broman et al., 2003</xref>). This value is very similar across all phenotypes (mean 3.25, standard deviation 0.06) and so we use the mean value as the threshold of significance.</p></sec><sec id="s10-1-7" sec-type="appendix"><title>Directional selection</title><p>There is often interest in understanding if phenotypic differences between strains are due to selection on new mutations for particular trait values (i.e. directional selection). Several tests have been proposed to address this question. The first one (the ‘sign test’) is a simple binomial test that counts whether one parental strain is enriched for beneficial or deleterious alleles in an environment (see <xref ref-type="fig" rid="fig3s2">Figure 3—figure supplement 2</xref> for the distribution of QTL effect sizes broken down by sign). However, this test suffers from ascertainment biases, since parents are often chosen for a cross or for phenotypic assays only if they differed sufficiently in phenotype. A similar version of this test (the ‘constrained sign test’), where the ratio of beneficial to deleterious alleles is constrained by the observed phenotypic difference, can correct for this (<xref ref-type="bibr" rid="bib88">Orr, 1998</xref>). However, this correction for ascertainment bias has been criticized to lack power (<xref ref-type="bibr" rid="bib94">Rice and Townsend, 2012</xref>). Finally, another test (the ‘variance test’) compares the phenotypic variance in the segregants to the phenotypic variance of the two parents (<xref ref-type="bibr" rid="bib48">Fraser, 2020</xref>). When parents have extreme values with many segregating polymorphisms, this test rejects the null hypothesis of no directional selection. This test, however, also suffers from the ascertainment bias indicated above.</p><p>When applying all three tests to our data, we find only weak evidence of directional selection (Table A3-1). This could indicate a mild concordance of our assayed environments with selection in natural environments; however it could also result from a fundamental effect of polygenicity and pleiotropy.</p><table-wrap id="app3table1" position="float"><label>Appendix 3—table 1.</label><caption><title>Values for tests of directional selection.</title></caption><table frame="hsides" rules="groups"><thead><tr><th align="left" valign="bottom">Condition</th><th align="left" valign="bottom">Sign test</th><th align="left" valign="bottom">Variance test</th><th align="left" valign="bottom">Constrained sign test</th></tr></thead><tbody><tr><td align="char" char="." valign="bottom">23 C</td><td align="char" char="." valign="bottom">0.2191</td><td align="char" char="." valign="bottom">0.0248</td><td align="char" char="." valign="bottom">0.9035</td></tr><tr><td align="char" char="." valign="bottom">25 C</td><td align="char" char="." valign="bottom">0.0193</td><td align="char" char="." valign="bottom">0.0147</td><td align="char" char="." valign="bottom">0.4001</td></tr><tr><td align="char" char="." valign="bottom">27 C</td><td align="char" char="." valign="bottom">0.0489</td><td align="char" char="." valign="bottom">0.0163</td><td align="char" char="." valign="bottom">0.4786</td></tr><tr><td align="char" char="." valign="bottom">30 C</td><td align="char" char="." valign="bottom">0.0389</td><td align="char" char="." valign="bottom">0.011</td><td align="char" char="." valign="bottom">0.5603</td></tr><tr><td align="char" char="." valign="bottom">33 C</td><td align="char" char="." valign="bottom">0.0081</td><td align="char" char="." valign="bottom">0.0053</td><td align="char" char="." valign="bottom">0.2919</td></tr><tr><td align="char" char="." valign="bottom">35 C</td><td align="char" char="." valign="bottom">0.19</td><td align="char" char="." valign="bottom">0.01</td><td align="char" char="." valign="bottom">0.953</td></tr><tr><td align="char" char="." valign="bottom">37 C</td><td align="char" char="." valign="bottom">0.1846</td><td align="char" char="." valign="bottom">0.0082</td><td align="char" char="." valign="bottom">0.9536</td></tr><tr><td align="char" char="." valign="bottom">4NQO</td><td align="char" char="." valign="bottom">0.052</td><td align="char" char="." valign="bottom">0.2871</td><td align="char" char="." valign="bottom">0.1275</td></tr><tr><td align="left" valign="bottom">li</td><td align="char" char="." valign="bottom">0.8264</td><td align="char" char="." valign="bottom">0.4085</td><td align="char" char="." valign="bottom">0.6755</td></tr><tr><td align="left" valign="bottom">mann</td><td align="char" char="." valign="bottom">0.356</td><td align="char" char="." valign="bottom">0.2994</td><td align="char" char="." valign="bottom">0.577</td></tr><tr><td align="left" valign="bottom">mol</td><td align="char" char="." valign="bottom">0.4478</td><td align="char" char="." valign="bottom">0.2428</td><td align="char" char="." valign="bottom">0.4812</td></tr><tr><td align="left" valign="bottom">sds</td><td align="char" char="." valign="bottom">0.0153</td><td align="char" char="." valign="bottom">0.025</td><td align="char" char="." valign="bottom">0.1887</td></tr><tr><td align="left" valign="bottom">gu</td><td align="char" char="." valign="bottom">0.0032</td><td align="char" char="." valign="bottom">0.2353</td><td align="char" char="." valign="bottom">0.0119</td></tr><tr><td align="left" valign="bottom">suloc</td><td align="char" char="." valign="bottom">0.6484</td><td align="char" char="." valign="bottom">0.4292</td><td align="char" char="." valign="bottom">0.6779</td></tr><tr><td align="left" valign="bottom">ynb</td><td align="char" char="." valign="bottom">0.0125</td><td align="char" char="." valign="bottom">0.1264</td><td align="char" char="." valign="bottom">0.0798</td></tr><tr><td align="left" valign="bottom">raff</td><td align="char" char="." valign="bottom">0.9999</td><td align="char" char="." valign="bottom">0.1107</td><td align="char" char="." valign="bottom">0.9865</td></tr><tr><td align="left" valign="bottom">eth</td><td align="char" char="." valign="bottom">0.7433</td><td align="char" char="." valign="bottom">0.4944</td><td align="char" char="." valign="bottom">0.7562</td></tr><tr><td align="left" valign="bottom">cu</td><td align="char" char="." valign="bottom">0.1807</td><td align="char" char="." valign="bottom">0.0621</td><td align="char" char="." valign="bottom">0.6308</td></tr></tbody></table></table-wrap></sec></sec><sec id="s11" sec-type="appendix"><title>Pleiotropy</title><p>We infer QTL independently for each of our eighteen phenotypes. However, often we would like to ask such questions as: How do genetic architectures for two different traits relate to one another? How similar or different are the QTL (genes or causal SNPs) and their effect sizes between the two phenotypes? In this section we describe two methods of quantifying this similarity of QTL across traits (pleiotropy).</p><sec id="s11-2-1" sec-type="appendix"><title>Gene pleiotropy</title><p>First, we use a semi-quantitative method to define pleiotropy at the level of genes. If QTL across multiple different phenotypes have lead SNPs in the same gene, they are grouped as a pleiotropic locus. The “lead gene” for this locus is the gene containing the lead SNPs; the consensus gene list for this locus is the list of genes whose coding region overlaps with the credible intervals of <italic>all</italic> QTL in the locus (i.e. the intersection of all credible intervals). The full list of pleiotropic QTL, with associated lead SNP positions and effect sizes for each single-trait QTL, can be found in <xref ref-type="supplementary-material" rid="supp2">Supplementary file 2</xref>. Tests for GO enrichment and intrinsically-disordered region enrichment were performed on the list of 449 lead genes with QTL from at least two environments.</p></sec><sec id="s11-2-2" sec-type="appendix"><title>GO Enrichment</title><p>We performed Gene Ontology (GO) enrichment analysis using GO::TermFinder from the <italic>Saccharomyces</italic> Genome Database (<xref ref-type="bibr" rid="bib17">Boyle et al., 2004</xref>). We obtained a list of all genes containing at least one SNP in our cross to use as a reference list (4,636 genes). As shown in <xref ref-type="table" rid="table2">Table 2</xref>, we observe 13 function terms that are significantly enriched (p-value &lt; 0.01) in our pleiotropic QTL genes.</p></sec><sec id="s11-2-3" sec-type="appendix"><title>Model similarity score</title><p>Next, we develop a quantitative model comparison method to directly calculate the similarity of inferred genetic architectures across traits. For two phenotypes, we have two models: model one has <italic>n</italic><sub>1</sub> QTL at positions <inline-formula><mml:math id="inf286"><mml:msub><mml:mi>X</mml:mi><mml:mi>l</mml:mi></mml:msub></mml:math></inline-formula> with effect sizes <inline-formula><mml:math id="inf287"><mml:msub><mml:mi>β</mml:mi><mml:mi>l</mml:mi></mml:msub></mml:math></inline-formula> for <inline-formula><mml:math id="inf288"><mml:mrow><mml:mi>l</mml:mi><mml:mo>=</mml:mo><mml:mrow><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mi mathvariant="normal">…</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mi>n</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>, while model two has <italic>n</italic><sub>2</sub> QTL at positions <inline-formula><mml:math id="inf289"><mml:msub><mml:mi>X</mml:mi><mml:mi>m</mml:mi></mml:msub></mml:math></inline-formula> with effect sizes <inline-formula><mml:math id="inf290"><mml:msub><mml:mi>β</mml:mi><mml:mi>m</mml:mi></mml:msub></mml:math></inline-formula> for <inline-formula><mml:math id="inf291"><mml:mrow><mml:mi>m</mml:mi><mml:mo>=</mml:mo><mml:mrow><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mi mathvariant="normal">…</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mi>n</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>. We imagine that some fraction of these QTL are ‘shared’, meaning the same causal locus has been detected in both models, although perhaps at somewhat different locations and somewhat different effect sizes; the remaining fraction of QTL are ‘unique’, or detected only in one model. ‘Shared’ QTL pairs should count against the model similarity to the extent that their locations and/or effect sizes are different, while ‘unique’ QTL should count against the model similarity by their effect size. A key question is how to assign ‘shared’ QTL; we address this below. For now, assume we have such an assignment, which divides all QTL into three sets: a set <inline-formula><mml:math id="inf292"><mml:msub><mml:mi>S</mml:mi><mml:mtext>match</mml:mtext></mml:msub></mml:math></inline-formula> with matched pairs <inline-formula><mml:math id="inf293"><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:mi>l</mml:mi><mml:mo>,</mml:mo><mml:mi>m</mml:mi><mml:mo stretchy="false">}</mml:mo></mml:mrow></mml:math></inline-formula>, a set <italic>S</italic><sub>1</sub> with the QTL unique to trait 1, and a set <italic>S</italic><sub>2</sub> with the QTL unique to trait 2. We can then define the following cost functions:<disp-formula id="equ64"><label>(A3-22)</label><mml:math id="m64"><mml:msub><mml:mi>C</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:mrow><mml:mstyle displaystyle="true" scriptlevel="0"><mml:munder><mml:mo largeop="true" movablelimits="false" symmetric="true">∑</mml:mo><mml:mrow><mml:mi>l</mml:mi><mml:mo>∈</mml:mo><mml:msub><mml:mi>S</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:munder></mml:mstyle><mml:msubsup><mml:mrow><mml:mo fence="true">||</mml:mo><mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msub><mml:mi>X</mml:mi><mml:mi>l</mml:mi></mml:msub><mml:mo>-</mml:mo><mml:msub><mml:mi>p</mml:mi><mml:mi>l</mml:mi></mml:msub></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>⁢</mml:mo><mml:msub><mml:mi>β</mml:mi><mml:mi>l</mml:mi></mml:msub></mml:mrow><mml:mo fence="true">||</mml:mo></mml:mrow><mml:mn>2</mml:mn><mml:mn>2</mml:mn></mml:msubsup></mml:mrow><mml:mo>,</mml:mo></mml:mrow></mml:math></disp-formula><disp-formula id="equ65"><label>(A3-23)</label><mml:math id="m65"><mml:msub><mml:mi>C</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:mrow><mml:mstyle displaystyle="true" scriptlevel="0"><mml:munder><mml:mo largeop="true" movablelimits="false" symmetric="true">∑</mml:mo><mml:mrow><mml:mi>m</mml:mi><mml:mo>∈</mml:mo><mml:msub><mml:mi>S</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:mrow></mml:munder></mml:mstyle><mml:msubsup><mml:mrow><mml:mo fence="true">||</mml:mo><mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msub><mml:mi>X</mml:mi><mml:mi>m</mml:mi></mml:msub><mml:mo>-</mml:mo><mml:msub><mml:mi>p</mml:mi><mml:mi>m</mml:mi></mml:msub></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>⁢</mml:mo><mml:msub><mml:mi>β</mml:mi><mml:mi>m</mml:mi></mml:msub></mml:mrow><mml:mo fence="true">||</mml:mo></mml:mrow><mml:mn>2</mml:mn><mml:mn>2</mml:mn></mml:msubsup></mml:mrow><mml:mo>,</mml:mo></mml:mrow></mml:math></disp-formula><disp-formula id="equ66"><label>(A3-24)</label><mml:math id="m66"><mml:msub><mml:mi>C</mml:mi><mml:mtext>match</mml:mtext></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:mrow><mml:mstyle displaystyle="true" scriptlevel="0"><mml:munder><mml:mo largeop="true" movablelimits="false" symmetric="true">∑</mml:mo><mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>l</mml:mi><mml:mo>,</mml:mo><mml:mi>m</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>∈</mml:mo><mml:msub><mml:mi>S</mml:mi><mml:mtext>match</mml:mtext></mml:msub></mml:mrow></mml:munder></mml:mstyle><mml:msubsup><mml:mrow><mml:mo fence="true">||</mml:mo><mml:mrow><mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msub><mml:mi>X</mml:mi><mml:mi>l</mml:mi></mml:msub><mml:mo>-</mml:mo><mml:msub><mml:mi>p</mml:mi><mml:mi>l</mml:mi></mml:msub></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>⁢</mml:mo><mml:msub><mml:mi>β</mml:mi><mml:mi>l</mml:mi></mml:msub></mml:mrow><mml:mo>-</mml:mo><mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msub><mml:mi>X</mml:mi><mml:mi>m</mml:mi></mml:msub><mml:mo>-</mml:mo><mml:msub><mml:mi>p</mml:mi><mml:mi>m</mml:mi></mml:msub></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>⁢</mml:mo><mml:msub><mml:mi>β</mml:mi><mml:mi>m</mml:mi></mml:msub></mml:mrow></mml:mrow><mml:mo fence="true">||</mml:mo></mml:mrow><mml:mn>2</mml:mn><mml:mn>2</mml:mn></mml:msubsup></mml:mrow><mml:mo>,</mml:mo></mml:mrow></mml:math></disp-formula></p><p>where <italic>p</italic><sub><italic>l</italic></sub> represents the allele frequency of locus <inline-formula><mml:math id="inf294"><mml:mi>l</mml:mi></mml:math></inline-formula> in our genotype data. We account for allele frequencies because we have less power to infer QTL at loci with skewed allele frequencies (different from 50%), so QTL placed there should contribute less to the cost function. For example, if all genotypes have values 0 or 1, <italic>C</italic><sub>1</sub> at a locus <inline-formula><mml:math id="inf295"><mml:mi>l</mml:mi></mml:math></inline-formula> reduces to<disp-formula id="equ67"><label>(A3-25)</label><mml:math id="m67"><mml:mrow><mml:mrow><mml:msubsup><mml:mrow><mml:mo fence="true">||</mml:mo><mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msub><mml:mi>X</mml:mi><mml:mi>l</mml:mi></mml:msub><mml:mo>-</mml:mo><mml:msub><mml:mi>p</mml:mi><mml:mi>l</mml:mi></mml:msub></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>⁢</mml:mo><mml:msub><mml:mi>β</mml:mi><mml:mi>l</mml:mi></mml:msub></mml:mrow><mml:mo fence="true">||</mml:mo></mml:mrow><mml:mn>2</mml:mn><mml:mn>2</mml:mn></mml:msubsup><mml:mo>=</mml:mo><mml:mrow><mml:msubsup><mml:mi>β</mml:mi><mml:mi>l</mml:mi><mml:mn>2</mml:mn></mml:msubsup><mml:mo>⁢</mml:mo><mml:mrow><mml:munderover><mml:mo largeop="true" movablelimits="false" symmetric="true">∑</mml:mo><mml:mi>i</mml:mi><mml:mi>N</mml:mi></mml:munderover><mml:msup><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:msubsup><mml:mi>X</mml:mi><mml:mi>l</mml:mi><mml:mi>i</mml:mi></mml:msubsup><mml:mo>-</mml:mo><mml:msub><mml:mi>p</mml:mi><mml:mi>l</mml:mi></mml:msub></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mn>2</mml:mn></mml:msup></mml:mrow></mml:mrow><mml:mo>=</mml:mo><mml:mrow><mml:msubsup><mml:mi>β</mml:mi><mml:mi>l</mml:mi><mml:mn>2</mml:mn></mml:msubsup><mml:mo>⁢</mml:mo><mml:msub><mml:mi>p</mml:mi><mml:mi>l</mml:mi></mml:msub><mml:mo>⁢</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mn>1</mml:mn><mml:mo>-</mml:mo><mml:msub><mml:mi>p</mml:mi><mml:mi>l</mml:mi></mml:msub></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:mrow><mml:mo>,</mml:mo></mml:mrow></mml:math></disp-formula></p><p>which is maximized at <inline-formula><mml:math id="inf296"><mml:mrow><mml:mi>p</mml:mi><mml:mo>=</mml:mo><mml:mn>0.5</mml:mn></mml:mrow></mml:math></inline-formula> and goes to zero at <inline-formula><mml:math id="inf297"><mml:mrow><mml:mi>p</mml:mi><mml:mo>=</mml:mo><mml:mn>0</mml:mn></mml:mrow></mml:math></inline-formula> or <inline-formula><mml:math id="inf298"><mml:mrow><mml:mi>p</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:math></inline-formula>, as desired (see <xref ref-type="fig" rid="fig1s3">Figure 1—figure supplement 3</xref> for measured allele frequencies across all loci). The cost function for matched QTL incorporates the difference in effect sizes as well as the recombination-weighted distance between lead SNPs: the difference <inline-formula><mml:math id="inf299"><mml:mrow><mml:msub><mml:mi>X</mml:mi><mml:mi>l</mml:mi></mml:msub><mml:mo>-</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mi>m</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> is determined by the recombination probabilities between those two locations, a natural way to parametrize how ‘close’ the model’s prediction was to the true location, with the same allele frequency weighting as above. We also find that the match cost is maximized when the two genotype positions are completely uncorrelated, as desired. Finally, we note that <italic>C</italic><sub>1</sub> can be interpreted as <inline-formula><mml:math id="inf300"><mml:msub><mml:mi>C</mml:mi><mml:mtext>match</mml:mtext></mml:msub></mml:math></inline-formula> where <inline-formula><mml:math id="inf301"><mml:mrow><mml:msub><mml:mi>β</mml:mi><mml:mi>m</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mn>0</mml:mn></mml:mrow></mml:math></inline-formula> (and vice-versa for <italic>C</italic><sub>2</sub>), which also represents an intuitive way of describing a QTL that has not been detected in a model. In addition, we define the following cost functions for normalization purposes, representing the total cost for each model:<disp-formula id="equ68"><label>(A3-26)</label><mml:math id="m68"><mml:msub><mml:mi>C</mml:mi><mml:mrow><mml:mtext>tot</mml:mtext><mml:mo>,</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:mrow><mml:mstyle displaystyle="true" scriptlevel="0"><mml:munder><mml:mo largeop="true" movablelimits="false" symmetric="true">∑</mml:mo><mml:mi>l</mml:mi></mml:munder></mml:mstyle><mml:msubsup><mml:mrow><mml:mo fence="true">||</mml:mo><mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msub><mml:mi>X</mml:mi><mml:mi>l</mml:mi></mml:msub><mml:mo>-</mml:mo><mml:msub><mml:mi>p</mml:mi><mml:mi>l</mml:mi></mml:msub></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>⁢</mml:mo><mml:msub><mml:mi>β</mml:mi><mml:mi>l</mml:mi></mml:msub></mml:mrow><mml:mo fence="true">||</mml:mo></mml:mrow><mml:mn>2</mml:mn><mml:mn>2</mml:mn></mml:msubsup></mml:mrow><mml:mo>,</mml:mo></mml:mrow></mml:math></disp-formula><disp-formula id="equ69"><label>(A3-27)</label><mml:math id="m69"><mml:msub><mml:mi>C</mml:mi><mml:mrow><mml:mtext>tot</mml:mtext><mml:mo>,</mml:mo><mml:mn>2</mml:mn></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:mrow><mml:mstyle displaystyle="true" scriptlevel="0"><mml:munder><mml:mo largeop="true" movablelimits="false" symmetric="true">∑</mml:mo><mml:mi>m</mml:mi></mml:munder></mml:mstyle><mml:msubsup><mml:mrow><mml:mo fence="true">||</mml:mo><mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msub><mml:mi>X</mml:mi><mml:mi>m</mml:mi></mml:msub><mml:mo>-</mml:mo><mml:msub><mml:mi>p</mml:mi><mml:mi>m</mml:mi></mml:msub></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>⁢</mml:mo><mml:msub><mml:mi>β</mml:mi><mml:mi>m</mml:mi></mml:msub></mml:mrow><mml:mo fence="true">||</mml:mo></mml:mrow><mml:mn>2</mml:mn><mml:mn>2</mml:mn></mml:msubsup></mml:mrow><mml:mo>,</mml:mo></mml:mrow></mml:math></disp-formula></p><p>where the sum is taken over all QTL in each model, regardless of matching status. With these cost functions, we can define the model similarity metric:<disp-formula id="equ70"><label>(A3-28)</label><mml:math id="m70"><mml:mrow><mml:msup><mml:mrow><mml:mi mathvariant="double-struck">S</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msup><mml:mo>=</mml:mo><mml:mn>1</mml:mn><mml:mo>−</mml:mo><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mfrac><mml:mrow><mml:msub><mml:mi>C</mml:mi><mml:mrow><mml:mtext>match</mml:mtext></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:msub><mml:mi>C</mml:mi><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:msub><mml:mi>C</mml:mi><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msub></mml:mrow><mml:mrow><mml:msub><mml:mi>C</mml:mi><mml:mrow><mml:mtext>tot</mml:mtext><mml:mo>,</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:msub><mml:mi>C</mml:mi><mml:mrow><mml:mtext>tot</mml:mtext><mml:mo>,</mml:mo><mml:mn>2</mml:mn></mml:mrow></mml:msub></mml:mrow></mml:mfrac></mml:mstyle><mml:mo>.</mml:mo></mml:mrow></mml:math></disp-formula></p><p>This metric has some superficial resemblance to Pearson correlation coefficients, with summed squares of residuals that, in our case, incorporate information about differences in lead SNP location as well as differences in effect size. QTL that are detected in only one model also contribute in proportion to their effect size (alternatively, one can imagine them as being ‘matched’ with a QTL in the other model with 0 effect size).</p><p>We note that this metric is not necessarily representative of correlations between expected phenotypes. Briefly, this metric is agnostic to QTL in linkage, and is meant to penalize comparisons between compound QTL and single QTL even though in principle they can produce similar phenotype distributions. Thus, this metric is better seen as a way to compare QTL <italic>models</italic> than as a way to compare <italic>phenotypic predictions</italic>. We find this metric to be especially useful for comparing architectures between different traits (to resolve whether the same loci are influencing multiple traits) as well as for testing the consistency and stability of the modeling algorithm (by comparing models inferred on simulated data to the ground truth, see Section A3-1.5 and Section A3-3.3).</p><p>To implement this metric, we must specify a method for ‘matching’ QTL across two models. This is nontrivial, as multiple QTL can occur near each other, fine-mapping precision can differ across traits, and a true shared QTL may have quite different effect sizes in two different traits, among other effects. These ambiguities could lead to multiple assignments, producing potentially different values for the model similarity metric. This can be viewed as a sequence alignment problem: given two sequences of QTL in the two models, we wish to find the most likely (lowest cost) alignment, where some QTL are paired (matched) and others are not (indels). Importantly, the sequence alignment framework can enforce the fact that the <italic>order</italic> of QTL along the chromosome cannot be permuted between the two models, as well as the fact that ‘matched’ QTL must be present on the same chromosome.</p><p>We use a variant of the Needleman-Wunsch algorithm (<xref ref-type="bibr" rid="bib86">Needleman and Wunsch, 1970</xref>), a dynamic programming algorithm for sequence alignment, to obtain the lowest-cost assignment of QTL in the two models. The cost function matrix for the alignment is drawn from the cost functions given above, where substitutions are matches and insertions (deletions) are unique QTL in model 1 (model 2).</p><p>In this way, we obtain a single number <inline-formula><mml:math id="inf302"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msup><mml:mrow><mml:mi mathvariant="double-struck">S</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msup></mml:mrow></mml:mstyle></mml:math></inline-formula> (ranging from 0 to 1) quantifying the overall degree of similarity between any pair of traits. These numbers are used in <xref ref-type="fig" rid="fig3">Figure 3G and H</xref>. In addition, we obtain an effect-size difference between each pair of matched QTL (and, for unmatched QTL, we consider the corresponding undetected QTL to have an effect size of 0). This gives a distribution of effect-size differences, which we show as a CDF in <xref ref-type="fig" rid="fig3">Figure 3I</xref>. However, we expect some small differences in effect size to occur by chance, even when measuring the same trait twice. To construct this null expectation, we evaluate the model comparison metric between models inferred from the 10 cross-validation partitions for a single trait. Averaging these 10 CDFs, we obtain the null CDF for each environment shown in <xref ref-type="fig" rid="fig3">Figure 3I</xref>. For all curves, we standardize the CDF by the standard deviation of effect size, to control for differences in average effect magnitude between traits.</p></sec></sec><sec id="s12" sec-type="appendix"><title>Epistasis</title><sec id="s12-3-1" sec-type="appendix"><title>QTL mapping with epistasis</title><p>We define epistasis between two QTL as deviation from the expectation of additive effects in the double-mutant. This definition (or basis) is different from standard orthogonal decomposition of genetic architectures but is standard in molecular genetics. This choice strongly influences the inferred coefficients and the results of variance partitioning of the epistatic components (<xref ref-type="bibr" rid="bib62">Huang et al., 2016</xref>), and thus we refrain from interpreting these quantities obtained from our data in an absolute sense (although see Appendix 4-1.4 for more discussion of variance partitioning). However, the detection of epistatic interactions is expected to be robust to the choice of basis.</p><p>Given the large number of polymorphisms in the pool, we would be underpowered to scan all pairs of SNPs and identify these components, even with our large pool of segregants. Scanning <inline-formula><mml:math id="inf303"><mml:mrow><mml:mrow><mml:msup><mml:mi>L</mml:mi><mml:mn>2</mml:mn></mml:msup><mml:mo>/</mml:mo><mml:mn>2</mml:mn></mml:mrow><mml:mo>∼</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:math></inline-formula> trillion SNP pairs or even <inline-formula><mml:math id="inf304"><mml:mrow><mml:mrow><mml:mi>L</mml:mi><mml:mo>⋅</mml:mo><mml:mi>k</mml:mi></mml:mrow><mml:mo>∼</mml:mo><mml:mn>6</mml:mn></mml:mrow></mml:math></inline-formula> million SNP pairs (each additive QTL against all other SNPs) is also computationally infeasible. Thus, we restrict our scan for epistatic terms to QTL that are identified in the additive-only model. One might expect that we would then miss interactions that involve SNPs with no individual effect. However, in almost all cases, interacting SNPs will have predicted individual nonzero effects <inline-formula><mml:math id="inf305"><mml:mrow><mml:mover accent="true"><mml:mi>β</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover><mml:mo>≠</mml:mo><mml:mn>0</mml:mn></mml:mrow></mml:math></inline-formula> in the additive model, even if their true additive effect relative to the BY genotype is zero. To see this explicitly, imagine two loci <italic>x</italic><sub>1</sub> and <italic>x</italic><sub>2</sub> with true individual effects <inline-formula><mml:math id="inf306"><mml:msub><mml:mi>β</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:math></inline-formula> and <inline-formula><mml:math id="inf307"><mml:msub><mml:mi>β</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:math></inline-formula> and interaction effect <inline-formula><mml:math id="inf308"><mml:msub><mml:mi>β</mml:mi><mml:mn>12</mml:mn></mml:msub></mml:math></inline-formula>. For simplicity, assume the two loci are unlinked and have allele frequencies of 0.5 (which is approximately true for most pairs of detected QTL). Then, under an additive-only model, we would estimate the effect of locus <italic>x</italic><sub>1</sub> as<disp-formula id="equ71"><label>(A3-29)</label><mml:math id="m71"><mml:msub><mml:mover accent="true"><mml:mi>β</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover><mml:mn>1</mml:mn></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:msub><mml:mi>y</mml:mi><mml:mrow><mml:msub><mml:mi>x</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>-</mml:mo><mml:msub><mml:mi>y</mml:mi><mml:mrow><mml:msub><mml:mi>x</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>=</mml:mo><mml:mn>0</mml:mn></mml:mrow></mml:msub></mml:mrow></mml:math></disp-formula><disp-formula id="equ72"><label>(A3-30)</label><mml:math id="m72"><mml:mrow><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mo>=</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mfrac><mml:mn>1</mml:mn><mml:mn>2</mml:mn></mml:mfrac></mml:mstyle><mml:msub><mml:mi>y</mml:mi><mml:mrow><mml:msub><mml:mi>x</mml:mi><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mn>0</mml:mn></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mfrac><mml:mn>1</mml:mn><mml:mn>2</mml:mn></mml:mfrac></mml:mstyle><mml:msub><mml:mi>y</mml:mi><mml:mrow><mml:msub><mml:mi>x</mml:mi><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mo>−</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mfrac><mml:mn>1</mml:mn><mml:mn>2</mml:mn></mml:mfrac></mml:mstyle><mml:msub><mml:mi>y</mml:mi><mml:mrow><mml:msub><mml:mi>x</mml:mi><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mn>0</mml:mn><mml:mo>,</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mn>0</mml:mn></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mfrac><mml:mn>1</mml:mn><mml:mn>2</mml:mn></mml:mfrac></mml:mstyle><mml:msub><mml:mi>y</mml:mi><mml:mrow><mml:msub><mml:mi>x</mml:mi><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mn>0</mml:mn><mml:mo>,</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mstyle></mml:mrow></mml:math></disp-formula><disp-formula id="equ73"><label>(A3-31)</label><mml:math id="m73"><mml:mo>=</mml:mo><mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mrow><mml:mfrac><mml:mn>1</mml:mn><mml:mn>2</mml:mn></mml:mfrac><mml:mo>⁢</mml:mo><mml:msub><mml:mi>β</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:mrow><mml:mo>+</mml:mo><mml:mrow><mml:mfrac><mml:mn>1</mml:mn><mml:mn>2</mml:mn></mml:mfrac><mml:mo>⁢</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:msub><mml:mi>β</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>+</mml:mo><mml:msub><mml:mi>β</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mo>+</mml:mo><mml:msub><mml:mi>β</mml:mi><mml:mn>12</mml:mn></mml:msub></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>-</mml:mo><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mrow><mml:mfrac><mml:mn>1</mml:mn><mml:mn>2</mml:mn></mml:mfrac><mml:mo>⋅</mml:mo><mml:mn>0</mml:mn></mml:mrow><mml:mo>+</mml:mo><mml:mrow><mml:mfrac><mml:mn>1</mml:mn><mml:mn>2</mml:mn></mml:mfrac><mml:mo>⁢</mml:mo><mml:msub><mml:mi>β</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:mrow></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:math></disp-formula><disp-formula id="equ74"><label>(A3-32)</label><mml:math id="m74"><mml:mrow><mml:mo>=</mml:mo><mml:msub><mml:mi>β</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>+</mml:mo><mml:mfrac><mml:mn>1</mml:mn><mml:mn>2</mml:mn></mml:mfrac><mml:msub><mml:mi>β</mml:mi><mml:mrow><mml:mn>12</mml:mn></mml:mrow></mml:msub><mml:mo>,</mml:mo></mml:mrow></mml:math></disp-formula></p><p>and, similarly, the effect of locus <italic>x</italic><sub>2</sub> as<disp-formula id="equ75"><label>(A3-33)</label><mml:math id="m75"><mml:mrow><mml:msub><mml:mrow><mml:mover><mml:mi>β</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mi>β</mml:mi><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mfrac><mml:mn>1</mml:mn><mml:mn>2</mml:mn></mml:mfrac></mml:mstyle><mml:msub><mml:mi>β</mml:mi><mml:mrow><mml:mn>12</mml:mn></mml:mrow></mml:msub><mml:mo>.</mml:mo></mml:mrow></mml:math></disp-formula></p><p>Therefore, we would miss one of the loci under an additive-only model only if the epistatic effect satisfies <inline-formula><mml:math id="inf309"><mml:mrow><mml:msub><mml:mi>β</mml:mi><mml:mn>12</mml:mn></mml:msub><mml:mo>≈</mml:mo><mml:mrow><mml:mo>-</mml:mo><mml:mrow><mml:mn>2</mml:mn><mml:mo>⁢</mml:mo><mml:msub><mml:mi>β</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula> or <inline-formula><mml:math id="inf310"><mml:mrow><mml:msub><mml:mi>β</mml:mi><mml:mn>12</mml:mn></mml:msub><mml:mo>≈</mml:mo><mml:mrow><mml:mo>-</mml:mo><mml:mrow><mml:mn>2</mml:mn><mml:mo>⁢</mml:mo><mml:msub><mml:mi>β</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula>, in which case the estimated additive effect would be too small to detect in the additive-model only forward search. This condition is satisfied when a locus has no individual effect relative to the <italic>average background</italic>, or in other words, a zero effect size in the orthogonal basis commonly used in quantitative genetics.</p><p>In any other case, including where true individual effects relative to the BY background <inline-formula><mml:math id="inf311"><mml:msub><mml:mi>β</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:math></inline-formula> and/or <inline-formula><mml:math id="inf312"><mml:msub><mml:mi>β</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:math></inline-formula> are equal to zero but the interaction term <inline-formula><mml:math id="inf313"><mml:msub><mml:mi>β</mml:mi><mml:mn>12</mml:mn></mml:msub></mml:math></inline-formula> is nonzero and detectable, we will identify the loci in an additive model (albeit with biased effect sizes). Of course, differences in allele frequencies will affect the value required and differences in linkage will affect our statistical power to resolve small effects, and thus some fraction of interactions will satisfy the above conditions and evade detection. However, a previous study that performed a full scan of all possible SNP pairs (using an alternative approach) found that the majority of epistatic interactions involved two loci that individually had significant additive effects (<xref ref-type="bibr" rid="bib14">Bloom et al., 2015</xref>). Thus this approach enables detection of most epistatic interactions while retaining statistical power and computational feasibility.</p><p>Unfortunately, in the forward-search paradigm, there are many alternative choices for how to add single and pairwise effect parameters. As a simple exploration, we proceed by first identifying an exhaustive additive-effect non-interacting model. We then augment the model with interaction terms using the same forward-search and cross-validation strategy as previously discussed. Simulations show that this procedure can accurately find additive coefficients and generally performs well at finding specific epistatic interactions (see Section A3-3.3). The new cost function to be minimized is the following:<disp-formula id="equ76"><label>(A3-34)</label><mml:math id="m76"><mml:mrow><mml:mrow><mml:msub><mml:mtext>min</mml:mtext><mml:mrow><mml:mi>β</mml:mi><mml:mo>,</mml:mo><mml:mi>ξ</mml:mi></mml:mrow></mml:msub><mml:mo>⁢</mml:mo><mml:mrow><mml:mo>{</mml:mo><mml:msubsup><mml:mrow><mml:mo fence="true">||</mml:mo><mml:mrow><mml:mi>Y</mml:mi><mml:mo>-</mml:mo><mml:mrow><mml:mi>X</mml:mi><mml:mo>⁢</mml:mo><mml:mi>β</mml:mi></mml:mrow><mml:mo>-</mml:mo><mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi>X</mml:mi><mml:mo>⊗</mml:mo><mml:mi>X</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>⁢</mml:mo><mml:mi>ξ</mml:mi></mml:mrow></mml:mrow><mml:mo fence="true">||</mml:mo></mml:mrow><mml:mn>2</mml:mn><mml:mn>2</mml:mn></mml:msubsup><mml:mo>}</mml:mo></mml:mrow></mml:mrow><mml:mo>,</mml:mo></mml:mrow></mml:math></disp-formula></p><p>where <inline-formula><mml:math id="inf314"><mml:mi>ξ</mml:mi></mml:math></inline-formula> represents a vector of epistatic interaction coefficients and we define <inline-formula><mml:math id="inf315"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi>X</mml:mi><mml:mo>⊗</mml:mo><mml:mi>X</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> to be the matrix of interaction between columns present in <inline-formula><mml:math id="inf316"><mml:mi>X</mml:mi></mml:math></inline-formula>, calculated as pointwise multiplication of elements. For pairwise interactions, given that <inline-formula><mml:math id="inf317"><mml:mi>X</mml:mi></mml:math></inline-formula> has <inline-formula><mml:math id="inf318"><mml:mi>k</mml:mi></mml:math></inline-formula> columns, there are <inline-formula><mml:math id="inf319"><mml:mrow><mml:mrow><mml:mi>k</mml:mi><mml:mo>⁢</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi>k</mml:mi><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow><mml:mo>/</mml:mo><mml:mn>2</mml:mn></mml:mrow></mml:math></inline-formula> columns in this matrix of interaction. Considering higher order interactions quickly becomes intractable for even <inline-formula><mml:math id="inf320"><mml:mrow><mml:mi/><mml:mo>∼</mml:mo><mml:mn>100</mml:mn></mml:mrow></mml:math></inline-formula> QTL, and so we only consider pairwise components. With regularization, we obtain:<disp-formula id="equ77"><label>(A3-35)</label><mml:math id="m77"><mml:mrow><mml:mrow><mml:msub><mml:mtext>min</mml:mtext><mml:mrow><mml:mi>β</mml:mi><mml:mo>,</mml:mo><mml:mi>ξ</mml:mi></mml:mrow></mml:msub><mml:mo>⁢</mml:mo><mml:mrow><mml:mo>{</mml:mo><mml:msubsup><mml:mrow><mml:mo fence="true">||</mml:mo><mml:mrow><mml:mrow><mml:mrow><mml:mrow><mml:mi>Y</mml:mi><mml:mo>-</mml:mo><mml:mrow><mml:mi>X</mml:mi><mml:mo>⁢</mml:mo><mml:mi>β</mml:mi></mml:mrow></mml:mrow><mml:mo>+</mml:mo><mml:mrow><mml:msub><mml:mi>λ</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>⁢</mml:mo><mml:msub><mml:mrow><mml:mo fence="true">||</mml:mo><mml:mi>β</mml:mi><mml:mo fence="true">||</mml:mo></mml:mrow><mml:mn>0</mml:mn></mml:msub></mml:mrow></mml:mrow><mml:mo>-</mml:mo><mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi>X</mml:mi><mml:mo>⊗</mml:mo><mml:mi>X</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>⁢</mml:mo><mml:mi>ξ</mml:mi></mml:mrow></mml:mrow><mml:mo>+</mml:mo><mml:mrow><mml:msub><mml:mi>λ</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mo>⁢</mml:mo><mml:msub><mml:mrow><mml:mo fence="true">||</mml:mo><mml:mi>ξ</mml:mi><mml:mo fence="true">||</mml:mo></mml:mrow><mml:mn>0</mml:mn></mml:msub></mml:mrow></mml:mrow><mml:mo fence="true">||</mml:mo></mml:mrow><mml:mn>2</mml:mn><mml:mn>2</mml:mn></mml:msubsup><mml:mo>}</mml:mo></mml:mrow></mml:mrow><mml:mo>,</mml:mo></mml:mrow></mml:math></disp-formula></p><p>where <inline-formula><mml:math id="inf321"><mml:msub><mml:mi>λ</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:math></inline-formula> is obtained by cross-validation in the initial search for additive effects, and <inline-formula><mml:math id="inf322"><mml:msub><mml:mi>λ</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:math></inline-formula> is obtained by cross-validation in the search for epistatic effects. By minimizing the cost function, we obtain the maximum-likelihood estimates of the epistatic components <inline-formula><mml:math id="inf323"><mml:mover accent="true"><mml:mi>ξ</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover></mml:math></inline-formula> by the same linear regression methods described above. We do not perform any positional refinements for pairwise epistatic components.</p><p>Similarly to strongly collinear additive effects, strongly collinear epistatic effects can have unstable coefficients and need regularization. We perform the same merging procedure as described previously, testing all-by-all correlation of pairwise epistatic positions and merging pairs of epistatic pairs beyond a correlation threshold determined by cross-validation. Once merged, we define a single epistatic pair within the merged pairs as the ‘representative’ epistatic interaction by choosing the pair that maximizes the likelihood.</p><p>In addition, we find that loci very close to our selection markers (MAT, HO, and CAN1) are often detected to have strong epistatic interactions, with each other and with other strong QTL across the genome (e.g. <xref ref-type="fig" rid="fig4s4">Figure 4—figure supplement 4</xref>). We expect this to be a result of a small number of ‘leaker’ individuals with the wrong alleles at the marker loci, which result in discrepant phenotypes (diploidy or opposite mating type) and thus discrepant fitnesses (see discussion in Appendix 1-1.4). In <xref ref-type="supplementary-material" rid="supp3 supp4">Supplementary files 3 and 4</xref>, we have indicated these QTL and interactions involving these loci (at selection markers or immediately neighboring genes) in grey.</p></sec><sec id="s12-3-2" sec-type="appendix"><title>Epistatic model similarity score</title><p>In order to quantitatively compare epistasis across traits, we wish to extend the model comparison framework described in Section A3-2.3 to include epistatic coefficients. However, in contrast with the additive terms, linear ordering of locus pairs is not expected to be preserved. Thus, instead of examining the problem from a sequence alignment approach, we use a linear assignment problem (LAP) approach. This approach optimizes the assignment of items from two groups (here epistatic QTL from two models) according to a defined cost matrix. A suitably defined cost matrix can incorporate costs both for matching items (i.e. assigning pairs of interactions) as well as unmatched items (i.e. interactions unique to one model or the other).</p><p>Our cost functions are defined as follows, analogously to those in the sequencing-alignment algorithm for additive model similarity, with single-locus genome values and allele frequencies replaced with interaction matrix values (i.e. products from two loci). We imagine Model one with some number <inline-formula><mml:math id="inf324"><mml:mi>n</mml:mi></mml:math></inline-formula> of epistatic interactions at locus pairs <inline-formula><mml:math id="inf325"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>l</mml:mi><mml:mo>,</mml:mo><mml:msup><mml:mi>l</mml:mi><mml:mo>′</mml:mo></mml:msup><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> with effect sizes <inline-formula><mml:math id="inf326"><mml:msub><mml:mi>ξ</mml:mi><mml:mrow><mml:mi>l</mml:mi><mml:mo>⁢</mml:mo><mml:msup><mml:mi>l</mml:mi><mml:mo>′</mml:mo></mml:msup></mml:mrow></mml:msub></mml:math></inline-formula>, and Model two with some number <inline-formula><mml:math id="inf327"><mml:mi>m</mml:mi></mml:math></inline-formula> of epistatic interactions at locus pairs <inline-formula><mml:math id="inf328"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>m</mml:mi><mml:mo>,</mml:mo><mml:msup><mml:mi>m</mml:mi><mml:mo>′</mml:mo></mml:msup><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> with effect sizes <inline-formula><mml:math id="inf329"><mml:msub><mml:mi>ξ</mml:mi><mml:mrow><mml:mi>m</mml:mi><mml:mo>⁢</mml:mo><mml:msup><mml:mi>m</mml:mi><mml:mo>′</mml:mo></mml:msup></mml:mrow></mml:msub></mml:math></inline-formula>. We divide epistatic QTL into three sets: a set <inline-formula><mml:math id="inf330"><mml:msubsup><mml:mi>S</mml:mi><mml:mtext>match</mml:mtext><mml:mrow><mml:mi>e</mml:mi><mml:mo>⁢</mml:mo><mml:mi>p</mml:mi></mml:mrow></mml:msubsup></mml:math></inline-formula> with matched pairs <inline-formula><mml:math id="inf331"><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:mi>l</mml:mi><mml:mo>,</mml:mo><mml:msup><mml:mi>l</mml:mi><mml:mo>′</mml:mo></mml:msup><mml:mo>;</mml:mo><mml:mi>m</mml:mi><mml:mo>,</mml:mo><mml:msup><mml:mi>m</mml:mi><mml:mo>′</mml:mo></mml:msup><mml:mo stretchy="false">}</mml:mo></mml:mrow></mml:math></inline-formula>, a set <inline-formula><mml:math id="inf332"><mml:msubsup><mml:mi>S</mml:mi><mml:mn>1</mml:mn><mml:mrow><mml:mi>e</mml:mi><mml:mo>⁢</mml:mo><mml:mi>p</mml:mi></mml:mrow></mml:msubsup></mml:math></inline-formula> with the interactions unique to trait 1, and a set <inline-formula><mml:math id="inf333"><mml:msubsup><mml:mi>S</mml:mi><mml:mn>2</mml:mn><mml:mrow><mml:mi>e</mml:mi><mml:mo>⁢</mml:mo><mml:mi>p</mml:mi></mml:mrow></mml:msubsup></mml:math></inline-formula> with the interactions unique to trait 2. We can then define the following cost functions:<disp-formula id="equ78"><label>(A3-36)</label><mml:math id="m78"><mml:mrow><mml:msubsup><mml:mi>C</mml:mi><mml:mrow><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mi>e</mml:mi><mml:mi>p</mml:mi></mml:mrow></mml:msubsup><mml:mo>=</mml:mo><mml:munder><mml:mo>∑</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>l</mml:mi><mml:mo>,</mml:mo><mml:msup><mml:mi>l</mml:mi><mml:mrow><mml:mi mathvariant="normal">′</mml:mi></mml:mrow></mml:msup><mml:mo stretchy="false">)</mml:mo><mml:mo>∈</mml:mo><mml:msubsup><mml:mi>S</mml:mi><mml:mrow><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mi>e</mml:mi><mml:mi>p</mml:mi></mml:mrow></mml:msubsup></mml:mrow></mml:munder><mml:msubsup><mml:mrow><mml:mo>|</mml:mo><mml:mrow><mml:mo>|</mml:mo><mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msub><mml:mi>X</mml:mi><mml:mrow><mml:mi>l</mml:mi></mml:mrow></mml:msub><mml:msub><mml:mi>X</mml:mi><mml:mrow><mml:msup><mml:mi>l</mml:mi><mml:mrow><mml:mi mathvariant="normal">′</mml:mi></mml:mrow></mml:msup></mml:mrow></mml:msub><mml:mo>−</mml:mo><mml:msub><mml:mi>p</mml:mi><mml:mrow><mml:mi>l</mml:mi></mml:mrow></mml:msub><mml:msub><mml:mi>p</mml:mi><mml:mrow><mml:msup><mml:mi>l</mml:mi><mml:mrow><mml:mi mathvariant="normal">′</mml:mi></mml:mrow></mml:msup></mml:mrow></mml:msub></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:msub><mml:mi>ξ</mml:mi><mml:mrow><mml:mi>l</mml:mi><mml:msup><mml:mi>l</mml:mi><mml:mrow><mml:mi mathvariant="normal">′</mml:mi></mml:mrow></mml:msup></mml:mrow></mml:msub></mml:mrow><mml:mo>|</mml:mo></mml:mrow><mml:mo>|</mml:mo></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msubsup><mml:mo>,</mml:mo></mml:mrow></mml:math></disp-formula><disp-formula id="equ79"><label>(A3-37)</label><mml:math id="m79"><mml:msubsup><mml:mi>C</mml:mi><mml:mn>2</mml:mn><mml:mrow><mml:mi>e</mml:mi><mml:mo>⁢</mml:mo><mml:mi>p</mml:mi></mml:mrow></mml:msubsup><mml:mo>=</mml:mo><mml:mrow><mml:mrow><mml:mstyle displaystyle="true" scriptlevel="0"><mml:munder><mml:mo largeop="true" movablelimits="false" symmetric="true">∑</mml:mo><mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>m</mml:mi><mml:mo>,</mml:mo><mml:msup><mml:mi>m</mml:mi><mml:mo>′</mml:mo></mml:msup><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>∈</mml:mo><mml:msubsup><mml:mi>S</mml:mi><mml:mn>2</mml:mn><mml:mrow><mml:mi>e</mml:mi><mml:mo>⁢</mml:mo><mml:mi>p</mml:mi></mml:mrow></mml:msubsup></mml:mrow></mml:munder></mml:mstyle><mml:msubsup><mml:mrow><mml:mo fence="true">||</mml:mo><mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mrow><mml:msub><mml:mi>X</mml:mi><mml:mi>m</mml:mi></mml:msub><mml:mo>⁢</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:msup><mml:mi>m</mml:mi><mml:mo>′</mml:mo></mml:msup></mml:msub></mml:mrow><mml:mo>-</mml:mo><mml:mrow><mml:msub><mml:mi>p</mml:mi><mml:mi>m</mml:mi></mml:msub><mml:mo>⁢</mml:mo><mml:msub><mml:mi>p</mml:mi><mml:msup><mml:mi>m</mml:mi><mml:mo>′</mml:mo></mml:msup></mml:msub></mml:mrow></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>⁢</mml:mo><mml:msub><mml:mi>ξ</mml:mi><mml:mrow><mml:mi>m</mml:mi><mml:mo>⁢</mml:mo><mml:msup><mml:mi>m</mml:mi><mml:mo>′</mml:mo></mml:msup></mml:mrow></mml:msub></mml:mrow><mml:mo fence="true">||</mml:mo></mml:mrow><mml:mn>2</mml:mn><mml:mn>2</mml:mn></mml:msubsup></mml:mrow><mml:mo>,</mml:mo></mml:mrow></mml:math></disp-formula><disp-formula id="equ80"><label>(A3-38)</label><mml:math id="m80"><mml:msubsup><mml:mi>C</mml:mi><mml:mtext>match</mml:mtext><mml:mrow><mml:mi>e</mml:mi><mml:mo>⁢</mml:mo><mml:mi>p</mml:mi></mml:mrow></mml:msubsup><mml:mo>=</mml:mo><mml:mrow><mml:mrow><mml:mstyle displaystyle="true" scriptlevel="0"><mml:munder><mml:mo largeop="true" movablelimits="false" symmetric="true">∑</mml:mo><mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>l</mml:mi><mml:mo>,</mml:mo><mml:msup><mml:mi>l</mml:mi><mml:mo>′</mml:mo></mml:msup><mml:mo>;</mml:mo><mml:mi>m</mml:mi><mml:mo>,</mml:mo><mml:msup><mml:mi>m</mml:mi><mml:mo>′</mml:mo></mml:msup><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>∈</mml:mo><mml:msubsup><mml:mi>S</mml:mi><mml:mtext>match</mml:mtext><mml:mrow><mml:mi>e</mml:mi><mml:mo>⁢</mml:mo><mml:mi>p</mml:mi></mml:mrow></mml:msubsup></mml:mrow></mml:munder></mml:mstyle><mml:msubsup><mml:mrow><mml:mo fence="true">||</mml:mo><mml:mrow><mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mrow><mml:msub><mml:mi>X</mml:mi><mml:mi>l</mml:mi></mml:msub><mml:mo>⁢</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:msup><mml:mi>l</mml:mi><mml:mo>′</mml:mo></mml:msup></mml:msub></mml:mrow><mml:mo>-</mml:mo><mml:mrow><mml:msub><mml:mi>p</mml:mi><mml:mi>l</mml:mi></mml:msub><mml:mo>⁢</mml:mo><mml:msub><mml:mi>p</mml:mi><mml:msup><mml:mi>l</mml:mi><mml:mo>′</mml:mo></mml:msup></mml:msub></mml:mrow></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>⁢</mml:mo><mml:msub><mml:mi>ξ</mml:mi><mml:mrow><mml:mi>l</mml:mi><mml:mo>⁢</mml:mo><mml:msup><mml:mi>l</mml:mi><mml:mo>′</mml:mo></mml:msup></mml:mrow></mml:msub></mml:mrow><mml:mo>-</mml:mo><mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mrow><mml:msub><mml:mi>X</mml:mi><mml:mi>m</mml:mi></mml:msub><mml:mo>⁢</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:msup><mml:mi>m</mml:mi><mml:mo>′</mml:mo></mml:msup></mml:msub></mml:mrow><mml:mo>-</mml:mo><mml:mrow><mml:msub><mml:mi>p</mml:mi><mml:mi>m</mml:mi></mml:msub><mml:mo>⁢</mml:mo><mml:msub><mml:mi>p</mml:mi><mml:msup><mml:mi>m</mml:mi><mml:mo>′</mml:mo></mml:msup></mml:msub></mml:mrow></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>⁢</mml:mo><mml:msub><mml:mi>ξ</mml:mi><mml:mrow><mml:mi>m</mml:mi><mml:mo>⁢</mml:mo><mml:msup><mml:mi>m</mml:mi><mml:mo>′</mml:mo></mml:msup></mml:mrow></mml:msub></mml:mrow></mml:mrow><mml:mo fence="true">||</mml:mo></mml:mrow><mml:mn>2</mml:mn><mml:mn>2</mml:mn></mml:msubsup></mml:mrow><mml:mo>.</mml:mo></mml:mrow></mml:math></disp-formula></p><p>Importantly, matched pairs <inline-formula><mml:math id="inf334"><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:mi>l</mml:mi><mml:mo>,</mml:mo><mml:msup><mml:mi>l</mml:mi><mml:mo>′</mml:mo></mml:msup><mml:mo>;</mml:mo><mml:mi>m</mml:mi><mml:mo>,</mml:mo><mml:msup><mml:mi>m</mml:mi><mml:mo>′</mml:mo></mml:msup><mml:mo stretchy="false">}</mml:mo></mml:mrow></mml:math></inline-formula> must have <inline-formula><mml:math id="inf335"><mml:mi>l</mml:mi></mml:math></inline-formula> and <inline-formula><mml:math id="inf336"><mml:mi>m</mml:mi></mml:math></inline-formula> on the same chromosome (and similarly for <inline-formula><mml:math id="inf337"><mml:msup><mml:mi>l</mml:mi><mml:mo>′</mml:mo></mml:msup></mml:math></inline-formula> and <inline-formula><mml:math id="inf338"><mml:msup><mml:mi>m</mml:mi><mml:mo>′</mml:mo></mml:msup></mml:math></inline-formula>).</p><p>We also define the total costs for normalization in a similar manner:<disp-formula id="equ81"><label>(A3-39)</label><mml:math id="m81"><mml:msubsup><mml:mi>C</mml:mi><mml:mrow><mml:mtext>tot</mml:mtext><mml:mo>,</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mi>e</mml:mi><mml:mo>⁢</mml:mo><mml:mi>p</mml:mi></mml:mrow></mml:msubsup><mml:mo>=</mml:mo><mml:mrow><mml:mrow><mml:mstyle displaystyle="true" scriptlevel="0"><mml:munder><mml:mo largeop="true" movablelimits="false" symmetric="true">∑</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>l</mml:mi><mml:mo>,</mml:mo><mml:msup><mml:mi>l</mml:mi><mml:mo>′</mml:mo></mml:msup><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:munder></mml:mstyle><mml:msubsup><mml:mrow><mml:mo fence="true">||</mml:mo><mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mrow><mml:msub><mml:mi>X</mml:mi><mml:mi>l</mml:mi></mml:msub><mml:mo>⁢</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:msup><mml:mi>l</mml:mi><mml:mo>′</mml:mo></mml:msup></mml:msub></mml:mrow><mml:mo>-</mml:mo><mml:mrow><mml:msub><mml:mi>p</mml:mi><mml:mi>l</mml:mi></mml:msub><mml:mo>⁢</mml:mo><mml:msub><mml:mi>p</mml:mi><mml:msup><mml:mi>l</mml:mi><mml:mo>′</mml:mo></mml:msup></mml:msub></mml:mrow></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>⁢</mml:mo><mml:msub><mml:mi>ξ</mml:mi><mml:mrow><mml:mi>l</mml:mi><mml:mo>⁢</mml:mo><mml:msup><mml:mi>l</mml:mi><mml:mo>′</mml:mo></mml:msup></mml:mrow></mml:msub></mml:mrow><mml:mo fence="true">||</mml:mo></mml:mrow><mml:mn>2</mml:mn><mml:mn>2</mml:mn></mml:msubsup></mml:mrow><mml:mo>,</mml:mo></mml:mrow></mml:math></disp-formula><disp-formula id="equ82"><label>(A3-40)</label><mml:math id="m82"><mml:msubsup><mml:mi>C</mml:mi><mml:mrow><mml:mtext>tot</mml:mtext><mml:mo>,</mml:mo><mml:mn>2</mml:mn></mml:mrow><mml:mrow><mml:mi>e</mml:mi><mml:mo>⁢</mml:mo><mml:mi>p</mml:mi></mml:mrow></mml:msubsup><mml:mo>=</mml:mo><mml:mrow><mml:mrow><mml:mstyle displaystyle="true" scriptlevel="0"><mml:munder><mml:mo largeop="true" movablelimits="false" symmetric="true">∑</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>m</mml:mi><mml:mo>,</mml:mo><mml:msup><mml:mi>m</mml:mi><mml:mo>′</mml:mo></mml:msup><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:munder></mml:mstyle><mml:msubsup><mml:mrow><mml:mo fence="true">||</mml:mo><mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mrow><mml:msub><mml:mi>X</mml:mi><mml:mi>m</mml:mi></mml:msub><mml:mo>⁢</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:msup><mml:mi>m</mml:mi><mml:mo>′</mml:mo></mml:msup></mml:msub></mml:mrow><mml:mo>-</mml:mo><mml:mrow><mml:msub><mml:mi>p</mml:mi><mml:mi>m</mml:mi></mml:msub><mml:mo>⁢</mml:mo><mml:msub><mml:mi>p</mml:mi><mml:msup><mml:mi>m</mml:mi><mml:mo>′</mml:mo></mml:msup></mml:msub></mml:mrow></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>⁢</mml:mo><mml:msub><mml:mi>ξ</mml:mi><mml:mrow><mml:mi>m</mml:mi><mml:mo>⁢</mml:mo><mml:msup><mml:mi>m</mml:mi><mml:mo>′</mml:mo></mml:msup></mml:mrow></mml:msub></mml:mrow><mml:mo fence="true">||</mml:mo></mml:mrow><mml:mn>2</mml:mn><mml:mn>2</mml:mn></mml:msubsup></mml:mrow><mml:mo>,</mml:mo></mml:mrow></mml:math></disp-formula></p><p>where the sum is taken over all interactions in each model, regardless of matching status.</p><p>We use the package lap (<xref ref-type="bibr" rid="bib66">Kazmar, 2020</xref>) to optimize the assignments given these cost functions, and use the cost functions for the optimal assignment to calculate the final model similarity score. For the epistatic terms only, our score is<disp-formula id="equ83"><label>(A3-41)</label><mml:math id="m83"><mml:mrow><mml:msubsup><mml:mrow><mml:mi mathvariant="double-struck">S</mml:mi></mml:mrow><mml:mrow><mml:mi>e</mml:mi><mml:mi>p</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msubsup><mml:mo>=</mml:mo><mml:mn>1</mml:mn><mml:mo>−</mml:mo><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mfrac><mml:mrow><mml:msubsup><mml:mi>C</mml:mi><mml:mrow><mml:mtext>match</mml:mtext></mml:mrow><mml:mrow><mml:mi>e</mml:mi><mml:mi>p</mml:mi></mml:mrow></mml:msubsup><mml:mo>+</mml:mo><mml:msubsup><mml:mi>C</mml:mi><mml:mrow><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mi>e</mml:mi><mml:mi>p</mml:mi></mml:mrow></mml:msubsup><mml:mo>+</mml:mo><mml:msubsup><mml:mi>C</mml:mi><mml:mrow><mml:mn>2</mml:mn></mml:mrow><mml:mrow><mml:mi>e</mml:mi><mml:mi>p</mml:mi></mml:mrow></mml:msubsup></mml:mrow><mml:mrow><mml:msubsup><mml:mi>C</mml:mi><mml:mrow><mml:mtext>tot</mml:mtext><mml:mo>,</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mi>e</mml:mi><mml:mi>p</mml:mi></mml:mrow></mml:msubsup><mml:mo>+</mml:mo><mml:msubsup><mml:mi>C</mml:mi><mml:mrow><mml:mtext>tot</mml:mtext><mml:mo>,</mml:mo><mml:mn>2</mml:mn></mml:mrow><mml:mrow><mml:mi>e</mml:mi><mml:mi>p</mml:mi></mml:mrow></mml:msubsup></mml:mrow></mml:mfrac></mml:mstyle><mml:mo>.</mml:mo></mml:mrow></mml:math></disp-formula></p><p>For the full model, including costs for the additive assignments (obtained as explained above in Section A3-2.3) as well as epistatic assignments, our score is<disp-formula id="equ84"><label>(A3-42)</label><mml:math id="m84"><mml:mrow><mml:msup><mml:mrow><mml:mi mathvariant="double-struck">S</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msup><mml:mo>=</mml:mo><mml:mn>1</mml:mn><mml:mo>−</mml:mo><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mfrac><mml:mrow><mml:msub><mml:mi>C</mml:mi><mml:mrow><mml:mtext>match</mml:mtext></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:msub><mml:mi>C</mml:mi><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:msub><mml:mi>C</mml:mi><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:msubsup><mml:mi>C</mml:mi><mml:mrow><mml:mtext>match</mml:mtext></mml:mrow><mml:mrow><mml:mi>e</mml:mi><mml:mi>p</mml:mi></mml:mrow></mml:msubsup><mml:mo>+</mml:mo><mml:msubsup><mml:mi>C</mml:mi><mml:mrow><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mi>e</mml:mi><mml:mi>p</mml:mi></mml:mrow></mml:msubsup><mml:mo>+</mml:mo><mml:msubsup><mml:mi>C</mml:mi><mml:mrow><mml:mn>2</mml:mn></mml:mrow><mml:mrow><mml:mi>e</mml:mi><mml:mi>p</mml:mi></mml:mrow></mml:msubsup></mml:mrow><mml:mrow><mml:msub><mml:mi>C</mml:mi><mml:mrow><mml:mtext>tot</mml:mtext><mml:mo>,</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:msub><mml:mi>C</mml:mi><mml:mrow><mml:mtext>tot</mml:mtext><mml:mo>,</mml:mo><mml:mn>2</mml:mn></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:msubsup><mml:mi>C</mml:mi><mml:mrow><mml:mtext>tot</mml:mtext><mml:mo>,</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mi>e</mml:mi><mml:mi>p</mml:mi></mml:mrow></mml:msubsup><mml:mo>+</mml:mo><mml:msubsup><mml:mi>C</mml:mi><mml:mrow><mml:mtext>tot</mml:mtext><mml:mo>,</mml:mo><mml:mn>2</mml:mn></mml:mrow><mml:mrow><mml:mi>e</mml:mi><mml:mi>p</mml:mi></mml:mrow></mml:msubsup></mml:mrow></mml:mfrac></mml:mstyle><mml:mo>.</mml:mo></mml:mrow></mml:math></disp-formula></p><p>Thus, for any pair of epistatic models, we can compute separately the similarity of their additive or epistatic terms, in addition to the total similarity.</p></sec><sec id="s12-3-3" sec-type="appendix"><title>Simulations of epistatic architectures</title><p>To validate the inference of epistatic interactions, we extended our QTL simulation framework (see Section A3-1.5) to incorporate the effect of epistasis. After generating some number of QTL at random locations, we generate interactions by randomly choosing pairs from these QTL. We primarily consider a model with 150 additive QTL and 150 epistatic interactions, with effect sizes for both drawn from an exponential distribution with mean effect 1% (i.e. additive and epistatic QTL are equally numerous and equal in average effect). The signs of additive and epistatic QTL were chosen randomly. As before, we calculate phenotypes for samples of 1000, 10,000, or 99,950 individuals (drawn from our real genome data). We add Gaussian noise to the phenotypes to capture different desired broad-sense heritabilities, and then infer single QTL and epistatic interactions according to the pipeline described above in Section A3-3.1.</p><p>First, we consider how many QTL (additive and epistatic) are inferred under different inference parameters, and the resulting model performance (<xref ref-type="fig" rid="app3fig10">Appendix 3—figure 10</xref>). We see that, as with linear models, increasing sample size increases the number of additive QTL that are detected. The effect of sample size is even more pronounced for epistatic interactions: even at heritability <inline-formula><mml:math id="inf339"><mml:mrow><mml:msup><mml:mi>H</mml:mi><mml:mn>2</mml:mn></mml:msup><mml:mo>=</mml:mo><mml:mn>0.95</mml:mn></mml:mrow></mml:math></inline-formula>, only one epistatic interaction is detected with a panel of 1000 segregants, while over 130 are detected with a panel of 100,000 segregants. Notably, the inference of epistasis is conservative, as it is for additive effects: the number of epistatic interactions detected is always less than the number of true interactions.</p><fig id="app3fig10" position="float"><label>Appendix 3—figure 10.</label><caption><title>Effect of segregant number on QTL inference with epistasis.</title><p>Top left: Number of inferred additive QTL. Dashed line represents the number of QTL in the true model (150). Top right: Number of inferred epistatic interactions. Dashed line represents the number of epistatic interactions in the true model (150). Bottom left: Model performance (<inline-formula><mml:math id="inf340"><mml:msup><mml:mi>R</mml:mi><mml:mn>2</mml:mn></mml:msup></mml:math></inline-formula> on a test set of individuals) as a fraction of heritability <inline-formula><mml:math id="inf341"><mml:msup><mml:mi>H</mml:mi><mml:mn>2</mml:mn></mml:msup></mml:math></inline-formula>, where performance is evaluated on the optimized model with only additive terms (before epistatic interactions are inferred). Dashed line represents <inline-formula><mml:math id="inf342"><mml:mrow><mml:mrow><mml:msup><mml:mi>R</mml:mi><mml:mn>2</mml:mn></mml:msup><mml:mo>/</mml:mo><mml:msup><mml:mi>H</mml:mi><mml:mn>2</mml:mn></mml:msup></mml:mrow><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:math></inline-formula>, meaning all of the genetic variance is explained by the model. Bottom right: Model performance (<inline-formula><mml:math id="inf343"><mml:msup><mml:mi>R</mml:mi><mml:mn>2</mml:mn></mml:msup></mml:math></inline-formula> on a test set of individuals) as a fraction of heritability,<inline-formula><mml:math id="inf344"><mml:msup><mml:mi>H</mml:mi><mml:mn>2</mml:mn></mml:msup></mml:math></inline-formula> where performance is evaluated on the fully optimized model with additive and epistatic terms. Dashed line represents <inline-formula><mml:math id="inf345"><mml:mrow><mml:mrow><mml:msup><mml:mi>R</mml:mi><mml:mn>2</mml:mn></mml:msup><mml:mo>/</mml:mo><mml:msup><mml:mi>H</mml:mi><mml:mn>2</mml:mn></mml:msup></mml:mrow><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:math></inline-formula>, meaning all of the genetic variance is explained by the model.</p></caption><graphic mime-subtype="tiff" mimetype="image" xlink:href="elife-73983-app3-fig10-v2.tif"/></fig><p>We evaluate the performance of the model twice, once before inferring epistatic interactions (i.e. an optimized linear model) and once after inferring epistatic interactions (i.e. an optimized model with linear and pairwise terms). One interesting result is that despite the true architecture having equal number of additive and epistatic coefficients, and them having equal magnitude, a linear-only model can frequently explain the majority of the variance without any epistasis. In particular, the explained variance as a fraction of possible explained variance (<inline-formula><mml:math id="inf346"><mml:mrow><mml:msup><mml:mi>R</mml:mi><mml:mn>2</mml:mn></mml:msup><mml:mo>/</mml:mo><mml:msup><mml:mi>H</mml:mi><mml:mn>2</mml:mn></mml:msup></mml:mrow></mml:math></inline-formula>) saturates at <inline-formula><mml:math id="inf347"><mml:mrow><mml:mi/><mml:mo>∼</mml:mo><mml:mrow><mml:mn>80</mml:mn><mml:mo>%</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula> for the best additive-only inferred models, while including epistatic interactions can increase this value to <inline-formula><mml:math id="inf348"><mml:mrow><mml:mi/><mml:mo>∼</mml:mo><mml:mrow><mml:mn>90</mml:mn><mml:mo>%</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula> or above (<xref ref-type="fig" rid="app3fig10">Appendix 3—figure 10</xref>, bottom panels). This is not unexpected when epistasis is simulated or defined as affecting only the double mutant. However, this does cast doubt on whether the genetic architecture of the trait (and the extent of epistasis) can be inferred from variance partitioning techniques. Note that this view does not change if the model search is performed in an orthogonal epistatic basis, but is a property of the data generation process. This phenomenon has been thoroughly explained in previous literature (<xref ref-type="bibr" rid="bib62">Huang et al., 2016</xref>).</p><p>Moving beyond variance partitioning, we aim to show that our epistasis inference pipeline produces accurate estimates of effect sizes and positions for specific interaction terms, while retaining accurate estimates of effect sizes and positions for the additive terms. In <xref ref-type="fig" rid="app3fig11">Appendix 3—figure 11</xref> and <xref ref-type="fig" rid="app3fig12">Appendix 3—figure 12</xref> we plot the true epistatic interactions overlaid with epistatic interactions inferred under various parameter values. We see that in all cases, the rate of false positive detections (blue dots) is very small. Increasing the number of segregants or the heritability results in more correct identifications (green dots) and fewer false negatives (yellow dots), and the remaining false negatives tend to be of small effect size. In addition, the positions and effect sizes of the epistatic interactions are largely correct (overlap of dot position and size), although not perfect (of course, small differences are difficult to observe on the whole-genome scale).</p><fig id="app3fig11" position="float"><label>Appendix 3—figure 11.</label><caption><title>Comparison of true and inferred epistatic effects for different segregant numbers.</title><p>Upper diagonal: True model versus inferred model with 100,000 segregants and heritability <inline-formula><mml:math id="inf349"><mml:mrow><mml:msup><mml:mi>H</mml:mi><mml:mn>2</mml:mn></mml:msup><mml:mo>=</mml:mo><mml:mn>0.5</mml:mn></mml:mrow></mml:math></inline-formula>; lower diagonal: true model versus inferred model with 10,000 segregants and heritability <inline-formula><mml:math id="inf350"><mml:mrow><mml:msup><mml:mi>H</mml:mi><mml:mn>2</mml:mn></mml:msup><mml:mo>=</mml:mo><mml:mn>0.5</mml:mn></mml:mrow></mml:math></inline-formula>. In both plots, epistatic interactions are represented by dots with position given by the genome location of the two SNPs involved and size scaled by the magnitude of effect size of the interaction (on a log scale). Epistatic interactions in the true model are colored yellow and those in the inferred model are colored blue. Dots appear green where the true and inferred interactions overlap; thus yellow dots alone represent false negatives and blue dots alone represent false positives.</p></caption><graphic mime-subtype="tiff" mimetype="image" xlink:href="elife-73983-app3-fig11-v2.tif"/></fig><fig id="app3fig12" position="float"><label>Appendix 3—figure 12.</label><caption><title>Comparison of true and inferred epistatic effects for different heritabilities.</title><p>Upper diagonal: True model versus inferred model with 100,000 segregants and heritability <inline-formula><mml:math id="inf351"><mml:mrow><mml:msup><mml:mi>H</mml:mi><mml:mn>2</mml:mn></mml:msup><mml:mo>=</mml:mo><mml:mn>0.95</mml:mn></mml:mrow></mml:math></inline-formula>; lower diagonal: true model versus inferred model with 100,000 segregants and heritability.<inline-formula><mml:math id="inf352"><mml:mrow><mml:msup><mml:mi>H</mml:mi><mml:mn>2</mml:mn></mml:msup><mml:mo>=</mml:mo><mml:mn>0.2</mml:mn></mml:mrow></mml:math></inline-formula> Scaling and coloring as in <xref ref-type="fig" rid="app3fig11">Appendix 3—figure 11</xref>.</p></caption><graphic mime-subtype="tiff" mimetype="image" xlink:href="elife-73983-app3-fig12-v2.tif"/></fig><p>We can also use our model comparison framework to quantify how similar our inferred additive and interaction effects are to the ground truth. In particular, we can quantify the similarity of additive coefficients (in both location and effect size) separately or in conjunction with the similarity of epistatic coefficients (in both location and effect size). We can see in <xref ref-type="fig" rid="app3fig13">Appendix 3—figure 13</xref> that additive effects inferred in the additive-plus-epistatic model are more accurate than those inferred in the additive-only model. As with the additive effects, the accuracy of the epistatic effects improves with increasing sample size.</p><fig id="app3fig13" position="float"><label>Appendix 3—figure 13.</label><caption><title>Model similarities for simulated epistatic architectures, as a function of segregant number.</title><p>In each panel, we show the model similarity scores between the true model and the additive-only model (dashed light blue), the additive terms in the additive-plus-epistatic model (dark blue), and the epistatic terms in the additive-plus-epistatic model (red). Left: heritability of 0.5; Right: heritability of 0.8. The true model (same in all cases) has 150 additive QTL and 150 epistatic interactions.</p></caption><graphic mime-subtype="tiff" mimetype="image" xlink:href="elife-73983-app3-fig13-v2.tif"/></fig><p>Thus, our forward-search approach retains all of its desired features when extended to epistatic interactions: the approach is conservative, tending to underestimate the number of interactions and to find very few false positives; it accurately estimates locations and effect sizes of specific interactions; and our model similarity framework can quantify the accuracy of both additive and epistatic terms, indicating that additive terms become more accurate when epistasis is included. Even more pronounced than in the additive case, the ability to detect epistatic interactions is strongly dependent on sample size. Finally, even in models where epistatic and additive effects are equally ‘important’, additive-only models can infer a large majority of the variance (see further discussion in Appendix 4).</p></sec><sec id="s12-3-4" sec-type="appendix"><title>Network analysis of epistasis</title><p>We can view the genetic architecture for each of our phenotypes as a graph, where nodes represent genes with detected QTL lead SNPs, and edges represent detected epistatic interactions between gene pairs. (In the case of intergenic lead SNPs, we assign the node or interaction to the closest gene.) This framework allows us to make quantitative comparisons of the architectures across traits and with other studies of cellular networks in yeast.</p><p>We generate graphs for each trait separately. To examine properties of these graphs, such as degree distributions or clustering coefficients, we must construct an appropriate null model. The simplest null model is an Erdos-Renyi (ER) random network (<xref ref-type="bibr" rid="bib43">Erdos and Renyi, 1959</xref>), where every edge is equally likely to occur. Specifically, for each phenotype graph, we randomly permute the edges; this preserves the total number of nodes and edges but distributes the edges randomly. We generate 50 such random networks for each trait, and we refer to these below as ‘random’ networks.</p><p>However, we observe in our data that the additive effect size at a QTL is weakly correlated with the number of epistatic interactions detected at that QTL (Pearson correlation coefficient <inline-formula><mml:math id="inf353"><mml:mrow><mml:mi>r</mml:mi><mml:mo>=</mml:mo><mml:mn>0.48</mml:mn></mml:mrow></mml:math></inline-formula>). This could be due to a feature of the underlying biological network; alternatively, it could be an artifact of our forward search procedure. For a QTL that has many epistatic interactions, if the apparent additive effect size in a linear model is small, the forward search may not be able to resolve all of its interactions or even resolve that specific locus; in contrast, if the apparent additive effect size is large, then the forward search will be more likely to identify more interactions at that locus. Regardless of the origin, we would like to generate a null network that recapitulates this correlation. To do so, for each phenotype network, we assign a weight to each node, given by the additive effect size of that node plus Gaussian noise (with standard deviation equal to 0.7 times the standard deviation of additive effects in that graph). Edges are then re-assigned by sampling pairs of nodes according to these weights; this results in a correlation of <inline-formula><mml:math id="inf354"><mml:mrow><mml:mi>r</mml:mi><mml:mo>=</mml:mo><mml:mn>0.49</mml:mn></mml:mrow></mml:math></inline-formula> between degree and additive effect size, over 50 simulations. These networks are referred to below as ‘null’ networks.</p><p>We can then calculate degree distributions, average clustering coefficients, and average shortest path lengths for the data, random networks, and null networks, as shown in <xref ref-type="fig" rid="fig4">Figure 4</xref>. Average clustering coefficients (where the average is taken over all nodes in a particular phenotype network) and average shortest path lengths (where the average is taken over the largest connected component of a particular phenotype network) are calculated using the Python package NetworkX (<xref ref-type="bibr" rid="bib51">Hagberg et al., 2008</xref>).</p><p>Next, we examine the network structure of epistasis across traits. For traits that are relatively similar, observing the same epistatic interactions indicates that our inference is robust. For traits that are uncorrelated, observing the same epistatic interactions indicates that pleiotropy is pervasive at the level of interactions as well as for genes. First, we aim to quantify how often the same interaction (i.e. an interaction between the same two genes) appears across our set of 18 traits. For every edge that is detected in at least one environment, we count its multiplicity (the number of trait networks in which that specific edge is present). We observe that in our data, of the 4469 edges that are detected, 3710 are distinct; 418 distinct interactions are observed twice or more, with a maximum of 10 observations. Averaging across all distinct edges, the average multiplicity is 1.21 (this corresponds to the expected number of occurrences for an edge, given that it has been observed once). We also perform this comparison with the subset of 7 environments that are uncorrelated in phenotype overall (30 °C, 4-nitroquinoline, YNB, guanidinium, lithium, molasses, and suloctidil): of the 1812 total edges, 1755 are distinct; 48 edges are observed twice or more, with a maximum of 4 observations. In this case, the average multiplicity is 1.03.</p><p>To determine if this overlap between traits is significant, we perform the same analysis for the null and random networks. For each simulation we generate null and random networks for each of the 18 traits and calculate the average multiplicity. We perform 5000 simulations to generate the empirical null distribution of average multiplicity under the two null hypotheses (random and correlation-preserving null). <xref ref-type="fig" rid="app3fig14">Appendix 3—figure 14</xref> shows these two null distributions along with the values from the data. Due to the sparsity of the graphs (<inline-formula><mml:math id="inf355"><mml:mrow><mml:mi>E</mml:mi><mml:mo>≪</mml:mo><mml:mrow><mml:mrow><mml:mi>N</mml:mi><mml:mo>⁢</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi>N</mml:mi><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow><mml:mo>/</mml:mo><mml:mn>2</mml:mn></mml:mrow></mml:mrow></mml:math></inline-formula> where <inline-formula><mml:math id="inf356"><mml:mi>E</mml:mi></mml:math></inline-formula> is the number of edges and <inline-formula><mml:math id="inf357"><mml:mi>N</mml:mi></mml:math></inline-formula> the number of nodes) and the incomplete overlap of nodes between the graphs, it is very rare for a random edge to be observed in two different traits under the ER random model, and so the distribution lies very close to 1. Even in the null networks, where large-effect nodes tend to have more interactions and thus are slightly more likely to have shared interactions across traits, average multiplicities greater than 1.02 are never observed in 5000 trials. Thus the average multiplicities from data (both over all traits and over uncorrelated traits) are significantly larger than expected (empirical p-value <inline-formula><mml:math id="inf358"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mo>&lt;</mml:mo><mml:mn>2</mml:mn><mml:mo>⋅</mml:mo><mml:msup><mml:mn>10</mml:mn><mml:mrow><mml:mo>−</mml:mo><mml:mn>4</mml:mn></mml:mrow></mml:msup></mml:mrow></mml:mstyle></mml:math></inline-formula>).</p><fig id="app3fig14" position="float"><label>Appendix 3—figure 14.</label><caption><title>Empirical null distributions for average edge multiplicity (the expected number of traits in which an edge will be observed, given that it was observed in at least one trait).</title><p>Histograms, data from 5000 simulations of random (grey) and null (orange) networks. Values from data are shown as vertical lines (all 18 traits, solid line; group of 7 uncorrelated traits, dashed line).</p></caption><graphic mime-subtype="tiff" mimetype="image" xlink:href="elife-73983-app3-fig14-v2.tif"/></fig><p>To better visualize the underlying biological network that is reflected in each trait, we use the edge multiplicity data to obtain a consensus network. We only retain edges that appear at least twice across a set of traits, and the nodes they connect. Edges are then weighted by their multiplicity (the number of times they are observed in that set of traits). We define three sets of traits: first, the total set of 18 traits; second, the group of correlated traits, that is, 23 °C, 25 °C, 27 °C, 30 °C, 33 °C, 35 °C, 37 °C, copper, ethanol, mannose, raffinose, and SDS; and third, the group of uncorrelated traits, that is, 30 °C, 4-nitroquinoline, YNB, guanidinium, lithium, molasses, and suloctidil. The consensus network for the full set is shown in <xref ref-type="fig" rid="fig4">Figure 4C</xref>; the two smaller networks are shown in <xref ref-type="fig" rid="fig4s6">Figure 4—figure supplement 6</xref>.</p></sec><sec id="s12-3-5" sec-type="appendix"><title>Comparison with previously identified epistatic interactions</title><p>To assess the capability of our epistatic inference to unveil real functional interactions within the cell, we evaluate the concordance of our results with those of previous studies that employ genetic perturbation methods (<xref ref-type="bibr" rid="bib28">Costanzo et al., 2016</xref>). For comparison reasons, we carry out this analysis at the gene level. Just as for the network analysis, we take the two genes in which the lead SNPs of the detected interaction are located (or, in the case of an intergenic lead SNP, the closest neighboring gene). We define a pair of genes to have been ‘screened’ for an interaction if both genes have been detected as additive QTL in any one of our 18 traits. (This is because our epistatic model search scans for interactions between pairs of lead SNPs already detected in an additive model, see Section A3-3.1). We further define a pair of genes to have been ‘identified’ if that epistatic interaction is also detected by the epistatic model search in any of the 18 traits.</p><p><xref ref-type="bibr" rid="bib28">Costanzo et al., 2016</xref> constructed an extensive library of <italic>S. cerevisiae</italic> single and double mutants, which they phenotype (colony size on agar plate) to identify statistical interactions between pairs of genes. For each pair of mutations screened, they calculate a genetic interaction score and an associated p-value for which they suggest cutoffs of different levels of stringency to be used when calling interactions: a Lenient, an Intermediate and a Stringent cutoff (see <xref ref-type="bibr" rid="bib28">Costanzo et al., 2016</xref> for details). For each of these cutoffs, we count the number of epistatic interactions identified by either/both our epistatic model search or/and Costanzo and colleagues among the total 111,175 interactions screened by both studies.</p><p>We identify a weak but statistically significant overlap between the two studies, although only when considering the Stringent cutoff (Table A3-2). With these parameters, we observe 96 interactions that are common to both studies. Overall, (<xref ref-type="bibr" rid="bib28">Costanzo et al., 2016</xref>) identifies many more interactions than our analysis, which is likely due to their genetic perturbations (mostly deletions) affecting cellular function more strongly than the SNPs in our panel. Additionally, a number of interactions are identified by only one of the studies. While this pattern could be due to false calls, it can be also due to real differences between the two studies regarding the specific genetic variants screened, phenotyping environments, and statistical power.</p><table-wrap id="app3table2" position="float"><label>Appendix 3—table 2.</label><caption><title>Results from <inline-formula><mml:math id="inf359"><mml:msup><mml:mi>χ</mml:mi><mml:mn>2</mml:mn></mml:msup></mml:math></inline-formula>-test of independence (with Yates’ continuity correction) between A (an epistatic interaction screened by our search is identified in our search) and B (an epistatic interaction screened by our search is identified by <xref ref-type="bibr" rid="bib28">Costanzo et al., 2016</xref>) at three levels of stringency for B, as described in the text.</title><p><italic>Overlap</italic> is the number of gene interactions identified by both studies.</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="left" valign="bottom">Stringency level</th><th align="left" valign="bottom">P(A|B’)</th><th align="left" valign="bottom">P(A|B)</th><th align="left" valign="bottom">Overlap</th><th align="left" valign="bottom"><inline-formula><mml:math id="inf360"><mml:msup><mml:mi>χ</mml:mi><mml:mn>2</mml:mn></mml:msup></mml:math></inline-formula></th><th align="left" valign="bottom"><inline-formula><mml:math id="inf361"><mml:msub><mml:mi>p</mml:mi><mml:mrow><mml:mrow><mml:msup><mml:mi>χ</mml:mi><mml:mn>2</mml:mn></mml:msup><mml:mo>,</mml:mo><mml:mtext>df</mml:mtext></mml:mrow><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub></mml:math></inline-formula></th></tr></thead><tbody><tr><td align="left" valign="bottom">Lenient</td><td align="char" char="." valign="bottom">2.32%</td><td align="char" char="." valign="bottom">2.25%</td><td align="char" char="." valign="bottom">494</td><td align="char" char="." valign="bottom">0.37</td><td align="char" char="." valign="bottom">0.54</td></tr><tr><td align="left" valign="bottom">Intermediate</td><td align="char" char="." valign="bottom">2.29%</td><td align="char" char="." valign="bottom">2.44%</td><td align="char" char="." valign="bottom">187</td><td align="char" char="." valign="bottom">0.62</td><td align="char" char="." valign="bottom">0.43</td></tr><tr><td align="left" valign="bottom">Stringent</td><td align="char" char="." valign="bottom">2.29%</td><td align="char" char="." valign="bottom">2.86%</td><td align="char" char="." valign="bottom">96</td><td align="char" char="." valign="bottom">4.46</td><td align="char" char="." valign="bottom">0.03</td></tr></tbody></table></table-wrap></sec><sec id="s12-3-6" sec-type="appendix"><title>Neural network</title><p>To investigate if higher-order epistatic effects existed in our dataset, we designed a densely connected neural network. The limited existing literature on predicting complex traits from genetic markers using neural network models has so far found no consistent strong improvement in performance compared to linear methods (<xref ref-type="bibr" rid="bib122">Zingaretti et al., 2020</xref>). To the best of our knowledge, there is just a single study that has predicted complex traits from genetic markers with neural networks and that uses a number of genotypes comparable to ours (n &gt; 50k) (<xref ref-type="bibr" rid="bib10">Bellot et al., 2018</xref>). This study used data from the UK Biobank to predict five complex human traits using multilayer perceptron (MLP) and convolutional neural network (CNN) models alongside traditional linear models. The authors found that MLP, CNN and linear modeling methods performed similarly at predicting height, which had the highest estimated genomic heritability among the investigated traits. Overall the authors found that CNN methods were competitive to linear models but found no case where the neural network-based methods outperformed linear methods by a sizeable margin.</p><p>Several studies on smaller datasets have yielded similar results. One recent study investigated CNN models for complex trait prediction based on collections of 1000–2000 polyploid plant genomes (<xref ref-type="bibr" rid="bib122">Zingaretti et al., 2020</xref>). The authors found that predictive accuracies (measured by Pearson correlation between true and predicted values) were similar to those achieved by linear models (respectively 0.01 higher and 0.02 lower average accuracies across traits for the two plant species considered). However, there was one trait out of the five considered for the first species which had a high epistatic component and where a CNN model strongly out-performed the linear model (c. 20% better than any linear model method). Another recent study that used a CNN model to predict trait values based on genetic data from c. 5 k soybean lines found that predictive accuracy was on average 0.01 higher across traits compared to a standard linear model (<xref ref-type="bibr" rid="bib75">Liu et al., 2019b</xref>). Finally, a further very recent study investigating the performance of MLP and CNN models on wheat datasets with &lt; 1000 samples found that MLP models performed better than CNN models and lead to a trial-averaged accuracy increase of 0.03–0.06 across traits compared to a linear modeling approach (<xref ref-type="bibr" rid="bib97">Sandhu et al., 2021</xref>).</p><p>For our analysis, we focused on MLP architectures since we sought to investigate the capacity of a flexible class of neural network architectures, without making assumptions about the relationship between epistasis and genomic distance between SNPs. The data were initially randomly split into a training set, a validation set, and a test set (81,776; 9087; and 9087 segregants respectively). We used the Bayesian optimization function <monospace>gp_minimize</monospace> from the <monospace>scikit-optimize</monospace> 0.8.1 python library (<xref ref-type="bibr" rid="bib57">Head et al., 2018</xref>) to search over possible MLP architectures, training on the training set and assessing performance on the validation set. We performed <monospace>gp_minimize</monospace> for 27 iterations searching over architectures with between 2 and 12 hidden layers, between 20 and 2400 neurons per hidden layer, and dropout between 0 and 0.5. Relu activations and batch normalization were applied to all hidden layers, and all networks had an output layer composed of 18 neurons to jointly predict values for the 18 traits. Optimization was performed using the Adam optimizer, with an adaptive learning rate schedule (with patience of 8 epochs), and early stopping (with patience of 24 epochs), training up to maximum of 500 epochs. These settings were chosen to allow sufficient time for the models to plateau in terms of validation loss. Training was performed with a batch size of 35, and mean squared error was used as the loss function.</p><p>The top three performing architectures from this search had very similar validation loss ( &lt;0.1% difference), and considerably out-performed the next best architectures ( &gt;5% difference), and all three were broad (&gt;2000 neurons per layer) shallow (two hidden layers) architectures with high dropout (&gt;0.45). We note that, although some of the studies mentioned above considered MLP architectures, none of these studies considered architectures with &gt;150 neurons per layer, or dropout &gt;0.3, and none of these studies applied batch normalization. Of the three very similarly-performing models we took forward the model which was the most parsimonious in terms of the number of neurons per hidden layer as the final architecture, after rounding the dropout for this model to two decimal places. We performed a final round of tuning to select the final learning rate schedule for this architecture.</p><p>The final model was composed of three layers plus the input and output layers: two dense layers (with 2023 neurons and relu activation, followed by batch normalization), and a final dense layer (with 18 neurons and no activation function). Dropout of 0.46 was applied after the first and second hidden layers. Optimization was performed using the Adam optimizer, with a decreasing learning rate schedule – the learning rate was initially set at <inline-formula><mml:math id="inf362"><mml:mrow><mml:mn>1.56</mml:mn><mml:mo>×</mml:mo><mml:msup><mml:mn>10</mml:mn><mml:mrow><mml:mo>-</mml:mo><mml:mn>5</mml:mn></mml:mrow></mml:msup></mml:mrow></mml:math></inline-formula> and was decreased by a factor of 2 after epoch number 61 and epoch number 79. The model was trained for 80 epochs, with a batch size of 35. Keras 2.2.4 (<xref ref-type="bibr" rid="bib25">Chollet, 2015</xref>) with tensorflow-gpu 1.12.0 (<xref ref-type="bibr" rid="bib1">Abadi et al., 2015</xref>) was used.</p><p>While our analysis provides informative results, there are some limitations. The final neural network model explains on average 4% more variance than the additive QTL model, and on average 0.5% more variance than the additive-plus-pairwise QTL model. These results compare favorably with the existing literature (described above) on genetic prediction using MLP (and CNN) models, considering the sample size of the dataset. In this context the results provide evidence to suggest the presence of higher-order epistasis in the data, and suggest that an MLP model is capable of capturing these higher-order relationships to a certain extent. However, given the large parameter space of MLP architectures, we cannot rule out the possibility that there are other MLP architecture parameter regimes that we did not explore which would outperform the architecture we identified. Furthermore, we cannot draw any conclusions about the capacities of other classes of models, such as CNN’s, to make predictions on this data.</p></sec></sec></app><app id="appendix-4"><title>Appendix 4</title><sec id="s13" sec-type="appendix"><title>Variance partitioning</title><p>In a typical QTL experiment, the overall phenotypic variability in the dataset arises not only due to genetic components (<inline-formula><mml:math id="inf363"><mml:msup><mml:mi>H</mml:mi><mml:mn>2</mml:mn></mml:msup></mml:math></inline-formula>, the broad-sense heritability), but also from measurement error, environmental influence or interactions, epigenetic effects, and other factors. Within the genetic component, we can further distinguish between additive SNP heritability (<inline-formula><mml:math id="inf364"><mml:msup><mml:mi>h</mml:mi><mml:mn>2</mml:mn></mml:msup></mml:math></inline-formula>, or the narrow-sense heritability), epistatic effects of various orders, and dominance effects (in non-haploid organisms). Partitioning the sum of squared deviations into these components is often used to quantify the relative importance of each component.</p><p>In our dataset, we expect several of these sources of variation to be negligible. In particular, our laboratory experiments allow for great control over the environment (as in large, well-mixed liquid culture) such that all individuals experience a constant environment. Our set of observed SNPs tags the large majority of the genetic variation present in these strains, but not all (see Section A4-1.5 for details). Epistatic effects are seen to play a major role, as shown in Appendix 3-3, but the variance partitioning of epistatic effects does not produce robust quantitative estimates of its relative importance (see discussion below in Section A4-1.4 and in Appendix 3-3). Thus, we focus our efforts here on the three major components of variation that we can estimate: phenotype measurement errors, genotype measurement errors, and tagged additive variants.</p><p>However, there are several complications in our dataset that must be considered to obtain a correct variance partitioning. First, we have uncertainty in the independent variable (genotype uncertainty) that limits the variance explained by the model (the well-known phenomenon of regression attenuation). We discuss in Section A4-1.3 how this factor can be corrected. Second, the use of the Gaussian prior in the inference of phenotypes from sequencing data (see Appendix 2) introduces some subtleties in the calculation of phenotype variance and the partitioning of phenotype error, which we address in Section A4-1.1.</p><sec id="s13-1" sec-type="appendix"><title>Phenotype measurement error</title><p>Our goal is to estimate the realized error component <inline-formula><mml:math id="inf365"><mml:msubsup><mml:mi>σ</mml:mi><mml:mrow><mml:mi>r</mml:mi><mml:mo>⁢</mml:mo><mml:mi>e</mml:mi><mml:mo>⁢</mml:mo><mml:mi>a</mml:mi><mml:mo>⁢</mml:mo><mml:mi>l</mml:mi><mml:mo>⁢</mml:mo><mml:mi>i</mml:mi><mml:mo>⁢</mml:mo><mml:mi>z</mml:mi><mml:mo>⁢</mml:mo><mml:mi>e</mml:mi><mml:mo>⁢</mml:mo><mml:mi>d</mml:mi><mml:mo>⁢</mml:mo><mml:mi>e</mml:mi><mml:mo>⁢</mml:mo><mml:mi>r</mml:mi><mml:mo>⁢</mml:mo><mml:mi>r</mml:mi></mml:mrow><mml:mn>2</mml:mn></mml:msubsup></mml:math></inline-formula> as a fraction of the total phenotype variability in the population <inline-formula><mml:math id="inf366"><mml:msubsup><mml:mi>σ</mml:mi><mml:mrow><mml:mi>t</mml:mi><mml:mo>⁢</mml:mo><mml:mi>o</mml:mi><mml:mo>⁢</mml:mo><mml:mi>t</mml:mi></mml:mrow><mml:mn>2</mml:mn></mml:msubsup></mml:math></inline-formula>. We assume a compound normal distribution, where phenotypes are drawn from <inline-formula><mml:math id="inf367"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mi>y</mml:mi><mml:mo>∼</mml:mo><mml:mrow><mml:mi mathvariant="script">N</mml:mi></mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mn>0</mml:mn><mml:mo>,</mml:mo><mml:msubsup><mml:mi>σ</mml:mi><mml:mrow><mml:mi>g</mml:mi><mml:mi>e</mml:mi><mml:mi>n</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msubsup><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mstyle></mml:math></inline-formula>, where <inline-formula><mml:math id="inf368"><mml:msubsup><mml:mi>σ</mml:mi><mml:mrow><mml:mi>g</mml:mi><mml:mo>⁢</mml:mo><mml:mi>e</mml:mi><mml:mo>⁢</mml:mo><mml:mi>n</mml:mi></mml:mrow><mml:mn>2</mml:mn></mml:msubsup></mml:math></inline-formula> is the variance due to genetic factors, and measurements are drawn from <inline-formula><mml:math id="inf369"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mrow><mml:mi mathvariant="script">N</mml:mi></mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>y</mml:mi><mml:mo>,</mml:mo><mml:msubsup><mml:mi>σ</mml:mi><mml:mrow><mml:mi>e</mml:mi><mml:mi>r</mml:mi><mml:mi>r</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msubsup><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mstyle></mml:math></inline-formula>. If we only had a single measurement, the total variability in the population follows: <inline-formula><mml:math id="inf370"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msubsup><mml:mi>σ</mml:mi><mml:mrow><mml:mi>t</mml:mi><mml:mi>o</mml:mi><mml:mi>t</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msubsup><mml:mo>=</mml:mo><mml:msubsup><mml:mi>σ</mml:mi><mml:mrow><mml:mi>g</mml:mi><mml:mi>e</mml:mi><mml:mi>n</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msubsup><mml:mo>+</mml:mo><mml:msubsup><mml:mi>σ</mml:mi><mml:mrow><mml:mi>e</mml:mi><mml:mi>r</mml:mi><mml:mi>r</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msubsup></mml:mrow></mml:mstyle></mml:math></inline-formula>. However, taking several replicate measurements will make our observed phenotypes more accurate. The realized error is given by <inline-formula><mml:math id="inf371"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msubsup><mml:mi>σ</mml:mi><mml:mrow><mml:mi>e</mml:mi><mml:mi>r</mml:mi><mml:mi>r</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msubsup><mml:mrow><mml:mo>/</mml:mo></mml:mrow><mml:mi>r</mml:mi></mml:mrow></mml:mstyle></mml:math></inline-formula>, where <inline-formula><mml:math id="inf372"><mml:mi>r</mml:mi></mml:math></inline-formula> is the number of replicate measurements, and the proportion of variance explained by the measurement error is therefore <inline-formula><mml:math id="inf373"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msubsup><mml:mi>σ</mml:mi><mml:mrow><mml:mi>e</mml:mi><mml:mi>r</mml:mi><mml:mi>r</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msubsup><mml:mrow><mml:mo>/</mml:mo></mml:mrow><mml:mi>r</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mrow><mml:mo>/</mml:mo></mml:mrow><mml:msubsup><mml:mi>σ</mml:mi><mml:mrow><mml:mi>t</mml:mi><mml:mi>o</mml:mi><mml:mi>t</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msubsup></mml:mrow></mml:mstyle></mml:math></inline-formula>. Clearly, as the number of replicate measurements grows to infinity, the variance explained by measurement error goes to zero. However, when a limited number of replicate measurements are available, calculating this quantity requires knowledge of the error process for each measurement (<inline-formula><mml:math id="inf374"><mml:msubsup><mml:mi>σ</mml:mi><mml:mrow><mml:mi>e</mml:mi><mml:mo>⁢</mml:mo><mml:mi>r</mml:mi><mml:mo>⁢</mml:mo><mml:mi>r</mml:mi></mml:mrow><mml:mn>2</mml:mn></mml:msubsup></mml:math></inline-formula>). Although it is not possible to know this value a priori, it can be estimated from the Pearson correlation between replicate measurements. Specifically, because we have taken the mean of <inline-formula><mml:math id="inf375"><mml:mi>r</mml:mi></mml:math></inline-formula> replicates as our final measurement, the fraction of the observed variance due to the error would be given by<disp-formula id="equ85"><label>(A4-1)</label><mml:math id="m85"><mml:mrow><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mfrac><mml:mrow><mml:msubsup><mml:mi>σ</mml:mi><mml:mrow><mml:mi>e</mml:mi><mml:mi>r</mml:mi><mml:mi>r</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msubsup><mml:mrow><mml:mo>/</mml:mo></mml:mrow><mml:mi>r</mml:mi></mml:mrow><mml:mrow><mml:msubsup><mml:mi>σ</mml:mi><mml:mrow><mml:mi>g</mml:mi><mml:mi>e</mml:mi><mml:mi>n</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msubsup><mml:mo>+</mml:mo><mml:msubsup><mml:mi>σ</mml:mi><mml:mrow><mml:mi>e</mml:mi><mml:mi>r</mml:mi><mml:mi>r</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msubsup><mml:mrow><mml:mo>/</mml:mo></mml:mrow><mml:mi>r</mml:mi></mml:mrow></mml:mfrac></mml:mstyle><mml:mo>=</mml:mo><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mfrac><mml:mrow><mml:mn>1</mml:mn><mml:mo>−</mml:mo><mml:mo fence="false" stretchy="false">⟨</mml:mo><mml:msub><mml:mi>ρ</mml:mi><mml:mrow><mml:msub><mml:mi>r</mml:mi><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>r</mml:mi><mml:mrow><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub><mml:mo fence="false" stretchy="false">⟩</mml:mo></mml:mrow><mml:mrow><mml:mn>1</mml:mn><mml:mo>+</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi>r</mml:mi><mml:mo>−</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">)</mml:mo><mml:mo fence="false" stretchy="false">⟨</mml:mo><mml:msub><mml:mi>ρ</mml:mi><mml:mrow><mml:msub><mml:mi>r</mml:mi><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>r</mml:mi><mml:mrow><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub><mml:mo fence="false" stretchy="false">⟩</mml:mo></mml:mrow></mml:mfrac></mml:mstyle><mml:mo>,</mml:mo></mml:mrow></mml:math></disp-formula></p><p>where the expectation values are averages over all pairwise Pearson correlations among replicates. Thus, observing no correlation between replicate measurements would imply that all the observed variance is due to measurement error. For our bulk fitness assays, the average correlation between two measurements is typically on the order of 0.9, which would indicate that about 5% of the observed phenotypic variance is due to measurement error, or that <inline-formula><mml:math id="inf376"><mml:msubsup><mml:mi>σ</mml:mi><mml:mrow><mml:mi>e</mml:mi><mml:mo>⁢</mml:mo><mml:mi>r</mml:mi><mml:mo>⁢</mml:mo><mml:mi>r</mml:mi></mml:mrow><mml:mn>2</mml:mn></mml:msubsup></mml:math></inline-formula> is approximately 10% of <inline-formula><mml:math id="inf377"><mml:msubsup><mml:mi>σ</mml:mi><mml:mrow><mml:mi>g</mml:mi><mml:mo>⁢</mml:mo><mml:mi>e</mml:mi><mml:mo>⁢</mml:mo><mml:mi>n</mml:mi></mml:mrow><mml:mn>2</mml:mn></mml:msubsup></mml:math></inline-formula>.</p><p>Importantly, this value is an underestimate of the variance explained by measurement error in our case. As explained in Appendix 2, we use a Gaussian prior in our phenotype inference to constrain the values of low-evidence (low-read-count) lineages. This introduces a systematic bias in our phenotype estimates for low-read-count lineages that is consistent across replicates: a lineage with sparse, noisy read count data in two replicate assays will be largely constrained by the prior, resulting in artificially similar maximum-likelihood estimates of its phenotype. These values would be precise but not accurate, and so the reliability measures described above will be underestimates of the true phenotyping error. Indeed, even the measurement of total phenotypic variance (as calculated from the maximum-likelihood estimates) will be underestimated.</p><p>However, we also obtain measurements of standard error for each individual from the maximum-likelihood procedure (estimated from the Fisher information) that capture the effect of differing coverage, and this allows us to obtain a more accurate estimate for the realized phenotyping error and total phenotypic variance. To see this, we note that for an individual i with true phenotype <italic>y</italic><sub><italic>i</italic></sub>, if we have an average maximum-likelihood estimate <inline-formula><mml:math id="inf378"><mml:msub><mml:mover accent="true"><mml:mi>y</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover><mml:mi>i</mml:mi></mml:msub></mml:math></inline-formula> from <inline-formula><mml:math id="inf379"><mml:mi>r</mml:mi></mml:math></inline-formula> replicate assays, we have:<disp-formula id="equ86"><label>(A4-2)</label><mml:math id="m86"><mml:mrow><mml:msqrt><mml:mi>r</mml:mi></mml:msqrt><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mrow><mml:mover><mml:mi>y</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover></mml:mrow><mml:mi>i</mml:mi></mml:msub><mml:mo>−</mml:mo><mml:msub><mml:mi>y</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mrow><mml:mover><mml:mrow><mml:mo stretchy="false">→</mml:mo></mml:mrow><mml:mrow><mml:mi>d</mml:mi></mml:mrow></mml:mover></mml:mrow><mml:mrow><mml:mi mathvariant="script">N</mml:mi></mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mn>0</mml:mn><mml:mo>,</mml:mo><mml:mi>ψ</mml:mi><mml:msubsup><mml:mi>σ</mml:mi><mml:mi>i</mml:mi><mml:mn>2</mml:mn></mml:msubsup><mml:mo stretchy="false">)</mml:mo><mml:mo>,</mml:mo></mml:mrow></mml:math></disp-formula></p><p>meaning that maximum likelihood estimator <inline-formula><mml:math id="inf380"><mml:msub><mml:mover accent="true"><mml:mi>y</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover><mml:mi>i</mml:mi></mml:msub></mml:math></inline-formula> converges in distribution to a normal distribution, with variance given by the inverse of the Fisher information <inline-formula><mml:math id="inf381"><mml:msubsup><mml:mi>σ</mml:mi><mml:mi>i</mml:mi><mml:mn>2</mml:mn></mml:msubsup></mml:math></inline-formula> scaled by the overdispersion factor <inline-formula><mml:math id="inf382"><mml:mi>ψ</mml:mi></mml:math></inline-formula>. We explain the estimation of <inline-formula><mml:math id="inf383"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mi>ψ</mml:mi><mml:msubsup><mml:mi>σ</mml:mi><mml:mrow><mml:mi>i</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msubsup></mml:mrow></mml:mstyle></mml:math></inline-formula> in Appendix 2; it scales inversely with sequencing coverage (so low-read-count individuals have high standard errors, and vice versa), and thus accurately captures the heteroskedasticity of phenotyping errors.</p><p>By averaging this variance over all <inline-formula><mml:math id="inf384"><mml:mi>N</mml:mi></mml:math></inline-formula> individuals, we obtain an estimate of the realized error:<disp-formula id="equ87"><label>(A4-3)</label><mml:math id="m87"><mml:mrow><mml:mrow><mml:msubsup><mml:mi>σ</mml:mi><mml:mrow><mml:mi>r</mml:mi><mml:mo>⁢</mml:mo><mml:mi>e</mml:mi><mml:mo>⁢</mml:mo><mml:mi>a</mml:mi><mml:mo>⁢</mml:mo><mml:mi>l</mml:mi><mml:mo>⁢</mml:mo><mml:mi>i</mml:mi><mml:mo>⁢</mml:mo><mml:mi>z</mml:mi><mml:mo>⁢</mml:mo><mml:mi>e</mml:mi><mml:mo>⁢</mml:mo><mml:mi>d</mml:mi><mml:mo>⁢</mml:mo><mml:mi>e</mml:mi><mml:mo>⁢</mml:mo><mml:mi>r</mml:mi><mml:mo>⁢</mml:mo><mml:mi>r</mml:mi></mml:mrow><mml:mn>2</mml:mn></mml:msubsup><mml:mo>=</mml:mo><mml:mfrac><mml:msubsup><mml:mi>σ</mml:mi><mml:mrow><mml:mi>e</mml:mi><mml:mo>⁢</mml:mo><mml:mi>r</mml:mi><mml:mo>⁢</mml:mo><mml:mi>r</mml:mi></mml:mrow><mml:mn>2</mml:mn></mml:msubsup><mml:mi>r</mml:mi></mml:mfrac><mml:mo>=</mml:mo><mml:mrow><mml:mfrac><mml:mn>1</mml:mn><mml:mi>N</mml:mi></mml:mfrac><mml:mo>⁢</mml:mo><mml:mrow><mml:munderover><mml:mo largeop="true" movablelimits="false" symmetric="true">∑</mml:mo><mml:mi>i</mml:mi><mml:mi>N</mml:mi></mml:munderover><mml:mrow><mml:mi>ψ</mml:mi><mml:mo>⁢</mml:mo><mml:msubsup><mml:mi>σ</mml:mi><mml:mi>i</mml:mi><mml:mn>2</mml:mn></mml:msubsup></mml:mrow></mml:mrow></mml:mrow></mml:mrow><mml:mo>.</mml:mo></mml:mrow></mml:math></disp-formula></p><p>This value is consistently larger than the estimate obtained from <xref ref-type="disp-formula" rid="equ12">Equation A1-1</xref>, as expected, but more accurately characterizes the scale of phenotyping measurement error, to the extent that the maximum likelihood estimates are reliable. It no longer represents a valid partition of the observed phenotypic variance, but instead a partition of the (larger) phenotypic variance we would observe if we re-sampled individual phenotypes from the distribution given in <xref ref-type="disp-formula" rid="equ86">Equation A4-2</xref>. Because we believe the re-sampled total variance to be more accurate than the observed variance, and the realized error from <xref ref-type="disp-formula" rid="equ87">Equation A4-3</xref> to be more accurate than that from <xref ref-type="disp-formula" rid="equ85">Equation A4-1</xref>, we choose to use re-sampled phenotypic variance for all of the variance partitioning calculations. For completeness, <xref ref-type="supplementary-material" rid="supp6">Supplementary file 6</xref> also enumerates the underestimated total variance and realized error variance.</p></sec><sec id="s13-2" sec-type="appendix"><title>Additive effects</title><p>Next, we turn our attention to estimation of the variance for the additive genetic component (<inline-formula><mml:math id="inf385"><mml:msubsup><mml:mi>σ</mml:mi><mml:mrow><mml:mi>g</mml:mi><mml:mo>⁢</mml:mo><mml:mi>e</mml:mi><mml:mo>⁢</mml:mo><mml:mi>n</mml:mi></mml:mrow><mml:mn>2</mml:mn></mml:msubsup></mml:math></inline-formula>). One method of estimation is by fitting of all the SNPs as random effects in a mixed linear model (see <xref ref-type="bibr" rid="bib116">Yang et al., 2011</xref> for a complete description of the method). Here the model is<disp-formula id="equ88"><label>(A4-4)</label><mml:math id="m88"><mml:mrow><mml:mrow><mml:mover accent="true"><mml:mi>y</mml:mi><mml:mo stretchy="false">→</mml:mo></mml:mover><mml:mo>=</mml:mo><mml:mrow><mml:mrow><mml:mi>W</mml:mi><mml:mo>⁢</mml:mo><mml:mover accent="true"><mml:mi>u</mml:mi><mml:mo stretchy="false">→</mml:mo></mml:mover></mml:mrow><mml:mo>+</mml:mo><mml:mi>ε</mml:mi></mml:mrow></mml:mrow><mml:mo>,</mml:mo></mml:mrow></mml:math></disp-formula></p><p>where <inline-formula><mml:math id="inf386"><mml:mover accent="true"><mml:mi>y</mml:mi><mml:mo stretchy="false">→</mml:mo></mml:mover></mml:math></inline-formula> represents a vector of phenotypes (in our case, re-sampled phenotypes), <inline-formula><mml:math id="inf387"><mml:mover accent="true"><mml:mi>u</mml:mi><mml:mo stretchy="false">→</mml:mo></mml:mover></mml:math></inline-formula> is a vector of random SNP effects, and the errors <inline-formula><mml:math id="inf388"><mml:mi>ε</mml:mi></mml:math></inline-formula> are normally distributed with mean zero and variance <inline-formula><mml:math id="inf389"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msubsup><mml:mi>σ</mml:mi><mml:mrow><mml:mi>e</mml:mi><mml:mi>r</mml:mi><mml:mi>r</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msubsup></mml:mrow></mml:mstyle></mml:math></inline-formula>. <italic>W</italic> is a standardized genotype matrix for haploid individuals, where the <inline-formula><mml:math id="inf390"><mml:mrow><mml:mi>i</mml:mi><mml:mo>⁢</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:math></inline-formula> th elements are<disp-formula id="equ89"><label>(A4-5)</label><mml:math id="m89"><mml:mrow><mml:mrow><mml:msub><mml:mi>w</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>⁢</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mfrac><mml:mrow><mml:msub><mml:mi>x</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>⁢</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>-</mml:mo><mml:msub><mml:mi>p</mml:mi><mml:mi>j</mml:mi></mml:msub></mml:mrow><mml:msqrt><mml:mrow><mml:msub><mml:mi>p</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>⁢</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mn>1</mml:mn><mml:mo>-</mml:mo><mml:msub><mml:mi>p</mml:mi><mml:mi>j</mml:mi></mml:msub></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:msqrt></mml:mfrac></mml:mrow><mml:mo>,</mml:mo></mml:mrow></mml:math></disp-formula></p><p>where <italic>p</italic><sub><italic>j</italic></sub> is the allele frequency at locus <inline-formula><mml:math id="inf391"><mml:mi>j</mml:mi></mml:math></inline-formula> (allele frequencies in our panel are very close to 0.5 overall but vary at some loci; see <xref ref-type="fig" rid="fig1s3">Figure 1—figure supplement 3</xref>). Under this model the total (resampled) phenotypic variance can be written as<disp-formula id="equ90"><label>(A4-6)</label><mml:math id="m90"><mml:mrow><mml:mrow><mml:msubsup><mml:mi>σ</mml:mi><mml:mrow><mml:mi>t</mml:mi><mml:mo>⁢</mml:mo><mml:mi>o</mml:mi><mml:mo>⁢</mml:mo><mml:mi>t</mml:mi></mml:mrow><mml:mn>2</mml:mn></mml:msubsup><mml:mo>=</mml:mo><mml:mrow><mml:mrow><mml:mi>W</mml:mi><mml:mo>⁢</mml:mo><mml:msup><mml:mi>W</mml:mi><mml:mi>T</mml:mi></mml:msup><mml:mo>⁢</mml:mo><mml:msubsup><mml:mi>σ</mml:mi><mml:mi>u</mml:mi><mml:mn>2</mml:mn></mml:msubsup></mml:mrow><mml:mo>+</mml:mo><mml:mrow><mml:mi>I</mml:mi><mml:mo>⁢</mml:mo><mml:msubsup><mml:mi>σ</mml:mi><mml:mi>e</mml:mi><mml:mn>2</mml:mn></mml:msubsup></mml:mrow></mml:mrow></mml:mrow><mml:mo>,</mml:mo></mml:mrow></mml:math></disp-formula></p><p>with <inline-formula><mml:math id="inf392"><mml:mi>I</mml:mi></mml:math></inline-formula> as the identity matrix. The variance explained by all the SNPs, <inline-formula><mml:math id="inf393"><mml:mrow><mml:msubsup><mml:mi>σ</mml:mi><mml:mrow><mml:mi>g</mml:mi><mml:mo>⁢</mml:mo><mml:mi>e</mml:mi><mml:mo>⁢</mml:mo><mml:mi>n</mml:mi></mml:mrow><mml:mn>2</mml:mn></mml:msubsup><mml:mo>=</mml:mo><mml:mrow><mml:mi>N</mml:mi><mml:mo>⁢</mml:mo><mml:msubsup><mml:mi>σ</mml:mi><mml:mi>u</mml:mi><mml:mn>2</mml:mn></mml:msubsup></mml:mrow></mml:mrow></mml:math></inline-formula>, can be obtained by defining <inline-formula><mml:math id="inf394"><mml:mrow><mml:mi>A</mml:mi><mml:mo>=</mml:mo><mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mi>W</mml:mi><mml:mo>⁢</mml:mo><mml:msup><mml:mi>W</mml:mi><mml:mi>T</mml:mi></mml:msup></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>/</mml:mo><mml:mi>N</mml:mi></mml:mrow></mml:mrow></mml:math></inline-formula>, which can be interpreted as a genetic relatedness matrix (GRM) between individuals. The variance components can then be estimated by restricted maximum likelihood (REML). We perform this estimation using the analysis package GCTA (<xref ref-type="bibr" rid="bib116">Yang et al., 2011</xref>) (we use the flag <monospace>--make-grm-inbred</monospace> to construct a GRM for haploid individuals and perform REML estimation using default parameters). Since GCTA requires binary-valued genotypes, we binarized each locus for each individual by rounding the posterior probability from our HMM. We can then correct for the regression attenuation induced by this binarization; see Section A4-1.3 below.</p><p>In contrast to a random effects model, we can also estimate <inline-formula><mml:math id="inf395"><mml:msubsup><mml:mi>σ</mml:mi><mml:mrow><mml:mi>g</mml:mi><mml:mo>⁢</mml:mo><mml:mi>e</mml:mi><mml:mo>⁢</mml:mo><mml:mi>n</mml:mi></mml:mrow><mml:mn>2</mml:mn></mml:msubsup></mml:math></inline-formula> from the specific fixed-effect QTL model that we infer, using the PRESS statistic (<xref ref-type="bibr" rid="bib4">Allen, 1974</xref>). This yields the estimates of the “variance explained” by the detected QTL. We provide estimates as fixed effect linear models based on cross-validation as described in Appendix 3-1.3:<disp-formula id="equ91"><label>(A4-7)</label><mml:math id="m91"><mml:mrow><mml:mrow><mml:mfrac><mml:msubsup><mml:mi>σ</mml:mi><mml:mtext>QTL</mml:mtext><mml:mn>2</mml:mn></mml:msubsup><mml:msubsup><mml:mi>σ</mml:mi><mml:mrow><mml:mi>t</mml:mi><mml:mo>⁢</mml:mo><mml:mi>o</mml:mi><mml:mo>⁢</mml:mo><mml:mi>t</mml:mi></mml:mrow><mml:mn>2</mml:mn></mml:msubsup></mml:mfrac><mml:mo>=</mml:mo><mml:mrow><mml:mo>⟨</mml:mo><mml:mrow><mml:mn>1</mml:mn><mml:mo>-</mml:mo><mml:mfrac><mml:mtext>RSS</mml:mtext><mml:mtext>TSS</mml:mtext></mml:mfrac></mml:mrow><mml:mo>⟩</mml:mo></mml:mrow></mml:mrow><mml:mo>,</mml:mo></mml:mrow></mml:math></disp-formula></p><p>obtained from the residual sum-of-squares, in the cross-validated sets, between our predicted phenotype under the QTL model and the observed phenotype. As explained in Section A4-1.1, we use phenotypes that have been resampled from the maximum likelihood parameters to obtain more accurate estimates of the phenotypic variation due to measurement error.</p></sec><sec id="s13-3" sec-type="appendix"><title>Genotype measurement error</title><p>Finally, we address the issue of uncertain genotyping. As explained in Appendix 1, our genotypes are estimated rather than known values. There is an inevitable attenuation bias (or regression dilution) that will occur in the variance explained by the model when genotype values are imperfect. As an extreme example, consider the case where coverage is so low that the genotype values are close to 0.5 for the whole genome for all individuals. In this case, no modeling approaches will provide appreciable heritabilities. For understanding the genetic architecture of traits, we wish to estimate this degree of attenuation.</p><p>It is well-known that the attenuation can be corrected given known reliability estimates of the independent variables. The reliability of the genotyping is the <inline-formula><mml:math id="inf396"><mml:msup><mml:mi>R</mml:mi><mml:mn>2</mml:mn></mml:msup></mml:math></inline-formula> between the true genotype and the estimated genotype. We can then obtain the attenuation correction by dividing the estimated variance explained by the reliability estimate (<xref ref-type="bibr" rid="bib105">Spearman, 1904</xref>). In our data, we cannot easily obtain a reliability estimate for the genotype values by taking repeated measurements and calculating Pearson correlations. However, if the posterior probabilities in the genotyping are well-calibrated and accurate (as demonstrated in Appendix 1-1.3), we can take advantage of these probabilities to obtain the expected reliability estimate. Consider a position with a genotype posterior probability value <inline-formula><mml:math id="inf397"><mml:msub><mml:mi>π</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>k</mml:mi></mml:mrow></mml:msub></mml:math></inline-formula>. If the true value is 1, which occurs with a probability <inline-formula><mml:math id="inf398"><mml:msub><mml:mi>π</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>k</mml:mi></mml:mrow></mml:msub></mml:math></inline-formula>, then it will have a squared-residual value of <inline-formula><mml:math id="inf399"><mml:msup><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mn>1</mml:mn><mml:mo>-</mml:mo><mml:msub><mml:mi>π</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>k</mml:mi></mml:mrow></mml:msub></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mn>2</mml:mn></mml:msup></mml:math></inline-formula>. If the true value is 0, which occurs with a probability <inline-formula><mml:math id="inf400"><mml:mrow><mml:mn>1</mml:mn><mml:mo>-</mml:mo><mml:msub><mml:mi>π</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>k</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula>, then it will have a squared-residual value of <inline-formula><mml:math id="inf401"><mml:msubsup><mml:mi>π</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>k</mml:mi></mml:mrow><mml:mn>2</mml:mn></mml:msubsup></mml:math></inline-formula>. Thus, the expected squared-residual is<disp-formula id="equ92"><label>(A4-8)</label><mml:math id="m92"><mml:mrow><mml:mrow><mml:msub><mml:mtext>RSS</mml:mtext><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>k</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:mrow><mml:msub><mml:mi>π</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>k</mml:mi></mml:mrow></mml:msub><mml:mo>⁢</mml:mo><mml:msup><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mn>1</mml:mn><mml:mo>-</mml:mo><mml:msub><mml:mi>π</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>k</mml:mi></mml:mrow></mml:msub></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mn>2</mml:mn></mml:msup></mml:mrow><mml:mo>+</mml:mo><mml:mrow><mml:msubsup><mml:mi>π</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>k</mml:mi></mml:mrow><mml:mn>2</mml:mn></mml:msubsup><mml:mo>⁢</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mn>1</mml:mn><mml:mo>-</mml:mo><mml:msub><mml:mi>π</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>k</mml:mi></mml:mrow></mml:msub></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:mrow><mml:mo>=</mml:mo><mml:mrow><mml:msub><mml:mi>π</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>k</mml:mi></mml:mrow></mml:msub><mml:mo>⁢</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mn>1</mml:mn><mml:mo>-</mml:mo><mml:msub><mml:mi>π</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>k</mml:mi></mml:mrow></mml:msub></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:mrow><mml:mo>.</mml:mo></mml:mrow></mml:math></disp-formula></p><p>We can also obtain the expected total sum of squares in a similar manner, given that the average allele frequencies are close to 0.5 in our F1 cross:<disp-formula id="equ93"><label>(A4-9)</label><mml:math id="m93"><mml:mrow><mml:mrow><mml:msub><mml:mtext>TSS</mml:mtext><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>k</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:mrow><mml:mn>0.5</mml:mn><mml:mo>⁢</mml:mo><mml:msup><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mn>1</mml:mn><mml:mo>-</mml:mo><mml:mn>0.5</mml:mn></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mn>2</mml:mn></mml:msup></mml:mrow><mml:mo>+</mml:mo><mml:mrow><mml:mn>0.5</mml:mn><mml:mo>⁢</mml:mo><mml:msup><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mn>0</mml:mn><mml:mo>-</mml:mo><mml:mn>0.5</mml:mn></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mn>2</mml:mn></mml:msup></mml:mrow></mml:mrow><mml:mo>=</mml:mo><mml:mn>0.25</mml:mn></mml:mrow><mml:mo>.</mml:mo></mml:mrow></mml:math></disp-formula></p><p>Thus, the <inline-formula><mml:math id="inf402"><mml:msup><mml:mi>R</mml:mi><mml:mn>2</mml:mn></mml:msup></mml:math></inline-formula> between the inferred and true genotype for each individual at each locus is expected to be<disp-formula id="equ94"><label>(A4-10)</label><mml:math id="m94"><mml:mrow><mml:mrow><mml:msubsup><mml:mi>R</mml:mi><mml:mrow><mml:mrow><mml:mi>e</mml:mi><mml:mo>⁢</mml:mo><mml:mi>r</mml:mi><mml:mo>⁢</mml:mo><mml:mi>r</mml:mi></mml:mrow><mml:mo>,</mml:mo><mml:mrow><mml:mi>g</mml:mi><mml:mo>⁢</mml:mo><mml:mi>e</mml:mi><mml:mo>⁢</mml:mo><mml:mi>n</mml:mi></mml:mrow></mml:mrow><mml:mn>2</mml:mn></mml:msubsup><mml:mo>=</mml:mo><mml:mrow><mml:mn>1</mml:mn><mml:mo>-</mml:mo><mml:mrow><mml:mn>4</mml:mn><mml:mo>⁢</mml:mo><mml:msub><mml:mi>π</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>k</mml:mi></mml:mrow></mml:msub><mml:mo>⁢</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mn>1</mml:mn><mml:mo>-</mml:mo><mml:msub><mml:mi>π</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>k</mml:mi></mml:mrow></mml:msub></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:mrow><mml:mo>.</mml:mo></mml:mrow></mml:math></disp-formula></p><p>Note that the second term is exactly the genotype uncertainty metric proposed in Appendix 1-1.3. Taking the average of this value across individuals gives us our expected reliability estimate of the genotype values for each locus, from which we can correct the attenuation of our heritability estimates. Averaging across all loci, we obtain a value of <inline-formula><mml:math id="inf403"><mml:mrow><mml:mrow><mml:mo stretchy="false">⟨</mml:mo><mml:mrow><mml:mn>4</mml:mn><mml:mo>⁢</mml:mo><mml:msub><mml:mi>π</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>k</mml:mi></mml:mrow></mml:msub><mml:mo>⁢</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mn>1</mml:mn><mml:mo>-</mml:mo><mml:msub><mml:mi>π</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>k</mml:mi></mml:mrow></mml:msub></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow><mml:mo stretchy="false">⟩</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:mn>0.067</mml:mn></mml:mrow></mml:math></inline-formula>. However, only the loci identified as QTL lead SNPs will be relevant for our regression; at these loci, the average uncertainty value is 0.082. This indicates that the variance explained by our inferred QTL models needs to be increased by a factor of <inline-formula><mml:math id="inf404"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mn>1</mml:mn><mml:mrow><mml:mo>/</mml:mo></mml:mrow><mml:msup><mml:mi>R</mml:mi><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msup><mml:mo>=</mml:mo><mml:mn>1</mml:mn><mml:mrow><mml:mo>/</mml:mo></mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mn>1</mml:mn><mml:mo>−</mml:mo><mml:mn>0.082</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mstyle></mml:math></inline-formula> ∼9%, to account for regression attenuation. For our GREML inference, because we use the binarized genotypes rather than real values, this correction is slightly different:<disp-formula id="equ95"><label>(A4-11)</label><mml:math id="m95"><mml:mrow><mml:mrow><mml:msubsup><mml:mi>R</mml:mi><mml:mrow><mml:mrow><mml:mi>e</mml:mi><mml:mo>⁢</mml:mo><mml:mi>r</mml:mi><mml:mo>⁢</mml:mo><mml:mi>r</mml:mi></mml:mrow><mml:mo>,</mml:mo><mml:mrow><mml:mi>g</mml:mi><mml:mo>⁢</mml:mo><mml:mi>e</mml:mi><mml:mo>⁢</mml:mo><mml:mi>n</mml:mi></mml:mrow></mml:mrow><mml:mn>2</mml:mn></mml:msubsup><mml:mo>=</mml:mo><mml:mrow><mml:mn>1</mml:mn><mml:mo>-</mml:mo><mml:mrow><mml:mpadded width="+1.7pt"><mml:mn>4</mml:mn></mml:mpadded><mml:mo>⁢</mml:mo><mml:mtext>min</mml:mtext><mml:mo>⁢</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>π</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>k</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:mrow><mml:mn>1</mml:mn><mml:mo>-</mml:mo><mml:msub><mml:mi>π</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>k</mml:mi></mml:mrow></mml:msub></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:mrow><mml:mo>,</mml:mo></mml:mrow></mml:math></disp-formula></p><p>where the binarized uncertainty has an average value of 0.094 across all individuals and loci, resulting in a correction of 1/(1-0.094) ∼11%. The variances with and without attenuation correction are given in <xref ref-type="supplementary-material" rid="supp6">Supplementary file 6</xref> and shown in <xref ref-type="fig" rid="app4fig1">Appendix 4—figure 1</xref>.</p><fig id="app4fig1" position="float"><label>Appendix 4—figure 1.</label><caption><title>Variance partitioning for all traits.</title><p>Phenotyping measurement error is shown at top (grey). We show the variance explained by a random-effects model (black), our inferred additive QTL model (blue), our inferred additive-plus-pairwise-epistasis QTL model (orange), and a trained deep neural network (green). Light shades indicate correction for genotyping uncertainty.</p></caption><graphic mime-subtype="tiff" mimetype="image" xlink:href="elife-73983-app4-fig1-v2.tif"/></fig><p>To see if this is approximately correct, we can obtain a second orthogonal measure of this attenuation correction by obtaining the <inline-formula><mml:math id="inf405"><mml:msup><mml:mi>R</mml:mi><mml:mn>2</mml:mn></mml:msup></mml:math></inline-formula> from the final model on a subset of segregants with the highest coverage. Specifically, we use the top decile of coverage (9,995 segregants) as a held-out test set to evaluate the genetic variance explained by our QTL models. As seen in <xref ref-type="fig" rid="app4fig2">Appendix 4—figure 2</xref>, we find that the variance explained on the top-coverage individuals is slightly larger than that obtained by the uncertainty-adjusted QTL model on a random set of individuals, and that our estimate of measurement error is slightly smaller. This may be due to the fact that the top-coverage individuals also tend to have lower phenotyping standard errors, and indicates that our reported partitions for the full dataset are conservative. We report the attenuation values as well as the corrected and uncorrected partitions in <xref ref-type="supplementary-material" rid="supp6">Supplementary file 6</xref>, for both random and top-coverage test individuals.</p><fig id="app4fig2" position="float"><label>Appendix 4—figure 2.</label><caption><title>Variance partitioning for high-coverage individuals.</title><p>Measurement error for high-coverage individuals (black) and random individuals (grey) is shown at the top. For each trait, we show the variance explained by our additive QTL model on a high-coverage test set (left) or a random test set (right; correction for genotype uncertainty shown in light blue).</p></caption><graphic mime-subtype="tiff" mimetype="image" xlink:href="elife-73983-app4-fig2-v2.tif"/></fig></sec><sec id="s13-4" sec-type="appendix"><title>Epistatic effects</title><p>In addition to estimating the variance explained by our additive fixed-effect QTL models, we can perform a similar estimation for our fixed-effect models of additive QTL and epistatic interactions (see Appendix 3-3). These values are only marginally larger than those for additive models alone, as seen in <xref ref-type="fig" rid="app4fig1">Appendix 4—figure 1</xref>. This is expected due to our choice of definition (or basis) for epistatic terms, regardless of the number or strength of epistatic coefficients, and thus we cannot conclude from this the relative importance of epistatic versus additive effects (<xref ref-type="bibr" rid="bib62">Huang et al., 2016</xref>). This is also consistent with our simulation results (see Appendix 3-3.3). Although there may be many pairwise or higher-order interactions that our study does not have sufficient power to resolve, from these arguments we expect that they would contribute only marginally more to the total variance explained by our inferred models.</p></sec><sec id="s13-5" sec-type="appendix"><title>Other factors</title><p>We can see from <xref ref-type="fig" rid="app4fig1">Appendix 4—figure 1</xref> that a non-negligible fraction of the phenotypic variance remains unexplained, even after carefully accounting for measurement error and tagged genetic variation. As discussed above, undetected epistatic interactions (either pairwise or higher-order) between tagged variants are not expected to contribute appreciably (even if such interactions are strong, numerous, and meaningful). Here we discuss several experimental complications that may plausibly contribute, at least in part, to the remaining unexplained variance.</p><p>Most notably, there are sources of genetic variation that are not captured by our set of tagging SNPs. Copy number of ribosomal DNA (rDNA) is known to vary stochastically and has significant impacts on fitness (<xref ref-type="bibr" rid="bib70">Kwan et al., 2016</xref>). Regions of the genome with large inversions or translocations ( &gt; 1 kb) are observed in the RM strain as compared to BY (see Appendix 1), but they are specifically excluded from our SNP panel, due to mapping complications. If such regions contribute to differences in fitness, their effects would be largely not captured in our models. In addition, heritable variation in the mitochondrial genome sequence and 2 micron plasmid is not captured.</p><p>Novel mutations will also be acquired at some rate during the course of strain production (carried out over approximately 70 generations of growth) or during the bulk fitness assays (an additional 55 generations). Mutations that occur in the bulk fitness assays are not expected to rise to high frequency within their barcode lineage during the timescale of the assay, so their effects are likely to be averaged out. However, mutations that appear during strain production (especially barcode transformation, meiosis, and growth before single-cell sorting) can substantially alter the fitness of a barcoded lineage. The effect of such mutations on QTL inference will be small, but they introduce errors in the phenotypes of specific strains that will tend to reduce the estimate of variance explained. As an upper bound, we might imagine that every barcode receives a mutation with effects distributed normally with a standard deviation of 1% in the assay environment (a similar or larger scale to the effects we observe in the cross). In, for example, YPD at 30 °C, we would then attribute ∼7.5% of the total phenotypic variance to the effect of new mutations. Thus, if the fitness effects of new mutations in our assay environments are substantial, novel mutations can contribute a non-negligible fraction of variance.</p><p>In addition, epigenetic effects may play some role, specifically due to prions as well as copy numbers of mitochondria and the 2 micron plasmid (<xref ref-type="bibr" rid="bib56">Hays et al., 2020</xref>; <xref ref-type="bibr" rid="bib76">MacAlpine et al., 2000</xref>; <xref ref-type="bibr" rid="bib112">True and Lindquist, 2000</xref>). Such effects are outside the scope of the current study.</p></sec></sec></app></app-group></back><sub-article article-type="editor-report" id="sa0"><front-stub><article-id pub-id-type="doi">10.7554/eLife.73983.sa0</article-id><title-group><article-title>Editor's evaluation</article-title></title-group><contrib-group><contrib contrib-type="author"><name><surname>Verstrepen</surname><given-names>Kevin J</given-names></name><role specific-use="editor">Reviewing Editor</role><aff><institution-wrap><institution-id institution-id-type="ror">https://ror.org/02bpp8r91</institution-id><institution>VIB-KU Leuven Center for Microbiology</institution></institution-wrap><country>Belgium</country></aff></contrib></contrib-group></front-stub><body><p>This impressive study not only expands the identification of small-effect QTL, but also reveals epistatic interactions at an unprecedented scale. The approach takes advantage of DNA barcodes to increase the scale of genetic mapping studies in yeast by an order of magnitude over previous studies, yielding a more complete and precise view of the QTL landscape and confirming widespread epistatic interactions between the different QTL.</p></body></sub-article><sub-article article-type="decision-letter" id="sa1"><front-stub><article-id pub-id-type="doi">10.7554/eLife.73983.sa1</article-id><title-group><article-title>Decision letter</article-title></title-group><contrib-group content-type="section"><contrib contrib-type="editor"><name><surname>Verstrepen</surname><given-names>Kevin J</given-names></name><role>Reviewing Editor</role><aff><institution-wrap><institution-id institution-id-type="ror">https://ror.org/02bpp8r91</institution-id><institution>VIB-KU Leuven Center for Microbiology</institution></institution-wrap><country>Belgium</country></aff></contrib></contrib-group><contrib-group><contrib contrib-type="reviewer"><name><surname>Verstrepen</surname><given-names>Kevin J</given-names></name><role>Reviewer</role><aff><institution-wrap><institution-id institution-id-type="ror">https://ror.org/02bpp8r91</institution-id><institution>VIB-KU Leuven Center for Microbiology</institution></institution-wrap><country>Belgium</country></aff></contrib></contrib-group></front-stub><body><boxed-text id="box1"><p>In the interests of transparency, eLife publishes the most substantive revision requests and the accompanying author responses.</p></boxed-text><p><bold>Decision letter after peer review:</bold></p><p>Thank you for submitting your article &quot;Barcoded Bulk QTL mapping reveals highly polygenic and epistatic architecture of complex traits in yeast&quot; for consideration by <italic>eLife</italic>. Your article has been reviewed by 2 peer reviewers, including Kevin J Verstrepen as Reviewing Editor and Reviewer #1, and the evaluation has been overseen by Patricia Wittkopp as the Senior Editor.</p><p>The reviewers have discussed their reviews with one another, and the Reviewing Editor has drafted this to help you prepare a revised submission.</p><p>Essential Revisions:</p><p>1. Try to further expand the analysis of genetic interactions</p><p>2. Simulate a wider range of genetic architectures, including highly polygenic ones</p><p>3. Discuss the limitations of the lasso model in the discussion.</p><p>4. help readers interpret the model similiarity score.</p><p>5. Provide a more detailed rationale for the setup and interpretation of the validation experiments</p><p>6. Describe the fine-mapping methodology in more detail.</p><p>7. Discuss the impact of the limitations of the HMM model near recombination breakpoints.</p><p>8. Cite (PMID: 29487138)</p><p><italic>Reviewer #1:</italic></p><p>Nguyen Ba and coworkers report the development of a clever novel approach for QTL mapping in budding yeast, dubbed &quot;BB-QTL&quot;. In brief, they use batches of barcoded yeasts to generated very large barcoded F1 libraries (100,000 cells), followed by a Bar-Seq approach to map the fitness of these individuals and a clever low-coverage whole-genome sequencing coupled to background knowledge of the parental sequences to map their respective genotypes. A custom analysis pipeline then allowed predicting QTLs as well as possible epistatic interactions for a set of 18 phenotypes.</p><p>The novel technology expands the precision and power of more traditional approaches. The results mainly confirm previous findings. <italic>S. cerevisiae</italic> phenotypes are typically influenced by many different QTLs of different nature, including coding and noncoding variation; with coding and rare variants often having a larger effect. Moreover, several QTLs located in a set of specific genes like MKT1 and IRA2, were confirmed to influence multiple phenotypes (pleiotropy). Apart from confirming previous findings, the increased power of BB-QTL does offer the advantage of having lower error rates and higher power to detect specific mutations as drivers of a QTL, including some with only small effect sizes. Together, this yields a more complete and precise view of the QTL landscape and, most importantly, confirms widespread epistatic interactions between the different QTLs. Moreover, now that the barcoded pools have been developed, it becomes relatively easy to test these in other conditions. On the other hand, the power to detect many novel (industrially-relevant) QTLs is likely limited by the inclusion of only two parental strains, one being the lab strain BY4741.</p><p>Overall, this is an impressive and interesting piece of work that not only expands the identification of small-effect QTL, but also reveals epistatic interactions at an unprecedented scale.</p><p>Still, much of the general biological conclusions are perhaps not completely novel, and I wonder whether more can be done here, to further lift the biological insight that we might gain from this unique dataset?</p><p>Specifically, I wonder whether it would also make sense to try and detect epistatic interactions in several different ways (eg simply looking at the effect of pairs of variants)? Do you find particularly strong examples of epistasis (eg complete inter-dependency of 2 mutations, or complete suppression)? Can you look for higher-order epistasis? Also, can you investigate in more detail whether epistasis partly explain the discrepancy between a given QTL's predicted effect size, and the real effect size when it is tested experimentally? Lastly, do you find evidence of selection?</p><p>One major hurdle of using QTL data to obtain improved industrial yeasts is that a QTL often seems to work in a specific background, or at least has vastly smaller effects. Similarly, in eQTL studies, it has been found that promoters often harbor several variations that together result in a limited effect on expression, likely because some (secondary) mutations were selected as suppressors of an earlier (primary) mutation. On the other hand, if a phenotype is under strong positive selection, one would expect that this compensation is absent. I wonder whether similar observations can be made in this study? For example, if one compares the fitness of the two parental strains in the different conditions, does one see systematically many more &quot;positive&quot; drivers in the strain with the higher fitness? Or are many &quot;positive&quot; QTL linked to the inferior parent? And what about the predicted epistatic interactions – do you seem more &quot;compensatory&quot; (negative) interactions within one genome compared to between genomes? Do you see evidence that such interacting mutations are genetically linked to (ie located in the same region)? You now validated QTL in the BY background – would their effect be different in the RM background?</p><p><italic>Reviewer #2:</italic></p><p>Ngyuyen Ba et al., investigated the genetic architecture of complex traits in yeast using a novel bulk QTL mapping approach. Their approach takes advantage of genetic tools to increase the scale of genetic mapping studies in yeast by an order of magnitude over previous studies. Briefly, their approach works by integrating unique sequenceable barcodes into the progeny of a yeast cross. These progeny were then whole genome sequenced, and bulk liquid phenotyping was carried out using the barcodes as an amplicon-based read-out of relative fitness. The authors used their approach to study the genetic architecture of several traits in ~100,000 progeny from the well-studied cross between the strains RM and BY, revealing in greater detail the polygenic, pleiotropic, and epistatic architecture of complex traits in yeast. The authors developed a new cross-validated stepwise forward search methodology to identify QTL and used simulations to show that if a trait is sufficiently polygenic, a study at the scale they perform is not sufficiently powered to accurately identify all the QTL. In the final section of the paper, the authors engineered 6 individual SNPs and 9 pairs of RM SNPs on the BY background, and measured their effects in 11 of the 18 conditions used for QTL discovery. These results highlighted the difficulty of precisely identifying the causal variants using this study design.</p><p>The conclusions in this paper are well supported by the data and analyses presented, but some aspects of the statistical mapping procedure and validation experiments deserve further attention.</p><p>In their supplementary section A.3-1.5 the authors perform QTL simulations to assess the performance of their analysis methods. Of particular interest is the performance of their cross-validated stepwise forward search methodology, which was used to identify all the QTL. However, a major limitation of their simulations was their choice of genetic architectures. In their simulations, all variants have a mean effect of 1% and a random sign. They also simulated 15, 50, or 150 QTL, which spans a range of sparse architectures, but not highly polygenic ones. It was unclear how the results would change as a function of different trait heritability. The simulations should explore a wider range of genetic architectures, with effect sizes sampled from normal or exponential distributions, as is more commonly done in the field.</p><p>In this simulation section, the authors show that the lasso model overestimates the number of causal variants by a factor of 2-10, and that the model underestimates the number of QTL except in the case of a very sparse genetic architecture of 15 QTL and heritability &gt; 0.8. This indicates that the experimental study is underpowered if there are &gt;50 causal variants, and that the detected QTL do not necessarily correspond to real underlying genetic effects, as revealed by the model similarity scores shown in A3-4. This limitation should be factored into the discussion of the ability of the study to break up “composite” QTL, and more generally, detect QTL of small effect.</p><p>In section A3-2.3, the authors develop a model similarity score presented in A3-4 for the simulations. The measure is similar to R^2 in that it ranges from 0 to 1, but beyond that it is not clear how to interpret what constitutes a “good” score. The authors should provide some guidance on interpreting this novel metric. It might also be helpful to see the causal and lead QTLs SNPs compared directly on chromosome plots.</p><p>The authors performed validation experiments for 6 individual SNPs and 9 pairs of RM SNPs engineered onto the BY background. It was promising that the experiments showed a positive correlation between the predicted and measured fitness effects; however, the authors did not perform power calculations, which makes it hard to evaluate the success of each individual experiment. The main text also does not make clear why these SNPS were chosen over others-was this done according to their effect sizes, or was other prior information incorporated in the choice to validate these particular variants? The authors chose to focus mostly on epistatic interactions in the validation experiments, but given their limited power to detect such interactions, it would probably be more informative to perform validation for a larger number of individual SNPs in order to test the ability of the study to detect causal variants across a range of effect sizes. The authors should perform some power calculations for their validation experiments, and describe in detail the process they employed to select these particular SNPs for validation.</p><p>In section A3-1.4, the authors describe their fine-mapping methodology, but as presented is difficult to understand. Was the fine-mapping performed using a model that includes all the other QTL effects, or was the range of the credible set only constrained to fall between the lead SNPs of the nearest QTL or the ends of the chromosome, whichever is closest to the QTL under investigation? The methodology presented on its face looks similar to the approximate Bayes credible interval described in Manichaikul et al., (PMID: 16783000). The authors should cite the relevant literature, and expand this section so that it is easier to understand exactly what was done.</p><p>The text explicitly describes an issue with the HMM employed for genotyping: &quot;we find that the genotyping is accurate, with detectable error only very near recombination breakpoints&quot;. The genotypes near recombination breakpoints are precisely what is used to localize and fine-map QTL, and it is therefore important to discuss in the text whether the authors think this source of error impacts their results.</p><p>The use of a count-based HMM to infer genotypes has been previously described in the literature (PMID: 29487138), and this should be included in the references.</p></body></sub-article><sub-article article-type="reply" id="sa2"><front-stub><article-id pub-id-type="doi">10.7554/eLife.73983.sa2</article-id><title-group><article-title>Author response</article-title></title-group></front-stub><body><disp-quote content-type="editor-comment"><p>Essential revisions:</p><p>1. Try to further expand the analysis of genetic interactions</p><p>2. Simulate a wider range of genetic architectures, including highly polygenic ones</p><p>3. Discuss the limitations of the lasso model in the discussion.</p><p>4. help readers interpret the model similiarity score.</p><p>5. Provide a more detailed rationale for the setup and interpretation of the validation experiments</p><p>6. Describe the fine-mapping methodology in more detail.</p><p>7. Discuss the impact of the limitations of the HMM model near recombination breakpoints.</p><p>8. (Cite PMID: 29487138)</p></disp-quote><p>We have revised the manuscript to address all eight of these points, as explained in more detail in our responses to the individual reports of the reviewers below.</p><disp-quote content-type="editor-comment"><p>Reviewer #1:</p><p>[…]</p><p>Overall, this is an impressive and interesting piece of work that not only expands the identification of small-effect QTL, but also reveals epistatic interactions at an unprecedented scale.</p><p>Still, much of the general biological conclusions are perhaps not completely novel, and I wonder whether more can be done here, to further lift the biological insight that we might gain from this unique dataset?</p><p>Specifically, I wonder whether it would also make sense to try and detect epistatic interactions in several different ways (eg simply looking at the effect of pairs of variants)? Do you find particularly strong examples of epistasis (eg complete inter-dependency of 2 mutations, or complete suppression)? Can you look for higher-order epistasis? Also, can you investigate in more detail whether epistasis partly explain the discrepancy between a given QTL's predicted effect size, and the real effect size when it is tested experimentally? Lastly, do you find evidence of selection?</p></disp-quote><p>We appreciate the reviewer’s overall positive reaction, and we have conducted further analyses as suggested, as follows:</p><p>(a) To detect epistatic interactions in different ways, we explored the possibility of simply looking at the effects of pairs of variants, as the reviewer suggested. Specifically, we have added a figure supplement (Figure 4, Supp. 4) presenting an example of a two-site regression approach to estimate interaction coefficients. This is analogous to identifying additive effects by looking at LOD scores for individual variants (i.e. to the t-test shown in Figure 2), and we expect it to be much less conservative than our forward search approach (for essentially the same reasons). Consistent with this, we observe that neighboring QTL often show correlated signals of epistatic interaction, presumably due to linkage, as seen in other studies (e.g. Figure 4 in Mackay 2014 Nat Rev Genet is a very similar plot). However, the results are broadly consistent with our forward search (indeed, our forward search procedure often selects a single effect in these high LOD neighborhoods, compare Figure 4, Supp. 4B, C). Overall, the regression coefficients agree in sign and magnitude with those from the forward search, although there are a few examples where the sign of an interaction is flipped and there are disagreements among small-effect sizes (Figure 4, supp. 4D).</p><p>(b) We do observe some particularly strong examples of epistasis, including full suppression and sign-flipping. However, these cases are relatively rare, and overall we find that epistatic effects tend to shift additive predictions (as inferred in the epistatic model) by a modest amount. We have added a new figure supplement (Figure 4, Supp. 5A) to present these overall trends and to highlight the strong examples.</p><p>(c) Regarding higher-order epistasis, this is a very interesting topic but unfortunately we have not been able to systematically investigate specific higher-order interactions, both because it is not clear how to algorithmically do it within reasonable computational time, and because power is limited even in our very large sample size due to the exponential explosion of potential interactions. We do comment briefly on the potential impact of higher-order effects based on our machine-learning analysis.</p><p>(d) We do find that epistasis partly explains the discrepancy between QTL predicted effect sizes and the observed effect sizes when tested experimentally (Figure 5A; note that red points do get closer to the diagonal and the difference between prediction and observed becomes smaller in the epistatic model, with details for individual mutations all included in Figure 5, Source Data 1). We have also broken this down into the predictions for single and double mutations in Figure 5 Supp. 2. These are all imperfect tests (e.g. the “true” observed effect sizes measured experimentally in the BY background could be biased by unaccounted effects of higher-order epistasis), but we believe that this is the best way to assess this question given the inherent limitations of this type of study.</p><p>(e) We carried out three statistical tests for directional selection, finding only weak evidence for selection on assayed traits (Appendix 3, section 1.7). Nonetheless, the presence of strong highly pleiotropic QTL favoring either BY or RM does suggest strong selection in their evolutionary history (which is not in itself very surprising). We have added a reference to this analysis in the polygenicity section of the main text. In addition, we have added an analysis of biases in effect sizes and epistatic interactions that could reflect selection, as described in response to the specific suggestions of the reviewer below (see response to next comments).</p><disp-quote content-type="editor-comment"><p>One major hurdle of using QTL data to obtain improved industrial yeasts is that a QTL often seems to work in a specific background, or at least has vastly smaller effects. Similarly, in eQTL studies, it has been found that promoters often harbor several variations that together result in a limited effect on expression, likely because some (secondary) mutations were selected as suppressors of an earlier (primary) mutation. On the other hand, if a phenotype is under strong positive selection, one would expect that this compensation is absent. I wonder whether similar observations can be made in this study? For example, if one compares the fitness of the two parental strains in the different conditions, does one see systematically many more &quot;positive&quot; drivers in the strain with the higher fitness? Or are many &quot;positive&quot; QTL linked to the inferior parent? And what about the predicted epistatic interactions – do you seem more &quot;compensatory&quot; (negative) interactions within one genome compared to between genomes? Do you see evidence that such interacting mutations are genetically linked to (ie located in the same region)? You now validated QTL in the BY background – would their effect be different in the RM background?</p></disp-quote><p>These are interesting questions, and we have added a number of additional analyses along these lines:</p><p>(a) We find that there is only a small enrichment in the number of “positive” drivers in the strain with higher fitness (so there are indeed many “positive” QTL linked to the inferior parent). In addition, in most conditions the positive drivers in the strain with higher fitness tend to have slightly larger effect sizes than the positive QTL linked to the inferior parent, but this effect is also modest. We have added a discussion of this point in the main text, and have added a new Figure 3 Supp. 2 presenting these results.</p><p>(b) For almost all of our 18 phenotypes, we do find a slight excess of “compensatory” interactions that favor combinations of alleles within one genome compared to between genomes, though this is a small effect. We have added a mention of this point in the main text, and have also added a new Figure 4 Supp. 5B,C presenting these results.</p><p>(c) To investigate whether interactions tend to be genetically linked, we compared the fraction of intra-chromosomal interactions among pairs of QTL selected by our epistatic inference as compared to those not selected by it. We find that indeed there is an enrichment of intra-chromosomal interactions (from 7% to 9%; p &lt; 1e-6). This test is confounded by the observation that QTL are not uniformly distributed in the genome, and that large effect QTL tend to have epistatic interactions with each other. Nonetheless, the pattern remains statistically significant even after the removal of any one chromosome. We have added a mention of this point in the Epistasis Results section in the main text.</p><p>(d) It is likely that the effects of reconstructed QTL would be different in the RM background (after all, our model only captures ~60% of the variance explained). However, this is impractical to test directly, and we have no reason to expect dramatically reduced predictive performance on the RM background.</p><disp-quote content-type="editor-comment"><p>Reviewer #2:</p><p>Ngyuyen Ba et al., investigated the genetic architecture of complex traits in yeast using a novel bulk QTL mapping approach. Their approach takes advantage of genetic tools to increase the scale of genetic mapping studies in yeast by an order of magnitude over previous studies. Briefly, their approach works by integrating unique sequenceable barcodes into the progeny of a yeast cross. These progeny were then whole genome sequenced, and bulk liquid phenotyping was carried out using the barcodes as an amplicon-based read-out of relative fitness. The authors used their approach to study the genetic architecture of several traits in ~100,000 progeny from the well-studied cross between the strains RM and BY, revealing in greater detail the polygenic, pleiotropic, and epistatic architecture of complex traits in yeast. The authors developed a new cross-validated stepwise forward search methodology to identify QTL and used simulations to show that if a trait is sufficiently polygenic, a study at the scale they perform is not sufficiently powered to accurately identify all the QTL. In the final section of the paper, the authors engineered 6 individual SNPs and 9 pairs of RM SNPs on the BY background, and measured their effects in 11 of the 18 conditions used for QTL discovery. These results highlighted the difficulty of precisely identifying the causal variants using this study design.</p><p>The conclusions in this paper are well supported by the data and analyses presented, but some aspects of the statistical mapping procedure and validation experiments deserve further attention.</p><p>In their supplementary section A.3-1.5 the authors perform QTL simulations to assess the performance of their analysis methods. Of particular interest is the performance of their cross-validated stepwise forward search methodology, which was used to identify all the QTL. However, a major limitation of their simulations was their choice of genetic architectures. In their simulations, all variants have a mean effect of 1% and a random sign. They also simulated 15, 50, or 150 QTL, which spans a range of sparse architectures, but not highly polygenic ones. It was unclear how the results would change as a function of different trait heritability. The simulations should explore a wider range of genetic architectures, with effect sizes sampled from normal or exponential distributions, as is more commonly done in the field.</p></disp-quote><p>As suggested, we have expanded the range of simulations we explore in the revised manuscript. We note that the original simulations discussed in the manuscript involve exponentially distributed effect sizes (with a mean of 1% and random sign) at multiple different heritability values. These are described in Figures A3-4 and A3-5. We also simulated epistatic terms (Figure A3-3.3). In the revision, we have broadened the simulations to add more ‘highly polygenic’ architectures (1000 QTL). We find that the algorithm still performs well, though worse than when 150 QTL are simulated. The forward search behaves in a fairly intuitive way: QTLs get added when the contribution of a true QTL to the explained phenotypic variance overcomes the model bias and variance. QTLs are only missed if their effect size is too low to contribute significantly to phenotypic variance, or if they are in strong linkage and thus their independent discovery barely increases the variance explained (which is all finally controlled by the trait heritability). At much higher polygenicity, composite QTL can be detected as a single QTL when their sum contribute to phenotypic variance, and get broken up if and only if independent sums also contribute significantly to phenotypic variance. Of course, there are many ways to break up composite QTL, but the algorithm proceeds in a greedy fashion focusing on unexplained variance. We have also explored cases with multiple QTL of the same effect, and with different mean effects or different number of epistatic terms, but we found these results were largely redundant. To summarize these conclusions, we have added the following discussion at the end of the Results section:</p><p>“The behavior of this approach is simple and intuitive: the algorithm greedily adds QTL if their expected contribution to the total phenotypic variance exceeds the bias and increasing variance of the forward search procedure, which is greatly reduced at large sample size. Thus, it may fail to identify very small effect size variants and may fail to break up composite QTL in extremely strong linkage.”</p><p>We have also added additional clarification in the Appendix:</p><p>“These results allow us to gain some intuition for how our cross-validated forward search operates. The algorithm greedily adds QTL to the model until their inclusion to the model (and thus, explained phenotypic variance) no longer exceeds the model bias (squared) and variance. Both these increase the expected error but are greatly reduced at large sample size (but are increased at low heritability values), and the forward search can therefore identify more QTL as sample size increases. However, while our panel of spores is very large, it remains underpowered in several cases: (1) when QTL have very low effect size, therefore not contributing significantly to the phenotypic variance, and (2) when composite QTL are in strong linkage and few spores have recombination between the QTL, then the individual identification of QTL only contributes marginally to the explained variance and the forward search may also miss them.”</p><disp-quote content-type="editor-comment"><p>In this simulation section, the authors show that the lasso model overestimates the number of causal variants by a factor of 2-10, and that the model underestimates the number of QTL except in the case of a very sparse genetic architecture of 15 QTL and heritability &gt; 0.8. This indicates that the experimental study is underpowered if there are &gt;50 causal variants, and that the detected QTL do not necessarily correspond to real underlying genetic effects, as revealed by the model similarity scores shown in A3-4. This limitation should be factored into the discussion of the ability of the study to break up &quot;composite&quot; QTL, and more generally, detect QTL of small effect.</p></disp-quote><p>We agree with some aspects of this comment, but the details are a bit subtle. First, we note that the definition of underpowered depends on the specifics of the QTL assumed in the simulation. In addition, many of the simulations were performed at 10,000 segregants, not at 100,000, with no effort to enforce a minimum effect size, or minimum distance between QTL. For example, if 100 QTL are all evenly spaced (in recombination space) and all have the same effect such that they all contribute the same to the phenotypic variance, then the algorithm is in principle maximally powered to detect these. This is why our algorithm is capable of finding &gt;100 QTL per environment. On the other hand, just 2 QTL in complete linkage cannot be distinguished and no panel size will be able to detect these.</p><p>However, we do agree with the general need to discuss the limitations in more detail and have clarified these concerns in the ‘Polygenicity’ result section. We have also reiterated the limitations of the LASSO approach within the simulation section. The motivation for an L0 normalization in this data was first discussed in the section A3-1.3:</p><p>“Unfortunately, a harsh condition for model consistency is the lack of strong collinearity between true and spurious predictors (Zhao and Yu, 2006). This is always violated in QTL mapping studies if recombination frequencies between nearby SNPs are low. In these cases, the LASSO will almost always choose multiple correlated predictors and distribute the true QTL effect amongst them.”</p><disp-quote content-type="editor-comment"><p>In section A3-2.3, the authors develop a model similarity score presented in A3-4 for the simulations. The measure is similar to R^2 in that it ranges from 0 to 1, but beyond that it is not clear how to interpret what constitutes a &quot;good&quot; score. The authors should provide some guidance on interpreting this novel metric. It might also be helpful to see the causal and lead QTLs SNPs compared directly on chromosome plots.</p></disp-quote><p>We agree that this was unclear, and have added additional discussion in the main text describing how to interpret the model similarity score. Essentially, the score is a Pearson’s correlation coefficient on the model coefficient (as defined in section A3-2.3, after equation A3-28). However, given a single QTL that spans two SNPs in close linkage, a pure Pearson’s correlation coefficient would have high variance, as subtle noise in the data could lead to one SNP being called the lead SNP vs the other, and two models that call the same QTL might have either 100% correlation, or 0% correlation. Instead, our model similarity score ‘aligns’ these predicted QTL before obtaining the correlation coefficient. The degree at which QTL are aligned are based on penalties with respect to collinearity (or linkage) between the SNPs, and the maximum possible score is obtained by dynamic programming. Similar to sequence alignments between two completely unrelated sequences, a score of 0 is unlikely to occur on sufficiently large models as at least a few QTL can usually be paired (erroneously). We have also added a mention in the main text referring to Figures A3-3, A3-7, A3-8, A3-9, which show the causal and lead QTL SNP directly on the chromosome plots.</p><disp-quote content-type="editor-comment"><p>The authors performed validation experiments for 6 individual SNPs and 9 pairs of RM SNPs engineered onto the BY background. It was promising that the experiments showed a positive correlation between the predicted and measured fitness effects; however, the authors did not perform power calculations, which makes it hard to evaluate the success of each individual experiment. The main text also does not make clear why these SNPS were chosen over others-was this done according to their effect sizes, or was other prior information incorporated in the choice to validate these particular variants? The authors chose to focus mostly on epistatic interactions in the validation experiments, but given their limited power to detect such interactions, it would probably be more informative to perform validation for a larger number of individual SNPs in order to test the ability of the study to detect causal variants across a range of effect sizes. The authors should perform some power calculations for their validation experiments, and describe in detail the process they employed to select these particular SNPs for validation.</p></disp-quote><p>We agree with the thrust of the comment, but some of the suggestions are impossible to implement because of practical constraints on the experimental methods (and to a lesser extent on the model inference). First, we chose the SNPs to reconstruct based on three main factors: (a) to ensure that we are validating the right locus, the model must have a confident prediction that specific SNP is causal, (b) the predicted effect must be large enough in at least one environment that we would expect to reliably measure it given the detection limits of our experimental fitness measurements, and (c) the SNP must be in a location that is amenable to CRISPR-Cas9 or Delitto Perfetto reconstruction. In practice, this means that it is impossible to validate SNPs across a wide range of effect sizes, as smaller-effect SNPs have wider confidence intervals around the lead SNP (violating condition a) and have effects that are harder to measure experimentally (violating condition b). In addition, because the cloning constraints mentioned in (c) require experimental testing for each SNP we analyze, it is much easier to construct combinations of a smaller set of SNPs than a larger set of individual SNPs. Together, these considerations motivated our choice of specific SNPs and of the overall structure of the validation experiments (6 individual and 9 pairs, rather than a broader set of individual SNPs).</p><p>In the revised manuscript, we have added a more detailed discussion of these motivations for selecting particular SNPs for validation, and mention the inherent limitations imposed by the practical constraints involved. We have also added a description of the power and resolution of the experimental fitness measurements of the reconstructed genotypes (we can detect approximately ~0.5% fitness differences in most conditions). We are unsure if there are any other types of power calculations the reviewer is referring to, but we are only attempting to note an overall positive correlation between predicted and measured effects, not making any claims about the success of any individual validation (these can fail for a variety of reasons including experimental artifacts with reconstructions, model errors in identifying the correct causal SNP, unresolved higher-order epistasis, and noise in our fitness measurements, among others).</p><disp-quote content-type="editor-comment"><p>In section A3-1.4, the authors describe their fine-mapping methodology, but as presented is difficult to understand. Was the fine-mapping performed using a model that includes all the other QTL effects, or was the range of the credible set only constrained to fall between the lead SNPs of the nearest QTL or the ends of the chromosome, whichever is closest to the QTL under investigation? The methodology presented on its face looks similar to the approximate Bayes credible interval described in Manichaikul et al., (PMID: 16783000). The authors should cite the relevant literature, and expand this section so that it is easier to understand exactly what was done.</p></disp-quote><p>We have attempted to clarify section A3-1.4. As the reviewer correctly points out, the fine mapping for a QTL is performed by scanning an interval between neighboring detected QTL (on either side) and using a model that includes all other QTL. For example, if a detected QTL is a SNP found in a closed interval of 12 SNPs produced by its two neighboring QTL, 10 independent likelihoods are obtained (re-optimizing all effect sizes for each), and a posterior probability is obtained for each of the ten possible positions.</p><p>We have cited the recommended paper, as our approach is indeed based on an approximate Bayes credible interval similar to the one described in that study (using all SNPs instead of markers). We have added the following sentence to the A3-1.4 section at the end of the second paragraph (similar to the analogous paragraph in Manichaikul et al.,):</p><p>“[…] as above by obtaining the maximum likelihood of the data given that a single QTL is found at each possible SNP position between its neighboring QTL and given all detected other QTL (thus obtaining a likelihood profile for the considered positions of the QTL). We then used a uniform prior on the location of the QTL to derive a posterior distribution, from which one can derive an interval that exceeds 0.95.”</p><p>Some typos referring to a ‘confidence’ interval were also changed to ‘credible’ interval.</p><disp-quote content-type="editor-comment"><p>The text explicitly describes an issue with the HMM employed for genotyping: &quot;we find that the genotyping is accurate, with detectable error only very near recombination breakpoints&quot;. The genotypes near recombination breakpoints are precisely what is used to localize and fine-map QTL, and it is therefore important to discuss in the text whether the authors think this source of error impacts their results.</p></disp-quote><p>This is a good point, we have added a reference in the main text to the Appendix section (A1-1.4) that has an extensive discussion and analysis of the effect of recombination breakpoint uncertainties on fine-mapping.</p><disp-quote content-type="editor-comment"><p>The use of a count-based HMM to infer genotypes has been previously described in the literature (PMID: 29487138), and this should be included in the references.</p></disp-quote><p>We now also add this citation to our text on the count-based HMM.</p></body></sub-article></article>